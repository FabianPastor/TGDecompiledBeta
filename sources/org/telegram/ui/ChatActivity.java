package org.telegram.ui;

import android.animation.Animator;
import android.animation.AnimatorListenerAdapter;
import android.animation.AnimatorSet;
import android.animation.ObjectAnimator;
import android.animation.ValueAnimator;
import android.annotation.TargetApi;
import android.app.Activity;
import android.app.DatePickerDialog;
import android.app.Dialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.res.Configuration;
import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.graphics.Outline;
import android.graphics.Paint;
import android.graphics.Path;
import android.graphics.PorterDuff;
import android.graphics.PorterDuffXfermode;
import android.graphics.RectF;
import android.graphics.Typeface;
import android.graphics.drawable.BitmapDrawable;
import android.graphics.drawable.Drawable;
import android.net.Uri;
import android.os.Build;
import android.os.Bundle;
import android.os.SystemClock;
import android.text.Layout;
import android.text.Spannable;
import android.text.SpannableString;
import android.text.SpannableStringBuilder;
import android.text.StaticLayout;
import android.text.TextPaint;
import android.text.TextUtils;
import android.text.style.CharacterStyle;
import android.text.style.ForegroundColorSpan;
import android.text.style.URLSpan;
import android.util.LongSparseArray;
import android.util.Property;
import android.util.SparseArray;
import android.view.KeyEvent;
import android.view.Menu;
import android.view.MotionEvent;
import android.view.TextureView;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewOutlineProvider;
import android.view.ViewTreeObserver;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.Toast;
import androidx.core.content.FileProvider;
import androidx.core.graphics.ColorUtils;
import androidx.core.view.inputmethod.InputContentInfoCompat;
import androidx.recyclerview.widget.ChatListItemAnimator;
import androidx.recyclerview.widget.GridLayoutManagerFixed;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;
import com.google.android.exoplayer2.ui.AspectRatioFrameLayout;
import j$.util.Comparator;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collections;
import java.util.HashMap;
import java.util.Iterator;
import java.util.concurrent.CountDownLatch;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import org.telegram.PhoneFormat.PhoneFormat;
import org.telegram.messenger.AccountInstance;
import org.telegram.messenger.AndroidUtilities;
import org.telegram.messenger.ApplicationLoader;
import org.telegram.messenger.BuildVars;
import org.telegram.messenger.ChatObject;
import org.telegram.messenger.ContactsController;
import org.telegram.messenger.Emoji;
import org.telegram.messenger.EmojiData;
import org.telegram.messenger.FileLoader;
import org.telegram.messenger.FileLog;
import org.telegram.messenger.ImageLocation;
import org.telegram.messenger.ImageReceiver;
import org.telegram.messenger.LocaleController;
import org.telegram.messenger.MediaController;
import org.telegram.messenger.MediaDataController;
import org.telegram.messenger.MessageObject;
import org.telegram.messenger.MessagesController;
import org.telegram.messenger.MessagesStorage;
import org.telegram.messenger.NotificationCenter;
import org.telegram.messenger.SendMessagesHelper;
import org.telegram.messenger.SharedConfig;
import org.telegram.messenger.UserObject;
import org.telegram.messenger.Utilities;
import org.telegram.messenger.VideoEditedInfo;
import org.telegram.messenger.browser.Browser;
import org.telegram.tgnet.ConnectionsManager;
import org.telegram.tgnet.QuickAckDelegate;
import org.telegram.tgnet.RequestDelegate;
import org.telegram.tgnet.TLObject;
import org.telegram.tgnet.TLRPC$BotInfo;
import org.telegram.tgnet.TLRPC$BotInlineResult;
import org.telegram.tgnet.TLRPC$Chat;
import org.telegram.tgnet.TLRPC$ChatFull;
import org.telegram.tgnet.TLRPC$ChatInvite;
import org.telegram.tgnet.TLRPC$ChatParticipant;
import org.telegram.tgnet.TLRPC$ChatParticipants;
import org.telegram.tgnet.TLRPC$Dialog;
import org.telegram.tgnet.TLRPC$Document;
import org.telegram.tgnet.TLRPC$EncryptedChat;
import org.telegram.tgnet.TLRPC$FileLocation;
import org.telegram.tgnet.TLRPC$InputChannel;
import org.telegram.tgnet.TLRPC$InputDocument;
import org.telegram.tgnet.TLRPC$InputPeer;
import org.telegram.tgnet.TLRPC$InputStickerSet;
import org.telegram.tgnet.TLRPC$Message;
import org.telegram.tgnet.TLRPC$MessageAction;
import org.telegram.tgnet.TLRPC$MessageEntity;
import org.telegram.tgnet.TLRPC$MessageFwdHeader;
import org.telegram.tgnet.TLRPC$MessageMedia;
import org.telegram.tgnet.TLRPC$Peer;
import org.telegram.tgnet.TLRPC$PhotoSize;
import org.telegram.tgnet.TLRPC$Poll;
import org.telegram.tgnet.TLRPC$PollResults;
import org.telegram.tgnet.TLRPC$ReplyMarkup;
import org.telegram.tgnet.TLRPC$TL_botCommand;
import org.telegram.tgnet.TLRPC$TL_botInlineMessageMediaAuto;
import org.telegram.tgnet.TLRPC$TL_botInlineMessageMediaInvoice;
import org.telegram.tgnet.TLRPC$TL_channelForbidden;
import org.telegram.tgnet.TLRPC$TL_chatBannedRights;
import org.telegram.tgnet.TLRPC$TL_contacts_acceptContact;
import org.telegram.tgnet.TLRPC$TL_document;
import org.telegram.tgnet.TLRPC$TL_encryptedChat;
import org.telegram.tgnet.TLRPC$TL_error;
import org.telegram.tgnet.TLRPC$TL_exportedMessageLink;
import org.telegram.tgnet.TLRPC$TL_fileLocationUnavailable;
import org.telegram.tgnet.TLRPC$TL_game;
import org.telegram.tgnet.TLRPC$TL_groupCall;
import org.telegram.tgnet.TLRPC$TL_inlineBotSwitchPM;
import org.telegram.tgnet.TLRPC$TL_inputMediaPoll;
import org.telegram.tgnet.TLRPC$TL_inputStickerSetID;
import org.telegram.tgnet.TLRPC$TL_inputStickerSetShortName;
import org.telegram.tgnet.TLRPC$TL_keyboardButtonSwitchInline;
import org.telegram.tgnet.TLRPC$TL_messageActionGameScore;
import org.telegram.tgnet.TLRPC$TL_messageActionPaymentSent;
import org.telegram.tgnet.TLRPC$TL_messageActionPinMessage;
import org.telegram.tgnet.TLRPC$TL_messageMediaGame;
import org.telegram.tgnet.TLRPC$TL_messageMediaPhoto;
import org.telegram.tgnet.TLRPC$TL_messageMediaPoll;
import org.telegram.tgnet.TLRPC$TL_messageMediaWebPage;
import org.telegram.tgnet.TLRPC$TL_messageReplies;
import org.telegram.tgnet.TLRPC$TL_messages_acceptUrlAuth;
import org.telegram.tgnet.TLRPC$TL_messages_discussionMessage;
import org.telegram.tgnet.TLRPC$TL_messages_editMessage;
import org.telegram.tgnet.TLRPC$TL_messages_getDiscussionMessage;
import org.telegram.tgnet.TLRPC$TL_messages_getMessageEditData;
import org.telegram.tgnet.TLRPC$TL_messages_getReplies;
import org.telegram.tgnet.TLRPC$TL_messages_getWebPagePreview;
import org.telegram.tgnet.TLRPC$TL_messages_requestUrlAuth;
import org.telegram.tgnet.TLRPC$TL_messages_sendScheduledMessages;
import org.telegram.tgnet.TLRPC$TL_payments_bankCardData;
import org.telegram.tgnet.TLRPC$TL_payments_getBankCardData;
import org.telegram.tgnet.TLRPC$TL_payments_paymentReceipt;
import org.telegram.tgnet.TLRPC$TL_peerNotifySettings;
import org.telegram.tgnet.TLRPC$TL_photoSizeEmpty;
import org.telegram.tgnet.TLRPC$TL_poll;
import org.telegram.tgnet.TLRPC$TL_replyKeyboardForceReply;
import org.telegram.tgnet.TLRPC$TL_urlAuthResultAccepted;
import org.telegram.tgnet.TLRPC$TL_urlAuthResultDefault;
import org.telegram.tgnet.TLRPC$TL_urlAuthResultRequest;
import org.telegram.tgnet.TLRPC$TL_webPage;
import org.telegram.tgnet.TLRPC$TL_webPagePending;
import org.telegram.tgnet.TLRPC$Updates;
import org.telegram.tgnet.TLRPC$User;
import org.telegram.tgnet.TLRPC$UserFull;
import org.telegram.tgnet.TLRPC$WebPage;
import org.telegram.tgnet.TLRPC$messages_Messages;
import org.telegram.tgnet.WriteToSocketDelegate;
import org.telegram.ui.ActionBar.ActionBar;
import org.telegram.ui.ActionBar.ActionBarLayout;
import org.telegram.ui.ActionBar.ActionBarMenuItem;
import org.telegram.ui.ActionBar.ActionBarMenuSubItem;
import org.telegram.ui.ActionBar.ActionBarPopupWindow;
import org.telegram.ui.ActionBar.AlertDialog;
import org.telegram.ui.ActionBar.BackDrawable;
import org.telegram.ui.ActionBar.BaseFragment;
import org.telegram.ui.ActionBar.BottomSheet;
import org.telegram.ui.ActionBar.SimpleTextView;
import org.telegram.ui.ActionBar.Theme;
import org.telegram.ui.ActionBar.ThemeDescription;
import org.telegram.ui.Adapters.MentionsAdapter;
import org.telegram.ui.Adapters.MessagesSearchAdapter;
import org.telegram.ui.Adapters.StickersAdapter;
import org.telegram.ui.Cells.BotHelpCell;
import org.telegram.ui.Cells.BotSwitchCell;
import org.telegram.ui.Cells.ChatActionCell;
import org.telegram.ui.Cells.ChatLoadingCell;
import org.telegram.ui.Cells.ChatMessageCell;
import org.telegram.ui.Cells.ChatUnreadCell;
import org.telegram.ui.Cells.CheckBoxCell;
import org.telegram.ui.Cells.ContextLinkCell;
import org.telegram.ui.Cells.DialogCell;
import org.telegram.ui.Cells.MentionCell;
import org.telegram.ui.Cells.StickerCell;
import org.telegram.ui.Cells.TextSelectionHelper;
import org.telegram.ui.ChatActivity;
import org.telegram.ui.ChatActivityEnterTopView;
import org.telegram.ui.Components.AlertsCreator;
import org.telegram.ui.Components.AnimatedFileDrawable;
import org.telegram.ui.Components.BackupImageView;
import org.telegram.ui.Components.Bulletin;
import org.telegram.ui.Components.BulletinFactory;
import org.telegram.ui.Components.ChatActivityEnterView;
import org.telegram.ui.Components.ChatAttachAlert;
import org.telegram.ui.Components.ChatAttachAlertDocumentLayout;
import org.telegram.ui.Components.ChatAttachAlertPhotoLayout;
import org.telegram.ui.Components.ChatAvatarContainer;
import org.telegram.ui.Components.ChatBigEmptyView;
import org.telegram.ui.Components.ChatGreetingsView;
import org.telegram.ui.Components.ChecksHintView;
import org.telegram.ui.Components.ClippingImageView;
import org.telegram.ui.Components.CounterView;
import org.telegram.ui.Components.CubicBezierInterpolator;
import org.telegram.ui.Components.EditTextCaption;
import org.telegram.ui.Components.EmbedBottomSheet;
import org.telegram.ui.Components.EmojiView;
import org.telegram.ui.Components.ExtendedGridLayoutManager;
import org.telegram.ui.Components.FireworksOverlay;
import org.telegram.ui.Components.FragmentContextView;
import org.telegram.ui.Components.GigagroupConvertAlert;
import org.telegram.ui.Components.HintView;
import org.telegram.ui.Components.ImportingAlert;
import org.telegram.ui.Components.InstantCameraView;
import org.telegram.ui.Components.InviteMembersBottomSheet;
import org.telegram.ui.Components.LayoutHelper;
import org.telegram.ui.Components.NumberTextView;
import org.telegram.ui.Components.PhonebookShareAlert;
import org.telegram.ui.Components.PinnedLineView;
import org.telegram.ui.Components.PipRoundVideoView;
import org.telegram.ui.Components.RLottieDrawable;
import org.telegram.ui.Components.RadialProgressView;
import org.telegram.ui.Components.RecyclerAnimationScrollHelper;
import org.telegram.ui.Components.RecyclerListView;
import org.telegram.ui.Components.ReportAlert;
import org.telegram.ui.Components.SearchCounterView;
import org.telegram.ui.Components.SizeNotifierFrameLayout;
import org.telegram.ui.Components.TextStyleSpan;
import org.telegram.ui.Components.TrendingStickersAlert;
import org.telegram.ui.Components.TypefaceSpan;
import org.telegram.ui.Components.URLSpanBotCommand;
import org.telegram.ui.Components.URLSpanMono;
import org.telegram.ui.Components.URLSpanNoUnderline;
import org.telegram.ui.Components.URLSpanReplacement;
import org.telegram.ui.Components.URLSpanUserMention;
import org.telegram.ui.Components.UndoView;
import org.telegram.ui.Components.voip.VoIPHelper;
import org.telegram.ui.ContactAddActivity;
import org.telegram.ui.ContentPreviewViewer;
import org.telegram.ui.DialogsActivity;
import org.telegram.ui.GroupCreateActivity;
import org.telegram.ui.LocationActivity;
import org.telegram.ui.PhotoAlbumPickerActivity;
import org.telegram.ui.PhotoViewer;
import org.telegram.ui.PollCreateActivity;

public class ChatActivity extends BaseFragment implements NotificationCenter.NotificationCenterDelegate, DialogsActivity.DialogsActivityDelegate, LocationActivity.LocationActivityDelegate, ChatAttachAlertDocumentLayout.DocumentSelectActivityDelegate {
    /* access modifiers changed from: private */
    public static final int[] allowedNotificationsDuringChatListAnimations;
    public static Pattern privateMsgUrlPattern;
    public static Pattern publicMsgUrlPattern;
    public static Pattern voiceChatUrlPattern;
    private ArrayList<View> actionModeViews = new ArrayList<>();
    /* access modifiers changed from: private */
    public long activityResumeTime;
    private ActionBarMenuSubItem addContactItem;
    /* access modifiers changed from: private */
    public TextView addToContactsButton;
    private boolean addToContactsButtonArchive;
    private TextView alertNameTextView;
    private TextView alertTextView;
    /* access modifiers changed from: private */
    public FrameLayout alertView;
    /* access modifiers changed from: private */
    public AnimatorSet alertViewAnimator;
    /* access modifiers changed from: private */
    public float alertViewEnterProgress;
    /* access modifiers changed from: private */
    public boolean allowContextBotPanel;
    /* access modifiers changed from: private */
    public boolean allowContextBotPanelSecond = true;
    /* access modifiers changed from: private */
    public boolean allowStickersPanel;
    /* access modifiers changed from: private */
    public HashMap<MessageObject, Boolean> alredyPlayedStickers = new HashMap<>();
    boolean animateTo;
    /* access modifiers changed from: private */
    public HashMap<TLRPC$Document, Integer> animatingDocuments = new HashMap<>();
    /* access modifiers changed from: private */
    public ClippingImageView animatingImageView;
    /* access modifiers changed from: private */
    public ArrayList<MessageObject> animatingMessageObjects = new ArrayList<>();
    /* access modifiers changed from: private */
    public Paint aspectPaint;
    /* access modifiers changed from: private */
    public Path aspectPath;
    /* access modifiers changed from: private */
    public AspectRatioFrameLayout aspectRatioFrameLayout;
    /* access modifiers changed from: private */
    public ActionBarMenuItem attachItem;
    /* access modifiers changed from: private */
    public ChatAvatarContainer avatarContainer;
    private ChatBigEmptyView bigEmptyView;
    /* access modifiers changed from: private */
    public View blurredView;
    private MessageObject botButtons;
    private PhotoViewer.PhotoViewerProvider botContextProvider = new PhotoViewer.EmptyPhotoViewerProvider() {
        /* JADX WARNING: Removed duplicated region for block: B:18:0x007c A[LOOP:0: B:5:0x0026->B:18:0x007c, LOOP_END] */
        /* JADX WARNING: Removed duplicated region for block: B:20:0x0047 A[SYNTHETIC] */
        /* Code decompiled incorrectly, please refer to instructions dump. */
        public org.telegram.ui.PhotoViewer.PlaceProviderObject getPlaceForPhoto(org.telegram.messenger.MessageObject r5, org.telegram.tgnet.TLRPC$FileLocation r6, int r7, boolean r8) {
            /*
                r4 = this;
                r5 = 0
                if (r7 < 0) goto L_0x007f
                org.telegram.ui.ChatActivity r6 = org.telegram.ui.ChatActivity.this
                java.util.ArrayList r6 = r6.botContextResults
                int r6 = r6.size()
                if (r7 < r6) goto L_0x0010
                goto L_0x007f
            L_0x0010:
                org.telegram.ui.ChatActivity r6 = org.telegram.ui.ChatActivity.this
                org.telegram.ui.Components.RecyclerListView r6 = r6.mentionListView
                int r6 = r6.getChildCount()
                org.telegram.ui.ChatActivity r8 = org.telegram.ui.ChatActivity.this
                java.util.ArrayList r8 = r8.botContextResults
                java.lang.Object r7 = r8.get(r7)
                r8 = 0
                r0 = 0
            L_0x0026:
                if (r0 >= r6) goto L_0x007f
                org.telegram.ui.ChatActivity r1 = org.telegram.ui.ChatActivity.this
                org.telegram.ui.Components.RecyclerListView r1 = r1.mentionListView
                android.view.View r1 = r1.getChildAt(r0)
                boolean r2 = r1 instanceof org.telegram.ui.Cells.ContextLinkCell
                if (r2 == 0) goto L_0x0044
                r2 = r1
                org.telegram.ui.Cells.ContextLinkCell r2 = (org.telegram.ui.Cells.ContextLinkCell) r2
                org.telegram.tgnet.TLRPC$BotInlineResult r3 = r2.getResult()
                if (r3 != r7) goto L_0x0044
                org.telegram.messenger.ImageReceiver r2 = r2.getPhotoImage()
                goto L_0x0045
            L_0x0044:
                r2 = r5
            L_0x0045:
                if (r2 == 0) goto L_0x007c
                r5 = 2
                int[] r5 = new int[r5]
                r1.getLocationInWindow(r5)
                org.telegram.ui.PhotoViewer$PlaceProviderObject r6 = new org.telegram.ui.PhotoViewer$PlaceProviderObject
                r6.<init>()
                r7 = r5[r8]
                r6.viewX = r7
                r7 = 1
                r5 = r5[r7]
                int r7 = android.os.Build.VERSION.SDK_INT
                r0 = 21
                if (r7 < r0) goto L_0x0060
                goto L_0x0062
            L_0x0060:
                int r8 = org.telegram.messenger.AndroidUtilities.statusBarHeight
            L_0x0062:
                int r5 = r5 - r8
                r6.viewY = r5
                org.telegram.ui.ChatActivity r5 = org.telegram.ui.ChatActivity.this
                org.telegram.ui.Components.RecyclerListView r5 = r5.mentionListView
                r6.parentView = r5
                r6.imageReceiver = r2
                org.telegram.messenger.ImageReceiver$BitmapHolder r5 = r2.getBitmapSafe()
                r6.thumb = r5
                int[] r5 = r2.getRoundRadius()
                r6.radius = r5
                return r6
            L_0x007c:
                int r0 = r0 + 1
                goto L_0x0026
            L_0x007f:
                return r5
            */
            throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.AnonymousClass4.getPlaceForPhoto(org.telegram.messenger.MessageObject, org.telegram.tgnet.TLRPC$FileLocation, int, boolean):org.telegram.ui.PhotoViewer$PlaceProviderObject");
        }

        public void sendButtonPressed(int i, VideoEditedInfo videoEditedInfo, boolean z, int i2) {
            if (i >= 0 && i < ChatActivity.this.botContextResults.size()) {
                ChatActivity chatActivity = ChatActivity.this;
                chatActivity.lambda$null$28((TLRPC$BotInlineResult) chatActivity.botContextResults.get(i), z, i2);
            }
        }
    };
    /* access modifiers changed from: private */
    public ArrayList<Object> botContextResults;
    /* access modifiers changed from: private */
    public SparseArray<TLRPC$BotInfo> botInfo = new SparseArray<>();
    private MessageObject botReplyButtons;
    private String botUser;
    private int botsCount;
    private FrameLayout bottomMessagesActionContainer;
    /* access modifiers changed from: private */
    public FrameLayout bottomOverlay;
    /* access modifiers changed from: private */
    public AnimatorSet bottomOverlayAnimation;
    /* access modifiers changed from: private */
    public FrameLayout bottomOverlayChat;
    /* access modifiers changed from: private */
    public UnreadCounterTextView bottomOverlayChatText;
    private ImageView bottomOverlayImage;
    /* access modifiers changed from: private */
    public RadialProgressView bottomOverlayProgress;
    private TextView bottomOverlayText;
    /* access modifiers changed from: private */
    public float bottomPanelTranslationY;
    /* access modifiers changed from: private */
    public float bottomPanelTranslationYReverse;
    Bulletin.Delegate bulletinDelegate;
    private boolean[] cacheEndReached = new boolean[2];
    private int canEditMessagesCount;
    private int canForwardMessagesCount;
    private int canSaveDocumentsCount;
    /* access modifiers changed from: private */
    public int canSaveMusicCount;
    /* access modifiers changed from: private */
    public boolean canShowPagedownButton;
    private Runnable cancelFixedPositionRunnable;
    private int cantDeleteMessagesCount;
    private int cantForwardMessagesCount;
    private int cantSaveMessagesCount;
    /* access modifiers changed from: private */
    public ValueAnimator changeBoundAnimator;
    /* access modifiers changed from: private */
    public ChatActivityDelegate chatActivityDelegate;
    private ChatActivityEnterTopView chatActivityEnterTopView;
    protected ChatActivityEnterView chatActivityEnterView;
    /* access modifiers changed from: private */
    public boolean chatActivityEnterViewAnimateBeforeSending;
    /* access modifiers changed from: private */
    public int chatActivityEnterViewAnimateFromTop;
    /* access modifiers changed from: private */
    public ChatActivityAdapter chatAdapter;
    /* access modifiers changed from: private */
    public ChatAttachAlert chatAttachAlert;
    /* access modifiers changed from: private */
    public int chatEmojiViewPadding;
    private long chatEnterTime;
    protected TLRPC$ChatFull chatInfo;
    private TLRPC$ChatInvite chatInvite;
    private Runnable chatInviteRunnable;
    private int chatInviterId;
    /* access modifiers changed from: private */
    public GridLayoutManagerFixed chatLayoutManager;
    private long chatLeaveTime;
    /* access modifiers changed from: private */
    public ChatListItemAnimator chatListItemAnimator;
    /* access modifiers changed from: private */
    public RecyclerListView chatListView;
    /* access modifiers changed from: private */
    public float chatListViewPaddingTop;
    /* access modifiers changed from: private */
    public int chatListViewPaddingVisibleOffset;
    /* access modifiers changed from: private */
    public ArrayList<ChatMessageCell> chatMessageCellsCache = new ArrayList<>();
    /* access modifiers changed from: private */
    public int chatMode;
    /* access modifiers changed from: private */
    public RecyclerAnimationScrollHelper chatScrollHelper;
    private final ChatScrollCallback chatScrollHelperCallback = new ChatScrollCallback();
    private Runnable checkPaddingsRunnable;
    /* access modifiers changed from: private */
    public boolean checkTextureViewPosition;
    private ChecksHintView checksHintView;
    /* access modifiers changed from: private */
    public boolean clearingHistory;
    private Dialog closeChatDialog;
    /* access modifiers changed from: private */
    public ImageView closePinned;
    private ImageView closeReportSpam;
    private int commentLoadingGuid;
    /* access modifiers changed from: private */
    public int commentLoadingMessageId;
    private int commentMessagesLoadingGuid;
    private int commentMessagesRequestId;
    private int commentRequestId;
    /* access modifiers changed from: private */
    public int contentPaddingTop;
    /* access modifiers changed from: private */
    public float contentPanTranslation;
    /* access modifiers changed from: private */
    public SizeNotifierFrameLayout contentView;
    private boolean createGroupCall;
    /* access modifiers changed from: private */
    public int createUnreadMessageAfterId;
    private boolean createUnreadMessageAfterIdLoading;
    protected TLRPC$Chat currentChat;
    protected TLRPC$EncryptedChat currentEncryptedChat;
    private boolean currentFloatingDateOnScreen;
    /* access modifiers changed from: private */
    public boolean currentFloatingTopIsNotMessage;
    private String currentPicturePath;
    /* access modifiers changed from: private */
    public int currentPinnedMessageId;
    /* access modifiers changed from: private */
    public int[] currentPinnedMessageIndex = new int[1];
    protected TLRPC$User currentUser;
    private Runnable delayedReadRunnable;
    /* access modifiers changed from: private */
    public long dialog_id;
    private int distanceToPeer;
    /* access modifiers changed from: private */
    public ChatMessageCell drawLaterRoundProgressCell;
    private ChatMessageCell dummyMessageCell;
    /* access modifiers changed from: private */
    public AnimatorSet editButtonAnimation;
    /* access modifiers changed from: private */
    public int editTextEnd;
    /* access modifiers changed from: private */
    public ActionBarMenuItem editTextItem;
    /* access modifiers changed from: private */
    public int editTextStart;
    /* access modifiers changed from: private */
    public MessageObject editingMessageObject;
    /* access modifiers changed from: private */
    public int editingMessageObjectReqId;
    /* access modifiers changed from: private */
    public View emojiButtonRed;
    private TextView emptyView;
    /* access modifiers changed from: private */
    public FrameLayout emptyViewContainer;
    /* access modifiers changed from: private */
    public boolean[] endReached = new boolean[2];
    /* access modifiers changed from: private */
    public FireworksOverlay fireworksOverlay;
    private boolean first = true;
    /* access modifiers changed from: private */
    public boolean firstLoading = true;
    boolean firstOpen = true;
    private boolean firstUnreadSent = false;
    private int first_unread_id;
    /* access modifiers changed from: private */
    public boolean fixPaddingsInLayout;
    /* access modifiers changed from: private */
    public int fixedKeyboardHeight = -1;
    /* access modifiers changed from: private */
    public AnimatorSet floatingDateAnimation;
    /* access modifiers changed from: private */
    public ChatActionCell floatingDateView;
    private float floatingDateViewOffset;
    private boolean forceHistoryEmpty;
    /* access modifiers changed from: private */
    public int forceNextPinnedMessageId;
    /* access modifiers changed from: private */
    public boolean forceScrollToFirst;
    /* access modifiers changed from: private */
    public boolean forceScrollToTop;
    private TextView forwardButton;
    /* access modifiers changed from: private */
    public AnimatorSet forwardButtonAnimation;
    /* access modifiers changed from: private */
    public boolean[] forwardEndReached = {true, true};
    private HintView forwardHintView;
    private MessageObject forwardingMessage;
    private MessageObject.GroupedMessages forwardingMessageGroup;
    /* access modifiers changed from: private */
    public ArrayList<MessageObject> forwardingMessages;
    private ArrayList<CharSequence> foundUrls;
    private TLRPC$WebPage foundWebPage;
    /* access modifiers changed from: private */
    public boolean fragmentBeginToShow;
    /* access modifiers changed from: private */
    public FragmentContextView fragmentContextView;
    private FragmentContextView fragmentLocationContextView;
    /* access modifiers changed from: private */
    public boolean fragmentOpened;
    /* access modifiers changed from: private */
    public TextView gifHintTextView;
    /* access modifiers changed from: private */
    public boolean globalIgnoreLayout;
    /* access modifiers changed from: private */
    public ChatGreetingsView greetingsViewContainer;
    private ChatObject.Call groupCall;
    /* access modifiers changed from: private */
    public LongSparseArray<MessageObject.GroupedMessages> groupedMessagesMap = new LongSparseArray<>();
    /* access modifiers changed from: private */
    public boolean hasAllMentionsLocal;
    private boolean hasBotsCommands;
    /* access modifiers changed from: private */
    public boolean hasUnfavedSelected;
    /* access modifiers changed from: private */
    public ActionBarMenuItem headerItem;
    /* access modifiers changed from: private */
    public Runnable hideAlertViewRunnable;
    private int hideDateDelay = 500;
    /* access modifiers changed from: private */
    public int highlightMessageId = Integer.MAX_VALUE;
    /* access modifiers changed from: private */
    public MessageObject hintMessageObject;
    /* access modifiers changed from: private */
    public int hintMessageType;
    private boolean ignoreAttachOnPause;
    /* access modifiers changed from: private */
    public ChatActionCell infoTopView;
    /* access modifiers changed from: private */
    public Animator infoTopViewAnimator;
    private long inlineReturn;
    /* access modifiers changed from: private */
    public InstantCameraView instantCameraView;
    private boolean invalidateChatListViewTopPadding;
    /* access modifiers changed from: private */
    public boolean invalidateMessagesVisiblePart;
    private boolean isComments;
    private boolean lastCallCheckFromServer;
    private int lastLoadIndex = 1;
    private int lastStableId = 10;
    /* access modifiers changed from: private */
    public float lastTouchY;
    private int last_message_id = 0;
    private int linkSearchRequestId;
    private int loadedPinnedMessagesCount;
    private boolean loading;
    private boolean loadingForward;
    private boolean loadingFromOldPosition;
    private SparseArray<Boolean> loadingPinnedMessages = new SparseArray<>();
    private boolean loadingPinnedMessagesList;
    /* access modifiers changed from: private */
    public int loadsCount;
    private boolean locationAlertShown;
    private int[] maxDate = {Integer.MIN_VALUE, Integer.MIN_VALUE};
    private int[] maxMessageId = {Integer.MAX_VALUE, Integer.MAX_VALUE};
    /* access modifiers changed from: private */
    public boolean maybeStartTrackingSlidingView;
    /* access modifiers changed from: private */
    public TextView mediaBanTooltip;
    /* access modifiers changed from: private */
    public FrameLayout mentionContainer;
    /* access modifiers changed from: private */
    public ExtendedGridLayoutManager mentionGridLayoutManager;
    /* access modifiers changed from: private */
    public LinearLayoutManager mentionLayoutManager;
    /* access modifiers changed from: private */
    public AnimatorSet mentionListAnimation;
    /* access modifiers changed from: private */
    public RecyclerListView mentionListView;
    /* access modifiers changed from: private */
    public boolean mentionListViewIgnoreLayout;
    /* access modifiers changed from: private */
    public boolean mentionListViewIsScrolling;
    /* access modifiers changed from: private */
    public int mentionListViewLastViewPosition;
    /* access modifiers changed from: private */
    public int mentionListViewLastViewTop;
    /* access modifiers changed from: private */
    public int mentionListViewScrollOffsetY;
    /* access modifiers changed from: private */
    public FrameLayout mentiondownButton;
    private ObjectAnimator mentiondownButtonAnimation;
    /* access modifiers changed from: private */
    public SimpleTextView mentiondownButtonCounter;
    private ImageView mentiondownButtonImage;
    /* access modifiers changed from: private */
    public MentionsAdapter mentionsAdapter;
    private RecyclerListView.OnItemClickListener mentionsOnItemClickListener;
    /* access modifiers changed from: private */
    public ActionBarMenuSubItem menuDeleteItem;
    /* access modifiers changed from: private */
    public long mergeDialogId;
    /* access modifiers changed from: private */
    public Animator messageEditTextAnimator;
    protected ArrayList<MessageObject> messages = new ArrayList<>();
    private HashMap<String, ArrayList<MessageObject>> messagesByDays = new HashMap<>();
    /* access modifiers changed from: private */
    public SparseArray<MessageObject>[] messagesDict = {new SparseArray<>(), new SparseArray<>()};
    /* access modifiers changed from: private */
    public MessagesSearchAdapter messagesSearchAdapter;
    /* access modifiers changed from: private */
    public RecyclerListView messagesSearchListView;
    /* access modifiers changed from: private */
    public AnimatorSet messagesSearchListViewAnimation;
    private int[] minDate = new int[2];
    private int[] minMessageId = {Integer.MIN_VALUE, Integer.MIN_VALUE};
    private ActionBarMenuSubItem muteItem;
    private MessageObject needAnimateToMessage;
    private boolean needRemovePreviousSameChatActivity = true;
    private boolean needSelectFromMessageId;
    /* access modifiers changed from: private */
    public int newMentionsCount;
    private int newUnreadMessageCount;
    private boolean nextScrollForce;
    private int nextScrollForcePinnedMessageId;
    private int nextScrollFromMessageId;
    private int nextScrollLoadIndex;
    private boolean nextScrollSelect;
    private int nextScrollToMessageId;
    private HintView noSoundHintView;
    RecyclerListView.OnItemClickListenerExtended onItemClickListener = new RecyclerListView.OnItemClickListenerExtended() {
        public void onItemClick(View view, int i, float f, float f2) {
            boolean unused = ChatActivity.this.wasManualScroll = true;
            if (ChatActivity.this.actionBar.isActionModeShowed() || ChatActivity.this.reportType >= 0) {
                boolean z = false;
                if (view instanceof ChatMessageCell) {
                    ChatMessageCell chatMessageCell = (ChatMessageCell) view;
                    if (!ChatActivity.this.textSelectionHelper.isSelected(chatMessageCell.getMessageObject())) {
                        z = !chatMessageCell.isInsideBackground(f, f2);
                    } else {
                        return;
                    }
                }
                ChatActivity.this.processRowSelect(view, z, f, f2);
                return;
            }
            ChatActivity.this.createMenu(view, true, false, f, f2);
        }
    };
    RecyclerListView.OnItemLongClickListenerExtended onItemLongClickListener = new RecyclerListView.OnItemLongClickListenerExtended() {
        public void onLongClickRelease() {
        }

        public void onMove(float f, float f2) {
        }

        public boolean onItemClick(View view, int i, float f, float f2) {
            boolean z = false;
            if (ChatActivity.this.textSelectionHelper.isTryingSelect() || ChatActivity.this.textSelectionHelper.isSelectionMode()) {
                return false;
            }
            boolean unused = ChatActivity.this.wasManualScroll = true;
            if (ChatActivity.this.actionBar.isActionModeShowed() || ChatActivity.this.reportType >= 0) {
                if (view instanceof ChatMessageCell) {
                    z = !((ChatMessageCell) view).isInsideBackground(f, f2);
                }
                ChatActivity.this.processRowSelect(view, z, f, f2);
            } else {
                ChatActivity.this.createMenu(view, false, true, f, f2);
            }
            return true;
        }
    };
    /* access modifiers changed from: private */
    public boolean openAnimationEnded;
    private long openAnimationStartTime;
    private boolean openImport;
    private boolean openKeyboardOnAttachMenuClose;
    /* access modifiers changed from: private */
    public boolean openSearchKeyboard;
    /* access modifiers changed from: private */
    public View overlayView;
    /* access modifiers changed from: private */
    public FrameLayout pagedownButton;
    private AnimatorSet pagedownButtonAnimation;
    /* access modifiers changed from: private */
    public CounterView pagedownButtonCounter;
    private ImageView pagedownButtonImage;
    /* access modifiers changed from: private */
    public boolean pagedownButtonShowedByScroll;
    private boolean paused = true;
    private boolean pausedOnLastMessage;
    private String pendingLinkSearchString;
    private ArrayList<MessageObject> pendingSendMessages = new ArrayList<>();
    private SparseArray<MessageObject> pendingSendMessagesDict = new SparseArray<>();
    /* access modifiers changed from: private */
    public PhotoViewer.PhotoViewerProvider photoViewerProvider = new PhotoViewer.EmptyPhotoViewerProvider() {
        public PhotoViewer.PlaceProviderObject getPlaceForPhoto(MessageObject messageObject, TLRPC$FileLocation tLRPC$FileLocation, int i, boolean z) {
            return ChatActivity.this.getPlaceForPhoto(messageObject, tLRPC$FileLocation, z, false);
        }
    };
    /* access modifiers changed from: private */
    public int pinBullerinTag;
    /* access modifiers changed from: private */
    public Bulletin pinBulletin;
    /* access modifiers changed from: private */
    public PinchToZoomHelper pinchToZoomHelper;
    /* access modifiers changed from: private */
    public NumberTextView pinnedCounterTextView;
    /* access modifiers changed from: private */
    public int pinnedCounterTextViewX;
    /* access modifiers changed from: private */
    public boolean pinnedEndReached;
    private int pinnedImageCacheType;
    private TLRPC$PhotoSize pinnedImageLocation;
    private TLObject pinnedImageLocationObject;
    private int pinnedImageSize;
    private TLRPC$PhotoSize pinnedImageThumbLocation;
    /* access modifiers changed from: private */
    public PinnedLineView pinnedLineView;
    /* access modifiers changed from: private */
    public AnimatorSet pinnedListAnimator;
    /* access modifiers changed from: private */
    public ImageView pinnedListButton;
    /* access modifiers changed from: private */
    public float pinnedMessageEnterOffset;
    /* access modifiers changed from: private */
    public ArrayList<Integer> pinnedMessageIds = new ArrayList<>();
    /* access modifiers changed from: private */
    public BackupImageView[] pinnedMessageImageView = new BackupImageView[2];
    /* access modifiers changed from: private */
    public HashMap<Integer, MessageObject> pinnedMessageObjects = new HashMap<>();
    /* access modifiers changed from: private */
    public SimpleTextView[] pinnedMessageTextView = new SimpleTextView[2];
    /* access modifiers changed from: private */
    public FrameLayout pinnedMessageView;
    /* access modifiers changed from: private */
    public AnimatorSet pinnedMessageViewAnimator;
    /* access modifiers changed from: private */
    public SimpleTextView[] pinnedNameTextView = new SimpleTextView[2];
    /* access modifiers changed from: private */
    public AnimatorSet[] pinnedNextAnimation = new AnimatorSet[2];
    /* access modifiers changed from: private */
    public boolean pinnedPorgressIsShowing;
    /* access modifiers changed from: private */
    public RadialProgressView pinnedProgress;
    /* access modifiers changed from: private */
    public ChatMessageCell pollHintCell;
    /* access modifiers changed from: private */
    public HintView pollHintView;
    /* access modifiers changed from: private */
    public int pollHintX;
    /* access modifiers changed from: private */
    public int pollHintY;
    private LongSparseArray<ArrayList<MessageObject>> polls = new LongSparseArray<>();
    private ArrayList<MessageObject> pollsToCheck = new ArrayList<>(10);
    private NotificationCenter.PostponeNotificationCallback postponeNotificationsWhileLoadingCallback = new NotificationCenter.PostponeNotificationCallback() {
        public boolean needPostpone(int i, int i2, Object[] objArr) {
            if (i == NotificationCenter.didReceiveNewMessages) {
                long longValue = objArr[0].longValue();
                if (!ChatActivity.this.firstLoading || longValue != ChatActivity.this.dialog_id) {
                    return false;
                }
                return true;
            }
            return false;
        }
    };
    private final DialogInterface.OnCancelListener postponedScrollCancelListener = new DialogInterface.OnCancelListener() {
        public final void onCancel(DialogInterface dialogInterface) {
            ChatActivity.this.lambda$new$0$ChatActivity(dialogInterface);
        }
    };
    private boolean postponedScrollIsCanceled;
    private int postponedScrollMessageId;
    private int postponedScrollMinMessageId;
    private int postponedScrollToLastMessageQueryIndex;
    private TLRPC$Document preloadedGreetingsSticker;
    private int prevSetUnreadCount = Integer.MIN_VALUE;
    private RadialProgressView progressBar;
    private AlertDialog progressDialog;
    /* access modifiers changed from: private */
    public FrameLayout progressView;
    private View progressView2;
    private SparseArray<MessageObject> repliesMessagesDict = new SparseArray<>();
    /* access modifiers changed from: private */
    public TextView replyButton;
    /* access modifiers changed from: private */
    public AnimatorSet replyButtonAnimation;
    private ImageView replyCloseImageView;
    private ImageView replyIconImageView;
    private int replyImageCacheType;
    private TLRPC$PhotoSize replyImageLocation;
    private TLObject replyImageLocationObject;
    private int replyImageSize;
    private TLRPC$PhotoSize replyImageThumbLocation;
    private BackupImageView replyImageView;
    private View replyLineView;
    private int replyMaxReadId = 0;
    private MessageObject replyMessageHeaderObject;
    private SimpleTextView replyNameTextView;
    private SimpleTextView replyObjectTextView;
    private TLRPC$Chat replyOriginalChat;
    private int replyOriginalMessageId;
    /* access modifiers changed from: private */
    public MessageObject replyingMessageObject;
    /* access modifiers changed from: private */
    public TextView reportSpamButton;
    /* access modifiers changed from: private */
    public AnimatorSet reportSpamViewAnimator;
    /* access modifiers changed from: private */
    public int reportType = -1;
    private int returnToLoadIndex;
    private int returnToMessageId;
    /* access modifiers changed from: private */
    public AnimatorSet runningAnimation;
    private TLRPC$TL_messages_discussionMessage savedDiscussionMessage;
    private TLRPC$messages_Messages savedHistory;
    private boolean savedNoDiscussion;
    private boolean savedNoHistory;
    /* access modifiers changed from: private */
    public int scheduledMessagesCount = -1;
    /* access modifiers changed from: private */
    public HintView scheduledOrNoSoundHint;
    /* access modifiers changed from: private */
    public AnimatorSet scrimAnimatorSet;
    /* access modifiers changed from: private */
    public Paint scrimPaint;
    /* access modifiers changed from: private */
    public ActionBarPopupWindow scrimPopupWindow;
    /* access modifiers changed from: private */
    public ActionBarMenuSubItem[] scrimPopupWindowItems;
    /* access modifiers changed from: private */
    public View scrimView;
    /* access modifiers changed from: private */
    public int scrollAnimationIndex;
    /* access modifiers changed from: private */
    public boolean scrollByTouch;
    /* access modifiers changed from: private */
    public int scrollCallbackAnimationIndex;
    private MessageObject scrollToMessage;
    private int scrollToMessagePosition = -10000;
    /* access modifiers changed from: private */
    public int scrollToOffsetOnRecreate = 0;
    /* access modifiers changed from: private */
    public int scrollToPositionOnRecreate = -1;
    private boolean scrollToThreadMessage;
    private boolean scrollToTopOnResume;
    private boolean scrollToTopUnReadOnResume;
    private boolean scrollToVideo;
    /* access modifiers changed from: private */
    public boolean scrollingChatListView;
    /* access modifiers changed from: private */
    public boolean scrollingFloatingDate;
    private HintView searchAsListHint;
    private boolean searchAsListHintShown;
    private View searchAsListTogglerView;
    /* access modifiers changed from: private */
    public ImageView searchCalendarButton;
    /* access modifiers changed from: private */
    public FrameLayout searchContainer;
    /* access modifiers changed from: private */
    public SearchCounterView searchCountText;
    private ImageView searchDownButton;
    /* access modifiers changed from: private */
    public ActionBarMenuItem searchItem;
    /* access modifiers changed from: private */
    public boolean searchItemVisible;
    private ImageView searchUpButton;
    /* access modifiers changed from: private */
    public ImageView searchUserButton;
    /* access modifiers changed from: private */
    public TLRPC$Chat searchingChatMessages;
    /* access modifiers changed from: private */
    public boolean searchingForUser;
    /* access modifiers changed from: private */
    public TLRPC$User searchingUserMessages;
    /* access modifiers changed from: private */
    public SparseArray<MessageObject>[] selectedMessagesCanCopyIds = {new SparseArray<>(), new SparseArray<>()};
    /* access modifiers changed from: private */
    public SparseArray<MessageObject>[] selectedMessagesCanStarIds = {new SparseArray<>(), new SparseArray<>()};
    private NumberTextView selectedMessagesCountTextView;
    /* access modifiers changed from: private */
    public SparseArray<MessageObject>[] selectedMessagesIds = {new SparseArray<>(), new SparseArray<>()};
    /* access modifiers changed from: private */
    public MessageObject selectedObject;
    private MessageObject.GroupedMessages selectedObjectGroup;
    private MessageObject selectedObjectToEditCaption;
    /* access modifiers changed from: private */
    public boolean setPinnedTextTranslationX;
    private boolean showCloseChatDialogLater;
    /* access modifiers changed from: private */
    public boolean showPinBulletin;
    private final Runnable showScheduledOrNoSoundRunnable = new Runnable() {
        public final void run() {
            ChatActivity.this.lambda$new$1$ChatActivity();
        }
    };
    private boolean showScrollToMessageError;
    /* access modifiers changed from: private */
    public ChatMessageCell slidingView;
    private HintView slowModeHint;
    private int startLoadFromMessageId;
    private int startLoadFromMessageIdSaved;
    private int startLoadFromMessageOffset = Integer.MAX_VALUE;
    private String startVideoEdit;
    /* access modifiers changed from: private */
    public boolean startedTrackingSlidingView;
    /* access modifiers changed from: private */
    public StickersAdapter stickersAdapter;
    /* access modifiers changed from: private */
    public RecyclerListView stickersListView;
    private RecyclerListView.OnItemClickListener stickersOnItemClickListener;
    /* access modifiers changed from: private */
    public FrameLayout stickersPanel;
    private ImageView stickersPanelArrow;
    /* access modifiers changed from: private */
    public boolean swipeBackEnabled = true;
    /* access modifiers changed from: private */
    public TextSelectionHelper.ChatListTextSelectionHelper textSelectionHelper;
    /* access modifiers changed from: private */
    public TextSelectionHint textSelectionHint;
    private boolean textSelectionHintWasShowed;
    private int threadMaxInboxReadId;
    private int threadMaxOutboxReadId;
    private boolean threadMessageAdded;
    /* access modifiers changed from: private */
    public int threadMessageId;
    /* access modifiers changed from: private */
    public MessageObject threadMessageObject;
    /* access modifiers changed from: private */
    public ArrayList<MessageObject> threadMessageObjects;
    private boolean threadMessageVisible = true;
    private View timeItem2;
    private HintView timerHintView;
    /* access modifiers changed from: private */
    public FrameLayout topChatPanelView;
    private float topChatPanelViewOffset;
    private UndoView topUndoView;
    /* access modifiers changed from: private */
    public float topViewOffset;
    private int topViewWasVisible;
    private int totalPinnedMessagesCount;
    private int transitionAnimationIndex;
    /* access modifiers changed from: private */
    public UndoView undoView;
    /* access modifiers changed from: private */
    public MessageObject unreadMessageObject;
    private Runnable unselectRunnable;
    /* access modifiers changed from: private */
    public Runnable updateDeleteItemRunnable = new Runnable() {
        public void run() {
            String str;
            if (ChatActivity.this.selectedObject != null && ChatActivity.this.menuDeleteItem != null) {
                int max = Math.max(0, ChatActivity.this.selectedObject.messageOwner.ttl_period - (ChatActivity.this.getConnectionsManager().getCurrentTime() - ChatActivity.this.selectedObject.messageOwner.date));
                if (max < 86400) {
                    str = AndroidUtilities.formatDuration(max, false);
                } else {
                    str = LocaleController.formatPluralString("Days", Math.round(((float) max) / 86400.0f));
                }
                ChatActivity.this.menuDeleteItem.setSubtext(LocaleController.formatString("AutoDeleteIn", NUM, str));
                AndroidUtilities.runOnUIThread(ChatActivity.this.updateDeleteItemRunnable, 1000);
            }
        }
    };
    Runnable updatePinnedProgressRunnable;
    private boolean userBlocked;
    protected TLRPC$UserFull userInfo;
    /* access modifiers changed from: private */
    public FrameLayout videoPlayerContainer;
    /* access modifiers changed from: private */
    public TextureView videoTextureView;
    private String voiceChatHash;
    /* access modifiers changed from: private */
    public HintView voiceHintTextView;
    /* access modifiers changed from: private */
    public Runnable waitingForCharaterEnterRunnable;
    private ArrayList<Integer> waitingForLoad = new ArrayList<>();
    private SparseArray<MessageObject> waitingForReplies = new SparseArray<>();
    private boolean waitingForReplyMessageLoad;
    /* access modifiers changed from: private */
    public boolean waitingForSendingMessageLoad;
    /* access modifiers changed from: private */
    public boolean wasManualScroll;
    private boolean wasPaused;

    private interface ChatActivityDelegate {

        /* renamed from: org.telegram.ui.ChatActivity$ChatActivityDelegate$-CC  reason: invalid class name */
        public final /* synthetic */ class CC {
            public static void $default$onReport(ChatActivityDelegate chatActivityDelegate) {
            }

            public static void $default$onUnpin(ChatActivityDelegate chatActivityDelegate, boolean z, boolean z2) {
            }

            public static void $default$openReplyMessage(ChatActivityDelegate chatActivityDelegate, int i) {
            }

            public static void $default$openSearch(ChatActivityDelegate chatActivityDelegate, String str) {
            }
        }

        void onReport();

        void onUnpin(boolean z, boolean z2);

        void openReplyMessage(int i);

        void openSearch(String str);
    }

    static /* synthetic */ boolean lambda$createView$10(View view, MotionEvent motionEvent) {
        return true;
    }

    static /* synthetic */ boolean lambda$createView$34(View view, MotionEvent motionEvent) {
        return true;
    }

    static /* synthetic */ boolean lambda$createView$9(View view, MotionEvent motionEvent) {
        return true;
    }

    public /* synthetic */ void startMusicSelectActivity() {
        ChatAttachAlertDocumentLayout.DocumentSelectActivityDelegate.CC.$default$startMusicSelectActivity(this);
    }

    static /* synthetic */ int access$20710(ChatActivity chatActivity) {
        int i = chatActivity.newMentionsCount;
        chatActivity.newMentionsCount = i - 1;
        return i;
    }

    static /* synthetic */ int access$24008(ChatActivity chatActivity) {
        int i = chatActivity.scheduledMessagesCount;
        chatActivity.scheduledMessagesCount = i + 1;
        return i;
    }

    static /* synthetic */ int access$28204(ChatActivity chatActivity) {
        int i = chatActivity.pinBullerinTag + 1;
        chatActivity.pinBullerinTag = i;
        return i;
    }

    static {
        int i = NotificationCenter.commentsRead;
        allowedNotificationsDuringChatListAnimations = new int[]{NotificationCenter.messagesRead, NotificationCenter.threadMessagesRead, i, NotificationCenter.messagesReadEncrypted, NotificationCenter.messagesReadContent, i, NotificationCenter.didLoadPinnedMessages, NotificationCenter.newDraftReceived, NotificationCenter.updateMentionsCount, NotificationCenter.didUpdateConnectionState, NotificationCenter.updateInterfaces, NotificationCenter.closeChats, NotificationCenter.chatInfoCantLoad, NotificationCenter.userInfoDidLoad, NotificationCenter.pinnedInfoDidLoad, NotificationCenter.didSetNewWallpapper, NotificationCenter.didApplyNewTheme};
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$new$0 */
    public /* synthetic */ void lambda$new$0$ChatActivity(DialogInterface dialogInterface) {
        this.postponedScrollIsCanceled = true;
        this.postponedScrollMessageId = 0;
        this.nextScrollToMessageId = 0;
        this.forceNextPinnedMessageId = 0;
        invalidateMessagesVisiblePart();
        showPinnedProgress(false);
    }

    public float getChatListViewPadding() {
        return this.chatListViewPaddingTop;
    }

    public FragmentContextView getFragmentContextView() {
        return this.fragmentContextView;
    }

    private class UnreadCounterTextView extends View {
        boolean animatedFromBottom;
        private int circleWidth;
        int counterColor;
        private String currentCounterString;
        private TextPaint layoutPaint = new TextPaint(1);
        private int layoutTextWidth;
        private Paint paint = new Paint(1);
        int panelBackgroundColor;
        private RectF rect = new RectF();
        ValueAnimator replaceAnimator;
        float replaceProgress = 1.0f;
        private int rippleColor;
        Drawable selectableBackground;
        int textColor;
        private StaticLayout textLayout;
        private StaticLayout textLayoutOut;
        private TextPaint textPaint = new TextPaint(1);
        private int textWidth;

        public UnreadCounterTextView(Context context) {
            super(context);
            this.textPaint.setTextSize((float) AndroidUtilities.dp(13.0f));
            this.textPaint.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
            this.layoutPaint.setTextSize((float) AndroidUtilities.dp(15.0f));
            this.layoutPaint.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
        }

        public void setText(CharSequence charSequence, boolean z) {
            this.animatedFromBottom = z;
            this.textLayoutOut = this.textLayout;
            this.layoutTextWidth = (int) Math.ceil((double) this.layoutPaint.measureText(charSequence, 0, charSequence.length()));
            this.textLayout = new StaticLayout(charSequence, this.layoutPaint, this.layoutTextWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, true);
            setContentDescription(charSequence);
            invalidate();
            if (this.textLayoutOut != null) {
                ValueAnimator valueAnimator = this.replaceAnimator;
                if (valueAnimator != null) {
                    valueAnimator.cancel();
                }
                this.replaceProgress = 0.0f;
                ValueAnimator ofFloat = ValueAnimator.ofFloat(new float[]{0.0f, 1.0f});
                this.replaceAnimator = ofFloat;
                ofFloat.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
                    public final void onAnimationUpdate(ValueAnimator valueAnimator) {
                        ChatActivity.UnreadCounterTextView.this.lambda$setText$0$ChatActivity$UnreadCounterTextView(valueAnimator);
                    }
                });
                this.replaceAnimator.setDuration(150);
                this.replaceAnimator.start();
            }
        }

        /* access modifiers changed from: private */
        /* renamed from: lambda$setText$0 */
        public /* synthetic */ void lambda$setText$0$ChatActivity$UnreadCounterTextView(ValueAnimator valueAnimator) {
            this.replaceProgress = ((Float) valueAnimator.getAnimatedValue()).floatValue();
            invalidate();
        }

        public void setText(CharSequence charSequence) {
            this.layoutTextWidth = (int) Math.ceil((double) this.layoutPaint.measureText(charSequence, 0, charSequence.length()));
            this.textLayout = new StaticLayout(charSequence, this.layoutPaint, this.layoutTextWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, true);
            setContentDescription(charSequence);
            invalidate();
        }

        /* access modifiers changed from: protected */
        public void drawableStateChanged() {
            super.drawableStateChanged();
            Drawable drawable = this.selectableBackground;
            if (drawable != null) {
                drawable.setState(getDrawableState());
            }
        }

        public boolean verifyDrawable(Drawable drawable) {
            Drawable drawable2 = this.selectableBackground;
            if (drawable2 != null) {
                return drawable2 == drawable || super.verifyDrawable(drawable);
            }
            return super.verifyDrawable(drawable);
        }

        public void jumpDrawablesToCurrentState() {
            super.jumpDrawablesToCurrentState();
            Drawable drawable = this.selectableBackground;
            if (drawable != null) {
                drawable.jumpToCurrentState();
            }
        }

        public boolean onTouchEvent(MotionEvent motionEvent) {
            StaticLayout staticLayout;
            int i;
            if (motionEvent.getAction() == 0 && (staticLayout = this.textLayout) != null) {
                int ceil = (int) Math.ceil((double) staticLayout.getLineWidth(0));
                if (getMeasuredWidth() == ((View) getParent()).getMeasuredWidth()) {
                    i = getMeasuredWidth() - AndroidUtilities.dp(96.0f);
                } else if (ChatActivity.this.botInfo != null) {
                    i = getMeasuredWidth();
                } else {
                    int i2 = this.circleWidth;
                    i = ceil + (i2 > 0 ? i2 + AndroidUtilities.dp(8.0f) : 0) + AndroidUtilities.dp(48.0f);
                }
                int measuredWidth = (getMeasuredWidth() - i) / 2;
                float f = ((float) i) / 2.0f;
                this.rect.set((float) measuredWidth, (((float) getMeasuredHeight()) / 2.0f) - f, (float) (measuredWidth + i), (((float) getMeasuredHeight()) / 2.0f) + f);
                if (!this.rect.contains(motionEvent.getX(), motionEvent.getY())) {
                    setPressed(false);
                    return false;
                }
            }
            return super.onTouchEvent(motionEvent);
        }

        /* access modifiers changed from: protected */
        public void onDraw(Canvas canvas) {
            StaticLayout staticLayout = this.textLayout;
            int color = Theme.getColor("chat_fieldOverlayText");
            if (this.textColor != color) {
                TextPaint textPaint2 = this.layoutPaint;
                this.textColor = color;
                textPaint2.setColor(color);
            }
            int color2 = Theme.getColor("chat_messagePanelBackground");
            if (this.panelBackgroundColor != color2) {
                TextPaint textPaint3 = this.textPaint;
                this.panelBackgroundColor = color2;
                textPaint3.setColor(color2);
            }
            int color3 = Theme.getColor("chat_goDownButtonCounterBackground");
            if (this.counterColor != color3) {
                Paint paint2 = this.paint;
                this.counterColor = color3;
                paint2.setColor(color3);
            }
            if (getParent() != null) {
                int measuredWidth = getMeasuredWidth();
                int measuredWidth2 = (getMeasuredWidth() - measuredWidth) / 2;
                if (this.rippleColor != Theme.getColor("chat_fieldOverlayText") || this.selectableBackground == null) {
                    int dp = AndroidUtilities.dp(60.0f);
                    int color4 = Theme.getColor("chat_fieldOverlayText");
                    this.rippleColor = color4;
                    Drawable createSimpleSelectorCircleDrawable = Theme.createSimpleSelectorCircleDrawable(dp, 0, ColorUtils.setAlphaComponent(color4, 26));
                    this.selectableBackground = createSimpleSelectorCircleDrawable;
                    createSimpleSelectorCircleDrawable.setCallback(this);
                }
                int dp2 = getLeft() + measuredWidth2 <= 0 ? measuredWidth2 - AndroidUtilities.dp(20.0f) : measuredWidth2;
                int i = measuredWidth2 + measuredWidth;
                if (i > ((View) getParent()).getMeasuredWidth()) {
                    i += AndroidUtilities.dp(20.0f);
                }
                int i2 = measuredWidth / 2;
                this.selectableBackground.setBounds(dp2, (getMeasuredHeight() / 2) - i2, i, (getMeasuredHeight() / 2) + i2);
                this.selectableBackground.draw(canvas);
            }
            if (this.textLayout != null) {
                canvas.save();
                if (this.replaceProgress == 1.0f || this.textLayoutOut == null) {
                    canvas.translate((float) (((getMeasuredWidth() - this.layoutTextWidth) / 2) - (this.circleWidth / 2)), (float) ((getMeasuredHeight() - this.textLayout.getHeight()) / 2));
                    this.textLayout.draw(canvas);
                } else {
                    int alpha = this.layoutPaint.getAlpha();
                    canvas.save();
                    canvas.translate((float) (((getMeasuredWidth() - this.textLayoutOut.getWidth()) / 2) - (this.circleWidth / 2)), (float) ((getMeasuredHeight() - this.textLayout.getHeight()) / 2));
                    float f = -1.0f;
                    canvas.translate(0.0f, (this.animatedFromBottom ? -1.0f : 1.0f) * ((float) AndroidUtilities.dp(18.0f)) * this.replaceProgress);
                    float f2 = (float) alpha;
                    this.layoutPaint.setAlpha((int) ((1.0f - this.replaceProgress) * f2));
                    this.textLayoutOut.draw(canvas);
                    canvas.restore();
                    canvas.save();
                    canvas.translate((float) (((getMeasuredWidth() - this.layoutTextWidth) / 2) - (this.circleWidth / 2)), (float) ((getMeasuredHeight() - this.textLayout.getHeight()) / 2));
                    if (this.animatedFromBottom) {
                        f = 1.0f;
                    }
                    canvas.translate(0.0f, f * ((float) AndroidUtilities.dp(18.0f)) * (1.0f - this.replaceProgress));
                    this.layoutPaint.setAlpha((int) (f2 * this.replaceProgress));
                    this.textLayout.draw(canvas);
                    canvas.restore();
                    this.layoutPaint.setAlpha(alpha);
                }
                canvas.restore();
            }
            if (this.currentCounterString != null && staticLayout != null) {
                int ceil = (int) Math.ceil((double) staticLayout.getLineWidth(0));
                int measuredWidth3 = ((((getMeasuredWidth() - ceil) / 2) + ceil) - (this.circleWidth / 2)) + AndroidUtilities.dp(6.0f);
                this.rect.set((float) measuredWidth3, (float) ((getMeasuredHeight() / 2) - AndroidUtilities.dp(10.0f)), (float) (measuredWidth3 + this.circleWidth), (float) ((getMeasuredHeight() / 2) + AndroidUtilities.dp(10.0f)));
                canvas.drawRoundRect(this.rect, (float) AndroidUtilities.dp(10.0f), (float) AndroidUtilities.dp(10.0f), this.paint);
                canvas.drawText(this.currentCounterString, this.rect.centerX() - (((float) this.textWidth) / 2.0f), this.rect.top + ((float) AndroidUtilities.dp(14.5f)), this.textPaint);
            }
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$new$1 */
    public /* synthetic */ void lambda$new$1$ChatActivity() {
        ChatActivityEnterView chatActivityEnterView2;
        if (getParentActivity() != null && this.fragmentView != null && (chatActivityEnterView2 = this.chatActivityEnterView) != null && chatActivityEnterView2.getSendButton() != null && this.chatActivityEnterView.getEditField().getText().length() >= 5) {
            SharedConfig.increaseScheduledOrNoSuoundHintShowed();
            if (this.scheduledOrNoSoundHint == null) {
                HintView hintView = new HintView(getParentActivity(), 4);
                this.scheduledOrNoSoundHint = hintView;
                hintView.setShowingDuration(5000);
                this.scheduledOrNoSoundHint.setAlpha(0.0f);
                this.scheduledOrNoSoundHint.setVisibility(4);
                this.scheduledOrNoSoundHint.setText(LocaleController.getString("ScheduledOrNoSoundHint", NUM));
                this.contentView.addView(this.scheduledOrNoSoundHint, LayoutHelper.createFrame(-2, -2.0f, 51, 10.0f, 0.0f, 10.0f, 0.0f));
            }
            this.scheduledOrNoSoundHint.showForView(this.chatActivityEnterView.getSendButton(), true);
        }
    }

    public ChatActivity(Bundle bundle) {
        super(bundle);
    }

    /* JADX WARNING: Removed duplicated region for block: B:147:0x063b  */
    /* JADX WARNING: Removed duplicated region for block: B:157:0x066e  */
    /* JADX WARNING: Removed duplicated region for block: B:179:0x0722  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public boolean onFragmentCreate() {
        /*
            r35 = this;
            r1 = r35
            android.os.Bundle r0 = r1.arguments
            java.lang.String r2 = "chat_id"
            r3 = 0
            java.lang.Integer r4 = java.lang.Integer.valueOf(r3)
            int r2 = r0.getInt(r2, r3)
            android.os.Bundle r0 = r1.arguments
            java.lang.String r5 = "user_id"
            int r5 = r0.getInt(r5, r3)
            android.os.Bundle r0 = r1.arguments
            java.lang.String r6 = "enc_id"
            int r6 = r0.getInt(r6, r3)
            android.os.Bundle r0 = r1.arguments
            java.lang.String r7 = "chatMode"
            int r0 = r0.getInt(r7, r3)
            r1.chatMode = r0
            android.os.Bundle r0 = r1.arguments
            java.lang.String r7 = "voicechat"
            r8 = 0
            java.lang.String r0 = r0.getString(r7, r8)
            r1.voiceChatHash = r0
            android.os.Bundle r0 = r1.arguments
            java.lang.String r7 = "inline_return"
            r9 = 0
            long r9 = r0.getLong(r7, r9)
            r1.inlineReturn = r9
            android.os.Bundle r0 = r1.arguments
            java.lang.String r7 = "inline_query"
            java.lang.String r7 = r0.getString(r7)
            android.os.Bundle r0 = r1.arguments
            java.lang.String r9 = "message_id"
            int r0 = r0.getInt(r9, r3)
            r1.startLoadFromMessageId = r0
            android.os.Bundle r0 = r1.arguments
            java.lang.String r9 = "report"
            r10 = -1
            int r0 = r0.getInt(r9, r10)
            r1.reportType = r0
            android.os.Bundle r0 = r1.arguments
            java.lang.String r9 = "historyPreloaded"
            boolean r9 = r0.getBoolean(r9, r3)
            int r0 = r1.highlightMessageId
            r10 = 2147483647(0x7fffffff, float:NaN)
            if (r0 == 0) goto L_0x0072
            if (r0 == r10) goto L_0x0072
            r1.startLoadFromMessageId = r0
        L_0x0072:
            android.os.Bundle r0 = r1.arguments
            java.lang.String r11 = "migrated_to"
            int r11 = r0.getInt(r11, r3)
            android.os.Bundle r0 = r1.arguments
            java.lang.String r12 = "scrollToTopOnResume"
            boolean r0 = r0.getBoolean(r12, r3)
            r1.scrollToTopOnResume = r0
            android.os.Bundle r0 = r1.arguments
            java.lang.String r12 = "need_remove_previous_same_chat_activity"
            r13 = 1
            boolean r0 = r0.getBoolean(r12, r13)
            r1.needRemovePreviousSameChatActivity = r0
            if (r2 == 0) goto L_0x00e7
            org.telegram.messenger.MessagesController r0 = r35.getMessagesController()
            java.lang.Integer r6 = java.lang.Integer.valueOf(r2)
            org.telegram.tgnet.TLRPC$Chat r0 = r0.getChat(r6)
            r1.currentChat = r0
            if (r0 != 0) goto L_0x00ce
            java.util.concurrent.CountDownLatch r0 = new java.util.concurrent.CountDownLatch
            r0.<init>(r13)
            org.telegram.messenger.MessagesStorage r6 = r35.getMessagesStorage()
            org.telegram.messenger.DispatchQueue r7 = r6.getStorageQueue()
            org.telegram.ui.-$$Lambda$ChatActivity$OKoISum68CbuNOser4f0MN7wFJE r10 = new org.telegram.ui.-$$Lambda$ChatActivity$OKoISum68CbuNOser4f0MN7wFJE
            r10.<init>(r6, r2, r0)
            r7.postRunnable(r10)
            r0.await()     // Catch:{ Exception -> 0x00ba }
            goto L_0x00bf
        L_0x00ba:
            r0 = move-exception
            r6 = r0
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r6)
        L_0x00bf:
            org.telegram.tgnet.TLRPC$Chat r0 = r1.currentChat
            if (r0 == 0) goto L_0x00cd
            org.telegram.messenger.MessagesController r0 = r35.getMessagesController()
            org.telegram.tgnet.TLRPC$Chat r6 = r1.currentChat
            r0.putChat(r6, r13)
            goto L_0x00ce
        L_0x00cd:
            return r3
        L_0x00ce:
            int r0 = -r2
            long r6 = (long) r0
            r1.dialog_id = r6
            org.telegram.tgnet.TLRPC$Chat r0 = r1.currentChat
            boolean r0 = org.telegram.messenger.ChatObject.isChannel(r0)
            if (r0 == 0) goto L_0x01d2
            org.telegram.messenger.MessagesController r0 = r35.getMessagesController()
            org.telegram.tgnet.TLRPC$Chat r2 = r1.currentChat
            int r6 = r1.classGuid
            r0.startShortPoll(r2, r6, r3)
            goto L_0x01d2
        L_0x00e7:
            if (r5 == 0) goto L_0x0140
            org.telegram.messenger.MessagesController r0 = r35.getMessagesController()
            java.lang.Integer r2 = java.lang.Integer.valueOf(r5)
            org.telegram.tgnet.TLRPC$User r0 = r0.getUser(r2)
            r1.currentUser = r0
            if (r0 != 0) goto L_0x0126
            org.telegram.messenger.MessagesStorage r0 = r35.getMessagesStorage()
            java.util.concurrent.CountDownLatch r2 = new java.util.concurrent.CountDownLatch
            r2.<init>(r13)
            org.telegram.messenger.DispatchQueue r6 = r0.getStorageQueue()
            org.telegram.ui.-$$Lambda$ChatActivity$Pta89dKyhaviZmMx_gYxecPo1Oo r10 = new org.telegram.ui.-$$Lambda$ChatActivity$Pta89dKyhaviZmMx_gYxecPo1Oo
            r10.<init>(r0, r5, r2)
            r6.postRunnable(r10)
            r2.await()     // Catch:{ Exception -> 0x0112 }
            goto L_0x0117
        L_0x0112:
            r0 = move-exception
            r2 = r0
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r2)
        L_0x0117:
            org.telegram.tgnet.TLRPC$User r0 = r1.currentUser
            if (r0 == 0) goto L_0x0125
            org.telegram.messenger.MessagesController r0 = r35.getMessagesController()
            org.telegram.tgnet.TLRPC$User r2 = r1.currentUser
            r0.putUser(r2, r13)
            goto L_0x0126
        L_0x0125:
            return r3
        L_0x0126:
            long r14 = (long) r5
            r1.dialog_id = r14
            android.os.Bundle r0 = r1.arguments
            java.lang.String r2 = "botUser"
            java.lang.String r0 = r0.getString(r2)
            r1.botUser = r0
            if (r7 == 0) goto L_0x01d2
            org.telegram.messenger.MessagesController r0 = r35.getMessagesController()
            org.telegram.tgnet.TLRPC$User r2 = r1.currentUser
            r0.sendBotStart(r2, r7)
            goto L_0x01d2
        L_0x0140:
            if (r6 == 0) goto L_0x08ba
            org.telegram.messenger.MessagesController r0 = r35.getMessagesController()
            java.lang.Integer r2 = java.lang.Integer.valueOf(r6)
            org.telegram.tgnet.TLRPC$EncryptedChat r0 = r0.getEncryptedChat(r2)
            r1.currentEncryptedChat = r0
            org.telegram.messenger.MessagesStorage r2 = r35.getMessagesStorage()
            org.telegram.tgnet.TLRPC$EncryptedChat r0 = r1.currentEncryptedChat
            if (r0 != 0) goto L_0x0181
            java.util.concurrent.CountDownLatch r0 = new java.util.concurrent.CountDownLatch
            r0.<init>(r13)
            org.telegram.messenger.DispatchQueue r7 = r2.getStorageQueue()
            org.telegram.ui.-$$Lambda$ChatActivity$Cs9bG-J44FoeoZ5-GJdVxQul-Yo r12 = new org.telegram.ui.-$$Lambda$ChatActivity$Cs9bG-J44FoeoZ5-GJdVxQul-Yo
            r12.<init>(r2, r6, r0)
            r7.postRunnable(r12)
            r0.await()     // Catch:{ Exception -> 0x016d }
            goto L_0x0172
        L_0x016d:
            r0 = move-exception
            r7 = r0
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r7)
        L_0x0172:
            org.telegram.tgnet.TLRPC$EncryptedChat r0 = r1.currentEncryptedChat
            if (r0 == 0) goto L_0x0180
            org.telegram.messenger.MessagesController r0 = r35.getMessagesController()
            org.telegram.tgnet.TLRPC$EncryptedChat r7 = r1.currentEncryptedChat
            r0.putEncryptedChat(r7, r13)
            goto L_0x0181
        L_0x0180:
            return r3
        L_0x0181:
            org.telegram.messenger.MessagesController r0 = r35.getMessagesController()
            org.telegram.tgnet.TLRPC$EncryptedChat r7 = r1.currentEncryptedChat
            int r7 = r7.user_id
            java.lang.Integer r7 = java.lang.Integer.valueOf(r7)
            org.telegram.tgnet.TLRPC$User r0 = r0.getUser(r7)
            r1.currentUser = r0
            if (r0 != 0) goto L_0x01be
            java.util.concurrent.CountDownLatch r0 = new java.util.concurrent.CountDownLatch
            r0.<init>(r13)
            org.telegram.messenger.DispatchQueue r7 = r2.getStorageQueue()
            org.telegram.ui.-$$Lambda$ChatActivity$qicAfrflDWunPzbK3rgdOmLi1Ic r12 = new org.telegram.ui.-$$Lambda$ChatActivity$qicAfrflDWunPzbK3rgdOmLi1Ic
            r12.<init>(r2, r0)
            r7.postRunnable(r12)
            r0.await()     // Catch:{ Exception -> 0x01aa }
            goto L_0x01af
        L_0x01aa:
            r0 = move-exception
            r2 = r0
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r2)
        L_0x01af:
            org.telegram.tgnet.TLRPC$User r0 = r1.currentUser
            if (r0 == 0) goto L_0x01bd
            org.telegram.messenger.MessagesController r0 = r35.getMessagesController()
            org.telegram.tgnet.TLRPC$User r2 = r1.currentUser
            r0.putUser(r2, r13)
            goto L_0x01be
        L_0x01bd:
            return r3
        L_0x01be:
            long r6 = (long) r6
            r0 = 32
            long r6 = r6 << r0
            r1.dialog_id = r6
            int[] r0 = r1.maxMessageId
            r2 = -2147483648(0xfffffffvar_, float:-0.0)
            r0[r13] = r2
            r0[r3] = r2
            int[] r0 = r1.minMessageId
            r0[r13] = r10
            r0[r3] = r10
        L_0x01d2:
            org.telegram.tgnet.TLRPC$User r0 = r1.currentUser
            if (r0 == 0) goto L_0x01e3
            int r0 = android.os.Build.VERSION.SDK_INT
            r2 = 23
            if (r0 >= r2) goto L_0x01e3
            org.telegram.messenger.MediaController r0 = org.telegram.messenger.MediaController.getInstance()
            r0.startMediaObserver()
        L_0x01e3:
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            org.telegram.messenger.NotificationCenter$PostponeNotificationCallback r2 = r1.postponeNotificationsWhileLoadingCallback
            r0.addPostponeNotificationsCallback(r2)
            int r0 = r1.chatMode
            if (r0 == r13) goto L_0x02bf
            int r0 = r1.threadMessageId
            if (r0 != 0) goto L_0x0273
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r2 = org.telegram.messenger.NotificationCenter.screenshotTook
            r0.addObserver(r1, r2)
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r2 = org.telegram.messenger.NotificationCenter.encryptedChatUpdated
            r0.addObserver(r1, r2)
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r2 = org.telegram.messenger.NotificationCenter.messagesReadEncrypted
            r0.addObserver(r1, r2)
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r2 = org.telegram.messenger.NotificationCenter.botKeyboardDidLoad
            r0.addObserver(r1, r2)
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r2 = org.telegram.messenger.NotificationCenter.updateMentionsCount
            r0.addObserver(r1, r2)
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r2 = org.telegram.messenger.NotificationCenter.newDraftReceived
            r0.addObserver(r1, r2)
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r2 = org.telegram.messenger.NotificationCenter.chatOnlineCountDidLoad
            r0.addObserver(r1, r2)
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r2 = org.telegram.messenger.NotificationCenter.peerSettingsDidLoad
            r0.addObserver(r1, r2)
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r2 = org.telegram.messenger.NotificationCenter.didLoadPinnedMessages
            r0.addObserver(r1, r2)
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r2 = org.telegram.messenger.NotificationCenter.commentsRead
            r0.addObserver(r1, r2)
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r2 = org.telegram.messenger.NotificationCenter.changeRepliesCounter
            r0.addObserver(r1, r2)
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r2 = org.telegram.messenger.NotificationCenter.messagesRead
            r0.addObserver(r1, r2)
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r2 = org.telegram.messenger.NotificationCenter.didLoadChatInviter
            r0.addObserver(r1, r2)
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r2 = org.telegram.messenger.NotificationCenter.groupCallUpdated
            r0.addObserver(r1, r2)
            goto L_0x027c
        L_0x0273:
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r2 = org.telegram.messenger.NotificationCenter.threadMessagesRead
            r0.addObserver(r1, r2)
        L_0x027c:
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r2 = org.telegram.messenger.NotificationCenter.removeAllMessagesFromDialog
            r0.addObserver(r1, r2)
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r2 = org.telegram.messenger.NotificationCenter.messagesReadContent
            r0.addObserver(r1, r2)
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r2 = org.telegram.messenger.NotificationCenter.chatSearchResultsAvailable
            r0.addObserver(r1, r2)
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r2 = org.telegram.messenger.NotificationCenter.chatSearchResultsLoading
            r0.addObserver(r1, r2)
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r2 = org.telegram.messenger.NotificationCenter.didUpdateMessagesViews
            r0.addObserver(r1, r2)
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r2 = org.telegram.messenger.NotificationCenter.didUpdatePollResults
            r0.addObserver(r1, r2)
            org.telegram.tgnet.TLRPC$EncryptedChat r0 = r1.currentEncryptedChat
            if (r0 == 0) goto L_0x02bf
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r2 = org.telegram.messenger.NotificationCenter.didVerifyMessagesStickers
            r0.addObserver(r1, r2)
        L_0x02bf:
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r2 = org.telegram.messenger.NotificationCenter.messagesDidLoad
            r0.addObserver(r1, r2)
            org.telegram.messenger.NotificationCenter r0 = org.telegram.messenger.NotificationCenter.getGlobalInstance()
            int r2 = org.telegram.messenger.NotificationCenter.emojiDidLoad
            r0.addObserver(r1, r2)
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r2 = org.telegram.messenger.NotificationCenter.didUpdateConnectionState
            r0.addObserver(r1, r2)
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r2 = org.telegram.messenger.NotificationCenter.updateInterfaces
            r0.addObserver(r1, r2)
            int r0 = r1.chatMode
            r2 = 2
            if (r0 == r2) goto L_0x02f1
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r6 = org.telegram.messenger.NotificationCenter.didReceiveNewMessages
            r0.addObserver(r1, r6)
        L_0x02f1:
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r6 = org.telegram.messenger.NotificationCenter.closeChats
            r0.addObserver(r1, r6)
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r6 = org.telegram.messenger.NotificationCenter.messagesDeleted
            r0.addObserver(r1, r6)
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r6 = org.telegram.messenger.NotificationCenter.historyCleared
            r0.addObserver(r1, r6)
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r6 = org.telegram.messenger.NotificationCenter.messageReceivedByServer
            r0.addObserver(r1, r6)
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r6 = org.telegram.messenger.NotificationCenter.messageReceivedByAck
            r0.addObserver(r1, r6)
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r6 = org.telegram.messenger.NotificationCenter.messageSendError
            r0.addObserver(r1, r6)
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r6 = org.telegram.messenger.NotificationCenter.chatInfoDidLoad
            r0.addObserver(r1, r6)
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r6 = org.telegram.messenger.NotificationCenter.contactsDidLoad
            r0.addObserver(r1, r6)
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r6 = org.telegram.messenger.NotificationCenter.messagePlayingProgressDidChanged
            r0.addObserver(r1, r6)
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r6 = org.telegram.messenger.NotificationCenter.messagePlayingDidReset
            r0.addObserver(r1, r6)
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r6 = org.telegram.messenger.NotificationCenter.messagePlayingGoingToStop
            r0.addObserver(r1, r6)
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r6 = org.telegram.messenger.NotificationCenter.messagePlayingPlayStateChanged
            r0.addObserver(r1, r6)
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r6 = org.telegram.messenger.NotificationCenter.blockedUsersDidLoad
            r0.addObserver(r1, r6)
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r6 = org.telegram.messenger.NotificationCenter.fileNewChunkAvailable
            r0.addObserver(r1, r6)
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r6 = org.telegram.messenger.NotificationCenter.didCreatedNewDeleteTask
            r0.addObserver(r1, r6)
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r6 = org.telegram.messenger.NotificationCenter.messagePlayingDidStart
            r0.addObserver(r1, r6)
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r6 = org.telegram.messenger.NotificationCenter.updateMessageMedia
            r0.addObserver(r1, r6)
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r6 = org.telegram.messenger.NotificationCenter.replaceMessagesObjects
            r0.addObserver(r1, r6)
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r6 = org.telegram.messenger.NotificationCenter.notificationsSettingsUpdated
            r0.addObserver(r1, r6)
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r6 = org.telegram.messenger.NotificationCenter.replyMessagesDidLoad
            r0.addObserver(r1, r6)
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r6 = org.telegram.messenger.NotificationCenter.didReceivedWebpages
            r0.addObserver(r1, r6)
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r6 = org.telegram.messenger.NotificationCenter.didReceivedWebpagesInUpdates
            r0.addObserver(r1, r6)
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r6 = org.telegram.messenger.NotificationCenter.botInfoDidLoad
            r0.addObserver(r1, r6)
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r6 = org.telegram.messenger.NotificationCenter.chatInfoCantLoad
            r0.addObserver(r1, r6)
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r6 = org.telegram.messenger.NotificationCenter.userInfoDidLoad
            r0.addObserver(r1, r6)
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r6 = org.telegram.messenger.NotificationCenter.pinnedInfoDidLoad
            r0.addObserver(r1, r6)
            org.telegram.messenger.NotificationCenter r0 = org.telegram.messenger.NotificationCenter.getGlobalInstance()
            int r6 = org.telegram.messenger.NotificationCenter.didSetNewWallpapper
            r0.addObserver(r1, r6)
            org.telegram.messenger.NotificationCenter r0 = org.telegram.messenger.NotificationCenter.getGlobalInstance()
            int r6 = org.telegram.messenger.NotificationCenter.didApplyNewTheme
            r0.addObserver(r1, r6)
            org.telegram.messenger.NotificationCenter r0 = org.telegram.messenger.NotificationCenter.getGlobalInstance()
            int r6 = org.telegram.messenger.NotificationCenter.goingToPreviewTheme
            r0.addObserver(r1, r6)
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r6 = org.telegram.messenger.NotificationCenter.channelRightsUpdated
            r0.addObserver(r1, r6)
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r6 = org.telegram.messenger.NotificationCenter.audioRecordTooShort
            r0.addObserver(r1, r6)
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r6 = org.telegram.messenger.NotificationCenter.didUpdateReactions
            r0.addObserver(r1, r6)
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r6 = org.telegram.messenger.NotificationCenter.videoLoadingStateChanged
            r0.addObserver(r1, r6)
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r6 = org.telegram.messenger.NotificationCenter.scheduledMessagesUpdated
            r0.addObserver(r1, r6)
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r6 = org.telegram.messenger.NotificationCenter.diceStickersDidLoad
            r0.addObserver(r1, r6)
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r6 = org.telegram.messenger.NotificationCenter.dialogDeleted
            r0.addObserver(r1, r6)
            super.onFragmentCreate()
            int r0 = r1.chatMode
            r6 = 10
            if (r0 != r2) goto L_0x04f6
            java.util.ArrayList r0 = new java.util.ArrayList
            r0.<init>()
            java.util.ArrayList<java.lang.Integer> r7 = r1.pinnedMessageIds
            int r7 = r7.size()
            r10 = 0
        L_0x044a:
            if (r10 >= r7) goto L_0x047a
            java.util.ArrayList<java.lang.Integer> r12 = r1.pinnedMessageIds
            java.lang.Object r12 = r12.get(r10)
            java.lang.Integer r12 = (java.lang.Integer) r12
            java.util.HashMap<java.lang.Integer, org.telegram.messenger.MessageObject> r14 = r1.pinnedMessageObjects
            java.lang.Object r12 = r14.get(r12)
            org.telegram.messenger.MessageObject r12 = (org.telegram.messenger.MessageObject) r12
            if (r12 == 0) goto L_0x0476
            org.telegram.messenger.MessageObject r14 = new org.telegram.messenger.MessageObject
            int r15 = r12.currentAccount
            org.telegram.tgnet.TLRPC$Message r8 = r12.messageOwner
            r14.<init>(r15, r8, r13, r3)
            org.telegram.messenger.MessageObject r8 = r12.replyMessageObject
            r14.replyMessageObject = r8
            boolean r8 = r12.mediaExists
            r14.mediaExists = r8
            boolean r8 = r12.attachPathExists
            r14.attachPathExists = r8
            r0.add(r14)
        L_0x0476:
            int r10 = r10 + 1
            r8 = 0
            goto L_0x044a
        L_0x047a:
            int r7 = r1.lastLoadIndex
            int r8 = r7 + 1
            r1.lastLoadIndex = r8
            java.util.ArrayList<java.lang.Integer> r8 = r1.waitingForLoad
            java.lang.Integer r10 = java.lang.Integer.valueOf(r7)
            r8.add(r10)
            org.telegram.messenger.NotificationCenter r8 = r35.getNotificationCenter()
            int r10 = org.telegram.messenger.NotificationCenter.messagesDidLoad
            r12 = 15
            java.lang.Object[] r12 = new java.lang.Object[r12]
            long r14 = r1.dialog_id
            java.lang.Long r14 = java.lang.Long.valueOf(r14)
            r12[r3] = r14
            int r14 = r0.size()
            java.lang.Integer r14 = java.lang.Integer.valueOf(r14)
            r12[r13] = r14
            r12[r2] = r0
            r0 = 3
            java.lang.Boolean r14 = java.lang.Boolean.FALSE
            r12[r0] = r14
            r0 = 4
            r12[r0] = r4
            r0 = 5
            int r14 = r1.last_message_id
            java.lang.Integer r14 = java.lang.Integer.valueOf(r14)
            r12[r0] = r14
            r0 = 6
            r12[r0] = r4
            r0 = 7
            r12[r0] = r4
            r0 = 8
            java.lang.Integer r14 = java.lang.Integer.valueOf(r2)
            r12[r0] = r14
            r0 = 9
            java.lang.Boolean r14 = java.lang.Boolean.TRUE
            r12[r0] = r14
            int r0 = r1.classGuid
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r12[r6] = r0
            r0 = 11
            java.lang.Integer r7 = java.lang.Integer.valueOf(r7)
            r12[r0] = r7
            r0 = 12
            java.util.ArrayList<java.lang.Integer> r7 = r1.pinnedMessageIds
            java.lang.Object r7 = r7.get(r3)
            r12[r0] = r7
            r0 = 13
            r12[r0] = r4
            r0 = 14
            java.lang.Integer r4 = java.lang.Integer.valueOf(r2)
            r12[r0] = r4
            r8.postNotificationName(r10, r12)
            goto L_0x04fc
        L_0x04f6:
            boolean r0 = r1.forceHistoryEmpty
            if (r0 != 0) goto L_0x04fc
            r1.loading = r13
        L_0x04fc:
            boolean r0 = r35.isThreadChat()
            if (r0 == 0) goto L_0x050b
            int r0 = r1.highlightMessageId
            int r4 = r1.startLoadFromMessageId
            if (r0 != r4) goto L_0x057e
            r1.needSelectFromMessageId = r13
            goto L_0x057e
        L_0x050b:
            org.telegram.messenger.MessagesController r0 = r35.getMessagesController()
            long r7 = r1.dialog_id
            int r4 = r1.chatMode
            if (r4 != r13) goto L_0x0517
            r4 = 1
            goto L_0x0518
        L_0x0517:
            r4 = 0
        L_0x0518:
            r0.setLastCreatedDialogId(r7, r4, r13)
            int r0 = r1.chatMode
            if (r0 != 0) goto L_0x057e
            org.telegram.tgnet.TLRPC$EncryptedChat r0 = r1.currentEncryptedChat
            if (r0 != 0) goto L_0x052c
            org.telegram.messenger.MediaDataController r0 = r35.getMediaDataController()
            long r7 = r1.dialog_id
            r0.loadBotKeyboard(r7)
        L_0x052c:
            org.telegram.messenger.MessagesController r0 = r35.getMessagesController()
            org.telegram.tgnet.TLRPC$User r4 = r1.currentUser
            org.telegram.tgnet.TLRPC$Chat r7 = r1.currentChat
            r0.loadPeerSettings(r4, r7)
            int r0 = r1.startLoadFromMessageId
            if (r0 != 0) goto L_0x057a
            int r0 = r1.currentAccount
            android.content.SharedPreferences r0 = org.telegram.messenger.MessagesController.getNotificationsSettings(r0)
            java.lang.StringBuilder r4 = new java.lang.StringBuilder
            r4.<init>()
            java.lang.String r7 = "diditem"
            r4.append(r7)
            long r7 = r1.dialog_id
            r4.append(r7)
            java.lang.String r4 = r4.toString()
            int r4 = r0.getInt(r4, r3)
            if (r4 == 0) goto L_0x057e
            r1.wasManualScroll = r13
            r1.loadingFromOldPosition = r13
            java.lang.StringBuilder r7 = new java.lang.StringBuilder
            r7.<init>()
            java.lang.String r8 = "diditemo"
            r7.append(r8)
            long r14 = r1.dialog_id
            r7.append(r14)
            java.lang.String r7 = r7.toString()
            int r0 = r0.getInt(r7, r3)
            r1.startLoadFromMessageOffset = r0
            r1.startLoadFromMessageId = r4
            goto L_0x057e
        L_0x057a:
            r1.showScrollToMessageError = r13
            r1.needSelectFromMessageId = r13
        L_0x057e:
            org.telegram.tgnet.TLRPC$Chat r0 = r1.currentChat
            if (r0 == 0) goto L_0x0616
            org.telegram.messenger.MessagesController r0 = r35.getMessagesController()
            org.telegram.tgnet.TLRPC$Chat r4 = r1.currentChat
            int r4 = r4.id
            org.telegram.tgnet.TLRPC$ChatFull r0 = r0.getChatFull(r4)
            r1.chatInfo = r0
            org.telegram.messenger.MessagesController r0 = r35.getMessagesController()
            org.telegram.tgnet.TLRPC$Chat r4 = r1.currentChat
            int r4 = r4.id
            org.telegram.messenger.ChatObject$Call r0 = r0.getGroupCall(r4, r13)
            r1.groupCall = r0
            org.telegram.tgnet.TLRPC$Chat r0 = r1.currentChat
            boolean r0 = org.telegram.messenger.ChatObject.isChannel(r0)
            if (r0 == 0) goto L_0x05bf
            org.telegram.messenger.MessagesController r0 = r35.getMessagesController()
            org.telegram.tgnet.TLRPC$Chat r4 = r1.currentChat
            int r4 = r4.id
            boolean r0 = r0.isChannelAdminsLoaded(r4)
            if (r0 != 0) goto L_0x05bf
            org.telegram.messenger.MessagesController r0 = r35.getMessagesController()
            org.telegram.tgnet.TLRPC$Chat r4 = r1.currentChat
            int r4 = r4.id
            r0.loadChannelAdmins(r4, r13)
        L_0x05bf:
            r1.fillInviterId(r3)
            int r0 = r1.chatMode
            if (r0 == r2) goto L_0x05e1
            org.telegram.messenger.MessagesStorage r16 = r35.getMessagesStorage()
            org.telegram.tgnet.TLRPC$Chat r0 = r1.currentChat
            int r4 = r0.id
            boolean r18 = org.telegram.messenger.ChatObject.isChannel(r0)
            r19 = 0
            r20 = 1
            r21 = 0
            int r0 = r1.startLoadFromMessageId
            r17 = r4
            r22 = r0
            r16.loadChatInfo(r17, r18, r19, r20, r21, r22)
        L_0x05e1:
            int r0 = r1.chatMode
            if (r0 != 0) goto L_0x060b
            org.telegram.tgnet.TLRPC$ChatFull r0 = r1.chatInfo
            if (r0 == 0) goto L_0x060b
            org.telegram.tgnet.TLRPC$Chat r0 = r1.currentChat
            boolean r0 = org.telegram.messenger.ChatObject.isChannel(r0)
            if (r0 == 0) goto L_0x060b
            org.telegram.tgnet.TLRPC$ChatFull r0 = r1.chatInfo
            int r0 = r0.migrated_from_chat_id
            if (r0 == 0) goto L_0x060b
            boolean r0 = r35.isThreadChat()
            if (r0 != 0) goto L_0x060b
            org.telegram.tgnet.TLRPC$ChatFull r0 = r1.chatInfo
            int r4 = r0.migrated_from_chat_id
            int r4 = -r4
            long r7 = (long) r4
            r1.mergeDialogId = r7
            int[] r4 = r1.maxMessageId
            int r0 = r0.migrated_from_max_id
            r4[r13] = r0
        L_0x060b:
            org.telegram.tgnet.TLRPC$ChatFull r0 = r1.chatInfo
            if (r0 != 0) goto L_0x0611
            r0 = 1
            goto L_0x0612
        L_0x0611:
            r0 = 0
        L_0x0612:
            r1.checkGroupCallJoin(r3)
            goto L_0x0632
        L_0x0616:
            org.telegram.tgnet.TLRPC$User r0 = r1.currentUser
            if (r0 == 0) goto L_0x0635
            int r0 = r1.chatMode
            if (r0 == r2) goto L_0x062b
            org.telegram.messenger.MessagesController r0 = r35.getMessagesController()
            org.telegram.tgnet.TLRPC$User r4 = r1.currentUser
            int r7 = r1.classGuid
            int r8 = r1.startLoadFromMessageId
            r0.loadUserInfo(r4, r13, r7, r8)
        L_0x062b:
            org.telegram.tgnet.TLRPC$UserFull r0 = r1.userInfo
            if (r0 != 0) goto L_0x0631
            r0 = 1
            goto L_0x0632
        L_0x0631:
            r0 = 0
        L_0x0632:
            r21 = r0
            goto L_0x0637
        L_0x0635:
            r21 = 0
        L_0x0637:
            boolean r0 = r1.forceHistoryEmpty
            if (r0 == 0) goto L_0x0649
            boolean[] r4 = r1.endReached
            r4[r13] = r13
            r4[r3] = r13
            boolean[] r4 = r1.forwardEndReached
            r4[r13] = r13
            r4[r3] = r13
            r1.firstLoading = r3
        L_0x0649:
            int r4 = r1.chatMode
            if (r4 == r2) goto L_0x0777
            if (r0 != 0) goto L_0x0777
            java.util.ArrayList<java.lang.Integer> r0 = r1.waitingForLoad
            int r4 = r1.lastLoadIndex
            java.lang.Integer r4 = java.lang.Integer.valueOf(r4)
            r0.add(r4)
            int r0 = r1.startLoadFromMessageId
            r4 = 20
            r7 = 30
            if (r0 == 0) goto L_0x0722
            boolean r0 = r35.isThreadChat()
            if (r0 == 0) goto L_0x066e
            int r0 = r1.startLoadFromMessageId
            int r8 = r1.highlightMessageId
            if (r0 != r8) goto L_0x0722
        L_0x066e:
            int r0 = r1.startLoadFromMessageId
            r1.startLoadFromMessageIdSaved = r0
            r0 = 50
            if (r11 == 0) goto L_0x06cd
            long r8 = (long) r11
            r1.mergeDialogId = r8
            org.telegram.messenger.MessagesController r16 = r35.getMessagesController()
            long r8 = r1.mergeDialogId
            r19 = 0
            boolean r10 = r1.loadingFromOldPosition
            if (r10 == 0) goto L_0x0688
            r22 = 50
            goto L_0x069a
        L_0x0688:
            boolean r0 = org.telegram.messenger.AndroidUtilities.isTablet()
            if (r0 != 0) goto L_0x0698
            boolean r0 = r35.isThreadChat()
            if (r0 == 0) goto L_0x0695
            goto L_0x0698
        L_0x0695:
            r22 = 20
            goto L_0x069a
        L_0x0698:
            r22 = 30
        L_0x069a:
            int r0 = r1.startLoadFromMessageId
            r23 = r0
            r24 = 0
            r25 = 1
            r26 = 0
            int r0 = r1.classGuid
            r27 = r0
            r28 = 3
            r29 = 0
            org.telegram.tgnet.TLRPC$Chat r0 = r1.currentChat
            boolean r30 = org.telegram.messenger.ChatObject.isChannel(r0)
            int r0 = r1.chatMode
            r31 = r0
            int r0 = r1.threadMessageId
            r32 = r0
            int r0 = r1.replyMaxReadId
            r33 = r0
            int r0 = r1.lastLoadIndex
            r34 = r0
            int r0 = r0 + 1
            r1.lastLoadIndex = r0
            r17 = r8
            r16.loadMessages(r17, r19, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34)
            goto L_0x0777
        L_0x06cd:
            org.telegram.messenger.MessagesController r16 = r35.getMessagesController()
            long r8 = r1.dialog_id
            long r10 = r1.mergeDialogId
            boolean r12 = r1.loadingFromOldPosition
            if (r12 == 0) goto L_0x06dc
            r22 = 50
            goto L_0x06ee
        L_0x06dc:
            boolean r0 = org.telegram.messenger.AndroidUtilities.isTablet()
            if (r0 != 0) goto L_0x06ec
            boolean r0 = r35.isThreadChat()
            if (r0 == 0) goto L_0x06e9
            goto L_0x06ec
        L_0x06e9:
            r22 = 20
            goto L_0x06ee
        L_0x06ec:
            r22 = 30
        L_0x06ee:
            int r0 = r1.startLoadFromMessageId
            r23 = r0
            r24 = 0
            r25 = 1
            r26 = 0
            int r0 = r1.classGuid
            r27 = r0
            r28 = 3
            r29 = 0
            org.telegram.tgnet.TLRPC$Chat r0 = r1.currentChat
            boolean r30 = org.telegram.messenger.ChatObject.isChannel(r0)
            int r0 = r1.chatMode
            r31 = r0
            int r0 = r1.threadMessageId
            r32 = r0
            int r0 = r1.replyMaxReadId
            r33 = r0
            int r0 = r1.lastLoadIndex
            r34 = r0
            int r0 = r0 + 1
            r1.lastLoadIndex = r0
            r17 = r8
            r19 = r10
            r16.loadMessages(r17, r19, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34)
            goto L_0x0777
        L_0x0722:
            if (r9 == 0) goto L_0x072a
            int r0 = r1.lastLoadIndex
            int r0 = r0 + r13
            r1.lastLoadIndex = r0
            goto L_0x0777
        L_0x072a:
            org.telegram.messenger.MessagesController r16 = r35.getMessagesController()
            long r8 = r1.dialog_id
            long r10 = r1.mergeDialogId
            boolean r0 = org.telegram.messenger.AndroidUtilities.isTablet()
            if (r0 != 0) goto L_0x0742
            boolean r0 = r35.isThreadChat()
            if (r0 == 0) goto L_0x073f
            goto L_0x0742
        L_0x073f:
            r22 = 20
            goto L_0x0744
        L_0x0742:
            r22 = 30
        L_0x0744:
            int r0 = r1.startLoadFromMessageId
            r23 = r0
            r24 = 0
            r25 = 1
            r26 = 0
            int r0 = r1.classGuid
            r27 = r0
            r28 = 2
            r29 = 0
            org.telegram.tgnet.TLRPC$Chat r0 = r1.currentChat
            boolean r30 = org.telegram.messenger.ChatObject.isChannel(r0)
            int r0 = r1.chatMode
            r31 = r0
            int r0 = r1.threadMessageId
            r32 = r0
            int r0 = r1.replyMaxReadId
            r33 = r0
            int r0 = r1.lastLoadIndex
            r34 = r0
            int r0 = r0 + 1
            r1.lastLoadIndex = r0
            r17 = r8
            r19 = r10
            r16.loadMessages(r17, r19, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34)
        L_0x0777:
            int r0 = r1.chatMode
            if (r0 != 0) goto L_0x07c7
            boolean r0 = r35.isThreadChat()
            if (r0 != 0) goto L_0x07c7
            java.util.ArrayList<java.lang.Integer> r0 = r1.waitingForLoad
            int r4 = r1.lastLoadIndex
            java.lang.Integer r4 = java.lang.Integer.valueOf(r4)
            r0.add(r4)
            org.telegram.messenger.MessagesController r16 = r35.getMessagesController()
            long r7 = r1.dialog_id
            r17 = r7
            long r7 = r1.mergeDialogId
            r19 = r7
            r21 = 0
            r22 = 1
            r23 = 0
            r24 = 0
            r25 = 1
            r26 = 0
            int r0 = r1.classGuid
            r27 = r0
            r28 = 2
            r29 = 0
            org.telegram.tgnet.TLRPC$Chat r0 = r1.currentChat
            boolean r30 = org.telegram.messenger.ChatObject.isChannel(r0)
            r31 = 1
            int r0 = r1.threadMessageId
            r32 = r0
            int r0 = r1.replyMaxReadId
            r33 = r0
            int r0 = r1.lastLoadIndex
            r34 = r0
            int r0 = r0 + 1
            r1.lastLoadIndex = r0
            r16.loadMessages(r17, r19, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34)
        L_0x07c7:
            int r0 = r1.chatMode
            if (r0 != 0) goto L_0x0872
            if (r5 == 0) goto L_0x07dd
            org.telegram.tgnet.TLRPC$User r0 = r1.currentUser
            boolean r0 = r0.bot
            if (r0 == 0) goto L_0x07dd
            org.telegram.messenger.MediaDataController r0 = r35.getMediaDataController()
            int r4 = r1.classGuid
            r0.loadBotInfo(r5, r13, r4)
            goto L_0x081e
        L_0x07dd:
            org.telegram.tgnet.TLRPC$ChatFull r0 = r1.chatInfo
            boolean r0 = r0 instanceof org.telegram.tgnet.TLRPC$TL_chatFull
            if (r0 == 0) goto L_0x081e
            r0 = 0
        L_0x07e4:
            org.telegram.tgnet.TLRPC$ChatFull r4 = r1.chatInfo
            org.telegram.tgnet.TLRPC$ChatParticipants r4 = r4.participants
            java.util.ArrayList<org.telegram.tgnet.TLRPC$ChatParticipant> r4 = r4.participants
            int r4 = r4.size()
            if (r0 >= r4) goto L_0x081e
            org.telegram.tgnet.TLRPC$ChatFull r4 = r1.chatInfo
            org.telegram.tgnet.TLRPC$ChatParticipants r4 = r4.participants
            java.util.ArrayList<org.telegram.tgnet.TLRPC$ChatParticipant> r4 = r4.participants
            java.lang.Object r4 = r4.get(r0)
            org.telegram.tgnet.TLRPC$ChatParticipant r4 = (org.telegram.tgnet.TLRPC$ChatParticipant) r4
            org.telegram.messenger.MessagesController r5 = r35.getMessagesController()
            int r4 = r4.user_id
            java.lang.Integer r4 = java.lang.Integer.valueOf(r4)
            org.telegram.tgnet.TLRPC$User r4 = r5.getUser(r4)
            if (r4 == 0) goto L_0x081b
            boolean r5 = r4.bot
            if (r5 == 0) goto L_0x081b
            org.telegram.messenger.MediaDataController r5 = r35.getMediaDataController()
            int r4 = r4.id
            int r7 = r1.classGuid
            r5.loadBotInfo(r4, r13, r7)
        L_0x081b:
            int r0 = r0 + 1
            goto L_0x07e4
        L_0x081e:
            boolean r0 = org.telegram.messenger.AndroidUtilities.isTablet()
            if (r0 == 0) goto L_0x083b
            org.telegram.messenger.NotificationCenter r0 = r35.getNotificationCenter()
            int r4 = org.telegram.messenger.NotificationCenter.openedChatChanged
            java.lang.Object[] r2 = new java.lang.Object[r2]
            long r7 = r1.dialog_id
            java.lang.Long r5 = java.lang.Long.valueOf(r7)
            r2[r3] = r5
            java.lang.Boolean r5 = java.lang.Boolean.FALSE
            r2[r13] = r5
            r0.postNotificationName(r4, r2)
        L_0x083b:
            org.telegram.tgnet.TLRPC$User r0 = r1.currentUser
            if (r0 == 0) goto L_0x085a
            boolean r0 = org.telegram.messenger.UserObject.isReplyUser((org.telegram.tgnet.TLRPC$User) r0)
            if (r0 != 0) goto L_0x085a
            org.telegram.messenger.MessagesController r0 = r35.getMessagesController()
            android.util.SparseIntArray r0 = r0.blockePeers
            org.telegram.tgnet.TLRPC$User r2 = r1.currentUser
            int r2 = r2.id
            int r0 = r0.indexOfKey(r2)
            if (r0 < 0) goto L_0x0857
            r0 = 1
            goto L_0x0858
        L_0x0857:
            r0 = 0
        L_0x0858:
            r1.userBlocked = r0
        L_0x085a:
            org.telegram.tgnet.TLRPC$EncryptedChat r0 = r1.currentEncryptedChat
            if (r0 == 0) goto L_0x0872
            int r0 = r0.layer
            int r0 = org.telegram.messenger.AndroidUtilities.getMyLayerVersion(r0)
            r2 = 101(0x65, float:1.42E-43)
            if (r0 == r2) goto L_0x0872
            org.telegram.messenger.SecretChatHelper r0 = r35.getSecretChatHelper()
            org.telegram.tgnet.TLRPC$EncryptedChat r2 = r1.currentEncryptedChat
            r4 = 0
            r0.sendNotifyLayerMessage(r2, r4)
        L_0x0872:
            org.telegram.tgnet.TLRPC$ChatFull r0 = r1.chatInfo
            if (r0 == 0) goto L_0x0899
            int r0 = r0.linked_chat_id
            if (r0 == 0) goto L_0x0899
            org.telegram.messenger.MessagesController r0 = r35.getMessagesController()
            org.telegram.tgnet.TLRPC$ChatFull r2 = r1.chatInfo
            int r2 = r2.linked_chat_id
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            org.telegram.tgnet.TLRPC$Chat r0 = r0.getChat(r2)
            if (r0 == 0) goto L_0x0899
            boolean r2 = r0.megagroup
            if (r2 == 0) goto L_0x0899
            org.telegram.messenger.MessagesController r2 = r35.getMessagesController()
            int r4 = r1.classGuid
            r2.startShortPoll(r0, r4, r3)
        L_0x0899:
            org.telegram.tgnet.TLRPC$ChatInvite r0 = r1.chatInvite
            if (r0 == 0) goto L_0x08b9
            int r0 = r0.expires
            org.telegram.tgnet.ConnectionsManager r2 = r35.getConnectionsManager()
            int r2 = r2.getCurrentTime()
            int r0 = r0 - r2
            if (r0 >= 0) goto L_0x08ab
            goto L_0x08ac
        L_0x08ab:
            r6 = r0
        L_0x08ac:
            org.telegram.ui.-$$Lambda$ChatActivity$60upabIPS5lAs5BKWfxVP_E4yD8 r0 = new org.telegram.ui.-$$Lambda$ChatActivity$60upabIPS5lAs5BKWfxVP_E4yD8
            r0.<init>()
            r1.chatInviteRunnable = r0
            int r6 = r6 * 1000
            long r2 = (long) r6
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r0, r2)
        L_0x08b9:
            return r13
        L_0x08ba:
            return r3
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.onFragmentCreate():boolean");
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$onFragmentCreate$2 */
    public /* synthetic */ void lambda$onFragmentCreate$2$ChatActivity(MessagesStorage messagesStorage, int i, CountDownLatch countDownLatch) {
        this.currentChat = messagesStorage.getChat(i);
        countDownLatch.countDown();
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$onFragmentCreate$3 */
    public /* synthetic */ void lambda$onFragmentCreate$3$ChatActivity(MessagesStorage messagesStorage, int i, CountDownLatch countDownLatch) {
        this.currentUser = messagesStorage.getUser(i);
        countDownLatch.countDown();
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$onFragmentCreate$4 */
    public /* synthetic */ void lambda$onFragmentCreate$4$ChatActivity(MessagesStorage messagesStorage, int i, CountDownLatch countDownLatch) {
        this.currentEncryptedChat = messagesStorage.getEncryptedChat(i);
        countDownLatch.countDown();
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$onFragmentCreate$5 */
    public /* synthetic */ void lambda$onFragmentCreate$5$ChatActivity(MessagesStorage messagesStorage, CountDownLatch countDownLatch) {
        this.currentUser = messagesStorage.getUser(this.currentEncryptedChat.user_id);
        countDownLatch.countDown();
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$onFragmentCreate$8 */
    public /* synthetic */ void lambda$onFragmentCreate$8$ChatActivity() {
        this.chatInviteRunnable = null;
        AlertDialog.Builder builder = new AlertDialog.Builder((Context) getParentActivity());
        if (!ChatObject.isChannel(this.currentChat) || this.currentChat.megagroup) {
            builder.setMessage(LocaleController.getString("JoinByPeekGroupText", NUM));
            builder.setTitle(LocaleController.getString("JoinByPeekGroupTitle", NUM));
        } else {
            builder.setMessage(LocaleController.getString("JoinByPeekChannelText", NUM));
            builder.setTitle(LocaleController.getString("JoinByPeekChannelTitle", NUM));
        }
        builder.setPositiveButton(LocaleController.getString("JoinByPeekJoin", NUM), new DialogInterface.OnClickListener() {
            public final void onClick(DialogInterface dialogInterface, int i) {
                ChatActivity.this.lambda$null$6$ChatActivity(dialogInterface, i);
            }
        });
        builder.setNegativeButton(LocaleController.getString("Cancel", NUM), new DialogInterface.OnClickListener() {
            public final void onClick(DialogInterface dialogInterface, int i) {
                ChatActivity.this.lambda$null$7$ChatActivity(dialogInterface, i);
            }
        });
        showDialog(builder.create());
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$6 */
    public /* synthetic */ void lambda$null$6$ChatActivity(DialogInterface dialogInterface, int i) {
        UnreadCounterTextView unreadCounterTextView = this.bottomOverlayChatText;
        if (unreadCounterTextView != null) {
            unreadCounterTextView.callOnClick();
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$7 */
    public /* synthetic */ void lambda$null$7$ChatActivity(DialogInterface dialogInterface, int i) {
        finishFragment();
    }

    private void fillInviterId(boolean z) {
        TLRPC$Chat tLRPC$Chat = this.currentChat;
        if (tLRPC$Chat != null && this.chatInfo != null && !ChatObject.isNotInChat(tLRPC$Chat) && !this.currentChat.creator) {
            TLRPC$ChatFull tLRPC$ChatFull = this.chatInfo;
            int i = tLRPC$ChatFull.inviterId;
            if (i != 0) {
                this.chatInviterId = i;
                return;
            }
            TLRPC$ChatParticipants tLRPC$ChatParticipants = tLRPC$ChatFull.participants;
            if (tLRPC$ChatParticipants != null) {
                TLRPC$ChatParticipant tLRPC$ChatParticipant = tLRPC$ChatParticipants.self_participant;
                if (tLRPC$ChatParticipant != null) {
                    this.chatInviterId = tLRPC$ChatParticipant.inviter_id;
                    return;
                }
                int clientUserId = getUserConfig().getClientUserId();
                int size = this.chatInfo.participants.participants.size();
                for (int i2 = 0; i2 < size; i2++) {
                    TLRPC$ChatParticipant tLRPC$ChatParticipant2 = this.chatInfo.participants.participants.get(i2);
                    if (tLRPC$ChatParticipant2.user_id == clientUserId) {
                        this.chatInviterId = tLRPC$ChatParticipant2.inviter_id;
                        return;
                    }
                }
            }
            if (z && this.chatInviterId == 0) {
                getMessagesController().checkChatInviter(this.currentChat.id, false);
            }
        }
    }

    private void hideUndoViews() {
        UndoView undoView2 = this.undoView;
        if (undoView2 != null) {
            undoView2.hide(true, 0);
        }
        Bulletin bulletin = this.pinBulletin;
        if (bulletin != null) {
            bulletin.hide(false, 0);
        }
        UndoView undoView3 = this.topUndoView;
        if (undoView3 != null) {
            undoView3.hide(true, 0);
        }
    }

    public void onFragmentDestroy() {
        super.onFragmentDestroy();
        ChatActivityEnterView chatActivityEnterView2 = this.chatActivityEnterView;
        if (chatActivityEnterView2 != null) {
            chatActivityEnterView2.onDestroy();
        }
        ChatAvatarContainer chatAvatarContainer = this.avatarContainer;
        if (chatAvatarContainer != null) {
            chatAvatarContainer.onDestroy();
        }
        MentionsAdapter mentionsAdapter2 = this.mentionsAdapter;
        if (mentionsAdapter2 != null) {
            mentionsAdapter2.onDestroy();
        }
        ChatAttachAlert chatAttachAlert2 = this.chatAttachAlert;
        if (chatAttachAlert2 != null) {
            chatAttachAlert2.dismissInternal();
        }
        getNotificationCenter().onAnimationFinish(this.transitionAnimationIndex);
        getNotificationCenter().onAnimationFinish(this.scrollAnimationIndex);
        getNotificationCenter().onAnimationFinish(this.scrollCallbackAnimationIndex);
        hideUndoViews();
        Runnable runnable = this.chatInviteRunnable;
        if (runnable != null) {
            AndroidUtilities.cancelRunOnUIThread(runnable);
            this.chatInviteRunnable = null;
        }
        getNotificationCenter().removePostponeNotificationsCallback(this.postponeNotificationsWhileLoadingCallback);
        getMessagesController().setLastCreatedDialogId(this.dialog_id, this.chatMode == 1, false);
        getNotificationCenter().removeObserver(this, NotificationCenter.messagesDidLoad);
        NotificationCenter.getGlobalInstance().removeObserver(this, NotificationCenter.emojiDidLoad);
        getNotificationCenter().removeObserver(this, NotificationCenter.didUpdateConnectionState);
        getNotificationCenter().removeObserver(this, NotificationCenter.updateInterfaces);
        getNotificationCenter().removeObserver(this, NotificationCenter.didReceiveNewMessages);
        getNotificationCenter().removeObserver(this, NotificationCenter.closeChats);
        getNotificationCenter().removeObserver(this, NotificationCenter.messagesRead);
        getNotificationCenter().removeObserver(this, NotificationCenter.threadMessagesRead);
        getNotificationCenter().removeObserver(this, NotificationCenter.commentsRead);
        getNotificationCenter().removeObserver(this, NotificationCenter.changeRepliesCounter);
        getNotificationCenter().removeObserver(this, NotificationCenter.messagesDeleted);
        getNotificationCenter().removeObserver(this, NotificationCenter.historyCleared);
        getNotificationCenter().removeObserver(this, NotificationCenter.messageReceivedByServer);
        getNotificationCenter().removeObserver(this, NotificationCenter.messageReceivedByAck);
        getNotificationCenter().removeObserver(this, NotificationCenter.messageSendError);
        getNotificationCenter().removeObserver(this, NotificationCenter.chatInfoDidLoad);
        getNotificationCenter().removeObserver(this, NotificationCenter.didLoadChatInviter);
        getNotificationCenter().removeObserver(this, NotificationCenter.groupCallUpdated);
        getNotificationCenter().removeObserver(this, NotificationCenter.encryptedChatUpdated);
        getNotificationCenter().removeObserver(this, NotificationCenter.messagesReadEncrypted);
        getNotificationCenter().removeObserver(this, NotificationCenter.removeAllMessagesFromDialog);
        getNotificationCenter().removeObserver(this, NotificationCenter.contactsDidLoad);
        getNotificationCenter().removeObserver(this, NotificationCenter.messagePlayingProgressDidChanged);
        getNotificationCenter().removeObserver(this, NotificationCenter.messagePlayingDidReset);
        getNotificationCenter().removeObserver(this, NotificationCenter.screenshotTook);
        getNotificationCenter().removeObserver(this, NotificationCenter.blockedUsersDidLoad);
        getNotificationCenter().removeObserver(this, NotificationCenter.fileNewChunkAvailable);
        getNotificationCenter().removeObserver(this, NotificationCenter.didCreatedNewDeleteTask);
        getNotificationCenter().removeObserver(this, NotificationCenter.messagePlayingDidStart);
        getNotificationCenter().removeObserver(this, NotificationCenter.messagePlayingGoingToStop);
        getNotificationCenter().removeObserver(this, NotificationCenter.updateMessageMedia);
        getNotificationCenter().removeObserver(this, NotificationCenter.replaceMessagesObjects);
        getNotificationCenter().removeObserver(this, NotificationCenter.notificationsSettingsUpdated);
        getNotificationCenter().removeObserver(this, NotificationCenter.replyMessagesDidLoad);
        getNotificationCenter().removeObserver(this, NotificationCenter.didReceivedWebpages);
        getNotificationCenter().removeObserver(this, NotificationCenter.didReceivedWebpagesInUpdates);
        getNotificationCenter().removeObserver(this, NotificationCenter.messagesReadContent);
        getNotificationCenter().removeObserver(this, NotificationCenter.botInfoDidLoad);
        getNotificationCenter().removeObserver(this, NotificationCenter.botKeyboardDidLoad);
        getNotificationCenter().removeObserver(this, NotificationCenter.chatSearchResultsAvailable);
        getNotificationCenter().removeObserver(this, NotificationCenter.chatSearchResultsLoading);
        getNotificationCenter().removeObserver(this, NotificationCenter.messagePlayingPlayStateChanged);
        getNotificationCenter().removeObserver(this, NotificationCenter.didUpdateMessagesViews);
        getNotificationCenter().removeObserver(this, NotificationCenter.chatInfoCantLoad);
        getNotificationCenter().removeObserver(this, NotificationCenter.didLoadPinnedMessages);
        getNotificationCenter().removeObserver(this, NotificationCenter.peerSettingsDidLoad);
        getNotificationCenter().removeObserver(this, NotificationCenter.newDraftReceived);
        getNotificationCenter().removeObserver(this, NotificationCenter.userInfoDidLoad);
        getNotificationCenter().removeObserver(this, NotificationCenter.pinnedInfoDidLoad);
        NotificationCenter.getGlobalInstance().removeObserver(this, NotificationCenter.didSetNewWallpapper);
        NotificationCenter.getGlobalInstance().removeObserver(this, NotificationCenter.didApplyNewTheme);
        NotificationCenter.getGlobalInstance().removeObserver(this, NotificationCenter.goingToPreviewTheme);
        getNotificationCenter().removeObserver(this, NotificationCenter.channelRightsUpdated);
        getNotificationCenter().removeObserver(this, NotificationCenter.updateMentionsCount);
        getNotificationCenter().removeObserver(this, NotificationCenter.audioRecordTooShort);
        getNotificationCenter().removeObserver(this, NotificationCenter.didUpdatePollResults);
        getNotificationCenter().removeObserver(this, NotificationCenter.didUpdateReactions);
        getNotificationCenter().removeObserver(this, NotificationCenter.chatOnlineCountDidLoad);
        getNotificationCenter().removeObserver(this, NotificationCenter.videoLoadingStateChanged);
        getNotificationCenter().removeObserver(this, NotificationCenter.scheduledMessagesUpdated);
        getNotificationCenter().removeObserver(this, NotificationCenter.diceStickersDidLoad);
        getNotificationCenter().removeObserver(this, NotificationCenter.dialogDeleted);
        if (this.currentEncryptedChat != null) {
            getNotificationCenter().removeObserver(this, NotificationCenter.didVerifyMessagesStickers);
        }
        if (this.chatMode == 0 && AndroidUtilities.isTablet()) {
            getNotificationCenter().postNotificationName(NotificationCenter.openedChatChanged, Long.valueOf(this.dialog_id), Boolean.TRUE);
        }
        if (this.currentUser != null) {
            MediaController.getInstance().stopMediaObserver();
        }
        if (this.currentEncryptedChat != null) {
            try {
                if (Build.VERSION.SDK_INT >= 23 && (SharedConfig.passcodeHash.length() == 0 || SharedConfig.allowScreenCapture)) {
                    AndroidUtilities.setFlagSecure(this, false);
                }
            } catch (Throwable th) {
                FileLog.e(th);
            }
        }
        if (this.currentUser != null) {
            getMessagesController().cancelLoadFullUser(this.currentUser.id);
        }
        AndroidUtilities.removeAdjustResize(getParentActivity(), this.classGuid);
        StickersAdapter stickersAdapter2 = this.stickersAdapter;
        if (stickersAdapter2 != null) {
            stickersAdapter2.onDestroy();
        }
        ChatAttachAlert chatAttachAlert3 = this.chatAttachAlert;
        if (chatAttachAlert3 != null) {
            chatAttachAlert3.onDestroy();
        }
        AndroidUtilities.unlockOrientation(getParentActivity());
        if (ChatObject.isChannel(this.currentChat)) {
            getMessagesController().startShortPoll(this.currentChat, this.classGuid, true);
            TLRPC$ChatFull tLRPC$ChatFull = this.chatInfo;
            if (!(tLRPC$ChatFull == null || tLRPC$ChatFull.linked_chat_id == 0)) {
                getMessagesController().startShortPoll(getMessagesController().getChat(Integer.valueOf(this.chatInfo.linked_chat_id)), this.classGuid, true);
            }
        }
        TextSelectionHelper.ChatListTextSelectionHelper chatListTextSelectionHelper = this.textSelectionHelper;
        if (chatListTextSelectionHelper != null) {
            chatListTextSelectionHelper.clear();
        }
        ChatListItemAnimator chatListItemAnimator2 = this.chatListItemAnimator;
        if (chatListItemAnimator2 != null) {
            chatListItemAnimator2.onDestroy();
        }
        PinchToZoomHelper pinchToZoomHelper2 = this.pinchToZoomHelper;
        if (pinchToZoomHelper2 != null) {
            pinchToZoomHelper2.clear();
        }
    }

    /* JADX WARNING: Removed duplicated region for block: B:141:0x0466  */
    /* JADX WARNING: Removed duplicated region for block: B:151:0x04a4  */
    /* JADX WARNING: Removed duplicated region for block: B:284:0x09c4  */
    /* JADX WARNING: Removed duplicated region for block: B:292:0x0a2a  */
    /* JADX WARNING: Removed duplicated region for block: B:295:0x0b52  */
    /* JADX WARNING: Removed duplicated region for block: B:311:0x0e18  */
    /* JADX WARNING: Removed duplicated region for block: B:314:0x0e7d  */
    /* JADX WARNING: Removed duplicated region for block: B:317:0x0var_  */
    /* JADX WARNING: Removed duplicated region for block: B:320:0x0var_  */
    /* JADX WARNING: Removed duplicated region for block: B:328:0x11b1  */
    /* JADX WARNING: Removed duplicated region for block: B:329:0x11b3  */
    /* JADX WARNING: Removed duplicated region for block: B:334:0x11c8  */
    /* JADX WARNING: Removed duplicated region for block: B:335:0x11ca  */
    /* JADX WARNING: Removed duplicated region for block: B:338:0x11d4  */
    /* JADX WARNING: Removed duplicated region for block: B:339:0x11d7  */
    /* JADX WARNING: Removed duplicated region for block: B:342:0x122e  */
    /* JADX WARNING: Removed duplicated region for block: B:343:0x124d  */
    /* JADX WARNING: Removed duplicated region for block: B:346:0x12f6  */
    /* JADX WARNING: Removed duplicated region for block: B:347:0x1315  */
    /* JADX WARNING: Removed duplicated region for block: B:350:0x1427  */
    /* JADX WARNING: Removed duplicated region for block: B:353:0x1544  */
    /* JADX WARNING: Removed duplicated region for block: B:358:0x1575  */
    /* JADX WARNING: Removed duplicated region for block: B:359:0x1577  */
    /* JADX WARNING: Removed duplicated region for block: B:364:0x1585  */
    /* JADX WARNING: Removed duplicated region for block: B:365:0x1587  */
    /* JADX WARNING: Removed duplicated region for block: B:368:0x158f  */
    /* JADX WARNING: Removed duplicated region for block: B:371:0x1641  */
    /* JADX WARNING: Removed duplicated region for block: B:375:0x173e  */
    /* JADX WARNING: Removed duplicated region for block: B:385:0x187f  */
    /* JADX WARNING: Removed duplicated region for block: B:395:0x1baf  */
    /* JADX WARNING: Removed duplicated region for block: B:398:0x1d69  */
    /* JADX WARNING: Removed duplicated region for block: B:403:0x1da9  */
    /* JADX WARNING: Removed duplicated region for block: B:408:0x1dbf  */
    /* JADX WARNING: Removed duplicated region for block: B:424:0x1e17  */
    /* JADX WARNING: Removed duplicated region for block: B:427:0x1e65  */
    /* JADX WARNING: Removed duplicated region for block: B:430:0x1e84 A[ADDED_TO_REGION] */
    /* JADX WARNING: Removed duplicated region for block: B:436:0x1ea8  */
    /* JADX WARNING: Removed duplicated region for block: B:439:0x1eb1  */
    /* JADX WARNING: Removed duplicated region for block: B:440:0x1ec0  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public android.view.View createView(android.content.Context r40) {
        /*
            r39 = this;
            r7 = r39
            r8 = r40
            org.telegram.ui.Cells.TextSelectionHelper$ChatListTextSelectionHelper r0 = new org.telegram.ui.Cells.TextSelectionHelper$ChatListTextSelectionHelper
            r0.<init>()
            r7.textSelectionHelper = r0
            int r0 = r7.reportType
            java.lang.String r9 = "actionBarActionModeDefaultSelector"
            java.lang.String r10 = "actionBarActionModeDefaultIcon"
            r11 = 0
            if (r0 < 0) goto L_0x0043
            org.telegram.ui.ActionBar.ActionBar r0 = r7.actionBar
            java.lang.String r1 = "actionBarActionModeDefault"
            int r1 = org.telegram.ui.ActionBar.Theme.getColor(r1)
            r0.setBackgroundColor(r1)
            org.telegram.ui.ActionBar.ActionBar r0 = r7.actionBar
            int r1 = org.telegram.ui.ActionBar.Theme.getColor(r10)
            r0.setItemsColor(r1, r11)
            org.telegram.ui.ActionBar.ActionBar r0 = r7.actionBar
            int r1 = org.telegram.ui.ActionBar.Theme.getColor(r9)
            r0.setItemsBackgroundColor(r1, r11)
            org.telegram.ui.ActionBar.ActionBar r0 = r7.actionBar
            int r1 = org.telegram.ui.ActionBar.Theme.getColor(r10)
            r0.setTitleColor(r1)
            org.telegram.ui.ActionBar.ActionBar r0 = r7.actionBar
            int r1 = org.telegram.ui.ActionBar.Theme.getColor(r10)
            r0.setSubtitleColor(r1)
        L_0x0043:
            java.util.ArrayList<org.telegram.ui.Cells.ChatMessageCell> r0 = r7.chatMessageCellsCache
            boolean r0 = r0.isEmpty()
            if (r0 == 0) goto L_0x005d
            r0 = 0
        L_0x004c:
            r1 = 15
            if (r0 >= r1) goto L_0x005d
            java.util.ArrayList<org.telegram.ui.Cells.ChatMessageCell> r1 = r7.chatMessageCellsCache
            org.telegram.ui.Cells.ChatMessageCell r2 = new org.telegram.ui.Cells.ChatMessageCell
            r2.<init>(r8)
            r1.add(r2)
            int r0 = r0 + 1
            goto L_0x004c
        L_0x005d:
            r0 = 1
            r1 = 1
        L_0x005f:
            if (r1 < 0) goto L_0x0079
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r2 = r7.selectedMessagesIds
            r2 = r2[r1]
            r2.clear()
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r2 = r7.selectedMessagesCanCopyIds
            r2 = r2[r1]
            r2.clear()
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r2 = r7.selectedMessagesCanStarIds
            r2 = r2[r1]
            r2.clear()
            int r1 = r1 + -1
            goto L_0x005f
        L_0x0079:
            r12 = 0
            r7.scheduledOrNoSoundHint = r12
            r7.infoTopView = r12
            r7.aspectRatioFrameLayout = r12
            r7.videoTextureView = r12
            r7.searchAsListHint = r12
            r7.mediaBanTooltip = r12
            r7.noSoundHintView = r12
            r7.forwardHintView = r12
            r7.checksHintView = r12
            r7.textSelectionHint = r12
            r7.emojiButtonRed = r12
            r7.gifHintTextView = r12
            r7.pollHintView = r12
            r7.timerHintView = r12
            r7.videoPlayerContainer = r12
            r7.voiceHintTextView = r12
            r7.blurredView = r12
            r7.dummyMessageCell = r12
            r7.cantDeleteMessagesCount = r11
            r7.canEditMessagesCount = r11
            r7.cantForwardMessagesCount = r11
            r7.canForwardMessagesCount = r11
            r7.cantSaveMessagesCount = r11
            r7.canSaveMusicCount = r11
            r7.canSaveDocumentsCount = r11
            r7.hasOwnBackground = r0
            org.telegram.ui.Components.ChatAttachAlert r1 = r7.chatAttachAlert
            if (r1 == 0) goto L_0x00c4
            boolean r1 = r1.isShowing()     // Catch:{ Exception -> 0x00bd }
            if (r1 == 0) goto L_0x00bd
            org.telegram.ui.Components.ChatAttachAlert r1 = r7.chatAttachAlert     // Catch:{ Exception -> 0x00bd }
            r1.dismiss()     // Catch:{ Exception -> 0x00bd }
        L_0x00bd:
            org.telegram.ui.Components.ChatAttachAlert r1 = r7.chatAttachAlert
            r1.onDestroy()
            r7.chatAttachAlert = r12
        L_0x00c4:
            org.telegram.ui.Adapters.StickersAdapter r1 = r7.stickersAdapter
            if (r1 == 0) goto L_0x00cd
            r1.onDestroy()
            r7.stickersAdapter = r12
        L_0x00cd:
            org.telegram.ui.ActionBar.Theme.createChatResources(r8, r11)
            org.telegram.ui.ActionBar.ActionBar r1 = r7.actionBar
            r1.setAddToContainer(r11)
            boolean r1 = r7.inPreviewMode
            if (r1 == 0) goto L_0x00df
            org.telegram.ui.ActionBar.ActionBar r1 = r7.actionBar
            r1.setBackButtonDrawable(r12)
            goto L_0x00f0
        L_0x00df:
            org.telegram.ui.ActionBar.ActionBar r1 = r7.actionBar
            org.telegram.ui.ActionBar.BackDrawable r2 = new org.telegram.ui.ActionBar.BackDrawable
            int r3 = r7.reportType
            if (r3 < 0) goto L_0x00e9
            r3 = 1
            goto L_0x00ea
        L_0x00e9:
            r3 = 0
        L_0x00ea:
            r2.<init>(r3)
            r1.setBackButtonDrawable(r2)
        L_0x00f0:
            org.telegram.ui.ActionBar.ActionBar r1 = r7.actionBar
            org.telegram.ui.ChatActivity$7 r2 = new org.telegram.ui.ChatActivity$7
            r2.<init>()
            r1.setActionBarMenuOnItemClick(r2)
            org.telegram.ui.Components.ChatAvatarContainer r1 = r7.avatarContainer
            if (r1 == 0) goto L_0x0101
            r1.onDestroy()
        L_0x0101:
            org.telegram.ui.Components.ChatAvatarContainer r1 = new org.telegram.ui.Components.ChatAvatarContainer
            org.telegram.tgnet.TLRPC$EncryptedChat r2 = r7.currentEncryptedChat
            if (r2 == 0) goto L_0x0109
            r2 = 1
            goto L_0x010a
        L_0x0109:
            r2 = 0
        L_0x010a:
            r1.<init>(r8, r7, r2)
            r7.avatarContainer = r1
            r2 = 1065353216(0x3var_, float:1.0)
            org.telegram.messenger.AndroidUtilities.updateViewVisibilityAnimated(r1, r0, r2, r11)
            boolean r1 = r7.inPreviewMode
            if (r1 != 0) goto L_0x011c
            boolean r1 = r7.inBubbleMode
            if (r1 == 0) goto L_0x0121
        L_0x011c:
            org.telegram.ui.Components.ChatAvatarContainer r1 = r7.avatarContainer
            r1.setOccupyStatusBar(r11)
        L_0x0121:
            int r1 = r7.reportType
            r13 = 2
            r14 = 4
            if (r1 < 0) goto L_0x017a
            if (r1 != 0) goto L_0x0138
            org.telegram.ui.ActionBar.ActionBar r1 = r7.actionBar
            r2 = 2131627158(0x7f0e0CLASSNAME, float:1.8881573E38)
            java.lang.String r3 = "ReportChatSpam"
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r3, r2)
            r1.setTitle(r2)
            goto L_0x016b
        L_0x0138:
            if (r1 != r13) goto L_0x0149
            org.telegram.ui.ActionBar.ActionBar r1 = r7.actionBar
            r2 = 2131627159(0x7f0e0CLASSNAME, float:1.8881575E38)
            java.lang.String r3 = "ReportChatViolence"
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r3, r2)
            r1.setTitle(r2)
            goto L_0x016b
        L_0x0149:
            r2 = 3
            if (r1 != r2) goto L_0x015b
            org.telegram.ui.ActionBar.ActionBar r1 = r7.actionBar
            r2 = 2131627152(0x7f0e0CLASSNAME, float:1.888156E38)
            java.lang.String r3 = "ReportChatChild"
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r3, r2)
            r1.setTitle(r2)
            goto L_0x016b
        L_0x015b:
            if (r1 != r14) goto L_0x016b
            org.telegram.ui.ActionBar.ActionBar r1 = r7.actionBar
            r2 = 2131627156(0x7f0e0CLASSNAME, float:1.8881568E38)
            java.lang.String r3 = "ReportChatPornography"
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r3, r2)
            r1.setTitle(r2)
        L_0x016b:
            org.telegram.ui.ActionBar.ActionBar r1 = r7.actionBar
            r2 = 2131627164(0x7f0e0c9c, float:1.8881585E38)
            java.lang.String r3 = "ReportSelectMessages"
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r3, r2)
            r1.setSubtitle(r2)
            goto L_0x01a4
        L_0x017a:
            org.telegram.ui.ActionBar.ActionBar r1 = r7.actionBar
            org.telegram.ui.Components.ChatAvatarContainer r2 = r7.avatarContainer
            r15 = -2
            r16 = -1082130432(0xffffffffbvar_, float:-1.0)
            r17 = 51
            boolean r3 = r7.inPreviewMode
            if (r3 != 0) goto L_0x018c
            r3 = 1113587712(0x42600000, float:56.0)
            r18 = 1113587712(0x42600000, float:56.0)
            goto L_0x0197
        L_0x018c:
            int r3 = r7.chatMode
            if (r3 != r13) goto L_0x0193
            r3 = 10
            goto L_0x0194
        L_0x0193:
            r3 = 0
        L_0x0194:
            float r3 = (float) r3
            r18 = r3
        L_0x0197:
            r19 = 0
            r20 = 1109393408(0x42200000, float:40.0)
            r21 = 0
            android.widget.FrameLayout$LayoutParams r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r15, r16, r17, r18, r19, r20, r21)
            r1.addView(r2, r11, r3)
        L_0x01a4:
            org.telegram.ui.ActionBar.ActionBar r1 = r7.actionBar
            org.telegram.ui.ActionBar.ActionBarMenu r1 = r1.createMenu()
            org.telegram.tgnet.TLRPC$EncryptedChat r2 = r7.currentEncryptedChat
            r15 = 8
            if (r2 != 0) goto L_0x01f5
            int r2 = r7.chatMode
            if (r2 != 0) goto L_0x01f5
            int r2 = r7.reportType
            if (r2 >= 0) goto L_0x01f5
            r2 = 2131165479(0x7var_, float:1.7945176E38)
            org.telegram.ui.ActionBar.ActionBarMenuItem r2 = r1.addItem((int) r11, (int) r2)
            r2.setIsSearchField(r0)
            org.telegram.ui.ChatActivity$8 r3 = new org.telegram.ui.ChatActivity$8
            r3.<init>()
            r2.setActionBarMenuItemSearchListener(r3)
            r7.searchItem = r2
            r3 = 2131627264(0x7f0e0d00, float:1.8881788E38)
            java.lang.String r4 = "Search"
            java.lang.String r3 = org.telegram.messenger.LocaleController.getString(r4, r3)
            r2.setSearchFieldHint(r3)
            int r2 = r7.threadMessageId
            if (r2 != 0) goto L_0x01e4
            org.telegram.tgnet.TLRPC$User r2 = r7.currentUser
            boolean r2 = org.telegram.messenger.UserObject.isReplyUser((org.telegram.tgnet.TLRPC$User) r2)
            if (r2 == 0) goto L_0x01ee
        L_0x01e4:
            org.telegram.messenger.MessageObject r2 = r7.threadMessageObject
            if (r2 == 0) goto L_0x01f3
            int r2 = r2.getRepliesCount()
            if (r2 != 0) goto L_0x01f3
        L_0x01ee:
            org.telegram.ui.ActionBar.ActionBarMenuItem r2 = r7.searchItem
            r2.setVisibility(r15)
        L_0x01f3:
            r7.searchItemVisible = r11
        L_0x01f5:
            int r2 = r7.chatMode
            r6 = 16
            java.lang.String r16 = "fonts/rmedium.ttf"
            r3 = 51
            if (r2 != 0) goto L_0x051c
            int r2 = r7.threadMessageId
            if (r2 != 0) goto L_0x051c
            org.telegram.tgnet.TLRPC$User r2 = r7.currentUser
            boolean r2 = org.telegram.messenger.UserObject.isReplyUser((org.telegram.tgnet.TLRPC$User) r2)
            if (r2 != 0) goto L_0x051c
            int r2 = r7.reportType
            if (r2 >= 0) goto L_0x051c
            r2 = 2131165476(0x7var_, float:1.794517E38)
            org.telegram.ui.ActionBar.ActionBarMenuItem r2 = r1.addItem((int) r11, (int) r2)
            r7.headerItem = r2
            r13 = 2131623986(0x7f0e0032, float:1.8875139E38)
            java.lang.String r14 = "AccDescrMoreOptions"
            java.lang.String r13 = org.telegram.messenger.LocaleController.getString(r14, r13)
            r2.setContentDescription(r13)
            org.telegram.tgnet.TLRPC$User r2 = r7.currentUser
            r13 = 33
            if (r2 == 0) goto L_0x0289
            org.telegram.ui.ActionBar.ActionBarMenuItem r2 = r7.headerItem
            r14 = 32
            r0 = 2131165723(0x7var_b, float:1.7945671E38)
            r4 = 2131624603(0x7f0e029b, float:1.887639E38)
            java.lang.String r5 = "Call"
            java.lang.String r4 = org.telegram.messenger.LocaleController.getString(r5, r4)
            r2.addSubItem(r14, r0, r4)
            int r0 = android.os.Build.VERSION.SDK_INT
            r2 = 18
            if (r0 < r2) goto L_0x0254
            org.telegram.ui.ActionBar.ActionBarMenuItem r0 = r7.headerItem
            r2 = 2131165839(0x7var_f, float:1.7945906E38)
            r4 = 2131627937(0x7f0e0fa1, float:1.8883153E38)
            java.lang.String r5 = "VideoCall"
            java.lang.String r4 = org.telegram.messenger.LocaleController.getString(r5, r4)
            r0.addSubItem(r13, r2, r4)
        L_0x0254:
            org.telegram.messenger.MessagesController r0 = r39.getMessagesController()
            org.telegram.tgnet.TLRPC$User r2 = r7.currentUser
            int r2 = r2.id
            org.telegram.tgnet.TLRPC$UserFull r0 = r0.getUserFull(r2)
            if (r0 == 0) goto L_0x027d
            boolean r2 = r0.phone_calls_available
            if (r2 == 0) goto L_0x027d
            org.telegram.ui.ActionBar.ActionBarMenuItem r2 = r7.headerItem
            r4 = 32
            r2.showSubItem(r4)
            boolean r0 = r0.video_calls_available
            if (r0 == 0) goto L_0x0277
            org.telegram.ui.ActionBar.ActionBarMenuItem r0 = r7.headerItem
            r0.showSubItem(r13)
            goto L_0x0289
        L_0x0277:
            org.telegram.ui.ActionBar.ActionBarMenuItem r0 = r7.headerItem
            r0.hideSubItem(r13)
            goto L_0x0289
        L_0x027d:
            org.telegram.ui.ActionBar.ActionBarMenuItem r0 = r7.headerItem
            r2 = 32
            r0.hideSubItem(r2)
            org.telegram.ui.ActionBar.ActionBarMenuItem r0 = r7.headerItem
            r0.hideSubItem(r13)
        L_0x0289:
            r0 = 2131165476(0x7var_, float:1.794517E38)
            org.telegram.ui.ActionBar.ActionBarMenuItem r0 = r1.addItem((int) r11, (int) r0)
            r7.editTextItem = r0
            r2 = 2131623986(0x7f0e0032, float:1.8875139E38)
            java.lang.String r4 = "AccDescrMoreOptions"
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r4, r2)
            r0.setContentDescription(r2)
            org.telegram.ui.ActionBar.ActionBarMenuItem r0 = r7.editTextItem
            r0.setTag(r12)
            org.telegram.ui.ActionBar.ActionBarMenuItem r0 = r7.editTextItem
            r0.setVisibility(r15)
            android.text.SpannableStringBuilder r0 = new android.text.SpannableStringBuilder
            r2 = 2131624570(0x7f0e027a, float:1.8876323E38)
            java.lang.String r4 = "Bold"
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r4, r2)
            r0.<init>(r2)
            org.telegram.ui.Components.TypefaceSpan r2 = new org.telegram.ui.Components.TypefaceSpan
            android.graphics.Typeface r4 = org.telegram.messenger.AndroidUtilities.getTypeface(r16)
            r2.<init>(r4)
            int r4 = r0.length()
            r0.setSpan(r2, r11, r4, r13)
            org.telegram.ui.ActionBar.ActionBarMenuItem r2 = r7.editTextItem
            r4 = 50
            r2.addSubItem(r4, r0)
            android.text.SpannableStringBuilder r0 = new android.text.SpannableStringBuilder
            r2 = 2131625880(0x7f0e0798, float:1.887898E38)
            java.lang.String r4 = "Italic"
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r4, r2)
            r0.<init>(r2)
            org.telegram.ui.Components.TypefaceSpan r2 = new org.telegram.ui.Components.TypefaceSpan
            java.lang.String r4 = "fonts/ritalic.ttf"
            android.graphics.Typeface r4 = org.telegram.messenger.AndroidUtilities.getTypeface(r4)
            r2.<init>(r4)
            int r4 = r0.length()
            r0.setSpan(r2, r11, r4, r13)
            org.telegram.ui.ActionBar.ActionBarMenuItem r2 = r7.editTextItem
            r2.addSubItem(r3, r0)
            android.text.SpannableStringBuilder r0 = new android.text.SpannableStringBuilder
            r2 = 2131626190(0x7f0e08ce, float:1.887961E38)
            java.lang.String r4 = "Mono"
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r4, r2)
            r0.<init>(r2)
            org.telegram.ui.Components.TypefaceSpan r2 = new org.telegram.ui.Components.TypefaceSpan
            android.graphics.Typeface r4 = android.graphics.Typeface.MONOSPACE
            r2.<init>(r4)
            int r4 = r0.length()
            r0.setSpan(r2, r11, r4, r13)
            org.telegram.ui.ActionBar.ActionBarMenuItem r2 = r7.editTextItem
            r4 = 52
            r2.addSubItem(r4, r0)
            org.telegram.tgnet.TLRPC$EncryptedChat r0 = r7.currentEncryptedChat
            if (r0 == 0) goto L_0x0323
            int r0 = r0.layer
            int r0 = org.telegram.messenger.AndroidUtilities.getPeerLayerVersion(r0)
            r2 = 101(0x65, float:1.42E-43)
            if (r0 < r2) goto L_0x0379
        L_0x0323:
            android.text.SpannableStringBuilder r0 = new android.text.SpannableStringBuilder
            r2 = 2131627598(0x7f0e0e4e, float:1.8882465E38)
            java.lang.String r4 = "Strike"
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r4, r2)
            r0.<init>(r2)
            org.telegram.ui.Components.TextStyleSpan$TextStyleRun r2 = new org.telegram.ui.Components.TextStyleSpan$TextStyleRun
            r2.<init>()
            int r4 = r2.flags
            r4 = r4 | r15
            r2.flags = r4
            org.telegram.ui.Components.TextStyleSpan r4 = new org.telegram.ui.Components.TextStyleSpan
            r4.<init>(r2)
            int r2 = r0.length()
            r0.setSpan(r4, r11, r2, r13)
            org.telegram.ui.ActionBar.ActionBarMenuItem r2 = r7.editTextItem
            r4 = 55
            r2.addSubItem(r4, r0)
            android.text.SpannableStringBuilder r0 = new android.text.SpannableStringBuilder
            r2 = 2131627804(0x7f0e0f1c, float:1.8882883E38)
            java.lang.String r4 = "Underline"
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r4, r2)
            r0.<init>(r2)
            org.telegram.ui.Components.TextStyleSpan$TextStyleRun r2 = new org.telegram.ui.Components.TextStyleSpan$TextStyleRun
            r2.<init>()
            int r4 = r2.flags
            r4 = r4 | r6
            r2.flags = r4
            org.telegram.ui.Components.TextStyleSpan r4 = new org.telegram.ui.Components.TextStyleSpan
            r4.<init>(r2)
            int r2 = r0.length()
            r0.setSpan(r4, r11, r2, r13)
            org.telegram.ui.ActionBar.ActionBarMenuItem r2 = r7.editTextItem
            r4 = 56
            r2.addSubItem(r4, r0)
        L_0x0379:
            org.telegram.ui.ActionBar.ActionBarMenuItem r0 = r7.editTextItem
            r2 = 53
            r4 = 2131625010(0x7f0e0432, float:1.8877216E38)
            java.lang.String r5 = "CreateLink"
            java.lang.String r4 = org.telegram.messenger.LocaleController.getString(r5, r4)
            r0.addSubItem(r2, r4)
            org.telegram.ui.ActionBar.ActionBarMenuItem r0 = r7.editTextItem
            r2 = 54
            r4 = 2131627119(0x7f0e0c6f, float:1.8881493E38)
            java.lang.String r5 = "Regular"
            java.lang.String r4 = org.telegram.messenger.LocaleController.getString(r5, r4)
            r0.addSubItem(r2, r4)
            org.telegram.ui.ActionBar.ActionBarMenuItem r0 = r7.searchItem
            if (r0 == 0) goto L_0x03b0
            org.telegram.ui.ActionBar.ActionBarMenuItem r0 = r7.headerItem
            r2 = 40
            r4 = 2131165815(0x7var_, float:1.7945858E38)
            r5 = 2131627264(0x7f0e0d00, float:1.8881788E38)
            java.lang.String r13 = "Search"
            java.lang.String r5 = org.telegram.messenger.LocaleController.getString(r13, r5)
            r0.addSubItem(r2, r4, r5)
        L_0x03b0:
            org.telegram.tgnet.TLRPC$Chat r0 = r7.currentChat
            if (r0 == 0) goto L_0x03d2
            boolean r2 = r0.creator
            if (r2 != 0) goto L_0x03d2
            boolean r0 = org.telegram.messenger.ChatObject.hasAdminRights(r0)
            if (r0 != 0) goto L_0x03d2
            org.telegram.ui.ActionBar.ActionBarMenuItem r0 = r7.headerItem
            r2 = 2131165798(0x7var_, float:1.7945823E38)
            r4 = 2131627151(0x7f0e0c8f, float:1.8881558E38)
            java.lang.String r5 = "ReportChat"
            java.lang.String r4 = org.telegram.messenger.LocaleController.getString(r5, r4)
            r5 = 21
            r0.addSubItem(r5, r2, r4)
            goto L_0x03d4
        L_0x03d2:
            r5 = 21
        L_0x03d4:
            org.telegram.tgnet.TLRPC$User r0 = r7.currentUser
            if (r0 == 0) goto L_0x03e7
            org.telegram.ui.ActionBar.ActionBarMenuItem r0 = r7.headerItem
            r2 = 2131165712(0x7var_, float:1.7945649E38)
            java.lang.String r4 = ""
            r13 = 17
            org.telegram.ui.ActionBar.ActionBarMenuSubItem r0 = r0.addSubItem(r13, r2, r4)
            r7.addContactItem = r0
        L_0x03e7:
            org.telegram.tgnet.TLRPC$EncryptedChat r0 = r7.currentEncryptedChat
            if (r0 == 0) goto L_0x0401
            org.telegram.ui.ActionBar.ActionBarMenuItem r0 = r7.headerItem
            r2 = 13
            r4 = 2131165830(0x7var_, float:1.7945888E38)
            r13 = 2131627406(0x7f0e0d8e, float:1.8882076E38)
            java.lang.String r14 = "SetTimer"
            java.lang.String r13 = org.telegram.messenger.LocaleController.getString(r14, r13)
            org.telegram.ui.ActionBar.ActionBarMenuSubItem r0 = r0.addSubItem(r2, r4, r13)
            r7.timeItem2 = r0
        L_0x0401:
            org.telegram.tgnet.TLRPC$Chat r0 = r7.currentChat
            boolean r0 = org.telegram.messenger.ChatObject.isChannel(r0)
            if (r0 == 0) goto L_0x0436
            org.telegram.tgnet.TLRPC$Chat r0 = r7.currentChat
            boolean r2 = r0.megagroup
            if (r2 == 0) goto L_0x0418
            java.lang.String r0 = r0.username
            boolean r0 = android.text.TextUtils.isEmpty(r0)
            if (r0 == 0) goto L_0x0418
            goto L_0x0436
        L_0x0418:
            org.telegram.tgnet.TLRPC$Chat r0 = r7.currentChat
            r2 = 13
            boolean r0 = org.telegram.messenger.ChatObject.canUserDoAdminAction(r0, r2)
            if (r0 == 0) goto L_0x0449
            org.telegram.ui.ActionBar.ActionBarMenuItem r0 = r7.headerItem
            r2 = 26
            r4 = 2131165830(0x7var_, float:1.7945888E38)
            r13 = 2131624439(0x7f0e01f7, float:1.8876058E38)
            java.lang.String r14 = "AutoDeleteSetTimer"
            java.lang.String r13 = org.telegram.messenger.LocaleController.getString(r14, r13)
            r0.addSubItem(r2, r4, r13)
            goto L_0x0449
        L_0x0436:
            org.telegram.ui.ActionBar.ActionBarMenuItem r0 = r7.headerItem
            r2 = 15
            r4 = 2131165728(0x7var_, float:1.7945681E38)
            r13 = 2131624895(0x7f0e03bf, float:1.8876983E38)
            java.lang.String r14 = "ClearHistory"
            java.lang.String r13 = org.telegram.messenger.LocaleController.getString(r14, r13)
            r0.addSubItem(r2, r4, r13)
        L_0x0449:
            org.telegram.tgnet.TLRPC$User r0 = r7.currentUser
            if (r0 == 0) goto L_0x0451
            boolean r0 = r0.self
            if (r0 != 0) goto L_0x045e
        L_0x0451:
            org.telegram.ui.ActionBar.ActionBarMenuItem r0 = r7.headerItem
            r2 = 18
            r4 = 2131165778(0x7var_, float:1.7945783E38)
            org.telegram.ui.ActionBar.ActionBarMenuSubItem r0 = r0.addSubItem(r2, r4, r12)
            r7.muteItem = r0
        L_0x045e:
            org.telegram.tgnet.TLRPC$Chat r0 = r7.currentChat
            boolean r0 = org.telegram.messenger.ChatObject.isChannel(r0)
            if (r0 == 0) goto L_0x049c
            org.telegram.tgnet.TLRPC$Chat r0 = r7.currentChat
            boolean r2 = r0.creator
            if (r2 != 0) goto L_0x049c
            boolean r0 = org.telegram.messenger.ChatObject.isNotInChat(r0)
            if (r0 != 0) goto L_0x04cb
            org.telegram.tgnet.TLRPC$Chat r0 = r7.currentChat
            boolean r0 = r0.megagroup
            if (r0 == 0) goto L_0x048a
            org.telegram.ui.ActionBar.ActionBarMenuItem r0 = r7.headerItem
            r2 = 2131165758(0x7var_e, float:1.7945742E38)
            r4 = 2131625937(0x7f0e07d1, float:1.8879096E38)
            java.lang.String r13 = "LeaveMegaMenu"
            java.lang.String r4 = org.telegram.messenger.LocaleController.getString(r13, r4)
            r0.addSubItem(r6, r2, r4)
            goto L_0x04cb
        L_0x048a:
            org.telegram.ui.ActionBar.ActionBarMenuItem r0 = r7.headerItem
            r2 = 2131165758(0x7var_e, float:1.7945742E38)
            r4 = 2131625935(0x7f0e07cf, float:1.8879092E38)
            java.lang.String r13 = "LeaveChannelMenu"
            java.lang.String r4 = org.telegram.messenger.LocaleController.getString(r13, r4)
            r0.addSubItem(r6, r2, r4)
            goto L_0x04cb
        L_0x049c:
            org.telegram.tgnet.TLRPC$Chat r0 = r7.currentChat
            boolean r0 = org.telegram.messenger.ChatObject.isChannel(r0)
            if (r0 != 0) goto L_0x04cb
            org.telegram.tgnet.TLRPC$Chat r0 = r7.currentChat
            if (r0 == 0) goto L_0x04ba
            org.telegram.ui.ActionBar.ActionBarMenuItem r0 = r7.headerItem
            r2 = 2131165758(0x7var_e, float:1.7945742E38)
            r4 = 2131625103(0x7f0e048f, float:1.8877404E38)
            java.lang.String r13 = "DeleteAndExit"
            java.lang.String r4 = org.telegram.messenger.LocaleController.getString(r13, r4)
            r0.addSubItem(r6, r2, r4)
            goto L_0x04cb
        L_0x04ba:
            org.telegram.ui.ActionBar.ActionBarMenuItem r0 = r7.headerItem
            r2 = 2131165733(0x7var_, float:1.7945691E38)
            r4 = 2131625118(0x7f0e049e, float:1.8877435E38)
            java.lang.String r13 = "DeleteChatUser"
            java.lang.String r4 = org.telegram.messenger.LocaleController.getString(r13, r4)
            r0.addSubItem(r6, r2, r4)
        L_0x04cb:
            org.telegram.tgnet.TLRPC$User r0 = r7.currentUser
            if (r0 == 0) goto L_0x04e6
            boolean r0 = r0.self
            if (r0 == 0) goto L_0x04e6
            org.telegram.ui.ActionBar.ActionBarMenuItem r0 = r7.headerItem
            r2 = 24
            r4 = 2131165753(0x7var_, float:1.7945732E38)
            r13 = 2131624215(0x7f0e0117, float:1.8875603E38)
            java.lang.String r14 = "AddShortcut"
            java.lang.String r13 = org.telegram.messenger.LocaleController.getString(r14, r13)
            r0.addSubItem(r2, r4, r13)
        L_0x04e6:
            org.telegram.tgnet.TLRPC$User r0 = r7.currentUser
            if (r0 == 0) goto L_0x051e
            org.telegram.tgnet.TLRPC$EncryptedChat r2 = r7.currentEncryptedChat
            if (r2 != 0) goto L_0x051e
            boolean r0 = r0.bot
            if (r0 == 0) goto L_0x051e
            org.telegram.ui.ActionBar.ActionBarMenuItem r0 = r7.headerItem
            r2 = 31
            r4 = 2131165687(0x7var_f7, float:1.7945598E38)
            r13 = 2131624582(0x7f0e0286, float:1.8876348E38)
            java.lang.String r14 = "BotSettings"
            java.lang.String r13 = org.telegram.messenger.LocaleController.getString(r14, r13)
            r0.addSubItem(r2, r4, r13)
            org.telegram.ui.ActionBar.ActionBarMenuItem r0 = r7.headerItem
            r2 = 30
            r4 = 2131165657(0x7var_d9, float:1.7945537E38)
            r13 = 2131624573(0x7f0e027d, float:1.887633E38)
            java.lang.String r14 = "BotHelp"
            java.lang.String r13 = org.telegram.messenger.LocaleController.getString(r14, r13)
            r0.addSubItem(r2, r4, r13)
            r39.updateBotButtons()
            goto L_0x051e
        L_0x051c:
            r5 = 21
        L_0x051e:
            r39.updateTitle()
            org.telegram.ui.Components.ChatAvatarContainer r0 = r7.avatarContainer
            r0.updateOnlineCount()
            org.telegram.ui.Components.ChatAvatarContainer r0 = r7.avatarContainer
            r0.updateSubtitle()
            r39.updateTitleIcons()
            int r0 = r7.chatMode
            if (r0 != 0) goto L_0x055f
            boolean r0 = r39.isThreadChat()
            if (r0 != 0) goto L_0x055f
            int r0 = r7.reportType
            if (r0 >= 0) goto L_0x055f
            r0 = 14
            r2 = 2131165476(0x7var_, float:1.794517E38)
            org.telegram.ui.ActionBar.ActionBarMenuItem r0 = r1.addItem((int) r0, (int) r2)
            r1 = 1
            r0.setOverrideMenuClick(r1)
            r0.setAllowCloseAnimation(r11)
            r7.attachItem = r0
            r1 = 2131623952(0x7f0e0010, float:1.887507E38)
            java.lang.String r2 = "AccDescrAttachButton"
            java.lang.String r1 = org.telegram.messenger.LocaleController.getString(r2, r1)
            r0.setContentDescription(r1)
            org.telegram.ui.ActionBar.ActionBarMenuItem r0 = r7.attachItem
            r0.setVisibility(r15)
        L_0x055f:
            java.util.ArrayList<android.view.View> r0 = r7.actionModeViews
            r0.clear()
            boolean r0 = r7.inPreviewMode
            r13 = 0
            if (r0 == 0) goto L_0x0577
            org.telegram.ui.ActionBar.ActionBarMenuItem r0 = r7.headerItem
            if (r0 == 0) goto L_0x0570
            r0.setAlpha(r13)
        L_0x0570:
            org.telegram.ui.ActionBar.ActionBarMenuItem r0 = r7.attachItem
            if (r0 == 0) goto L_0x0577
            r0.setAlpha(r13)
        L_0x0577:
            org.telegram.ui.ActionBar.ActionBar r0 = r7.actionBar
            org.telegram.ui.ActionBar.ActionBarMenu r0 = r0.createActionMode()
            org.telegram.ui.Components.NumberTextView r1 = new org.telegram.ui.Components.NumberTextView
            android.content.Context r2 = r0.getContext()
            r1.<init>(r2)
            r7.selectedMessagesCountTextView = r1
            r2 = 18
            r1.setTextSize(r2)
            org.telegram.ui.Components.NumberTextView r1 = r7.selectedMessagesCountTextView
            android.graphics.Typeface r2 = org.telegram.messenger.AndroidUtilities.getTypeface(r16)
            r1.setTypeface(r2)
            org.telegram.ui.Components.NumberTextView r1 = r7.selectedMessagesCountTextView
            int r2 = org.telegram.ui.ActionBar.Theme.getColor(r10)
            r1.setTextColor(r2)
            org.telegram.ui.Components.NumberTextView r1 = r7.selectedMessagesCountTextView
            r21 = 0
            r22 = -1
            r23 = 1065353216(0x3var_, float:1.0)
            r24 = 65
            r25 = 0
            r26 = 0
            r27 = 0
            android.widget.LinearLayout$LayoutParams r2 = org.telegram.ui.Components.LayoutHelper.createLinear((int) r21, (int) r22, (float) r23, (int) r24, (int) r25, (int) r26, (int) r27)
            r0.addView(r1, r2)
            org.telegram.ui.Components.NumberTextView r1 = r7.selectedMessagesCountTextView
            org.telegram.ui.-$$Lambda$ChatActivity$IsU94v51NaHzLXXRzCLASSNAMEkUcBsJI r2 = org.telegram.ui.$$Lambda$ChatActivity$IsU94v51NaHzLXXRzCLASSNAMEkUcBsJI.INSTANCE
            r1.setOnTouchListener(r2)
            org.telegram.tgnet.TLRPC$EncryptedChat r1 = r7.currentEncryptedChat
            r2 = 1113063424(0x42580000, float:54.0)
            if (r1 != 0) goto L_0x0666
            java.util.ArrayList<android.view.View> r1 = r7.actionModeViews
            r4 = 25
            r14 = 2131165737(0x7var_, float:1.79457E38)
            int r3 = org.telegram.messenger.AndroidUtilities.dp(r2)
            r5 = 2131627251(0x7f0e0cf3, float:1.8881761E38)
            java.lang.String r6 = "SaveToMusic"
            java.lang.String r5 = org.telegram.messenger.LocaleController.getString(r6, r5)
            org.telegram.ui.ActionBar.ActionBarMenuItem r3 = r0.addItemWithWidth(r4, r14, r3, r5)
            r1.add(r3)
            java.util.ArrayList<android.view.View> r1 = r7.actionModeViews
            r3 = 23
            r4 = 2131165742(0x7var_e, float:1.794571E38)
            int r5 = org.telegram.messenger.AndroidUtilities.dp(r2)
            r6 = 2131625214(0x7f0e04fe, float:1.887763E38)
            java.lang.String r14 = "Edit"
            java.lang.String r6 = org.telegram.messenger.LocaleController.getString(r14, r6)
            org.telegram.ui.ActionBar.ActionBarMenuItem r3 = r0.addItemWithWidth(r3, r4, r5, r6)
            r1.add(r3)
            java.util.ArrayList<android.view.View> r1 = r7.actionModeViews
            r3 = 22
            r4 = 2131165744(0x7var_, float:1.7945714E38)
            int r5 = org.telegram.messenger.AndroidUtilities.dp(r2)
            r6 = 2131624225(0x7f0e0121, float:1.8875624E38)
            java.lang.String r14 = "AddToFavorites"
            java.lang.String r6 = org.telegram.messenger.LocaleController.getString(r14, r6)
            org.telegram.ui.ActionBar.ActionBarMenuItem r3 = r0.addItemWithWidth(r3, r4, r5, r6)
            r1.add(r3)
            java.util.ArrayList<android.view.View> r1 = r7.actionModeViews
            r3 = 10
            r4 = 2131165731(0x7var_, float:1.7945687E38)
            int r5 = org.telegram.messenger.AndroidUtilities.dp(r2)
            r6 = 2131624995(0x7f0e0423, float:1.8877185E38)
            java.lang.String r14 = "Copy"
            java.lang.String r6 = org.telegram.messenger.LocaleController.getString(r14, r6)
            org.telegram.ui.ActionBar.ActionBarMenuItem r3 = r0.addItemWithWidth(r3, r4, r5, r6)
            r1.add(r3)
            java.util.ArrayList<android.view.View> r1 = r7.actionModeViews
            r3 = 11
            r4 = 2131165745(0x7var_, float:1.7945716E38)
            int r5 = org.telegram.messenger.AndroidUtilities.dp(r2)
            r6 = 2131625572(0x7f0e0664, float:1.8878356E38)
            java.lang.String r14 = "Forward"
            java.lang.String r6 = org.telegram.messenger.LocaleController.getString(r14, r6)
            org.telegram.ui.ActionBar.ActionBarMenuItem r3 = r0.addItemWithWidth(r3, r4, r5, r6)
            r1.add(r3)
            java.util.ArrayList<android.view.View> r1 = r7.actionModeViews
            r3 = 12
            r4 = 2131165733(0x7var_, float:1.7945691E38)
            int r2 = org.telegram.messenger.AndroidUtilities.dp(r2)
            r5 = 2131625090(0x7f0e0482, float:1.8877378E38)
            java.lang.String r6 = "Delete"
            java.lang.String r5 = org.telegram.messenger.LocaleController.getString(r6, r5)
            org.telegram.ui.ActionBar.ActionBarMenuItem r2 = r0.addItemWithWidth(r3, r4, r2, r5)
            r1.add(r2)
            goto L_0x06d2
        L_0x0666:
            java.util.ArrayList<android.view.View> r1 = r7.actionModeViews
            r3 = 23
            r4 = 2131165742(0x7var_e, float:1.794571E38)
            int r5 = org.telegram.messenger.AndroidUtilities.dp(r2)
            r6 = 2131625214(0x7f0e04fe, float:1.887763E38)
            java.lang.String r14 = "Edit"
            java.lang.String r6 = org.telegram.messenger.LocaleController.getString(r14, r6)
            org.telegram.ui.ActionBar.ActionBarMenuItem r3 = r0.addItemWithWidth(r3, r4, r5, r6)
            r1.add(r3)
            java.util.ArrayList<android.view.View> r1 = r7.actionModeViews
            r3 = 22
            r4 = 2131165744(0x7var_, float:1.7945714E38)
            int r5 = org.telegram.messenger.AndroidUtilities.dp(r2)
            r6 = 2131624225(0x7f0e0121, float:1.8875624E38)
            java.lang.String r14 = "AddToFavorites"
            java.lang.String r6 = org.telegram.messenger.LocaleController.getString(r14, r6)
            org.telegram.ui.ActionBar.ActionBarMenuItem r3 = r0.addItemWithWidth(r3, r4, r5, r6)
            r1.add(r3)
            java.util.ArrayList<android.view.View> r1 = r7.actionModeViews
            r3 = 10
            r4 = 2131165731(0x7var_, float:1.7945687E38)
            int r5 = org.telegram.messenger.AndroidUtilities.dp(r2)
            r6 = 2131624995(0x7f0e0423, float:1.8877185E38)
            java.lang.String r14 = "Copy"
            java.lang.String r6 = org.telegram.messenger.LocaleController.getString(r14, r6)
            org.telegram.ui.ActionBar.ActionBarMenuItem r3 = r0.addItemWithWidth(r3, r4, r5, r6)
            r1.add(r3)
            java.util.ArrayList<android.view.View> r1 = r7.actionModeViews
            r3 = 12
            r4 = 2131165733(0x7var_, float:1.7945691E38)
            int r2 = org.telegram.messenger.AndroidUtilities.dp(r2)
            r5 = 2131625090(0x7f0e0482, float:1.8877378E38)
            java.lang.String r6 = "Delete"
            java.lang.String r5 = org.telegram.messenger.LocaleController.getString(r6, r5)
            org.telegram.ui.ActionBar.ActionBarMenuItem r2 = r0.addItemWithWidth(r3, r4, r2, r5)
            r1.add(r2)
        L_0x06d2:
            r1 = 23
            org.telegram.ui.ActionBar.ActionBarMenuItem r1 = r0.getItem(r1)
            int r2 = r7.canEditMessagesCount
            r3 = 1
            if (r2 != r3) goto L_0x06f2
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r2 = r7.selectedMessagesIds
            r2 = r2[r11]
            int r2 = r2.size()
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r4 = r7.selectedMessagesIds
            r4 = r4[r3]
            int r4 = r4.size()
            int r2 = r2 + r4
            if (r2 != r3) goto L_0x06f2
            r2 = 0
            goto L_0x06f4
        L_0x06f2:
            r2 = 8
        L_0x06f4:
            r1.setVisibility(r2)
            r1 = 10
            org.telegram.ui.ActionBar.ActionBarMenuItem r1 = r0.getItem(r1)
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r2 = r7.selectedMessagesCanCopyIds
            r2 = r2[r11]
            int r2 = r2.size()
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r3 = r7.selectedMessagesCanCopyIds
            r4 = 1
            r3 = r3[r4]
            int r3 = r3.size()
            int r2 = r2 + r3
            if (r2 == 0) goto L_0x0713
            r2 = 0
            goto L_0x0715
        L_0x0713:
            r2 = 8
        L_0x0715:
            r1.setVisibility(r2)
            r1 = 22
            org.telegram.ui.ActionBar.ActionBarMenuItem r1 = r0.getItem(r1)
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r2 = r7.selectedMessagesCanStarIds
            r2 = r2[r11]
            int r2 = r2.size()
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r3 = r7.selectedMessagesCanStarIds
            r4 = 1
            r3 = r3[r4]
            int r3 = r3.size()
            int r2 = r2 + r3
            if (r2 == 0) goto L_0x0734
            r2 = 0
            goto L_0x0736
        L_0x0734:
            r2 = 8
        L_0x0736:
            r1.setVisibility(r2)
            r1 = 12
            org.telegram.ui.ActionBar.ActionBarMenuItem r0 = r0.getItem(r1)
            int r1 = r7.cantDeleteMessagesCount
            if (r1 != 0) goto L_0x0745
            r1 = 0
            goto L_0x0747
        L_0x0745:
            r1 = 8
        L_0x0747:
            r0.setVisibility(r1)
            r7.checkActionBarMenu(r11)
            org.telegram.ui.ChatActivity$9 r0 = new org.telegram.ui.ChatActivity$9
            r0.<init>()
            r7.scrimPaint = r0
            org.telegram.ui.ChatActivity$10 r0 = new org.telegram.ui.ChatActivity$10
            org.telegram.ui.ActionBar.ActionBarLayout r1 = r7.parentLayout
            r0.<init>(r8, r1, r8)
            r7.fragmentView = r0
            org.telegram.ui.Components.SizeNotifierFrameLayout r0 = (org.telegram.ui.Components.SizeNotifierFrameLayout) r0
            r7.contentView = r0
            boolean r1 = r7.inBubbleMode
            if (r1 == 0) goto L_0x0768
            r0.setOccupyStatusBar(r11)
        L_0x0768:
            org.telegram.ui.Components.SizeNotifierFrameLayout r0 = r7.contentView
            android.graphics.drawable.Drawable r1 = org.telegram.ui.ActionBar.Theme.getCachedWallpaper()
            boolean r2 = org.telegram.ui.ActionBar.Theme.isWallpaperMotion()
            r0.setBackgroundImage(r1, r2)
            android.widget.FrameLayout r0 = new android.widget.FrameLayout
            r0.<init>(r8)
            r7.emptyViewContainer = r0
            r1 = 4
            r0.setVisibility(r1)
            org.telegram.ui.Components.SizeNotifierFrameLayout r0 = r7.contentView
            android.widget.FrameLayout r1 = r7.emptyViewContainer
            r14 = -1
            r6 = -2
            r4 = 17
            android.widget.FrameLayout$LayoutParams r2 = org.telegram.ui.Components.LayoutHelper.createFrame(r14, r6, r4)
            r0.addView(r1, r2)
            android.widget.FrameLayout r0 = r7.emptyViewContainer
            org.telegram.ui.-$$Lambda$ChatActivity$8kVBHBJ9gWnPhRCLmCUD8Kee-4g r1 = org.telegram.ui.$$Lambda$ChatActivity$8kVBHBJ9gWnPhRCLmCUD8Kee4g.INSTANCE
            r0.setOnTouchListener(r1)
            android.os.Bundle r0 = r39.getArguments()
            java.lang.String r1 = "nearby_distance"
            int r0 = r0.getInt(r1, r14)
            r3 = 1096810496(0x41600000, float:14.0)
            if (r0 >= 0) goto L_0x07a8
            org.telegram.tgnet.TLRPC$Document r1 = r7.preloadedGreetingsSticker
            if (r1 == 0) goto L_0x07f2
        L_0x07a8:
            org.telegram.tgnet.TLRPC$User r1 = r7.currentUser
            if (r1 == 0) goto L_0x07f2
            boolean r1 = r7.userBlocked
            if (r1 != 0) goto L_0x07f2
            org.telegram.ui.Components.ChatGreetingsView r2 = new org.telegram.ui.Components.ChatGreetingsView
            org.telegram.tgnet.TLRPC$User r1 = r7.currentUser
            int r5 = r7.currentAccount
            org.telegram.tgnet.TLRPC$Document r6 = r7.preloadedGreetingsSticker
            r25 = r1
            r1 = r2
            r12 = r2
            r2 = r40
            r15 = 1096810496(0x41600000, float:14.0)
            r3 = r25
            r14 = 17
            r4 = r0
            r0 = 1073741824(0x40000000, float:2.0)
            r13 = -2
            r1.<init>(r2, r3, r4, r5, r6)
            r7.greetingsViewContainer = r12
            org.telegram.ui.-$$Lambda$ChatActivity$MR-l9pMyoytNLLK0JzTAFw95PK4 r1 = new org.telegram.ui.-$$Lambda$ChatActivity$MR-l9pMyoytNLLK0JzTAFw95PK4
            r1.<init>()
            r12.setListener(r1)
            android.widget.FrameLayout r1 = r7.emptyViewContainer
            org.telegram.ui.Components.ChatGreetingsView r2 = r7.greetingsViewContainer
            r31 = -1
            r32 = -1073741824(0xffffffffCLASSNAME, float:-2.0)
            r33 = 16
            r34 = 1116209152(0x42880000, float:68.0)
            r35 = 0
            r36 = 1116209152(0x42880000, float:68.0)
            r37 = 0
            android.widget.FrameLayout$LayoutParams r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r31, r32, r33, r34, r35, r36, r37)
            r1.addView(r2, r3)
            r12 = 1073741824(0x40000000, float:2.0)
            goto L_0x09a8
        L_0x07f2:
            r12 = 1073741824(0x40000000, float:2.0)
            r13 = -2
            r14 = 17
            r15 = 1096810496(0x41600000, float:14.0)
            org.telegram.tgnet.TLRPC$EncryptedChat r1 = r7.currentEncryptedChat
            if (r1 != 0) goto L_0x0954
            boolean r1 = r39.isThreadChat()
            if (r1 != 0) goto L_0x0847
            int r1 = r7.chatMode
            if (r1 != 0) goto L_0x0847
            org.telegram.tgnet.TLRPC$User r1 = r7.currentUser
            if (r1 == 0) goto L_0x080f
            boolean r1 = r1.self
            if (r1 != 0) goto L_0x0817
        L_0x080f:
            org.telegram.tgnet.TLRPC$Chat r1 = r7.currentChat
            if (r1 == 0) goto L_0x0847
            boolean r1 = r1.creator
            if (r1 == 0) goto L_0x0847
        L_0x0817:
            org.telegram.ui.Components.ChatBigEmptyView r0 = new org.telegram.ui.Components.ChatBigEmptyView
            org.telegram.tgnet.TLRPC$Chat r1 = r7.currentChat
            if (r1 == 0) goto L_0x081f
            r1 = 1
            goto L_0x0820
        L_0x081f:
            r1 = 2
        L_0x0820:
            r0.<init>(r8, r1)
            r7.bigEmptyView = r0
            android.widget.FrameLayout r1 = r7.emptyViewContainer
            android.widget.FrameLayout$LayoutParams r2 = new android.widget.FrameLayout$LayoutParams
            r2.<init>(r13, r13, r14)
            r1.addView(r0, r2)
            org.telegram.tgnet.TLRPC$Chat r0 = r7.currentChat
            if (r0 == 0) goto L_0x09a8
            org.telegram.ui.Components.ChatBigEmptyView r0 = r7.bigEmptyView
            r1 = 2131625710(0x7f0e06ee, float:1.8878636E38)
            java.lang.String r2 = "GroupEmptyTitle1"
            java.lang.String r1 = org.telegram.messenger.LocaleController.getString(r2, r1)
            android.text.SpannableStringBuilder r1 = org.telegram.messenger.AndroidUtilities.replaceTags(r1)
            r0.setStatusText(r1)
            goto L_0x09a8
        L_0x0847:
            boolean r1 = r39.isThreadChat()
            if (r1 == 0) goto L_0x0865
            boolean r1 = r7.isComments
            if (r1 == 0) goto L_0x085b
            r1 = 2131626266(0x7f0e091a, float:1.8879763E38)
            java.lang.String r2 = "NoComments"
            java.lang.String r1 = org.telegram.messenger.LocaleController.getString(r2, r1)
            goto L_0x08b5
        L_0x085b:
            r1 = 2131626303(0x7f0e093f, float:1.8879838E38)
            java.lang.String r2 = "NoReplies"
            java.lang.String r1 = org.telegram.messenger.LocaleController.getString(r2, r1)
            goto L_0x08b5
        L_0x0865:
            int r1 = r7.chatMode
            r2 = 1
            if (r1 != r2) goto L_0x0874
            r1 = 2131626305(0x7f0e0941, float:1.8879842E38)
            java.lang.String r2 = "NoScheduledMessages"
            java.lang.String r1 = org.telegram.messenger.LocaleController.getString(r2, r1)
            goto L_0x08b5
        L_0x0874:
            org.telegram.tgnet.TLRPC$User r1 = r7.currentUser
            if (r1 == 0) goto L_0x0899
            int r2 = r1.id
            r3 = 777000(0xbdb28, float:1.088809E-39)
            if (r2 == r3) goto L_0x0899
            r3 = 429000(0x68bc8, float:6.01157E-40)
            if (r2 == r3) goto L_0x0899
            r3 = 4244000(0x40CLASSNAME, float:5.94711E-39)
            if (r2 == r3) goto L_0x0899
            boolean r1 = org.telegram.messenger.MessagesController.isSupportUser(r1)
            if (r1 == 0) goto L_0x0899
            r1 = 2131625697(0x7f0e06e1, float:1.887861E38)
            java.lang.String r2 = "GotAQuestion"
            java.lang.String r1 = org.telegram.messenger.LocaleController.getString(r2, r1)
            goto L_0x08b5
        L_0x0899:
            org.telegram.tgnet.TLRPC$User r1 = r7.currentUser
            if (r1 == 0) goto L_0x08ac
            boolean r2 = r1.self
            if (r2 != 0) goto L_0x08ac
            boolean r1 = r1.deleted
            if (r1 != 0) goto L_0x08ac
            boolean r1 = r7.userBlocked
            if (r1 == 0) goto L_0x08aa
            goto L_0x08ac
        L_0x08aa:
            r1 = 0
            goto L_0x08b5
        L_0x08ac:
            r1 = 2131626287(0x7f0e092f, float:1.8879806E38)
            java.lang.String r2 = "NoMessages"
            java.lang.String r1 = org.telegram.messenger.LocaleController.getString(r2, r1)
        L_0x08b5:
            if (r1 != 0) goto L_0x08f0
            org.telegram.ui.Components.ChatGreetingsView r6 = new org.telegram.ui.Components.ChatGreetingsView
            org.telegram.tgnet.TLRPC$User r3 = r7.currentUser
            int r5 = r7.currentAccount
            org.telegram.tgnet.TLRPC$Document r4 = r7.preloadedGreetingsSticker
            r1 = r6
            r2 = r40
            r22 = r4
            r4 = r0
            r0 = r6
            r6 = r22
            r1.<init>(r2, r3, r4, r5, r6)
            r7.greetingsViewContainer = r0
            org.telegram.ui.-$$Lambda$ChatActivity$985LTvmTDXh5OFQlKrkProVeDQ4 r1 = new org.telegram.ui.-$$Lambda$ChatActivity$985LTvmTDXh5OFQlKrkProVeDQ4
            r1.<init>()
            r0.setListener(r1)
            android.widget.FrameLayout r0 = r7.emptyViewContainer
            org.telegram.ui.Components.ChatGreetingsView r1 = r7.greetingsViewContainer
            r31 = -1
            r32 = -1073741824(0xffffffffCLASSNAME, float:-2.0)
            r33 = 16
            r34 = 1116209152(0x42880000, float:68.0)
            r35 = 0
            r36 = 1116209152(0x42880000, float:68.0)
            r37 = 0
            android.widget.FrameLayout$LayoutParams r2 = org.telegram.ui.Components.LayoutHelper.createFrame(r31, r32, r33, r34, r35, r36, r37)
            r0.addView(r1, r2)
            goto L_0x09a8
        L_0x08f0:
            android.widget.TextView r0 = new android.widget.TextView
            r0.<init>(r8)
            r7.emptyView = r0
            r0.setText(r1)
            android.widget.TextView r0 = r7.emptyView
            r1 = 1
            r0.setTextSize(r1, r15)
            android.widget.TextView r0 = r7.emptyView
            r0.setGravity(r14)
            android.widget.TextView r0 = r7.emptyView
            java.lang.String r1 = "chat_serviceText"
            int r1 = org.telegram.ui.ActionBar.Theme.getColor(r1)
            r0.setTextColor(r1)
            android.widget.TextView r0 = r7.emptyView
            r1 = 2131166073(0x7var_, float:1.7946381E38)
            r0.setBackgroundResource(r1)
            android.widget.TextView r0 = r7.emptyView
            android.graphics.drawable.Drawable r0 = r0.getBackground()
            android.graphics.PorterDuffColorFilter r1 = org.telegram.ui.ActionBar.Theme.colorFilter
            r0.setColorFilter(r1)
            android.widget.TextView r0 = r7.emptyView
            android.graphics.Typeface r1 = org.telegram.messenger.AndroidUtilities.getTypeface(r16)
            r0.setTypeface(r1)
            android.widget.TextView r0 = r7.emptyView
            r1 = 1092616192(0x41200000, float:10.0)
            int r1 = org.telegram.messenger.AndroidUtilities.dp(r1)
            int r2 = org.telegram.messenger.AndroidUtilities.dp(r12)
            r3 = 1092616192(0x41200000, float:10.0)
            int r3 = org.telegram.messenger.AndroidUtilities.dp(r3)
            r4 = 1077936128(0x40400000, float:3.0)
            int r4 = org.telegram.messenger.AndroidUtilities.dp(r4)
            r0.setPadding(r1, r2, r3, r4)
            android.widget.FrameLayout r0 = r7.emptyViewContainer
            android.widget.TextView r1 = r7.emptyView
            android.widget.FrameLayout$LayoutParams r2 = new android.widget.FrameLayout$LayoutParams
            r2.<init>(r13, r13, r14)
            r0.addView(r1, r2)
            goto L_0x09a8
        L_0x0954:
            org.telegram.ui.Components.ChatBigEmptyView r0 = new org.telegram.ui.Components.ChatBigEmptyView
            r0.<init>(r8, r11)
            r7.bigEmptyView = r0
            org.telegram.tgnet.TLRPC$EncryptedChat r0 = r7.currentEncryptedChat
            int r0 = r0.admin_id
            org.telegram.messenger.UserConfig r1 = r39.getUserConfig()
            int r1 = r1.getClientUserId()
            if (r0 != r1) goto L_0x0983
            org.telegram.ui.Components.ChatBigEmptyView r0 = r7.bigEmptyView
            r1 = 2131625304(0x7f0e0558, float:1.8877812E38)
            r2 = 1
            java.lang.Object[] r3 = new java.lang.Object[r2]
            org.telegram.tgnet.TLRPC$User r4 = r7.currentUser
            java.lang.String r4 = org.telegram.messenger.UserObject.getFirstName(r4)
            r3[r11] = r4
            java.lang.String r4 = "EncryptedPlaceholderTitleOutgoing"
            java.lang.String r1 = org.telegram.messenger.LocaleController.formatString(r4, r1, r3)
            r0.setStatusText(r1)
            goto L_0x099c
        L_0x0983:
            r2 = 1
            org.telegram.ui.Components.ChatBigEmptyView r0 = r7.bigEmptyView
            r1 = 2131625303(0x7f0e0557, float:1.887781E38)
            java.lang.Object[] r3 = new java.lang.Object[r2]
            org.telegram.tgnet.TLRPC$User r2 = r7.currentUser
            java.lang.String r2 = org.telegram.messenger.UserObject.getFirstName(r2)
            r3[r11] = r2
            java.lang.String r2 = "EncryptedPlaceholderTitleIncoming"
            java.lang.String r1 = org.telegram.messenger.LocaleController.formatString(r2, r1, r3)
            r0.setStatusText(r1)
        L_0x099c:
            android.widget.FrameLayout r0 = r7.emptyViewContainer
            org.telegram.ui.Components.ChatBigEmptyView r1 = r7.bigEmptyView
            android.widget.FrameLayout$LayoutParams r2 = new android.widget.FrameLayout$LayoutParams
            r2.<init>(r13, r13, r14)
            r0.addView(r1, r2)
        L_0x09a8:
            org.telegram.ui.Components.ChatActivityEnterView r0 = r7.chatActivityEnterView
            if (r0 == 0) goto L_0x09bf
            r0.onDestroy()
            org.telegram.ui.Components.ChatActivityEnterView r0 = r7.chatActivityEnterView
            boolean r0 = r0.isEditingMessage()
            if (r0 != 0) goto L_0x09bf
            org.telegram.ui.Components.ChatActivityEnterView r0 = r7.chatActivityEnterView
            java.lang.CharSequence r0 = r0.getFieldText()
            r6 = r0
            goto L_0x09c0
        L_0x09bf:
            r6 = 0
        L_0x09c0:
            org.telegram.ui.Adapters.MentionsAdapter r0 = r7.mentionsAdapter
            if (r0 == 0) goto L_0x09c7
            r0.onDestroy()
        L_0x09c7:
            org.telegram.ui.ChatActivity$11 r0 = new org.telegram.ui.ChatActivity$11
            r0.<init>(r8)
            r7.chatListView = r0
            org.telegram.tgnet.TLRPC$EncryptedChat r1 = r7.currentEncryptedChat
            if (r1 == 0) goto L_0x09dc
            int r1 = android.os.Build.VERSION.SDK_INT
            r2 = 19
            if (r1 < r2) goto L_0x09dc
            r1 = 4
            r0.setImportantForAccessibility(r1)
        L_0x09dc:
            org.telegram.ui.Components.RecyclerListView r0 = r7.chatListView
            r0.setNestedScrollingEnabled(r11)
            org.telegram.ui.Components.RecyclerListView r0 = r7.chatListView
            r1 = 1
            r0.setInstantClick(r1)
            org.telegram.ui.Components.RecyclerListView r0 = r7.chatListView
            r0.setDisableHighlightState(r1)
            org.telegram.ui.Components.RecyclerListView r0 = r7.chatListView
            java.lang.Integer r2 = java.lang.Integer.valueOf(r1)
            r0.setTag(r2)
            org.telegram.ui.Components.RecyclerListView r0 = r7.chatListView
            r0.setVerticalScrollBarEnabled(r1)
            org.telegram.ui.Components.RecyclerListView r0 = r7.chatListView
            org.telegram.ui.ChatActivity$ChatActivityAdapter r2 = new org.telegram.ui.ChatActivity$ChatActivityAdapter
            r2.<init>(r8)
            r7.chatAdapter = r2
            r0.setAdapter(r2)
            org.telegram.ui.Components.RecyclerListView r0 = r7.chatListView
            r0.setClipToPadding(r11)
            org.telegram.ui.Components.RecyclerListView r0 = r7.chatListView
            r0.setAnimateEmptyView(r1, r1)
            org.telegram.ui.Components.RecyclerListView r0 = r7.chatListView
            r2 = 33554432(0x2000000, float:9.403955E-38)
            r0.setScrollBarStyle(r2)
            r0 = 0
            r7.chatListViewPaddingTop = r0
            r39.invalidateChatListViewTopPadding()
            android.content.SharedPreferences r0 = org.telegram.messenger.MessagesController.getGlobalMainSettings()
            java.lang.String r2 = "view_animations"
            boolean r0 = r0.getBoolean(r2, r1)
            if (r0 == 0) goto L_0x0a36
            org.telegram.ui.ChatActivity$12 r0 = new org.telegram.ui.ChatActivity$12
            org.telegram.ui.Components.RecyclerListView r1 = r7.chatListView
            r0.<init>(r7, r1)
            r7.chatListItemAnimator = r0
            r0.setSupportsChangeAnimations(r11)
        L_0x0a36:
            org.telegram.ui.ChatActivity$13 r0 = new org.telegram.ui.ChatActivity$13
            r4 = 1000(0x3e8, float:1.401E-42)
            r5 = 1
            r22 = 1
            r1 = r0
            r2 = r39
            r3 = r40
            r38 = r6
            r6 = r22
            r1.<init>(r3, r4, r5, r6)
            r7.chatLayoutManager = r0
            org.telegram.ui.ChatActivity$14 r1 = new org.telegram.ui.ChatActivity$14
            r1.<init>()
            r0.setSpanSizeLookup(r1)
            org.telegram.ui.Components.RecyclerListView r0 = r7.chatListView
            androidx.recyclerview.widget.GridLayoutManagerFixed r1 = r7.chatLayoutManager
            r0.setLayoutManager(r1)
            org.telegram.ui.Components.RecyclerListView r0 = r7.chatListView
            org.telegram.ui.ChatActivity$15 r1 = new org.telegram.ui.ChatActivity$15
            r1.<init>(r7)
            r0.addItemDecoration(r1)
            org.telegram.ui.Components.SizeNotifierFrameLayout r0 = r7.contentView
            org.telegram.ui.Components.RecyclerListView r1 = r7.chatListView
            r2 = -1082130432(0xffffffffbvar_, float:-1.0)
            r3 = -1
            android.widget.FrameLayout$LayoutParams r2 = org.telegram.ui.Components.LayoutHelper.createFrame(r3, r2)
            r0.addView(r1, r2)
            org.telegram.ui.Components.RecyclerListView r0 = r7.chatListView
            org.telegram.ui.Components.RecyclerListView$OnItemLongClickListenerExtended r1 = r7.onItemLongClickListener
            r0.setOnItemLongClickListener((org.telegram.ui.Components.RecyclerListView.OnItemLongClickListenerExtended) r1)
            org.telegram.ui.Components.RecyclerListView r0 = r7.chatListView
            org.telegram.ui.Components.RecyclerListView$OnItemClickListenerExtended r1 = r7.onItemClickListener
            r0.setOnItemClickListener((org.telegram.ui.Components.RecyclerListView.OnItemClickListenerExtended) r1)
            org.telegram.ui.Components.RecyclerListView r0 = r7.chatListView
            org.telegram.ui.ChatActivity$16 r1 = new org.telegram.ui.ChatActivity$16
            r1.<init>()
            r0.setOnScrollListener(r1)
            org.telegram.ui.Components.ClippingImageView r0 = new org.telegram.ui.Components.ClippingImageView
            r0.<init>(r8)
            r7.animatingImageView = r0
            r1 = 8
            r0.setVisibility(r1)
            org.telegram.ui.Components.SizeNotifierFrameLayout r0 = r7.contentView
            org.telegram.ui.Components.ClippingImageView r1 = r7.animatingImageView
            r2 = -1082130432(0xffffffffbvar_, float:-1.0)
            r3 = -1
            android.widget.FrameLayout$LayoutParams r2 = org.telegram.ui.Components.LayoutHelper.createFrame(r3, r2)
            r0.addView(r1, r2)
            android.widget.FrameLayout r0 = new android.widget.FrameLayout
            r0.<init>(r8)
            r7.progressView = r0
            r1 = 4
            r0.setVisibility(r1)
            org.telegram.ui.Components.SizeNotifierFrameLayout r0 = r7.contentView
            android.widget.FrameLayout r1 = r7.progressView
            r6 = 51
            android.widget.FrameLayout$LayoutParams r2 = org.telegram.ui.Components.LayoutHelper.createFrame(r3, r3, r6)
            r0.addView(r1, r2)
            android.view.View r0 = new android.view.View
            r0.<init>(r8)
            r7.progressView2 = r0
            r1 = 2131166074(0x7var_a, float:1.7946383E38)
            r0.setBackgroundResource(r1)
            android.view.View r0 = r7.progressView2
            android.graphics.drawable.Drawable r0 = r0.getBackground()
            android.graphics.PorterDuffColorFilter r1 = org.telegram.ui.ActionBar.Theme.colorFilter
            r0.setColorFilter(r1)
            android.widget.FrameLayout r0 = r7.progressView
            android.view.View r1 = r7.progressView2
            r2 = 36
            r3 = 36
            android.widget.FrameLayout$LayoutParams r2 = org.telegram.ui.Components.LayoutHelper.createFrame(r2, r3, r14)
            r0.addView(r1, r2)
            org.telegram.ui.Components.RadialProgressView r0 = new org.telegram.ui.Components.RadialProgressView
            r0.<init>(r8)
            r7.progressBar = r0
            r1 = 1105199104(0x41e00000, float:28.0)
            int r1 = org.telegram.messenger.AndroidUtilities.dp(r1)
            r0.setSize(r1)
            org.telegram.ui.Components.RadialProgressView r0 = r7.progressBar
            java.lang.String r1 = "chat_serviceText"
            int r1 = org.telegram.ui.ActionBar.Theme.getColor(r1)
            r0.setProgressColor(r1)
            android.widget.FrameLayout r0 = r7.progressView
            org.telegram.ui.Components.RadialProgressView r1 = r7.progressBar
            r2 = 32
            r3 = 32
            android.widget.FrameLayout$LayoutParams r2 = org.telegram.ui.Components.LayoutHelper.createFrame(r2, r3, r14)
            r0.addView(r1, r2)
            org.telegram.ui.ChatActivity$17 r0 = new org.telegram.ui.ChatActivity$17
            r0.<init>(r8)
            r7.floatingDateView = r0
            long r1 = java.lang.System.currentTimeMillis()
            r3 = 1000(0x3e8, double:4.94E-321)
            long r1 = r1 / r3
            int r2 = (int) r1
            r0.setCustomDate(r2, r11, r11)
            org.telegram.ui.Cells.ChatActionCell r0 = r7.floatingDateView
            r1 = 0
            r0.setAlpha(r1)
            org.telegram.ui.Cells.ChatActionCell r0 = r7.floatingDateView
            r1 = 2
            r0.setImportantForAccessibility(r1)
            org.telegram.ui.Components.SizeNotifierFrameLayout r0 = r7.contentView
            org.telegram.ui.Cells.ChatActionCell r1 = r7.floatingDateView
            r31 = -2
            r32 = -1073741824(0xffffffffCLASSNAME, float:-2.0)
            r33 = 49
            r34 = 0
            r35 = 1082130432(0x40800000, float:4.0)
            r36 = 0
            r37 = 0
            android.widget.FrameLayout$LayoutParams r2 = org.telegram.ui.Components.LayoutHelper.createFrame(r31, r32, r33, r34, r35, r36, r37)
            r0.addView(r1, r2)
            org.telegram.ui.Cells.ChatActionCell r0 = r7.floatingDateView
            org.telegram.ui.-$$Lambda$ChatActivity$rbmT4LVOoyrNlXo9N0J1F2izPNs r1 = new org.telegram.ui.-$$Lambda$ChatActivity$rbmT4LVOoyrNlXo9N0J1F2izPNs
            r1.<init>()
            r0.setOnClickListener(r1)
            org.telegram.tgnet.TLRPC$EncryptedChat r0 = r7.currentEncryptedChat
            if (r0 != 0) goto L_0x0e18
            org.telegram.ui.ChatActivity$18 r0 = new org.telegram.ui.ChatActivity$18
            r0.<init>(r8)
            r7.pinnedMessageView = r0
            r1 = 1
            java.lang.Integer r2 = java.lang.Integer.valueOf(r1)
            r0.setTag(r2)
            r0 = 1112014848(0x42480000, float:50.0)
            int r0 = org.telegram.messenger.AndroidUtilities.dp(r0)
            int r0 = -r0
            float r0 = (float) r0
            r7.pinnedMessageEnterOffset = r0
            android.widget.FrameLayout r0 = r7.pinnedMessageView
            r1 = 8
            r0.setVisibility(r1)
            android.widget.FrameLayout r0 = r7.pinnedMessageView
            r1 = 2131165282(0x7var_, float:1.7944777E38)
            r0.setBackgroundResource(r1)
            android.widget.FrameLayout r0 = r7.pinnedMessageView
            android.graphics.drawable.Drawable r0 = r0.getBackground()
            android.graphics.PorterDuffColorFilter r1 = new android.graphics.PorterDuffColorFilter
            java.lang.String r2 = "chat_topPanelBackground"
            int r2 = org.telegram.ui.ActionBar.Theme.getColor(r2)
            android.graphics.PorterDuff$Mode r3 = android.graphics.PorterDuff.Mode.MULTIPLY
            r1.<init>(r2, r3)
            r0.setColorFilter(r1)
            org.telegram.ui.Components.SizeNotifierFrameLayout r0 = r7.contentView
            android.widget.FrameLayout r1 = r7.pinnedMessageView
            r2 = 50
            r3 = -1
            android.widget.FrameLayout$LayoutParams r2 = org.telegram.ui.Components.LayoutHelper.createFrame(r3, r2, r6)
            r0.addView(r1, r2)
            android.widget.FrameLayout r0 = r7.pinnedMessageView
            org.telegram.ui.-$$Lambda$ChatActivity$e8cAbVo4axDQtwHkkYK5hDBJRZQ r1 = new org.telegram.ui.-$$Lambda$ChatActivity$e8cAbVo4axDQtwHkkYK5hDBJRZQ
            r1.<init>()
            r0.setOnClickListener(r1)
            android.view.View r0 = new android.view.View
            r0.<init>(r8)
            android.graphics.drawable.Drawable r1 = org.telegram.ui.ActionBar.Theme.getSelectorDrawable(r11)
            r0.setBackground(r1)
            android.widget.FrameLayout r1 = r7.pinnedMessageView
            r31 = -1
            r32 = -1082130432(0xffffffffbvar_, float:-1.0)
            r33 = 51
            r34 = 0
            r35 = 0
            r36 = 0
            r37 = 1073741824(0x40000000, float:2.0)
            android.widget.FrameLayout$LayoutParams r2 = org.telegram.ui.Components.LayoutHelper.createFrame(r31, r32, r33, r34, r35, r36, r37)
            r1.addView(r0, r2)
            org.telegram.ui.Components.PinnedLineView r0 = new org.telegram.ui.Components.PinnedLineView
            r0.<init>(r8)
            r7.pinnedLineView = r0
            android.widget.FrameLayout r1 = r7.pinnedMessageView
            r31 = 2
            r32 = 1111490560(0x42400000, float:48.0)
            r34 = 1090519040(0x41000000, float:8.0)
            r37 = 0
            android.widget.FrameLayout$LayoutParams r2 = org.telegram.ui.Components.LayoutHelper.createFrame(r31, r32, r33, r34, r35, r36, r37)
            r1.addView(r0, r2)
            org.telegram.ui.Components.NumberTextView r0 = new org.telegram.ui.Components.NumberTextView
            r0.<init>(r8)
            r7.pinnedCounterTextView = r0
            r0.setAddNumber()
            org.telegram.ui.Components.NumberTextView r0 = r7.pinnedCounterTextView
            r1 = 14
            r0.setTextSize(r1)
            org.telegram.ui.Components.NumberTextView r0 = r7.pinnedCounterTextView
            java.lang.String r1 = "chat_topPanelTitle"
            int r1 = org.telegram.ui.ActionBar.Theme.getColor(r1)
            r0.setTextColor(r1)
            org.telegram.ui.Components.NumberTextView r0 = r7.pinnedCounterTextView
            android.graphics.Typeface r1 = org.telegram.messenger.AndroidUtilities.getTypeface(r16)
            r0.setTypeface(r1)
            android.widget.FrameLayout r0 = r7.pinnedMessageView
            org.telegram.ui.Components.NumberTextView r1 = r7.pinnedCounterTextView
            r31 = -1
            r32 = 1099956224(0x41900000, float:18.0)
            r34 = 1099956224(0x41900000, float:18.0)
            r35 = 1088421888(0x40e00000, float:7.0)
            r36 = 1110441984(0x42300000, float:44.0)
            android.widget.FrameLayout$LayoutParams r2 = org.telegram.ui.Components.LayoutHelper.createFrame(r31, r32, r33, r34, r35, r36, r37)
            r0.addView(r1, r2)
            r0 = 0
        L_0x0c1e:
            r1 = 2
            if (r0 >= r1) goto L_0x0cde
            org.telegram.ui.ActionBar.SimpleTextView[] r1 = r7.pinnedNameTextView
            org.telegram.ui.ChatActivity$19 r2 = new org.telegram.ui.ChatActivity$19
            r2.<init>(r8)
            r1[r0] = r2
            org.telegram.ui.ActionBar.SimpleTextView[] r1 = r7.pinnedNameTextView
            r1 = r1[r0]
            r2 = 14
            r1.setTextSize(r2)
            org.telegram.ui.ActionBar.SimpleTextView[] r1 = r7.pinnedNameTextView
            r1 = r1[r0]
            java.lang.String r2 = "chat_topPanelTitle"
            int r2 = org.telegram.ui.ActionBar.Theme.getColor(r2)
            r1.setTextColor(r2)
            org.telegram.ui.ActionBar.SimpleTextView[] r1 = r7.pinnedNameTextView
            r1 = r1[r0]
            android.graphics.Typeface r2 = org.telegram.messenger.AndroidUtilities.getTypeface(r16)
            r1.setTypeface(r2)
            android.widget.FrameLayout r1 = r7.pinnedMessageView
            org.telegram.ui.ActionBar.SimpleTextView[] r2 = r7.pinnedNameTextView
            r2 = r2[r0]
            r31 = -1
            r32 = 1099956224(0x41900000, float:18.0)
            r33 = 51
            r34 = 1099956224(0x41900000, float:18.0)
            r35 = 1089051034(0x40e9999a, float:7.3)
            r36 = 1110441984(0x42300000, float:44.0)
            r37 = 0
            android.widget.FrameLayout$LayoutParams r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r31, r32, r33, r34, r35, r36, r37)
            r1.addView(r2, r3)
            org.telegram.ui.ActionBar.SimpleTextView[] r1 = r7.pinnedMessageTextView
            org.telegram.ui.ChatActivity$20 r2 = new org.telegram.ui.ChatActivity$20
            r2.<init>(r8)
            r1[r0] = r2
            org.telegram.ui.ActionBar.SimpleTextView[] r1 = r7.pinnedMessageTextView
            r1 = r1[r0]
            r2 = 14
            r1.setTextSize(r2)
            org.telegram.ui.ActionBar.SimpleTextView[] r1 = r7.pinnedMessageTextView
            r1 = r1[r0]
            java.lang.String r2 = "chat_topPanelMessage"
            int r2 = org.telegram.ui.ActionBar.Theme.getColor(r2)
            r1.setTextColor(r2)
            android.widget.FrameLayout r1 = r7.pinnedMessageView
            org.telegram.ui.ActionBar.SimpleTextView[] r2 = r7.pinnedMessageTextView
            r2 = r2[r0]
            r35 = 1103783526(0x41ca6666, float:25.3)
            android.widget.FrameLayout$LayoutParams r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r31, r32, r33, r34, r35, r36, r37)
            r1.addView(r2, r3)
            org.telegram.ui.Components.BackupImageView[] r1 = r7.pinnedMessageImageView
            org.telegram.ui.Components.BackupImageView r2 = new org.telegram.ui.Components.BackupImageView
            r2.<init>(r8)
            r1[r0] = r2
            org.telegram.ui.Components.BackupImageView[] r1 = r7.pinnedMessageImageView
            r1 = r1[r0]
            int r2 = org.telegram.messenger.AndroidUtilities.dp(r12)
            r1.setRoundRadius(r2)
            android.widget.FrameLayout r1 = r7.pinnedMessageView
            org.telegram.ui.Components.BackupImageView[] r2 = r7.pinnedMessageImageView
            r2 = r2[r0]
            r31 = 32
            r32 = 1107296256(0x42000000, float:32.0)
            r34 = 1099431936(0x41880000, float:17.0)
            r35 = 1090519040(0x41000000, float:8.0)
            r36 = 0
            android.widget.FrameLayout$LayoutParams r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r31, r32, r33, r34, r35, r36, r37)
            r1.addView(r2, r3)
            r1 = 1
            if (r0 != r1) goto L_0x0cda
            org.telegram.ui.ActionBar.SimpleTextView[] r1 = r7.pinnedMessageTextView
            r1 = r1[r0]
            r2 = 4
            r1.setVisibility(r2)
            org.telegram.ui.ActionBar.SimpleTextView[] r1 = r7.pinnedNameTextView
            r1 = r1[r0]
            r1.setVisibility(r2)
            org.telegram.ui.Components.BackupImageView[] r1 = r7.pinnedMessageImageView
            r1 = r1[r0]
            r1.setVisibility(r2)
        L_0x0cda:
            int r0 = r0 + 1
            goto L_0x0c1e
        L_0x0cde:
            android.widget.ImageView r0 = new android.widget.ImageView
            r0.<init>(r8)
            r7.pinnedListButton = r0
            r1 = 2131165676(0x7var_ec, float:1.7945576E38)
            r0.setImageResource(r1)
            android.widget.ImageView r0 = r7.pinnedListButton
            android.graphics.PorterDuffColorFilter r1 = new android.graphics.PorterDuffColorFilter
            java.lang.String r2 = "chat_topPanelClose"
            int r2 = org.telegram.ui.ActionBar.Theme.getColor(r2)
            android.graphics.PorterDuff$Mode r3 = android.graphics.PorterDuff.Mode.MULTIPLY
            r1.<init>(r2, r3)
            r0.setColorFilter(r1)
            android.widget.ImageView r0 = r7.pinnedListButton
            android.widget.ImageView$ScaleType r1 = android.widget.ImageView.ScaleType.CENTER
            r0.setScaleType(r1)
            android.widget.ImageView r0 = r7.pinnedListButton
            r1 = 2131624073(0x7f0e0089, float:1.8875315E38)
            java.lang.String r2 = "AccPinnedMessagesList"
            java.lang.String r1 = org.telegram.messenger.LocaleController.getString(r2, r1)
            r0.setContentDescription(r1)
            android.widget.ImageView r0 = r7.pinnedListButton
            r1 = 4
            r0.setVisibility(r1)
            android.widget.ImageView r0 = r7.pinnedListButton
            r1 = 0
            r0.setAlpha(r1)
            android.widget.ImageView r0 = r7.pinnedListButton
            r1 = 1053609165(0x3ecccccd, float:0.4)
            r0.setScaleX(r1)
            android.widget.ImageView r0 = r7.pinnedListButton
            r0.setScaleY(r1)
            int r0 = android.os.Build.VERSION.SDK_INT
            r4 = 21
            if (r0 < r4) goto L_0x0d44
            android.widget.ImageView r1 = r7.pinnedListButton
            java.lang.String r2 = "inappPlayerClose"
            int r2 = org.telegram.ui.ActionBar.Theme.getColor(r2)
            r3 = 436207615(0x19ffffff, float:2.6469778E-23)
            r2 = r2 & r3
            android.graphics.drawable.Drawable r2 = org.telegram.ui.ActionBar.Theme.createSelectorDrawable(r2)
            r1.setBackgroundDrawable(r2)
        L_0x0d44:
            android.widget.FrameLayout r1 = r7.pinnedMessageView
            android.widget.ImageView r2 = r7.pinnedListButton
            r31 = 36
            r32 = 1111490560(0x42400000, float:48.0)
            r33 = 53
            r34 = 0
            r35 = 0
            r36 = 1088421888(0x40e00000, float:7.0)
            r37 = 0
            android.widget.FrameLayout$LayoutParams r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r31, r32, r33, r34, r35, r36, r37)
            r1.addView(r2, r3)
            android.widget.ImageView r1 = r7.pinnedListButton
            org.telegram.ui.-$$Lambda$ChatActivity$ADQ1eO0XA1i_L_WU-1V1Dz1fcv4 r2 = new org.telegram.ui.-$$Lambda$ChatActivity$ADQ1eO0XA1i_L_WU-1V1Dz1fcv4
            r2.<init>()
            r1.setOnClickListener(r2)
            android.widget.ImageView r1 = new android.widget.ImageView
            r1.<init>(r8)
            r7.closePinned = r1
            r2 = 2131165704(0x7var_, float:1.7945633E38)
            r1.setImageResource(r2)
            android.widget.ImageView r1 = r7.closePinned
            android.graphics.PorterDuffColorFilter r2 = new android.graphics.PorterDuffColorFilter
            java.lang.String r3 = "chat_topPanelClose"
            int r3 = org.telegram.ui.ActionBar.Theme.getColor(r3)
            android.graphics.PorterDuff$Mode r5 = android.graphics.PorterDuff.Mode.MULTIPLY
            r2.<init>(r3, r5)
            r1.setColorFilter(r2)
            android.widget.ImageView r1 = r7.closePinned
            android.widget.ImageView$ScaleType r2 = android.widget.ImageView.ScaleType.CENTER
            r1.setScaleType(r2)
            android.widget.ImageView r1 = r7.closePinned
            r2 = 2131624912(0x7f0e03d0, float:1.8877017E38)
            java.lang.String r3 = "Close"
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r3, r2)
            r1.setContentDescription(r2)
            org.telegram.ui.Components.RadialProgressView r1 = new org.telegram.ui.Components.RadialProgressView
            r1.<init>(r8)
            r7.pinnedProgress = r1
            r2 = 8
            r1.setVisibility(r2)
            org.telegram.ui.Components.RadialProgressView r1 = r7.pinnedProgress
            r2 = 1098907648(0x41800000, float:16.0)
            int r2 = org.telegram.messenger.AndroidUtilities.dp(r2)
            r1.setSize(r2)
            org.telegram.ui.Components.RadialProgressView r1 = r7.pinnedProgress
            r1.setStrokeWidth(r12)
            org.telegram.ui.Components.RadialProgressView r1 = r7.pinnedProgress
            java.lang.String r2 = "chat_topPanelLine"
            int r2 = org.telegram.ui.ActionBar.Theme.getColor(r2)
            r1.setProgressColor(r2)
            android.widget.FrameLayout r1 = r7.pinnedMessageView
            org.telegram.ui.Components.RadialProgressView r2 = r7.pinnedProgress
            r36 = 1073741824(0x40000000, float:2.0)
            android.widget.FrameLayout$LayoutParams r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r31, r32, r33, r34, r35, r36, r37)
            r1.addView(r2, r3)
            int r1 = r7.threadMessageId
            if (r1 == 0) goto L_0x0dda
            android.widget.ImageView r1 = r7.closePinned
            r2 = 8
            r1.setVisibility(r2)
        L_0x0dda:
            if (r0 < r4) goto L_0x0df4
            android.widget.ImageView r0 = r7.closePinned
            java.lang.String r1 = "inappPlayerClose"
            int r1 = org.telegram.ui.ActionBar.Theme.getColor(r1)
            r2 = 436207615(0x19ffffff, float:2.6469778E-23)
            r1 = r1 & r2
            int r2 = org.telegram.messenger.AndroidUtilities.dp(r15)
            r3 = 1
            android.graphics.drawable.Drawable r1 = org.telegram.ui.ActionBar.Theme.createSelectorDrawable(r1, r3, r2)
            r0.setBackgroundDrawable(r1)
        L_0x0df4:
            android.widget.FrameLayout r0 = r7.pinnedMessageView
            android.widget.ImageView r1 = r7.closePinned
            r31 = 36
            r32 = 1111490560(0x42400000, float:48.0)
            r33 = 53
            r34 = 0
            r35 = 0
            r36 = 1073741824(0x40000000, float:2.0)
            r37 = 0
            android.widget.FrameLayout$LayoutParams r2 = org.telegram.ui.Components.LayoutHelper.createFrame(r31, r32, r33, r34, r35, r36, r37)
            r0.addView(r1, r2)
            android.widget.ImageView r0 = r7.closePinned
            org.telegram.ui.-$$Lambda$ChatActivity$WhdmnIsE4ngL7u7CLASSNAMErxLp1EzwE r1 = new org.telegram.ui.-$$Lambda$ChatActivity$WhdmnIsE4ngL7u7CLASSNAMErxLp1EzwE
            r1.<init>()
            r0.setOnClickListener(r1)
            goto L_0x0e1a
        L_0x0e18:
            r4 = 21
        L_0x0e1a:
            org.telegram.ui.ChatActivity$21 r0 = new org.telegram.ui.ChatActivity$21
            r0.<init>(r8)
            r7.topChatPanelView = r0
            r1 = 1
            java.lang.Integer r2 = java.lang.Integer.valueOf(r1)
            r0.setTag(r2)
            r0 = 1112014848(0x42480000, float:50.0)
            int r0 = org.telegram.messenger.AndroidUtilities.dp(r0)
            int r0 = -r0
            float r0 = (float) r0
            r7.topChatPanelViewOffset = r0
            r39.invalidateChatListViewTopPadding()
            android.widget.FrameLayout r0 = r7.topChatPanelView
            r1 = 8
            r0.setVisibility(r1)
            android.widget.FrameLayout r0 = r7.topChatPanelView
            r1 = 2131165282(0x7var_, float:1.7944777E38)
            r0.setBackgroundResource(r1)
            android.widget.FrameLayout r0 = r7.topChatPanelView
            android.graphics.drawable.Drawable r0 = r0.getBackground()
            android.graphics.PorterDuffColorFilter r1 = new android.graphics.PorterDuffColorFilter
            java.lang.String r2 = "chat_topPanelBackground"
            int r2 = org.telegram.ui.ActionBar.Theme.getColor(r2)
            android.graphics.PorterDuff$Mode r3 = android.graphics.PorterDuff.Mode.MULTIPLY
            r1.<init>(r2, r3)
            r0.setColorFilter(r1)
            org.telegram.ui.Components.SizeNotifierFrameLayout r0 = r7.contentView
            android.widget.FrameLayout r1 = r7.topChatPanelView
            r2 = 50
            r3 = -1
            android.widget.FrameLayout$LayoutParams r2 = org.telegram.ui.Components.LayoutHelper.createFrame(r3, r2, r6)
            r0.addView(r1, r2)
            android.widget.TextView r0 = new android.widget.TextView
            r0.<init>(r8)
            r7.reportSpamButton = r0
            java.lang.String r1 = "chat_reportSpam"
            int r1 = org.telegram.ui.ActionBar.Theme.getColor(r1)
            r0.setTextColor(r1)
            int r0 = android.os.Build.VERSION.SDK_INT
            if (r0 < r4) goto L_0x0e91
            android.widget.TextView r1 = r7.reportSpamButton
            java.lang.String r2 = "chat_reportSpam"
            int r2 = org.telegram.ui.ActionBar.Theme.getColor(r2)
            r3 = 436207615(0x19ffffff, float:2.6469778E-23)
            r2 = r2 & r3
            r3 = 2
            android.graphics.drawable.Drawable r2 = org.telegram.ui.ActionBar.Theme.createSelectorDrawable(r2, r3)
            r1.setBackground(r2)
        L_0x0e91:
            android.widget.TextView r1 = r7.reportSpamButton
            java.lang.String r2 = "chat_reportSpam"
            r1.setTag(r2)
            android.widget.TextView r1 = r7.reportSpamButton
            r2 = 1
            r1.setTextSize(r2, r15)
            android.widget.TextView r1 = r7.reportSpamButton
            android.graphics.Typeface r3 = org.telegram.messenger.AndroidUtilities.getTypeface(r16)
            r1.setTypeface(r3)
            android.widget.TextView r1 = r7.reportSpamButton
            r1.setSingleLine(r2)
            android.widget.TextView r1 = r7.reportSpamButton
            r1.setMaxLines(r2)
            android.widget.TextView r1 = r7.reportSpamButton
            r1.setGravity(r14)
            android.widget.FrameLayout r1 = r7.topChatPanelView
            android.widget.TextView r2 = r7.reportSpamButton
            r31 = -1
            r32 = -1082130432(0xffffffffbvar_, float:-1.0)
            r33 = 51
            r34 = 0
            r35 = 0
            r36 = 0
            r37 = 1065353216(0x3var_, float:1.0)
            android.widget.FrameLayout$LayoutParams r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r31, r32, r33, r34, r35, r36, r37)
            r1.addView(r2, r3)
            android.widget.TextView r1 = r7.reportSpamButton
            org.telegram.ui.-$$Lambda$ChatActivity$bK8o5JPB3xWel3CF0iX8truTQHg r2 = new org.telegram.ui.-$$Lambda$ChatActivity$bK8o5JPB3xWel3CF0iX8truTQHg
            r2.<init>()
            r1.setOnClickListener(r2)
            android.widget.TextView r1 = new android.widget.TextView
            r1.<init>(r8)
            r7.addToContactsButton = r1
            java.lang.String r2 = "chat_addContact"
            int r2 = org.telegram.ui.ActionBar.Theme.getColor(r2)
            r1.setTextColor(r2)
            android.widget.TextView r1 = r7.addToContactsButton
            r2 = 8
            r1.setVisibility(r2)
            android.widget.TextView r1 = r7.addToContactsButton
            r2 = 1
            r1.setTextSize(r2, r15)
            android.widget.TextView r1 = r7.addToContactsButton
            android.graphics.Typeface r3 = org.telegram.messenger.AndroidUtilities.getTypeface(r16)
            r1.setTypeface(r3)
            android.widget.TextView r1 = r7.addToContactsButton
            r1.setSingleLine(r2)
            android.widget.TextView r1 = r7.addToContactsButton
            r1.setMaxLines(r2)
            android.widget.TextView r1 = r7.addToContactsButton
            r2 = 1082130432(0x40800000, float:4.0)
            int r2 = org.telegram.messenger.AndroidUtilities.dp(r2)
            r3 = 1082130432(0x40800000, float:4.0)
            int r3 = org.telegram.messenger.AndroidUtilities.dp(r3)
            r1.setPadding(r2, r11, r3, r11)
            android.widget.TextView r1 = r7.addToContactsButton
            r1.setGravity(r14)
            if (r0 < r4) goto L_0x0var_
            android.widget.TextView r1 = r7.addToContactsButton
            java.lang.String r2 = "chat_addContact"
            int r2 = org.telegram.ui.ActionBar.Theme.getColor(r2)
            r3 = 436207615(0x19ffffff, float:2.6469778E-23)
            r2 = r2 & r3
            r3 = 2
            android.graphics.drawable.Drawable r2 = org.telegram.ui.ActionBar.Theme.createSelectorDrawable(r2, r3)
            r1.setBackground(r2)
        L_0x0var_:
            android.widget.FrameLayout r1 = r7.topChatPanelView
            android.widget.TextView r2 = r7.addToContactsButton
            r31 = -1
            r32 = -1082130432(0xffffffffbvar_, float:-1.0)
            r33 = 51
            r34 = 0
            r35 = 0
            r36 = 0
            r37 = 1065353216(0x3var_, float:1.0)
            android.widget.FrameLayout$LayoutParams r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r31, r32, r33, r34, r35, r36, r37)
            r1.addView(r2, r3)
            android.widget.TextView r1 = r7.addToContactsButton
            org.telegram.ui.-$$Lambda$ChatActivity$ST9JNJOdWUMub-75Kc0PmN3yvV8 r2 = new org.telegram.ui.-$$Lambda$ChatActivity$ST9JNJOdWUMub-75Kc0PmN3yvV8
            r2.<init>(r8)
            r1.setOnClickListener(r2)
            android.widget.ImageView r1 = new android.widget.ImageView
            r1.<init>(r8)
            r7.closeReportSpam = r1
            r2 = 2131165704(0x7var_, float:1.7945633E38)
            r1.setImageResource(r2)
            android.widget.ImageView r1 = r7.closeReportSpam
            r2 = 2131624912(0x7f0e03d0, float:1.8877017E38)
            java.lang.String r3 = "Close"
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r3, r2)
            r1.setContentDescription(r2)
            if (r0 < r4) goto L_0x0var_
            android.widget.ImageView r1 = r7.closeReportSpam
            java.lang.String r2 = "chat_topPanelClose"
            int r2 = org.telegram.ui.ActionBar.Theme.getColor(r2)
            r3 = 436207615(0x19ffffff, float:2.6469778E-23)
            r2 = r2 & r3
            android.graphics.drawable.Drawable r2 = org.telegram.ui.ActionBar.Theme.createSelectorDrawable(r2)
            r1.setBackground(r2)
        L_0x0var_:
            android.widget.ImageView r1 = r7.closeReportSpam
            android.graphics.PorterDuffColorFilter r2 = new android.graphics.PorterDuffColorFilter
            java.lang.String r3 = "chat_topPanelClose"
            int r3 = org.telegram.ui.ActionBar.Theme.getColor(r3)
            android.graphics.PorterDuff$Mode r5 = android.graphics.PorterDuff.Mode.MULTIPLY
            r2.<init>(r3, r5)
            r1.setColorFilter(r2)
            android.widget.ImageView r1 = r7.closeReportSpam
            android.widget.ImageView$ScaleType r2 = android.widget.ImageView.ScaleType.CENTER
            r1.setScaleType(r2)
            android.widget.FrameLayout r1 = r7.topChatPanelView
            android.widget.ImageView r2 = r7.closeReportSpam
            r31 = 36
            r32 = 1111490560(0x42400000, float:48.0)
            r33 = 53
            r34 = 0
            r35 = 0
            r36 = 1073741824(0x40000000, float:2.0)
            r37 = 0
            android.widget.FrameLayout$LayoutParams r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r31, r32, r33, r34, r35, r36, r37)
            r1.addView(r2, r3)
            android.widget.ImageView r1 = r7.closeReportSpam
            org.telegram.ui.-$$Lambda$ChatActivity$6yphWRD8_gOx2KyJHw5kw-vdHng r2 = new org.telegram.ui.-$$Lambda$ChatActivity$6yphWRD8_gOx2KyJHw5kw-vdHng
            r2.<init>()
            r1.setOnClickListener(r2)
            android.widget.FrameLayout r1 = new android.widget.FrameLayout
            r1.<init>(r8)
            r7.alertView = r1
            r2 = 1
            java.lang.Integer r3 = java.lang.Integer.valueOf(r2)
            r1.setTag(r3)
            android.widget.FrameLayout r1 = r7.alertView
            r2 = 8
            r1.setVisibility(r2)
            android.widget.FrameLayout r1 = r7.alertView
            r2 = 2131165282(0x7var_, float:1.7944777E38)
            r1.setBackgroundResource(r2)
            android.widget.FrameLayout r1 = r7.alertView
            android.graphics.drawable.Drawable r1 = r1.getBackground()
            android.graphics.PorterDuffColorFilter r2 = new android.graphics.PorterDuffColorFilter
            java.lang.String r3 = "chat_topPanelBackground"
            int r3 = org.telegram.ui.ActionBar.Theme.getColor(r3)
            android.graphics.PorterDuff$Mode r5 = android.graphics.PorterDuff.Mode.MULTIPLY
            r2.<init>(r3, r5)
            r1.setColorFilter(r2)
            org.telegram.ui.Components.SizeNotifierFrameLayout r1 = r7.contentView
            android.widget.FrameLayout r2 = r7.alertView
            r3 = 50
            r5 = -1
            android.widget.FrameLayout$LayoutParams r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r5, r3, r6)
            r1.addView(r2, r3)
            android.widget.TextView r1 = new android.widget.TextView
            r1.<init>(r8)
            r7.alertNameTextView = r1
            r2 = 1
            r1.setTextSize(r2, r15)
            android.widget.TextView r1 = r7.alertNameTextView
            java.lang.String r3 = "chat_topPanelTitle"
            int r3 = org.telegram.ui.ActionBar.Theme.getColor(r3)
            r1.setTextColor(r3)
            android.widget.TextView r1 = r7.alertNameTextView
            android.graphics.Typeface r3 = org.telegram.messenger.AndroidUtilities.getTypeface(r16)
            r1.setTypeface(r3)
            android.widget.TextView r1 = r7.alertNameTextView
            r1.setSingleLine(r2)
            android.widget.TextView r1 = r7.alertNameTextView
            android.text.TextUtils$TruncateAt r3 = android.text.TextUtils.TruncateAt.END
            r1.setEllipsize(r3)
            android.widget.TextView r1 = r7.alertNameTextView
            r1.setMaxLines(r2)
            android.widget.FrameLayout r1 = r7.alertView
            android.widget.TextView r2 = r7.alertNameTextView
            r31 = -2
            r32 = -1073741824(0xffffffffCLASSNAME, float:-2.0)
            r33 = 51
            r34 = 1090519040(0x41000000, float:8.0)
            r35 = 1084227584(0x40a00000, float:5.0)
            r36 = 1090519040(0x41000000, float:8.0)
            android.widget.FrameLayout$LayoutParams r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r31, r32, r33, r34, r35, r36, r37)
            r1.addView(r2, r3)
            android.widget.TextView r1 = new android.widget.TextView
            r1.<init>(r8)
            r7.alertTextView = r1
            r2 = 1
            r1.setTextSize(r2, r15)
            android.widget.TextView r1 = r7.alertTextView
            java.lang.String r3 = "chat_topPanelMessage"
            int r3 = org.telegram.ui.ActionBar.Theme.getColor(r3)
            r1.setTextColor(r3)
            android.widget.TextView r1 = r7.alertTextView
            r1.setSingleLine(r2)
            android.widget.TextView r1 = r7.alertTextView
            android.text.TextUtils$TruncateAt r3 = android.text.TextUtils.TruncateAt.END
            r1.setEllipsize(r3)
            android.widget.TextView r1 = r7.alertTextView
            r1.setMaxLines(r2)
            android.widget.FrameLayout r1 = r7.alertView
            android.widget.TextView r2 = r7.alertTextView
            r35 = 1102577664(0x41b80000, float:23.0)
            android.widget.FrameLayout$LayoutParams r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r31, r32, r33, r34, r35, r36, r37)
            r1.addView(r2, r3)
            android.widget.FrameLayout r1 = new android.widget.FrameLayout
            r1.<init>(r8)
            r7.pagedownButton = r1
            r2 = 4
            r1.setVisibility(r2)
            org.telegram.ui.Components.SizeNotifierFrameLayout r1 = r7.contentView
            android.widget.FrameLayout r2 = r7.pagedownButton
            r31 = 66
            r32 = 1114898432(0x42740000, float:61.0)
            r33 = 85
            r34 = 0
            r35 = 0
            r36 = -1069547520(0xffffffffCLASSNAME, float:-3.0)
            r37 = 1084227584(0x40a00000, float:5.0)
            android.widget.FrameLayout$LayoutParams r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r31, r32, r33, r34, r35, r36, r37)
            r1.addView(r2, r3)
            android.widget.FrameLayout r1 = r7.pagedownButton
            org.telegram.ui.-$$Lambda$ChatActivity$hjYu3ltkU73jd7BZ19QolwdyQfY r2 = new org.telegram.ui.-$$Lambda$ChatActivity$hjYu3ltkU73jd7BZ19QolwdyQfY
            r2.<init>()
            r1.setOnClickListener(r2)
            android.widget.FrameLayout r1 = new android.widget.FrameLayout
            r1.<init>(r8)
            r7.mentiondownButton = r1
            r2 = 4
            r1.setVisibility(r2)
            org.telegram.ui.Components.SizeNotifierFrameLayout r1 = r7.contentView
            android.widget.FrameLayout r2 = r7.mentiondownButton
            r31 = 46
            r36 = 1088421888(0x40e00000, float:7.0)
            android.widget.FrameLayout$LayoutParams r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r31, r32, r33, r34, r35, r36, r37)
            r1.addView(r2, r3)
            android.widget.FrameLayout r1 = r7.mentiondownButton
            org.telegram.ui.ChatActivity$22 r2 = new org.telegram.ui.ChatActivity$22
            r2.<init>()
            r1.setOnClickListener(r2)
            android.widget.FrameLayout r1 = r7.mentiondownButton
            org.telegram.ui.-$$Lambda$ChatActivity$Pujlbek2pSb3_nmZTnEL7h9AqZ4 r2 = new org.telegram.ui.-$$Lambda$ChatActivity$Pujlbek2pSb3_nmZTnEL7h9AqZ4
            r2.<init>()
            r1.setOnLongClickListener(r2)
            org.telegram.ui.ChatActivity$23 r1 = new org.telegram.ui.ChatActivity$23
            r1.<init>(r8)
            r7.mentionContainer = r1
            r2 = 8
            r1.setVisibility(r2)
            r39.updateMessageListAccessibilityVisibility()
            android.widget.FrameLayout r1 = r7.mentionContainer
            r1.setWillNotDraw(r11)
            org.telegram.ui.Components.SizeNotifierFrameLayout r1 = r7.contentView
            android.widget.FrameLayout r2 = r7.mentionContainer
            r3 = 110(0x6e, float:1.54E-43)
            r5 = 83
            r4 = -1
            android.widget.FrameLayout$LayoutParams r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r4, r3, r5)
            r1.addView(r2, r3)
            org.telegram.ui.ChatActivity$24 r1 = new org.telegram.ui.ChatActivity$24
            r1.<init>(r8)
            r7.mentionListView = r1
            org.telegram.ui.-$$Lambda$ChatActivity$DBl4rI_z6iq1kPeT6fH_XdnSxk8 r2 = new org.telegram.ui.-$$Lambda$ChatActivity$DBl4rI_z6iq1kPeT6fH_XdnSxk8
            r2.<init>()
            r1.setOnTouchListener(r2)
            org.telegram.ui.Components.RecyclerListView r1 = r7.mentionListView
            r2 = 2
            java.lang.Integer r3 = java.lang.Integer.valueOf(r2)
            r1.setTag(r3)
            org.telegram.ui.ChatActivity$25 r1 = new org.telegram.ui.ChatActivity$25
            r1.<init>(r8)
            r7.mentionLayoutManager = r1
            r2 = 1
            r1.setOrientation(r2)
            org.telegram.ui.ChatActivity$26 r1 = new org.telegram.ui.ChatActivity$26
            r2 = 100
            r1.<init>(r8, r2)
            r7.mentionGridLayoutManager = r1
            org.telegram.ui.ChatActivity$27 r2 = new org.telegram.ui.ChatActivity$27
            r2.<init>()
            r1.setSpanSizeLookup(r2)
            org.telegram.ui.Components.RecyclerListView r1 = r7.mentionListView
            org.telegram.ui.ChatActivity$28 r2 = new org.telegram.ui.ChatActivity$28
            r2.<init>()
            r1.addItemDecoration(r2)
            org.telegram.ui.Components.RecyclerListView r1 = r7.mentionListView
            r2 = 0
            r1.setItemAnimator(r2)
            org.telegram.ui.Components.RecyclerListView r1 = r7.mentionListView
            r1.setLayoutAnimation(r2)
            org.telegram.ui.Components.RecyclerListView r1 = r7.mentionListView
            r1.setClipToPadding(r11)
            org.telegram.ui.Components.RecyclerListView r1 = r7.mentionListView
            androidx.recyclerview.widget.LinearLayoutManager r2 = r7.mentionLayoutManager
            r1.setLayoutManager(r2)
            org.telegram.ui.Components.RecyclerListView r1 = r7.mentionListView
            r2 = 2
            r1.setOverScrollMode(r2)
            android.widget.FrameLayout r1 = r7.mentionContainer
            org.telegram.ui.Components.RecyclerListView r2 = r7.mentionListView
            r3 = -1082130432(0xffffffffbvar_, float:-1.0)
            r4 = -1
            android.widget.FrameLayout$LayoutParams r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r4, r3)
            r1.addView(r2, r3)
            org.telegram.ui.Components.RecyclerListView r4 = r7.mentionListView
            org.telegram.ui.Adapters.MentionsAdapter r5 = new org.telegram.ui.Adapters.MentionsAdapter
            r3 = 0
            long r1 = r7.dialog_id
            org.telegram.ui.ChatActivity$29 r6 = new org.telegram.ui.ChatActivity$29
            r6.<init>()
            r22 = r1
            r1 = r5
            r2 = r40
            r15 = r4
            r13 = r5
            r14 = 21
            r4 = r22
            r1.<init>(r2, r3, r4, r6)
            r7.mentionsAdapter = r13
            r15.setAdapter(r13)
            org.telegram.tgnet.TLRPC$Chat r1 = r7.currentChat
            boolean r1 = org.telegram.messenger.ChatObject.isChannel(r1)
            if (r1 == 0) goto L_0x1198
            org.telegram.tgnet.TLRPC$Chat r1 = r7.currentChat
            boolean r1 = r1.megagroup
            if (r1 == 0) goto L_0x119f
        L_0x1198:
            org.telegram.ui.Adapters.MentionsAdapter r1 = r7.mentionsAdapter
            android.util.SparseArray<org.telegram.tgnet.TLRPC$BotInfo> r2 = r7.botInfo
            r1.setBotInfo(r2)
        L_0x119f:
            org.telegram.ui.Adapters.MentionsAdapter r1 = r7.mentionsAdapter
            r1.setParentFragment(r7)
            org.telegram.ui.Adapters.MentionsAdapter r1 = r7.mentionsAdapter
            org.telegram.tgnet.TLRPC$ChatFull r2 = r7.chatInfo
            r1.setChatInfo(r2)
            org.telegram.ui.Adapters.MentionsAdapter r1 = r7.mentionsAdapter
            org.telegram.tgnet.TLRPC$Chat r2 = r7.currentChat
            if (r2 == 0) goto L_0x11b3
            r2 = 1
            goto L_0x11b4
        L_0x11b3:
            r2 = 0
        L_0x11b4:
            r1.setNeedUsernames(r2)
            org.telegram.ui.Adapters.MentionsAdapter r1 = r7.mentionsAdapter
            org.telegram.tgnet.TLRPC$EncryptedChat r2 = r7.currentEncryptedChat
            r13 = 46
            if (r2 == 0) goto L_0x11ca
            int r2 = r2.layer
            int r2 = org.telegram.messenger.AndroidUtilities.getPeerLayerVersion(r2)
            if (r2 < r13) goto L_0x11c8
            goto L_0x11ca
        L_0x11c8:
            r2 = 0
            goto L_0x11cb
        L_0x11ca:
            r2 = 1
        L_0x11cb:
            r1.setNeedBotContext(r2)
            org.telegram.ui.Adapters.MentionsAdapter r1 = r7.mentionsAdapter
            org.telegram.tgnet.TLRPC$Chat r2 = r7.currentChat
            if (r2 == 0) goto L_0x11d7
            int r2 = r7.botsCount
            goto L_0x11d8
        L_0x11d7:
            r2 = 1
        L_0x11d8:
            r1.setBotsCount(r2)
            org.telegram.ui.Components.RecyclerListView r1 = r7.mentionListView
            org.telegram.ui.-$$Lambda$ChatActivity$poMOmNjDg5Z8HMGgozP0HJahF8Y r2 = new org.telegram.ui.-$$Lambda$ChatActivity$poMOmNjDg5Z8HMGgozP0HJahF8Y
            r2.<init>()
            r7.mentionsOnItemClickListener = r2
            r1.setOnItemClickListener((org.telegram.ui.Components.RecyclerListView.OnItemClickListener) r2)
            org.telegram.ui.Components.RecyclerListView r1 = r7.mentionListView
            org.telegram.ui.-$$Lambda$ChatActivity$r3qsDUb4AIhfH6zhjkmwfCkrSXA r2 = new org.telegram.ui.-$$Lambda$ChatActivity$r3qsDUb4AIhfH6zhjkmwfCkrSXA
            r2.<init>()
            r1.setOnItemLongClickListener((org.telegram.ui.Components.RecyclerListView.OnItemLongClickListener) r2)
            org.telegram.ui.Components.RecyclerListView r1 = r7.mentionListView
            org.telegram.ui.ChatActivity$30 r2 = new org.telegram.ui.ChatActivity$30
            r2.<init>()
            r1.setOnScrollListener(r2)
            android.widget.ImageView r1 = new android.widget.ImageView
            r1.<init>(r8)
            r7.pagedownButtonImage = r1
            r2 = 2131165885(0x7var_bd, float:1.7946E38)
            r1.setImageResource(r2)
            android.widget.ImageView r1 = r7.pagedownButtonImage
            android.widget.ImageView$ScaleType r2 = android.widget.ImageView.ScaleType.CENTER
            r1.setScaleType(r2)
            android.widget.ImageView r1 = r7.pagedownButtonImage
            android.graphics.PorterDuffColorFilter r2 = new android.graphics.PorterDuffColorFilter
            java.lang.String r3 = "chat_goDownButtonIcon"
            int r3 = org.telegram.ui.ActionBar.Theme.getColor(r3)
            android.graphics.PorterDuff$Mode r4 = android.graphics.PorterDuff.Mode.MULTIPLY
            r2.<init>(r3, r4)
            r1.setColorFilter(r2)
            android.widget.ImageView r1 = r7.pagedownButtonImage
            int r2 = org.telegram.messenger.AndroidUtilities.dp(r12)
            r1.setPadding(r11, r2, r11, r11)
            r1 = 1109917696(0x42280000, float:42.0)
            if (r0 < r14) goto L_0x124d
            android.widget.ImageView r2 = r7.pagedownButtonImage
            org.telegram.ui.ChatActivity$31 r3 = new org.telegram.ui.ChatActivity$31
            r3.<init>(r7)
            r2.setOutlineProvider(r3)
            int r2 = org.telegram.messenger.AndroidUtilities.dp(r1)
            java.lang.String r3 = "chat_goDownButton"
            int r3 = org.telegram.ui.ActionBar.Theme.getColor(r3)
            java.lang.String r4 = "listSelectorSDK21"
            int r4 = org.telegram.ui.ActionBar.Theme.getColor(r4)
            android.graphics.drawable.Drawable r2 = org.telegram.ui.ActionBar.Theme.createSimpleSelectorCircleDrawable(r2, r3, r4)
            goto L_0x125b
        L_0x124d:
            int r2 = org.telegram.messenger.AndroidUtilities.dp(r1)
            java.lang.String r3 = "chat_goDownButton"
            int r3 = org.telegram.ui.ActionBar.Theme.getColor(r3)
            android.graphics.drawable.ShapeDrawable r2 = org.telegram.ui.ActionBar.Theme.createCircleDrawable(r2, r3)
        L_0x125b:
            android.content.res.Resources r3 = r40.getResources()
            r4 = 2131165886(0x7var_be, float:1.7946002E38)
            android.graphics.drawable.Drawable r3 = r3.getDrawable(r4)
            android.graphics.drawable.Drawable r3 = r3.mutate()
            android.graphics.PorterDuffColorFilter r4 = new android.graphics.PorterDuffColorFilter
            java.lang.String r5 = "chat_goDownButtonShadow"
            int r5 = org.telegram.ui.ActionBar.Theme.getColor(r5)
            android.graphics.PorterDuff$Mode r6 = android.graphics.PorterDuff.Mode.MULTIPLY
            r4.<init>(r5, r6)
            r3.setColorFilter(r4)
            org.telegram.ui.Components.CombinedDrawable r4 = new org.telegram.ui.Components.CombinedDrawable
            r4.<init>(r3, r2, r11, r11)
            int r2 = org.telegram.messenger.AndroidUtilities.dp(r1)
            int r3 = org.telegram.messenger.AndroidUtilities.dp(r1)
            r4.setIconSize(r2, r3)
            android.widget.ImageView r2 = r7.pagedownButtonImage
            r2.setBackgroundDrawable(r4)
            android.widget.FrameLayout r2 = r7.pagedownButton
            android.widget.ImageView r3 = r7.pagedownButtonImage
            r4 = 81
            android.widget.FrameLayout$LayoutParams r4 = org.telegram.ui.Components.LayoutHelper.createFrame(r13, r13, r4)
            r2.addView(r3, r4)
            android.widget.FrameLayout r2 = r7.pagedownButton
            r3 = 2131624004(0x7f0e0044, float:1.8875175E38)
            java.lang.String r4 = "AccDescrPageDown"
            java.lang.String r3 = org.telegram.messenger.LocaleController.getString(r4, r3)
            r2.setContentDescription(r3)
            org.telegram.ui.Components.CounterView r2 = new org.telegram.ui.Components.CounterView
            r2.<init>(r8)
            r7.pagedownButtonCounter = r2
            r3 = 1
            r2.setReverse(r3)
            android.widget.FrameLayout r2 = r7.pagedownButton
            org.telegram.ui.Components.CounterView r3 = r7.pagedownButtonCounter
            r4 = 28
            r5 = -1
            r15 = 51
            android.widget.FrameLayout$LayoutParams r4 = org.telegram.ui.Components.LayoutHelper.createFrame(r5, r4, r15)
            r2.addView(r3, r4)
            android.widget.ImageView r2 = new android.widget.ImageView
            r2.<init>(r8)
            r7.mentiondownButtonImage = r2
            r3 = 2131165622(0x7var_b6, float:1.7945466E38)
            r2.setImageResource(r3)
            android.widget.ImageView r2 = r7.mentiondownButtonImage
            android.widget.ImageView$ScaleType r3 = android.widget.ImageView.ScaleType.CENTER
            r2.setScaleType(r3)
            android.widget.ImageView r2 = r7.mentiondownButtonImage
            android.graphics.PorterDuffColorFilter r3 = new android.graphics.PorterDuffColorFilter
            java.lang.String r4 = "chat_goDownButtonIcon"
            int r4 = org.telegram.ui.ActionBar.Theme.getColor(r4)
            android.graphics.PorterDuff$Mode r5 = android.graphics.PorterDuff.Mode.MULTIPLY
            r3.<init>(r4, r5)
            r2.setColorFilter(r3)
            android.widget.ImageView r2 = r7.mentiondownButtonImage
            int r3 = org.telegram.messenger.AndroidUtilities.dp(r12)
            r2.setPadding(r11, r3, r11, r11)
            if (r0 < r14) goto L_0x1315
            android.widget.ImageView r2 = r7.pagedownButtonImage
            org.telegram.ui.ChatActivity$32 r3 = new org.telegram.ui.ChatActivity$32
            r3.<init>(r7)
            r2.setOutlineProvider(r3)
            int r2 = org.telegram.messenger.AndroidUtilities.dp(r1)
            java.lang.String r3 = "chat_goDownButton"
            int r3 = org.telegram.ui.ActionBar.Theme.getColor(r3)
            java.lang.String r4 = "listSelectorSDK21"
            int r4 = org.telegram.ui.ActionBar.Theme.getColor(r4)
            android.graphics.drawable.Drawable r2 = org.telegram.ui.ActionBar.Theme.createSimpleSelectorCircleDrawable(r2, r3, r4)
            goto L_0x1323
        L_0x1315:
            int r2 = org.telegram.messenger.AndroidUtilities.dp(r1)
            java.lang.String r3 = "chat_goDownButton"
            int r3 = org.telegram.ui.ActionBar.Theme.getColor(r3)
            android.graphics.drawable.ShapeDrawable r2 = org.telegram.ui.ActionBar.Theme.createCircleDrawable(r2, r3)
        L_0x1323:
            android.content.res.Resources r3 = r40.getResources()
            r4 = 2131165886(0x7var_be, float:1.7946002E38)
            android.graphics.drawable.Drawable r3 = r3.getDrawable(r4)
            android.graphics.drawable.Drawable r3 = r3.mutate()
            android.graphics.PorterDuffColorFilter r4 = new android.graphics.PorterDuffColorFilter
            java.lang.String r5 = "chat_goDownButtonShadow"
            int r5 = org.telegram.ui.ActionBar.Theme.getColor(r5)
            android.graphics.PorterDuff$Mode r6 = android.graphics.PorterDuff.Mode.MULTIPLY
            r4.<init>(r5, r6)
            r3.setColorFilter(r4)
            org.telegram.ui.Components.CombinedDrawable r4 = new org.telegram.ui.Components.CombinedDrawable
            r4.<init>(r3, r2, r11, r11)
            int r2 = org.telegram.messenger.AndroidUtilities.dp(r1)
            int r1 = org.telegram.messenger.AndroidUtilities.dp(r1)
            r4.setIconSize(r2, r1)
            android.widget.ImageView r1 = r7.mentiondownButtonImage
            r1.setBackgroundDrawable(r4)
            android.widget.FrameLayout r1 = r7.mentiondownButton
            android.widget.ImageView r2 = r7.mentiondownButtonImage
            r3 = 83
            android.widget.FrameLayout$LayoutParams r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r13, r13, r3)
            r1.addView(r2, r3)
            org.telegram.ui.ActionBar.SimpleTextView r1 = new org.telegram.ui.ActionBar.SimpleTextView
            r1.<init>(r8)
            r7.mentiondownButtonCounter = r1
            r2 = 4
            r1.setVisibility(r2)
            org.telegram.ui.ActionBar.SimpleTextView r1 = r7.mentiondownButtonCounter
            android.graphics.Typeface r2 = org.telegram.messenger.AndroidUtilities.getTypeface(r16)
            r1.setTypeface(r2)
            org.telegram.ui.ActionBar.SimpleTextView r1 = r7.mentiondownButtonCounter
            r2 = 13
            r1.setTextSize(r2)
            org.telegram.ui.ActionBar.SimpleTextView r1 = r7.mentiondownButtonCounter
            java.lang.String r2 = "chat_goDownButtonCounter"
            int r2 = org.telegram.ui.ActionBar.Theme.getColor(r2)
            r1.setTextColor(r2)
            org.telegram.ui.ActionBar.SimpleTextView r1 = r7.mentiondownButtonCounter
            r2 = 17
            r1.setGravity(r2)
            org.telegram.ui.ActionBar.SimpleTextView r1 = r7.mentiondownButtonCounter
            r2 = 1094189056(0x41380000, float:11.5)
            int r2 = org.telegram.messenger.AndroidUtilities.dp(r2)
            java.lang.String r3 = "chat_goDownButtonCounterBackground"
            int r3 = org.telegram.ui.ActionBar.Theme.getColor(r3)
            android.graphics.drawable.Drawable r2 = org.telegram.ui.ActionBar.Theme.createRoundRectDrawable(r2, r3)
            r1.setBackgroundDrawable(r2)
            org.telegram.ui.ActionBar.SimpleTextView r1 = r7.mentiondownButtonCounter
            r2 = 1102577664(0x41b80000, float:23.0)
            int r2 = org.telegram.messenger.AndroidUtilities.dp(r2)
            r1.setMinWidth(r2)
            org.telegram.ui.ActionBar.SimpleTextView r1 = r7.mentiondownButtonCounter
            r2 = 1090519040(0x41000000, float:8.0)
            int r2 = org.telegram.messenger.AndroidUtilities.dp(r2)
            r3 = 1065353216(0x3var_, float:1.0)
            int r3 = org.telegram.messenger.AndroidUtilities.dp(r3)
            r4 = 1090519040(0x41000000, float:8.0)
            int r4 = org.telegram.messenger.AndroidUtilities.dp(r4)
            r1.setPadding(r2, r3, r4, r11)
            android.widget.FrameLayout r1 = r7.mentiondownButton
            org.telegram.ui.ActionBar.SimpleTextView r2 = r7.mentiondownButtonCounter
            r3 = 23
            r4 = 49
            r5 = -2
            android.widget.FrameLayout$LayoutParams r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r5, r3, r4)
            r1.addView(r2, r3)
            android.widget.FrameLayout r1 = r7.mentiondownButton
            r2 = 2131623984(0x7f0e0030, float:1.8875135E38)
            java.lang.String r3 = "AccDescrMentionDown"
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r3, r2)
            r1.setContentDescription(r2)
            org.telegram.ui.Components.SizeNotifierFrameLayout r1 = r7.contentView
            org.telegram.ui.Components.FragmentContextView r2 = new org.telegram.ui.Components.FragmentContextView
            r3 = 1
            r2.<init>(r8, r7, r3)
            r7.fragmentLocationContextView = r2
            r31 = -1
            r32 = 1108869120(0x42180000, float:38.0)
            r33 = 51
            r34 = 0
            r35 = -1039138816(0xffffffffCLASSNAME, float:-36.0)
            r36 = 0
            r37 = 0
            android.widget.FrameLayout$LayoutParams r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r31, r32, r33, r34, r35, r36, r37)
            r1.addView(r2, r3)
            org.telegram.ui.Components.SizeNotifierFrameLayout r1 = r7.contentView
            org.telegram.ui.ChatActivity$33 r2 = new org.telegram.ui.ChatActivity$33
            r2.<init>(r8, r7, r11)
            r7.fragmentContextView = r2
            android.widget.FrameLayout$LayoutParams r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r31, r32, r33, r34, r35, r36, r37)
            r1.addView(r2, r3)
            org.telegram.ui.Components.FragmentContextView r1 = r7.fragmentContextView
            org.telegram.ui.Components.FragmentContextView r2 = r7.fragmentLocationContextView
            r1.setAdditionalContextView(r2)
            org.telegram.ui.Components.FragmentContextView r1 = r7.fragmentLocationContextView
            org.telegram.ui.Components.FragmentContextView r2 = r7.fragmentContextView
            r1.setAdditionalContextView(r2)
            int r1 = r7.chatMode
            if (r1 == 0) goto L_0x142c
            org.telegram.ui.Components.FragmentContextView r1 = r7.fragmentContextView
            r1.setSupportsCalls(r11)
        L_0x142c:
            org.telegram.ui.Components.RecyclerListView r1 = new org.telegram.ui.Components.RecyclerListView
            r1.<init>(r8)
            r7.messagesSearchListView = r1
            java.lang.String r2 = "windowBackgroundWhite"
            int r2 = org.telegram.ui.ActionBar.Theme.getColor(r2)
            r1.setBackgroundColor(r2)
            androidx.recyclerview.widget.LinearLayoutManager r1 = new androidx.recyclerview.widget.LinearLayoutManager
            r1.<init>(r8)
            r2 = 1
            r1.setOrientation(r2)
            org.telegram.ui.Components.RecyclerListView r2 = r7.messagesSearchListView
            r2.setLayoutManager(r1)
            org.telegram.ui.Components.RecyclerListView r2 = r7.messagesSearchListView
            r3 = 8
            r2.setVisibility(r3)
            org.telegram.ui.Components.RecyclerListView r2 = r7.messagesSearchListView
            r3 = 0
            r2.setAlpha(r3)
            org.telegram.ui.Components.RecyclerListView r2 = r7.messagesSearchListView
            org.telegram.ui.Adapters.MessagesSearchAdapter r3 = new org.telegram.ui.Adapters.MessagesSearchAdapter
            r3.<init>(r8)
            r7.messagesSearchAdapter = r3
            r2.setAdapter(r3)
            org.telegram.ui.Components.SizeNotifierFrameLayout r2 = r7.contentView
            org.telegram.ui.Components.RecyclerListView r3 = r7.messagesSearchListView
            r31 = -1
            r32 = -1082130432(0xffffffffbvar_, float:-1.0)
            r33 = 51
            r34 = 0
            r35 = 0
            r36 = 0
            r37 = 1111490560(0x42400000, float:48.0)
            android.widget.FrameLayout$LayoutParams r4 = org.telegram.ui.Components.LayoutHelper.createFrame(r31, r32, r33, r34, r35, r36, r37)
            r2.addView(r3, r4)
            org.telegram.ui.Components.RecyclerListView r2 = r7.messagesSearchListView
            org.telegram.ui.-$$Lambda$ChatActivity$x65O07vl3HaYI5EEAuevmJ8Vvar_ r3 = new org.telegram.ui.-$$Lambda$ChatActivity$x65O07vl3HaYI5EEAuevmJ8Vvar_
            r3.<init>()
            r2.setOnItemClickListener((org.telegram.ui.Components.RecyclerListView.OnItemClickListener) r3)
            org.telegram.ui.Components.RecyclerListView r2 = r7.messagesSearchListView
            org.telegram.ui.ChatActivity$34 r3 = new org.telegram.ui.ChatActivity$34
            r3.<init>(r1)
            r2.setOnScrollListener(r3)
            org.telegram.ui.ChatActivity$35 r1 = new org.telegram.ui.ChatActivity$35
            r2 = 1
            r1.<init>(r8, r7, r2)
            r7.topUndoView = r1
            org.telegram.ui.Components.SizeNotifierFrameLayout r2 = r7.contentView
            r32 = -1073741824(0xffffffffCLASSNAME, float:-2.0)
            r34 = 1090519040(0x41000000, float:8.0)
            r35 = 1090519040(0x41000000, float:8.0)
            r36 = 1090519040(0x41000000, float:8.0)
            r37 = 0
            android.widget.FrameLayout$LayoutParams r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r31, r32, r33, r34, r35, r36, r37)
            r2.addView(r1, r3)
            org.telegram.ui.Components.SizeNotifierFrameLayout r1 = r7.contentView
            org.telegram.ui.ActionBar.ActionBar r2 = r7.actionBar
            r1.addView(r2)
            android.view.View r1 = new android.view.View
            r1.<init>(r8)
            r7.overlayView = r1
            org.telegram.ui.-$$Lambda$ChatActivity$FZ5CuxRcU5Twl-QHWb2eeF2Jleo r2 = new org.telegram.ui.-$$Lambda$ChatActivity$FZ5CuxRcU5Twl-QHWb2eeF2Jleo
            r2.<init>()
            r1.setOnTouchListener(r2)
            org.telegram.ui.Components.SizeNotifierFrameLayout r1 = r7.contentView
            android.view.View r2 = r7.overlayView
            r3 = -1
            android.widget.FrameLayout$LayoutParams r4 = org.telegram.ui.Components.LayoutHelper.createFrame(r3, r3, r15)
            r1.addView(r2, r4)
            android.view.View r1 = r7.overlayView
            r2 = 8
            r1.setVisibility(r2)
            org.telegram.ui.Components.SizeNotifierFrameLayout r1 = r7.contentView
            r1.setClipChildren(r11)
            org.telegram.ui.Components.InstantCameraView r1 = new org.telegram.ui.Components.InstantCameraView
            r1.<init>(r8, r7)
            r7.instantCameraView = r1
            org.telegram.ui.Components.SizeNotifierFrameLayout r2 = r7.contentView
            android.widget.FrameLayout$LayoutParams r4 = org.telegram.ui.Components.LayoutHelper.createFrame(r3, r3, r15)
            r2.addView(r1, r4)
            org.telegram.ui.ChatActivity$36 r1 = new org.telegram.ui.ChatActivity$36
            r1.<init>(r7, r8)
            r7.bottomMessagesActionContainer = r1
            r2 = 4
            r1.setVisibility(r2)
            android.widget.FrameLayout r1 = r7.bottomMessagesActionContainer
            r1.setWillNotDraw(r11)
            android.widget.FrameLayout r1 = r7.bottomMessagesActionContainer
            int r2 = org.telegram.messenger.AndroidUtilities.dp(r12)
            r1.setPadding(r11, r2, r11, r11)
            org.telegram.ui.Components.SizeNotifierFrameLayout r1 = r7.contentView
            android.widget.FrameLayout r2 = r7.bottomMessagesActionContainer
            r3 = 80
            r4 = -1
            android.widget.FrameLayout$LayoutParams r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r4, r15, r3)
            r1.addView(r2, r3)
            android.widget.FrameLayout r1 = r7.bottomMessagesActionContainer
            org.telegram.ui.-$$Lambda$ChatActivity$aA_2zQMJz2fuqkQOR0gapQlMrZo r2 = org.telegram.ui.$$Lambda$ChatActivity$aA_2zQMJz2fuqkQOR0gapQlMrZo.INSTANCE
            r1.setOnTouchListener(r2)
            org.telegram.ui.ChatActivity$37 r6 = new org.telegram.ui.ChatActivity$37
            android.app.Activity r3 = r39.getParentActivity()
            org.telegram.ui.Components.SizeNotifierFrameLayout r4 = r7.contentView
            r22 = 1
            r1 = r6
            r2 = r39
            r5 = r39
            r11 = r6
            r6 = r22
            r1.<init>(r3, r4, r5, r6)
            r7.chatActivityEnterView = r11
            org.telegram.ui.ChatActivity$38 r1 = new org.telegram.ui.ChatActivity$38
            r1.<init>()
            r11.setDelegate(r1)
            org.telegram.ui.Components.ChatActivityEnterView r1 = r7.chatActivityEnterView
            long r2 = r7.dialog_id
            int r4 = r7.currentAccount
            r1.setDialogId(r2, r4)
            org.telegram.tgnet.TLRPC$ChatFull r1 = r7.chatInfo
            if (r1 == 0) goto L_0x1549
            org.telegram.ui.Components.ChatActivityEnterView r2 = r7.chatActivityEnterView
            r2.setChatInfo(r1)
        L_0x1549:
            org.telegram.ui.Components.ChatActivityEnterView r1 = r7.chatActivityEnterView
            r2 = 1000(0x3e8, float:1.401E-42)
            r1.setId(r2)
            org.telegram.ui.Components.ChatActivityEnterView r1 = r7.chatActivityEnterView
            int r2 = r7.botsCount
            boolean r3 = r7.hasBotsCommands
            r1.setBotsCount(r2, r3)
            org.telegram.ui.Components.ChatActivityEnterView r1 = r7.chatActivityEnterView
            r2 = 1112276992(0x424CLASSNAME, float:51.0)
            int r2 = org.telegram.messenger.AndroidUtilities.dp(r2)
            r1.setMinimumHeight(r2)
            org.telegram.ui.Components.ChatActivityEnterView r1 = r7.chatActivityEnterView
            org.telegram.tgnet.TLRPC$EncryptedChat r2 = r7.currentEncryptedChat
            if (r2 == 0) goto L_0x1577
            int r2 = r2.layer
            int r2 = org.telegram.messenger.AndroidUtilities.getPeerLayerVersion(r2)
            r3 = 23
            if (r2 < r3) goto L_0x1575
            goto L_0x1577
        L_0x1575:
            r2 = 0
            goto L_0x1578
        L_0x1577:
            r2 = 1
        L_0x1578:
            org.telegram.tgnet.TLRPC$EncryptedChat r3 = r7.currentEncryptedChat
            if (r3 == 0) goto L_0x1587
            int r3 = r3.layer
            int r3 = org.telegram.messenger.AndroidUtilities.getPeerLayerVersion(r3)
            if (r3 < r13) goto L_0x1585
            goto L_0x1587
        L_0x1585:
            r3 = 0
            goto L_0x1588
        L_0x1587:
            r3 = 1
        L_0x1588:
            r1.setAllowStickersAndGifs(r2, r3)
            boolean r1 = r7.inPreviewMode
            if (r1 == 0) goto L_0x1595
            org.telegram.ui.Components.ChatActivityEnterView r1 = r7.chatActivityEnterView
            r2 = 4
            r1.setVisibility(r2)
        L_0x1595:
            org.telegram.ui.Components.SizeNotifierFrameLayout r1 = r7.contentView
            org.telegram.ui.Components.ChatActivityEnterView r2 = r7.chatActivityEnterView
            int r3 = r1.getChildCount()
            r4 = 1
            int r3 = r3 - r4
            r4 = 83
            r5 = -2
            r6 = -1
            android.widget.FrameLayout$LayoutParams r4 = org.telegram.ui.Components.LayoutHelper.createFrame(r6, r5, r4)
            r1.addView(r2, r3, r4)
            org.telegram.ui.ChatActivity$39 r1 = new org.telegram.ui.ChatActivity$39
            r1.<init>(r8)
            r7.chatActivityEnterTopView = r1
            android.view.View r1 = new android.view.View
            r1.<init>(r8)
            r7.replyLineView = r1
            java.lang.String r2 = "chat_replyPanelLine"
            int r2 = org.telegram.ui.ActionBar.Theme.getColor(r2)
            r1.setBackgroundColor(r2)
            org.telegram.ui.Components.ChatActivityEnterView r1 = r7.chatActivityEnterView
            org.telegram.ui.ChatActivityEnterTopView r2 = r7.chatActivityEnterTopView
            android.view.View r3 = r7.replyLineView
            r4 = 48
            r1.addTopView(r2, r3, r4)
            android.widget.FrameLayout r1 = new android.widget.FrameLayout
            r1.<init>(r8)
            org.telegram.ui.ChatActivityEnterTopView r2 = r7.chatActivityEnterTopView
            r31 = -1
            r32 = -1082130432(0xffffffffbvar_, float:-1.0)
            r33 = 0
            r34 = 0
            r35 = 0
            r36 = 1112539136(0x42500000, float:52.0)
            r37 = 0
            android.widget.FrameLayout$LayoutParams r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r31, r32, r33, r34, r35, r36, r37)
            r2.addReplyView(r1, r3)
            org.telegram.ui.-$$Lambda$ChatActivity$8IgvD_JSQmfDSi21VL5XMxQtWm0 r2 = new org.telegram.ui.-$$Lambda$ChatActivity$8IgvD_JSQmfDSi21VL5XMxQtWm0
            r2.<init>()
            r1.setOnClickListener(r2)
            android.widget.ImageView r2 = new android.widget.ImageView
            r2.<init>(r8)
            r7.replyIconImageView = r2
            android.graphics.PorterDuffColorFilter r3 = new android.graphics.PorterDuffColorFilter
            java.lang.String r4 = "chat_replyPanelIcons"
            int r4 = org.telegram.ui.ActionBar.Theme.getColor(r4)
            android.graphics.PorterDuff$Mode r5 = android.graphics.PorterDuff.Mode.MULTIPLY
            r3.<init>(r4, r5)
            r2.setColorFilter(r3)
            android.widget.ImageView r2 = r7.replyIconImageView
            android.widget.ImageView$ScaleType r3 = android.widget.ImageView.ScaleType.CENTER
            r2.setScaleType(r3)
            android.widget.ImageView r2 = r7.replyIconImageView
            r3 = 52
            android.widget.FrameLayout$LayoutParams r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r3, r13, r15)
            r1.addView(r2, r3)
            android.widget.ImageView r2 = new android.widget.ImageView
            r2.<init>(r8)
            r7.replyCloseImageView = r2
            android.graphics.PorterDuffColorFilter r3 = new android.graphics.PorterDuffColorFilter
            java.lang.String r4 = "chat_replyPanelClose"
            int r4 = org.telegram.ui.ActionBar.Theme.getColor(r4)
            android.graphics.PorterDuff$Mode r5 = android.graphics.PorterDuff.Mode.MULTIPLY
            r3.<init>(r4, r5)
            r2.setColorFilter(r3)
            android.widget.ImageView r2 = r7.replyCloseImageView
            r3 = 2131165537(0x7var_, float:1.7945294E38)
            r2.setImageResource(r3)
            android.widget.ImageView r2 = r7.replyCloseImageView
            android.widget.ImageView$ScaleType r3 = android.widget.ImageView.ScaleType.CENTER
            r2.setScaleType(r3)
            if (r0 < r14) goto L_0x165b
            android.widget.ImageView r0 = r7.replyCloseImageView
            java.lang.String r2 = "inappPlayerClose"
            int r2 = org.telegram.ui.ActionBar.Theme.getColor(r2)
            r3 = 436207615(0x19ffffff, float:2.6469778E-23)
            r2 = r2 & r3
            r3 = 1099956224(0x41900000, float:18.0)
            int r3 = org.telegram.messenger.AndroidUtilities.dp(r3)
            r4 = 1
            android.graphics.drawable.Drawable r2 = org.telegram.ui.ActionBar.Theme.createSelectorDrawable(r2, r4, r3)
            r0.setBackgroundDrawable(r2)
        L_0x165b:
            org.telegram.ui.ChatActivityEnterTopView r0 = r7.chatActivityEnterTopView
            android.widget.ImageView r2 = r7.replyCloseImageView
            r31 = 52
            r32 = 1110966272(0x42380000, float:46.0)
            r33 = 53
            r34 = 0
            r35 = 1056964608(0x3var_, float:0.5)
            r36 = 0
            r37 = 0
            android.widget.FrameLayout$LayoutParams r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r31, r32, r33, r34, r35, r36, r37)
            r0.addView(r2, r3)
            android.widget.ImageView r0 = r7.replyCloseImageView
            org.telegram.ui.-$$Lambda$ChatActivity$n09gg2iwxTTCE01MdVfIPGqRDzo r2 = new org.telegram.ui.-$$Lambda$ChatActivity$n09gg2iwxTTCE01MdVfIPGqRDzo
            r2.<init>(r8)
            r0.setOnClickListener(r2)
            org.telegram.ui.ActionBar.SimpleTextView r0 = new org.telegram.ui.ActionBar.SimpleTextView
            r0.<init>(r8)
            r7.replyNameTextView = r0
            r2 = 14
            r0.setTextSize(r2)
            org.telegram.ui.ActionBar.SimpleTextView r0 = r7.replyNameTextView
            java.lang.String r2 = "chat_replyPanelName"
            int r2 = org.telegram.ui.ActionBar.Theme.getColor(r2)
            r0.setTextColor(r2)
            org.telegram.ui.ActionBar.SimpleTextView r0 = r7.replyNameTextView
            android.graphics.Typeface r2 = org.telegram.messenger.AndroidUtilities.getTypeface(r16)
            r0.setTypeface(r2)
            org.telegram.ui.ActionBar.SimpleTextView r0 = r7.replyNameTextView
            r31 = -1
            r32 = 1099956224(0x41900000, float:18.0)
            r33 = 51
            r34 = 1112539136(0x42500000, float:52.0)
            r35 = 1086324736(0x40CLASSNAME, float:6.0)
            android.widget.FrameLayout$LayoutParams r2 = org.telegram.ui.Components.LayoutHelper.createFrame(r31, r32, r33, r34, r35, r36, r37)
            r1.addView(r0, r2)
            org.telegram.ui.ActionBar.SimpleTextView r0 = new org.telegram.ui.ActionBar.SimpleTextView
            r0.<init>(r8)
            r7.replyObjectTextView = r0
            r2 = 14
            r0.setTextSize(r2)
            org.telegram.ui.ActionBar.SimpleTextView r0 = r7.replyObjectTextView
            java.lang.String r2 = "chat_replyPanelMessage"
            int r2 = org.telegram.ui.ActionBar.Theme.getColor(r2)
            r0.setTextColor(r2)
            org.telegram.ui.ActionBar.SimpleTextView r0 = r7.replyObjectTextView
            r35 = 1103101952(0x41CLASSNAME, float:24.0)
            android.widget.FrameLayout$LayoutParams r2 = org.telegram.ui.Components.LayoutHelper.createFrame(r31, r32, r33, r34, r35, r36, r37)
            r1.addView(r0, r2)
            org.telegram.ui.Components.BackupImageView r0 = new org.telegram.ui.Components.BackupImageView
            r0.<init>(r8)
            r7.replyImageView = r0
            int r2 = org.telegram.messenger.AndroidUtilities.dp(r12)
            r0.setRoundRadius(r2)
            org.telegram.ui.Components.BackupImageView r0 = r7.replyImageView
            r31 = 34
            r32 = 1107820544(0x42080000, float:34.0)
            r35 = 1086324736(0x40CLASSNAME, float:6.0)
            android.widget.FrameLayout$LayoutParams r2 = org.telegram.ui.Components.LayoutHelper.createFrame(r31, r32, r33, r34, r35, r36, r37)
            r1.addView(r0, r2)
            android.widget.FrameLayout r0 = new android.widget.FrameLayout
            r0.<init>(r8)
            r7.stickersPanel = r0
            r2 = 8
            r0.setVisibility(r2)
            org.telegram.ui.Components.SizeNotifierFrameLayout r0 = r7.contentView
            android.widget.FrameLayout r2 = r7.stickersPanel
            r31 = -2
            r32 = 1117978624(0x42a30000, float:81.5)
            r33 = 83
            r34 = 0
            r35 = 0
            r37 = 1108869120(0x42180000, float:38.0)
            android.widget.FrameLayout$LayoutParams r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r31, r32, r33, r34, r35, r36, r37)
            r0.addView(r2, r3)
            org.telegram.ui.ChatActivityEnterTopView$EditView r0 = new org.telegram.ui.ChatActivityEnterTopView$EditView
            r0.<init>(r8)
            r2 = 0
            r0.setMotionEventSplittingEnabled(r2)
            r0.setOrientation(r2)
            org.telegram.ui.-$$Lambda$ChatActivity$MA1x6fNdPRPxh9lwdeeZ9QJlIpo r2 = new org.telegram.ui.-$$Lambda$ChatActivity$MA1x6fNdPRPxh9lwdeeZ9QJlIpo
            r2.<init>()
            r0.setOnClickListener(r2)
            org.telegram.ui.ChatActivityEnterTopView r2 = r7.chatActivityEnterTopView
            r31 = -1
            r32 = -1082130432(0xffffffffbvar_, float:-1.0)
            r33 = 0
            r36 = 1111490560(0x42400000, float:48.0)
            r37 = 0
            android.widget.FrameLayout$LayoutParams r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r31, r32, r33, r34, r35, r36, r37)
            r2.addEditView(r0, r3)
            r2 = 0
        L_0x173b:
            r3 = 2
            if (r2 >= r3) goto L_0x17c5
            if (r2 != 0) goto L_0x1742
            r3 = 1
            goto L_0x1743
        L_0x1742:
            r3 = 0
        L_0x1743:
            org.telegram.ui.ChatActivity$40 r4 = new org.telegram.ui.ChatActivity$40
            r4.<init>(r7, r8, r3)
            r5 = 0
            r4.setOrientation(r5)
            r5 = 1092616192(0x41200000, float:10.0)
            r6 = 1092616192(0x41200000, float:10.0)
            r11 = 0
            org.telegram.ui.Components.ViewHelper.setPadding(r4, r5, r11, r6, r11)
            r5 = -2
            r6 = -1
            android.widget.LinearLayout$LayoutParams r11 = org.telegram.ui.Components.LayoutHelper.createLinear(r5, r6)
            r0.addButton(r4, r11)
            android.widget.ImageView r5 = new android.widget.ImageView
            r5.<init>(r8)
            android.widget.ImageView$ScaleType r6 = android.widget.ImageView.ScaleType.CENTER
            r5.setScaleType(r6)
            if (r3 == 0) goto L_0x176d
            r3 = 2131165787(0x7var_b, float:1.79458E38)
            goto L_0x1770
        L_0x176d:
            r3 = 2131165795(0x7var_, float:1.7945817E38)
        L_0x1770:
            r5.setImageResource(r3)
            r3 = 24
            r6 = -1
            android.widget.LinearLayout$LayoutParams r3 = org.telegram.ui.Components.LayoutHelper.createLinear(r3, r6)
            r4.addImageView(r5, r3)
            android.widget.Space r3 = new android.widget.Space
            r3.<init>(r8)
            r5 = 10
            android.widget.LinearLayout$LayoutParams r5 = org.telegram.ui.Components.LayoutHelper.createLinear(r5, r6)
            r4.addView(r3, r5)
            android.widget.TextView r3 = new android.widget.TextView
            r3.<init>(r8)
            r5 = 1
            r3.setMaxLines(r5)
            r3.setSingleLine(r5)
            r6 = 1096810496(0x41600000, float:14.0)
            r3.setTextSize(r5, r6)
            android.graphics.Typeface r5 = org.telegram.messenger.AndroidUtilities.getTypeface(r16)
            r3.setTypeface(r5)
            r5 = 19
            r3.setGravity(r5)
            android.text.TextUtils$TruncateAt r5 = android.text.TextUtils.TruncateAt.END
            r3.setEllipsize(r5)
            r5 = -2
            r6 = -1
            android.widget.LinearLayout$LayoutParams r11 = org.telegram.ui.Components.LayoutHelper.createLinear(r5, r6)
            r4.addTextView(r3, r11)
            r4.updateColors()
            org.telegram.ui.-$$Lambda$ChatActivity$0rWtxSrhd3s45qFuIJdtr-t_u3w r3 = new org.telegram.ui.-$$Lambda$ChatActivity$0rWtxSrhd3s45qFuIJdtr-t_u3w
            r3.<init>(r4, r1)
            r4.setOnClickListener(r3)
            int r2 = r2 + 1
            goto L_0x173b
        L_0x17c5:
            org.telegram.ui.ChatActivity$41 r0 = new org.telegram.ui.ChatActivity$41
            r0.<init>()
            org.telegram.ui.ChatActivity$42 r1 = new org.telegram.ui.ChatActivity$42
            r1.<init>(r8, r0)
            r7.stickersListView = r1
            r2 = 3
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r1.setTag(r2)
            org.telegram.ui.Components.RecyclerListView r1 = r7.stickersListView
            org.telegram.ui.-$$Lambda$ChatActivity$PH5RwaE09uD1A6YFKVzcpON2xnM r2 = new org.telegram.ui.-$$Lambda$ChatActivity$PH5RwaE09uD1A6YFKVzcpON2xnM
            r2.<init>(r0)
            r1.setOnTouchListener(r2)
            org.telegram.ui.Components.RecyclerListView r0 = r7.stickersListView
            r1 = 1
            r0.setDisallowInterceptTouchEvents(r1)
            androidx.recyclerview.widget.LinearLayoutManager r0 = new androidx.recyclerview.widget.LinearLayoutManager
            r0.<init>(r8)
            r1 = 0
            r0.setOrientation(r1)
            org.telegram.ui.Components.RecyclerListView r2 = r7.stickersListView
            r2.setLayoutManager(r0)
            org.telegram.ui.Components.RecyclerListView r0 = r7.stickersListView
            r0.setClipToPadding(r1)
            org.telegram.ui.Components.RecyclerListView r0 = r7.stickersListView
            r1 = 2
            r0.setOverScrollMode(r1)
            android.widget.FrameLayout r0 = r7.stickersPanel
            org.telegram.ui.Components.RecyclerListView r1 = r7.stickersListView
            r2 = 1117519872(0x429CLASSNAME, float:78.0)
            r3 = -1
            android.widget.FrameLayout$LayoutParams r2 = org.telegram.ui.Components.LayoutHelper.createFrame(r3, r2)
            r0.addView(r1, r2)
            r39.initStickers()
            android.widget.ImageView r0 = new android.widget.ImageView
            r0.<init>(r8)
            r7.stickersPanelArrow = r0
            r1 = 2131166056(0x7var_, float:1.7946347E38)
            r0.setImageResource(r1)
            android.widget.ImageView r0 = r7.stickersPanelArrow
            android.graphics.PorterDuffColorFilter r1 = new android.graphics.PorterDuffColorFilter
            java.lang.String r2 = "chat_stickersHintPanel"
            int r2 = org.telegram.ui.ActionBar.Theme.getColor(r2)
            android.graphics.PorterDuff$Mode r3 = android.graphics.PorterDuff.Mode.MULTIPLY
            r1.<init>(r2, r3)
            r0.setColorFilter(r1)
            android.widget.FrameLayout r0 = r7.stickersPanel
            android.widget.ImageView r1 = r7.stickersPanelArrow
            r31 = -2
            r32 = -1073741824(0xffffffffCLASSNAME, float:-2.0)
            r33 = 83
            r34 = 1112801280(0x42540000, float:53.0)
            r35 = 0
            r36 = 1112801280(0x42540000, float:53.0)
            r37 = 0
            android.widget.FrameLayout$LayoutParams r2 = org.telegram.ui.Components.LayoutHelper.createFrame(r31, r32, r33, r34, r35, r36, r37)
            r0.addView(r1, r2)
            org.telegram.ui.ChatActivity$43 r0 = new org.telegram.ui.ChatActivity$43
            r0.<init>(r8)
            r7.searchContainer = r0
            r1 = 0
            r0.setWillNotDraw(r1)
            android.widget.FrameLayout r0 = r7.searchContainer
            r2 = 4
            r0.setVisibility(r2)
            android.widget.FrameLayout r0 = r7.searchContainer
            r2 = 1077936128(0x40400000, float:3.0)
            int r2 = org.telegram.messenger.AndroidUtilities.dp(r2)
            r0.setPadding(r1, r2, r1, r1)
            android.widget.FrameLayout r0 = r7.searchContainer
            r0.setClipToPadding(r1)
            android.view.View r0 = new android.view.View
            r0.<init>(r8)
            r7.searchAsListTogglerView = r0
            org.telegram.ui.-$$Lambda$ChatActivity$Onz4rjqnNeOoiYR3Z81Vin7j7Sg r2 = new org.telegram.ui.-$$Lambda$ChatActivity$Onz4rjqnNeOoiYR3Z81Vin7j7Sg
            r2.<init>()
            r0.setOnTouchListener(r2)
            int r0 = android.os.Build.VERSION.SDK_INT
            if (r0 < r14) goto L_0x188c
            android.view.View r2 = r7.searchAsListTogglerView
            int r3 = org.telegram.ui.ActionBar.Theme.getColor(r9)
            android.graphics.drawable.Drawable r3 = org.telegram.ui.ActionBar.Theme.getSelectorDrawable((int) r3, (boolean) r1)
            r2.setBackground(r3)
        L_0x188c:
            android.view.View r1 = r7.searchAsListTogglerView
            org.telegram.ui.-$$Lambda$ChatActivity$Kyc4HEuQu5kJPKr3ZFndKeKqrrw r2 = new org.telegram.ui.-$$Lambda$ChatActivity$Kyc4HEuQu5kJPKr3ZFndKeKqrrw
            r2.<init>()
            r1.setOnClickListener(r2)
            android.graphics.drawable.Drawable r1 = org.telegram.ui.ActionBar.Theme.chat_composeShadowDrawable
            int r1 = r1.getIntrinsicHeight()
            float r1 = (float) r1
            float r2 = org.telegram.messenger.AndroidUtilities.density
            float r1 = r1 / r2
            r2 = 1077936128(0x40400000, float:3.0)
            float r35 = r1 - r2
            android.widget.FrameLayout r1 = r7.searchContainer
            android.view.View r2 = r7.searchAsListTogglerView
            r31 = -1
            r32 = -1082130432(0xffffffffbvar_, float:-1.0)
            r33 = 0
            r34 = 0
            r36 = 0
            r37 = 0
            android.widget.FrameLayout$LayoutParams r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r31, r32, r33, r34, r35, r36, r37)
            r1.addView(r2, r3)
            android.widget.ImageView r1 = new android.widget.ImageView
            r1.<init>(r8)
            r7.searchUpButton = r1
            android.widget.ImageView$ScaleType r2 = android.widget.ImageView.ScaleType.CENTER
            r1.setScaleType(r2)
            android.widget.ImageView r1 = r7.searchUpButton
            r2 = 2131165749(0x7var_, float:1.7945724E38)
            r1.setImageResource(r2)
            android.widget.ImageView r1 = r7.searchUpButton
            android.graphics.PorterDuffColorFilter r2 = new android.graphics.PorterDuffColorFilter
            java.lang.String r3 = "chat_searchPanelIcons"
            int r3 = org.telegram.ui.ActionBar.Theme.getColor(r3)
            android.graphics.PorterDuff$Mode r4 = android.graphics.PorterDuff.Mode.MULTIPLY
            r2.<init>(r3, r4)
            r1.setColorFilter(r2)
            android.widget.ImageView r1 = r7.searchUpButton
            int r2 = org.telegram.ui.ActionBar.Theme.getColor(r9)
            r3 = 1
            android.graphics.drawable.Drawable r2 = org.telegram.ui.ActionBar.Theme.createSelectorDrawable(r2, r3)
            r1.setBackgroundDrawable(r2)
            android.widget.FrameLayout r1 = r7.searchContainer
            android.widget.ImageView r2 = r7.searchUpButton
            r31 = 48
            r32 = 1111490560(0x42400000, float:48.0)
            r33 = 53
            r35 = 0
            r36 = 1111490560(0x42400000, float:48.0)
            android.widget.FrameLayout$LayoutParams r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r31, r32, r33, r34, r35, r36, r37)
            r1.addView(r2, r3)
            android.widget.ImageView r1 = r7.searchUpButton
            org.telegram.ui.-$$Lambda$ChatActivity$hH9nwU3qatmxxxfgL8E2y6xGS4E r2 = new org.telegram.ui.-$$Lambda$ChatActivity$hH9nwU3qatmxxxfgL8E2y6xGS4E
            r2.<init>()
            r1.setOnClickListener(r2)
            android.widget.ImageView r1 = r7.searchUpButton
            r2 = 2131624025(0x7f0e0059, float:1.8875218E38)
            java.lang.String r3 = "AccDescrSearchNext"
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r3, r2)
            r1.setContentDescription(r2)
            android.widget.ImageView r1 = new android.widget.ImageView
            r1.<init>(r8)
            r7.searchDownButton = r1
            android.widget.ImageView$ScaleType r2 = android.widget.ImageView.ScaleType.CENTER
            r1.setScaleType(r2)
            android.widget.ImageView r1 = r7.searchDownButton
            r2 = 2131165748(0x7var_, float:1.7945722E38)
            r1.setImageResource(r2)
            android.widget.ImageView r1 = r7.searchDownButton
            android.graphics.PorterDuffColorFilter r2 = new android.graphics.PorterDuffColorFilter
            java.lang.String r3 = "chat_searchPanelIcons"
            int r3 = org.telegram.ui.ActionBar.Theme.getColor(r3)
            android.graphics.PorterDuff$Mode r4 = android.graphics.PorterDuff.Mode.MULTIPLY
            r2.<init>(r3, r4)
            r1.setColorFilter(r2)
            android.widget.ImageView r1 = r7.searchDownButton
            int r2 = org.telegram.ui.ActionBar.Theme.getColor(r9)
            r3 = 1
            android.graphics.drawable.Drawable r2 = org.telegram.ui.ActionBar.Theme.createSelectorDrawable(r2, r3)
            r1.setBackgroundDrawable(r2)
            android.widget.FrameLayout r1 = r7.searchContainer
            android.widget.ImageView r2 = r7.searchDownButton
            r36 = 0
            android.widget.FrameLayout$LayoutParams r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r31, r32, r33, r34, r35, r36, r37)
            r1.addView(r2, r3)
            android.widget.ImageView r1 = r7.searchDownButton
            org.telegram.ui.-$$Lambda$ChatActivity$Hd5mE-lfc7PyQKy77Odg5mr4zZU r2 = new org.telegram.ui.-$$Lambda$ChatActivity$Hd5mE-lfc7PyQKy77Odg5mr4zZU
            r2.<init>()
            r1.setOnClickListener(r2)
            android.widget.ImageView r1 = r7.searchDownButton
            r2 = 2131624026(0x7f0e005a, float:1.887522E38)
            java.lang.String r3 = "AccDescrSearchPrev"
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r3, r2)
            r1.setContentDescription(r2)
            org.telegram.tgnet.TLRPC$Chat r1 = r7.currentChat
            if (r1 == 0) goto L_0x19ea
            boolean r1 = org.telegram.messenger.ChatObject.isChannel(r1)
            if (r1 == 0) goto L_0x1985
            org.telegram.tgnet.TLRPC$Chat r1 = r7.currentChat
            boolean r1 = r1.megagroup
            if (r1 == 0) goto L_0x19ea
        L_0x1985:
            android.widget.ImageView r1 = new android.widget.ImageView
            r1.<init>(r8)
            r7.searchUserButton = r1
            android.widget.ImageView$ScaleType r2 = android.widget.ImageView.ScaleType.CENTER
            r1.setScaleType(r2)
            android.widget.ImageView r1 = r7.searchUserButton
            r2 = 2131165837(0x7var_d, float:1.7945902E38)
            r1.setImageResource(r2)
            android.widget.ImageView r1 = r7.searchUserButton
            android.graphics.PorterDuffColorFilter r2 = new android.graphics.PorterDuffColorFilter
            java.lang.String r3 = "chat_searchPanelIcons"
            int r3 = org.telegram.ui.ActionBar.Theme.getColor(r3)
            android.graphics.PorterDuff$Mode r4 = android.graphics.PorterDuff.Mode.MULTIPLY
            r2.<init>(r3, r4)
            r1.setColorFilter(r2)
            android.widget.ImageView r1 = r7.searchUserButton
            int r2 = org.telegram.ui.ActionBar.Theme.getColor(r9)
            r3 = 1
            android.graphics.drawable.Drawable r2 = org.telegram.ui.ActionBar.Theme.createSelectorDrawable(r2, r3)
            r1.setBackgroundDrawable(r2)
            android.widget.FrameLayout r1 = r7.searchContainer
            android.widget.ImageView r2 = r7.searchUserButton
            r31 = 48
            r32 = 1111490560(0x42400000, float:48.0)
            r33 = 51
            r34 = 1111490560(0x42400000, float:48.0)
            r35 = 0
            r36 = 0
            r37 = 0
            android.widget.FrameLayout$LayoutParams r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r31, r32, r33, r34, r35, r36, r37)
            r1.addView(r2, r3)
            android.widget.ImageView r1 = r7.searchUserButton
            org.telegram.ui.-$$Lambda$ChatActivity$2GxORvjxERtcjdaBecW7yRCTb2U r2 = new org.telegram.ui.-$$Lambda$ChatActivity$2GxORvjxERtcjdaBecW7yRCTb2U
            r2.<init>()
            r1.setOnClickListener(r2)
            android.widget.ImageView r1 = r7.searchUserButton
            r2 = 2131624024(0x7f0e0058, float:1.8875216E38)
            java.lang.String r3 = "AccDescrSearchByUser"
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r3, r2)
            r1.setContentDescription(r2)
        L_0x19ea:
            android.widget.ImageView r1 = new android.widget.ImageView
            r1.<init>(r8)
            r7.searchCalendarButton = r1
            android.widget.ImageView$ScaleType r2 = android.widget.ImageView.ScaleType.CENTER
            r1.setScaleType(r2)
            android.widget.ImageView r1 = r7.searchCalendarButton
            r2 = 2131165722(0x7var_a, float:1.794567E38)
            r1.setImageResource(r2)
            android.widget.ImageView r1 = r7.searchCalendarButton
            android.graphics.PorterDuffColorFilter r2 = new android.graphics.PorterDuffColorFilter
            java.lang.String r3 = "chat_searchPanelIcons"
            int r3 = org.telegram.ui.ActionBar.Theme.getColor(r3)
            android.graphics.PorterDuff$Mode r4 = android.graphics.PorterDuff.Mode.MULTIPLY
            r2.<init>(r3, r4)
            r1.setColorFilter(r2)
            android.widget.ImageView r1 = r7.searchCalendarButton
            int r2 = org.telegram.ui.ActionBar.Theme.getColor(r9)
            r3 = 1
            android.graphics.drawable.Drawable r2 = org.telegram.ui.ActionBar.Theme.createSelectorDrawable(r2, r3)
            r1.setBackgroundDrawable(r2)
            android.widget.FrameLayout r1 = r7.searchContainer
            android.widget.ImageView r2 = r7.searchCalendarButton
            r3 = 48
            r4 = 48
            android.widget.FrameLayout$LayoutParams r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r3, r4, r15)
            r1.addView(r2, r3)
            android.widget.ImageView r1 = r7.searchCalendarButton
            org.telegram.ui.-$$Lambda$ChatActivity$_wcWDCePdpcms-4-CPz1CqiFlcs r2 = new org.telegram.ui.-$$Lambda$ChatActivity$_wcWDCePdpcms-4-CPz1CqiFlcs
            r2.<init>()
            r1.setOnClickListener(r2)
            android.widget.ImageView r1 = r7.searchCalendarButton
            r2 = 2131625891(0x7f0e07a3, float:1.8879003E38)
            java.lang.String r3 = "JumpToDate"
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r3, r2)
            r1.setContentDescription(r2)
            org.telegram.ui.Components.SearchCounterView r1 = new org.telegram.ui.Components.SearchCounterView
            r1.<init>(r8)
            r7.searchCountText = r1
            r2 = 3
            r1.setGravity(r2)
            android.widget.FrameLayout r1 = r7.searchContainer
            org.telegram.ui.Components.SearchCounterView r2 = r7.searchCountText
            r31 = -2
            r32 = -1073741824(0xffffffffCLASSNAME, float:-2.0)
            r33 = 16
            r34 = 0
            r35 = 0
            r36 = 1121452032(0x42d80000, float:108.0)
            r37 = 0
            android.widget.FrameLayout$LayoutParams r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r31, r32, r33, r34, r35, r36, r37)
            r1.addView(r2, r3)
            org.telegram.ui.ChatActivity$44 r1 = new org.telegram.ui.ChatActivity$44
            r1.<init>(r7, r8)
            r7.bottomOverlay = r1
            r2 = 0
            r1.setWillNotDraw(r2)
            android.widget.FrameLayout r1 = r7.bottomOverlay
            r3 = 4
            r1.setVisibility(r3)
            android.widget.FrameLayout r1 = r7.bottomOverlay
            r3 = 1
            r1.setFocusable(r3)
            android.widget.FrameLayout r1 = r7.bottomOverlay
            r1.setFocusableInTouchMode(r3)
            android.widget.FrameLayout r1 = r7.bottomOverlay
            r1.setClickable(r3)
            android.widget.FrameLayout r1 = r7.bottomOverlay
            int r3 = org.telegram.messenger.AndroidUtilities.dp(r12)
            r1.setPadding(r2, r3, r2, r2)
            org.telegram.ui.Components.SizeNotifierFrameLayout r1 = r7.contentView
            android.widget.FrameLayout r2 = r7.bottomOverlay
            r3 = 80
            r4 = -1
            android.widget.FrameLayout$LayoutParams r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r4, r15, r3)
            r1.addView(r2, r3)
            android.widget.TextView r1 = new android.widget.TextView
            r1.<init>(r8)
            r7.bottomOverlayText = r1
            r2 = 1096810496(0x41600000, float:14.0)
            r3 = 1
            r1.setTextSize(r3, r2)
            android.widget.TextView r1 = r7.bottomOverlayText
            r2 = 17
            r1.setGravity(r2)
            android.widget.TextView r1 = r7.bottomOverlayText
            r2 = 2
            r1.setMaxLines(r2)
            android.widget.TextView r1 = r7.bottomOverlayText
            android.text.TextUtils$TruncateAt r2 = android.text.TextUtils.TruncateAt.END
            r1.setEllipsize(r2)
            android.widget.TextView r1 = r7.bottomOverlayText
            int r2 = org.telegram.messenger.AndroidUtilities.dp(r12)
            float r2 = (float) r2
            r3 = 1065353216(0x3var_, float:1.0)
            r1.setLineSpacing(r2, r3)
            android.widget.TextView r1 = r7.bottomOverlayText
            java.lang.String r2 = "chat_secretChatStatusText"
            int r2 = org.telegram.ui.ActionBar.Theme.getColor(r2)
            r1.setTextColor(r2)
            android.widget.FrameLayout r1 = r7.bottomOverlay
            android.widget.TextView r2 = r7.bottomOverlayText
            r33 = 17
            r34 = 1096810496(0x41600000, float:14.0)
            r36 = 1096810496(0x41600000, float:14.0)
            android.widget.FrameLayout$LayoutParams r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r31, r32, r33, r34, r35, r36, r37)
            r1.addView(r2, r3)
            org.telegram.ui.ChatActivity$45 r1 = new org.telegram.ui.ChatActivity$45
            r1.<init>(r8)
            r7.bottomOverlayChat = r1
            r2 = 0
            r1.setWillNotDraw(r2)
            android.widget.FrameLayout r1 = r7.bottomOverlayChat
            r3 = 1069547520(0x3fCLASSNAME, float:1.5)
            int r3 = org.telegram.messenger.AndroidUtilities.dp(r3)
            r1.setPadding(r2, r3, r2, r2)
            android.widget.FrameLayout r1 = r7.bottomOverlayChat
            r3 = 4
            r1.setVisibility(r3)
            android.widget.FrameLayout r1 = r7.bottomOverlayChat
            r1.setClipChildren(r2)
            org.telegram.ui.Components.SizeNotifierFrameLayout r1 = r7.contentView
            android.widget.FrameLayout r2 = r7.bottomOverlayChat
            r3 = 80
            r4 = -1
            android.widget.FrameLayout$LayoutParams r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r4, r15, r3)
            r1.addView(r2, r3)
            org.telegram.ui.ChatActivity$UnreadCounterTextView r1 = new org.telegram.ui.ChatActivity$UnreadCounterTextView
            r1.<init>(r8)
            r7.bottomOverlayChatText = r1
            android.widget.FrameLayout r2 = r7.bottomOverlayChat
            r31 = -1
            r32 = -1082130432(0xffffffffbvar_, float:-1.0)
            r33 = 0
            r34 = 0
            r35 = 1069547520(0x3fCLASSNAME, float:1.5)
            r36 = 0
            android.widget.FrameLayout$LayoutParams r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r31, r32, r33, r34, r35, r36, r37)
            r2.addView(r1, r3)
            org.telegram.ui.ChatActivity$UnreadCounterTextView r1 = r7.bottomOverlayChatText
            org.telegram.ui.-$$Lambda$ChatActivity$3vy-IpdAhW2ZBtz7pFHe0vdP_CI r2 = new org.telegram.ui.-$$Lambda$ChatActivity$3vy-IpdAhW2ZBtz7pFHe0vdP_CI
            r2.<init>()
            r1.setOnClickListener(r2)
            org.telegram.ui.Components.RadialProgressView r1 = new org.telegram.ui.Components.RadialProgressView
            r1.<init>(r8)
            r7.bottomOverlayProgress = r1
            r2 = 1102053376(0x41b00000, float:22.0)
            int r2 = org.telegram.messenger.AndroidUtilities.dp(r2)
            r1.setSize(r2)
            org.telegram.ui.Components.RadialProgressView r1 = r7.bottomOverlayProgress
            java.lang.String r2 = "chat_fieldOverlayText"
            int r2 = org.telegram.ui.ActionBar.Theme.getColor(r2)
            r1.setProgressColor(r2)
            org.telegram.ui.Components.RadialProgressView r1 = r7.bottomOverlayProgress
            r2 = 4
            r1.setVisibility(r2)
            org.telegram.ui.Components.RadialProgressView r1 = r7.bottomOverlayProgress
            r2 = 1036831949(0x3dcccccd, float:0.1)
            r1.setScaleX(r2)
            org.telegram.ui.Components.RadialProgressView r1 = r7.bottomOverlayProgress
            r1.setScaleY(r2)
            org.telegram.ui.Components.RadialProgressView r1 = r7.bottomOverlayProgress
            r2 = 1065353216(0x3var_, float:1.0)
            r1.setAlpha(r2)
            android.widget.FrameLayout r1 = r7.bottomOverlayChat
            org.telegram.ui.Components.RadialProgressView r2 = r7.bottomOverlayProgress
            r3 = 30
            r4 = 30
            r5 = 17
            android.widget.FrameLayout$LayoutParams r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r3, r4, r5)
            r1.addView(r2, r3)
            android.widget.ImageView r1 = new android.widget.ImageView
            r1.<init>(r8)
            r7.bottomOverlayImage = r1
            java.lang.String r1 = "chat_fieldOverlayText"
            int r1 = org.telegram.ui.ActionBar.Theme.getColor(r1)
            android.widget.ImageView r2 = r7.bottomOverlayImage
            r3 = 2131165603(0x7var_a3, float:1.7945428E38)
            r2.setImageResource(r3)
            android.widget.ImageView r2 = r7.bottomOverlayImage
            android.graphics.PorterDuffColorFilter r3 = new android.graphics.PorterDuffColorFilter
            android.graphics.PorterDuff$Mode r4 = android.graphics.PorterDuff.Mode.MULTIPLY
            r3.<init>(r1, r4)
            r2.setColorFilter(r3)
            android.widget.ImageView r2 = r7.bottomOverlayImage
            android.widget.ImageView$ScaleType r3 = android.widget.ImageView.ScaleType.CENTER
            r2.setScaleType(r3)
            if (r0 < r14) goto L_0x1bcb
            android.widget.ImageView r2 = r7.bottomOverlayImage
            r3 = 24
            int r4 = android.graphics.Color.red(r1)
            int r5 = android.graphics.Color.green(r1)
            int r1 = android.graphics.Color.blue(r1)
            int r1 = android.graphics.Color.argb(r3, r4, r5, r1)
            r3 = 1
            android.graphics.drawable.Drawable r1 = org.telegram.ui.ActionBar.Theme.createSelectorDrawable(r1, r3)
            r2.setBackgroundDrawable(r1)
        L_0x1bcb:
            android.widget.FrameLayout r1 = r7.bottomOverlayChat
            android.widget.ImageView r2 = r7.bottomOverlayImage
            r31 = 48
            r32 = 1111490560(0x42400000, float:48.0)
            r33 = 53
            r34 = 1077936128(0x40400000, float:3.0)
            r35 = 1069547520(0x3fCLASSNAME, float:1.5)
            r36 = 0
            r37 = 0
            android.widget.FrameLayout$LayoutParams r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r31, r32, r33, r34, r35, r36, r37)
            r1.addView(r2, r3)
            android.widget.ImageView r1 = r7.bottomOverlayImage
            r2 = 2131627418(0x7f0e0d9a, float:1.88821E38)
            java.lang.String r3 = "SettingsHelp"
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r3, r2)
            r1.setContentDescription(r2)
            android.widget.ImageView r1 = r7.bottomOverlayImage
            org.telegram.ui.-$$Lambda$ChatActivity$IXD_IuQhCPwmp0LI1ebMa5DrXu8 r2 = new org.telegram.ui.-$$Lambda$ChatActivity$IXD_IuQhCPwmp0LI1ebMa5DrXu8
            r2.<init>()
            r1.setOnClickListener(r2)
            android.widget.TextView r1 = new android.widget.TextView
            r1.<init>(r8)
            r7.replyButton = r1
            r2 = 2131627148(0x7f0e0c8c, float:1.8881552E38)
            java.lang.String r3 = "Reply"
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r3, r2)
            r1.setText(r2)
            android.widget.TextView r1 = r7.replyButton
            r2 = 16
            r1.setGravity(r2)
            android.widget.TextView r1 = r7.replyButton
            r3 = 1097859072(0x41700000, float:15.0)
            r4 = 1
            r1.setTextSize(r4, r3)
            android.widget.TextView r1 = r7.replyButton
            r3 = 1096810496(0x41600000, float:14.0)
            int r3 = org.telegram.messenger.AndroidUtilities.dp(r3)
            r4 = 1101529088(0x41a80000, float:21.0)
            int r4 = org.telegram.messenger.AndroidUtilities.dp(r4)
            r5 = 0
            r1.setPadding(r3, r5, r4, r5)
            android.widget.TextView r1 = r7.replyButton
            int r3 = org.telegram.ui.ActionBar.Theme.getColor(r9)
            r4 = 3
            android.graphics.drawable.Drawable r3 = org.telegram.ui.ActionBar.Theme.createSelectorDrawable(r3, r4)
            r1.setBackgroundDrawable(r3)
            android.widget.TextView r1 = r7.replyButton
            int r3 = org.telegram.ui.ActionBar.Theme.getColor(r10)
            r1.setTextColor(r3)
            android.widget.TextView r1 = r7.replyButton
            r3 = 1088421888(0x40e00000, float:7.0)
            int r3 = org.telegram.messenger.AndroidUtilities.dp(r3)
            r1.setCompoundDrawablePadding(r3)
            android.widget.TextView r1 = r7.replyButton
            android.graphics.Typeface r3 = org.telegram.messenger.AndroidUtilities.getTypeface(r16)
            r1.setTypeface(r3)
            android.content.res.Resources r1 = r40.getResources()
            r3 = 2131165546(0x7var_a, float:1.7945312E38)
            android.graphics.drawable.Drawable r1 = r1.getDrawable(r3)
            android.graphics.drawable.Drawable r1 = r1.mutate()
            android.graphics.PorterDuffColorFilter r3 = new android.graphics.PorterDuffColorFilter
            int r4 = org.telegram.ui.ActionBar.Theme.getColor(r10)
            android.graphics.PorterDuff$Mode r5 = android.graphics.PorterDuff.Mode.MULTIPLY
            r3.<init>(r4, r5)
            r1.setColorFilter(r3)
            android.widget.TextView r3 = r7.replyButton
            r4 = 0
            r3.setCompoundDrawablesWithIntrinsicBounds(r1, r4, r4, r4)
            android.widget.TextView r1 = r7.replyButton
            org.telegram.ui.-$$Lambda$ChatActivity$QRkBVi6bdyF6ft3g3Vp425dQqfs r3 = new org.telegram.ui.-$$Lambda$ChatActivity$QRkBVi6bdyF6ft3g3Vp425dQqfs
            r3.<init>()
            r1.setOnClickListener(r3)
            android.widget.FrameLayout r1 = r7.bottomMessagesActionContainer
            android.widget.TextView r3 = r7.replyButton
            r4 = -2
            r5 = -1
            android.widget.FrameLayout$LayoutParams r6 = org.telegram.ui.Components.LayoutHelper.createFrame(r4, r5, r15)
            r1.addView(r3, r6)
            android.widget.TextView r1 = new android.widget.TextView
            r1.<init>(r8)
            r7.forwardButton = r1
            r3 = 2131625572(0x7f0e0664, float:1.8878356E38)
            java.lang.String r4 = "Forward"
            java.lang.String r3 = org.telegram.messenger.LocaleController.getString(r4, r3)
            r1.setText(r3)
            android.widget.TextView r1 = r7.forwardButton
            r1.setGravity(r2)
            android.widget.TextView r1 = r7.forwardButton
            r2 = 1097859072(0x41700000, float:15.0)
            r3 = 1
            r1.setTextSize(r3, r2)
            android.widget.TextView r1 = r7.forwardButton
            r2 = 1101529088(0x41a80000, float:21.0)
            int r2 = org.telegram.messenger.AndroidUtilities.dp(r2)
            r3 = 1101529088(0x41a80000, float:21.0)
            int r3 = org.telegram.messenger.AndroidUtilities.dp(r3)
            r4 = 0
            r1.setPadding(r2, r4, r3, r4)
            android.widget.TextView r1 = r7.forwardButton
            r2 = 1086324736(0x40CLASSNAME, float:6.0)
            int r2 = org.telegram.messenger.AndroidUtilities.dp(r2)
            r1.setCompoundDrawablePadding(r2)
            android.widget.TextView r1 = r7.forwardButton
            int r2 = org.telegram.ui.ActionBar.Theme.getColor(r9)
            r3 = 3
            android.graphics.drawable.Drawable r2 = org.telegram.ui.ActionBar.Theme.createSelectorDrawable(r2, r3)
            r1.setBackgroundDrawable(r2)
            android.widget.TextView r1 = r7.forwardButton
            int r2 = org.telegram.ui.ActionBar.Theme.getColor(r10)
            r1.setTextColor(r2)
            android.widget.TextView r1 = r7.forwardButton
            android.graphics.Typeface r2 = org.telegram.messenger.AndroidUtilities.getTypeface(r16)
            r1.setTypeface(r2)
            android.content.res.Resources r1 = r40.getResources()
            r2 = 2131165539(0x7var_, float:1.7945298E38)
            android.graphics.drawable.Drawable r1 = r1.getDrawable(r2)
            android.graphics.drawable.Drawable r1 = r1.mutate()
            android.graphics.PorterDuffColorFilter r2 = new android.graphics.PorterDuffColorFilter
            int r3 = org.telegram.ui.ActionBar.Theme.getColor(r10)
            android.graphics.PorterDuff$Mode r4 = android.graphics.PorterDuff.Mode.MULTIPLY
            r2.<init>(r3, r4)
            r1.setColorFilter(r2)
            android.widget.TextView r2 = r7.forwardButton
            r3 = 0
            r2.setCompoundDrawablesWithIntrinsicBounds(r1, r3, r3, r3)
            android.widget.TextView r1 = r7.forwardButton
            org.telegram.ui.-$$Lambda$ChatActivity$2gx4W1E1ZypXdVbywnxqoXvFQhM r2 = new org.telegram.ui.-$$Lambda$ChatActivity$2gx4W1E1ZypXdVbywnxqoXvFQhM
            r2.<init>()
            r1.setOnClickListener(r2)
            android.widget.FrameLayout r1 = r7.bottomMessagesActionContainer
            android.widget.TextView r2 = r7.forwardButton
            r3 = 53
            r4 = -2
            r5 = -1
            android.widget.FrameLayout$LayoutParams r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r4, r5, r3)
            r1.addView(r2, r3)
            org.telegram.ui.Components.SizeNotifierFrameLayout r1 = r7.contentView
            android.widget.FrameLayout r2 = r7.searchContainer
            r3 = 80
            android.widget.FrameLayout$LayoutParams r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r5, r15, r3)
            r1.addView(r2, r3)
            org.telegram.ui.Components.UndoView r1 = new org.telegram.ui.Components.UndoView
            r1.<init>(r8, r7)
            r7.undoView = r1
            r2 = 1112276992(0x424CLASSNAME, float:51.0)
            int r2 = org.telegram.messenger.AndroidUtilities.dp(r2)
            float r2 = (float) r2
            r1.setAdditionalTranslationY(r2)
            org.telegram.ui.Components.SizeNotifierFrameLayout r1 = r7.contentView
            org.telegram.ui.Components.UndoView r2 = r7.undoView
            r27 = -1
            r28 = -1073741824(0xffffffffCLASSNAME, float:-2.0)
            r29 = 83
            r30 = 1090519040(0x41000000, float:8.0)
            r31 = 0
            r32 = 1090519040(0x41000000, float:8.0)
            r33 = 1090519040(0x41000000, float:8.0)
            android.widget.FrameLayout$LayoutParams r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r27, r28, r29, r30, r31, r32, r33)
            r1.addView(r2, r3)
            org.telegram.tgnet.TLRPC$Chat r1 = r7.currentChat
            if (r1 == 0) goto L_0x1d98
            org.telegram.ui.Components.HintView r1 = new org.telegram.ui.Components.HintView
            android.app.Activity r2 = r39.getParentActivity()
            r3 = 2
            r1.<init>(r2, r3)
            r7.slowModeHint = r1
            r2 = 0
            r1.setAlpha(r2)
            org.telegram.ui.Components.HintView r1 = r7.slowModeHint
            r2 = 4
            r1.setVisibility(r2)
            org.telegram.ui.Components.SizeNotifierFrameLayout r1 = r7.contentView
            org.telegram.ui.Components.HintView r2 = r7.slowModeHint
            r27 = -2
            r28 = -1073741824(0xffffffffCLASSNAME, float:-2.0)
            r29 = 51
            r30 = 1100480512(0x41980000, float:19.0)
            r31 = 0
            r32 = 1100480512(0x41980000, float:19.0)
            r33 = 0
            android.widget.FrameLayout$LayoutParams r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r27, r28, r29, r30, r31, r32, r33)
            r1.addView(r2, r3)
        L_0x1d98:
            org.telegram.ui.ChatActivity$ChatActivityAdapter r1 = r7.chatAdapter
            r1.updateRowsSafe()
            boolean r1 = r7.loading
            if (r1 == 0) goto L_0x1dbf
            java.util.ArrayList<org.telegram.messenger.MessageObject> r1 = r7.messages
            boolean r1 = r1.isEmpty()
            if (r1 == 0) goto L_0x1dbf
            org.telegram.ui.ChatActivity$ChatActivityAdapter r1 = r7.chatAdapter
            int r1 = r1.botInfoRow
            if (r1 >= 0) goto L_0x1db3
            r1 = 1
            goto L_0x1db4
        L_0x1db3:
            r1 = 0
        L_0x1db4:
            r7.showProgressView(r1)
            org.telegram.ui.Components.RecyclerListView r1 = r7.chatListView
            r2 = 0
            r1.setEmptyView(r2)
            r1 = 0
            goto L_0x1dca
        L_0x1dbf:
            r1 = 0
            r7.showProgressView(r1)
            org.telegram.ui.Components.RecyclerListView r2 = r7.chatListView
            android.widget.FrameLayout r3 = r7.emptyViewContainer
            r2.setEmptyView(r3)
        L_0x1dca:
            r39.checkBotKeyboard()
            r39.updateBottomOverlay()
            r39.updateSecretStatus()
            r7.updateTopPanel(r1)
            r7.updatePinnedMessageView(r1)
            r7.updateInfoTopView(r1)
            org.telegram.ui.Components.RecyclerAnimationScrollHelper r1 = new org.telegram.ui.Components.RecyclerAnimationScrollHelper
            org.telegram.ui.Components.RecyclerListView r2 = r7.chatListView
            androidx.recyclerview.widget.GridLayoutManagerFixed r3 = r7.chatLayoutManager
            r1.<init>(r2, r3)
            r7.chatScrollHelper = r1
            org.telegram.ui.-$$Lambda$oLzrtt_zeXe3Ih4qG8yKCuCrVH4 r2 = new org.telegram.ui.-$$Lambda$oLzrtt_zeXe3Ih4qG8yKCuCrVH4
            r2.<init>()
            r1.setScrollListener(r2)
            org.telegram.ui.Components.RecyclerAnimationScrollHelper r1 = r7.chatScrollHelper
            org.telegram.ui.ChatActivity$ChatScrollCallback r2 = r7.chatScrollHelperCallback
            r1.setAnimationCallback(r2)
            org.telegram.tgnet.TLRPC$EncryptedChat r1 = r7.currentEncryptedChat     // Catch:{ all -> 0x1e0f }
            if (r1 == 0) goto L_0x1e13
            r1 = 23
            if (r0 < r1) goto L_0x1e13
            java.lang.String r0 = org.telegram.messenger.SharedConfig.passcodeHash     // Catch:{ all -> 0x1e0f }
            int r0 = r0.length()     // Catch:{ all -> 0x1e0f }
            if (r0 == 0) goto L_0x1e0a
            boolean r0 = org.telegram.messenger.SharedConfig.allowScreenCapture     // Catch:{ all -> 0x1e0f }
            if (r0 == 0) goto L_0x1e13
        L_0x1e0a:
            r0 = 1
            org.telegram.messenger.AndroidUtilities.setFlagSecure(r7, r0)     // Catch:{ all -> 0x1e0f }
            goto L_0x1e13
        L_0x1e0f:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
        L_0x1e13:
            r1 = r38
            if (r1 == 0) goto L_0x1e1c
            org.telegram.ui.Components.ChatActivityEnterView r0 = r7.chatActivityEnterView
            r0.setFieldText(r1)
        L_0x1e1c:
            r39.fixLayoutInternal()
            org.telegram.ui.Cells.TextSelectionHelper$ChatListTextSelectionHelper r0 = r7.textSelectionHelper
            org.telegram.ui.ChatActivity$47 r1 = new org.telegram.ui.ChatActivity$47
            r1.<init>()
            r0.setCallback(r1)
            org.telegram.ui.Components.SizeNotifierFrameLayout r0 = r7.contentView
            org.telegram.ui.Cells.TextSelectionHelper$ChatListTextSelectionHelper r1 = r7.textSelectionHelper
            org.telegram.ui.Cells.TextSelectionHelper$TextSelectionOverlay r1 = r1.getOverlayView(r8)
            r0.addView(r1)
            org.telegram.ui.Components.FireworksOverlay r0 = new org.telegram.ui.Components.FireworksOverlay
            r0.<init>(r8)
            r7.fireworksOverlay = r0
            org.telegram.ui.Components.SizeNotifierFrameLayout r1 = r7.contentView
            r2 = -1082130432(0xffffffffbvar_, float:-1.0)
            r3 = -1
            android.widget.FrameLayout$LayoutParams r2 = org.telegram.ui.Components.LayoutHelper.createFrame(r3, r2)
            r1.addView(r0, r2)
            org.telegram.ui.Cells.TextSelectionHelper$ChatListTextSelectionHelper r0 = r7.textSelectionHelper
            org.telegram.ui.Components.RecyclerListView r1 = r7.chatListView
            r0.setParentView(r1)
            android.os.Bundle r0 = r39.getArguments()
            java.lang.String r1 = "search_from_user_id"
            r2 = 0
            int r0 = r0.getInt(r1, r2)
            android.os.Bundle r1 = r39.getArguments()
            java.lang.String r3 = "search_from_chat_id"
            int r1 = r1.getInt(r3, r2)
            if (r0 == 0) goto L_0x1e84
            int r1 = r7.currentAccount
            org.telegram.messenger.MessagesController r1 = org.telegram.messenger.MessagesController.getInstance(r1)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            org.telegram.tgnet.TLRPC$User r0 = r1.getUser(r0)
            if (r0 == 0) goto L_0x1ea4
            java.lang.String r1 = ""
            r7.openSearchWithText(r1)
            android.widget.ImageView r1 = r7.searchUserButton
            r1.callOnClick()
            r1 = 0
            r7.searchUserMessages(r0, r1)
            goto L_0x1ea4
        L_0x1e84:
            if (r1 == 0) goto L_0x1ea4
            int r0 = r7.currentAccount
            org.telegram.messenger.MessagesController r0 = org.telegram.messenger.MessagesController.getInstance(r0)
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)
            org.telegram.tgnet.TLRPC$Chat r0 = r0.getChat(r1)
            if (r0 == 0) goto L_0x1ea4
            java.lang.String r1 = ""
            r7.openSearchWithText(r1)
            android.widget.ImageView r1 = r7.searchUserButton
            r1.callOnClick()
            r1 = 0
            r7.searchUserMessages(r1, r0)
        L_0x1ea4:
            org.telegram.messenger.MessageObject r0 = r7.replyingMessageObject
            if (r0 == 0) goto L_0x1ead
            org.telegram.ui.Components.ChatActivityEnterView r1 = r7.chatActivityEnterView
            r1.setReplyingMessageObject(r0)
        L_0x1ead:
            int r0 = android.os.Build.VERSION.SDK_INT
            if (r0 < r14) goto L_0x1ec0
            android.app.Activity r0 = r39.getParentActivity()
            android.view.Window r0 = r0.getWindow()
            android.view.View r0 = r0.getDecorView()
            android.view.ViewGroup r0 = (android.view.ViewGroup) r0
            goto L_0x1ec2
        L_0x1ec0:
            org.telegram.ui.Components.SizeNotifierFrameLayout r0 = r7.contentView
        L_0x1ec2:
            org.telegram.ui.ChatActivity$48 r1 = new org.telegram.ui.ChatActivity$48
            r1.<init>(r7, r0)
            r7.pinchToZoomHelper = r1
            org.telegram.ui.ChatActivity$49 r0 = new org.telegram.ui.ChatActivity$49
            r0.<init>()
            r1.setCallback(r0)
            org.telegram.ui.PinchToZoomHelper r0 = r7.pinchToZoomHelper
            org.telegram.ui.ChatActivity$50 r1 = new org.telegram.ui.ChatActivity$50
            r1.<init>()
            r0.setClipBoundsListener(r1)
            android.view.View r0 = r7.fragmentView
            return r0
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.createView(android.content.Context):android.view.View");
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$createView$11 */
    public /* synthetic */ void lambda$createView$11$ChatActivity(TLRPC$Document tLRPC$Document) {
        this.animatingDocuments.put(tLRPC$Document, 0);
        SendMessagesHelper.getInstance(this.currentAccount).sendSticker(tLRPC$Document, (String) null, this.dialog_id, (MessageObject) null, (MessageObject) null, (Object) null, true, 0);
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$createView$12 */
    public /* synthetic */ void lambda$createView$12$ChatActivity(TLRPC$Document tLRPC$Document) {
        this.animatingDocuments.put(tLRPC$Document, 0);
        SendMessagesHelper.getInstance(this.currentAccount).sendSticker(tLRPC$Document, (String) null, this.dialog_id, (MessageObject) null, (MessageObject) null, (Object) null, true, 0);
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$createView$13 */
    public /* synthetic */ void lambda$createView$13$ChatActivity(View view) {
        if (this.floatingDateView.getAlpha() != 0.0f && !this.actionBar.isActionModeShowed() && this.reportType < 0) {
            Calendar instance = Calendar.getInstance();
            instance.setTimeInMillis(((long) this.floatingDateView.getCustomDate()) * 1000);
            int i = instance.get(1);
            int i2 = instance.get(2);
            int i3 = instance.get(5);
            instance.clear();
            instance.set(i, i2, i3);
            jumpToDate((int) (instance.getTime().getTime() / 1000));
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$createView$14 */
    public /* synthetic */ void lambda$createView$14$ChatActivity(View view) {
        int i;
        this.wasManualScroll = true;
        if (isThreadChat()) {
            scrollToMessageId(this.threadMessageId, 0, true, 0, true, 0);
            return;
        }
        int i2 = this.currentPinnedMessageId;
        if (i2 != 0) {
            if (!this.pinnedMessageIds.isEmpty()) {
                ArrayList<Integer> arrayList = this.pinnedMessageIds;
                if (i2 == arrayList.get(arrayList.size() - 1).intValue()) {
                    i = this.pinnedMessageIds.get(0).intValue() + 1;
                    this.forceScrollToFirst = true;
                } else {
                    i = i2 - 1;
                    this.forceScrollToFirst = false;
                }
            } else {
                i = 0;
            }
            this.forceNextPinnedMessageId = i;
            scrollToMessageId(i2, 0, true, 0, true, !this.forceScrollToFirst ? -i : i);
            updateMessagesVisiblePart(false);
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$createView$15 */
    public /* synthetic */ void lambda$createView$15$ChatActivity(View view) {
        openPinnedMessagesList(false);
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Code restructure failed: missing block: B:8:0x0015, code lost:
        r5 = r4.userInfo;
     */
    /* renamed from: lambda$createView$17 */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$createView$17$ChatActivity(android.view.View r5) {
        /*
            r4 = this;
            android.app.Activity r5 = r4.getParentActivity()
            if (r5 != 0) goto L_0x0007
            return
        L_0x0007:
            org.telegram.tgnet.TLRPC$Chat r5 = r4.currentChat
            r0 = 0
            if (r5 == 0) goto L_0x0011
            boolean r5 = org.telegram.messenger.ChatObject.canPinMessages(r5)
            goto L_0x001d
        L_0x0011:
            org.telegram.tgnet.TLRPC$EncryptedChat r5 = r4.currentEncryptedChat
            if (r5 != 0) goto L_0x001c
            org.telegram.tgnet.TLRPC$UserFull r5 = r4.userInfo
            if (r5 == 0) goto L_0x001c
            boolean r5 = r5.can_pin_message
            goto L_0x001d
        L_0x001c:
            r5 = 0
        L_0x001d:
            if (r5 == 0) goto L_0x0066
            org.telegram.ui.ActionBar.AlertDialog$Builder r5 = new org.telegram.ui.ActionBar.AlertDialog$Builder
            android.app.Activity r0 = r4.getParentActivity()
            r5.<init>((android.content.Context) r0)
            r0 = 2131627816(0x7f0e0var_, float:1.8882907E38)
            java.lang.String r1 = "UnpinMessageAlertTitle"
            java.lang.String r0 = org.telegram.messenger.LocaleController.getString(r1, r0)
            r5.setTitle(r0)
            r0 = 2131627815(0x7f0e0var_, float:1.8882905E38)
            java.lang.String r1 = "UnpinMessageAlert"
            java.lang.String r0 = org.telegram.messenger.LocaleController.getString(r1, r0)
            r5.setMessage(r0)
            r0 = 2131627814(0x7f0e0var_, float:1.8882903E38)
            java.lang.String r1 = "UnpinMessage"
            java.lang.String r0 = org.telegram.messenger.LocaleController.getString(r1, r0)
            org.telegram.ui.-$$Lambda$ChatActivity$AXBx5yA7YGRgfvNqRyNH6uw1btA r1 = new org.telegram.ui.-$$Lambda$ChatActivity$AXBx5yA7YGRgfvNqRyNH6uw1btA
            r1.<init>()
            r5.setPositiveButton(r0, r1)
            r0 = 2131624639(0x7f0e02bf, float:1.8876463E38)
            java.lang.String r1 = "Cancel"
            java.lang.String r0 = org.telegram.messenger.LocaleController.getString(r1, r0)
            r1 = 0
            r5.setNegativeButton(r0, r1)
            org.telegram.ui.ActionBar.AlertDialog r5 = r5.create()
            r4.showDialog(r5)
            goto L_0x00a2
        L_0x0066:
            java.util.ArrayList<java.lang.Integer> r5 = r4.pinnedMessageIds
            boolean r5 = r5.isEmpty()
            if (r5 != 0) goto L_0x00a2
            int r5 = r4.currentAccount
            android.content.SharedPreferences r5 = org.telegram.messenger.MessagesController.getNotificationsSettings(r5)
            android.content.SharedPreferences$Editor r5 = r5.edit()
            java.lang.StringBuilder r1 = new java.lang.StringBuilder
            r1.<init>()
            java.lang.String r2 = "pin_"
            r1.append(r2)
            long r2 = r4.dialog_id
            r1.append(r2)
            java.lang.String r1 = r1.toString()
            java.util.ArrayList<java.lang.Integer> r2 = r4.pinnedMessageIds
            java.lang.Object r0 = r2.get(r0)
            java.lang.Integer r0 = (java.lang.Integer) r0
            int r0 = r0.intValue()
            android.content.SharedPreferences$Editor r5 = r5.putInt(r1, r0)
            r5.commit()
            r5 = 1
            r4.updatePinnedMessageView(r5)
        L_0x00a2:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.lambda$createView$17$ChatActivity(android.view.View):void");
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$16 */
    public /* synthetic */ void lambda$null$16$ChatActivity(DialogInterface dialogInterface, int i) {
        MessageObject messageObject = this.pinnedMessageObjects.get(Integer.valueOf(this.currentPinnedMessageId));
        if (messageObject == null) {
            messageObject = this.messagesDict[0].get(this.currentPinnedMessageId);
        }
        unpinMessage(messageObject);
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$createView$19 */
    public /* synthetic */ void lambda$createView$19$ChatActivity(View view) {
        AlertsCreator.showBlockReportSpamAlert(this, this.dialog_id, this.currentUser, this.currentChat, this.currentEncryptedChat, this.reportSpamButton.getTag(NUM) != null, this.chatInfo, new MessagesStorage.IntCallback() {
            public final void run(int i) {
                ChatActivity.this.lambda$null$18$ChatActivity(i);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$18 */
    public /* synthetic */ void lambda$null$18$ChatActivity(int i) {
        if (i == 0) {
            updateTopPanel(true);
        } else {
            finishFragment();
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$createView$22 */
    public /* synthetic */ void lambda$createView$22$ChatActivity(Context context, View view) {
        if (this.addToContactsButtonArchive) {
            getMessagesController().addDialogToFolder(this.dialog_id, 0, 0, 0);
            this.undoView.showWithAction(this.dialog_id, 23, (Runnable) null);
            SharedPreferences.Editor edit = MessagesController.getNotificationsSettings(this.currentAccount).edit();
            edit.putBoolean("dialog_bar_archived" + this.dialog_id, false);
            edit.putBoolean("dialog_bar_block" + this.dialog_id, false);
            edit.putBoolean("dialog_bar_report" + this.dialog_id, false);
            edit.commit();
            updateTopPanel(false);
            getNotificationsController().clearDialogNotificationsSettings(this.dialog_id);
        } else if (this.addToContactsButton.getTag() != null && ((Integer) this.addToContactsButton.getTag()).intValue() == 4) {
            TLRPC$ChatFull tLRPC$ChatFull = this.chatInfo;
            if (tLRPC$ChatFull != null && tLRPC$ChatFull.participants != null) {
                SparseArray sparseArray = new SparseArray();
                for (int i = 0; i < this.chatInfo.participants.participants.size(); i++) {
                    sparseArray.put(this.chatInfo.participants.participants.get(i).user_id, (Object) null);
                }
                int i2 = this.chatInfo.id;
                InviteMembersBottomSheet inviteMembersBottomSheet = new InviteMembersBottomSheet(context, this.currentAccount, sparseArray, this.chatInfo.id, this);
                inviteMembersBottomSheet.setDelegate(new GroupCreateActivity.ContactsAddActivityDelegate(i2) {
                    public final /* synthetic */ int f$1;

                    {
                        this.f$1 = r2;
                    }

                    public final void didSelectUsers(ArrayList arrayList, int i) {
                        ChatActivity.this.lambda$null$20$ChatActivity(this.f$1, arrayList, i);
                    }

                    public /* synthetic */ void needAddBot(TLRPC$User tLRPC$User) {
                        GroupCreateActivity.ContactsAddActivityDelegate.CC.$default$needAddBot(this, tLRPC$User);
                    }
                });
                inviteMembersBottomSheet.show();
            }
        } else if (this.addToContactsButton.getTag() != null) {
            shareMyContact(1, (MessageObject) null);
        } else {
            Bundle bundle = new Bundle();
            bundle.putInt("user_id", this.currentUser.id);
            bundle.putBoolean("addContact", true);
            ContactAddActivity contactAddActivity = new ContactAddActivity(bundle);
            contactAddActivity.setDelegate(new ContactAddActivity.ContactAddActivityDelegate() {
                public final void didAddToContacts() {
                    ChatActivity.this.lambda$null$21$ChatActivity();
                }
            });
            presentFragment(contactAddActivity);
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$20 */
    public /* synthetic */ void lambda$null$20$ChatActivity(int i, ArrayList arrayList, int i2) {
        int size = arrayList.size();
        for (int i3 = 0; i3 < size; i3++) {
            getMessagesController().addUserToChat(i, (TLRPC$User) arrayList.get(i3), i2, (String) null, this, (Runnable) null);
        }
        getMessagesController().hidePeerSettingsBar(this.dialog_id, this.currentUser, this.currentChat);
        updateTopPanel(true);
        updateInfoTopView(true);
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$21 */
    public /* synthetic */ void lambda$null$21$ChatActivity() {
        this.undoView.showWithAction(this.dialog_id, 8, (Object) this.currentUser);
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$createView$23 */
    public /* synthetic */ void lambda$createView$23$ChatActivity(View view) {
        long j = this.dialog_id;
        if (this.currentEncryptedChat != null) {
            j = (long) this.currentUser.id;
        }
        getMessagesController().hidePeerSettingsBar(j, this.currentUser, this.currentChat);
        updateTopPanel(true);
        updateInfoTopView(true);
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$createView$24 */
    public /* synthetic */ void lambda$createView$24$ChatActivity(View view) {
        this.wasManualScroll = true;
        this.textSelectionHelper.cancelTextSelectionRunnable();
        int i = this.createUnreadMessageAfterId;
        if (i != 0) {
            scrollToMessageId(i, 0, false, this.returnToLoadIndex, true, 0);
            return;
        }
        int i2 = this.returnToMessageId;
        if (i2 > 0) {
            scrollToMessageId(i2, 0, true, this.returnToLoadIndex, true, 0);
            return;
        }
        scrollToLastMessage();
        if (!this.pinnedMessageIds.isEmpty()) {
            this.forceScrollToFirst = true;
            this.forceNextPinnedMessageId = this.pinnedMessageIds.get(0).intValue();
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$createView$25 */
    public /* synthetic */ boolean lambda$createView$25$ChatActivity(View view) {
        for (int i = 0; i < this.messages.size(); i++) {
            MessageObject messageObject = this.messages.get(i);
            if (messageObject.messageOwner.mentioned && !messageObject.isContentUnread()) {
                messageObject.setContentIsRead();
            }
        }
        this.newMentionsCount = 0;
        getMessagesController().markMentionsAsRead(this.dialog_id);
        this.hasAllMentionsLocal = true;
        showMentionDownButton(false, true);
        return true;
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$createView$26 */
    public /* synthetic */ boolean lambda$createView$26$ChatActivity(View view, MotionEvent motionEvent) {
        return ContentPreviewViewer.getInstance().onTouch(motionEvent, this.mentionListView, 0, this.mentionsOnItemClickListener, (ContentPreviewViewer.ContentPreviewViewerDelegate) null);
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$createView$29 */
    public /* synthetic */ void lambda$createView$29$ChatActivity(View view, int i) {
        char c;
        int i2 = i;
        if (!this.mentionsAdapter.isBannedInline()) {
            Object item = this.mentionsAdapter.getItem(i2);
            int resultStartPosition = this.mentionsAdapter.getResultStartPosition();
            int resultLength = this.mentionsAdapter.getResultLength();
            if (item instanceof TLRPC$Chat) {
                TLRPC$Chat tLRPC$Chat = (TLRPC$Chat) item;
                if (this.searchingForUser && this.searchContainer.getVisibility() == 0) {
                    searchUserMessages((TLRPC$User) null, tLRPC$Chat);
                } else if (tLRPC$Chat.username != null) {
                    ChatActivityEnterView chatActivityEnterView2 = this.chatActivityEnterView;
                    chatActivityEnterView2.replaceWithText(resultStartPosition, resultLength, "@" + tLRPC$Chat.username + " ", false);
                }
            } else if (item instanceof TLRPC$User) {
                TLRPC$User tLRPC$User = (TLRPC$User) item;
                if (this.searchingForUser && this.searchContainer.getVisibility() == 0) {
                    searchUserMessages(tLRPC$User, (TLRPC$Chat) null);
                } else if (tLRPC$User.username != null) {
                    ChatActivityEnterView chatActivityEnterView3 = this.chatActivityEnterView;
                    chatActivityEnterView3.replaceWithText(resultStartPosition, resultLength, "@" + tLRPC$User.username + " ", false);
                } else {
                    String firstName = UserObject.getFirstName(tLRPC$User, false);
                    SpannableString spannableString = new SpannableString(firstName + " ");
                    spannableString.setSpan(new URLSpanUserMention("" + tLRPC$User.id, 3), 0, spannableString.length(), 33);
                    this.chatActivityEnterView.replaceWithText(resultStartPosition, resultLength, spannableString, false);
                }
            } else if (item instanceof String) {
                if (!this.mentionsAdapter.isBotCommands()) {
                    ChatActivityEnterView chatActivityEnterView4 = this.chatActivityEnterView;
                    chatActivityEnterView4.replaceWithText(resultStartPosition, resultLength, item + " ", false);
                } else if (this.chatMode == 1) {
                    AlertsCreator.createScheduleDatePickerDialog(getParentActivity(), this.dialog_id, new AlertsCreator.ScheduleDatePickerDelegate(item) {
                        public final /* synthetic */ Object f$1;

                        {
                            this.f$1 = r2;
                        }

                        public final void didSelectDate(boolean z, int i) {
                            ChatActivity.this.lambda$null$27$ChatActivity(this.f$1, z, i);
                        }
                    });
                } else if (!checkSlowMode(view)) {
                    getSendMessagesHelper().sendMessage((String) item, this.dialog_id, this.replyingMessageObject, getThreadMessage(), (TLRPC$WebPage) null, false, (ArrayList<TLRPC$MessageEntity>) null, (TLRPC$ReplyMarkup) null, (HashMap<String, String>) null, true, 0);
                    this.chatActivityEnterView.setFieldText("");
                    hideFieldPanel(false);
                }
            } else if (item instanceof TLRPC$BotInlineResult) {
                if (this.chatActivityEnterView.getFieldText() == null) {
                    return;
                }
                if (this.chatMode == 1 || !checkSlowMode(view)) {
                    TLRPC$BotInlineResult tLRPC$BotInlineResult = (TLRPC$BotInlineResult) item;
                    if (this.currentEncryptedChat != null) {
                        if (!(tLRPC$BotInlineResult.send_message instanceof TLRPC$TL_botInlineMessageMediaAuto) || !"game".equals(tLRPC$BotInlineResult.type)) {
                            c = tLRPC$BotInlineResult.send_message instanceof TLRPC$TL_botInlineMessageMediaInvoice ? (char) 2 : 0;
                        } else {
                            c = 1;
                        }
                        if (c != 0) {
                            AlertDialog.Builder builder = new AlertDialog.Builder((Context) getParentActivity());
                            builder.setTitle(LocaleController.getString("SendMessageTitle", NUM));
                            if (c == 1) {
                                builder.setMessage(LocaleController.getString("GameCantSendSecretChat", NUM));
                            } else {
                                builder.setMessage(LocaleController.getString("InvoiceCantSendSecretChat", NUM));
                            }
                            builder.setNegativeButton(LocaleController.getString("OK", NUM), (DialogInterface.OnClickListener) null);
                            showDialog(builder.create());
                            return;
                        }
                    }
                    if ((tLRPC$BotInlineResult.type.equals("photo") && (tLRPC$BotInlineResult.photo != null || tLRPC$BotInlineResult.content != null)) || ((tLRPC$BotInlineResult.type.equals("gif") && (tLRPC$BotInlineResult.document != null || tLRPC$BotInlineResult.content != null)) || (tLRPC$BotInlineResult.type.equals("video") && tLRPC$BotInlineResult.document != null))) {
                        ArrayList<Object> arrayList = new ArrayList<>(this.mentionsAdapter.getSearchResultBotContext());
                        this.botContextResults = arrayList;
                        PhotoViewer.getInstance().setParentActivity(getParentActivity());
                        PhotoViewer.getInstance().openPhotoForSelect(arrayList, this.mentionsAdapter.getItemPosition(i2), 3, false, this.botContextProvider, this);
                    } else if (this.chatMode == 1) {
                        AlertsCreator.createScheduleDatePickerDialog(getParentActivity(), this.dialog_id, new AlertsCreator.ScheduleDatePickerDelegate(tLRPC$BotInlineResult) {
                            public final /* synthetic */ TLRPC$BotInlineResult f$1;

                            {
                                this.f$1 = r2;
                            }

                            public final void didSelectDate(boolean z, int i) {
                                ChatActivity.this.lambda$null$28$ChatActivity(this.f$1, z, i);
                            }
                        });
                    } else {
                        lambda$null$28(tLRPC$BotInlineResult, true, 0);
                    }
                }
            } else if (item instanceof TLRPC$TL_inlineBotSwitchPM) {
                processInlineBotContextPM((TLRPC$TL_inlineBotSwitchPM) item);
            } else if (item instanceof MediaDataController.KeywordResult) {
                String str = ((MediaDataController.KeywordResult) item).emoji;
                this.chatActivityEnterView.addEmojiToRecent(str);
                this.chatActivityEnterView.replaceWithText(resultStartPosition, resultLength, str, true);
            }
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$27 */
    public /* synthetic */ void lambda$null$27$ChatActivity(Object obj, boolean z, int i) {
        getSendMessagesHelper().sendMessage((String) obj, this.dialog_id, this.replyingMessageObject, getThreadMessage(), (TLRPC$WebPage) null, false, (ArrayList<TLRPC$MessageEntity>) null, (TLRPC$ReplyMarkup) null, (HashMap<String, String>) null, z, i);
        this.chatActivityEnterView.setFieldText("");
        hideFieldPanel(false);
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$createView$31 */
    public /* synthetic */ boolean lambda$createView$31$ChatActivity(View view, int i) {
        boolean z = false;
        if (getParentActivity() != null && this.mentionsAdapter.isLongClickEnabled()) {
            Object item = this.mentionsAdapter.getItem(i);
            if (item instanceof String) {
                if (!this.mentionsAdapter.isBotCommands()) {
                    AlertDialog.Builder builder = new AlertDialog.Builder((Context) getParentActivity());
                    builder.setTitle(LocaleController.getString("AppName", NUM));
                    builder.setMessage(LocaleController.getString("ClearSearch", NUM));
                    builder.setPositiveButton(LocaleController.getString("ClearButton", NUM).toUpperCase(), new DialogInterface.OnClickListener() {
                        public final void onClick(DialogInterface dialogInterface, int i) {
                            ChatActivity.this.lambda$null$30$ChatActivity(dialogInterface, i);
                        }
                    });
                    builder.setNegativeButton(LocaleController.getString("Cancel", NUM), (DialogInterface.OnClickListener) null);
                    showDialog(builder.create());
                    return true;
                } else if (!URLSpanBotCommand.enabled) {
                    return false;
                } else {
                    this.chatActivityEnterView.setFieldText("");
                    ChatActivityEnterView chatActivityEnterView2 = this.chatActivityEnterView;
                    String str = (String) item;
                    TLRPC$Chat tLRPC$Chat = this.currentChat;
                    if (tLRPC$Chat != null && tLRPC$Chat.megagroup) {
                        z = true;
                    }
                    chatActivityEnterView2.setCommand((MessageObject) null, str, true, z);
                    return true;
                }
            }
        }
        return false;
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$30 */
    public /* synthetic */ void lambda$null$30$ChatActivity(DialogInterface dialogInterface, int i) {
        this.mentionsAdapter.clearRecentHashtags();
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$createView$32 */
    public /* synthetic */ void lambda$createView$32$ChatActivity(View view, int i) {
        getMediaDataController().jumpToSearchedMessage(this.classGuid, i);
        showMessagesSearchListView(false);
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$createView$33 */
    public /* synthetic */ boolean lambda$createView$33$ChatActivity(View view, MotionEvent motionEvent) {
        if (motionEvent.getAction() == 0) {
            checkRecordLocked(false);
        }
        this.overlayView.getParent().requestDisallowInterceptTouchEvent(true);
        return true;
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$createView$35 */
    public /* synthetic */ void lambda$createView$35$ChatActivity(View view) {
        ArrayList<MessageObject> arrayList = this.forwardingMessages;
        if (arrayList != null && !arrayList.isEmpty()) {
            int size = this.forwardingMessages.size();
            int i = 0;
            boolean z = false;
            for (int i2 = 0; i2 < size; i2++) {
                MessageObject messageObject = this.forwardingMessages.get(i2);
                if (messageObject.isPoll()) {
                    if (i != 2) {
                        i = messageObject.isPublicPoll() ? 2 : 1;
                    }
                } else if (messageObject.isInvoice()) {
                    z = true;
                }
                this.selectedMessagesIds[0].put(messageObject.getId(), messageObject);
            }
            Bundle bundle = new Bundle();
            bundle.putBoolean("onlySelect", true);
            bundle.putInt("dialogsType", 3);
            bundle.putInt("hasPoll", i);
            bundle.putBoolean("hasInvoice", z);
            bundle.putInt("messagesCount", this.forwardingMessages.size());
            DialogsActivity dialogsActivity = new DialogsActivity(bundle);
            dialogsActivity.setDelegate(this);
            presentFragment(dialogsActivity);
        } else if (this.replyingMessageObject == null || (isThreadChat() && this.replyingMessageObject.getId() == this.threadMessageId)) {
            MessageObject messageObject2 = this.editingMessageObject;
            if (messageObject2 == null) {
                return;
            }
            if (!messageObject2.canEditMedia() || this.editingMessageObjectReqId != 0) {
                scrollToMessageId(this.editingMessageObject.getId(), 0, true, 0, true, 0);
                return;
            }
            if (this.chatAttachAlert == null) {
                createChatAttachView();
            }
            this.chatAttachAlert.setEditingMessageObject(this.editingMessageObject);
            openAttachMenu();
        } else {
            scrollToMessageId(this.replyingMessageObject.getId(), 0, true, 0, true, 0);
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$createView$38 */
    public /* synthetic */ void lambda$createView$38$ChatActivity(Context context, View view) {
        ArrayList<MessageObject> arrayList = this.forwardingMessages;
        if (arrayList == null || arrayList.isEmpty()) {
            showFieldPanel(false, (MessageObject) null, (MessageObject) null, (ArrayList<MessageObject>) null, this.foundWebPage, true, 0, true, true);
            return;
        }
        AlertDialog.Builder builder = new AlertDialog.Builder(context);
        builder.setButtonsVertical(true);
        builder.setTitle(LocaleController.getString("CancelForward", NUM));
        builder.setMessage(LocaleController.getString("CancelForwardMessage", NUM));
        builder.setPositiveButton(LocaleController.getString("CancelForwarding", NUM), new DialogInterface.OnClickListener() {
            public final void onClick(DialogInterface dialogInterface, int i) {
                ChatActivity.this.lambda$null$36$ChatActivity(dialogInterface, i);
            }
        });
        builder.setNegativeButton(LocaleController.getString("SelectOtherChat", NUM), new DialogInterface.OnClickListener() {
            public final void onClick(DialogInterface dialogInterface, int i) {
                ChatActivity.this.lambda$null$37$ChatActivity(dialogInterface, i);
            }
        });
        builder.show();
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$36 */
    public /* synthetic */ void lambda$null$36$ChatActivity(DialogInterface dialogInterface, int i) {
        ArrayList<MessageObject> arrayList = this.forwardingMessages;
        if (arrayList != null) {
            arrayList.clear();
        }
        showFieldPanel(false, (MessageObject) null, (MessageObject) null, (ArrayList<MessageObject>) null, this.foundWebPage, true, 0, true, true);
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$37 */
    public /* synthetic */ void lambda$null$37$ChatActivity(DialogInterface dialogInterface, int i) {
        ArrayList<MessageObject> arrayList = this.forwardingMessages;
        if (arrayList != null && !arrayList.isEmpty()) {
            int size = this.forwardingMessages.size();
            int i2 = 0;
            boolean z = false;
            for (int i3 = 0; i3 < size; i3++) {
                MessageObject messageObject = this.forwardingMessages.get(i3);
                if (messageObject.isPoll()) {
                    if (i2 != 2) {
                        i2 = messageObject.isPublicPoll() ? 2 : 1;
                    }
                } else if (messageObject.isInvoice()) {
                    z = true;
                }
                this.selectedMessagesIds[0].put(messageObject.getId(), messageObject);
            }
            Bundle bundle = new Bundle();
            bundle.putBoolean("onlySelect", true);
            bundle.putInt("dialogsType", 3);
            bundle.putInt("hasPoll", i2);
            bundle.putBoolean("hasInvoice", z);
            bundle.putInt("messagesCount", this.forwardingMessages.size());
            DialogsActivity dialogsActivity = new DialogsActivity(bundle);
            dialogsActivity.setDelegate(this);
            presentFragment(dialogsActivity);
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$createView$39 */
    public /* synthetic */ void lambda$createView$39$ChatActivity(View view) {
        MessageObject messageObject = this.editingMessageObject;
        if (messageObject != null) {
            scrollToMessageId(messageObject.getId(), 0, true, 0, true, 0);
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$createView$40 */
    public /* synthetic */ void lambda$createView$40$ChatActivity(ChatActivityEnterTopView.EditViewButton editViewButton, FrameLayout frameLayout, View view) {
        MessageObject messageObject = this.editingMessageObject;
        if (messageObject != null && messageObject.canEditMedia() && this.editingMessageObjectReqId == 0) {
            if (editViewButton.isEditButton()) {
                openEditingMessageInPhotoEditor();
            } else {
                frameLayout.callOnClick();
            }
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$createView$41 */
    public /* synthetic */ boolean lambda$createView$41$ChatActivity(ContentPreviewViewer.ContentPreviewViewerDelegate contentPreviewViewerDelegate, View view, MotionEvent motionEvent) {
        return ContentPreviewViewer.getInstance().onTouch(motionEvent, this.stickersListView, 0, this.stickersOnItemClickListener, contentPreviewViewerDelegate);
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$createView$42 */
    public /* synthetic */ boolean lambda$createView$42$ChatActivity(View view, MotionEvent motionEvent) {
        return getMediaDataController().getFoundMessageObjects().size() <= 1;
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$createView$43 */
    public /* synthetic */ void lambda$createView$43$ChatActivity(View view) {
        if (getMediaDataController().getFoundMessageObjects().size() > 1) {
            HintView hintView = this.searchAsListHint;
            if (hintView != null) {
                hintView.hide();
            }
            toggleMesagesSearchListView();
            if (!SharedConfig.searchMessagesAsListUsed) {
                SharedConfig.setSearchMessagesAsListUsed(true);
            }
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$createView$44 */
    public /* synthetic */ void lambda$createView$44$ChatActivity(View view) {
        getMediaDataController().searchMessagesInChat((String) null, this.dialog_id, this.mergeDialogId, this.classGuid, 1, this.threadMessageId, this.searchingUserMessages, this.searchingChatMessages);
        showMessagesSearchListView(false);
        if (!SharedConfig.searchMessagesAsListUsed && SharedConfig.searchMessagesAsListHintShows < 3 && !this.searchAsListHintShown && Math.random() <= 0.25d) {
            showSearchAsListHint();
            this.searchAsListHintShown = true;
            SharedConfig.increaseSearchAsListHintShows();
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$createView$45 */
    public /* synthetic */ void lambda$createView$45$ChatActivity(View view) {
        getMediaDataController().searchMessagesInChat((String) null, this.dialog_id, this.mergeDialogId, this.classGuid, 2, this.threadMessageId, this.searchingUserMessages, this.searchingChatMessages);
        showMessagesSearchListView(false);
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$createView$46 */
    public /* synthetic */ void lambda$createView$46$ChatActivity(View view) {
        this.mentionLayoutManager.setReverseLayout(true);
        this.mentionsAdapter.setSearchingMentions(true);
        this.searchCalendarButton.setVisibility(8);
        this.searchUserButton.setVisibility(8);
        this.searchingForUser = true;
        this.searchingUserMessages = null;
        this.searchingChatMessages = null;
        this.searchItem.setSearchFieldHint(LocaleController.getString("SearchMembers", NUM));
        this.searchItem.setSearchFieldCaption(LocaleController.getString("SearchFrom", NUM));
        AndroidUtilities.showKeyboard(this.searchItem.getSearchField());
        this.searchItem.clearSearchText();
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$createView$47 */
    public /* synthetic */ void lambda$createView$47$ChatActivity(View view) {
        if (getParentActivity() != null) {
            AndroidUtilities.hideKeyboard(this.searchItem.getSearchField());
            showDialog(AlertsCreator.createCalendarPickerDialog(getParentActivity(), 1375315200000L, new MessagesStorage.IntCallback() {
                public final void run(int i) {
                    ChatActivity.this.jumpToDate(i);
                }
            }).create());
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$createView$50 */
    public /* synthetic */ void lambda$createView$50$ChatActivity(View view) {
        String str;
        if (getParentActivity() != null) {
            if (this.reportType >= 0) {
                showDialog(new ReportAlert(getParentActivity(), this.reportType) {
                    /* access modifiers changed from: protected */
                    public void onSend(int i, String str) {
                        ArrayList arrayList = new ArrayList();
                        for (int i2 = 0; i2 < ChatActivity.this.selectedMessagesIds[0].size(); i2++) {
                            arrayList.add(Integer.valueOf(ChatActivity.this.selectedMessagesIds[0].keyAt(i2)));
                        }
                        ChatActivity chatActivity = ChatActivity.this;
                        TLRPC$User tLRPC$User = chatActivity.currentUser;
                        AlertsCreator.sendReport(tLRPC$User != null ? MessagesController.getInputPeer(tLRPC$User) : MessagesController.getInputPeer(chatActivity.currentChat), ChatActivity.this.reportType, str, arrayList);
                        ChatActivity.this.finishFragment();
                        ChatActivity.this.chatActivityDelegate.onReport();
                    }
                });
                return;
            }
            boolean z = false;
            if (this.chatMode == 2) {
                finishFragment();
                ChatActivityDelegate chatActivityDelegate2 = this.chatActivityDelegate;
                if (this.bottomOverlayChatText.getTag() == null) {
                    z = true;
                }
                chatActivityDelegate2.onUnpin(true, z);
                return;
            }
            TLRPC$User tLRPC$User = this.currentUser;
            if (tLRPC$User == null || !this.userBlocked) {
                if (UserObject.isReplyUser(tLRPC$User)) {
                    toggleMute(true);
                    return;
                }
                TLRPC$User tLRPC$User2 = this.currentUser;
                if (tLRPC$User2 == null || !tLRPC$User2.bot || (str = this.botUser) == null) {
                    if (ChatObject.isChannel(this.currentChat)) {
                        TLRPC$Chat tLRPC$Chat = this.currentChat;
                        if (!(tLRPC$Chat instanceof TLRPC$TL_channelForbidden)) {
                            if (ChatObject.isNotInChat(tLRPC$Chat)) {
                                Runnable runnable = this.chatInviteRunnable;
                                if (runnable != null) {
                                    AndroidUtilities.cancelRunOnUIThread(runnable);
                                    this.chatInviteRunnable = null;
                                }
                                showBottomOverlayProgress(true, true);
                                getMessagesController().addUserToChat(this.currentChat.id, getUserConfig().getCurrentUser(), 0, (String) null, this, (Runnable) null);
                                NotificationCenter.getGlobalInstance().postNotificationName(NotificationCenter.closeSearchByActiveAction, new Object[0]);
                                if (hasReportSpam() && this.reportSpamButton.getTag(NUM) != null) {
                                    SharedPreferences.Editor edit = MessagesController.getNotificationsSettings(this.currentAccount).edit();
                                    edit.putInt("dialog_bar_vis3" + this.dialog_id, 3).commit();
                                    getNotificationCenter().postNotificationName(NotificationCenter.peerSettingsDidLoad, Long.valueOf(this.dialog_id));
                                    return;
                                }
                                return;
                            }
                            toggleMute(true);
                            return;
                        }
                    }
                    AlertsCreator.createClearOrDeleteDialogAlert(this, false, this.currentChat, this.currentUser, this.currentEncryptedChat != null, true, new MessagesStorage.BooleanCallback() {
                        public final void run(boolean z) {
                            ChatActivity.this.lambda$null$49$ChatActivity(z);
                        }
                    });
                    return;
                }
                if (str.length() != 0) {
                    getMessagesController().sendBotStart(this.currentUser, this.botUser);
                } else {
                    getSendMessagesHelper().sendMessage("/start", this.dialog_id, (MessageObject) null, (MessageObject) null, (TLRPC$WebPage) null, false, (ArrayList<TLRPC$MessageEntity>) null, (TLRPC$ReplyMarkup) null, (HashMap<String, String>) null, true, 0);
                }
                this.botUser = null;
                updateBottomOverlay();
            } else if (tLRPC$User.bot) {
                String str2 = this.botUser;
                this.botUser = null;
                getMessagesController().unblockPeer(this.currentUser.id);
                if (str2 == null || str2.length() == 0) {
                    getSendMessagesHelper().sendMessage("/start", this.dialog_id, (MessageObject) null, (MessageObject) null, (TLRPC$WebPage) null, false, (ArrayList<TLRPC$MessageEntity>) null, (TLRPC$ReplyMarkup) null, (HashMap<String, String>) null, true, 0);
                } else {
                    getMessagesController().sendBotStart(this.currentUser, str2);
                }
            } else {
                AlertDialog.Builder builder = new AlertDialog.Builder((Context) getParentActivity());
                builder.setMessage(LocaleController.getString("AreYouSureUnblockContact", NUM));
                builder.setPositiveButton(LocaleController.getString("OK", NUM), new DialogInterface.OnClickListener() {
                    public final void onClick(DialogInterface dialogInterface, int i) {
                        ChatActivity.this.lambda$null$48$ChatActivity(dialogInterface, i);
                    }
                });
                builder.setTitle(LocaleController.getString("AppName", NUM));
                builder.setNegativeButton(LocaleController.getString("Cancel", NUM), (DialogInterface.OnClickListener) null);
                showDialog(builder.create());
            }
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$48 */
    public /* synthetic */ void lambda$null$48$ChatActivity(DialogInterface dialogInterface, int i) {
        getMessagesController().unblockPeer(this.currentUser.id);
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$49 */
    public /* synthetic */ void lambda$null$49$ChatActivity(boolean z) {
        NotificationCenter notificationCenter = getNotificationCenter();
        int i = NotificationCenter.closeChats;
        notificationCenter.removeObserver(this, i);
        getNotificationCenter().postNotificationName(i, new Object[0]);
        finishFragment();
        getNotificationCenter().postNotificationName(NotificationCenter.needDeleteDialog, Long.valueOf(this.dialog_id), this.currentUser, this.currentChat, Boolean.valueOf(z));
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$createView$51 */
    public /* synthetic */ void lambda$createView$51$ChatActivity(View view) {
        this.undoView.showWithAction(this.dialog_id, 18, (Object) LocaleController.getString("BroadcastGroupInfo", NUM));
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$createView$52 */
    public /* synthetic */ void lambda$createView$52$ChatActivity(View view) {
        int i;
        MessageObject messageObject = null;
        for (int i2 = 1; i2 >= 0; i2--) {
            if (messageObject == null && this.selectedMessagesIds[i2].size() != 0) {
                messageObject = this.messagesDict[i2].get(this.selectedMessagesIds[i2].keyAt(0));
            }
            this.selectedMessagesIds[i2].clear();
            this.selectedMessagesCanCopyIds[i2].clear();
            this.selectedMessagesCanStarIds[i2].clear();
        }
        hideActionMode();
        if (messageObject != null && ((i = messageObject.messageOwner.id) > 0 || (i < 0 && this.currentEncryptedChat != null))) {
            showFieldPanelForReply(messageObject);
        }
        updatePinnedMessageView(true);
        updateVisibleRows();
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$createView$53 */
    public /* synthetic */ void lambda$createView$53$ChatActivity(View view) {
        openForward();
    }

    /* access modifiers changed from: private */
    public void updateBulletinLayout() {
        Bulletin visibleBulletin = Bulletin.getVisibleBulletin();
        if (visibleBulletin != null && this.bulletinDelegate != null) {
            visibleBulletin.updatePosition();
        }
    }

    private void searchUserMessages(TLRPC$User tLRPC$User, TLRPC$Chat tLRPC$Chat) {
        String str;
        this.searchingUserMessages = tLRPC$User;
        this.searchingChatMessages = tLRPC$Chat;
        if (this.searchItem == null) {
            return;
        }
        if (tLRPC$User != null || tLRPC$Chat != null) {
            if (tLRPC$User != null) {
                str = tLRPC$User.first_name;
                if (TextUtils.isEmpty(str)) {
                    str = this.searchingUserMessages.last_name;
                }
            } else {
                str = tLRPC$Chat.title;
            }
            if (str != null) {
                if (str.length() > 10) {
                    str = str.substring(0, 10);
                }
                this.searchingForUser = false;
                String string = LocaleController.getString("SearchFrom", NUM);
                SpannableString spannableString = new SpannableString(string + " " + str);
                spannableString.setSpan(new ForegroundColorSpan(Theme.getColor("actionBarDefaultSubtitle")), string.length() + 1, spannableString.length(), 33);
                this.searchItem.setSearchFieldCaption(spannableString);
                this.mentionsAdapter.searchUsernameOrHashtag((String) null, 0, (ArrayList<MessageObject>) null, false, true);
                this.searchItem.setSearchFieldHint((CharSequence) null);
                this.searchItem.clearSearchText();
                getMediaDataController().searchMessagesInChat("", this.dialog_id, this.mergeDialogId, this.classGuid, 0, this.threadMessageId, this.searchingUserMessages, this.searchingChatMessages);
            }
        }
    }

    private void updateInfoTopView(boolean z) {
        View.OnClickListener onClickListener;
        $$Lambda$ChatActivity$LOh7VQsBel2T9YrMSEn2qa6Px08 r1;
        String str;
        int i;
        TLRPC$User tLRPC$User;
        if (this.contentView != null) {
            SharedPreferences notificationsSettings = MessagesController.getNotificationsSettings(this.currentAccount);
            int i2 = notificationsSettings.getInt("dialog_bar_distance" + this.dialog_id, -1);
            this.distanceToPeer = i2;
            CharSequence charSequence = null;
            if (i2 < 0 || (tLRPC$User = this.currentUser) == null) {
                if (!(this.currentChat == null || this.chatInviterId == 0)) {
                    StringBuilder sb = new StringBuilder();
                    sb.append("dialog_bar_vis3");
                    sb.append(this.dialog_id);
                    boolean z2 = notificationsSettings.getInt(sb.toString(), 0) == 2;
                    boolean z3 = notificationsSettings.getBoolean("dialog_bar_report" + this.dialog_id, false);
                    boolean z4 = notificationsSettings.getBoolean("dialog_bar_block" + this.dialog_id, false);
                    if (!z2 || (!z3 && !z4)) {
                        hideInfoView();
                    } else {
                        TLRPC$User user = getMessagesController().getUser(Integer.valueOf(this.chatInviterId));
                        if (user != null) {
                            if (!ChatObject.isChannel(this.currentChat) || this.currentChat.megagroup) {
                                i = NUM;
                                str = "ActionUserInvitedToGroup";
                            } else {
                                i = NUM;
                                str = "ActionUserInvitedToChannel";
                            }
                            CharSequence replaceWithLink = MessageObject.replaceWithLink(LocaleController.getString(str, i), "un1", user);
                            r1 = new View.OnClickListener() {
                                public final void onClick(View view) {
                                    ChatActivity.this.lambda$updateInfoTopView$55$ChatActivity(view);
                                }
                            };
                            charSequence = replaceWithLink;
                        } else {
                            r1 = null;
                        }
                        onClickListener = r1;
                    }
                }
                onClickListener = null;
            } else {
                charSequence = LocaleController.formatString("ChatDistanceToPeer", NUM, tLRPC$User.first_name, LocaleController.formatDistance((float) i2, 0));
                onClickListener = new View.OnClickListener() {
                    public final void onClick(View view) {
                        ChatActivity.this.lambda$updateInfoTopView$54$ChatActivity(view);
                    }
                };
            }
            if (charSequence != null) {
                Animator animator = this.infoTopViewAnimator;
                if (animator != null) {
                    animator.cancel();
                }
                if (this.infoTopView == null) {
                    ChatActionCell chatActionCell = new ChatActionCell(this.contentView.getContext());
                    this.infoTopView = chatActionCell;
                    chatActionCell.setCustomText(charSequence);
                    this.infoTopView.setOnClickListener(onClickListener);
                    this.contentView.addView(this.infoTopView, LayoutHelper.createFrame(-2, -2.0f, 49, 0.0f, 0.0f, 0.0f, 0.0f));
                }
                if (!z) {
                    this.infoTopView.setTag(1);
                    this.topViewOffset = (float) AndroidUtilities.dp(30.0f);
                    invalidateChatListViewTopPadding();
                } else if (this.infoTopView.getTag() == null) {
                    ValueAnimator ofFloat = ValueAnimator.ofFloat(new float[]{0.0f, 1.0f});
                    this.infoTopView.setTag(1);
                    this.infoTopView.setAlpha(0.0f);
                    ofFloat.addUpdateListener(new ValueAnimator.AnimatorUpdateListener(this.infoTopView) {
                        public final /* synthetic */ View f$1;

                        {
                            this.f$1 = r2;
                        }

                        public final void onAnimationUpdate(ValueAnimator valueAnimator) {
                            ChatActivity.this.lambda$updateInfoTopView$56$ChatActivity(this.f$1, valueAnimator);
                        }
                    });
                    ofFloat.addListener(new AnimatorListenerAdapter() {
                        public void onAnimationEnd(Animator animator) {
                            float unused = ChatActivity.this.topViewOffset = (float) AndroidUtilities.dp(30.0f);
                            ChatActivity.this.invalidateChatListViewTopPadding();
                        }
                    });
                    ofFloat.setDuration(150);
                    this.infoTopViewAnimator = ofFloat;
                    ofFloat.start();
                }
            }
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$updateInfoTopView$54 */
    public /* synthetic */ void lambda$updateInfoTopView$54$ChatActivity(View view) {
        presentFragment(new PeopleNearbyActivity());
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$updateInfoTopView$55 */
    public /* synthetic */ void lambda$updateInfoTopView$55$ChatActivity(View view) {
        Bundle bundle = new Bundle();
        bundle.putInt("user_id", this.chatInviterId);
        presentFragment(new ProfileActivity(bundle));
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$updateInfoTopView$56 */
    public /* synthetic */ void lambda$updateInfoTopView$56$ChatActivity(View view, ValueAnimator valueAnimator) {
        float floatValue = ((Float) valueAnimator.getAnimatedValue()).floatValue();
        this.topViewOffset = ((float) AndroidUtilities.dp(30.0f)) * floatValue;
        invalidateChatListViewTopPadding();
        view.setAlpha(floatValue);
    }

    /* access modifiers changed from: private */
    public void openPinnedMessagesList(boolean z) {
        ActionBarLayout actionBarLayout;
        if (getParentActivity() != null && (actionBarLayout = this.parentLayout) != null && actionBarLayout.getLastFragment() == this && !this.pinnedMessageIds.isEmpty()) {
            Bundle bundle = new Bundle();
            TLRPC$Chat tLRPC$Chat = this.currentChat;
            if (tLRPC$Chat != null) {
                bundle.putInt("chat_id", tLRPC$Chat.id);
            } else {
                bundle.putInt("user_id", this.currentUser.id);
            }
            bundle.putInt("chatMode", 2);
            ChatActivity chatActivity = new ChatActivity(bundle);
            chatActivity.pinnedMessageIds = new ArrayList<>(this.pinnedMessageIds);
            chatActivity.pinnedMessageObjects = new HashMap<>(this.pinnedMessageObjects);
            int size = this.pinnedMessageIds.size();
            for (int i = 0; i < size; i++) {
                Integer num = this.pinnedMessageIds.get(i);
                MessageObject messageObject = this.pinnedMessageObjects.get(num);
                MessageObject messageObject2 = this.messagesDict[0].get(num.intValue());
                if (messageObject == null) {
                    messageObject = messageObject2;
                } else if (messageObject2 != null) {
                    messageObject.mediaExists = messageObject2.mediaExists;
                    messageObject.attachPathExists = messageObject2.attachPathExists;
                }
                if (messageObject != null) {
                    chatActivity.pinnedMessageObjects.put(num, messageObject);
                }
            }
            chatActivity.loadedPinnedMessagesCount = this.loadedPinnedMessagesCount;
            chatActivity.totalPinnedMessagesCount = this.totalPinnedMessagesCount;
            chatActivity.pinnedEndReached = this.pinnedEndReached;
            chatActivity.userInfo = this.userInfo;
            chatActivity.chatInfo = this.chatInfo;
            chatActivity.chatActivityDelegate = new ChatActivityDelegate() {
                public /* synthetic */ void onReport() {
                    ChatActivityDelegate.CC.$default$onReport(this);
                }

                public void openReplyMessage(int i) {
                    ChatActivity.this.scrollToMessageId(i, 0, true, 0, true, 0);
                }

                public void openSearch(String str) {
                    ChatActivity.this.openSearchWithText(str);
                }

                public void onUnpin(boolean z, boolean z2) {
                    if (z) {
                        ArrayList arrayList = new ArrayList(ChatActivity.this.pinnedMessageIds);
                        ArrayList arrayList2 = new ArrayList(ChatActivity.this.pinnedMessageObjects.values());
                        if (z2) {
                            SharedPreferences.Editor edit = MessagesController.getNotificationsSettings(ChatActivity.this.currentAccount).edit();
                            edit.putInt("pin_" + ChatActivity.this.dialog_id, ((Integer) ChatActivity.this.pinnedMessageIds.get(0)).intValue()).commit();
                            ChatActivity.this.updatePinnedMessageView(true);
                        } else {
                            ChatActivity.this.getNotificationCenter().postNotificationName(NotificationCenter.didLoadPinnedMessages, Long.valueOf(ChatActivity.this.dialog_id), arrayList, Boolean.FALSE, null, null, 0, 0, Boolean.TRUE);
                        }
                        if (ChatActivity.this.pinBulletin != null) {
                            ChatActivity.this.pinBulletin.hide();
                        }
                        boolean unused = ChatActivity.this.showPinBulletin = true;
                        int access$28204 = ChatActivity.access$28204(ChatActivity.this);
                        int access$28300 = ChatActivity.this.getPinnedMessagesCount();
                        ChatActivity chatActivity = ChatActivity.this;
                        Bulletin unused2 = chatActivity.pinBulletin = BulletinFactory.createUnpinAllMessagesBulletin(chatActivity, access$28300, z2, new Runnable(z2, arrayList, arrayList2, access$28300, access$28204) {
                            public final /* synthetic */ boolean f$1;
                            public final /* synthetic */ ArrayList f$2;
                            public final /* synthetic */ ArrayList f$3;
                            public final /* synthetic */ int f$4;
                            public final /* synthetic */ int f$5;

                            {
                                this.f$1 = r2;
                                this.f$2 = r3;
                                this.f$3 = r4;
                                this.f$4 = r5;
                                this.f$5 = r6;
                            }

                            public final void run() {
                                ChatActivity.AnonymousClass52.this.lambda$onUnpin$0$ChatActivity$52(this.f$1, this.f$2, this.f$3, this.f$4, this.f$5);
                            }
                        }, new Runnable(z2, access$28204) {
                            public final /* synthetic */ boolean f$1;
                            public final /* synthetic */ int f$2;

                            {
                                this.f$1 = r2;
                                this.f$2 = r3;
                            }

                            public final void run() {
                                ChatActivity.AnonymousClass52.this.lambda$onUnpin$1$ChatActivity$52(this.f$1, this.f$2);
                            }
                        });
                        return;
                    }
                    MessageObject messageObject = (MessageObject) ChatActivity.this.pinnedMessageObjects.get(Integer.valueOf(ChatActivity.this.currentPinnedMessageId));
                    if (messageObject == null) {
                        messageObject = (MessageObject) ChatActivity.this.messagesDict[0].get(ChatActivity.this.currentPinnedMessageId);
                    }
                    ChatActivity.this.unpinMessage(messageObject);
                }

                /* access modifiers changed from: private */
                /* renamed from: lambda$onUnpin$0 */
                public /* synthetic */ void lambda$onUnpin$0$ChatActivity$52(boolean z, ArrayList arrayList, ArrayList arrayList2, int i, int i2) {
                    if (z) {
                        SharedPreferences.Editor edit = MessagesController.getNotificationsSettings(ChatActivity.this.currentAccount).edit();
                        edit.remove("pin_" + ChatActivity.this.dialog_id).commit();
                        ChatActivity.this.updatePinnedMessageView(true);
                    } else {
                        ChatActivity.this.getNotificationCenter().postNotificationName(NotificationCenter.didLoadPinnedMessages, Long.valueOf(ChatActivity.this.dialog_id), arrayList, Boolean.TRUE, arrayList2, null, 0, Integer.valueOf(i), Boolean.valueOf(ChatActivity.this.pinnedEndReached));
                    }
                    if (i2 == ChatActivity.this.pinBullerinTag) {
                        Bulletin unused = ChatActivity.this.pinBulletin = null;
                    }
                }

                /* access modifiers changed from: private */
                /* renamed from: lambda$onUnpin$1 */
                public /* synthetic */ void lambda$onUnpin$1$ChatActivity$52(boolean z, int i) {
                    if (!z) {
                        MessagesController messagesController = ChatActivity.this.getMessagesController();
                        ChatActivity chatActivity = ChatActivity.this;
                        messagesController.unpinAllMessages(chatActivity.currentChat, chatActivity.currentUser);
                    }
                    if (i == ChatActivity.this.pinBullerinTag) {
                        Bulletin unused = ChatActivity.this.pinBulletin = null;
                    }
                }
            };
            if (z) {
                int measuredWidth = (int) (((float) this.fragmentView.getMeasuredWidth()) / 6.0f);
                int measuredHeight = (int) (((float) this.fragmentView.getMeasuredHeight()) / 6.0f);
                Bitmap createBitmap = Bitmap.createBitmap(measuredWidth, measuredHeight, Bitmap.Config.ARGB_8888);
                Canvas canvas = new Canvas(createBitmap);
                canvas.scale(0.16666667f, 0.16666667f);
                this.fragmentView.draw(canvas);
                Utilities.stackBlurBitmap(createBitmap, Math.max(7, Math.max(measuredWidth, measuredHeight) / 180));
                View view = this.blurredView;
                if (view == null) {
                    View view2 = new View(getParentActivity());
                    this.blurredView = view2;
                    this.contentView.addView(view2, LayoutHelper.createFrame(-1, -1.0f));
                } else {
                    if (this.contentView.indexOfChild(view) != this.contentView.getChildCount() - 1) {
                        this.contentView.removeView(this.blurredView);
                        this.contentView.addView(this.blurredView);
                    }
                    this.blurredView.setVisibility(0);
                }
                this.blurredView.setBackground(new BitmapDrawable(createBitmap));
                this.blurredView.setAlpha(0.0f);
                presentFragmentAsPreview(chatActivity);
                return;
            }
            presentFragment(chatActivity, false);
        }
    }

    /* access modifiers changed from: protected */
    public int getPreviewHeight() {
        if (this.chatMode == 2 && this.messages.size() == 2) {
            return getHeightForMessage(this.messages.get(0)) + AndroidUtilities.dp(80.0f) + ActionBar.getCurrentActionBarHeight();
        }
        return super.getPreviewHeight();
    }

    private void showProgressView(boolean z) {
        FrameLayout frameLayout = this.progressView;
        if (frameLayout != null) {
            int i = 0;
            if (!this.fragmentOpened || !BuildVars.DEBUG_VERSION) {
                this.animateTo = z;
                if (!z) {
                    i = 4;
                }
                frameLayout.setVisibility(i);
            } else if (z != this.animateTo) {
                this.animateTo = z;
                if (z) {
                    if (frameLayout.getVisibility() != 0) {
                        this.progressView.setVisibility(0);
                        this.progressView.setAlpha(0.0f);
                        this.progressView.setScaleX(0.3f);
                        this.progressView.setScaleY(0.3f);
                    }
                    this.progressView.animate().setListener((Animator.AnimatorListener) null).cancel();
                    this.progressView.animate().alpha(1.0f).scaleX(1.0f).scaleY(1.0f).setDuration(150).start();
                    return;
                }
                frameLayout.animate().setListener((Animator.AnimatorListener) null).cancel();
                this.progressView.animate().alpha(0.0f).scaleX(0.3f).scaleY(0.3f).setDuration(150).setListener(new AnimatorListenerAdapter() {
                    public void onAnimationEnd(Animator animator) {
                        ChatActivity.this.progressView.setVisibility(4);
                    }
                }).start();
            }
        }
    }

    private void hideInfoView() {
        if (this.distanceToPeer >= 0) {
            this.distanceToPeer = -1;
            SharedPreferences.Editor edit = MessagesController.getNotificationsSettings(this.currentAccount).edit();
            edit.putInt("dialog_bar_distance" + this.dialog_id, -2).commit();
        }
        Animator animator = this.infoTopViewAnimator;
        if (animator != null) {
            animator.cancel();
        }
        ChatActionCell chatActionCell = this.infoTopView;
        if (chatActionCell != null && chatActionCell.getTag() != null) {
            this.infoTopView.setTag((Object) null);
            final ChatActionCell chatActionCell2 = this.infoTopView;
            ValueAnimator ofFloat = ValueAnimator.ofFloat(new float[]{1.0f, 0.0f});
            ofFloat.addUpdateListener(new ValueAnimator.AnimatorUpdateListener(chatActionCell2) {
                public final /* synthetic */ View f$1;

                {
                    this.f$1 = r2;
                }

                public final void onAnimationUpdate(ValueAnimator valueAnimator) {
                    ChatActivity.this.lambda$hideInfoView$57$ChatActivity(this.f$1, valueAnimator);
                }
            });
            ofFloat.addListener(new AnimatorListenerAdapter() {
                public void onAnimationEnd(Animator animator) {
                    float unused = ChatActivity.this.topViewOffset = 0.0f;
                    if (animator == ChatActivity.this.infoTopViewAnimator) {
                        ViewGroup viewGroup = (ViewGroup) chatActionCell2.getParent();
                        if (viewGroup != null) {
                            viewGroup.removeView(chatActionCell2);
                        }
                        ChatActionCell unused2 = ChatActivity.this.infoTopView = null;
                        Animator unused3 = ChatActivity.this.infoTopViewAnimator = null;
                    }
                }
            });
            ofFloat.setDuration(150);
            this.infoTopViewAnimator = ofFloat;
            ofFloat.start();
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$hideInfoView$57 */
    public /* synthetic */ void lambda$hideInfoView$57$ChatActivity(View view, ValueAnimator valueAnimator) {
        float floatValue = ((Float) valueAnimator.getAnimatedValue()).floatValue();
        this.topViewOffset = ((float) AndroidUtilities.dp(30.0f)) * floatValue;
        invalidateChatListViewTopPadding();
        invalidateMessagesVisiblePart();
        view.setAlpha(floatValue);
    }

    /* access modifiers changed from: private */
    public void updateChatListViewTopPadding() {
        RecyclerListView recyclerListView;
        FrameLayout frameLayout;
        int i;
        int measuredHeight;
        int paddingBottom;
        ChatActivityEnterView chatActivityEnterView2;
        if (this.invalidateChatListViewTopPadding && this.chatListView != null) {
            float max = Math.max(0.0f, ((float) AndroidUtilities.dp(48.0f)) + this.topChatPanelViewOffset);
            FrameLayout frameLayout2 = this.pinnedMessageView;
            float max2 = (frameLayout2 == null || frameLayout2.getVisibility() != 0) ? 0.0f : Math.max(0.0f, ((float) AndroidUtilities.dp(48.0f)) + this.pinnedMessageEnterOffset);
            float f = this.chatListViewPaddingTop;
            float dp = ((float) (AndroidUtilities.dp(4.0f) + this.contentPaddingTop)) + max + max2;
            this.chatListViewPaddingTop = dp;
            this.chatListViewPaddingVisibleOffset = 0;
            float f2 = this.contentPanTranslation;
            float f3 = this.bottomPanelTranslationY;
            this.chatListViewPaddingTop = dp + f2 + f3;
            if (f3 == 0.0f && !this.chatActivityEnterView.pannelAniamationInProgress() && this.contentView.getLayoutParams().height < 0) {
                this.chatListViewPaddingTop += (float) ((this.contentView.getKeyboardHeight() > AndroidUtilities.dp(20.0f) || AndroidUtilities.isInMultiwindow || this.inBubbleMode) ? this.contentView.getKeyboardHeight() : this.chatActivityEnterView.getEmojiPadding());
            }
            if (!this.inPreviewMode && (chatActivityEnterView2 = this.chatActivityEnterView) != null) {
                if (chatActivityEnterView2.getAnimatedTop() != 0) {
                    this.chatListViewPaddingTop += (float) ((this.chatActivityEnterView.getHeightWithTopView() - AndroidUtilities.dp(51.0f)) - this.chatActivityEnterView.getAnimatedTop());
                } else if (!this.chatActivityEnterView.pannelAniamationInProgress()) {
                    float heightWithTopView = this.chatListViewPaddingTop + ((float) (this.chatActivityEnterView.getHeightWithTopView() - AndroidUtilities.dp(51.0f)));
                    this.chatListViewPaddingTop = heightWithTopView;
                    if (this.chatActivityEnterView.currentTopViewAnimation == null) {
                        this.chatListViewPaddingTop = heightWithTopView - this.chatListView.getTranslationY();
                    }
                }
            }
            ChatActionCell chatActionCell = this.infoTopView;
            if (chatActionCell != null) {
                chatActionCell.setTranslationY((this.chatListViewPaddingTop - ((float) AndroidUtilities.dp(30.0f))) + this.topViewOffset);
                float f4 = this.chatListViewPaddingTop;
                float f5 = this.topViewOffset;
                this.chatListViewPaddingTop = f4 + f5;
                this.chatListViewPaddingVisibleOffset = (int) (((float) this.chatListViewPaddingVisibleOffset) + f5);
            }
            ChatActionCell chatActionCell2 = this.floatingDateView;
            if (chatActionCell2 != null) {
                chatActionCell2.setTranslationY(((this.chatListView.getTranslationY() + this.chatListViewPaddingTop) + this.floatingDateViewOffset) - ((float) AndroidUtilities.dp(4.0f)));
            }
            int measuredHeight2 = (this.chatListView.getMeasuredHeight() * 2) / 3;
            RecyclerListView recyclerListView2 = this.chatListView;
            if (!(recyclerListView2 == null || this.chatLayoutManager == null || this.chatAdapter == null)) {
                if (recyclerListView2.getPaddingTop() != measuredHeight2) {
                    int findFirstVisibleItemPosition = this.chatLayoutManager.findFirstVisibleItemPosition();
                    int findLastVisibleItemPosition = this.chatLayoutManager.findLastVisibleItemPosition();
                    MessageObject messageObject = null;
                    if (findFirstVisibleItemPosition != -1) {
                        int i2 = findFirstVisibleItemPosition;
                        while (i2 <= findLastVisibleItemPosition) {
                            View findViewByPosition = this.chatLayoutManager.findViewByPosition(i2);
                            if (findViewByPosition instanceof ChatMessageCell) {
                                messageObject = ((ChatMessageCell) findViewByPosition).getMessageObject();
                                measuredHeight = this.chatListView.getMeasuredHeight() - findViewByPosition.getBottom();
                                paddingBottom = this.chatListView.getPaddingBottom();
                            } else if (findViewByPosition instanceof ChatActionCell) {
                                messageObject = ((ChatActionCell) findViewByPosition).getMessageObject();
                                measuredHeight = this.chatListView.getMeasuredHeight() - findViewByPosition.getBottom();
                                paddingBottom = this.chatListView.getPaddingBottom();
                            } else {
                                i2++;
                            }
                            i = measuredHeight - paddingBottom;
                            break;
                        }
                    }
                    i = 0;
                    this.chatListView.setPadding(0, measuredHeight2, 0, AndroidUtilities.dp(3.0f));
                    if (!(findFirstVisibleItemPosition == -1 || messageObject == null)) {
                        this.chatAdapter.updateRowsSafe();
                        int indexOf = this.messages.indexOf(messageObject);
                        if (indexOf >= 0) {
                            this.chatLayoutManager.scrollToPositionWithOffset(this.chatAdapter.messagesStartRow + indexOf, i);
                        }
                    }
                    invalidateMessagesVisiblePart();
                }
                this.chatListView.setTopGlowOffset((int) ((this.chatListViewPaddingTop - ((float) this.chatListViewPaddingVisibleOffset)) - ((float) AndroidUtilities.dp(4.0f))));
                if (f != this.chatListViewPaddingTop) {
                    int childCount = this.chatListView.getChildCount();
                    int i3 = 0;
                    while (true) {
                        if (i3 >= childCount) {
                            break;
                        }
                        View childAt = this.chatListView.getChildAt(i3);
                        if (this.chatListView.getChildAdapterPosition(childAt) == this.chatAdapter.getItemCount() - 1) {
                            float f6 = this.chatListViewPaddingTop;
                            if (isThreadChat() && (frameLayout = this.pinnedMessageView) != null && frameLayout.getVisibility() == 0) {
                                f6 -= Math.max(0.0f, ((float) AndroidUtilities.dp(48.0f)) + this.pinnedMessageEnterOffset);
                            }
                            if (((float) childAt.getTop()) > f6) {
                                this.chatListView.scrollBy(0, (int) (((float) childAt.getTop()) - f6));
                            }
                        } else {
                            i3++;
                        }
                    }
                }
                if (!isThreadChat() && !this.wasManualScroll && this.unreadMessageObject != null && (recyclerListView = this.chatListView) != null) {
                    recyclerListView.scrollBy(0, (int) (f - this.chatListViewPaddingTop));
                }
            }
            this.invalidateChatListViewTopPadding = false;
        }
    }

    /* access modifiers changed from: private */
    public void invalidateChatListViewTopPadding() {
        MentionsAdapter mentionsAdapter2;
        this.invalidateChatListViewTopPadding = true;
        SizeNotifierFrameLayout sizeNotifierFrameLayout = this.contentView;
        if (sizeNotifierFrameLayout != null) {
            sizeNotifierFrameLayout.invalidate();
        }
        RecyclerListView recyclerListView = this.chatListView;
        if (recyclerListView != null) {
            recyclerListView.invalidate();
        }
        float f = 0.0f;
        float max = Math.max(0.0f, ((float) AndroidUtilities.dp(48.0f)) + this.topChatPanelViewOffset);
        FrameLayout frameLayout = this.pinnedMessageView;
        if (frameLayout != null) {
            frameLayout.setTranslationY(this.contentPanTranslation + this.pinnedMessageEnterOffset + ((float) this.contentPaddingTop) + max);
        }
        if (this.fragmentContextView != null) {
            FragmentContextView fragmentContextView2 = this.fragmentLocationContextView;
            float dp = (fragmentContextView2 == null || fragmentContextView2.getVisibility() != 0) ? 0.0f : ((float) AndroidUtilities.dp(36.0f)) + 0.0f;
            FragmentContextView fragmentContextView3 = this.fragmentContextView;
            fragmentContextView3.setTranslationY(this.contentPanTranslation + dp + fragmentContextView3.getTopPadding());
        }
        if (this.fragmentLocationContextView != null) {
            FragmentContextView fragmentContextView4 = this.fragmentContextView;
            if (fragmentContextView4 != null && fragmentContextView4.getVisibility() == 0) {
                f = 0.0f + ((float) AndroidUtilities.dp((float) this.fragmentContextView.getStyleHeight())) + this.fragmentContextView.getTopPadding();
            }
            FragmentContextView fragmentContextView5 = this.fragmentLocationContextView;
            fragmentContextView5.setTranslationY(this.contentPanTranslation + f + fragmentContextView5.getTopPadding());
        }
        FrameLayout frameLayout2 = this.topChatPanelView;
        if (frameLayout2 != null) {
            frameLayout2.setTranslationY(this.contentPanTranslation + ((float) this.contentPaddingTop) + this.topChatPanelViewOffset);
        }
        if (this.mentionListView == null || this.mentionLayoutManager == null || (mentionsAdapter2 = this.mentionsAdapter) == null || mentionsAdapter2.isBotCommands()) {
            RecyclerListView recyclerListView2 = this.mentionListView;
            if (recyclerListView2 != null) {
                recyclerListView2.setTranslationY(this.bottomPanelTranslationYReverse);
            }
        } else if (this.mentionLayoutManager.getReverseLayout()) {
            this.mentionListView.setTranslationY(this.contentPanTranslation + ((float) this.contentPaddingTop));
        } else {
            this.mentionListView.setTranslationY(this.contentPanTranslation);
        }
        FrameLayout frameLayout3 = this.alertView;
        if (frameLayout3 != null && frameLayout3.getVisibility() == 0) {
            this.alertView.setTranslationY((this.contentPanTranslation + ((float) this.contentPaddingTop)) - (((float) AndroidUtilities.dp(50.0f)) * (1.0f - this.alertViewEnterProgress)));
        }
    }

    /* access modifiers changed from: private */
    public TextureView createTextureView(boolean z) {
        if (this.parentLayout == null) {
            return null;
        }
        if (this.videoPlayerContainer == null) {
            if (Build.VERSION.SDK_INT >= 21) {
                AnonymousClass55 r0 = new FrameLayout(getParentActivity()) {
                    public void setTranslationY(float f) {
                        super.setTranslationY(f);
                        ChatActivity.this.contentView.invalidate();
                    }
                };
                this.videoPlayerContainer = r0;
                r0.setOutlineProvider(new ViewOutlineProvider(this) {
                    @TargetApi(21)
                    public void getOutline(View view, Outline outline) {
                        ImageReceiver imageReceiver = (ImageReceiver) view.getTag(NUM);
                        if (imageReceiver != null) {
                            int[] roundRadius = imageReceiver.getRoundRadius();
                            int i = 0;
                            for (int i2 = 0; i2 < 4; i2++) {
                                i = Math.max(i, roundRadius[i2]);
                            }
                            outline.setRoundRect(0, 0, view.getMeasuredWidth(), view.getMeasuredHeight(), (float) i);
                            return;
                        }
                        int i3 = AndroidUtilities.roundMessageSize;
                        outline.setOval(0, 0, i3, i3);
                    }
                });
                this.videoPlayerContainer.setClipToOutline(true);
            } else {
                this.videoPlayerContainer = new FrameLayout(getParentActivity()) {
                    RectF rect = new RectF();

                    /* access modifiers changed from: protected */
                    public void onSizeChanged(int i, int i2, int i3, int i4) {
                        super.onSizeChanged(i, i2, i3, i4);
                        ChatActivity.this.aspectPath.reset();
                        ImageReceiver imageReceiver = (ImageReceiver) getTag(NUM);
                        if (imageReceiver != null) {
                            int[] roundRadius = imageReceiver.getRoundRadius();
                            int i5 = 0;
                            for (int i6 = 0; i6 < 4; i6++) {
                                i5 = Math.max(i5, roundRadius[i6]);
                            }
                            this.rect.set(0.0f, 0.0f, (float) i, (float) i2);
                            ChatActivity.this.aspectPath.addRoundRect(this.rect, (float) AndroidUtilities.dp(4.0f), (float) AndroidUtilities.dp(4.0f), Path.Direction.CW);
                        } else {
                            float f = (float) (i / 2);
                            ChatActivity.this.aspectPath.addCircle(f, (float) (i2 / 2), f, Path.Direction.CW);
                        }
                        ChatActivity.this.aspectPath.toggleInverseFillType();
                    }

                    public void setTranslationY(float f) {
                        super.setTranslationY(f);
                        ChatActivity.this.contentView.invalidate();
                    }

                    public void setVisibility(int i) {
                        super.setVisibility(i);
                        if (i == 0) {
                            setLayerType(2, (Paint) null);
                        }
                    }

                    /* access modifiers changed from: protected */
                    public void dispatchDraw(Canvas canvas) {
                        super.dispatchDraw(canvas);
                        if (getTag() == null) {
                            canvas.drawPath(ChatActivity.this.aspectPath, ChatActivity.this.aspectPaint);
                        }
                    }
                };
                this.aspectPath = new Path();
                Paint paint = new Paint(1);
                this.aspectPaint = paint;
                paint.setColor(-16777216);
                this.aspectPaint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.CLEAR));
            }
            this.videoPlayerContainer.setWillNotDraw(false);
            AspectRatioFrameLayout aspectRatioFrameLayout2 = new AspectRatioFrameLayout(getParentActivity());
            this.aspectRatioFrameLayout = aspectRatioFrameLayout2;
            aspectRatioFrameLayout2.setBackgroundColor(0);
            if (z) {
                this.videoPlayerContainer.addView(this.aspectRatioFrameLayout, LayoutHelper.createFrame(-1, -1, 17));
            }
            TextureView textureView = new TextureView(getParentActivity());
            this.videoTextureView = textureView;
            textureView.setOpaque(false);
            this.aspectRatioFrameLayout.addView(this.videoTextureView, LayoutHelper.createFrame(-1, -1.0f));
        }
        ViewGroup viewGroup = (ViewGroup) this.videoPlayerContainer.getParent();
        if (!(viewGroup == null || viewGroup == this.contentView)) {
            viewGroup.removeView(this.videoPlayerContainer);
            viewGroup = null;
        }
        if (viewGroup == null) {
            SizeNotifierFrameLayout sizeNotifierFrameLayout = this.contentView;
            FrameLayout frameLayout = this.videoPlayerContainer;
            int i = AndroidUtilities.roundMessageSize;
            sizeNotifierFrameLayout.addView(frameLayout, 1, new FrameLayout.LayoutParams(i, i));
        }
        this.videoPlayerContainer.setTag((Object) null);
        this.aspectRatioFrameLayout.setDrawingReady(false);
        return this.videoTextureView;
    }

    private void destroyTextureView() {
        FrameLayout frameLayout = this.videoPlayerContainer;
        if (frameLayout != null && frameLayout.getParent() != null) {
            this.contentView.removeView(this.videoPlayerContainer);
            this.aspectRatioFrameLayout.setDrawingReady(false);
            this.videoPlayerContainer.setTag((Object) null);
            if (Build.VERSION.SDK_INT < 21) {
                this.videoPlayerContainer.setLayerType(0, (Paint) null);
            }
        }
    }

    /* access modifiers changed from: private */
    public void openForward() {
        int i = 0;
        boolean z = false;
        for (int i2 = 0; i2 < 2; i2++) {
            for (int i3 = 0; i3 < this.selectedMessagesIds[i2].size(); i3++) {
                MessageObject valueAt = this.selectedMessagesIds[i2].valueAt(i3);
                if (valueAt.isPoll()) {
                    i = valueAt.isPublicPoll() ? 2 : 1;
                    if (i == 2) {
                        break;
                    }
                } else if (valueAt.isInvoice()) {
                    z = true;
                }
            }
            if (i == 2) {
                break;
            }
        }
        Bundle bundle = new Bundle();
        bundle.putBoolean("onlySelect", true);
        bundle.putInt("dialogsType", 3);
        bundle.putInt("messagesCount", this.canForwardMessagesCount);
        bundle.putInt("hasPoll", i);
        bundle.putBoolean("hasInvoice", z);
        DialogsActivity dialogsActivity = new DialogsActivity(bundle);
        dialogsActivity.setDelegate(this);
        presentFragment(dialogsActivity);
    }

    private void showBottomOverlayProgress(final boolean z, boolean z2) {
        if (z && this.bottomOverlayProgress.getTag() != null) {
            return;
        }
        if (z || this.bottomOverlayProgress.getTag() != null) {
            AnimatorSet animatorSet = this.bottomOverlayAnimation;
            int i = null;
            if (animatorSet != null) {
                animatorSet.cancel();
                this.bottomOverlayAnimation = null;
            }
            RadialProgressView radialProgressView = this.bottomOverlayProgress;
            if (z) {
                i = 1;
            }
            radialProgressView.setTag(i);
            float f = 0.0f;
            int i2 = 4;
            float f2 = 0.1f;
            if (z2) {
                this.bottomOverlayAnimation = new AnimatorSet();
                if (z) {
                    this.bottomOverlayProgress.setVisibility(0);
                    this.bottomOverlayAnimation.playTogether(new Animator[]{ObjectAnimator.ofFloat(this.bottomOverlayChatText, View.SCALE_X, new float[]{0.1f}), ObjectAnimator.ofFloat(this.bottomOverlayChatText, View.SCALE_Y, new float[]{0.1f}), ObjectAnimator.ofFloat(this.bottomOverlayChatText, View.ALPHA, new float[]{0.0f}), ObjectAnimator.ofFloat(this.bottomOverlayProgress, View.SCALE_X, new float[]{1.0f}), ObjectAnimator.ofFloat(this.bottomOverlayProgress, View.SCALE_Y, new float[]{1.0f}), ObjectAnimator.ofFloat(this.bottomOverlayProgress, View.ALPHA, new float[]{1.0f})});
                } else {
                    this.bottomOverlayChatText.setVisibility(0);
                    this.bottomOverlayAnimation.playTogether(new Animator[]{ObjectAnimator.ofFloat(this.bottomOverlayProgress, View.SCALE_X, new float[]{0.1f}), ObjectAnimator.ofFloat(this.bottomOverlayProgress, View.SCALE_Y, new float[]{0.1f}), ObjectAnimator.ofFloat(this.bottomOverlayProgress, View.ALPHA, new float[]{0.0f}), ObjectAnimator.ofFloat(this.bottomOverlayChatText, View.SCALE_X, new float[]{1.0f}), ObjectAnimator.ofFloat(this.bottomOverlayChatText, View.SCALE_Y, new float[]{1.0f}), ObjectAnimator.ofFloat(this.bottomOverlayChatText, View.ALPHA, new float[]{1.0f})});
                }
                this.bottomOverlayAnimation.addListener(new AnimatorListenerAdapter() {
                    public void onAnimationEnd(Animator animator) {
                        if (ChatActivity.this.bottomOverlayAnimation != null && ChatActivity.this.bottomOverlayAnimation.equals(animator)) {
                            if (!z) {
                                ChatActivity.this.bottomOverlayProgress.setVisibility(4);
                            } else {
                                ChatActivity.this.bottomOverlayChatText.setVisibility(4);
                            }
                        }
                    }

                    public void onAnimationCancel(Animator animator) {
                        if (ChatActivity.this.bottomOverlayAnimation != null && ChatActivity.this.bottomOverlayAnimation.equals(animator)) {
                            AnimatorSet unused = ChatActivity.this.bottomOverlayAnimation = null;
                        }
                    }
                });
                this.bottomOverlayAnimation.setDuration(150);
                this.bottomOverlayAnimation.start();
                return;
            }
            this.bottomOverlayProgress.setVisibility(z ? 0 : 4);
            this.bottomOverlayProgress.setScaleX(z ? 1.0f : 0.1f);
            this.bottomOverlayProgress.setScaleY(z ? 1.0f : 0.1f);
            this.bottomOverlayProgress.setAlpha(1.0f);
            UnreadCounterTextView unreadCounterTextView = this.bottomOverlayChatText;
            if (!z) {
                i2 = 0;
            }
            unreadCounterTextView.setVisibility(i2);
            this.bottomOverlayChatText.setScaleX(z ? 0.1f : 1.0f);
            UnreadCounterTextView unreadCounterTextView2 = this.bottomOverlayChatText;
            if (!z) {
                f2 = 1.0f;
            }
            unreadCounterTextView2.setScaleY(f2);
            UnreadCounterTextView unreadCounterTextView3 = this.bottomOverlayChatText;
            if (!z) {
                f = 1.0f;
            }
            unreadCounterTextView3.setAlpha(f);
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: sendBotInlineResult */
    public void lambda$null$28(TLRPC$BotInlineResult tLRPC$BotInlineResult, boolean z, int i) {
        int contextBotId = this.mentionsAdapter.getContextBotId();
        HashMap hashMap = new HashMap();
        hashMap.put("id", tLRPC$BotInlineResult.id);
        hashMap.put("query_id", "" + tLRPC$BotInlineResult.query_id);
        hashMap.put("bot", "" + contextBotId);
        hashMap.put("bot_name", this.mentionsAdapter.getContextBotName());
        SendMessagesHelper.prepareSendingBotContextResult(getAccountInstance(), tLRPC$BotInlineResult, hashMap, this.dialog_id, this.replyingMessageObject, getThreadMessage(), z, i);
        this.chatActivityEnterView.setFieldText("");
        hideFieldPanel(false);
        getMediaDataController().increaseInlineRaiting(contextBotId);
    }

    /* access modifiers changed from: private */
    public void mentionListViewUpdateLayout() {
        if (this.mentionListView.getChildCount() <= 0) {
            this.mentionListViewScrollOffsetY = 0;
            this.mentionListViewLastViewPosition = -1;
            return;
        }
        RecyclerListView recyclerListView = this.mentionListView;
        View childAt = recyclerListView.getChildAt(recyclerListView.getChildCount() - 1);
        RecyclerListView.Holder holder = (RecyclerListView.Holder) this.mentionListView.findContainingViewHolder(childAt);
        if (this.mentionLayoutManager.getReverseLayout()) {
            if (holder != null) {
                this.mentionListViewLastViewPosition = holder.getAdapterPosition();
                this.mentionListViewLastViewTop = childAt.getBottom();
            } else {
                this.mentionListViewLastViewPosition = -1;
            }
            View childAt2 = this.mentionListView.getChildAt(0);
            RecyclerListView.Holder holder2 = (RecyclerListView.Holder) this.mentionListView.findContainingViewHolder(childAt2);
            int measuredHeight = (childAt2.getBottom() >= this.mentionListView.getMeasuredHeight() || holder2 == null || holder2.getAdapterPosition() != 0) ? this.mentionListView.getMeasuredHeight() : childAt2.getBottom();
            if (this.mentionListViewScrollOffsetY != measuredHeight) {
                RecyclerListView recyclerListView2 = this.mentionListView;
                this.mentionListViewScrollOffsetY = measuredHeight;
                recyclerListView2.setBottomGlowOffset(measuredHeight);
                this.mentionListView.setTopGlowOffset(0);
                this.mentionListView.invalidate();
                this.mentionContainer.invalidate();
                return;
            }
            return;
        }
        if (holder != null) {
            this.mentionListViewLastViewPosition = holder.getAdapterPosition();
            this.mentionListViewLastViewTop = childAt.getTop();
        } else {
            this.mentionListViewLastViewPosition = -1;
        }
        View childAt3 = this.mentionListView.getChildAt(0);
        RecyclerListView.Holder holder3 = (RecyclerListView.Holder) this.mentionListView.findContainingViewHolder(childAt3);
        int top = (childAt3.getTop() <= 0 || holder3 == null || holder3.getAdapterPosition() != 0) ? 0 : childAt3.getTop();
        if (this.mentionListViewScrollOffsetY != top) {
            RecyclerListView recyclerListView3 = this.mentionListView;
            this.mentionListViewScrollOffsetY = top;
            recyclerListView3.setTopGlowOffset(top);
            this.mentionListView.setBottomGlowOffset(0);
            this.mentionListView.invalidate();
            this.mentionContainer.invalidate();
        }
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r0v1, resolved type: boolean} */
    /* JADX WARNING: type inference failed for: r0v0 */
    /* JADX WARNING: type inference failed for: r0v2 */
    /* JADX WARNING: type inference failed for: r0v3, types: [int] */
    /* JADX WARNING: type inference failed for: r0v7 */
    /* JADX WARNING: Multi-variable type inference failed */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private void checkBotCommands() {
        /*
            r4 = this;
            r0 = 0
            org.telegram.ui.Components.URLSpanBotCommand.enabled = r0
            org.telegram.tgnet.TLRPC$User r1 = r4.currentUser
            r2 = 1
            if (r1 == 0) goto L_0x0014
            boolean r3 = r1.bot
            if (r3 == 0) goto L_0x0014
            boolean r0 = org.telegram.messenger.UserObject.isReplyUser((org.telegram.tgnet.TLRPC$User) r1)
            r0 = r0 ^ r2
            org.telegram.ui.Components.URLSpanBotCommand.enabled = r0
            goto L_0x0063
        L_0x0014:
            org.telegram.tgnet.TLRPC$ChatFull r1 = r4.chatInfo
            boolean r3 = r1 instanceof org.telegram.tgnet.TLRPC$TL_chatFull
            if (r3 == 0) goto L_0x004c
        L_0x001a:
            org.telegram.tgnet.TLRPC$ChatFull r1 = r4.chatInfo
            org.telegram.tgnet.TLRPC$ChatParticipants r1 = r1.participants
            java.util.ArrayList<org.telegram.tgnet.TLRPC$ChatParticipant> r1 = r1.participants
            int r1 = r1.size()
            if (r0 >= r1) goto L_0x0063
            org.telegram.tgnet.TLRPC$ChatFull r1 = r4.chatInfo
            org.telegram.tgnet.TLRPC$ChatParticipants r1 = r1.participants
            java.util.ArrayList<org.telegram.tgnet.TLRPC$ChatParticipant> r1 = r1.participants
            java.lang.Object r1 = r1.get(r0)
            org.telegram.tgnet.TLRPC$ChatParticipant r1 = (org.telegram.tgnet.TLRPC$ChatParticipant) r1
            org.telegram.messenger.MessagesController r3 = r4.getMessagesController()
            int r1 = r1.user_id
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)
            org.telegram.tgnet.TLRPC$User r1 = r3.getUser(r1)
            if (r1 == 0) goto L_0x0049
            boolean r1 = r1.bot
            if (r1 == 0) goto L_0x0049
            org.telegram.ui.Components.URLSpanBotCommand.enabled = r2
            goto L_0x0063
        L_0x0049:
            int r0 = r0 + 1
            goto L_0x001a
        L_0x004c:
            boolean r3 = r1 instanceof org.telegram.tgnet.TLRPC$TL_channelFull
            if (r3 == 0) goto L_0x0063
            java.util.ArrayList<org.telegram.tgnet.TLRPC$BotInfo> r1 = r1.bot_info
            boolean r1 = r1.isEmpty()
            if (r1 != 0) goto L_0x0061
            org.telegram.tgnet.TLRPC$Chat r1 = r4.currentChat
            if (r1 == 0) goto L_0x0061
            boolean r1 = r1.megagroup
            if (r1 == 0) goto L_0x0061
            r0 = 1
        L_0x0061:
            org.telegram.ui.Components.URLSpanBotCommand.enabled = r0
        L_0x0063:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.checkBotCommands():void");
    }

    /* access modifiers changed from: private */
    public MessageObject.GroupedMessages getValidGroupedMessage(MessageObject messageObject) {
        if (messageObject.getGroupId() == 0) {
            return null;
        }
        MessageObject.GroupedMessages groupedMessages = this.groupedMessagesMap.get(messageObject.getGroupId());
        if (groupedMessages == null || (groupedMessages.messages.size() > 1 && groupedMessages.positions.get(messageObject) != null)) {
            return groupedMessages;
        }
        return null;
    }

    /* access modifiers changed from: private */
    public void jumpToDate(int i) {
        int i2;
        TLRPC$Message tLRPC$Message;
        int i3 = i;
        if (!this.messages.isEmpty()) {
            ArrayList<MessageObject> arrayList = this.messages;
            int i4 = 1;
            MessageObject messageObject = arrayList.get(arrayList.size() - 1);
            if ((this.messages.get(0).messageOwner.date >= i3 && messageObject.messageOwner.date <= i3) || (messageObject.messageOwner.date >= i3 && this.endReached[0])) {
                int size = this.messages.size() - 1;
                while (size >= 0) {
                    MessageObject messageObject2 = this.messages.get(size);
                    if (messageObject2.messageOwner.date < i3 || messageObject2.getId() == 0) {
                        size--;
                    } else {
                        int id = messageObject2.getId();
                        if (messageObject2.getDialogId() != this.mergeDialogId) {
                            i4 = 0;
                        }
                        scrollToMessageId(id, 0, false, i4, true, 0);
                        return;
                    }
                }
            } else if (((int) this.dialog_id) != 0) {
                int findLastVisibleItemPosition = this.chatLayoutManager.findLastVisibleItemPosition();
                int findFirstVisibleItemPosition = this.chatLayoutManager.findFirstVisibleItemPosition();
                while (true) {
                    if (findFirstVisibleItemPosition > findLastVisibleItemPosition) {
                        i2 = -1;
                        break;
                    } else if (findFirstVisibleItemPosition < this.chatAdapter.messagesStartRow || findFirstVisibleItemPosition > this.chatAdapter.messagesEndRow || (tLRPC$Message = this.messages.get(findFirstVisibleItemPosition - this.chatAdapter.messagesStartRow).messageOwner) == null) {
                        findFirstVisibleItemPosition++;
                    } else {
                        int i5 = tLRPC$Message.date < i3 ? 1 : 0;
                        if (isSecretChat()) {
                            i5 ^= 1;
                        }
                        i2 = i5 ^ 1;
                    }
                }
                this.chatScrollHelper.setScrollDirection(i2);
                AlertDialog alertDialog = this.progressDialog;
                if (alertDialog != null) {
                    alertDialog.dismiss();
                }
                updatePinnedListButton(false);
                AlertDialog alertDialog2 = new AlertDialog(getParentActivity(), 3);
                this.progressDialog = alertDialog2;
                alertDialog2.setOnCancelListener(this.postponedScrollCancelListener);
                this.progressDialog.showDelayed(1000);
                int i6 = this.lastLoadIndex;
                this.postponedScrollToLastMessageQueryIndex = i6;
                this.waitingForLoad.add(Integer.valueOf(i6));
                this.postponedScrollMessageId = 0;
                this.postponedScrollIsCanceled = false;
                MessagesController messagesController = getMessagesController();
                long j = this.dialog_id;
                long j2 = this.mergeDialogId;
                int i7 = this.classGuid;
                boolean isChannel = ChatObject.isChannel(this.currentChat);
                int i8 = this.chatMode;
                int i9 = this.threadMessageId;
                int i10 = this.replyMaxReadId;
                int i11 = this.lastLoadIndex;
                this.lastLoadIndex = i11 + 1;
                messagesController.loadMessages(j, j2, false, 30, 0, i, true, 0, i7, 4, 0, isChannel, i8, i9, i10, i11);
                this.floatingDateView.setAlpha(0.0f);
                this.floatingDateView.setTag((Object) null);
            }
        }
    }

    public void processInlineBotContextPM(TLRPC$TL_inlineBotSwitchPM tLRPC$TL_inlineBotSwitchPM) {
        TLRPC$User contextBotUser;
        if (tLRPC$TL_inlineBotSwitchPM != null && (contextBotUser = this.mentionsAdapter.getContextBotUser()) != null) {
            this.chatActivityEnterView.setFieldText("");
            long j = this.dialog_id;
            if (j == ((long) contextBotUser.id)) {
                this.inlineReturn = j;
                getMessagesController().sendBotStart(this.currentUser, tLRPC$TL_inlineBotSwitchPM.start_param);
                return;
            }
            Bundle bundle = new Bundle();
            bundle.putInt("user_id", contextBotUser.id);
            bundle.putString("inline_query", tLRPC$TL_inlineBotSwitchPM.start_param);
            bundle.putLong("inline_return", this.dialog_id);
            if (getMessagesController().checkCanOpenChat(bundle, this)) {
                presentFragment(new ChatActivity(bundle));
            }
        }
    }

    private void createChatAttachView() {
        if (getParentActivity() != null && this.chatAttachAlert == null) {
            AnonymousClass59 r0 = new ChatAttachAlert(getParentActivity(), this, false) {
                public void dismissInternal() {
                    if (ChatActivity.this.chatAttachAlert.isShowing()) {
                        AndroidUtilities.requestAdjustResize(ChatActivity.this.getParentActivity(), ChatActivity.this.classGuid);
                        if (ChatActivity.this.chatActivityEnterView.getVisibility() == 0) {
                            View unused = ChatActivity.this.fragmentView;
                        }
                    }
                    super.dismissInternal();
                    ChatActivity.this.onEditTextDialogClose(false);
                }
            };
            this.chatAttachAlert = r0;
            r0.setDelegate(new ChatAttachAlert.ChatAttachViewDelegate() {
                public /* synthetic */ void openAvatarsSearch() {
                    ChatAttachAlert.ChatAttachViewDelegate.CC.$default$openAvatarsSearch(this);
                }

                public void didPressedButton(int i, boolean z, boolean z2, int i2) {
                    String str;
                    int i3 = i;
                    if (ChatActivity.this.getParentActivity() != null && ChatActivity.this.chatAttachAlert != null) {
                        ChatActivity chatActivity = ChatActivity.this;
                        MessageObject unused = chatActivity.editingMessageObject = chatActivity.chatAttachAlert.getEditingMessageObject();
                        if (i3 == 8 || i3 == 7 || (i3 == 4 && !ChatActivity.this.chatAttachAlert.getPhotoLayout().getSelectedPhotos().isEmpty())) {
                            if (i3 != 8) {
                                ChatActivity.this.chatAttachAlert.dismiss();
                            }
                            HashMap<Object, Object> selectedPhotos = ChatActivity.this.chatAttachAlert.getPhotoLayout().getSelectedPhotos();
                            ArrayList<Object> selectedPhotosOrder = ChatActivity.this.chatAttachAlert.getPhotoLayout().getSelectedPhotosOrder();
                            if (!selectedPhotos.isEmpty()) {
                                ArrayList arrayList = new ArrayList();
                                for (int i4 = 0; i4 < selectedPhotosOrder.size(); i4++) {
                                    MediaController.PhotoEntry photoEntry = (MediaController.PhotoEntry) selectedPhotos.get(selectedPhotosOrder.get(i4));
                                    SendMessagesHelper.SendingMediaInfo sendingMediaInfo = new SendMessagesHelper.SendingMediaInfo();
                                    boolean z3 = photoEntry.isVideo;
                                    if (z3 || (str = photoEntry.imagePath) == null) {
                                        String str2 = photoEntry.path;
                                        if (str2 != null) {
                                            sendingMediaInfo.path = str2;
                                        }
                                    } else {
                                        sendingMediaInfo.path = str;
                                    }
                                    sendingMediaInfo.thumbPath = photoEntry.thumbPath;
                                    sendingMediaInfo.isVideo = z3;
                                    CharSequence charSequence = photoEntry.caption;
                                    sendingMediaInfo.caption = charSequence != null ? charSequence.toString() : null;
                                    sendingMediaInfo.entities = photoEntry.entities;
                                    sendingMediaInfo.masks = photoEntry.stickers;
                                    sendingMediaInfo.ttl = photoEntry.ttl;
                                    sendingMediaInfo.videoEditedInfo = photoEntry.editedInfo;
                                    sendingMediaInfo.canDeleteAfter = photoEntry.canDeleteAfter;
                                    arrayList.add(sendingMediaInfo);
                                    photoEntry.reset();
                                }
                                ChatActivity.this.fillEditingMediaWithCaption(((SendMessagesHelper.SendingMediaInfo) arrayList.get(0)).caption, ((SendMessagesHelper.SendingMediaInfo) arrayList.get(0)).entities);
                                SendMessagesHelper.prepareSendingMedia(ChatActivity.this.getAccountInstance(), arrayList, ChatActivity.this.dialog_id, ChatActivity.this.replyingMessageObject, ChatActivity.this.getThreadMessage(), (InputContentInfoCompat) null, i3 == 4, z, ChatActivity.this.editingMessageObject, z2, i2);
                                ChatActivity.this.afterMessageSend();
                            }
                            if (i2 != 0) {
                                if (ChatActivity.this.scheduledMessagesCount == -1) {
                                    int unused2 = ChatActivity.this.scheduledMessagesCount = 0;
                                }
                                ChatActivity chatActivity2 = ChatActivity.this;
                                int unused3 = chatActivity2.scheduledMessagesCount = chatActivity2.scheduledMessagesCount + selectedPhotos.size();
                                ChatActivity.this.updateScheduledInterface(true);
                                return;
                            }
                            return;
                        }
                        if (ChatActivity.this.chatAttachAlert != null) {
                            ChatActivity.this.chatAttachAlert.dismissWithButtonClick(i3);
                        }
                        ChatActivity.this.processSelectedAttach(i3);
                    }
                }

                public void didSelectBot(TLRPC$User tLRPC$User) {
                    if (ChatActivity.this.chatActivityEnterView != null && !TextUtils.isEmpty(tLRPC$User.username)) {
                        ChatActivityEnterView chatActivityEnterView = ChatActivity.this.chatActivityEnterView;
                        chatActivityEnterView.setFieldText("@" + tLRPC$User.username + " ");
                        ChatActivity.this.chatActivityEnterView.openKeyboard();
                    }
                }

                public void onCameraOpened() {
                    ChatActivity.this.chatActivityEnterView.closeKeyboard();
                }

                public boolean needEnterComment() {
                    return ChatActivity.this.needEnterText();
                }

                public void doOnIdle(Runnable runnable) {
                    ChatActivity.this.lambda$null$142(runnable);
                }
            });
        }
    }

    public boolean needEnterText() {
        boolean isKeyboardVisible = this.chatActivityEnterView.isKeyboardVisible();
        if (isKeyboardVisible) {
            this.chatActivityEnterView.showEmojiView();
            this.openKeyboardOnAttachMenuClose = true;
        }
        AndroidUtilities.setAdjustResizeToNothing(getParentActivity(), this.classGuid);
        this.fragmentView.requestLayout();
        return isKeyboardVisible;
    }

    public void onEditTextDialogClose(boolean z) {
        if (this.openKeyboardOnAttachMenuClose) {
            AndroidUtilities.runOnUIThread(new Runnable() {
                public final void run() {
                    ChatActivity.this.lambda$onEditTextDialogClose$58$ChatActivity();
                }
            }, 50);
            this.openKeyboardOnAttachMenuClose = false;
        }
        if (z) {
            AndroidUtilities.requestAdjustResize(getParentActivity(), this.classGuid);
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$onEditTextDialogClose$58 */
    public /* synthetic */ void lambda$onEditTextDialogClose$58$ChatActivity() {
        this.chatActivityEnterView.openKeyboard();
    }

    /* renamed from: doOnIdle */
    public void lambda$null$142(Runnable runnable) {
        NotificationCenter.getInstance(this.currentAccount).doOnIdle(runnable);
    }

    public void performHistoryClear(boolean z) {
        this.clearingHistory = true;
        this.undoView.showWithAction(this.dialog_id, 0, new Runnable(z) {
            public final /* synthetic */ boolean f$1;

            {
                this.f$1 = r2;
            }

            public final void run() {
                ChatActivity.this.lambda$performHistoryClear$59$ChatActivity(this.f$1);
            }
        }, new Runnable() {
            public final void run() {
                ChatActivity.this.lambda$performHistoryClear$60$ChatActivity();
            }
        });
        this.chatAdapter.notifyDataSetChanged();
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$performHistoryClear$59 */
    public /* synthetic */ void lambda$performHistoryClear$59$ChatActivity(boolean z) {
        if (!this.pinnedMessageIds.isEmpty()) {
            SharedPreferences.Editor edit = MessagesController.getNotificationsSettings(this.currentAccount).edit();
            edit.putInt("pin_" + this.dialog_id, this.pinnedMessageIds.get(0).intValue()).commit();
            this.pinnedMessageIds.clear();
            this.pinnedMessageObjects.clear();
            this.currentPinnedMessageId = 0;
            this.loadedPinnedMessagesCount = 0;
            this.totalPinnedMessagesCount = 0;
            updatePinnedMessageView(true);
        }
        getMessagesController().deleteDialog(this.dialog_id, 1, z);
        this.clearingHistory = false;
        clearHistory(false);
        this.chatAdapter.notifyDataSetChanged();
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$performHistoryClear$60 */
    public /* synthetic */ void lambda$performHistoryClear$60$ChatActivity() {
        this.clearingHistory = false;
        this.chatAdapter.notifyDataSetChanged();
    }

    public long getDialogId() {
        return this.dialog_id;
    }

    public UndoView getUndoView() {
        return this.undoView;
    }

    public long getMergeDialogId() {
        return this.mergeDialogId;
    }

    public boolean hasReportSpam() {
        FrameLayout frameLayout = this.topChatPanelView;
        return (frameLayout == null || frameLayout.getTag() != null || this.reportSpamButton.getVisibility() == 8) ? false : true;
    }

    public void setChatInvite(TLRPC$ChatInvite tLRPC$ChatInvite) {
        this.chatInvite = tLRPC$ChatInvite;
    }

    public void setBotUser(String str) {
        if (this.inlineReturn != 0) {
            getMessagesController().sendBotStart(this.currentUser, str);
            return;
        }
        this.botUser = str;
        updateBottomOverlay();
    }

    /* access modifiers changed from: private */
    public void afterMessageSend() {
        hideFieldPanel(false);
        if (this.chatMode == 0) {
            getMediaDataController().cleanDraft(this.dialog_id, this.threadMessageId, true);
        }
    }

    private void toggleMesagesSearchListView() {
        RecyclerListView recyclerListView = this.messagesSearchListView;
        if (recyclerListView != null) {
            showMessagesSearchListView(recyclerListView.getTag() == null);
        }
    }

    /* access modifiers changed from: private */
    public void showMessagesSearchListView(final boolean z) {
        RecyclerListView recyclerListView = this.messagesSearchListView;
        if (recyclerListView == null) {
            return;
        }
        if (z && recyclerListView.getTag() != null) {
            return;
        }
        if (z || this.messagesSearchListView.getTag() != null) {
            AnimatorSet animatorSet = this.messagesSearchListViewAnimation;
            int i = null;
            if (animatorSet != null) {
                animatorSet.cancel();
                this.messagesSearchListViewAnimation = null;
            }
            if (z) {
                this.messagesSearchListView.setVisibility(0);
            }
            RecyclerListView recyclerListView2 = this.messagesSearchListView;
            if (z) {
                i = 1;
            }
            recyclerListView2.setTag(i);
            AnimatorSet animatorSet2 = new AnimatorSet();
            this.messagesSearchListViewAnimation = animatorSet2;
            Animator[] animatorArr = new Animator[1];
            RecyclerListView recyclerListView3 = this.messagesSearchListView;
            Property property = View.ALPHA;
            float[] fArr = new float[1];
            fArr[0] = z ? 1.0f : 0.0f;
            animatorArr[0] = ObjectAnimator.ofFloat(recyclerListView3, property, fArr);
            animatorSet2.playTogether(animatorArr);
            this.messagesSearchListViewAnimation.setInterpolator(CubicBezierInterpolator.EASE_IN);
            this.messagesSearchListViewAnimation.setDuration(180);
            this.messagesSearchListViewAnimation.addListener(new AnimatorListenerAdapter() {
                public void onAnimationEnd(Animator animator) {
                    if (animator.equals(ChatActivity.this.messagesSearchListViewAnimation)) {
                        AnimatorSet unused = ChatActivity.this.messagesSearchListViewAnimation = null;
                        if (!z) {
                            ChatActivity.this.messagesSearchListView.setVisibility(8);
                        }
                    }
                }

                public void onAnimationCancel(Animator animator) {
                    if (animator.equals(ChatActivity.this.messagesSearchListViewAnimation)) {
                        AnimatorSet unused = ChatActivity.this.messagesSearchListViewAnimation = null;
                    }
                }
            });
            this.messagesSearchListViewAnimation.start();
        }
    }

    public boolean playFirstUnreadVoiceMessage() {
        ChatActivityEnterView chatActivityEnterView2 = this.chatActivityEnterView;
        if (chatActivityEnterView2 != null && chatActivityEnterView2.isRecordingAudioVideo()) {
            return true;
        }
        for (int size = this.messages.size() - 1; size >= 0; size--) {
            MessageObject messageObject = this.messages.get(size);
            if ((messageObject.isVoice() || messageObject.isRoundVideo()) && messageObject.isContentUnread() && !messageObject.isOut()) {
                MediaController.getInstance().setVoiceMessagesPlaylist(MediaController.getInstance().playMessage(messageObject) ? createVoiceMessagesPlaylist(messageObject, true) : null, true);
                return true;
            }
        }
        if (Build.VERSION.SDK_INT < 23 || getParentActivity() == null || getParentActivity().checkSelfPermission("android.permission.RECORD_AUDIO") == 0) {
            return false;
        }
        getParentActivity().requestPermissions(new String[]{"android.permission.RECORD_AUDIO"}, 3);
        return true;
    }

    /* access modifiers changed from: private */
    public void openScheduledMessages() {
        ActionBarLayout actionBarLayout = this.parentLayout;
        if (actionBarLayout != null && actionBarLayout.getLastFragment() == this) {
            Bundle bundle = new Bundle();
            TLRPC$EncryptedChat tLRPC$EncryptedChat = this.currentEncryptedChat;
            if (tLRPC$EncryptedChat != null) {
                bundle.putInt("enc_id", tLRPC$EncryptedChat.id);
            } else {
                TLRPC$Chat tLRPC$Chat = this.currentChat;
                if (tLRPC$Chat != null) {
                    bundle.putInt("chat_id", tLRPC$Chat.id);
                } else {
                    bundle.putInt("user_id", this.currentUser.id);
                }
            }
            bundle.putInt("chatMode", 1);
            ChatActivity chatActivity = new ChatActivity(bundle);
            chatActivity.chatActivityDelegate = new ChatActivityDelegate() {
                public /* synthetic */ void onReport() {
                    ChatActivityDelegate.CC.$default$onReport(this);
                }

                public /* synthetic */ void onUnpin(boolean z, boolean z2) {
                    ChatActivityDelegate.CC.$default$onUnpin(this, z, z2);
                }

                public void openReplyMessage(int i) {
                    ChatActivity.this.scrollToMessageId(i, 0, true, 0, true, 0);
                }

                public void openSearch(String str) {
                    ChatActivity.this.openSearchWithText(str);
                }
            };
            presentFragment(chatActivity, false);
        }
    }

    private void initStickers() {
        if (this.chatActivityEnterView != null && getParentActivity() != null && this.stickersAdapter == null) {
            TLRPC$EncryptedChat tLRPC$EncryptedChat = this.currentEncryptedChat;
            if (tLRPC$EncryptedChat == null || AndroidUtilities.getPeerLayerVersion(tLRPC$EncryptedChat.layer) >= 23) {
                this.stickersListView.setPadding(AndroidUtilities.dp(18.0f), 0, AndroidUtilities.dp(18.0f), 0);
                RecyclerListView recyclerListView = this.stickersListView;
                StickersAdapter stickersAdapter2 = new StickersAdapter(getParentActivity(), new StickersAdapter.StickersAdapterDelegate() {
                    public final void needChangePanelVisibility(boolean z) {
                        ChatActivity.this.lambda$initStickers$61$ChatActivity(z);
                    }
                });
                this.stickersAdapter = stickersAdapter2;
                recyclerListView.setAdapter(stickersAdapter2);
                RecyclerListView recyclerListView2 = this.stickersListView;
                $$Lambda$ChatActivity$hlaLzdXlV2S8NeDVChuXJG7Tq5o r1 = new RecyclerListView.OnItemClickListener() {
                    public final void onItemClick(View view, int i) {
                        ChatActivity.this.lambda$initStickers$63$ChatActivity(view, i);
                    }
                };
                this.stickersOnItemClickListener = r1;
                recyclerListView2.setOnItemClickListener((RecyclerListView.OnItemClickListener) r1);
            }
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$initStickers$61 */
    public /* synthetic */ void lambda$initStickers$61$ChatActivity(final boolean z) {
        if (z) {
            int dp = this.stickersAdapter.isShowingKeywords() ? AndroidUtilities.dp(24.0f) : 0;
            if (dp != this.stickersListView.getPaddingTop() || this.stickersPanel.getTag() == null) {
                this.stickersListView.setPadding(AndroidUtilities.dp(18.0f), dp, AndroidUtilities.dp(18.0f), 0);
                this.stickersListView.scrollToPosition(0);
                ((FrameLayout.LayoutParams) this.stickersPanelArrow.getLayoutParams()).gravity = (this.chatActivityEnterView.isRtlText() ? 5 : 3) | 80;
                this.stickersPanelArrow.requestLayout();
            }
        }
        if (z && this.stickersPanel.getTag() != null) {
            return;
        }
        if (z || this.stickersPanel.getTag() != null) {
            if (z) {
                this.stickersPanel.setVisibility(this.allowStickersPanel ? 0 : 4);
                this.stickersPanel.setTag(1);
            } else {
                this.stickersPanel.setTag((Object) null);
            }
            AnimatorSet animatorSet = this.runningAnimation;
            if (animatorSet != null) {
                animatorSet.cancel();
                this.runningAnimation = null;
            }
            if (this.stickersPanel.getVisibility() != 4) {
                AnimatorSet animatorSet2 = new AnimatorSet();
                this.runningAnimation = animatorSet2;
                Animator[] animatorArr = new Animator[1];
                FrameLayout frameLayout = this.stickersPanel;
                Property property = View.ALPHA;
                float[] fArr = new float[2];
                float f = 0.0f;
                fArr[0] = z ? 0.0f : 1.0f;
                if (z) {
                    f = 1.0f;
                }
                fArr[1] = f;
                animatorArr[0] = ObjectAnimator.ofFloat(frameLayout, property, fArr);
                animatorSet2.playTogether(animatorArr);
                this.runningAnimation.setDuration(150);
                this.runningAnimation.addListener(new AnimatorListenerAdapter() {
                    public void onAnimationEnd(Animator animator) {
                        if (ChatActivity.this.runningAnimation != null && ChatActivity.this.runningAnimation.equals(animator)) {
                            if (!z) {
                                ChatActivity.this.stickersAdapter.clearStickers();
                                ChatActivity.this.stickersPanel.setVisibility(8);
                                if (ContentPreviewViewer.getInstance().isVisible()) {
                                    ContentPreviewViewer.getInstance().close();
                                }
                                ContentPreviewViewer.getInstance().reset();
                            }
                            AnimatorSet unused = ChatActivity.this.runningAnimation = null;
                        }
                    }

                    public void onAnimationCancel(Animator animator) {
                        if (ChatActivity.this.runningAnimation != null && ChatActivity.this.runningAnimation.equals(animator)) {
                            AnimatorSet unused = ChatActivity.this.runningAnimation = null;
                        }
                    }
                });
                this.runningAnimation.start();
            } else if (!z) {
                this.stickersPanel.setVisibility(8);
            }
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$initStickers$63 */
    public /* synthetic */ void lambda$initStickers$63$ChatActivity(View view, int i) {
        Object item = this.stickersAdapter.getItem(i);
        Object itemParent = this.stickersAdapter.getItemParent(i);
        if (item instanceof TLRPC$TL_document) {
            if (this.chatMode != 0 || !checkSlowMode(view)) {
                TLRPC$TL_document tLRPC$TL_document = (TLRPC$TL_document) item;
                if (this.chatMode == 1) {
                    AlertsCreator.createScheduleDatePickerDialog(getParentActivity(), this.dialog_id, new AlertsCreator.ScheduleDatePickerDelegate(tLRPC$TL_document, this.stickersAdapter.getQuery(), itemParent) {
                        public final /* synthetic */ TLRPC$TL_document f$1;
                        public final /* synthetic */ String f$2;
                        public final /* synthetic */ Object f$3;

                        {
                            this.f$1 = r2;
                            this.f$2 = r3;
                            this.f$3 = r4;
                        }

                        public final void didSelectDate(boolean z, int i) {
                            ChatActivity.this.lambda$null$62$ChatActivity(this.f$1, this.f$2, this.f$3, z, i);
                        }
                    });
                } else {
                    getSendMessagesHelper().sendSticker(tLRPC$TL_document, this.stickersAdapter.getQuery(), this.dialog_id, this.replyingMessageObject, getThreadMessage(), itemParent, true, 0);
                }
                hideFieldPanel(false);
                this.chatActivityEnterView.addStickerToRecent(tLRPC$TL_document);
                this.chatActivityEnterView.setFieldText("");
            }
        } else if (item instanceof String) {
            SpannableString spannableString = new SpannableString((String) item);
            Emoji.replaceEmoji(spannableString, this.chatActivityEnterView.getEditField().getPaint().getFontMetricsInt(), AndroidUtilities.dp(20.0f), false);
            this.chatActivityEnterView.setFieldText(spannableString, false);
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$62 */
    public /* synthetic */ void lambda$null$62$ChatActivity(TLRPC$TL_document tLRPC$TL_document, String str, Object obj, boolean z, int i) {
        SendMessagesHelper.getInstance(this.currentAccount).sendSticker(tLRPC$TL_document, str, this.dialog_id, this.replyingMessageObject, getThreadMessage(), obj, z, i);
    }

    public void shareMyContact(int i, MessageObject messageObject) {
        AlertDialog.Builder builder = new AlertDialog.Builder((Context) getParentActivity());
        builder.setTitle(LocaleController.getString("ShareYouPhoneNumberTitle", NUM));
        TLRPC$User tLRPC$User = this.currentUser;
        if (tLRPC$User == null) {
            builder.setMessage(LocaleController.getString("AreYouSureShareMyContactInfo", NUM));
        } else if (tLRPC$User.bot) {
            builder.setMessage(LocaleController.getString("AreYouSureShareMyContactInfoBot", NUM));
        } else {
            PhoneFormat instance = PhoneFormat.getInstance();
            TLRPC$User tLRPC$User2 = this.currentUser;
            builder.setMessage(AndroidUtilities.replaceTags(LocaleController.formatString("AreYouSureShareMyContactInfoUser", NUM, instance.format("+" + getUserConfig().getCurrentUser().phone), ContactsController.formatName(tLRPC$User2.first_name, tLRPC$User2.last_name))));
        }
        builder.setPositiveButton(LocaleController.getString("ShareContact", NUM), new DialogInterface.OnClickListener(i, messageObject) {
            public final /* synthetic */ int f$1;
            public final /* synthetic */ MessageObject f$2;

            {
                this.f$1 = r2;
                this.f$2 = r3;
            }

            public final void onClick(DialogInterface dialogInterface, int i) {
                ChatActivity.this.lambda$shareMyContact$65$ChatActivity(this.f$1, this.f$2, dialogInterface, i);
            }
        });
        builder.setNegativeButton(LocaleController.getString("Cancel", NUM), (DialogInterface.OnClickListener) null);
        showDialog(builder.create());
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$shareMyContact$65 */
    public /* synthetic */ void lambda$shareMyContact$65$ChatActivity(int i, MessageObject messageObject, DialogInterface dialogInterface, int i2) {
        if (i == 1) {
            TLRPC$TL_contacts_acceptContact tLRPC$TL_contacts_acceptContact = new TLRPC$TL_contacts_acceptContact();
            tLRPC$TL_contacts_acceptContact.id = getMessagesController().getInputUser(this.currentUser);
            getConnectionsManager().sendRequest(tLRPC$TL_contacts_acceptContact, new RequestDelegate() {
                public final void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                    ChatActivity.this.lambda$null$64$ChatActivity(tLObject, tLRPC$TL_error);
                }
            });
            return;
        }
        SendMessagesHelper.getInstance(this.currentAccount).sendMessage(getUserConfig().getCurrentUser(), this.dialog_id, messageObject, getThreadMessage(), (TLRPC$ReplyMarkup) null, (HashMap<String, String>) null, true, 0);
        if (this.chatMode == 0) {
            moveScrollToLastMessage();
        }
        hideFieldPanel(false);
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$64 */
    public /* synthetic */ void lambda$null$64$ChatActivity(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
        if (tLRPC$TL_error == null) {
            getMessagesController().processUpdates((TLRPC$Updates) tLObject, false);
        }
    }

    /* access modifiers changed from: private */
    public void showVoiceHint(boolean z, boolean z2) {
        ChatActivityEnterView chatActivityEnterView2;
        int i;
        String str;
        if (getParentActivity() != null && this.fragmentView != null) {
            if ((!z || this.voiceHintTextView != null) && this.chatMode == 0 && (chatActivityEnterView2 = this.chatActivityEnterView) != null && chatActivityEnterView2.getAudioVideoButtonContainer() != null && this.chatActivityEnterView.getAudioVideoButtonContainer().getVisibility() == 0) {
                if (this.voiceHintTextView == null) {
                    SizeNotifierFrameLayout sizeNotifierFrameLayout = (SizeNotifierFrameLayout) this.fragmentView;
                    int indexOfChild = sizeNotifierFrameLayout.indexOfChild(this.chatActivityEnterView);
                    if (indexOfChild != -1) {
                        HintView hintView = new HintView(getParentActivity(), 9);
                        this.voiceHintTextView = hintView;
                        sizeNotifierFrameLayout.addView(hintView, indexOfChild + 1, LayoutHelper.createFrame(-2, -2.0f, 51, 10.0f, 0.0f, 10.0f, 0.0f));
                    } else {
                        return;
                    }
                }
                if (z) {
                    this.voiceHintTextView.hide();
                    return;
                }
                if (this.chatActivityEnterView.hasRecordVideo()) {
                    HintView hintView2 = this.voiceHintTextView;
                    if (z2) {
                        i = NUM;
                        str = "HoldToVideo";
                    } else {
                        i = NUM;
                        str = "HoldToAudio";
                    }
                    hintView2.setText(LocaleController.getString(str, i));
                } else {
                    this.voiceHintTextView.setText(LocaleController.getString("HoldToAudioOnly", NUM));
                }
                this.voiceHintTextView.showForView(this.chatActivityEnterView.getAudioVideoButtonContainer(), true);
            }
        }
    }

    private boolean checkSlowMode(View view) {
        CharSequence slowModeTimer = this.chatActivityEnterView.getSlowModeTimer();
        if (slowModeTimer == null) {
            return false;
        }
        showSlowModeHint(view, true, slowModeTimer);
        return true;
    }

    /* access modifiers changed from: private */
    public void hideHints(boolean z) {
        if (!z) {
            HintView hintView = this.slowModeHint;
            if (hintView != null) {
                hintView.hide();
            }
            HintView hintView2 = this.searchAsListHint;
            if (hintView2 != null) {
                hintView2.hide();
            }
            HintView hintView3 = this.scheduledOrNoSoundHint;
            if (hintView3 != null) {
                hintView3.hide();
            }
        }
        HintView hintView4 = this.noSoundHintView;
        if (hintView4 != null) {
            hintView4.hide();
        }
        HintView hintView5 = this.forwardHintView;
        if (hintView5 != null) {
            hintView5.hide();
        }
        HintView hintView6 = this.pollHintView;
        if (hintView6 != null) {
            hintView6.hide();
        }
        HintView hintView7 = this.timerHintView;
        if (hintView7 != null) {
            hintView7.hide();
        }
        ChecksHintView checksHintView2 = this.checksHintView;
        if (checksHintView2 != null) {
            checksHintView2.hide();
        }
    }

    /* access modifiers changed from: private */
    public void showSlowModeHint(View view, boolean z, CharSequence charSequence) {
        HintView hintView;
        if (getParentActivity() != null && this.fragmentView != null) {
            if (z || ((hintView = this.slowModeHint) != null && hintView.getVisibility() == 0)) {
                this.slowModeHint.setText(AndroidUtilities.replaceTags(LocaleController.formatString("SlowModeHint", NUM, charSequence)));
                if (z) {
                    this.slowModeHint.showForView(view, true);
                }
            }
        }
    }

    public void showTimerHint() {
        String str;
        if (getParentActivity() != null && this.fragmentView != null && this.chatInfo != null) {
            if (this.timerHintView == null) {
                HintView hintView = new HintView(getParentActivity(), 7, true);
                this.timerHintView = hintView;
                hintView.setAlpha(0.0f);
                this.timerHintView.setVisibility(4);
                this.timerHintView.setShowingDuration(4000);
                this.contentView.addView(this.timerHintView, LayoutHelper.createFrame(-2, -2.0f, 51, 19.0f, 0.0f, 19.0f, 0.0f));
            }
            int i = this.chatInfo.ttl_period;
            if (i > 86400) {
                str = LocaleController.formatPluralString("Days", i / 86400);
            } else if (i >= 3600) {
                str = LocaleController.formatPluralString("Hours", i / 3600);
            } else if (i >= 60) {
                str = LocaleController.formatPluralString("Minutes", i / 60);
            } else {
                str = LocaleController.formatPluralString("Seconds", i);
            }
            this.timerHintView.setText(LocaleController.formatString("AutoDeleteSetInfo", NUM, str));
            this.timerHintView.showForView(this.avatarContainer.getTimeItem(), true);
        }
    }

    private void showSearchAsListHint() {
        if (getParentActivity() != null && this.fragmentView != null && this.searchCountText != null) {
            if (this.searchAsListHint == null) {
                HintView hintView = new HintView(getParentActivity(), 3);
                this.searchAsListHint = hintView;
                hintView.setAlpha(0.0f);
                this.searchAsListHint.setVisibility(4);
                this.searchAsListHint.setText(LocaleController.getString("TapToViewAsList", NUM));
                this.contentView.addView(this.searchAsListHint, LayoutHelper.createFrame(-2, -2.0f, 51, 19.0f, 0.0f, 19.0f, 0.0f));
            }
            this.searchAsListHint.showForView(this.searchCountText, true);
        }
    }

    /* JADX WARNING: Code restructure failed: missing block: B:2:0x0008, code lost:
        r0 = r6.chatInfo;
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private void showScheduledOrNoSoundHint() {
        /*
            r6 = this;
            org.telegram.tgnet.TLRPC$User r0 = r6.currentUser
            boolean r0 = org.telegram.messenger.UserObject.isUserSelf(r0)
            if (r0 != 0) goto L_0x0017
            org.telegram.tgnet.TLRPC$ChatFull r0 = r6.chatInfo
            if (r0 == 0) goto L_0x0015
            int r0 = r0.slowmode_next_send_date
            if (r0 <= 0) goto L_0x0015
            int r0 = r6.chatMode
            if (r0 != 0) goto L_0x0015
            goto L_0x0017
        L_0x0015:
            r0 = 0
            goto L_0x0018
        L_0x0017:
            r0 = 1
        L_0x0018:
            int r1 = org.telegram.messenger.SharedConfig.scheduledOrNoSoundHintShows
            r2 = 3
            if (r1 >= r2) goto L_0x0039
            long r1 = java.lang.System.currentTimeMillis()
            r3 = 4
            long r1 = r1 % r3
            r3 = 0
            int r5 = (r1 > r3 ? 1 : (r1 == r3 ? 0 : -1))
            if (r5 != 0) goto L_0x0039
            if (r0 == 0) goto L_0x002d
            goto L_0x0039
        L_0x002d:
            java.lang.Runnable r0 = r6.showScheduledOrNoSoundRunnable
            org.telegram.messenger.AndroidUtilities.cancelRunOnUIThread(r0)
            java.lang.Runnable r0 = r6.showScheduledOrNoSoundRunnable
            r1 = 200(0xc8, double:9.9E-322)
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r0, r1)
        L_0x0039:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.showScheduledOrNoSoundHint():void");
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Code restructure failed: missing block: B:10:0x001a, code lost:
        r0 = (org.telegram.ui.Components.SizeNotifierFrameLayout) r11.fragmentView;
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public void showMediaBannedHint() {
        /*
            r11 = this;
            android.app.Activity r0 = r11.getParentActivity()
            if (r0 == 0) goto L_0x011b
            org.telegram.tgnet.TLRPC$Chat r0 = r11.currentChat
            if (r0 == 0) goto L_0x011b
            android.view.View r0 = r11.fragmentView
            if (r0 == 0) goto L_0x011b
            android.widget.TextView r0 = r11.mediaBanTooltip
            if (r0 == 0) goto L_0x001a
            int r0 = r0.getVisibility()
            if (r0 != 0) goto L_0x001a
            goto L_0x011b
        L_0x001a:
            android.view.View r0 = r11.fragmentView
            org.telegram.ui.Components.SizeNotifierFrameLayout r0 = (org.telegram.ui.Components.SizeNotifierFrameLayout) r0
            org.telegram.ui.Components.ChatActivityEnterView r1 = r11.chatActivityEnterView
            int r1 = r0.indexOfChild(r1)
            r2 = -1
            if (r1 != r2) goto L_0x0028
            return
        L_0x0028:
            android.widget.TextView r2 = r11.mediaBanTooltip
            r3 = 1
            if (r2 != 0) goto L_0x009a
            org.telegram.ui.Components.CorrectlyMeasuringTextView r2 = new org.telegram.ui.Components.CorrectlyMeasuringTextView
            android.app.Activity r4 = r11.getParentActivity()
            r2.<init>(r4)
            r11.mediaBanTooltip = r2
            r4 = 1077936128(0x40400000, float:3.0)
            int r4 = org.telegram.messenger.AndroidUtilities.dp(r4)
            java.lang.String r5 = "chat_gifSaveHintBackground"
            int r5 = org.telegram.ui.ActionBar.Theme.getColor(r5)
            android.graphics.drawable.Drawable r4 = org.telegram.ui.ActionBar.Theme.createRoundRectDrawable(r4, r5)
            r2.setBackgroundDrawable(r4)
            android.widget.TextView r2 = r11.mediaBanTooltip
            java.lang.String r4 = "chat_gifSaveHintText"
            int r4 = org.telegram.ui.ActionBar.Theme.getColor(r4)
            r2.setTextColor(r4)
            android.widget.TextView r2 = r11.mediaBanTooltip
            r4 = 1090519040(0x41000000, float:8.0)
            int r5 = org.telegram.messenger.AndroidUtilities.dp(r4)
            r6 = 1088421888(0x40e00000, float:7.0)
            int r7 = org.telegram.messenger.AndroidUtilities.dp(r6)
            int r4 = org.telegram.messenger.AndroidUtilities.dp(r4)
            int r6 = org.telegram.messenger.AndroidUtilities.dp(r6)
            r2.setPadding(r5, r7, r4, r6)
            android.widget.TextView r2 = r11.mediaBanTooltip
            r4 = 16
            r2.setGravity(r4)
            android.widget.TextView r2 = r11.mediaBanTooltip
            r4 = 1096810496(0x41600000, float:14.0)
            r2.setTextSize(r3, r4)
            android.widget.TextView r2 = r11.mediaBanTooltip
            r4 = 8
            r2.setVisibility(r4)
            android.widget.TextView r2 = r11.mediaBanTooltip
            int r1 = r1 + r3
            r4 = -2
            r5 = -1073741824(0xffffffffCLASSNAME, float:-2.0)
            r6 = 85
            r7 = 1106247680(0x41var_, float:30.0)
            r8 = 0
            r9 = 1084227584(0x40a00000, float:5.0)
            r10 = 1077936128(0x40400000, float:3.0)
            android.widget.FrameLayout$LayoutParams r4 = org.telegram.ui.Components.LayoutHelper.createFrame(r4, r5, r6, r7, r8, r9, r10)
            r0.addView(r2, r1, r4)
        L_0x009a:
            org.telegram.tgnet.TLRPC$Chat r0 = r11.currentChat
            r1 = 7
            boolean r0 = org.telegram.messenger.ChatObject.isActionBannedByDefault(r0, r1)
            r1 = 0
            if (r0 == 0) goto L_0x00b3
            android.widget.TextView r0 = r11.mediaBanTooltip
            r2 = 2131625692(0x7f0e06dc, float:1.88786E38)
            java.lang.String r4 = "GlobalAttachMediaRestricted"
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r4, r2)
            r0.setText(r2)
            goto L_0x00ec
        L_0x00b3:
            org.telegram.tgnet.TLRPC$Chat r0 = r11.currentChat
            org.telegram.tgnet.TLRPC$TL_chatBannedRights r0 = r0.banned_rights
            if (r0 != 0) goto L_0x00ba
            return
        L_0x00ba:
            boolean r0 = org.telegram.messenger.AndroidUtilities.isBannedForever(r0)
            if (r0 == 0) goto L_0x00cf
            android.widget.TextView r0 = r11.mediaBanTooltip
            r2 = 2131624390(0x7f0e01c6, float:1.8875958E38)
            java.lang.String r4 = "AttachMediaRestrictedForever"
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r4, r2)
            r0.setText(r2)
            goto L_0x00ec
        L_0x00cf:
            android.widget.TextView r0 = r11.mediaBanTooltip
            r2 = 2131624389(0x7f0e01c5, float:1.8875956E38)
            java.lang.Object[] r4 = new java.lang.Object[r3]
            org.telegram.tgnet.TLRPC$Chat r5 = r11.currentChat
            org.telegram.tgnet.TLRPC$TL_chatBannedRights r5 = r5.banned_rights
            int r5 = r5.until_date
            long r5 = (long) r5
            java.lang.String r5 = org.telegram.messenger.LocaleController.formatDateForBan(r5)
            r4[r1] = r5
            java.lang.String r5 = "AttachMediaRestricted"
            java.lang.String r2 = org.telegram.messenger.LocaleController.formatString(r5, r2, r4)
            r0.setText(r2)
        L_0x00ec:
            android.widget.TextView r0 = r11.mediaBanTooltip
            r0.setVisibility(r1)
            android.animation.AnimatorSet r0 = new android.animation.AnimatorSet
            r0.<init>()
            android.animation.Animator[] r2 = new android.animation.Animator[r3]
            android.widget.TextView r3 = r11.mediaBanTooltip
            android.util.Property r4 = android.view.View.ALPHA
            r5 = 2
            float[] r5 = new float[r5]
            r5 = {0, NUM} // fill-array
            android.animation.ObjectAnimator r3 = android.animation.ObjectAnimator.ofFloat(r3, r4, r5)
            r2[r1] = r3
            r0.playTogether(r2)
            org.telegram.ui.ChatActivity$64 r1 = new org.telegram.ui.ChatActivity$64
            r1.<init>()
            r0.addListener(r1)
            r1 = 300(0x12c, double:1.48E-321)
            r0.setDuration(r1)
            r0.start()
        L_0x011b:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.showMediaBannedHint():void");
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Code restructure failed: missing block: B:24:0x007a, code lost:
        r3 = (org.telegram.ui.Cells.ChatMessageCell) r3;
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public void showNoSoundHint() {
        /*
            r12 = this;
            boolean r0 = r12.scrollingChatListView
            if (r0 != 0) goto L_0x00ab
            boolean r0 = org.telegram.messenger.SharedConfig.noSoundHintShowed
            if (r0 != 0) goto L_0x00ab
            org.telegram.ui.Components.RecyclerListView r0 = r12.chatListView
            if (r0 == 0) goto L_0x00ab
            android.app.Activity r0 = r12.getParentActivity()
            if (r0 == 0) goto L_0x00ab
            android.view.View r0 = r12.fragmentView
            if (r0 == 0) goto L_0x00ab
            org.telegram.ui.Components.HintView r0 = r12.noSoundHintView
            if (r0 == 0) goto L_0x0022
            java.lang.Object r0 = r0.getTag()
            if (r0 == 0) goto L_0x0022
            goto L_0x00ab
        L_0x0022:
            org.telegram.ui.Components.HintView r0 = r12.noSoundHintView
            r1 = 0
            r2 = 1
            if (r0 != 0) goto L_0x0067
            android.view.View r0 = r12.fragmentView
            org.telegram.ui.Components.SizeNotifierFrameLayout r0 = (org.telegram.ui.Components.SizeNotifierFrameLayout) r0
            org.telegram.ui.Components.ChatActivityEnterView r3 = r12.chatActivityEnterView
            int r3 = r0.indexOfChild(r3)
            r4 = -1
            if (r3 != r4) goto L_0x0036
            return
        L_0x0036:
            org.telegram.ui.Components.HintView r4 = new org.telegram.ui.Components.HintView
            android.app.Activity r5 = r12.getParentActivity()
            r4.<init>(r5, r1)
            r12.noSoundHintView = r4
            r5 = 10000(0x2710, double:4.9407E-320)
            r4.setShowingDuration(r5)
            org.telegram.ui.Components.HintView r4 = r12.noSoundHintView
            int r3 = r3 + r2
            r5 = -2
            r6 = -1073741824(0xffffffffCLASSNAME, float:-2.0)
            r7 = 51
            r8 = 1100480512(0x41980000, float:19.0)
            r9 = 0
            r10 = 1100480512(0x41980000, float:19.0)
            r11 = 0
            android.widget.FrameLayout$LayoutParams r5 = org.telegram.ui.Components.LayoutHelper.createFrame(r5, r6, r7, r8, r9, r10, r11)
            r0.addView(r4, r3, r5)
            org.telegram.ui.Components.HintView r0 = r12.noSoundHintView
            r3 = 0
            r0.setAlpha(r3)
            org.telegram.ui.Components.HintView r0 = r12.noSoundHintView
            r3 = 4
            r0.setVisibility(r3)
        L_0x0067:
            org.telegram.ui.Components.RecyclerListView r0 = r12.chatListView
            int r0 = r0.getChildCount()
        L_0x006d:
            if (r1 >= r0) goto L_0x00ab
            org.telegram.ui.Components.RecyclerListView r3 = r12.chatListView
            android.view.View r3 = r3.getChildAt(r1)
            boolean r4 = r3 instanceof org.telegram.ui.Cells.ChatMessageCell
            if (r4 != 0) goto L_0x007a
            goto L_0x00a8
        L_0x007a:
            org.telegram.ui.Cells.ChatMessageCell r3 = (org.telegram.ui.Cells.ChatMessageCell) r3
            org.telegram.messenger.MessageObject r4 = r3.getMessageObject()
            if (r4 == 0) goto L_0x00a8
            boolean r4 = r4.isVideo()
            if (r4 != 0) goto L_0x0089
            goto L_0x00a8
        L_0x0089:
            org.telegram.messenger.ImageReceiver r4 = r3.getPhotoImage()
            org.telegram.ui.Components.AnimatedFileDrawable r4 = r4.getAnimation()
            if (r4 == 0) goto L_0x00a8
            int r4 = r4.getCurrentProgressMs()
            r5 = 3000(0xbb8, float:4.204E-42)
            if (r4 >= r5) goto L_0x009c
            goto L_0x00a8
        L_0x009c:
            org.telegram.ui.Components.HintView r4 = r12.noSoundHintView
            boolean r3 = r4.showForMessageCell(r3, r2)
            if (r3 == 0) goto L_0x00a8
            org.telegram.messenger.SharedConfig.setNoSoundHintShowed(r2)
            goto L_0x00ab
        L_0x00a8:
            int r1 = r1 + 1
            goto L_0x006d
        L_0x00ab:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.showNoSoundHint():void");
    }

    private void checkChecksHint() {
        if (getMessagesController().pendingSuggestions.contains("NEWCOMER_TICKS")) {
            AndroidUtilities.runOnUIThread(new Runnable() {
                public final void run() {
                    ChatActivity.this.showChecksHint();
                }
            }, 1000);
        }
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Code restructure failed: missing block: B:22:0x006f, code lost:
        r3 = (org.telegram.ui.Cells.ChatMessageCell) r3;
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public void showChecksHint() {
        /*
            r11 = this;
            boolean r0 = r11.scrollingChatListView
            if (r0 != 0) goto L_0x009b
            org.telegram.ui.Components.RecyclerListView r0 = r11.chatListView
            if (r0 == 0) goto L_0x009b
            android.app.Activity r0 = r11.getParentActivity()
            if (r0 == 0) goto L_0x009b
            android.view.View r0 = r11.fragmentView
            if (r0 == 0) goto L_0x009b
            org.telegram.ui.Components.ChecksHintView r0 = r11.checksHintView
            if (r0 == 0) goto L_0x001e
            java.lang.Object r0 = r0.getTag()
            if (r0 == 0) goto L_0x001e
            goto L_0x009b
        L_0x001e:
            org.telegram.ui.Components.ChecksHintView r0 = r11.checksHintView
            r1 = 1
            if (r0 != 0) goto L_0x005b
            android.view.View r0 = r11.fragmentView
            org.telegram.ui.Components.SizeNotifierFrameLayout r0 = (org.telegram.ui.Components.SizeNotifierFrameLayout) r0
            org.telegram.ui.Components.ChatActivityEnterView r2 = r11.chatActivityEnterView
            int r2 = r0.indexOfChild(r2)
            r3 = -1
            if (r2 != r3) goto L_0x0031
            return
        L_0x0031:
            org.telegram.ui.Components.ChecksHintView r3 = new org.telegram.ui.Components.ChecksHintView
            android.app.Activity r4 = r11.getParentActivity()
            r3.<init>(r4)
            r11.checksHintView = r3
            int r2 = r2 + r1
            r4 = -2
            r5 = -1073741824(0xffffffffCLASSNAME, float:-2.0)
            r6 = 51
            r7 = 1092616192(0x41200000, float:10.0)
            r8 = 0
            r9 = 1092616192(0x41200000, float:10.0)
            r10 = 0
            android.widget.FrameLayout$LayoutParams r4 = org.telegram.ui.Components.LayoutHelper.createFrame(r4, r5, r6, r7, r8, r9, r10)
            r0.addView(r3, r2, r4)
            org.telegram.ui.Components.ChecksHintView r0 = r11.checksHintView
            r2 = 0
            r0.setAlpha(r2)
            org.telegram.ui.Components.ChecksHintView r0 = r11.checksHintView
            r2 = 4
            r0.setVisibility(r2)
        L_0x005b:
            org.telegram.ui.Components.RecyclerListView r0 = r11.chatListView
            int r0 = r0.getChildCount()
            r2 = 0
        L_0x0062:
            if (r2 >= r0) goto L_0x009b
            org.telegram.ui.Components.RecyclerListView r3 = r11.chatListView
            android.view.View r3 = r3.getChildAt(r2)
            boolean r4 = r3 instanceof org.telegram.ui.Cells.ChatMessageCell
            if (r4 != 0) goto L_0x006f
            goto L_0x0098
        L_0x006f:
            org.telegram.ui.Cells.ChatMessageCell r3 = (org.telegram.ui.Cells.ChatMessageCell) r3
            org.telegram.messenger.MessageObject r4 = r3.getMessageObject()
            if (r4 == 0) goto L_0x0098
            boolean r5 = r4.isOutOwner()
            if (r5 == 0) goto L_0x0098
            boolean r4 = r4.isSent()
            if (r4 != 0) goto L_0x0084
            goto L_0x0098
        L_0x0084:
            org.telegram.ui.Components.ChecksHintView r4 = r11.checksHintView
            boolean r3 = r4.showForMessageCell(r3, r1)
            if (r3 == 0) goto L_0x0098
            org.telegram.messenger.MessagesController r0 = r11.getMessagesController()
            r1 = 0
            java.lang.String r3 = "NEWCOMER_TICKS"
            r0.removeSuggestion(r1, r3)
            goto L_0x009b
        L_0x0098:
            int r2 = r2 + 1
            goto L_0x0062
        L_0x009b:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.showChecksHint():void");
    }

    /* access modifiers changed from: private */
    public void showForwardHint(ChatMessageCell chatMessageCell) {
        View view;
        if (!this.scrollingChatListView && this.chatListView != null && getParentActivity() != null && (view = this.fragmentView) != null) {
            if (this.forwardHintView == null) {
                SizeNotifierFrameLayout sizeNotifierFrameLayout = (SizeNotifierFrameLayout) view;
                int indexOfChild = sizeNotifierFrameLayout.indexOfChild(this.chatActivityEnterView);
                if (indexOfChild != -1) {
                    HintView hintView = new HintView(getParentActivity(), 1);
                    this.forwardHintView = hintView;
                    sizeNotifierFrameLayout.addView(hintView, indexOfChild + 1, LayoutHelper.createFrame(-2, -2.0f, 51, 19.0f, 0.0f, 19.0f, 0.0f));
                    this.forwardHintView.setAlpha(0.0f);
                    this.forwardHintView.setVisibility(4);
                } else {
                    return;
                }
            }
            this.forwardHintView.showForMessageCell(chatMessageCell, true);
        }
    }

    /* JADX WARNING: Removed duplicated region for block: B:16:0x002e  */
    /* JADX WARNING: Removed duplicated region for block: B:25:0x0050  */
    /* JADX WARNING: Removed duplicated region for block: B:33:? A[RETURN, SYNTHETIC] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private void showTextSelectionHint(org.telegram.messenger.MessageObject r9) {
        /*
            r8 = this;
            android.app.Activity r0 = r8.getParentActivity()
            if (r0 != 0) goto L_0x0007
            return
        L_0x0007:
            java.util.ArrayList<org.telegram.messenger.MessageObject$TextLayoutBlock> r0 = r9.textLayoutBlocks
            r1 = 0
            r2 = 1
            if (r0 == 0) goto L_0x001f
            boolean r0 = r0.isEmpty()
            if (r0 != 0) goto L_0x001f
            java.lang.CharSequence r0 = r9.messageText
            java.util.ArrayList<org.telegram.messenger.MessageObject$TextLayoutBlock> r9 = r9.textLayoutBlocks
            int r9 = r9.size()
            if (r9 <= r2) goto L_0x0021
            r9 = 1
            goto L_0x0022
        L_0x001f:
            java.lang.CharSequence r0 = r9.caption
        L_0x0021:
            r9 = 0
        L_0x0022:
            if (r9 != 0) goto L_0x0030
            if (r0 == 0) goto L_0x0030
            int r9 = r0.length()
            r0 = 200(0xc8, float:2.8E-43)
            if (r9 <= r0) goto L_0x002f
            r1 = 1
        L_0x002f:
            r9 = r1
        L_0x0030:
            if (r9 == 0) goto L_0x007e
            int r9 = org.telegram.messenger.SharedConfig.textSelectionHintShows
            r0 = 2
            if (r9 > r0) goto L_0x007e
            boolean r9 = r8.textSelectionHintWasShowed
            if (r9 != 0) goto L_0x007e
            float r9 = r8.lastTouchY
            org.telegram.ui.Components.ChatActivityEnterView r0 = r8.chatActivityEnterView
            int r0 = r0.getTop()
            r1 = 1114636288(0x42700000, float:60.0)
            int r1 = org.telegram.messenger.AndroidUtilities.dp(r1)
            int r0 = r0 - r1
            float r0 = (float) r0
            int r9 = (r9 > r0 ? 1 : (r9 == r0 ? 0 : -1))
            if (r9 <= 0) goto L_0x0050
            goto L_0x007e
        L_0x0050:
            r8.textSelectionHintWasShowed = r2
            org.telegram.messenger.SharedConfig.increaseTextSelectionHintShowed()
            org.telegram.ui.TextSelectionHint r9 = r8.textSelectionHint
            if (r9 != 0) goto L_0x0079
            org.telegram.ui.ChatActivity$65 r9 = new org.telegram.ui.ChatActivity$65
            android.app.Activity r0 = r8.getParentActivity()
            r9.<init>(r0)
            r8.textSelectionHint = r9
            org.telegram.ui.Components.SizeNotifierFrameLayout r0 = r8.contentView
            r1 = -2
            r2 = 1113587712(0x42600000, float:56.0)
            r3 = 83
            r4 = 1090519040(0x41000000, float:8.0)
            r5 = 0
            r6 = 1090519040(0x41000000, float:8.0)
            r7 = 1090519040(0x41000000, float:8.0)
            android.widget.FrameLayout$LayoutParams r1 = org.telegram.ui.Components.LayoutHelper.createFrame(r1, r2, r3, r4, r5, r6, r7)
            r0.addView(r9, r1)
        L_0x0079:
            org.telegram.ui.TextSelectionHint r9 = r8.textSelectionHint
            r9.show()
        L_0x007e:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.showTextSelectionHint(org.telegram.messenger.MessageObject):void");
    }

    private void showGifHint() {
        View view;
        ChatActivityEnterView chatActivityEnterView2 = this.chatActivityEnterView;
        if (chatActivityEnterView2 != null && chatActivityEnterView2.getVisibility() == 0) {
            SharedPreferences globalMainSettings = MessagesController.getGlobalMainSettings();
            if (!globalMainSettings.getBoolean("gifhint", false)) {
                globalMainSettings.edit().putBoolean("gifhint", true).commit();
                if (getParentActivity() != null && (view = this.fragmentView) != null && this.gifHintTextView == null) {
                    if (!this.allowContextBotPanelSecond) {
                        ChatActivityEnterView chatActivityEnterView3 = this.chatActivityEnterView;
                        if (chatActivityEnterView3 != null) {
                            chatActivityEnterView3.setOpenGifsTabFirst();
                            return;
                        }
                        return;
                    }
                    SizeNotifierFrameLayout sizeNotifierFrameLayout = (SizeNotifierFrameLayout) view;
                    int indexOfChild = sizeNotifierFrameLayout.indexOfChild(this.chatActivityEnterView);
                    if (indexOfChild != -1) {
                        this.chatActivityEnterView.setOpenGifsTabFirst();
                        View view2 = new View(getParentActivity());
                        this.emojiButtonRed = view2;
                        view2.setBackgroundResource(NUM);
                        int i = indexOfChild + 1;
                        sizeNotifierFrameLayout.addView(this.emojiButtonRed, i, LayoutHelper.createFrame(10, 10.0f, 83, 30.0f, 0.0f, 0.0f, 27.0f));
                        TextView textView = new TextView(getParentActivity());
                        this.gifHintTextView = textView;
                        textView.setBackgroundDrawable(Theme.createRoundRectDrawable(AndroidUtilities.dp(3.0f), Theme.getColor("chat_gifSaveHintBackground")));
                        this.gifHintTextView.setTextColor(Theme.getColor("chat_gifSaveHintText"));
                        this.gifHintTextView.setTextSize(1, 14.0f);
                        this.gifHintTextView.setPadding(AndroidUtilities.dp(8.0f), AndroidUtilities.dp(7.0f), AndroidUtilities.dp(8.0f), AndroidUtilities.dp(7.0f));
                        this.gifHintTextView.setText(LocaleController.getString("TapHereGifs", NUM));
                        this.gifHintTextView.setGravity(16);
                        sizeNotifierFrameLayout.addView(this.gifHintTextView, i, LayoutHelper.createFrame(-2, -2.0f, 83, 5.0f, 0.0f, 5.0f, 3.0f));
                        AnimatorSet animatorSet = new AnimatorSet();
                        animatorSet.playTogether(new Animator[]{ObjectAnimator.ofFloat(this.gifHintTextView, View.ALPHA, new float[]{0.0f, 1.0f}), ObjectAnimator.ofFloat(this.emojiButtonRed, View.ALPHA, new float[]{0.0f, 1.0f})});
                        animatorSet.addListener(new AnimatorListenerAdapter() {
                            public void onAnimationEnd(Animator animator) {
                                AndroidUtilities.runOnUIThread(new Runnable() {
                                    public final void run() {
                                        ChatActivity.AnonymousClass66.this.lambda$onAnimationEnd$0$ChatActivity$66();
                                    }
                                }, 2000);
                            }

                            /* access modifiers changed from: private */
                            /* renamed from: lambda$onAnimationEnd$0 */
                            public /* synthetic */ void lambda$onAnimationEnd$0$ChatActivity$66() {
                                if (ChatActivity.this.gifHintTextView != null) {
                                    AnimatorSet animatorSet = new AnimatorSet();
                                    animatorSet.playTogether(new Animator[]{ObjectAnimator.ofFloat(ChatActivity.this.gifHintTextView, View.ALPHA, new float[]{0.0f})});
                                    animatorSet.addListener(new AnimatorListenerAdapter() {
                                        public void onAnimationEnd(Animator animator) {
                                            if (ChatActivity.this.gifHintTextView != null) {
                                                ChatActivity.this.gifHintTextView.setVisibility(8);
                                            }
                                        }
                                    });
                                    animatorSet.setDuration(300);
                                    animatorSet.start();
                                }
                            }
                        });
                        animatorSet.setDuration(300);
                        animatorSet.start();
                    }
                }
            }
        }
    }

    /* access modifiers changed from: private */
    public void openAttachMenu() {
        if (getParentActivity() != null) {
            ChatActivityEnterView chatActivityEnterView2 = this.chatActivityEnterView;
            if (chatActivityEnterView2 == null || TextUtils.isEmpty(chatActivityEnterView2.getSlowModeTimer())) {
                createChatAttachView();
                this.chatAttachAlert.getPhotoLayout().loadGalleryPhotos();
                int i = Build.VERSION.SDK_INT;
                if (i == 21 || i == 22) {
                    this.chatActivityEnterView.closeKeyboard();
                }
                TLRPC$Chat tLRPC$Chat = this.currentChat;
                if (tLRPC$Chat == null || ChatObject.hasAdminRights(tLRPC$Chat) || !this.currentChat.slowmode_enabled) {
                    this.chatAttachAlert.setMaxSelectedPhotos(-1, true);
                } else {
                    this.chatAttachAlert.setMaxSelectedPhotos(10, true);
                }
                this.chatAttachAlert.init();
                showDialog(this.chatAttachAlert);
            }
        }
    }

    /* access modifiers changed from: private */
    public void checkContextBotPanel() {
        MentionsAdapter mentionsAdapter2;
        if (this.allowStickersPanel && (mentionsAdapter2 = this.mentionsAdapter) != null && mentionsAdapter2.isBotContext()) {
            if (this.allowContextBotPanel || this.allowContextBotPanelSecond) {
                if (this.mentionContainer.getVisibility() == 4 || this.mentionContainer.getTag() != null) {
                    AnimatorSet animatorSet = this.mentionListAnimation;
                    if (animatorSet != null) {
                        animatorSet.cancel();
                    }
                    this.mentionContainer.setTag((Object) null);
                    this.mentionContainer.setVisibility(0);
                    updateMessageListAccessibilityVisibility();
                    AnimatorSet animatorSet2 = new AnimatorSet();
                    this.mentionListAnimation = animatorSet2;
                    animatorSet2.playTogether(new Animator[]{ObjectAnimator.ofFloat(this.mentionContainer, View.ALPHA, new float[]{0.0f, 1.0f})});
                    this.mentionListAnimation.addListener(new AnimatorListenerAdapter() {
                        public void onAnimationEnd(Animator animator) {
                            if (ChatActivity.this.mentionListAnimation != null && ChatActivity.this.mentionListAnimation.equals(animator)) {
                                AnimatorSet unused = ChatActivity.this.mentionListAnimation = null;
                            }
                        }

                        public void onAnimationCancel(Animator animator) {
                            if (ChatActivity.this.mentionListAnimation != null && ChatActivity.this.mentionListAnimation.equals(animator)) {
                                AnimatorSet unused = ChatActivity.this.mentionListAnimation = null;
                            }
                        }
                    });
                    this.mentionListAnimation.setDuration(200);
                    this.mentionListAnimation.start();
                }
            } else if (this.mentionContainer.getVisibility() == 0 && this.mentionContainer.getTag() == null) {
                AnimatorSet animatorSet3 = this.mentionListAnimation;
                if (animatorSet3 != null) {
                    animatorSet3.cancel();
                }
                this.mentionContainer.setTag(1);
                AnimatorSet animatorSet4 = new AnimatorSet();
                this.mentionListAnimation = animatorSet4;
                animatorSet4.playTogether(new Animator[]{ObjectAnimator.ofFloat(this.mentionContainer, View.ALPHA, new float[]{0.0f})});
                this.mentionListAnimation.addListener(new AnimatorListenerAdapter() {
                    public void onAnimationEnd(Animator animator) {
                        if (ChatActivity.this.mentionListAnimation != null && ChatActivity.this.mentionListAnimation.equals(animator)) {
                            ChatActivity.this.mentionContainer.setVisibility(4);
                            AnimatorSet unused = ChatActivity.this.mentionListAnimation = null;
                            ChatActivity.this.updateMessageListAccessibilityVisibility();
                        }
                    }

                    public void onAnimationCancel(Animator animator) {
                        if (ChatActivity.this.mentionListAnimation != null && ChatActivity.this.mentionListAnimation.equals(animator)) {
                            AnimatorSet unused = ChatActivity.this.mentionListAnimation = null;
                        }
                    }
                });
                this.mentionListAnimation.setDuration(200);
                this.mentionListAnimation.start();
            }
        }
    }

    /* access modifiers changed from: private */
    public void checkAutoDownloadMessages(boolean z) {
        TLRPC$Document document;
        int canDownloadMedia;
        RecyclerListView recyclerListView = this.chatListView;
        if (recyclerListView != null) {
            int childCount = recyclerListView.getChildCount();
            int i = -1;
            int i2 = -1;
            for (int i3 = 0; i3 < childCount; i3++) {
                View childAt = this.chatListView.getChildAt(i3);
                if (childAt instanceof ChatMessageCell) {
                    RecyclerView.ViewHolder findContainingViewHolder = this.chatListView.findContainingViewHolder(childAt);
                    if (findContainingViewHolder != null) {
                        i2 = findContainingViewHolder.getAdapterPosition();
                        if (i == -1) {
                            i = i2;
                        }
                    }
                    ChatMessageCell chatMessageCell = (ChatMessageCell) childAt;
                    MessageObject messageObject = chatMessageCell.getMessageObject();
                    if (messageObject != null && !messageObject.mediaExists && messageObject.isSent() && !messageObject.loadingCancelled && (document = messageObject.getDocument()) != null && !MessageObject.isStickerDocument(document) && !MessageObject.isAnimatedStickerDocument(document, true) && !MessageObject.isGifDocument(document) && !MessageObject.isRoundVideoDocument(document) && (canDownloadMedia = getDownloadController().canDownloadMedia(messageObject.messageOwner)) != 0) {
                        int i4 = 2;
                        if (canDownloadMedia != 2) {
                            if (messageObject.isWallpaper() || messageObject.isTheme()) {
                                i4 = 1;
                            } else if (!MessageObject.isVideoDocument(document) || !messageObject.shouldEncryptPhotoOrVideo()) {
                                i4 = 0;
                            }
                            getFileLoader().loadFile(document, messageObject, 0, i4);
                            chatMessageCell.updateButtonState(false, true, false);
                        } else if (this.currentEncryptedChat == null && !messageObject.shouldEncryptPhotoOrVideo() && messageObject.canStreamVideo()) {
                            getFileLoader().loadFile(document, messageObject, 0, 10);
                        }
                    }
                }
            }
            if (i != -1) {
                if (z) {
                    int min = Math.min(i2 + 10, this.chatAdapter.messagesEndRow);
                    int size = this.messages.size();
                    while (i2 < min) {
                        int access$17600 = i2 - this.chatAdapter.messagesStartRow;
                        if (access$17600 >= 0 && access$17600 < size) {
                            checkAutoDownloadMessage(this.messages.get(access$17600));
                        }
                        i2++;
                    }
                } else {
                    int max = Math.max(i - 20, this.chatAdapter.messagesStartRow);
                    int size2 = this.messages.size();
                    for (int i5 = i - 1; i5 >= max; i5--) {
                        int access$176002 = i5 - this.chatAdapter.messagesStartRow;
                        if (access$176002 >= 0 && access$176002 < size2) {
                            checkAutoDownloadMessage(this.messages.get(access$176002));
                        }
                    }
                }
            }
            showNoSoundHint();
        }
    }

    private void checkAutoDownloadMessage(MessageObject messageObject) {
        int canDownloadMedia;
        if (!messageObject.mediaExists && (canDownloadMedia = getDownloadController().canDownloadMedia(messageObject.messageOwner)) != 0) {
            TLRPC$Document document = messageObject.getDocument();
            TLRPC$PhotoSize closestPhotoSizeWithSize = document == null ? FileLoader.getClosestPhotoSizeWithSize(messageObject.photoThumbs, AndroidUtilities.getPhotoSize()) : null;
            if (document != null || closestPhotoSizeWithSize != null) {
                int i = 2;
                if (canDownloadMedia == 2 || (canDownloadMedia == 1 && messageObject.isVideo())) {
                    if (document != null && this.currentEncryptedChat == null && !messageObject.shouldEncryptPhotoOrVideo() && messageObject.canStreamVideo()) {
                        getFileLoader().loadFile(document, messageObject, 0, 10);
                    }
                } else if (document != null) {
                    FileLoader fileLoader = getFileLoader();
                    if (!MessageObject.isVideoDocument(document) || !messageObject.shouldEncryptPhotoOrVideo()) {
                        i = 0;
                    }
                    fileLoader.loadFile(document, messageObject, 0, i);
                } else {
                    getFileLoader().loadFile(ImageLocation.getForObject(closestPhotoSizeWithSize, messageObject.photoThumbsObject), messageObject, (String) null, 0, messageObject.shouldEncryptPhotoOrVideo() ? 2 : 0);
                }
            }
        }
    }

    /* access modifiers changed from: private */
    public void showFloatingDateView(boolean z) {
        ChatActionCell chatActionCell = this.floatingDateView;
        if (chatActionCell != null) {
            if (chatActionCell.getTag() == null) {
                AnimatorSet animatorSet = this.floatingDateAnimation;
                if (animatorSet != null) {
                    animatorSet.cancel();
                }
                this.floatingDateView.setTag(1);
                AnimatorSet animatorSet2 = new AnimatorSet();
                this.floatingDateAnimation = animatorSet2;
                animatorSet2.setDuration(150);
                this.floatingDateAnimation.playTogether(new Animator[]{ObjectAnimator.ofFloat(this.floatingDateView, View.ALPHA, new float[]{1.0f})});
                this.floatingDateAnimation.addListener(new AnimatorListenerAdapter() {
                    public void onAnimationEnd(Animator animator) {
                        if (animator.equals(ChatActivity.this.floatingDateAnimation)) {
                            AnimatorSet unused = ChatActivity.this.floatingDateAnimation = null;
                        }
                    }
                });
                this.floatingDateAnimation.start();
            }
            if (!z) {
                invalidateMessagesVisiblePart();
                this.hideDateDelay = 1000;
            }
        }
    }

    /* access modifiers changed from: private */
    public void hideFloatingDateView(boolean z) {
        if (this.floatingDateView.getTag() != null && !this.currentFloatingDateOnScreen) {
            if (!this.scrollingFloatingDate || this.currentFloatingTopIsNotMessage) {
                this.floatingDateView.setTag((Object) null);
                if (z) {
                    AnimatorSet animatorSet = new AnimatorSet();
                    this.floatingDateAnimation = animatorSet;
                    animatorSet.setDuration(150);
                    this.floatingDateAnimation.playTogether(new Animator[]{ObjectAnimator.ofFloat(this.floatingDateView, View.ALPHA, new float[]{0.0f})});
                    this.floatingDateAnimation.addListener(new AnimatorListenerAdapter() {
                        public void onAnimationEnd(Animator animator) {
                            if (animator.equals(ChatActivity.this.floatingDateAnimation)) {
                                AnimatorSet unused = ChatActivity.this.floatingDateAnimation = null;
                            }
                        }
                    });
                    this.floatingDateAnimation.setStartDelay((long) this.hideDateDelay);
                    this.floatingDateAnimation.start();
                } else {
                    AnimatorSet animatorSet2 = this.floatingDateAnimation;
                    if (animatorSet2 != null) {
                        animatorSet2.cancel();
                        this.floatingDateAnimation = null;
                    }
                    this.floatingDateView.setAlpha(0.0f);
                }
                this.hideDateDelay = 500;
            }
        }
    }

    /* access modifiers changed from: protected */
    public void onRemoveFromParent() {
        MessageObject playingMessageObject = MediaController.getInstance().getPlayingMessageObject();
        if (playingMessageObject == null || !playingMessageObject.isVideo()) {
            MediaController.getInstance().setTextureView(this.videoTextureView, (AspectRatioFrameLayout) null, (FrameLayout) null, false);
        } else {
            MediaController.getInstance().cleanupPlayer(true, true);
        }
    }

    /* access modifiers changed from: protected */
    public void setIgnoreAttachOnPause(boolean z) {
        this.ignoreAttachOnPause = z;
    }

    public ChatActivityEnterView getChatActivityEnterView() {
        return this.chatActivityEnterView;
    }

    public boolean isKeyboardVisible() {
        return this.contentView.getKeyboardHeight() > AndroidUtilities.dp(20.0f);
    }

    /* access modifiers changed from: private */
    public void checkScrollForLoad(boolean z) {
        int i;
        GridLayoutManagerFixed gridLayoutManagerFixed = this.chatLayoutManager;
        if (gridLayoutManagerFixed != null && !this.paused) {
            int findFirstVisibleItemPosition = gridLayoutManagerFixed.findFirstVisibleItemPosition();
            if (findFirstVisibleItemPosition == -1) {
                i = 0;
            } else {
                i = Math.abs(this.chatLayoutManager.findLastVisibleItemPosition() - findFirstVisibleItemPosition) + 1;
            }
            if ((this.chatAdapter.getItemCount() - findFirstVisibleItemPosition) - i <= (z ? 25 : 5) && !this.loading) {
                boolean[] zArr = this.endReached;
                if (!zArr[0]) {
                    this.loading = true;
                    this.waitingForLoad.add(Integer.valueOf(this.lastLoadIndex));
                    if (this.messagesByDays.size() != 0) {
                        MessagesController messagesController = getMessagesController();
                        long j = this.dialog_id;
                        long j2 = this.mergeDialogId;
                        int i2 = this.maxMessageId[0];
                        boolean z2 = !this.cacheEndReached[0];
                        int i3 = this.minDate[0];
                        int i4 = this.classGuid;
                        boolean isChannel = ChatObject.isChannel(this.currentChat);
                        int i5 = this.chatMode;
                        int i6 = this.threadMessageId;
                        int i7 = this.replyMaxReadId;
                        int i8 = this.lastLoadIndex;
                        this.lastLoadIndex = i8 + 1;
                        messagesController.loadMessages(j, j2, false, 50, i2, 0, z2, i3, i4, 0, 0, isChannel, i5, i6, i7, i8);
                    } else {
                        MessagesController messagesController2 = getMessagesController();
                        long j3 = this.dialog_id;
                        long j4 = this.mergeDialogId;
                        boolean z3 = !this.cacheEndReached[0];
                        int i9 = this.minDate[0];
                        int i10 = this.classGuid;
                        boolean isChannel2 = ChatObject.isChannel(this.currentChat);
                        int i11 = this.chatMode;
                        int i12 = this.threadMessageId;
                        int i13 = this.replyMaxReadId;
                        int i14 = this.lastLoadIndex;
                        this.lastLoadIndex = i14 + 1;
                        messagesController2.loadMessages(j3, j4, false, 50, 0, 0, z3, i9, i10, 0, 0, isChannel2, i11, i12, i13, i14);
                    }
                } else if (this.mergeDialogId != 0 && !zArr[1]) {
                    this.loading = true;
                    this.waitingForLoad.add(Integer.valueOf(this.lastLoadIndex));
                    MessagesController messagesController3 = getMessagesController();
                    long j5 = this.mergeDialogId;
                    int i15 = this.maxMessageId[1];
                    boolean z4 = !this.cacheEndReached[1];
                    int i16 = this.minDate[1];
                    int i17 = this.classGuid;
                    int i18 = this.chatMode;
                    int i19 = this.threadMessageId;
                    int i20 = this.replyMaxReadId;
                    int i21 = this.lastLoadIndex;
                    this.lastLoadIndex = i21 + 1;
                    messagesController3.loadMessages(j5, 0, false, 50, i15, 0, z4, i16, i17, 0, 0, false, i18, i19, i20, i21);
                }
            }
            if (i > 0 && !this.loadingForward && findFirstVisibleItemPosition <= 10) {
                if (this.mergeDialogId != 0 && !this.forwardEndReached[1]) {
                    this.waitingForLoad.add(Integer.valueOf(this.lastLoadIndex));
                    MessagesController messagesController4 = getMessagesController();
                    long j6 = this.mergeDialogId;
                    int i22 = this.minMessageId[1];
                    int i23 = this.maxDate[1];
                    int i24 = this.classGuid;
                    int i25 = this.chatMode;
                    int i26 = this.threadMessageId;
                    int i27 = this.replyMaxReadId;
                    int i28 = this.lastLoadIndex;
                    this.lastLoadIndex = i28 + 1;
                    messagesController4.loadMessages(j6, 0, false, 50, i22, 0, true, i23, i24, 1, 0, false, i25, i26, i27, i28);
                    this.loadingForward = true;
                } else if (!this.forwardEndReached[0]) {
                    this.waitingForLoad.add(Integer.valueOf(this.lastLoadIndex));
                    MessagesController messagesController5 = getMessagesController();
                    long j7 = this.dialog_id;
                    long j8 = this.mergeDialogId;
                    int i29 = this.minMessageId[0];
                    int i30 = this.maxDate[0];
                    int i31 = this.classGuid;
                    boolean isChannel3 = ChatObject.isChannel(this.currentChat);
                    int i32 = this.chatMode;
                    int i33 = this.threadMessageId;
                    int i34 = this.replyMaxReadId;
                    int i35 = this.lastLoadIndex;
                    this.lastLoadIndex = i35 + 1;
                    messagesController5.loadMessages(j7, j8, false, 50, i29, 0, true, i30, i31, 1, 0, isChannel3, i32, i33, i34, i35);
                    this.loadingForward = true;
                }
            }
        }
    }

    /* access modifiers changed from: private */
    public void processSelectedAttach(int i) {
        boolean z;
        TLRPC$EncryptedChat tLRPC$EncryptedChat;
        TLRPC$TL_chatBannedRights tLRPC$TL_chatBannedRights;
        boolean z2 = false;
        if (i == 0) {
            int i2 = Build.VERSION.SDK_INT;
            if (i2 < 23 || getParentActivity().checkSelfPermission("android.permission.CAMERA") == 0) {
                try {
                    Intent intent = new Intent("android.media.action.IMAGE_CAPTURE");
                    File generatePicturePath = AndroidUtilities.generatePicturePath();
                    if (generatePicturePath != null) {
                        if (i2 >= 24) {
                            intent.putExtra("output", FileProvider.getUriForFile(getParentActivity(), "org.telegram.messenger.beta.provider", generatePicturePath));
                            intent.addFlags(2);
                            intent.addFlags(1);
                        } else {
                            intent.putExtra("output", Uri.fromFile(generatePicturePath));
                        }
                        this.currentPicturePath = generatePicturePath.getAbsolutePath();
                    }
                    startActivityForResult(intent, 0);
                } catch (Exception e) {
                    FileLog.e((Throwable) e);
                }
            } else {
                getParentActivity().requestPermissions(new String[]{"android.permission.CAMERA"}, 19);
            }
        } else if (i == 1) {
            if (Build.VERSION.SDK_INT < 23 || getParentActivity().checkSelfPermission("android.permission.READ_EXTERNAL_STORAGE") == 0) {
                if ((!ChatObject.isChannel(this.currentChat) || (tLRPC$TL_chatBannedRights = this.currentChat.banned_rights) == null || !tLRPC$TL_chatBannedRights.send_gifs) && ((tLRPC$EncryptedChat = this.currentEncryptedChat) == null || AndroidUtilities.getPeerLayerVersion(tLRPC$EncryptedChat.layer) >= 46)) {
                    z = true;
                } else {
                    z = false;
                }
                PhotoAlbumPickerActivity photoAlbumPickerActivity = new PhotoAlbumPickerActivity(PhotoAlbumPickerActivity.SELECT_TYPE_ALL, z, true, this);
                TLRPC$Chat tLRPC$Chat = this.currentChat;
                if (tLRPC$Chat == null || ChatObject.hasAdminRights(tLRPC$Chat) || !this.currentChat.slowmode_enabled) {
                    MessageObject messageObject = this.editingMessageObject;
                    int i3 = messageObject != null ? 1 : 0;
                    if (messageObject == null) {
                        z2 = true;
                    }
                    photoAlbumPickerActivity.setMaxSelectedPhotos(i3, z2);
                } else {
                    photoAlbumPickerActivity.setMaxSelectedPhotos(10, true);
                }
                photoAlbumPickerActivity.setDelegate(new PhotoAlbumPickerActivity.PhotoAlbumPickerActivityDelegate() {
                    public void didSelectPhotos(ArrayList<SendMessagesHelper.SendingMediaInfo> arrayList, boolean z, int i) {
                    }

                    public void startPhotoSelectActivity() {
                        try {
                            Intent intent = new Intent();
                            intent.setType("video/*");
                            intent.setAction("android.intent.action.GET_CONTENT");
                            intent.putExtra("android.intent.extra.sizeLimit", NUM);
                            Intent intent2 = new Intent("android.intent.action.PICK");
                            intent2.setType("image/*");
                            Intent createChooser = Intent.createChooser(intent2, (CharSequence) null);
                            createChooser.putExtra("android.intent.extra.INITIAL_INTENTS", new Intent[]{intent});
                            ChatActivity.this.startActivityForResult(createChooser, 1);
                        } catch (Exception e) {
                            FileLog.e((Throwable) e);
                        }
                    }
                });
                presentFragment(photoAlbumPickerActivity);
                return;
            }
            try {
                getParentActivity().requestPermissions(new String[]{"android.permission.READ_EXTERNAL_STORAGE"}, 4);
            } catch (Throwable unused) {
            }
        } else if (i == 2) {
            int i4 = Build.VERSION.SDK_INT;
            if (i4 < 23 || getParentActivity().checkSelfPermission("android.permission.CAMERA") == 0) {
                try {
                    Intent intent2 = new Intent("android.media.action.VIDEO_CAPTURE");
                    File generateVideoPath = AndroidUtilities.generateVideoPath();
                    if (generateVideoPath != null) {
                        if (i4 >= 24) {
                            intent2.putExtra("output", FileProvider.getUriForFile(getParentActivity(), "org.telegram.messenger.beta.provider", generateVideoPath));
                            intent2.addFlags(2);
                            intent2.addFlags(1);
                        } else if (i4 >= 18) {
                            intent2.putExtra("output", Uri.fromFile(generateVideoPath));
                        }
                        intent2.putExtra("android.intent.extra.sizeLimit", NUM);
                        this.currentPicturePath = generateVideoPath.getAbsolutePath();
                    }
                    startActivityForResult(intent2, 2);
                } catch (Exception e2) {
                    FileLog.e((Throwable) e2);
                }
            } else {
                try {
                    getParentActivity().requestPermissions(new String[]{"android.permission.CAMERA"}, 20);
                } catch (Throwable unused2) {
                }
            }
        }
    }

    public boolean allowSendGifs() {
        TLRPC$TL_chatBannedRights tLRPC$TL_chatBannedRights;
        if (ChatObject.isChannel(this.currentChat) && (tLRPC$TL_chatBannedRights = this.currentChat.banned_rights) != null && tLRPC$TL_chatBannedRights.send_gifs) {
            return false;
        }
        TLRPC$EncryptedChat tLRPC$EncryptedChat = this.currentEncryptedChat;
        if (tLRPC$EncryptedChat == null || AndroidUtilities.getPeerLayerVersion(tLRPC$EncryptedChat.layer) >= 46) {
            return true;
        }
        return false;
    }

    public void openPollCreate(Boolean bool) {
        PollCreateActivity pollCreateActivity = new PollCreateActivity(this, bool);
        pollCreateActivity.setDelegate(new PollCreateActivity.PollCreateActivityDelegate() {
            public final void sendPoll(TLRPC$TL_messageMediaPoll tLRPC$TL_messageMediaPoll, HashMap hashMap, boolean z, int i) {
                ChatActivity.this.lambda$openPollCreate$66$ChatActivity(tLRPC$TL_messageMediaPoll, hashMap, z, i);
            }
        });
        presentFragment(pollCreateActivity);
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$openPollCreate$66 */
    public /* synthetic */ void lambda$openPollCreate$66$ChatActivity(TLRPC$TL_messageMediaPoll tLRPC$TL_messageMediaPoll, HashMap hashMap, boolean z, int i) {
        getSendMessagesHelper().sendMessage(tLRPC$TL_messageMediaPoll, this.dialog_id, this.replyingMessageObject, getThreadMessage(), (TLRPC$ReplyMarkup) null, (HashMap<String, String>) hashMap, z, i);
        afterMessageSend();
    }

    public void didSelectFiles(ArrayList<String> arrayList, String str, boolean z, int i) {
        String str2 = str;
        fillEditingMediaWithCaption(str2, (ArrayList<TLRPC$MessageEntity>) null);
        SendMessagesHelper.prepareSendingDocuments(getAccountInstance(), arrayList, arrayList, (ArrayList<Uri>) null, str2, (String) null, this.dialog_id, this.replyingMessageObject, getThreadMessage(), (InputContentInfoCompat) null, this.editingMessageObject, z, i);
        afterMessageSend();
    }

    public void didSelectPhotos(ArrayList<SendMessagesHelper.SendingMediaInfo> arrayList, boolean z, int i) {
        ArrayList<SendMessagesHelper.SendingMediaInfo> arrayList2 = arrayList;
        fillEditingMediaWithCaption(arrayList2.get(0).caption, arrayList2.get(0).entities);
        SendMessagesHelper.prepareSendingMedia(getAccountInstance(), arrayList, this.dialog_id, this.replyingMessageObject, getThreadMessage(), (InputContentInfoCompat) null, true, false, this.editingMessageObject, z, i);
        afterMessageSend();
        if (i != 0) {
            if (this.scheduledMessagesCount == -1) {
                this.scheduledMessagesCount = 0;
            }
            this.scheduledMessagesCount += arrayList.size();
            updateScheduledInterface(true);
        }
    }

    public void didSelectSearchPhotos(ArrayList<SendMessagesHelper.SendingMediaInfo> arrayList, boolean z, int i) {
        boolean z2;
        ArrayList<SendMessagesHelper.SendingMediaInfo> arrayList2 = arrayList;
        if (!arrayList.isEmpty()) {
            int i2 = 0;
            while (true) {
                if (i2 >= arrayList.size()) {
                    z2 = false;
                    break;
                }
                SendMessagesHelper.SendingMediaInfo sendingMediaInfo = arrayList2.get(i2);
                if (sendingMediaInfo.inlineResult == null && sendingMediaInfo.videoEditedInfo == null) {
                    z2 = true;
                    break;
                }
                i2++;
            }
            if (!z2 && !TextUtils.isEmpty(arrayList2.get(0).caption)) {
                SendMessagesHelper.getInstance(this.currentAccount).sendMessage(arrayList2.get(0).caption, this.dialog_id, this.replyingMessageObject, getThreadMessage(), (TLRPC$WebPage) null, false, arrayList2.get(0).entities, (TLRPC$ReplyMarkup) null, (HashMap<String, String>) null, z, i);
            }
            int i3 = 0;
            while (i3 < arrayList.size()) {
                SendMessagesHelper.SendingMediaInfo sendingMediaInfo2 = arrayList2.get(i3);
                if (sendingMediaInfo2.inlineResult != null && sendingMediaInfo2.videoEditedInfo == null) {
                    SendMessagesHelper.prepareSendingBotContextResult(getAccountInstance(), sendingMediaInfo2.inlineResult, sendingMediaInfo2.params, this.dialog_id, this.replyingMessageObject, getThreadMessage(), z, i);
                    arrayList2.remove(i3);
                    i3--;
                }
                i3++;
            }
            if (!arrayList.isEmpty()) {
                fillEditingMediaWithCaption(arrayList2.get(0).caption, arrayList2.get(0).entities);
                SendMessagesHelper.prepareSendingMedia(getAccountInstance(), arrayList, this.dialog_id, this.replyingMessageObject, getThreadMessage(), (InputContentInfoCompat) null, false, true, this.editingMessageObject, z, i);
                afterMessageSend();
                if (i != 0) {
                    if (this.scheduledMessagesCount == -1) {
                        this.scheduledMessagesCount = 0;
                    }
                    this.scheduledMessagesCount += arrayList.size();
                    updateScheduledInterface(true);
                }
            }
        }
    }

    public void startDocumentSelectActivity() {
        try {
            Intent intent = new Intent("android.intent.action.GET_CONTENT");
            if (Build.VERSION.SDK_INT >= 18) {
                intent.putExtra("android.intent.extra.ALLOW_MULTIPLE", true);
            }
            intent.setType("*/*");
            startActivityForResult(intent, 21);
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public boolean dismissDialogOnPause(Dialog dialog) {
        return dialog != this.chatAttachAlert && super.dismissDialogOnPause(dialog);
    }

    /* access modifiers changed from: private */
    public void searchLinks(CharSequence charSequence, boolean z) {
        TLRPC$WebPage tLRPC$WebPage;
        char c;
        if (this.currentEncryptedChat == null || (getMessagesController().secretWebpagePreview != 0 && AndroidUtilities.getPeerLayerVersion(this.currentEncryptedChat.layer) >= 46)) {
            MessageObject messageObject = this.editingMessageObject;
            if (messageObject == null || messageObject.isWebpage()) {
                if (z && (tLRPC$WebPage = this.foundWebPage) != null) {
                    String str = tLRPC$WebPage.url;
                    if (str != null) {
                        int indexOf = TextUtils.indexOf(charSequence, str);
                        boolean z2 = true;
                        if (indexOf == -1) {
                            String str2 = this.foundWebPage.display_url;
                            if (str2 != null) {
                                indexOf = TextUtils.indexOf(charSequence, str2);
                                if (indexOf == -1 || this.foundWebPage.display_url.length() + indexOf != charSequence.length()) {
                                    z2 = false;
                                }
                                if (indexOf != -1 && !z2) {
                                    c = charSequence.charAt(this.foundWebPage.display_url.length() + indexOf);
                                    if (indexOf != -1 && (z2 || c == ' ' || c == ',' || c == '.' || c == '!' || c == '/')) {
                                        return;
                                    }
                                }
                            } else {
                                z2 = false;
                            }
                        } else {
                            if (this.foundWebPage.url.length() + indexOf != charSequence.length()) {
                                z2 = false;
                            }
                            if (!z2) {
                                c = charSequence.charAt(this.foundWebPage.url.length() + indexOf);
                                return;
                            }
                        }
                        c = 0;
                        return;
                    }
                    this.pendingLinkSearchString = null;
                    this.foundUrls = null;
                    showFieldPanelForWebPage(false, this.foundWebPage, false);
                }
                Utilities.searchQueue.postRunnable(new Runnable(charSequence, getMessagesController(), z) {
                    public final /* synthetic */ CharSequence f$1;
                    public final /* synthetic */ MessagesController f$2;
                    public final /* synthetic */ boolean f$3;

                    {
                        this.f$1 = r2;
                        this.f$2 = r3;
                        this.f$3 = r4;
                    }

                    public final void run() {
                        ChatActivity.this.lambda$searchLinks$73$ChatActivity(this.f$1, this.f$2, this.f$3);
                    }
                });
            }
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$searchLinks$73 */
    public /* synthetic */ void lambda$searchLinks$73$ChatActivity(CharSequence charSequence, MessagesController messagesController, boolean z) {
        CharSequence charSequence2;
        URLSpanReplacement[] uRLSpanReplacementArr;
        boolean z2 = true;
        if (this.linkSearchRequestId != 0) {
            getConnectionsManager().cancelRequest(this.linkSearchRequestId, true);
            this.linkSearchRequestId = 0;
        }
        ArrayList<CharSequence> arrayList = null;
        try {
            Matcher matcher = AndroidUtilities.WEB_URL.matcher(charSequence);
            while (matcher.find()) {
                if (matcher.start() <= 0 || charSequence.charAt(matcher.start() - 1) != '@') {
                    if (arrayList == null) {
                        arrayList = new ArrayList<>();
                    }
                    arrayList.add(charSequence.subSequence(matcher.start(), matcher.end()));
                }
            }
            if ((charSequence instanceof Spannable) && (uRLSpanReplacementArr = (URLSpanReplacement[]) ((Spannable) charSequence).getSpans(0, charSequence.length(), URLSpanReplacement.class)) != null && uRLSpanReplacementArr.length > 0) {
                if (arrayList == null) {
                    arrayList = new ArrayList<>();
                }
                for (URLSpanReplacement url : uRLSpanReplacementArr) {
                    arrayList.add(url.getURL());
                }
            }
            if (!(arrayList == null || this.foundUrls == null || arrayList.size() != this.foundUrls.size())) {
                for (int i = 0; i < arrayList.size(); i++) {
                    if (!TextUtils.equals(arrayList.get(i), this.foundUrls.get(i))) {
                        z2 = false;
                    }
                }
                if (z2) {
                    return;
                }
            }
            this.foundUrls = arrayList;
            if (arrayList == null) {
                AndroidUtilities.runOnUIThread(new Runnable() {
                    public final void run() {
                        ChatActivity.this.lambda$null$67$ChatActivity();
                    }
                });
                return;
            }
            charSequence2 = TextUtils.join(" ", arrayList);
            if (this.currentEncryptedChat == null || messagesController.secretWebpagePreview != 2) {
                TLRPC$TL_messages_getWebPagePreview tLRPC$TL_messages_getWebPagePreview = new TLRPC$TL_messages_getWebPagePreview();
                if (charSequence2 instanceof String) {
                    tLRPC$TL_messages_getWebPagePreview.message = (String) charSequence2;
                } else {
                    tLRPC$TL_messages_getWebPagePreview.message = charSequence2.toString();
                }
                this.linkSearchRequestId = getConnectionsManager().sendRequest(tLRPC$TL_messages_getWebPagePreview, new RequestDelegate(tLRPC$TL_messages_getWebPagePreview) {
                    public final /* synthetic */ TLRPC$TL_messages_getWebPagePreview f$1;

                    {
                        this.f$1 = r2;
                    }

                    public final void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                        ChatActivity.this.lambda$null$72$ChatActivity(this.f$1, tLObject, tLRPC$TL_error);
                    }
                });
                getConnectionsManager().bindRequestToGuid(this.linkSearchRequestId, this.classGuid);
                return;
            }
            AndroidUtilities.runOnUIThread(new Runnable(messagesController, charSequence, z) {
                public final /* synthetic */ MessagesController f$1;
                public final /* synthetic */ CharSequence f$2;
                public final /* synthetic */ boolean f$3;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                    this.f$3 = r4;
                }

                public final void run() {
                    ChatActivity.this.lambda$null$70$ChatActivity(this.f$1, this.f$2, this.f$3);
                }
            });
        } catch (Exception e) {
            FileLog.e((Throwable) e);
            String lowerCase = charSequence.toString().toLowerCase();
            if (charSequence.length() < 13 || (!lowerCase.contains("http://") && !lowerCase.contains("https://"))) {
                AndroidUtilities.runOnUIThread(new Runnable() {
                    public final void run() {
                        ChatActivity.this.lambda$null$68$ChatActivity();
                    }
                });
                return;
            }
            charSequence2 = charSequence;
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$67 */
    public /* synthetic */ void lambda$null$67$ChatActivity() {
        TLRPC$WebPage tLRPC$WebPage = this.foundWebPage;
        if (tLRPC$WebPage != null) {
            showFieldPanelForWebPage(false, tLRPC$WebPage, false);
            this.foundWebPage = null;
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$68 */
    public /* synthetic */ void lambda$null$68$ChatActivity() {
        TLRPC$WebPage tLRPC$WebPage = this.foundWebPage;
        if (tLRPC$WebPage != null) {
            showFieldPanelForWebPage(false, tLRPC$WebPage, false);
            this.foundWebPage = null;
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$70 */
    public /* synthetic */ void lambda$null$70$ChatActivity(MessagesController messagesController, CharSequence charSequence, boolean z) {
        AlertDialog.Builder builder = new AlertDialog.Builder((Context) getParentActivity());
        builder.setTitle(LocaleController.getString("AppName", NUM));
        builder.setPositiveButton(LocaleController.getString("OK", NUM), new DialogInterface.OnClickListener(messagesController, charSequence, z) {
            public final /* synthetic */ MessagesController f$1;
            public final /* synthetic */ CharSequence f$2;
            public final /* synthetic */ boolean f$3;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
            }

            public final void onClick(DialogInterface dialogInterface, int i) {
                ChatActivity.this.lambda$null$69$ChatActivity(this.f$1, this.f$2, this.f$3, dialogInterface, i);
            }
        });
        builder.setNegativeButton(LocaleController.getString("Cancel", NUM), (DialogInterface.OnClickListener) null);
        builder.setMessage(LocaleController.getString("SecretLinkPreviewAlert", NUM));
        showDialog(builder.create());
        messagesController.secretWebpagePreview = 0;
        MessagesController.getGlobalMainSettings().edit().putInt("secretWebpage2", messagesController.secretWebpagePreview).commit();
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$69 */
    public /* synthetic */ void lambda$null$69$ChatActivity(MessagesController messagesController, CharSequence charSequence, boolean z, DialogInterface dialogInterface, int i) {
        messagesController.secretWebpagePreview = 1;
        MessagesController.getGlobalMainSettings().edit().putInt("secretWebpage2", getMessagesController().secretWebpagePreview).commit();
        this.foundUrls = null;
        searchLinks(charSequence, z);
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$72 */
    public /* synthetic */ void lambda$null$72$ChatActivity(TLRPC$TL_messages_getWebPagePreview tLRPC$TL_messages_getWebPagePreview, TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
        AndroidUtilities.runOnUIThread(new Runnable(tLRPC$TL_error, tLObject, tLRPC$TL_messages_getWebPagePreview) {
            public final /* synthetic */ TLRPC$TL_error f$1;
            public final /* synthetic */ TLObject f$2;
            public final /* synthetic */ TLRPC$TL_messages_getWebPagePreview f$3;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
            }

            public final void run() {
                ChatActivity.this.lambda$null$71$ChatActivity(this.f$1, this.f$2, this.f$3);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$71 */
    public /* synthetic */ void lambda$null$71$ChatActivity(TLRPC$TL_error tLRPC$TL_error, TLObject tLObject, TLRPC$TL_messages_getWebPagePreview tLRPC$TL_messages_getWebPagePreview) {
        this.linkSearchRequestId = 0;
        if (tLRPC$TL_error != null) {
            return;
        }
        if (tLObject instanceof TLRPC$TL_messageMediaWebPage) {
            TLRPC$WebPage tLRPC$WebPage = ((TLRPC$TL_messageMediaWebPage) tLObject).webpage;
            this.foundWebPage = tLRPC$WebPage;
            if ((tLRPC$WebPage instanceof TLRPC$TL_webPage) || (tLRPC$WebPage instanceof TLRPC$TL_webPagePending)) {
                if (tLRPC$WebPage instanceof TLRPC$TL_webPagePending) {
                    this.pendingLinkSearchString = tLRPC$TL_messages_getWebPagePreview.message;
                }
                if (this.currentEncryptedChat != null && (tLRPC$WebPage instanceof TLRPC$TL_webPagePending)) {
                    tLRPC$WebPage.url = tLRPC$TL_messages_getWebPagePreview.message;
                }
                showFieldPanelForWebPage(true, tLRPC$WebPage, false);
            } else if (tLRPC$WebPage != null) {
                showFieldPanelForWebPage(false, tLRPC$WebPage, false);
                this.foundWebPage = null;
            }
        } else {
            TLRPC$WebPage tLRPC$WebPage2 = this.foundWebPage;
            if (tLRPC$WebPage2 != null) {
                showFieldPanelForWebPage(false, tLRPC$WebPage2, false);
                this.foundWebPage = null;
            }
        }
    }

    private void forwardMessages(ArrayList<MessageObject> arrayList, boolean z, boolean z2, int i) {
        if (arrayList != null && !arrayList.isEmpty()) {
            boolean z3 = false;
            boolean z4 = i != 0;
            if (this.chatMode == 1) {
                z3 = true;
            }
            if (z4 == z3) {
                this.waitingForSendingMessageLoad = true;
            }
            if (!z) {
                AlertsCreator.showSendMediaAlert(getSendMessagesHelper().sendMessage(arrayList, this.dialog_id, z2, i), this);
                return;
            }
            Iterator<MessageObject> it = arrayList.iterator();
            while (it.hasNext()) {
                getSendMessagesHelper().processForwardFromMyName(it.next(), this.dialog_id);
            }
        }
    }

    public boolean shouldShowImport() {
        return this.openImport;
    }

    public void setOpenImport() {
        this.openImport = true;
    }

    private void checkBotKeyboard() {
        MessageObject messageObject;
        if (this.chatActivityEnterView != null && (messageObject = this.botButtons) != null && !this.userBlocked) {
            if (messageObject.messageOwner.reply_markup instanceof TLRPC$TL_replyKeyboardForceReply) {
                SharedPreferences mainSettings = MessagesController.getMainSettings(this.currentAccount);
                if (mainSettings.getInt("answered_" + this.dialog_id, 0) == this.botButtons.getId()) {
                    return;
                }
                if (this.replyingMessageObject == null || this.chatActivityEnterView.getFieldText() == null) {
                    MessageObject messageObject2 = this.botButtons;
                    this.botReplyButtons = messageObject2;
                    this.chatActivityEnterView.setButtons(messageObject2);
                    showFieldPanelForReply(this.botButtons);
                    return;
                }
                return;
            }
            MessageObject messageObject3 = this.replyingMessageObject;
            if (messageObject3 != null && this.botReplyButtons == messageObject3) {
                this.botReplyButtons = null;
                hideFieldPanel(true);
            }
            this.chatActivityEnterView.setButtons(this.botButtons);
        }
    }

    public void hideFieldPanel(boolean z) {
        showFieldPanel(false, (MessageObject) null, (MessageObject) null, (ArrayList<MessageObject>) null, (TLRPC$WebPage) null, true, 0, false, z);
    }

    public void hideFieldPanel(boolean z, int i, boolean z2) {
        showFieldPanel(false, (MessageObject) null, (MessageObject) null, (ArrayList<MessageObject>) null, (TLRPC$WebPage) null, z, i, false, z2);
    }

    public void showFieldPanelForWebPage(boolean z, TLRPC$WebPage tLRPC$WebPage, boolean z2) {
        showFieldPanel(z, (MessageObject) null, (MessageObject) null, (ArrayList<MessageObject>) null, tLRPC$WebPage, true, 0, z2, true);
    }

    public void showFieldPanelForForward(boolean z, ArrayList<MessageObject> arrayList) {
        showFieldPanel(z, (MessageObject) null, (MessageObject) null, arrayList, (TLRPC$WebPage) null, true, 0, false, true);
    }

    public void showFieldPanelForReply(MessageObject messageObject) {
        showFieldPanel(true, messageObject, (MessageObject) null, (ArrayList<MessageObject>) null, (TLRPC$WebPage) null, true, 0, false, true);
    }

    public void showFieldPanelForEdit(boolean z, MessageObject messageObject) {
        showFieldPanel(z, (MessageObject) null, messageObject, (ArrayList<MessageObject>) null, (TLRPC$WebPage) null, true, 0, false, true);
    }

    public void showFieldPanel(boolean z, MessageObject messageObject, MessageObject messageObject2, ArrayList<MessageObject> arrayList, TLRPC$WebPage tLRPC$WebPage, boolean z2, int i, boolean z3, boolean z4) {
        boolean z5;
        boolean z6;
        MessageObject messageObject3;
        boolean z7;
        ArrayList<MessageObject> arrayList2;
        TLObject tLObject;
        int i2;
        TLRPC$PhotoSize tLRPC$PhotoSize;
        int i3;
        TLRPC$PhotoSize tLRPC$PhotoSize2;
        int i4;
        int i5;
        TLRPC$Chat tLRPC$Chat;
        TLRPC$User tLRPC$User;
        int i6;
        int i7;
        String str;
        TLRPC$Chat tLRPC$Chat2;
        String str2;
        String str3;
        MessageObject messageObject4 = messageObject;
        MessageObject messageObject5 = messageObject2;
        TLRPC$WebPage tLRPC$WebPage2 = tLRPC$WebPage;
        int i8 = i;
        if (this.chatActivityEnterView != null) {
            if (!z) {
                MessageObject messageObject6 = this.replyingMessageObject;
                if (messageObject6 != null || this.forwardingMessages != null || this.foundWebPage != null || this.editingMessageObject != null) {
                    if (messageObject6 != null && (messageObject6.messageOwner.reply_markup instanceof TLRPC$TL_replyKeyboardForceReply)) {
                        MessagesController.getMainSettings(this.currentAccount).edit().putInt("answered_" + this.dialog_id, this.replyingMessageObject.getId()).commit();
                    }
                    if (this.foundWebPage != null) {
                        this.foundWebPage = null;
                        this.chatActivityEnterView.setWebPage((TLRPC$WebPage) null, !z3);
                        if (!(tLRPC$WebPage2 == null || ((messageObject3 = this.replyingMessageObject) == null && this.forwardingMessages == null && this.editingMessageObject == null))) {
                            showFieldPanel(true, messageObject3, this.editingMessageObject, this.forwardingMessages, (TLRPC$WebPage) null, z2, i, false, true);
                            return;
                        }
                    }
                    ArrayList<MessageObject> arrayList3 = this.forwardingMessages;
                    if (arrayList3 != null) {
                        this.forwardingMessages = null;
                        if (i8 == 0 || i8 == NUM) {
                            z6 = z2;
                            z5 = false;
                        } else {
                            i8++;
                            z5 = false;
                            z6 = z2;
                        }
                        forwardMessages(arrayList3, z5, z6, i8);
                    } else {
                        z5 = false;
                    }
                    this.chatActivityEnterView.setForceShowSendButton(z5, z5);
                    if (!this.waitingForSendingMessageLoad) {
                        this.chatActivityEnterView.hideTopView(z4);
                    }
                    this.chatActivityEnterView.setReplyingMessageObject(this.threadMessageObject);
                    this.chatActivityEnterView.setEditingMessageObject((MessageObject) null, z5);
                    this.topViewWasVisible = z5 ? 1 : 0;
                    this.replyingMessageObject = this.threadMessageObject;
                    this.editingMessageObject = null;
                    this.replyImageLocation = null;
                    this.replyImageLocationObject = null;
                }
            } else if (messageObject4 != null || arrayList != null || messageObject5 != null || tLRPC$WebPage2 != null) {
                hideHints(false);
                if (this.searchItem != null && this.actionBar.isSearchFieldVisible()) {
                    this.actionBar.closeSearchField(false);
                    this.chatActivityEnterView.setFieldFocused();
                    AndroidUtilities.runOnUIThread(new Runnable() {
                        public final void run() {
                            ChatActivity.this.lambda$showFieldPanel$74$ChatActivity();
                        }
                    }, 100);
                }
                if (messageObject4 == null || messageObject.getDialogId() == this.dialog_id) {
                    arrayList2 = arrayList;
                    z7 = false;
                } else {
                    arrayList2 = new ArrayList<>();
                    arrayList2.add(messageObject4);
                    messageObject4 = null;
                    z7 = true;
                }
                this.chatActivityEnterTopView.setEditMode(false);
                if (messageObject5 != null) {
                    this.forwardingMessages = null;
                    if (this.threadMessageId == 0) {
                        this.replyingMessageObject = null;
                        this.chatActivityEnterView.setReplyingMessageObject((MessageObject) null);
                    }
                    this.editingMessageObject = messageObject5;
                    boolean isMediaEmpty = messageObject2.isMediaEmpty();
                    this.chatActivityEnterView.setEditingMessageObject(messageObject5, !isMediaEmpty);
                    if (this.foundWebPage == null) {
                        this.chatActivityEnterView.setForceShowSendButton(false, false);
                        boolean canEditMedia = messageObject2.canEditMedia();
                        if (isMediaEmpty || !canEditMedia) {
                            this.replyIconImageView.setImageResource(NUM);
                            this.replyIconImageView.setContentDescription(LocaleController.getString("AccDescrEditing", NUM));
                            this.replyCloseImageView.setContentDescription(LocaleController.getString("AccDescrCancelEdit", NUM));
                            if (isMediaEmpty) {
                                this.replyNameTextView.setText(LocaleController.getString("EditMessage", NUM));
                            } else {
                                this.replyNameTextView.setText(LocaleController.getString("EditCaption", NUM));
                            }
                            if (canEditMedia) {
                                this.replyObjectTextView.setText(LocaleController.getString("EditMessageMedia", NUM));
                            } else {
                                CharSequence charSequence = messageObject5.messageText;
                                if (!(charSequence == null && messageObject5.caption == null)) {
                                    CharSequence charSequence2 = messageObject5.caption;
                                    String charSequence3 = charSequence2 != null ? charSequence2.toString() : charSequence.toString();
                                    if (charSequence3.length() > 150) {
                                        charSequence3 = charSequence3.substring(0, 150);
                                    }
                                    String replace = charSequence3.replace(10, ' ');
                                    SimpleTextView simpleTextView = this.replyObjectTextView;
                                    simpleTextView.setText(Emoji.replaceEmoji(replace, simpleTextView.getPaint().getFontMetricsInt(), AndroidUtilities.dp(14.0f), false));
                                }
                            }
                        } else {
                            if (messageObject2.isPhoto()) {
                                str3 = LocaleController.getString("EditMessageEditPhoto", NUM);
                                str2 = LocaleController.getString("EditMessageReplacePhoto", NUM);
                            } else if (messageObject2.isVideo()) {
                                str3 = LocaleController.getString("EditMessageEditVideo", NUM);
                                str2 = LocaleController.getString("EditMessageReplaceVideo", NUM);
                            } else {
                                if (messageObject2.isGif()) {
                                    str2 = LocaleController.getString("EditMessageReplaceGif", NUM);
                                } else if (messageObject2.isMusic()) {
                                    str2 = LocaleController.getString("EditMessageReplaceAudio", NUM);
                                } else {
                                    str2 = LocaleController.getString("EditMessageReplaceFile", NUM);
                                }
                                str3 = null;
                            }
                            ChatActivityEnterTopView.EditViewButton[] buttons = this.chatActivityEnterTopView.getEditView().getButtons();
                            buttons[0].setEditButton(str3 != null);
                            buttons[0].getTextView().setText(str3 != null ? str3 : str2);
                            buttons[0].getImageView().setImageResource(str3 != null ? NUM : NUM);
                            buttons[1].setVisibility(str3 != null ? 0 : 8);
                            if (str3 != null) {
                                buttons[1].getTextView().setText(str2);
                            }
                            this.chatActivityEnterTopView.setEditMode(true);
                        }
                    } else {
                        return;
                    }
                } else if (messageObject4 != null) {
                    this.forwardingMessages = null;
                    this.editingMessageObject = null;
                    this.replyingMessageObject = messageObject4;
                    this.chatActivityEnterView.setReplyingMessageObject(messageObject4);
                    this.chatActivityEnterView.setEditingMessageObject((MessageObject) null, false);
                    if (this.foundWebPage == null) {
                        String restrictionReason = MessagesController.getRestrictionReason(messageObject4.messageOwner.restriction_reason);
                        this.chatActivityEnterView.setForceShowSendButton(false, false);
                        if (!messageObject4.isFromUser()) {
                            if (!ChatObject.isChannel(this.currentChat) || !this.currentChat.megagroup || !messageObject4.isForwardedChannelPost()) {
                                tLRPC$Chat2 = getMessagesController().getChat(Integer.valueOf(messageObject4.messageOwner.peer_id.channel_id));
                            } else {
                                tLRPC$Chat2 = getMessagesController().getChat(Integer.valueOf(messageObject4.messageOwner.fwd_from.from_id.channel_id));
                            }
                            if (tLRPC$Chat2 != null) {
                                str = tLRPC$Chat2.title;
                            } else {
                                return;
                            }
                        } else if (messageObject4.messageOwner.from_id.channel_id != 0) {
                            TLRPC$Chat chat = getMessagesController().getChat(Integer.valueOf(messageObject4.messageOwner.from_id.channel_id));
                            if (chat != null) {
                                str = chat.title;
                            } else {
                                return;
                            }
                        } else {
                            TLRPC$User user = getMessagesController().getUser(Integer.valueOf(messageObject4.messageOwner.from_id.user_id));
                            if (user != null) {
                                str = UserObject.getUserName(user);
                            } else {
                                return;
                            }
                        }
                        this.replyIconImageView.setImageResource(NUM);
                        this.replyNameTextView.setText(str);
                        this.replyIconImageView.setContentDescription(LocaleController.getString("AccDescrReplying", NUM));
                        this.replyCloseImageView.setContentDescription(LocaleController.getString("AccDescrCancelReply", NUM));
                        if (!TextUtils.isEmpty(restrictionReason)) {
                            this.replyObjectTextView.setText(restrictionReason);
                        } else {
                            TLRPC$MessageMedia tLRPC$MessageMedia = messageObject4.messageOwner.media;
                            if (tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaGame) {
                                SimpleTextView simpleTextView2 = this.replyObjectTextView;
                                simpleTextView2.setText(Emoji.replaceEmoji(tLRPC$MessageMedia.game.title, simpleTextView2.getPaint().getFontMetricsInt(), AndroidUtilities.dp(14.0f), false));
                            } else {
                                CharSequence charSequence4 = messageObject4.messageText;
                                if (!(charSequence4 == null && messageObject4.caption == null)) {
                                    CharSequence charSequence5 = messageObject4.caption;
                                    String charSequence6 = charSequence5 != null ? charSequence5.toString() : charSequence4.toString();
                                    if (charSequence6.length() > 150) {
                                        charSequence6 = charSequence6.substring(0, 150);
                                    }
                                    String replace2 = charSequence6.replace(10, ' ');
                                    SimpleTextView simpleTextView3 = this.replyObjectTextView;
                                    simpleTextView3.setText(Emoji.replaceEmoji(replace2, simpleTextView3.getPaint().getFontMetricsInt(), AndroidUtilities.dp(14.0f), false));
                                }
                            }
                        }
                    } else {
                        return;
                    }
                } else if (arrayList2 == null) {
                    this.replyIconImageView.setImageResource(NUM);
                    if (tLRPC$WebPage2 instanceof TLRPC$TL_webPagePending) {
                        this.replyNameTextView.setText(LocaleController.getString("GettingLinkInfo", NUM));
                        this.replyObjectTextView.setText(this.pendingLinkSearchString);
                    } else {
                        String str4 = tLRPC$WebPage2.site_name;
                        if (str4 != null) {
                            this.replyNameTextView.setText(str4);
                        } else {
                            String str5 = tLRPC$WebPage2.title;
                            if (str5 != null) {
                                this.replyNameTextView.setText(str5);
                            } else {
                                this.replyNameTextView.setText(LocaleController.getString("LinkPreview", NUM));
                            }
                        }
                        String str6 = tLRPC$WebPage2.title;
                        if (str6 != null) {
                            this.replyObjectTextView.setText(str6);
                        } else {
                            String str7 = tLRPC$WebPage2.description;
                            if (str7 != null) {
                                this.replyObjectTextView.setText(str7);
                            } else {
                                String str8 = tLRPC$WebPage2.author;
                                if (str8 != null) {
                                    this.replyObjectTextView.setText(str8);
                                } else {
                                    this.replyObjectTextView.setText(tLRPC$WebPage2.display_url);
                                }
                            }
                        }
                        this.chatActivityEnterView.setWebPage(tLRPC$WebPage2, true);
                    }
                } else if (!arrayList2.isEmpty()) {
                    if (this.threadMessageId == 0) {
                        this.replyingMessageObject = null;
                        this.chatActivityEnterView.setReplyingMessageObject((MessageObject) null);
                    }
                    this.editingMessageObject = null;
                    this.chatActivityEnterView.setEditingMessageObject((MessageObject) null, false);
                    this.forwardingMessages = arrayList2;
                    if (this.foundWebPage == null) {
                        this.chatActivityEnterView.setForceShowSendButton(true, false);
                        ArrayList arrayList4 = new ArrayList();
                        this.replyIconImageView.setImageResource(NUM);
                        this.replyIconImageView.setContentDescription(LocaleController.getString("AccDescrForwarding", NUM));
                        this.replyCloseImageView.setContentDescription(LocaleController.getString("AccDescrCancelForward", NUM));
                        MessageObject messageObject7 = arrayList2.get(0);
                        if (messageObject7.isFromUser()) {
                            arrayList4.add(Integer.valueOf(messageObject7.messageOwner.from_id.user_id));
                        } else {
                            TLRPC$Chat chat2 = getMessagesController().getChat(Integer.valueOf(messageObject7.messageOwner.peer_id.channel_id));
                            if (!ChatObject.isChannel(chat2) || !chat2.megagroup || !messageObject7.isForwardedChannelPost()) {
                                arrayList4.add(Integer.valueOf(-messageObject7.messageOwner.peer_id.channel_id));
                            } else {
                                arrayList4.add(Integer.valueOf(-messageObject7.messageOwner.fwd_from.from_id.channel_id));
                            }
                        }
                        int i9 = (messageObject7.isAnimatedEmoji() || messageObject7.isDice()) ? 0 : messageObject7.type;
                        for (int i10 = 1; i10 < arrayList2.size(); i10++) {
                            MessageObject messageObject8 = arrayList2.get(i10);
                            if (messageObject8.isFromUser()) {
                                i6 = messageObject8.messageOwner.from_id.user_id;
                            } else {
                                TLRPC$Chat chat3 = getMessagesController().getChat(Integer.valueOf(messageObject8.messageOwner.peer_id.channel_id));
                                if (!ChatObject.isChannel(chat3) || !chat3.megagroup || !messageObject8.isForwardedChannelPost()) {
                                    i7 = messageObject8.messageOwner.peer_id.channel_id;
                                } else {
                                    i7 = messageObject8.messageOwner.fwd_from.from_id.channel_id;
                                }
                                i6 = -i7;
                            }
                            if (!arrayList4.contains(Integer.valueOf(i6))) {
                                arrayList4.add(Integer.valueOf(i6));
                            }
                            if (arrayList2.get(i10).type != i9) {
                                i9 = -1;
                            }
                        }
                        StringBuilder sb = new StringBuilder();
                        int i11 = 0;
                        while (true) {
                            if (i11 >= arrayList4.size()) {
                                break;
                            }
                            Integer num = (Integer) arrayList4.get(i11);
                            if (num.intValue() > 0) {
                                tLRPC$User = getMessagesController().getUser(num);
                                tLRPC$Chat = null;
                            } else {
                                tLRPC$Chat = getMessagesController().getChat(Integer.valueOf(-num.intValue()));
                                tLRPC$User = null;
                            }
                            if (tLRPC$User != null || tLRPC$Chat != null) {
                                if (arrayList4.size() != 1) {
                                    if (arrayList4.size() != 2 && sb.length() != 0) {
                                        sb.append(" ");
                                        sb.append(LocaleController.formatPluralString("AndOther", arrayList4.size() - 1));
                                        break;
                                    }
                                    if (sb.length() > 0) {
                                        sb.append(", ");
                                    }
                                    if (tLRPC$User == null) {
                                        sb.append(tLRPC$Chat.title);
                                    } else if (!TextUtils.isEmpty(tLRPC$User.first_name)) {
                                        sb.append(tLRPC$User.first_name);
                                    } else if (!TextUtils.isEmpty(tLRPC$User.last_name)) {
                                        sb.append(tLRPC$User.last_name);
                                    } else {
                                        sb.append(" ");
                                    }
                                } else if (tLRPC$User != null) {
                                    sb.append(UserObject.getUserName(tLRPC$User));
                                } else {
                                    sb.append(tLRPC$Chat.title);
                                }
                            }
                            i11++;
                        }
                        this.replyNameTextView.setText(sb);
                        if (i9 == -1 || i9 == 0 || i9 == 10 || i9 == 11) {
                            if (arrayList2.size() != 1 || arrayList2.get(0).messageText == null) {
                                this.replyObjectTextView.setText(LocaleController.formatPluralString("ForwardedMessageCount", arrayList2.size()));
                            } else {
                                MessageObject messageObject9 = arrayList2.get(0);
                                TLRPC$MessageMedia tLRPC$MessageMedia2 = messageObject9.messageOwner.media;
                                if (tLRPC$MessageMedia2 instanceof TLRPC$TL_messageMediaGame) {
                                    SimpleTextView simpleTextView4 = this.replyObjectTextView;
                                    simpleTextView4.setText(Emoji.replaceEmoji(tLRPC$MessageMedia2.game.title, simpleTextView4.getPaint().getFontMetricsInt(), AndroidUtilities.dp(14.0f), false));
                                } else {
                                    String charSequence7 = messageObject9.messageText.toString();
                                    if (charSequence7.length() > 150) {
                                        charSequence7 = charSequence7.substring(0, 150);
                                    }
                                    String replace3 = charSequence7.replace(10, ' ');
                                    SimpleTextView simpleTextView5 = this.replyObjectTextView;
                                    simpleTextView5.setText(Emoji.replaceEmoji(replace3, simpleTextView5.getPaint().getFontMetricsInt(), AndroidUtilities.dp(14.0f), false));
                                }
                            }
                        } else if (i9 == 1) {
                            this.replyObjectTextView.setText(LocaleController.formatPluralString("ForwardedPhoto", arrayList2.size()));
                            if (arrayList2.size() == 1) {
                                messageObject4 = arrayList2.get(0);
                            }
                        } else if (i9 == 4) {
                            this.replyObjectTextView.setText(LocaleController.formatPluralString("ForwardedLocation", arrayList2.size()));
                        } else if (i9 == 3) {
                            this.replyObjectTextView.setText(LocaleController.formatPluralString("ForwardedVideo", arrayList2.size()));
                            if (arrayList2.size() == 1) {
                                messageObject4 = arrayList2.get(0);
                            }
                        } else if (i9 == 12) {
                            this.replyObjectTextView.setText(LocaleController.formatPluralString("ForwardedContact", arrayList2.size()));
                        } else if (i9 == 2) {
                            this.replyObjectTextView.setText(LocaleController.formatPluralString("ForwardedAudio", arrayList2.size()));
                        } else if (i9 == 5) {
                            this.replyObjectTextView.setText(LocaleController.formatPluralString("ForwardedRound", arrayList2.size()));
                        } else if (i9 == 14) {
                            this.replyObjectTextView.setText(LocaleController.formatPluralString("ForwardedMusic", arrayList2.size()));
                        } else if (i9 == 13 || i9 == 15) {
                            this.replyObjectTextView.setText(LocaleController.formatPluralString("ForwardedSticker", arrayList2.size()));
                        } else if (i9 == 17) {
                            this.replyObjectTextView.setText(LocaleController.formatPluralString("ForwardedPoll", arrayList2.size()));
                        } else if (i9 == 8 || i9 == 9) {
                            if (arrayList2.size() != 1) {
                                this.replyObjectTextView.setText(LocaleController.formatPluralString("ForwardedFile", arrayList2.size()));
                            } else if (i9 == 8) {
                                this.replyObjectTextView.setText(LocaleController.getString("AttachGif", NUM));
                            } else {
                                String documentFileName = FileLoader.getDocumentFileName(arrayList2.get(0).getDocument());
                                if (documentFileName.length() != 0) {
                                    this.replyObjectTextView.setText(documentFileName);
                                }
                                messageObject4 = arrayList2.get(0);
                            }
                        }
                    } else {
                        return;
                    }
                } else {
                    return;
                }
                if (messageObject4 == null) {
                    messageObject4 = (messageObject5 == null || this.chatActivityEnterTopView.isEditMode()) ? null : messageObject5;
                }
                FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) this.replyNameTextView.getLayoutParams();
                FrameLayout.LayoutParams layoutParams2 = (FrameLayout.LayoutParams) this.replyObjectTextView.getLayoutParams();
                if (messageObject4 == null || !TextUtils.isEmpty(MessagesController.getRestrictionReason(messageObject4.messageOwner.restriction_reason))) {
                    tLRPC$PhotoSize2 = null;
                    i3 = 0;
                    tLRPC$PhotoSize = null;
                    i2 = 1;
                    tLObject = null;
                } else {
                    tLRPC$PhotoSize2 = FileLoader.getClosestPhotoSizeWithSize(messageObject4.photoThumbs2, 320);
                    tLRPC$PhotoSize = FileLoader.getClosestPhotoSizeWithSize(messageObject4.photoThumbs2, AndroidUtilities.dp(40.0f));
                    tLObject = messageObject4.photoThumbsObject2;
                    if (tLRPC$PhotoSize2 == null) {
                        if (messageObject4.mediaExists) {
                            tLRPC$PhotoSize2 = FileLoader.getClosestPhotoSizeWithSize(messageObject4.photoThumbs, AndroidUtilities.getPhotoSize());
                            i4 = tLRPC$PhotoSize2 != null ? tLRPC$PhotoSize2.size : 0;
                            i5 = 0;
                        } else {
                            tLRPC$PhotoSize2 = FileLoader.getClosestPhotoSizeWithSize(messageObject4.photoThumbs, 320);
                            i5 = 1;
                            i4 = 0;
                        }
                        TLRPC$PhotoSize closestPhotoSizeWithSize = FileLoader.getClosestPhotoSizeWithSize(messageObject4.photoThumbs, AndroidUtilities.dp(40.0f));
                        tLObject = messageObject4.photoThumbsObject;
                        TLRPC$PhotoSize tLRPC$PhotoSize3 = closestPhotoSizeWithSize;
                        i2 = i5;
                        i3 = i4;
                        tLRPC$PhotoSize = tLRPC$PhotoSize3;
                    } else {
                        i3 = 0;
                        i2 = 1;
                    }
                }
                if (tLRPC$PhotoSize2 == tLRPC$PhotoSize) {
                    tLRPC$PhotoSize = null;
                }
                if (tLRPC$PhotoSize2 == null || (tLRPC$PhotoSize2 instanceof TLRPC$TL_photoSizeEmpty) || (tLRPC$PhotoSize2.location instanceof TLRPC$TL_fileLocationUnavailable) || messageObject4.isAnyKindOfSticker() || (messageObject4 != null && messageObject4.isSecretMedia())) {
                    this.replyImageView.setImageBitmap((Bitmap) null);
                    this.replyImageLocation = null;
                    this.replyImageLocationObject = null;
                    this.replyImageView.setVisibility(4);
                    int dp = AndroidUtilities.dp(52.0f);
                    layoutParams2.leftMargin = dp;
                    layoutParams.leftMargin = dp;
                } else {
                    if (messageObject4 == null || !messageObject4.isRoundVideo()) {
                        this.replyImageView.setRoundRadius(0);
                    } else {
                        this.replyImageView.setRoundRadius(AndroidUtilities.dp(17.0f));
                    }
                    this.replyImageSize = i3;
                    this.replyImageCacheType = i2;
                    this.replyImageLocation = tLRPC$PhotoSize2;
                    this.replyImageThumbLocation = tLRPC$PhotoSize;
                    this.replyImageLocationObject = tLObject;
                    this.replyImageView.setImage(ImageLocation.getForObject(tLRPC$PhotoSize2, tLObject), "50_50", ImageLocation.getForObject(tLRPC$PhotoSize, tLObject), "50_50_b", (String) null, i3, i2, messageObject4);
                    this.replyImageView.setVisibility(0);
                    int dp2 = AndroidUtilities.dp(96.0f);
                    layoutParams2.leftMargin = dp2;
                    layoutParams.leftMargin = dp2;
                }
                this.replyNameTextView.setLayoutParams(layoutParams);
                this.replyObjectTextView.setLayoutParams(layoutParams2);
                this.chatActivityEnterView.showTopView(true, z7);
            }
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$showFieldPanel$74 */
    public /* synthetic */ void lambda$showFieldPanel$74$ChatActivity() {
        ChatActivityEnterView chatActivityEnterView2 = this.chatActivityEnterView;
        if (chatActivityEnterView2 != null) {
            chatActivityEnterView2.openKeyboard();
        }
    }

    private void moveScrollToLastMessage() {
        if (this.chatListView != null && !this.messages.isEmpty() && !this.pinchToZoomHelper.isInOverlayMode()) {
            this.chatLayoutManager.scrollToPositionWithOffset(0, 0);
            this.chatListView.stopScroll();
        }
    }

    /* access modifiers changed from: private */
    public Runnable sendSecretMessageRead(MessageObject messageObject, boolean z) {
        int i;
        MessageObject messageObject2 = messageObject;
        if (messageObject2 == null || messageObject.isOut() || !messageObject.isSecretMedia()) {
            return null;
        }
        TLRPC$Message tLRPC$Message = messageObject2.messageOwner;
        if (tLRPC$Message.destroyTime != 0 || (i = tLRPC$Message.ttl) <= 0) {
            return null;
        }
        tLRPC$Message.destroyTime = i + getConnectionsManager().getCurrentTime();
        if (!z) {
            return new Runnable(messageObject2) {
                public final /* synthetic */ MessageObject f$1;

                {
                    this.f$1 = r2;
                }

                public final void run() {
                    ChatActivity.this.lambda$sendSecretMessageRead$75$ChatActivity(this.f$1);
                }
            };
        }
        if (this.currentEncryptedChat != null) {
            MessagesController messagesController = getMessagesController();
            long j = this.dialog_id;
            TLRPC$Message tLRPC$Message2 = messageObject2.messageOwner;
            messagesController.markMessageAsRead(j, tLRPC$Message2.random_id, tLRPC$Message2.ttl);
        } else {
            getMessagesController().markMessageAsRead(messageObject.getId(), ChatObject.isChannel(this.currentChat) ? this.currentChat.id : 0, (TLRPC$InputChannel) null, messageObject2.messageOwner.ttl, 0);
        }
        return null;
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$sendSecretMessageRead$75 */
    public /* synthetic */ void lambda$sendSecretMessageRead$75$ChatActivity(MessageObject messageObject) {
        if (this.currentEncryptedChat != null) {
            MessagesController messagesController = getMessagesController();
            long j = this.dialog_id;
            TLRPC$Message tLRPC$Message = messageObject.messageOwner;
            messagesController.markMessageAsRead(j, tLRPC$Message.random_id, tLRPC$Message.ttl);
            return;
        }
        getMessagesController().markMessageAsRead(messageObject.getId(), ChatObject.isChannel(this.currentChat) ? this.currentChat.id : 0, (TLRPC$InputChannel) null, messageObject.messageOwner.ttl, 0);
    }

    private void clearChatData() {
        this.messages.clear();
        this.messagesByDays.clear();
        this.waitingForLoad.clear();
        this.groupedMessagesMap.clear();
        this.threadMessageAdded = false;
        ChatActivityAdapter chatActivityAdapter = this.chatAdapter;
        if (chatActivityAdapter != null) {
            showProgressView(chatActivityAdapter.botInfoRow < 0);
        }
        RecyclerListView recyclerListView = this.chatListView;
        if (recyclerListView != null) {
            recyclerListView.setEmptyView((View) null);
        }
        for (int i = 0; i < 2; i++) {
            this.messagesDict[i].clear();
            if (this.currentEncryptedChat == null) {
                this.maxMessageId[i] = Integer.MAX_VALUE;
                this.minMessageId[i] = Integer.MIN_VALUE;
            } else {
                this.maxMessageId[i] = Integer.MIN_VALUE;
                this.minMessageId[i] = Integer.MAX_VALUE;
            }
            this.maxDate[i] = Integer.MIN_VALUE;
            this.minDate[i] = 0;
            this.endReached[i] = false;
            this.cacheEndReached[i] = false;
            this.forwardEndReached[i] = true;
        }
        this.first = true;
        this.firstLoading = true;
        this.loading = true;
        this.loadingForward = false;
        this.waitingForReplyMessageLoad = false;
        this.startLoadFromMessageId = 0;
        this.showScrollToMessageError = false;
        this.last_message_id = 0;
        this.unreadMessageObject = null;
        this.createUnreadMessageAfterId = 0;
        this.createUnreadMessageAfterIdLoading = false;
        this.needSelectFromMessageId = false;
        ChatActivityAdapter chatActivityAdapter2 = this.chatAdapter;
        if (chatActivityAdapter2 != null) {
            chatActivityAdapter2.notifyDataSetChanged(false);
        }
    }

    private void scrollToLastMessage() {
        if (!this.chatListView.isFastScrollAnimationRunning()) {
            this.forceNextPinnedMessageId = 0;
            this.nextScrollToMessageId = 0;
            this.forceScrollToFirst = false;
            this.chatScrollHelper.setScrollDirection(0);
            if (!this.forwardEndReached[0] || this.first_unread_id != 0 || this.startLoadFromMessageId != 0) {
                AlertDialog alertDialog = this.progressDialog;
                if (alertDialog != null) {
                    alertDialog.dismiss();
                }
                updatePinnedListButton(false);
                AlertDialog alertDialog2 = new AlertDialog(getParentActivity(), 3);
                this.progressDialog = alertDialog2;
                alertDialog2.setOnCancelListener(this.postponedScrollCancelListener);
                this.progressDialog.showDelayed(1000);
                this.postponedScrollToLastMessageQueryIndex = this.lastLoadIndex;
                this.postponedScrollMessageId = 0;
                this.postponedScrollIsCanceled = false;
                this.waitingForLoad.clear();
                this.waitingForLoad.add(Integer.valueOf(this.lastLoadIndex));
                MessagesController messagesController = getMessagesController();
                long j = this.dialog_id;
                long j2 = this.mergeDialogId;
                int i = this.classGuid;
                boolean isChannel = ChatObject.isChannel(this.currentChat);
                int i2 = this.chatMode;
                int i3 = this.threadMessageId;
                int i4 = this.replyMaxReadId;
                int i5 = this.lastLoadIndex;
                this.lastLoadIndex = i5 + 1;
                messagesController.loadMessages(j, j2, false, 30, 0, 0, true, 0, i, 0, 0, isChannel, i2, i3, i4, i5);
            } else if (this.chatLayoutManager.findFirstCompletelyVisibleItemPosition() == 0) {
                this.canShowPagedownButton = false;
                updatePagedownButtonVisibility(true);
                removeSelectedMessageHighlight();
                updateVisibleRows();
            } else {
                this.chatAdapter.updateRowsSafe();
                MessageObject unused = this.chatScrollHelperCallback.scrollTo = null;
                this.chatScrollHelper.scrollToPosition(0, 0, true, true);
            }
        }
    }

    public void updateTextureViewPosition(boolean z) {
        boolean z2;
        MessageObject playingMessageObject;
        if (this.fragmentView != null && !this.paused) {
            int childCount = this.chatListView.getChildCount();
            int i = 0;
            while (true) {
                if (i >= childCount) {
                    z2 = false;
                    break;
                }
                View childAt = this.chatListView.getChildAt(i);
                if (childAt instanceof ChatMessageCell) {
                    ChatMessageCell chatMessageCell = (ChatMessageCell) childAt;
                    MessageObject messageObject = chatMessageCell.getMessageObject();
                    if (this.videoPlayerContainer != null && ((messageObject.isRoundVideo() || messageObject.isVideo()) && MediaController.getInstance().isPlayingMessage(messageObject))) {
                        ImageReceiver photoImage = chatMessageCell.getPhotoImage();
                        this.videoPlayerContainer.setTranslationX(photoImage.getImageX() + chatMessageCell.getX());
                        this.videoPlayerContainer.setTranslationY(((chatMessageCell.getY() + photoImage.getImageY()) + this.chatListView.getY()) - ((float) this.videoPlayerContainer.getTop()));
                        FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) this.videoPlayerContainer.getLayoutParams();
                        if (messageObject.isRoundVideo()) {
                            this.videoPlayerContainer.setTag(NUM, (Object) null);
                            int i2 = layoutParams.width;
                            int i3 = AndroidUtilities.roundMessageSize;
                            if (!(i2 == i3 && layoutParams.height == i3)) {
                                layoutParams.height = i3;
                                layoutParams.width = i3;
                                this.aspectRatioFrameLayout.setResizeMode(0);
                                this.videoPlayerContainer.setLayoutParams(layoutParams);
                            }
                            float f = ((float) (AndroidUtilities.roundMessageSize + (AndroidUtilities.roundMessageInset * 2))) / ((float) AndroidUtilities.roundMessageSize);
                            this.videoTextureView.setScaleX(f);
                            this.videoTextureView.setScaleY(f);
                        } else {
                            this.videoPlayerContainer.setTag(NUM, photoImage);
                            if (!(((float) layoutParams.width) == photoImage.getImageWidth() && ((float) layoutParams.height) == photoImage.getImageHeight())) {
                                this.aspectRatioFrameLayout.setResizeMode(3);
                                layoutParams.width = (int) photoImage.getImageWidth();
                                layoutParams.height = (int) photoImage.getImageHeight();
                                this.videoPlayerContainer.setLayoutParams(layoutParams);
                            }
                            this.videoTextureView.setScaleX(1.0f);
                            this.videoTextureView.setScaleY(1.0f);
                        }
                        this.fragmentView.invalidate();
                        this.videoPlayerContainer.invalidate();
                        z2 = true;
                    }
                }
                i++;
            }
            if (z && this.videoPlayerContainer != null && (playingMessageObject = MediaController.getInstance().getPlayingMessageObject()) != null && playingMessageObject.eventId == 0) {
                if (z2) {
                    MediaController.getInstance().setCurrentVideoVisible(true);
                    if (playingMessageObject.isRoundVideo() || this.scrollToVideo) {
                        scrollToMessageId(playingMessageObject.getId(), 0, false, 0, true, 0);
                        return;
                    }
                    this.chatListView.invalidate();
                } else if (!this.checkTextureViewPosition || !playingMessageObject.isVideo()) {
                    this.videoPlayerContainer.setTranslationY((float) ((-AndroidUtilities.roundMessageSize) - 100));
                    this.fragmentView.invalidate();
                    if (playingMessageObject == null) {
                        return;
                    }
                    if (!playingMessageObject.isRoundVideo() && !playingMessageObject.isVideo()) {
                        return;
                    }
                    if (this.checkTextureViewPosition || PipRoundVideoView.getInstance() != null) {
                        MediaController.getInstance().setCurrentVideoVisible(false);
                        return;
                    }
                    scrollToMessageId(playingMessageObject.getId(), 0, false, 0, true, 0);
                } else {
                    MediaController.getInstance().cleanupPlayer(true, true);
                }
            }
        }
    }

    public void invalidateMessagesVisiblePart() {
        this.invalidateMessagesVisiblePart = true;
        View view = this.fragmentView;
        if (view != null) {
            view.invalidate();
        }
    }

    private Integer findClosest(ArrayList<Integer> arrayList, int i, int[] iArr) {
        if (arrayList.isEmpty()) {
            return 0;
        }
        Integer num = arrayList.get(0);
        if (i >= num.intValue()) {
            iArr[0] = 0;
            return num;
        }
        int size = arrayList.size();
        int i2 = size - 1;
        Integer num2 = arrayList.get(i2);
        if (i <= num2.intValue()) {
            iArr[0] = i2;
            return num2;
        }
        int i3 = 0;
        int i4 = 0;
        while (i3 < size) {
            i4 = (i3 + size) / 2;
            Integer num3 = arrayList.get(i4);
            if (num3.intValue() == i) {
                iArr[0] = i4;
                return num3;
            } else if (i < num3.intValue()) {
                if (i4 > 0) {
                    int i5 = i4 - 1;
                    Integer num4 = arrayList.get(i5);
                    if (i > num4.intValue()) {
                        iArr[0] = i5;
                        return num4;
                    }
                }
                i3 = i4 + 1;
            } else if (i4 <= 0 || i >= arrayList.get(i4 - 1).intValue()) {
                size = i4;
            } else {
                iArr[0] = i4;
                return num3;
            }
        }
        iArr[0] = i4;
        return arrayList.get(i4);
    }

    public void updateMessagesVisiblePart(boolean z) {
        Integer num;
        char c;
        int i;
        boolean z2;
        Object obj;
        Object obj2;
        MessageObject messageObject;
        int indexOf;
        int i2;
        int i3;
        boolean z3;
        float f;
        int i4;
        int i5;
        MessageObject messageObject2;
        int i6;
        MessageObject messageObject3;
        TLRPC$Chat tLRPC$Chat;
        RecyclerListView recyclerListView = this.chatListView;
        if (recyclerListView != null) {
            int childCount = recyclerListView.getChildCount();
            int measuredHeight = this.chatListView.getMeasuredHeight();
            boolean z4 = this.threadMessageVisible;
            int i7 = this.currentPinnedMessageId;
            this.threadMessageVisible = this.firstLoading;
            long j = (long) this.threadMessageId;
            if (j == 0 || (tLRPC$Chat = this.currentChat) == null) {
                num = (Integer) getMessagesController().dialogs_read_inbox_max.get(Long.valueOf(this.dialog_id));
            } else {
                j |= ((long) tLRPC$Chat.id) << 32;
                num = Integer.valueOf(this.replyMaxReadId);
            }
            if (num == null) {
                num = 0;
            }
            int heightWithKeyboard = (this.contentView.getHeightWithKeyboard() - (this.inPreviewMode ? 0 : AndroidUtilities.dp(48.0f))) - this.chatListView.getTop();
            this.pollsToCheck.clear();
            float f2 = this.chatListViewPaddingTop;
            long j2 = j;
            int i8 = Integer.MIN_VALUE;
            int i9 = Integer.MAX_VALUE;
            int i10 = Integer.MAX_VALUE;
            int i11 = Integer.MAX_VALUE;
            int i12 = 0;
            int i13 = Integer.MIN_VALUE;
            int i14 = Integer.MIN_VALUE;
            boolean z5 = false;
            MessageObject messageObject4 = null;
            View view = null;
            View view2 = null;
            ChatActionCell chatActionCell = null;
            while (i12 < childCount) {
                View childAt = this.chatListView.getChildAt(i12);
                int i15 = childCount;
                int y = (int) childAt.getY();
                int i16 = i7;
                float measuredHeight2 = (float) (y + childAt.getMeasuredHeight());
                boolean z6 = z4;
                if (measuredHeight2 <= f2 - ((float) this.chatListViewPaddingVisibleOffset) || y > this.chatListView.getMeasuredHeight()) {
                    i2 = measuredHeight;
                    i3 = i12;
                    i10 = i10;
                    i9 = i9;
                } else {
                    boolean z7 = childAt instanceof ChatMessageCell;
                    if (z7) {
                        i3 = i12;
                        ChatMessageCell chatMessageCell = (ChatMessageCell) childAt;
                        i4 = i10;
                        MessageObject messageObject5 = chatMessageCell.getMessageObject();
                        z3 = z7;
                        f = measuredHeight2;
                        if (messageObject5.getDialogId() == this.dialog_id && messageObject5.getId() > i14) {
                            i14 = messageObject5.getId();
                            messageObject4 = messageObject5;
                        }
                        int i17 = y >= 0 ? 0 : -y;
                        int measuredHeight3 = chatMessageCell.getMeasuredHeight();
                        if (measuredHeight3 > measuredHeight) {
                            measuredHeight3 = i17 + measuredHeight;
                        }
                        i2 = measuredHeight;
                        int keyboardHeight = this.contentView.getKeyboardHeight();
                        int i18 = i14;
                        if ((keyboardHeight < AndroidUtilities.dp(20.0f) && this.chatActivityEnterView.isPopupShowing()) || this.chatActivityEnterView.pannelAniamationInProgress()) {
                            keyboardHeight = this.chatActivityEnterView.getEmojiPadding();
                        }
                        chatMessageCell.setVisiblePart(i17, measuredHeight3 - i17, heightWithKeyboard, (float) keyboardHeight);
                        if (!this.threadMessageVisible && (messageObject3 = this.threadMessageObject) != null && messageObject5 == messageObject3 && ((float) chatMessageCell.getBottom()) > this.chatListViewPaddingTop) {
                            this.threadMessageVisible = true;
                        }
                        if (this.videoPlayerContainer != null && ((messageObject5.isVideo() || messageObject5.isRoundVideo()) && MediaController.getInstance().isPlayingMessage(messageObject5))) {
                            ImageReceiver photoImage = chatMessageCell.getPhotoImage();
                            if (((float) y) + photoImage.getImageY2() < 0.0f) {
                                z5 = false;
                            } else {
                                this.videoPlayerContainer.setTranslationX(photoImage.getImageX() + chatMessageCell.getX());
                                this.videoPlayerContainer.setTranslationY(((chatMessageCell.getY() + photoImage.getImageY()) + this.chatListView.getY()) - ((float) this.videoPlayerContainer.getTop()));
                                this.fragmentView.invalidate();
                                this.videoPlayerContainer.invalidate();
                                z5 = true;
                            }
                        }
                        i5 = i9;
                        messageObject2 = messageObject5;
                        i14 = i18;
                    } else {
                        i2 = measuredHeight;
                        z3 = z7;
                        f = measuredHeight2;
                        i4 = i10;
                        i3 = i12;
                        if (childAt instanceof ChatActionCell) {
                            messageObject2 = ((ChatActionCell) childAt).getMessageObject();
                            if (messageObject2 != null) {
                                i5 = i9;
                                if (messageObject2.getDialogId() == this.dialog_id && messageObject2.getId() > i14) {
                                    i14 = Math.max(i14, messageObject2.getId());
                                }
                            } else {
                                i5 = i9;
                            }
                        } else {
                            i5 = i9;
                            if (childAt instanceof BotHelpCell) {
                                childAt.invalidate();
                            }
                            messageObject2 = null;
                        }
                    }
                    if (!(this.chatMode == 1 || messageObject2 == null)) {
                        int id = messageObject2.getId();
                        if ((!isThreadChat() && ((!messageObject2.isOut() && messageObject2.isUnread()) || (messageObject2.messageOwner.from_scheduled && id > num.intValue()))) || (id > 0 && isThreadChat() && id > num.intValue() && id > this.replyMaxReadId)) {
                            if (id > 0) {
                                i8 = Math.max(i8, messageObject2.getId());
                            }
                            if (id < 0 && !isThreadChat()) {
                                i11 = Math.min(i11, messageObject2.getId());
                            }
                            i13 = Math.max(i13, messageObject2.messageOwner.date);
                        }
                        if (messageObject2.type == 17 && messageObject2.getId() > 0) {
                            this.pollsToCheck.add(messageObject2);
                        }
                    }
                    if (f <= f2) {
                        if ((childAt instanceof ChatActionCell) && messageObject2.isDateObject) {
                            childAt.setAlpha(0.0f);
                        }
                        i9 = i5;
                        i10 = i4;
                    } else {
                        int bottom = childAt.getBottom();
                        if (bottom < i5) {
                            if (z3 || (childAt instanceof ChatActionCell)) {
                                chatActionCell = childAt;
                            }
                            i9 = bottom;
                            view2 = childAt;
                        } else {
                            i9 = i5;
                        }
                        ChatListItemAnimator chatListItemAnimator2 = this.chatListItemAnimator;
                        if ((chatListItemAnimator2 == null || (!chatListItemAnimator2.willRemoved(childAt) && !this.chatListItemAnimator.willAddedFromAlpha(childAt))) && (childAt instanceof ChatActionCell) && messageObject2.isDateObject) {
                            if (childAt.getAlpha() != 1.0f) {
                                childAt.setAlpha(1.0f);
                            }
                            i6 = i4;
                            if (bottom < i6) {
                                i10 = bottom;
                                view = childAt;
                            }
                        } else {
                            i6 = i4;
                        }
                        i10 = i6;
                    }
                }
                i12 = i3 + 1;
                childCount = i15;
                z4 = z6;
                i7 = i16;
                measuredHeight = i2;
            }
            boolean z8 = z4;
            int i19 = i7;
            this.currentPinnedMessageId = 0;
            if (!this.pinnedMessageIds.isEmpty()) {
                if (i14 == Integer.MIN_VALUE) {
                    int i20 = this.startLoadFromMessageId;
                    if (i20 != 0) {
                        i14 = i20;
                    } else if (!this.pinnedMessageIds.isEmpty()) {
                        i14 = this.pinnedMessageIds.get(0).intValue() + 1;
                    }
                } else if (i14 < 0 && (indexOf = this.messages.indexOf(messageObject4)) >= 0) {
                    int i21 = indexOf - 1;
                    while (true) {
                        if (i21 < 0) {
                            break;
                        }
                        MessageObject messageObject6 = this.messages.get(i21);
                        if (messageObject6.getId() > 0) {
                            i14 = messageObject6.getId();
                            break;
                        }
                        i21--;
                    }
                    if (i14 < 0) {
                        int i22 = indexOf + 1;
                        int size = this.messages.size();
                        while (true) {
                            if (i22 >= size) {
                                break;
                            }
                            MessageObject messageObject7 = this.messages.get(i22);
                            if (messageObject7.getId() > 0) {
                                i14 = messageObject7.getId();
                                break;
                            }
                            i22++;
                        }
                    }
                }
                ArrayList<Integer> arrayList = this.pinnedMessageIds;
                int i23 = this.forceNextPinnedMessageId;
                if (i23 != 0) {
                    i14 = i23;
                }
                this.currentPinnedMessageId = findClosest(arrayList, i14, this.currentPinnedMessageIndex).intValue();
                if (!this.loadingPinnedMessagesList && !this.pinnedEndReached && !this.pinnedMessageIds.isEmpty() && this.currentPinnedMessageIndex[0] > this.pinnedMessageIds.size() - 2) {
                    MediaDataController mediaDataController = getMediaDataController();
                    long j3 = this.dialog_id;
                    ArrayList<Integer> arrayList2 = this.pinnedMessageIds;
                    mediaDataController.loadPinnedMessages(j3, arrayList2.get(arrayList2.size() - 1).intValue(), 0);
                    this.loadingPinnedMessagesList = true;
                }
            }
            getMessagesController().addToPollsQueue(this.dialog_id, this.pollsToCheck);
            if (this.videoPlayerContainer != null) {
                if (!z5) {
                    MessageObject playingMessageObject = MediaController.getInstance().getPlayingMessageObject();
                    if (playingMessageObject != null) {
                        if (!this.checkTextureViewPosition || !playingMessageObject.isVideo()) {
                            this.videoPlayerContainer.setTranslationY((float) ((-AndroidUtilities.roundMessageSize) - 100));
                            this.fragmentView.invalidate();
                            if ((playingMessageObject.isRoundVideo() || playingMessageObject.isVideo()) && playingMessageObject.eventId == 0 && this.checkTextureViewPosition && !this.chatListView.isFastScrollAnimationRunning()) {
                                MediaController.getInstance().setCurrentVideoVisible(false);
                            }
                        } else {
                            MediaController.getInstance().cleanupPlayer(true, true);
                        }
                    }
                } else {
                    MediaController.getInstance().setCurrentVideoVisible(true);
                }
            }
            ChatMessageCell chatMessageCell2 = chatActionCell;
            if (chatMessageCell2 != null) {
                if (chatMessageCell2 instanceof ChatMessageCell) {
                    messageObject = chatMessageCell2.getMessageObject();
                } else {
                    messageObject = ((ChatActionCell) chatMessageCell2).getMessageObject();
                }
                this.floatingDateView.setCustomDate(messageObject.messageOwner.date, this.chatMode == 1, true);
            }
            this.currentFloatingDateOnScreen = false;
            View view3 = view2;
            this.currentFloatingTopIsNotMessage = !(view3 instanceof ChatMessageCell) && !(view3 instanceof ChatActionCell);
            View view4 = view;
            if (view4 != null) {
                if (view4.getY() > f2 || this.currentFloatingTopIsNotMessage) {
                    if (view4.getAlpha() != 1.0f) {
                        view4.setAlpha(1.0f);
                    }
                    if (this.chatListView.getChildAdapterPosition(view4) == (this.chatAdapter.messagesStartRow + this.messages.size()) - 1) {
                        if (view4.getAlpha() != 1.0f) {
                            view4.setAlpha(1.0f);
                        }
                        AnimatorSet animatorSet = this.floatingDateAnimation;
                        if (animatorSet != null) {
                            animatorSet.cancel();
                            obj2 = null;
                            this.floatingDateAnimation = null;
                        } else {
                            obj2 = null;
                        }
                        this.floatingDateView.setTag(obj2);
                        this.floatingDateView.setAlpha(0.0f);
                        this.currentFloatingDateOnScreen = false;
                    } else {
                        hideFloatingDateView(!this.currentFloatingTopIsNotMessage);
                    }
                    z2 = false;
                } else {
                    if (view4.getAlpha() != 0.0f) {
                        view4.setAlpha(0.0f);
                    }
                    z2 = true;
                }
                float y2 = (view4.getY() + ((float) view4.getMeasuredHeight())) - f2;
                if (y2 <= ((float) this.floatingDateView.getMeasuredHeight()) || y2 >= ((float) (this.floatingDateView.getMeasuredHeight() * 2))) {
                    this.floatingDateViewOffset = 0.0f;
                } else if (this.chatListView.getChildAdapterPosition(view4) == (this.chatAdapter.messagesStartRow + this.messages.size()) - 1) {
                    if (view4.getAlpha() != 1.0f) {
                        view4.setAlpha(1.0f);
                    }
                    AnimatorSet animatorSet2 = this.floatingDateAnimation;
                    if (animatorSet2 != null) {
                        animatorSet2.cancel();
                        obj = null;
                        this.floatingDateAnimation = null;
                    } else {
                        obj = null;
                    }
                    this.floatingDateView.setTag(obj);
                    this.floatingDateView.setAlpha(0.0f);
                    z2 = false;
                } else {
                    this.floatingDateViewOffset = ((float) ((-this.floatingDateView.getMeasuredHeight()) * 2)) + y2;
                }
                if (z2) {
                    AnimatorSet animatorSet3 = this.floatingDateAnimation;
                    if (animatorSet3 != null) {
                        animatorSet3.cancel();
                        this.floatingDateAnimation = null;
                    }
                    if (this.floatingDateView.getTag() == null) {
                        this.floatingDateView.setTag(1);
                    }
                    if (this.floatingDateView.getAlpha() != 1.0f) {
                        this.floatingDateView.setAlpha(1.0f);
                    }
                    this.currentFloatingDateOnScreen = true;
                }
            } else {
                hideFloatingDateView(true);
                this.floatingDateViewOffset = 0.0f;
            }
            if (!isThreadChat()) {
                int i24 = this.currentPinnedMessageId;
                if (i24 != 0) {
                    MessageObject messageObject8 = this.pinnedMessageObjects.get(Integer.valueOf(i24));
                    if (messageObject8 == null) {
                        messageObject8 = this.messagesDict[0].get(this.currentPinnedMessageId);
                    }
                    if (messageObject8 == null) {
                        if (this.loadingPinnedMessages.indexOfKey(this.currentPinnedMessageId) < 0) {
                            this.loadingPinnedMessages.put(this.currentPinnedMessageId, Boolean.TRUE);
                            ArrayList arrayList3 = new ArrayList();
                            arrayList3.add(Integer.valueOf(this.currentPinnedMessageId));
                            getMediaDataController().loadPinnedMessages(this.dialog_id, ChatObject.isChannel(this.currentChat) ? this.currentChat.id : 0, arrayList3, true);
                        }
                        i = i19;
                        this.currentPinnedMessageId = i;
                    } else {
                        i = i19;
                    }
                } else {
                    i = i19;
                    if (i != 0 && !this.pinnedMessageIds.isEmpty()) {
                        this.currentPinnedMessageId = i;
                    }
                }
                int i25 = this.currentPinnedMessageId;
                if (i != i25) {
                    updatePinnedMessageView(this.openAnimationStartTime != 0 && SystemClock.elapsedRealtime() >= this.openAnimationStartTime + 150, i == 0 ? 0 : i > i25 ? 1 : 2);
                } else {
                    updatePinnedListButton(this.openAnimationStartTime != 0 && SystemClock.elapsedRealtime() >= this.openAnimationStartTime + 150);
                }
            } else if (z8 != this.threadMessageVisible) {
                updatePinnedMessageView(this.openAnimationStartTime != 0 && SystemClock.elapsedRealtime() >= this.openAnimationStartTime + 150);
            }
            ChatActionCell chatActionCell2 = this.floatingDateView;
            if (chatActionCell2 != null) {
                chatActionCell2.setTranslationY(((this.chatListView.getTranslationY() + this.chatListViewPaddingTop) + this.floatingDateViewOffset) - ((float) AndroidUtilities.dp(4.0f)));
            }
            invalidateChatListViewTopPadding();
            if (!this.firstLoading && !this.paused && !this.inPreviewMode && this.chatMode == 0 && !getMessagesController().ignoreSetOnline) {
                int i26 = 0;
                if (i8 != Integer.MIN_VALUE || i11 != Integer.MAX_VALUE) {
                    c = 0;
                    int i27 = 0;
                    for (int i28 = 0; i28 < this.messages.size(); i28++) {
                        MessageObject messageObject9 = this.messages.get(i28);
                        int id2 = messageObject9.getId();
                        if (i8 != Integer.MIN_VALUE && id2 > 0 && id2 <= i8 && ((messageObject9.messageOwner.from_scheduled && id2 > num.intValue()) || (messageObject9.isUnread() && !messageObject9.isOut()))) {
                            if (messageObject9.messageOwner.from_scheduled) {
                                i26++;
                            } else {
                                messageObject9.setIsRead();
                            }
                            i27++;
                        }
                        if (i11 != Integer.MAX_VALUE && id2 < 0 && id2 >= i11 && messageObject9.isUnread()) {
                            messageObject9.setIsRead();
                            i27++;
                        }
                    }
                    if (!isThreadChat()) {
                        if ((!this.forwardEndReached[0] || i8 != this.minMessageId[0]) && i11 != this.minMessageId[0]) {
                            int i29 = this.newUnreadMessageCount - i27;
                            this.newUnreadMessageCount = i29;
                            if (i29 < 0) {
                                this.newUnreadMessageCount = 0;
                            }
                        } else {
                            this.newUnreadMessageCount = 0;
                        }
                    }
                    if (z) {
                        AndroidUtilities.runOnUIThread(new Runnable() {
                            public final void run() {
                                ChatActivity.this.inlineUpdate1();
                            }
                        });
                    } else {
                        inlineUpdate1();
                    }
                    MessagesController messagesController = getMessagesController();
                    long j4 = this.dialog_id;
                    int[] iArr = this.minMessageId;
                    messagesController.markDialogAsRead(j4, i8, i11, i13, false, j2, i27, i8 == iArr[0] || i11 == iArr[0], i26);
                    this.firstUnreadSent = true;
                } else if (!this.firstUnreadSent && this.currentEncryptedChat == null && this.chatLayoutManager.findFirstVisibleItemPosition() == 0) {
                    c = 0;
                    this.newUnreadMessageCount = 0;
                    if (z) {
                        AndroidUtilities.runOnUIThread(new Runnable() {
                            public final void run() {
                                ChatActivity.this.inlineUpdate2();
                            }
                        });
                    } else {
                        inlineUpdate2();
                    }
                    MessagesController messagesController2 = getMessagesController();
                    long j5 = this.dialog_id;
                    int[] iArr2 = this.minMessageId;
                    messagesController2.markDialogAsRead(j5, iArr2[0], iArr2[0], this.maxDate[0], false, j2, 0, true, 0);
                    this.firstUnreadSent = true;
                } else {
                    c = 0;
                }
                if (j2 != 0 && i8 > 0 && this.replyMaxReadId != i8) {
                    this.replyMaxReadId = i8;
                    getMessagesStorage().updateRepliesMaxReadId(this.replyOriginalChat.id, this.replyOriginalMessageId, this.replyMaxReadId, true);
                    NotificationCenter notificationCenter = getNotificationCenter();
                    int i30 = NotificationCenter.commentsRead;
                    Object[] objArr = new Object[3];
                    objArr[c] = Integer.valueOf(this.replyOriginalChat.id);
                    objArr[1] = Integer.valueOf(this.replyOriginalMessageId);
                    objArr[2] = Integer.valueOf(this.replyMaxReadId);
                    notificationCenter.postNotificationName(i30, objArr);
                }
            }
        }
    }

    /* access modifiers changed from: private */
    public void inlineUpdate1() {
        int i = this.prevSetUnreadCount;
        int i2 = this.newUnreadMessageCount;
        if (i != i2) {
            this.prevSetUnreadCount = i2;
            this.pagedownButtonCounter.setCount(i2, this.openAnimationEnded);
        }
    }

    /* access modifiers changed from: private */
    public void inlineUpdate2() {
        int i = this.prevSetUnreadCount;
        int i2 = this.newUnreadMessageCount;
        if (i != i2) {
            this.prevSetUnreadCount = i2;
            this.pagedownButtonCounter.setCount(i2, true);
        }
    }

    /* access modifiers changed from: private */
    public void toggleMute(boolean z) {
        if (getMessagesController().isDialogMuted(this.dialog_id)) {
            SharedPreferences.Editor edit = MessagesController.getNotificationsSettings(this.currentAccount).edit();
            edit.putInt("notify2_" + this.dialog_id, 0);
            getMessagesStorage().setDialogFlags(this.dialog_id, 0);
            edit.commit();
            TLRPC$Dialog tLRPC$Dialog = getMessagesController().dialogs_dict.get(this.dialog_id);
            if (tLRPC$Dialog != null) {
                tLRPC$Dialog.notify_settings = new TLRPC$TL_peerNotifySettings();
            }
            getNotificationsController().updateServerNotificationsSettings(this.dialog_id);
            if (!z) {
                BulletinFactory.createMuteBulletin((BaseFragment) this, false).show();
            }
        } else if (z) {
            SharedPreferences.Editor edit2 = MessagesController.getNotificationsSettings(this.currentAccount).edit();
            edit2.putInt("notify2_" + this.dialog_id, 2);
            getMessagesStorage().setDialogFlags(this.dialog_id, 1);
            edit2.commit();
            TLRPC$Dialog tLRPC$Dialog2 = getMessagesController().dialogs_dict.get(this.dialog_id);
            if (tLRPC$Dialog2 != null) {
                TLRPC$TL_peerNotifySettings tLRPC$TL_peerNotifySettings = new TLRPC$TL_peerNotifySettings();
                tLRPC$Dialog2.notify_settings = tLRPC$TL_peerNotifySettings;
                tLRPC$TL_peerNotifySettings.mute_until = Integer.MAX_VALUE;
            }
            getNotificationsController().updateServerNotificationsSettings(this.dialog_id);
            getNotificationsController().removeNotificationsForDialog(this.dialog_id);
        } else {
            BottomSheet createMuteAlert = AlertsCreator.createMuteAlert(this, this.dialog_id);
            createMuteAlert.setCalcMandatoryInsets(isKeyboardVisible());
            showDialog(createMuteAlert);
        }
    }

    private int getScrollOffsetForMessage(MessageObject messageObject) {
        return (int) Math.max((float) (-AndroidUtilities.dp(2.0f)), ((((float) this.chatListView.getMeasuredHeight()) - this.chatListViewPaddingTop) - ((float) getHeightForMessage(messageObject))) / 2.0f);
    }

    private int getHeightForMessage(MessageObject messageObject) {
        if (this.dummyMessageCell == null) {
            this.dummyMessageCell = new ChatMessageCell(getParentActivity());
        }
        boolean z = false;
        this.dummyMessageCell.isChat = this.currentChat != null || UserObject.isUserSelf(this.currentUser);
        ChatMessageCell chatMessageCell = this.dummyMessageCell;
        TLRPC$User tLRPC$User = this.currentUser;
        chatMessageCell.isBot = tLRPC$User != null && tLRPC$User.bot;
        if (ChatObject.isChannel(this.currentChat) && this.currentChat.megagroup) {
            z = true;
        }
        chatMessageCell.isMegagroup = z;
        return this.dummyMessageCell.computeHeight(messageObject, this.groupedMessagesMap.get(messageObject.getGroupId()));
    }

    /* access modifiers changed from: private */
    public void startMessageUnselect() {
        Runnable runnable = this.unselectRunnable;
        if (runnable != null) {
            AndroidUtilities.cancelRunOnUIThread(runnable);
        }
        $$Lambda$ChatActivity$0zgnuNS6JAi95coTYdNItIROiD4 r0 = new Runnable() {
            public final void run() {
                ChatActivity.this.lambda$startMessageUnselect$76$ChatActivity();
            }
        };
        this.unselectRunnable = r0;
        AndroidUtilities.runOnUIThread(r0, 1000);
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$startMessageUnselect$76 */
    public /* synthetic */ void lambda$startMessageUnselect$76$ChatActivity() {
        this.highlightMessageId = Integer.MAX_VALUE;
        updateVisibleRows();
        this.unselectRunnable = null;
    }

    /* access modifiers changed from: private */
    public void removeSelectedMessageHighlight() {
        Runnable runnable = this.unselectRunnable;
        if (runnable != null) {
            AndroidUtilities.cancelRunOnUIThread(runnable);
            this.unselectRunnable = null;
        }
        this.highlightMessageId = Integer.MAX_VALUE;
    }

    /* JADX WARNING: Removed duplicated region for block: B:120:0x028c  */
    /* JADX WARNING: Removed duplicated region for block: B:136:0x0158 A[SYNTHETIC] */
    /* JADX WARNING: Removed duplicated region for block: B:47:0x00bf  */
    /* JADX WARNING: Removed duplicated region for block: B:88:0x0192 A[LOOP:1: B:64:0x0116->B:88:0x0192, LOOP_END] */
    /* JADX WARNING: Removed duplicated region for block: B:94:0x01c9  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public void scrollToMessageId(int r26, int r27, boolean r28, int r29, boolean r30, int r31) {
        /*
            r25 = this;
            r0 = r25
            r1 = r26
            r2 = r27
            r3 = r28
            r4 = r29
            r5 = r30
            r6 = r31
            if (r1 == 0) goto L_0x02a5
            int r7 = r0.currentAccount
            org.telegram.messenger.NotificationCenter r7 = org.telegram.messenger.NotificationCenter.getInstance(r7)
            boolean r7 = r7.isAnimationInProgress()
            if (r7 != 0) goto L_0x02a5
            android.app.Activity r7 = r25.getParentActivity()
            if (r7 != 0) goto L_0x0024
            goto L_0x02a5
        L_0x0024:
            int r7 = java.lang.Math.abs(r31)
            r0.forceNextPinnedMessageId = r7
            r8 = 1
            if (r6 <= 0) goto L_0x002f
            r6 = 1
            goto L_0x0030
        L_0x002f:
            r6 = 0
        L_0x0030:
            r0.forceScrollToFirst = r6
            r0.wasManualScroll = r8
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r6 = r0.messagesDict
            r6 = r6[r4]
            java.lang.Object r6 = r6.get(r1)
            org.telegram.messenger.MessageObject r6 = (org.telegram.messenger.MessageObject) r6
            r9 = -1
            if (r2 == 0) goto L_0x0050
            if (r2 >= r1) goto L_0x0045
            r10 = 1
            goto L_0x0046
        L_0x0045:
            r10 = 0
        L_0x0046:
            boolean r11 = r25.isSecretChat()
            if (r11 == 0) goto L_0x004e
            r10 = r10 ^ 1
        L_0x004e:
            r10 = r10 ^ r8
            goto L_0x00b7
        L_0x0050:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r10 = r0.messages
            int r10 = r10.size()
            if (r10 <= 0) goto L_0x00b6
            boolean r10 = r25.isThreadChat()
            if (r10 == 0) goto L_0x0064
            int r10 = r0.threadMessageId
            if (r1 != r10) goto L_0x0064
            r10 = 1
            goto L_0x00b7
        L_0x0064:
            androidx.recyclerview.widget.GridLayoutManagerFixed r10 = r0.chatLayoutManager
            int r10 = r10.findLastVisibleItemPosition()
            androidx.recyclerview.widget.GridLayoutManagerFixed r11 = r0.chatLayoutManager
            int r11 = r11.findFirstVisibleItemPosition()
        L_0x0070:
            if (r11 > r10) goto L_0x00b6
            org.telegram.ui.ChatActivity$ChatActivityAdapter r12 = r0.chatAdapter
            int r12 = r12.messagesStartRow
            if (r11 < r12) goto L_0x00b3
            org.telegram.ui.ChatActivity$ChatActivityAdapter r12 = r0.chatAdapter
            int r12 = r12.messagesEndRow
            if (r11 > r12) goto L_0x00b3
            java.util.ArrayList<org.telegram.messenger.MessageObject> r12 = r0.messages
            org.telegram.ui.ChatActivity$ChatActivityAdapter r13 = r0.chatAdapter
            int r13 = r13.messagesStartRow
            int r13 = r11 - r13
            java.lang.Object r12 = r12.get(r13)
            org.telegram.messenger.MessageObject r12 = (org.telegram.messenger.MessageObject) r12
            int r13 = r12.getId()
            if (r13 != 0) goto L_0x0099
            goto L_0x00b3
        L_0x0099:
            org.telegram.ui.ChatActivity$ChatActivityAdapter r10 = r0.chatAdapter
            int r10 = r10.messagesStartRow
            int r11 = r11 - r10
            int r10 = r12.getId()
            if (r10 >= r1) goto L_0x00a8
            r10 = 1
            goto L_0x00a9
        L_0x00a8:
            r10 = 0
        L_0x00a9:
            boolean r12 = r25.isSecretChat()
            if (r12 == 0) goto L_0x00b1
            r10 = r10 ^ 1
        L_0x00b1:
            r10 = r10 ^ r8
            goto L_0x00b8
        L_0x00b3:
            int r11 = r11 + 1
            goto L_0x0070
        L_0x00b6:
            r10 = -1
        L_0x00b7:
            r11 = 0
        L_0x00b8:
            org.telegram.ui.Components.RecyclerAnimationScrollHelper r12 = r0.chatScrollHelper
            r12.setScrollDirection(r10)
            if (r6 == 0) goto L_0x01c6
            android.util.LongSparseArray<org.telegram.messenger.MessageObject$GroupedMessages> r12 = r0.groupedMessagesMap
            long r13 = r6.getGroupId()
            java.lang.Object r12 = r12.get(r13)
            org.telegram.messenger.MessageObject$GroupedMessages r12 = (org.telegram.messenger.MessageObject.GroupedMessages) r12
            long r13 = r6.getGroupId()
            r15 = 0
            int r17 = (r13 > r15 ? 1 : (r13 == r15 ? 0 : -1))
            if (r17 == 0) goto L_0x00de
            if (r12 == 0) goto L_0x00de
            org.telegram.messenger.MessageObject r12 = r12.findPrimaryMessageObject()
            if (r12 == 0) goto L_0x00de
            r6 = r12
        L_0x00de:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r12 = r0.messages
            int r12 = r12.indexOf(r6)
            if (r12 == r9) goto L_0x01c6
            if (r11 <= 0) goto L_0x00f2
            if (r11 <= r12) goto L_0x00ec
            r10 = 0
            goto L_0x00ed
        L_0x00ec:
            r10 = 1
        L_0x00ed:
            org.telegram.ui.Components.RecyclerAnimationScrollHelper r9 = r0.chatScrollHelper
            r9.setScrollDirection(r10)
        L_0x00f2:
            r25.removeSelectedMessageHighlight()
            if (r3 == 0) goto L_0x00f9
            r0.highlightMessageId = r1
        L_0x00f9:
            org.telegram.ui.ChatActivity$ChatActivityAdapter r9 = r0.chatAdapter
            r9.updateRowsSafe()
            org.telegram.ui.ChatActivity$ChatActivityAdapter r9 = r0.chatAdapter
            int r9 = r9.messagesStartRow
            java.util.ArrayList<org.telegram.messenger.MessageObject> r11 = r0.messages
            int r11 = r11.indexOf(r6)
            int r9 = r9 + r11
            r25.updateVisibleRows()
            org.telegram.ui.Components.RecyclerListView r11 = r0.chatListView
            int r11 = r11.getChildCount()
            r12 = 0
            r13 = 0
        L_0x0116:
            if (r12 >= r11) goto L_0x0196
            org.telegram.ui.Components.RecyclerListView r14 = r0.chatListView
            android.view.View r14 = r14.getChildAt(r12)
            boolean r15 = r14 instanceof org.telegram.ui.Cells.ChatMessageCell
            r8 = 8
            if (r15 == 0) goto L_0x013b
            r15 = r14
            org.telegram.ui.Cells.ChatMessageCell r15 = (org.telegram.ui.Cells.ChatMessageCell) r15
            org.telegram.messenger.MessageObject r15 = r15.getMessageObject()
            if (r15 == 0) goto L_0x0156
            int r15 = r15.getId()
            int r7 = r6.getId()
            if (r15 != r7) goto L_0x0156
            r14.sendAccessibilityEvent(r8)
            goto L_0x0155
        L_0x013b:
            boolean r7 = r14 instanceof org.telegram.ui.Cells.ChatActionCell
            if (r7 == 0) goto L_0x0156
            r7 = r14
            org.telegram.ui.Cells.ChatActionCell r7 = (org.telegram.ui.Cells.ChatActionCell) r7
            org.telegram.messenger.MessageObject r7 = r7.getMessageObject()
            if (r7 == 0) goto L_0x0156
            int r7 = r7.getId()
            int r15 = r6.getId()
            if (r7 != r15) goto L_0x0156
            r14.sendAccessibilityEvent(r8)
        L_0x0155:
            r13 = 1
        L_0x0156:
            if (r13 == 0) goto L_0x0192
            int r7 = r0.getScrollOffsetForMessage(r6)
            int r8 = r14.getTop()
            float r8 = (float) r8
            float r11 = r0.chatListViewPaddingTop
            float r8 = r8 - r11
            float r7 = (float) r7
            float r8 = r8 - r7
            int r7 = (int) r8
            org.telegram.ui.Components.RecyclerListView r8 = r0.chatListView
            int r8 = r8.computeVerticalScrollRange()
            org.telegram.ui.Components.RecyclerListView r11 = r0.chatListView
            int r11 = r11.computeVerticalScrollOffset()
            int r8 = r8 - r11
            org.telegram.ui.Components.RecyclerListView r11 = r0.chatListView
            int r11 = r11.computeVerticalScrollExtent()
            int r8 = r8 - r11
            if (r8 >= 0) goto L_0x017e
            r8 = 0
        L_0x017e:
            if (r7 <= r8) goto L_0x0181
            r7 = r8
        L_0x0181:
            if (r7 == 0) goto L_0x0196
            r8 = 0
            r0.scrollByTouch = r8
            org.telegram.ui.Components.RecyclerListView r11 = r0.chatListView
            r11.smoothScrollBy(r8, r7)
            org.telegram.ui.Components.RecyclerListView r7 = r0.chatListView
            r8 = 2
            r7.setOverScrollMode(r8)
            goto L_0x0196
        L_0x0192:
            int r12 = r12 + 1
            r8 = 1
            goto L_0x0116
        L_0x0196:
            if (r13 != 0) goto L_0x01c4
            int r7 = r0.getScrollOffsetForMessage(r6)
            org.telegram.ui.ChatActivity$ChatScrollCallback r8 = r0.chatScrollHelperCallback
            org.telegram.messenger.MessageObject unused = r8.scrollTo = r6
            org.telegram.ui.ChatActivity$ChatScrollCallback r6 = r0.chatScrollHelperCallback
            r8 = 0
            boolean unused = r6.lastBottom = r8
            org.telegram.ui.ChatActivity$ChatScrollCallback r6 = r0.chatScrollHelperCallback
            int unused = r6.lastItemOffset = r7
            org.telegram.ui.ChatActivity$ChatScrollCallback r6 = r0.chatScrollHelperCallback
            float r11 = r0.chatListViewPaddingTop
            int r11 = (int) r11
            int unused = r6.lastPadding = r11
            org.telegram.ui.Components.RecyclerAnimationScrollHelper r6 = r0.chatScrollHelper
            r6.setScrollDirection(r10)
            org.telegram.ui.Components.RecyclerAnimationScrollHelper r6 = r0.chatScrollHelper
            r10 = 1
            r6.scrollToPosition(r9, r7, r8, r10)
            r0.canShowPagedownButton = r10
            r0.updatePagedownButtonVisibility(r10)
        L_0x01c4:
            r6 = 0
            goto L_0x01c7
        L_0x01c6:
            r6 = 1
        L_0x01c7:
            if (r6 == 0) goto L_0x028c
            boolean r6 = r25.isThreadChat()
            if (r6 == 0) goto L_0x01d7
            int r6 = r0.threadMessageId
            if (r1 != r6) goto L_0x01d7
            r6 = 1
            r0.scrollToThreadMessage = r6
            r1 = 1
        L_0x01d7:
            org.telegram.ui.ActionBar.AlertDialog r6 = r0.progressDialog
            if (r6 == 0) goto L_0x01de
            r6.dismiss()
        L_0x01de:
            int r6 = r0.forceNextPinnedMessageId
            if (r6 == 0) goto L_0x01e4
            r6 = 1
            goto L_0x01e5
        L_0x01e4:
            r6 = 0
        L_0x01e5:
            r0.showPinnedProgress(r6)
            org.telegram.ui.ActionBar.AlertDialog r6 = new org.telegram.ui.ActionBar.AlertDialog
            android.app.Activity r7 = r25.getParentActivity()
            r8 = 3
            r6.<init>(r7, r8)
            r0.progressDialog = r6
            org.telegram.ui.-$$Lambda$ChatActivity$Z7-YWxfNnHk4QqC-tAqe-vfrbWc r7 = new org.telegram.ui.-$$Lambda$ChatActivity$Z7-YWxfNnHk4QqC-tAqe-vfrbWc
            r7.<init>()
            r6.setOnShowListener(r7)
            org.telegram.ui.ActionBar.AlertDialog r6 = r0.progressDialog
            android.content.DialogInterface$OnCancelListener r7 = r0.postponedScrollCancelListener
            r6.setOnCancelListener(r7)
            org.telegram.ui.ActionBar.AlertDialog r6 = r0.progressDialog
            r7 = 400(0x190, double:1.976E-321)
            r6.showDelayed(r7)
            java.util.ArrayList<java.lang.Integer> r6 = r0.waitingForLoad
            r6.clear()
            r25.removeSelectedMessageHighlight()
            r6 = -10000(0xffffffffffffd8f0, float:NaN)
            r0.scrollToMessagePosition = r6
            r0.startLoadFromMessageId = r1
            r6 = 1
            r5 = r5 ^ r6
            r0.showScrollToMessageError = r5
            int r5 = r0.createUnreadMessageAfterId
            if (r1 != r5) goto L_0x0222
            r0.createUnreadMessageAfterIdLoading = r6
        L_0x0222:
            r5 = 0
            r0.postponedScrollIsCanceled = r5
            java.util.ArrayList<java.lang.Integer> r6 = r0.waitingForLoad
            int r7 = r0.lastLoadIndex
            java.lang.Integer r7 = java.lang.Integer.valueOf(r7)
            r6.add(r7)
            int r6 = r0.lastLoadIndex
            r0.postponedScrollToLastMessageQueryIndex = r6
            int[] r6 = r0.minMessageId
            r5 = r6[r5]
            r0.postponedScrollMinMessageId = r5
            r0.postponedScrollMessageId = r1
            org.telegram.messenger.MessagesController r6 = r25.getMessagesController()
            if (r4 != 0) goto L_0x0245
            long r7 = r0.dialog_id
            goto L_0x0247
        L_0x0245:
            long r7 = r0.mergeDialogId
        L_0x0247:
            r9 = 0
            r11 = 0
            boolean r1 = r25.isThreadChat()
            if (r1 != 0) goto L_0x025c
            boolean r1 = org.telegram.messenger.AndroidUtilities.isTablet()
            if (r1 == 0) goto L_0x0257
            goto L_0x025c
        L_0x0257:
            r1 = 20
            r12 = 20
            goto L_0x0260
        L_0x025c:
            r1 = 30
            r12 = 30
        L_0x0260:
            int r13 = r0.startLoadFromMessageId
            r14 = 0
            r15 = 1
            r16 = 0
            int r1 = r0.classGuid
            r17 = r1
            r18 = 3
            r19 = 0
            org.telegram.tgnet.TLRPC$Chat r1 = r0.currentChat
            boolean r20 = org.telegram.messenger.ChatObject.isChannel(r1)
            int r1 = r0.chatMode
            r21 = r1
            int r1 = r0.threadMessageId
            r22 = r1
            int r1 = r0.replyMaxReadId
            r23 = r1
            int r1 = r0.lastLoadIndex
            r24 = r1
            int r1 = r1 + 1
            r0.lastLoadIndex = r1
            r6.loadMessages(r7, r9, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24)
            goto L_0x029e
        L_0x028c:
            org.telegram.ui.Components.RecyclerListView r1 = r0.chatListView
            r5 = 0
            android.view.View r1 = r1.getChildAt(r5)
            if (r1 == 0) goto L_0x029e
            int r1 = r1.getTop()
            if (r1 > 0) goto L_0x029e
            r0.showFloatingDateView(r5)
        L_0x029e:
            r0.returnToMessageId = r2
            r0.returnToLoadIndex = r4
            r0.needSelectFromMessageId = r3
            return
        L_0x02a5:
            int r7 = r0.currentAccount
            org.telegram.messenger.NotificationCenter r7 = org.telegram.messenger.NotificationCenter.getInstance(r7)
            boolean r7 = r7.isAnimationInProgress()
            if (r7 == 0) goto L_0x02cb
            r0.nextScrollToMessageId = r1
            r0.nextScrollFromMessageId = r2
            r0.nextScrollSelect = r3
            r0.nextScrollLoadIndex = r4
            r0.nextScrollForce = r5
            r0.nextScrollForcePinnedMessageId = r6
            int r1 = r0.currentAccount
            org.telegram.messenger.NotificationCenter r1 = org.telegram.messenger.NotificationCenter.getInstance(r1)
            org.telegram.ui.-$$Lambda$ChatActivity$1Txu5w6RE2lTlie2r-YXFSS57Ag r2 = new org.telegram.ui.-$$Lambda$ChatActivity$1Txu5w6RE2lTlie2r-YXFSS57Ag
            r2.<init>()
            r1.doOnIdle(r2)
        L_0x02cb:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.scrollToMessageId(int, int, boolean, int, boolean, int):void");
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$scrollToMessageId$77 */
    public /* synthetic */ void lambda$scrollToMessageId$77$ChatActivity() {
        int i = this.nextScrollToMessageId;
        if (i != 0) {
            scrollToMessageId(i, this.nextScrollFromMessageId, this.nextScrollSelect, this.nextScrollLoadIndex, this.nextScrollForce, this.nextScrollForcePinnedMessageId);
            this.nextScrollToMessageId = 0;
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$scrollToMessageId$78 */
    public /* synthetic */ void lambda$scrollToMessageId$78$ChatActivity(DialogInterface dialogInterface) {
        showPinnedProgress(false);
    }

    private void showPinnedProgress(boolean z) {
        if (!z) {
            Runnable runnable = this.updatePinnedProgressRunnable;
            if (runnable != null) {
                AndroidUtilities.cancelRunOnUIThread(runnable);
            }
            this.updatePinnedProgressRunnable = null;
            this.pinnedPorgressIsShowing = false;
            updatePinnedListButton(true);
        } else if (this.updatePinnedProgressRunnable == null) {
            $$Lambda$ChatActivity$YWRIn_6HLjgQwQte7uUMw67gKF8 r3 = new Runnable() {
                public final void run() {
                    ChatActivity.this.lambda$showPinnedProgress$79$ChatActivity();
                }
            };
            this.updatePinnedProgressRunnable = r3;
            AndroidUtilities.runOnUIThread(r3, 100);
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$showPinnedProgress$79 */
    public /* synthetic */ void lambda$showPinnedProgress$79$ChatActivity() {
        this.pinnedPorgressIsShowing = true;
        updatePinnedListButton(true);
    }

    /* access modifiers changed from: private */
    public void updatePagedownButtonVisibility(boolean z) {
        if (this.pagedownButton != null) {
            if (this.canShowPagedownButton && !this.textSelectionHelper.isSelectionMode() && !this.chatActivityEnterView.isRecordingAudioVideo()) {
                boolean z2 = (!z || (this.openAnimationStartTime != 0 && SystemClock.elapsedRealtime() >= this.openAnimationStartTime + 150)) ? z : false;
                this.pagedownButtonShowedByScroll = false;
                if (this.pagedownButton.getTag() == null) {
                    AnimatorSet animatorSet = this.pagedownButtonAnimation;
                    if (animatorSet != null) {
                        animatorSet.cancel();
                        this.pagedownButtonAnimation = null;
                    }
                    this.pagedownButton.setTag(1);
                    if (z2) {
                        if (this.pagedownButton.getTranslationY() == 0.0f) {
                            this.pagedownButton.setTranslationY((float) AndroidUtilities.dp(100.0f));
                        }
                        this.pagedownButton.setVisibility(0);
                        this.pagedownButtonAnimation = new AnimatorSet();
                        if (this.mentiondownButton.getVisibility() == 0) {
                            this.pagedownButtonAnimation.playTogether(new Animator[]{ObjectAnimator.ofFloat(this.pagedownButton, View.TRANSLATION_Y, new float[]{0.0f}), ObjectAnimator.ofFloat(this.mentiondownButton, View.TRANSLATION_Y, new float[]{(float) (-AndroidUtilities.dp(72.0f))})});
                        } else {
                            this.pagedownButtonAnimation.playTogether(new Animator[]{ObjectAnimator.ofFloat(this.pagedownButton, View.TRANSLATION_Y, new float[]{0.0f})});
                        }
                        this.pagedownButtonAnimation.setDuration(200);
                        this.pagedownButtonAnimation.start();
                        return;
                    }
                    this.mentiondownButton.setTranslationY((float) (-AndroidUtilities.dp(72.0f)));
                    this.pagedownButton.setTranslationY(0.0f);
                    this.pagedownButton.setVisibility(0);
                    return;
                }
                return;
            }
            this.returnToMessageId = 0;
            this.newUnreadMessageCount = 0;
            if (this.pagedownButton.getTag() != null) {
                this.pagedownButton.setTag((Object) null);
                AnimatorSet animatorSet2 = this.pagedownButtonAnimation;
                if (animatorSet2 != null) {
                    animatorSet2.cancel();
                    this.pagedownButtonAnimation = null;
                }
                if (z) {
                    this.pagedownButtonAnimation = new AnimatorSet();
                    if (this.mentiondownButton.getVisibility() == 0) {
                        this.pagedownButtonAnimation.playTogether(new Animator[]{ObjectAnimator.ofFloat(this.pagedownButton, View.TRANSLATION_Y, new float[]{(float) AndroidUtilities.dp(100.0f)}), ObjectAnimator.ofFloat(this.mentiondownButton, View.TRANSLATION_Y, new float[]{0.0f})});
                    } else {
                        this.pagedownButtonAnimation.playTogether(new Animator[]{ObjectAnimator.ofFloat(this.pagedownButton, View.TRANSLATION_Y, new float[]{(float) AndroidUtilities.dp(100.0f)})});
                    }
                    this.pagedownButtonAnimation.setDuration(200);
                    this.pagedownButtonAnimation.addListener(new AnimatorListenerAdapter() {
                        public void onAnimationEnd(Animator animator) {
                            ChatActivity.this.pagedownButtonCounter.setVisibility(4);
                            ChatActivity.this.pagedownButton.setVisibility(4);
                        }
                    });
                    this.pagedownButtonAnimation.start();
                    return;
                }
                this.pagedownButton.setVisibility(4);
            }
        }
    }

    /* access modifiers changed from: private */
    public void showMentionDownButton(boolean z, boolean z2) {
        FrameLayout frameLayout = this.mentiondownButton;
        if (frameLayout != null) {
            if (!z) {
                this.returnToMessageId = 0;
                if (frameLayout.getTag() != null) {
                    this.mentiondownButton.setTag((Object) null);
                    ObjectAnimator objectAnimator = this.mentiondownButtonAnimation;
                    if (objectAnimator != null) {
                        objectAnimator.cancel();
                        this.mentiondownButtonAnimation = null;
                    }
                    if (z2) {
                        if (this.pagedownButton.getVisibility() == 0) {
                            this.mentiondownButtonAnimation = ObjectAnimator.ofFloat(this.mentiondownButton, View.ALPHA, new float[]{1.0f, 0.0f}).setDuration(200);
                        } else {
                            this.mentiondownButtonAnimation = ObjectAnimator.ofFloat(this.mentiondownButton, View.TRANSLATION_Y, new float[]{(float) AndroidUtilities.dp(100.0f)}).setDuration(200);
                        }
                        this.mentiondownButtonAnimation.addListener(new AnimatorListenerAdapter() {
                            public void onAnimationEnd(Animator animator) {
                                ChatActivity.this.mentiondownButtonCounter.setVisibility(4);
                                ChatActivity.this.mentiondownButton.setVisibility(4);
                            }
                        });
                        this.mentiondownButtonAnimation.start();
                        return;
                    }
                    this.mentiondownButton.setVisibility(4);
                }
            } else if (frameLayout.getTag() == null) {
                ObjectAnimator objectAnimator2 = this.mentiondownButtonAnimation;
                if (objectAnimator2 != null) {
                    objectAnimator2.cancel();
                    this.mentiondownButtonAnimation = null;
                }
                if (z2) {
                    this.mentiondownButton.setVisibility(0);
                    this.mentiondownButton.setTag(1);
                    if (this.pagedownButton.getVisibility() == 0) {
                        this.mentiondownButton.setTranslationY((float) (-AndroidUtilities.dp(72.0f)));
                        this.mentiondownButtonAnimation = ObjectAnimator.ofFloat(this.mentiondownButton, View.ALPHA, new float[]{0.0f, 1.0f}).setDuration(200);
                    } else {
                        if (this.mentiondownButton.getTranslationY() == 0.0f) {
                            this.mentiondownButton.setTranslationY((float) AndroidUtilities.dp(100.0f));
                        }
                        this.mentiondownButtonAnimation = ObjectAnimator.ofFloat(this.mentiondownButton, View.TRANSLATION_Y, new float[]{0.0f}).setDuration(200);
                    }
                    this.mentiondownButtonAnimation.start();
                    return;
                }
                this.mentiondownButton.setVisibility(0);
            }
        }
    }

    /* JADX WARNING: Removed duplicated region for block: B:48:0x0132  */
    /* JADX WARNING: Removed duplicated region for block: B:50:0x0139  */
    /* JADX WARNING: Removed duplicated region for block: B:61:? A[RETURN, SYNTHETIC] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private void updateSecretStatus() {
        /*
            r8 = this;
            android.widget.FrameLayout r0 = r8.bottomOverlay
            if (r0 != 0) goto L_0x0005
            return
        L_0x0005:
            org.telegram.tgnet.TLRPC$Chat r0 = r8.currentChat
            r1 = 4
            r2 = 1
            r3 = 0
            if (r0 == 0) goto L_0x0098
            boolean r0 = org.telegram.messenger.ChatObject.canSendMessages(r0)
            if (r0 != 0) goto L_0x0098
            org.telegram.tgnet.TLRPC$Chat r0 = r8.currentChat
            boolean r4 = r0.gigagroup
            if (r4 != 0) goto L_0x0098
            boolean r0 = org.telegram.messenger.ChatObject.isChannel(r0)
            if (r0 == 0) goto L_0x0024
            org.telegram.tgnet.TLRPC$Chat r0 = r8.currentChat
            boolean r0 = r0.megagroup
            if (r0 == 0) goto L_0x0098
        L_0x0024:
            org.telegram.tgnet.TLRPC$Chat r0 = r8.currentChat
            org.telegram.tgnet.TLRPC$TL_chatBannedRights r4 = r0.default_banned_rights
            if (r4 == 0) goto L_0x003d
            boolean r4 = r4.send_messages
            if (r4 == 0) goto L_0x003d
            android.widget.TextView r0 = r8.bottomOverlayText
            r4 = 2131625695(0x7f0e06df, float:1.8878605E38)
            java.lang.String r5 = "GlobalSendMessageRestricted"
            java.lang.String r4 = org.telegram.messenger.LocaleController.getString(r5, r4)
            r0.setText(r4)
            goto L_0x0071
        L_0x003d:
            org.telegram.tgnet.TLRPC$TL_chatBannedRights r0 = r0.banned_rights
            boolean r0 = org.telegram.messenger.AndroidUtilities.isBannedForever(r0)
            if (r0 == 0) goto L_0x0054
            android.widget.TextView r0 = r8.bottomOverlayText
            r4 = 2131627362(0x7f0e0d62, float:1.8881986E38)
            java.lang.String r5 = "SendMessageRestrictedForever"
            java.lang.String r4 = org.telegram.messenger.LocaleController.getString(r5, r4)
            r0.setText(r4)
            goto L_0x0071
        L_0x0054:
            android.widget.TextView r0 = r8.bottomOverlayText
            r4 = 2131627361(0x7f0e0d61, float:1.8881984E38)
            java.lang.Object[] r5 = new java.lang.Object[r2]
            org.telegram.tgnet.TLRPC$Chat r6 = r8.currentChat
            org.telegram.tgnet.TLRPC$TL_chatBannedRights r6 = r6.banned_rights
            int r6 = r6.until_date
            long r6 = (long) r6
            java.lang.String r6 = org.telegram.messenger.LocaleController.formatDateForBan(r6)
            r5[r3] = r6
            java.lang.String r6 = "SendMessageRestricted"
            java.lang.String r4 = org.telegram.messenger.LocaleController.formatString(r6, r4, r5)
            r0.setText(r4)
        L_0x0071:
            android.widget.FrameLayout r0 = r8.bottomOverlay
            r0.setVisibility(r3)
            android.animation.AnimatorSet r0 = r8.mentionListAnimation
            r4 = 0
            if (r0 == 0) goto L_0x0080
            r0.cancel()
            r8.mentionListAnimation = r4
        L_0x0080:
            android.widget.FrameLayout r0 = r8.mentionContainer
            r5 = 8
            r0.setVisibility(r5)
            android.widget.FrameLayout r0 = r8.mentionContainer
            r0.setTag(r4)
            r8.updateMessageListAccessibilityVisibility()
            org.telegram.ui.Adapters.StickersAdapter r0 = r8.stickersAdapter
            if (r0 == 0) goto L_0x012e
            r0.hide()
            goto L_0x012e
        L_0x0098:
            org.telegram.tgnet.TLRPC$EncryptedChat r0 = r8.currentEncryptedChat
            if (r0 == 0) goto L_0x0150
            org.telegram.ui.Components.ChatBigEmptyView r4 = r8.bigEmptyView
            if (r4 != 0) goto L_0x00a2
            goto L_0x0150
        L_0x00a2:
            boolean r4 = r0 instanceof org.telegram.tgnet.TLRPC$TL_encryptedChatRequested
            if (r4 == 0) goto L_0x00ba
            android.widget.TextView r0 = r8.bottomOverlayText
            r4 = 2131625308(0x7f0e055c, float:1.887782E38)
            java.lang.String r5 = "EncryptionProcessing"
            java.lang.String r4 = org.telegram.messenger.LocaleController.getString(r5, r4)
            r0.setText(r4)
            android.widget.FrameLayout r0 = r8.bottomOverlay
            r0.setVisibility(r3)
            goto L_0x0128
        L_0x00ba:
            boolean r4 = r0 instanceof org.telegram.tgnet.TLRPC$TL_encryptedChatWaiting
            if (r4 == 0) goto L_0x00f4
            android.widget.TextView r0 = r8.bottomOverlayText
            r4 = 2131624510(0x7f0e023e, float:1.8876202E38)
            java.lang.Object[] r5 = new java.lang.Object[r2]
            java.lang.StringBuilder r6 = new java.lang.StringBuilder
            r6.<init>()
            java.lang.String r7 = "<b>"
            r6.append(r7)
            org.telegram.tgnet.TLRPC$User r7 = r8.currentUser
            java.lang.String r7 = r7.first_name
            r6.append(r7)
            java.lang.String r7 = "</b>"
            r6.append(r7)
            java.lang.String r6 = r6.toString()
            r5[r3] = r6
            java.lang.String r6 = "AwaitingEncryption"
            java.lang.String r4 = org.telegram.messenger.LocaleController.formatString(r6, r4, r5)
            android.text.SpannableStringBuilder r4 = org.telegram.messenger.AndroidUtilities.replaceTags(r4)
            r0.setText(r4)
            android.widget.FrameLayout r0 = r8.bottomOverlay
            r0.setVisibility(r3)
            goto L_0x0128
        L_0x00f4:
            boolean r4 = r0 instanceof org.telegram.tgnet.TLRPC$TL_encryptedChatDiscarded
            if (r4 == 0) goto L_0x011e
            android.widget.TextView r0 = r8.bottomOverlayText
            r4 = 2131625309(0x7f0e055d, float:1.8877822E38)
            java.lang.String r5 = "EncryptionRejected"
            java.lang.String r4 = org.telegram.messenger.LocaleController.getString(r5, r4)
            r0.setText(r4)
            android.widget.FrameLayout r0 = r8.bottomOverlay
            r0.setVisibility(r3)
            org.telegram.ui.Components.ChatActivityEnterView r0 = r8.chatActivityEnterView
            java.lang.String r4 = ""
            r0.setFieldText(r4)
            org.telegram.messenger.MediaDataController r0 = r8.getMediaDataController()
            long r4 = r8.dialog_id
            int r6 = r8.threadMessageId
            r0.cleanDraft(r4, r6, r3)
            goto L_0x0128
        L_0x011e:
            boolean r0 = r0 instanceof org.telegram.tgnet.TLRPC$TL_encryptedChat
            if (r0 == 0) goto L_0x0127
            android.widget.FrameLayout r0 = r8.bottomOverlay
            r0.setVisibility(r1)
        L_0x0127:
            r2 = 0
        L_0x0128:
            r8.checkRaiseSensors()
            r8.checkActionBarMenu(r3)
        L_0x012e:
            boolean r0 = r8.inPreviewMode
            if (r0 == 0) goto L_0x0137
            android.widget.FrameLayout r0 = r8.bottomOverlay
            r0.setVisibility(r1)
        L_0x0137:
            if (r2 == 0) goto L_0x014f
            org.telegram.ui.Components.ChatActivityEnterView r0 = r8.chatActivityEnterView
            r0.hidePopup(r3)
            android.app.Activity r0 = r8.getParentActivity()
            if (r0 == 0) goto L_0x014f
            android.app.Activity r0 = r8.getParentActivity()
            android.view.View r0 = r0.getCurrentFocus()
            org.telegram.messenger.AndroidUtilities.hideKeyboard(r0)
        L_0x014f:
            return
        L_0x0150:
            android.widget.FrameLayout r0 = r8.bottomOverlay
            r0.setVisibility(r1)
            org.telegram.ui.Adapters.StickersAdapter r0 = r8.stickersAdapter
            if (r0 == 0) goto L_0x016e
            org.telegram.ui.Components.ChatActivityEnterView r0 = r8.chatActivityEnterView
            if (r0 == 0) goto L_0x016e
            boolean r0 = r0.hasText()
            if (r0 == 0) goto L_0x016e
            org.telegram.ui.Adapters.StickersAdapter r0 = r8.stickersAdapter
            org.telegram.ui.Components.ChatActivityEnterView r1 = r8.chatActivityEnterView
            java.lang.CharSequence r1 = r1.getFieldText()
            r0.loadStikersForEmoji(r1, r3)
        L_0x016e:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.updateSecretStatus():void");
    }

    public void onRequestPermissionsResultFragment(int i, String[] strArr, int[] iArr) {
        boolean z;
        ChatAttachAlert chatAttachAlert2;
        ChatAttachAlert chatAttachAlert3;
        ChatAttachAlert chatAttachAlert4;
        int i2 = i;
        String[] strArr2 = strArr;
        int[] iArr2 = iArr;
        ChatActivityEnterView chatActivityEnterView2 = this.chatActivityEnterView;
        if (chatActivityEnterView2 != null) {
            chatActivityEnterView2.onRequestPermissionsResultFragment(i, strArr2, iArr2);
        }
        MentionsAdapter mentionsAdapter2 = this.mentionsAdapter;
        if (mentionsAdapter2 != null) {
            mentionsAdapter2.onRequestPermissionsResultFragment(i, strArr2, iArr2);
        }
        if (i2 == 4 && (chatAttachAlert4 = this.chatAttachAlert) != null) {
            chatAttachAlert4.getPhotoLayout().checkStorage();
        } else if ((i2 == 5 || i2 == 30) && (chatAttachAlert3 = this.chatAttachAlert) != null) {
            chatAttachAlert3.onRequestPermissionsResultFragment(i, strArr2, iArr2);
        } else {
            boolean z2 = true;
            if ((i2 == 17 || i2 == 18) && (chatAttachAlert2 = this.chatAttachAlert) != null) {
                ChatAttachAlertPhotoLayout photoLayout = chatAttachAlert2.getPhotoLayout();
                if (iArr2.length <= 0 || iArr2[0] != 0) {
                    z2 = false;
                }
                photoLayout.checkCamera(z2);
            } else if (i2 == 21) {
                if (getParentActivity() != null && iArr2 != null && iArr2.length != 0 && iArr2[0] != 0) {
                    AlertDialog.Builder builder = new AlertDialog.Builder((Context) getParentActivity());
                    builder.setTitle(LocaleController.getString("AppName", NUM));
                    builder.setMessage(LocaleController.getString("PermissionNoAudioVideo", NUM));
                    builder.setNegativeButton(LocaleController.getString("PermissionOpenSettings", NUM), new DialogInterface.OnClickListener() {
                        public final void onClick(DialogInterface dialogInterface, int i) {
                            ChatActivity.this.lambda$onRequestPermissionsResultFragment$80$ChatActivity(dialogInterface, i);
                        }
                    });
                    builder.setPositiveButton(LocaleController.getString("OK", NUM), (DialogInterface.OnClickListener) null);
                    builder.show();
                }
            } else if (i2 == 19 && iArr2 != null && iArr2.length > 0 && iArr2[0] == 0) {
                processSelectedAttach(0);
            } else if (i2 == 20 && iArr2 != null && iArr2.length > 0 && iArr2[0] == 0) {
                processSelectedAttach(2);
            } else if (((i2 == 101 || i2 == 102) && this.currentUser != null) || (i2 == 103 && this.currentChat != null)) {
                int i3 = 0;
                while (true) {
                    if (i3 >= iArr2.length) {
                        z = true;
                        break;
                    } else if (iArr2[i3] != 0) {
                        z = false;
                        break;
                    } else {
                        i3++;
                    }
                }
                if (iArr2.length <= 0 || !z) {
                    VoIPHelper.permissionDenied(getParentActivity(), (Runnable) null, i);
                } else if (i2 == 103) {
                    VoIPHelper.startCall(this.currentChat, (TLRPC$InputPeer) null, (String) null, this.createGroupCall, getParentActivity(), this, getAccountInstance());
                } else {
                    TLRPC$User tLRPC$User = this.currentUser;
                    boolean z3 = i2 == 102;
                    TLRPC$UserFull tLRPC$UserFull = this.userInfo;
                    VoIPHelper.startCall(tLRPC$User, z3, tLRPC$UserFull != null && tLRPC$UserFull.video_calls_available, getParentActivity(), getMessagesController().getUserFull(this.currentUser.id), getAccountInstance());
                }
            }
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$onRequestPermissionsResultFragment$80 */
    public /* synthetic */ void lambda$onRequestPermissionsResultFragment$80$ChatActivity(DialogInterface dialogInterface, int i) {
        try {
            Intent intent = new Intent("android.settings.APPLICATION_DETAILS_SETTINGS");
            intent.setData(Uri.parse("package:" + ApplicationLoader.applicationContext.getPackageName()));
            getParentActivity().startActivity(intent);
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    private void checkActionBarMenu(boolean z) {
        TLRPC$User tLRPC$User;
        TLRPC$UserFull tLRPC$UserFull;
        TLRPC$ChatFull tLRPC$ChatFull;
        TLRPC$EncryptedChat tLRPC$EncryptedChat = this.currentEncryptedChat;
        if ((tLRPC$EncryptedChat == null || (tLRPC$EncryptedChat instanceof TLRPC$TL_encryptedChat)) && ((this.currentChat == null || !((tLRPC$ChatFull = this.chatInfo) == null || tLRPC$ChatFull.ttl_period == 0)) && ((tLRPC$User = this.currentUser) == null || (!UserObject.isDeleted(tLRPC$User) && !(this.currentEncryptedChat == null && ((tLRPC$UserFull = this.userInfo) == null || tLRPC$UserFull.ttl_period == 0)))))) {
            View view = this.timeItem2;
            if (view != null) {
                view.setVisibility(0);
            }
            ChatAvatarContainer chatAvatarContainer = this.avatarContainer;
            if (chatAvatarContainer != null) {
                chatAvatarContainer.showTimeItem(z);
            }
        } else {
            View view2 = this.timeItem2;
            if (view2 != null) {
                view2.setVisibility(8);
            }
            ChatAvatarContainer chatAvatarContainer2 = this.avatarContainer;
            if (chatAvatarContainer2 != null) {
                chatAvatarContainer2.hideTimeItem(z);
            }
        }
        ChatAvatarContainer chatAvatarContainer3 = this.avatarContainer;
        if (chatAvatarContainer3 != null) {
            TLRPC$EncryptedChat tLRPC$EncryptedChat2 = this.currentEncryptedChat;
            if (tLRPC$EncryptedChat2 != null) {
                chatAvatarContainer3.setTime(tLRPC$EncryptedChat2.ttl);
            } else {
                TLRPC$UserFull tLRPC$UserFull2 = this.userInfo;
                if (tLRPC$UserFull2 != null) {
                    chatAvatarContainer3.setTime(tLRPC$UserFull2.ttl_period);
                } else {
                    TLRPC$ChatFull tLRPC$ChatFull2 = this.chatInfo;
                    if (tLRPC$ChatFull2 != null) {
                        chatAvatarContainer3.setTime(tLRPC$ChatFull2.ttl_period);
                    }
                }
            }
        }
        checkAndUpdateAvatar();
    }

    /* access modifiers changed from: private */
    public int getMessageType(MessageObject messageObject) {
        String str;
        String str2;
        MessageObject messageObject2 = messageObject;
        if (messageObject2 == null) {
            return -1;
        }
        boolean z = false;
        boolean z2 = true;
        if (this.currentEncryptedChat == null) {
            if (messageObject.isEditing()) {
                return -1;
            }
            if (messageObject.getId() > 0 || !messageObject.isOut()) {
                if (messageObject.isAnimatedEmoji()) {
                    return 2;
                }
                int i = messageObject2.type;
                if (i == 6) {
                    return -1;
                }
                if (i == 10 || i == 11) {
                    return messageObject.getId() == 0 ? -1 : 1;
                }
                if (messageObject.isVoice()) {
                    return 2;
                }
                if (messageObject.isSticker() || messageObject.isAnimatedSticker()) {
                    TLRPC$InputStickerSet inputStickerSet = messageObject.getInputStickerSet();
                    if (inputStickerSet instanceof TLRPC$TL_inputStickerSetID) {
                        if (!getMediaDataController().isStickerPackInstalled(inputStickerSet.id)) {
                            return 7;
                        }
                        return 9;
                    } else if (!(inputStickerSet instanceof TLRPC$TL_inputStickerSetShortName) || getMediaDataController().isStickerPackInstalled(inputStickerSet.short_name)) {
                        return 9;
                    } else {
                        return 7;
                    }
                } else {
                    if (!messageObject.isRoundVideo() && ((messageObject2.messageOwner.media instanceof TLRPC$TL_messageMediaPhoto) || messageObject.getDocument() != null || messageObject.isMusic() || messageObject.isVideo())) {
                        if (!TextUtils.isEmpty(messageObject2.messageOwner.attachPath) && new File(messageObject2.messageOwner.attachPath).exists()) {
                            z = true;
                        }
                        if (z || !FileLoader.getPathToMessage(messageObject2.messageOwner).exists()) {
                            z2 = z;
                        }
                        if (z2) {
                            if (!(messageObject.getDocument() == null || messageObject.isMusic() || (str2 = messageObject.getDocument().mime_type) == null)) {
                                if (messageObject.getDocumentName().toLowerCase().endsWith("attheme")) {
                                    return 10;
                                }
                                if (str2.endsWith("/xml")) {
                                    return 5;
                                }
                                return ((messageObject.isNewGif() || !str2.endsWith("/mp4")) && !str2.endsWith("/png") && !str2.endsWith("/jpg") && !str2.endsWith("/jpeg")) ? 4 : 6;
                            }
                        }
                    } else if (messageObject2.type == 12) {
                        return 8;
                    } else {
                        if (messageObject.isMediaEmpty()) {
                            return 3;
                        }
                    }
                    return 2;
                }
            } else if (messageObject.isSendError()) {
                return !messageObject.isMediaEmpty() ? 0 : 20;
            } else {
                return -1;
            }
        } else if (messageObject.isSending()) {
            return -1;
        } else {
            if (messageObject.isAnimatedEmoji()) {
                return 2;
            }
            if (messageObject2.type == 6) {
                return -1;
            }
            if (messageObject.isSendError()) {
                return !messageObject.isMediaEmpty() ? 0 : 20;
            }
            int i2 = messageObject2.type;
            if (i2 == 10 || i2 == 11) {
                return (messageObject.getId() == 0 || messageObject.isSending()) ? -1 : 1;
            }
            if (messageObject.isVoice()) {
                return 2;
            }
            if (!messageObject.isAnimatedEmoji() && (messageObject.isSticker() || messageObject.isAnimatedSticker())) {
                TLRPC$InputStickerSet inputStickerSet2 = messageObject.getInputStickerSet();
                return (!(inputStickerSet2 instanceof TLRPC$TL_inputStickerSetShortName) || getMediaDataController().isStickerPackInstalled(inputStickerSet2.short_name)) ? 2 : 7;
            } else if (!messageObject.isRoundVideo() && ((messageObject2.messageOwner.media instanceof TLRPC$TL_messageMediaPhoto) || messageObject.getDocument() != null || messageObject.isMusic() || messageObject.isVideo())) {
                if (!TextUtils.isEmpty(messageObject2.messageOwner.attachPath) && new File(messageObject2.messageOwner.attachPath).exists()) {
                    z = true;
                }
                if (z || !FileLoader.getPathToMessage(messageObject2.messageOwner).exists()) {
                    z2 = z;
                }
                if (z2) {
                    if (messageObject.getDocument() != null && (str = messageObject.getDocument().mime_type) != null && str.endsWith("text/xml")) {
                        return 5;
                    }
                    if (messageObject2.messageOwner.ttl <= 0) {
                        return 4;
                    }
                }
            } else if (messageObject2.type == 12) {
                return 8;
            } else {
                if (messageObject.isMediaEmpty()) {
                    return 3;
                }
            }
        }
    }

    private void addToSelectedMessages(MessageObject messageObject, boolean z) {
        addToSelectedMessages(messageObject, z, true);
    }

    private void addToSelectedMessages(MessageObject messageObject, boolean z, boolean z2) {
        final int i;
        FrameLayout frameLayout;
        TLRPC$Chat tLRPC$Chat;
        String str;
        int i2;
        MessageObject messageObject2 = messageObject;
        int i3 = this.cantForwardMessagesCount;
        if (messageObject2 != null) {
            ArrayList<MessageObject> arrayList = this.threadMessageObjects;
            if (arrayList == null || !arrayList.contains(messageObject2)) {
                char c = messageObject.getDialogId() == this.dialog_id ? (char) 0 : 1;
                if (z && messageObject.getGroupId() != 0) {
                    MessageObject.GroupedMessages groupedMessages = this.groupedMessagesMap.get(messageObject.getGroupId());
                    if (groupedMessages != null) {
                        boolean z3 = false;
                        int i4 = 0;
                        for (int i5 = 0; i5 < groupedMessages.messages.size(); i5++) {
                            if (this.selectedMessagesIds[c].indexOfKey(groupedMessages.messages.get(i5).getId()) < 0) {
                                i4 = i5;
                                z3 = true;
                            }
                        }
                        int i6 = 0;
                        while (i6 < groupedMessages.messages.size()) {
                            MessageObject messageObject3 = groupedMessages.messages.get(i6);
                            if (!z3) {
                                addToSelectedMessages(messageObject3, false, i6 == groupedMessages.messages.size() - 1);
                            } else if (this.selectedMessagesIds[c].indexOfKey(messageObject3.getId()) < 0) {
                                addToSelectedMessages(messageObject3, false, i6 == i4);
                            }
                            if (!TextUtils.isEmpty(messageObject3.caption)) {
                                showTextSelectionHint(messageObject);
                            }
                            i6++;
                        }
                        return;
                    }
                    return;
                } else if (this.selectedMessagesIds[c].indexOfKey(messageObject.getId()) >= 0) {
                    this.selectedMessagesIds[c].remove(messageObject.getId());
                    if (this.reportType < 0) {
                        if (messageObject2.type == 0 || messageObject.isAnimatedEmoji() || messageObject2.caption != null) {
                            this.selectedMessagesCanCopyIds[c].remove(messageObject.getId());
                        }
                        if (!messageObject.isAnimatedEmoji() && ((messageObject.isSticker() || messageObject.isAnimatedSticker()) && MessageObject.isStickerHasSet(messageObject.getDocument()))) {
                            this.selectedMessagesCanStarIds[c].remove(messageObject.getId());
                        }
                        if (messageObject2.canEditMessage(this.currentChat)) {
                            this.canEditMessagesCount--;
                        }
                        if (!messageObject2.canDeleteMessage(this.chatMode == 1, this.currentChat)) {
                            this.cantDeleteMessagesCount--;
                        }
                        if (this.chatMode == 1 || !messageObject.canForwardMessage()) {
                            this.cantForwardMessagesCount--;
                        } else {
                            this.canForwardMessagesCount--;
                        }
                        if (messageObject.isMusic()) {
                            this.canSaveMusicCount--;
                        } else if (messageObject.isDocument()) {
                            this.canSaveDocumentsCount--;
                        } else {
                            this.cantSaveMessagesCount--;
                        }
                    }
                } else if (this.selectedMessagesIds[0].size() + this.selectedMessagesIds[1].size() < 100) {
                    this.selectedMessagesIds[c].put(messageObject.getId(), messageObject2);
                    if (this.reportType < 0) {
                        if (messageObject2.type == 0 || messageObject.isAnimatedEmoji() || messageObject2.caption != null) {
                            this.selectedMessagesCanCopyIds[c].put(messageObject.getId(), messageObject2);
                        }
                        if (!messageObject.isAnimatedEmoji() && ((messageObject.isSticker() || messageObject.isAnimatedSticker()) && MessageObject.isStickerHasSet(messageObject.getDocument()))) {
                            this.selectedMessagesCanStarIds[c].put(messageObject.getId(), messageObject2);
                        }
                        if (messageObject2.canEditMessage(this.currentChat)) {
                            this.canEditMessagesCount++;
                        }
                        if (!messageObject2.canDeleteMessage(this.chatMode == 1, this.currentChat)) {
                            this.cantDeleteMessagesCount++;
                        }
                        if (this.chatMode == 1 || !messageObject.canForwardMessage()) {
                            this.cantForwardMessagesCount++;
                        } else {
                            this.canForwardMessagesCount++;
                        }
                        if (messageObject.isMusic()) {
                            this.canSaveMusicCount++;
                        } else if (messageObject.isDocument()) {
                            this.canSaveDocumentsCount++;
                        } else {
                            this.cantSaveMessagesCount++;
                        }
                        if (z) {
                            showTextSelectionHint(messageObject);
                        }
                    }
                } else {
                    return;
                }
            } else {
                return;
            }
        }
        AnimatorSet animatorSet = this.forwardButtonAnimation;
        if (animatorSet != null) {
            animatorSet.cancel();
            this.forwardButtonAnimation = null;
        }
        if (z2 && this.actionBar.isActionModeShowed() && this.reportType < 0) {
            int size = this.selectedMessagesIds[0].size() + this.selectedMessagesIds[1].size();
            if (size == 0) {
                hideActionMode();
                updatePinnedMessageView(true);
                return;
            }
            ActionBarMenuItem item = this.actionBar.createActionMode().getItem(25);
            ActionBarMenuItem item2 = this.actionBar.createActionMode().getItem(10);
            ActionBarMenuItem item3 = this.actionBar.createActionMode().getItem(22);
            final ActionBarMenuItem item4 = this.actionBar.createActionMode().getItem(23);
            ActionBarMenuItem item5 = this.actionBar.createActionMode().getItem(11);
            if ((i3 != 0 || this.cantForwardMessagesCount == 0) && (i3 == 0 || this.cantForwardMessagesCount != 0)) {
                if (item5 != null) {
                    item5.setEnabled(this.cantForwardMessagesCount == 0);
                    item5.setAlpha(this.cantForwardMessagesCount == 0 ? 1.0f : 0.5f);
                }
                TextView textView = this.forwardButton;
                if (textView != null) {
                    textView.setEnabled(this.cantForwardMessagesCount == 0);
                    this.forwardButton.setAlpha(this.cantForwardMessagesCount == 0 ? 1.0f : 0.5f);
                }
            } else {
                this.forwardButtonAnimation = new AnimatorSet();
                ArrayList arrayList2 = new ArrayList();
                if (item5 != null) {
                    item5.setEnabled(this.cantForwardMessagesCount == 0);
                    Property property = View.ALPHA;
                    float[] fArr = new float[1];
                    fArr[0] = this.cantForwardMessagesCount == 0 ? 1.0f : 0.5f;
                    arrayList2.add(ObjectAnimator.ofFloat(item5, property, fArr));
                }
                TextView textView2 = this.forwardButton;
                if (textView2 != null) {
                    textView2.setEnabled(this.cantForwardMessagesCount == 0);
                    TextView textView3 = this.forwardButton;
                    Property property2 = View.ALPHA;
                    float[] fArr2 = new float[1];
                    fArr2[0] = this.cantForwardMessagesCount == 0 ? 1.0f : 0.5f;
                    arrayList2.add(ObjectAnimator.ofFloat(textView3, property2, fArr2));
                }
                this.forwardButtonAnimation.playTogether(arrayList2);
                this.forwardButtonAnimation.setDuration(100);
                this.forwardButtonAnimation.addListener(new AnimatorListenerAdapter() {
                    public void onAnimationEnd(Animator animator) {
                        AnimatorSet unused = ChatActivity.this.forwardButtonAnimation = null;
                    }
                });
                this.forwardButtonAnimation.start();
            }
            if (item != null) {
                int i7 = this.canSaveMusicCount;
                item.setVisibility((((i7 <= 0 || this.canSaveDocumentsCount != 0) && (i7 != 0 || this.canSaveDocumentsCount <= 0)) || this.cantSaveMessagesCount != 0) ? 8 : 0);
                if (this.canSaveMusicCount > 0) {
                    i2 = NUM;
                    str = "SaveToMusic";
                } else {
                    i2 = NUM;
                    str = "SaveToDownloads";
                }
                item.setContentDescription(LocaleController.getString(str, i2));
            }
            int visibility = item2.getVisibility();
            int visibility2 = item3.getVisibility();
            item2.setVisibility(this.selectedMessagesCanCopyIds[0].size() + this.selectedMessagesCanCopyIds[1].size() != 0 ? 0 : 8);
            item3.setVisibility((!getMediaDataController().canAddStickerToFavorites() || this.selectedMessagesCanStarIds[0].size() + this.selectedMessagesCanStarIds[1].size() != size) ? 8 : 0);
            int visibility3 = item2.getVisibility();
            int visibility4 = item3.getVisibility();
            this.actionBar.createActionMode().getItem(12).setVisibility(this.cantDeleteMessagesCount == 0 ? 0 : 8);
            this.hasUnfavedSelected = false;
            for (int i8 = 0; i8 < 2; i8++) {
                int i9 = 0;
                while (true) {
                    if (i9 >= this.selectedMessagesCanStarIds[i8].size()) {
                        break;
                    } else if (!getMediaDataController().isStickerInFavorites(this.selectedMessagesCanStarIds[i8].valueAt(i9).getDocument())) {
                        this.hasUnfavedSelected = true;
                        break;
                    } else {
                        i9++;
                    }
                }
                if (this.hasUnfavedSelected) {
                    break;
                }
            }
            item3.setIcon(this.hasUnfavedSelected ? NUM : NUM);
            final int i10 = (this.canEditMessagesCount == 1 && size == 1) ? 0 : 8;
            if (this.replyButton != null) {
                TLRPC$EncryptedChat tLRPC$EncryptedChat = this.currentEncryptedChat;
                boolean z4 = (tLRPC$EncryptedChat == null || AndroidUtilities.getPeerLayerVersion(tLRPC$EncryptedChat.layer) >= 46) && ((frameLayout = this.bottomOverlayChat) == null || frameLayout.getVisibility() != 0) && ((tLRPC$Chat = this.currentChat) == null || ((!ChatObject.isNotInChat(tLRPC$Chat) || isThreadChat()) && ((!ChatObject.isChannel(this.currentChat) || ChatObject.canPost(this.currentChat) || this.currentChat.megagroup) && ChatObject.canSendMessages(this.currentChat))));
                if (this.chatMode == 1 || !z4 || !(this.selectedMessagesIds[0].size() == 0 || this.selectedMessagesIds[1].size() == 0)) {
                    i = 8;
                } else if (size == 1) {
                    i = 0;
                } else {
                    i = 0;
                    long j = 0;
                    for (int i11 = 0; i11 < 2; i11++) {
                        int size2 = this.selectedMessagesIds[i11].size();
                        int i12 = 0;
                        while (true) {
                            if (i12 >= size2) {
                                break;
                            }
                            long groupId = this.selectedMessagesIds[i11].valueAt(i12).getGroupId();
                            if (groupId == 0 || !(j == 0 || j == groupId)) {
                                i = 8;
                            } else {
                                i12++;
                                j = groupId;
                            }
                        }
                        i = 8;
                        if (i == 8) {
                            break;
                        }
                    }
                }
                if (this.threadMessageObjects != null && i == 0) {
                    int size3 = this.selectedMessagesIds[0].size();
                    for (int i13 = 0; i13 < size3; i13++) {
                        if (this.threadMessageObjects.contains(this.selectedMessagesIds[0].valueAt(i13))) {
                            i = 8;
                        }
                    }
                }
                if (this.replyButton.getVisibility() != i) {
                    AnimatorSet animatorSet2 = this.replyButtonAnimation;
                    if (animatorSet2 != null) {
                        animatorSet2.cancel();
                    }
                    AnimatorSet animatorSet3 = new AnimatorSet();
                    this.replyButtonAnimation = animatorSet3;
                    if (i == 0) {
                        this.replyButton.setVisibility(i);
                        this.replyButtonAnimation.playTogether(new Animator[]{ObjectAnimator.ofFloat(this.replyButton, View.ALPHA, new float[]{1.0f}), ObjectAnimator.ofFloat(this.replyButton, View.SCALE_Y, new float[]{1.0f})});
                    } else {
                        animatorSet3.playTogether(new Animator[]{ObjectAnimator.ofFloat(this.replyButton, View.ALPHA, new float[]{0.0f}), ObjectAnimator.ofFloat(this.replyButton, View.SCALE_Y, new float[]{0.0f})});
                    }
                    this.replyButtonAnimation.setDuration(100);
                    this.replyButtonAnimation.addListener(new AnimatorListenerAdapter() {
                        public void onAnimationEnd(Animator animator) {
                            if (ChatActivity.this.replyButtonAnimation != null && ChatActivity.this.replyButtonAnimation.equals(animator) && i == 8) {
                                ChatActivity.this.replyButton.setVisibility(8);
                            }
                        }

                        public void onAnimationCancel(Animator animator) {
                            if (ChatActivity.this.replyButtonAnimation != null && ChatActivity.this.replyButtonAnimation.equals(animator)) {
                                AnimatorSet unused = ChatActivity.this.replyButtonAnimation = null;
                            }
                        }
                    });
                    this.replyButtonAnimation.start();
                }
            }
            if (item4 == null) {
                return;
            }
            if (visibility != visibility3 || visibility2 != visibility4) {
                if (i10 == 0) {
                    item4.setAlpha(1.0f);
                    item4.setScaleX(1.0f);
                } else {
                    item4.setAlpha(0.0f);
                    item4.setScaleX(0.0f);
                }
                item4.setVisibility(i10);
            } else if (item4.getVisibility() != i10) {
                AnimatorSet animatorSet4 = this.editButtonAnimation;
                if (animatorSet4 != null) {
                    animatorSet4.cancel();
                }
                this.editButtonAnimation = new AnimatorSet();
                item4.setPivotX((float) AndroidUtilities.dp(54.0f));
                item4.setPivotX((float) AndroidUtilities.dp(54.0f));
                if (i10 == 0) {
                    item4.setVisibility(i10);
                    this.editButtonAnimation.playTogether(new Animator[]{ObjectAnimator.ofFloat(item4, View.ALPHA, new float[]{1.0f}), ObjectAnimator.ofFloat(item4, View.SCALE_X, new float[]{1.0f})});
                } else {
                    this.editButtonAnimation.playTogether(new Animator[]{ObjectAnimator.ofFloat(item4, View.ALPHA, new float[]{0.0f}), ObjectAnimator.ofFloat(item4, View.SCALE_X, new float[]{0.0f})});
                }
                this.editButtonAnimation.setDuration(100);
                this.editButtonAnimation.addListener(new AnimatorListenerAdapter() {
                    public void onAnimationEnd(Animator animator) {
                        if (ChatActivity.this.editButtonAnimation != null && ChatActivity.this.editButtonAnimation.equals(animator) && i10 == 8) {
                            item4.setVisibility(8);
                        }
                    }

                    public void onAnimationCancel(Animator animator) {
                        if (ChatActivity.this.editButtonAnimation != null && ChatActivity.this.editButtonAnimation.equals(animator)) {
                            AnimatorSet unused = ChatActivity.this.editButtonAnimation = null;
                        }
                    }
                });
                this.editButtonAnimation.start();
            }
        }
    }

    /* access modifiers changed from: private */
    public void processRowSelect(View view, boolean z, float f, float f2) {
        MessageObject messageObject;
        if (view instanceof ChatMessageCell) {
            ChatMessageCell chatMessageCell = (ChatMessageCell) view;
            messageObject = chatMessageCell.getMessageObject();
            chatMessageCell.setLastTouchCoords(f, f2);
        } else {
            messageObject = view instanceof ChatActionCell ? ((ChatActionCell) view).getMessageObject() : null;
        }
        int messageType = getMessageType(messageObject);
        if (messageType >= 2 && messageType != 20) {
            addToSelectedMessages(messageObject, z);
            updateActionModeTitle();
            updateVisibleRows();
        }
    }

    private void updateActionModeTitle() {
        if (this.reportType >= 0) {
            int size = this.selectedMessagesIds[0].size() + this.selectedMessagesIds[1].size();
            if (size == 0) {
                this.bottomOverlayChatText.setText(LocaleController.getString("ReportMessages", NUM));
                this.bottomOverlayChatText.setAlpha(0.5f);
                this.bottomOverlayChatText.setEnabled(false);
                return;
            }
            this.bottomOverlayChatText.setText(LocaleController.formatString("ReportMessagesCount", NUM, LocaleController.formatPluralString("messages", size)).toUpperCase());
            this.bottomOverlayChatText.setAlpha(1.0f);
            this.bottomOverlayChatText.setEnabled(true);
        } else if (this.actionBar.isActionModeShowed()) {
            if (this.selectedMessagesIds[0].size() != 0 || this.selectedMessagesIds[1].size() != 0) {
                this.selectedMessagesCountTextView.setNumber(this.selectedMessagesIds[0].size() + this.selectedMessagesIds[1].size(), true);
            }
        }
    }

    private void updateTitle() {
        if (this.avatarContainer != null) {
            if (isThreadChat()) {
                if (!this.isComments) {
                    this.avatarContainer.setTitle(LocaleController.formatPluralString("Replies", this.threadMessageObject.getRepliesCount()));
                } else if (this.threadMessageObject.hasReplies()) {
                    this.avatarContainer.setTitle(LocaleController.formatPluralString("Comments", this.threadMessageObject.getRepliesCount()));
                } else {
                    this.avatarContainer.setTitle(LocaleController.getString("CommentsTitle", NUM));
                }
            } else if (UserObject.isReplyUser(this.currentUser)) {
                this.avatarContainer.setTitle(LocaleController.getString("RepliesTitle", NUM));
            } else {
                int i = this.chatMode;
                if (i == 1) {
                    if (UserObject.isUserSelf(this.currentUser)) {
                        this.avatarContainer.setTitle(LocaleController.getString("Reminders", NUM));
                    } else {
                        this.avatarContainer.setTitle(LocaleController.getString("ScheduledMessages", NUM));
                    }
                } else if (i == 2) {
                    this.avatarContainer.setTitle(LocaleController.formatPluralString("PinnedMessagesCount", getPinnedMessagesCount()));
                } else {
                    TLRPC$Chat tLRPC$Chat = this.currentChat;
                    if (tLRPC$Chat != null) {
                        this.avatarContainer.setTitle(tLRPC$Chat.title, tLRPC$Chat.scam, tLRPC$Chat.fake);
                    } else {
                        TLRPC$User tLRPC$User = this.currentUser;
                        if (tLRPC$User != null) {
                            if (tLRPC$User.self) {
                                this.avatarContainer.setTitle(LocaleController.getString("SavedMessages", NUM));
                            } else if (MessagesController.isSupportUser(tLRPC$User) || getContactsController().contactsDict.get(Integer.valueOf(this.currentUser.id)) != null || (getContactsController().contactsDict.size() == 0 && getContactsController().isLoadingContacts())) {
                                ChatAvatarContainer chatAvatarContainer = this.avatarContainer;
                                String userName = UserObject.getUserName(this.currentUser);
                                TLRPC$User tLRPC$User2 = this.currentUser;
                                chatAvatarContainer.setTitle(userName, tLRPC$User2.scam, tLRPC$User2.fake);
                            } else if (!TextUtils.isEmpty(this.currentUser.phone)) {
                                ChatAvatarContainer chatAvatarContainer2 = this.avatarContainer;
                                PhoneFormat instance = PhoneFormat.getInstance();
                                chatAvatarContainer2.setTitle(instance.format("+" + this.currentUser.phone));
                            } else {
                                ChatAvatarContainer chatAvatarContainer3 = this.avatarContainer;
                                String userName2 = UserObject.getUserName(this.currentUser);
                                TLRPC$User tLRPC$User3 = this.currentUser;
                                chatAvatarContainer3.setTitle(userName2, tLRPC$User3.scam, tLRPC$User3.fake);
                            }
                        }
                    }
                }
            }
            setParentActivityTitle(this.avatarContainer.getTitleTextView().getText());
        }
    }

    /* access modifiers changed from: private */
    public int getPinnedMessagesCount() {
        return Math.max(this.loadedPinnedMessagesCount, this.totalPinnedMessagesCount);
    }

    private void updateBotButtons() {
        TLRPC$User tLRPC$User;
        boolean z;
        if (this.headerItem != null && (tLRPC$User = this.currentUser) != null && this.currentEncryptedChat == null && tLRPC$User.bot) {
            boolean z2 = false;
            if (this.botInfo.size() != 0) {
                boolean z3 = false;
                z = false;
                for (int i = 0; i < this.botInfo.size(); i++) {
                    TLRPC$BotInfo valueAt = this.botInfo.valueAt(i);
                    for (int i2 = 0; i2 < valueAt.commands.size(); i2++) {
                        TLRPC$TL_botCommand tLRPC$TL_botCommand = valueAt.commands.get(i2);
                        if (tLRPC$TL_botCommand.command.toLowerCase().equals("help")) {
                            z3 = true;
                        } else if (tLRPC$TL_botCommand.command.toLowerCase().equals("settings")) {
                            z = true;
                        }
                        if (z && z3) {
                            break;
                        }
                    }
                }
                z2 = z3;
            } else {
                z = false;
            }
            if (z2) {
                this.headerItem.showSubItem(30);
            } else {
                this.headerItem.hideSubItem(30);
            }
            if (z) {
                this.headerItem.showSubItem(31);
            } else {
                this.headerItem.hideSubItem(31);
            }
        }
    }

    private void updateTitleIcons() {
        if (this.avatarContainer != null && this.chatMode == 0) {
            Drawable drawable = null;
            Drawable drawable2 = getMessagesController().isDialogMuted(this.dialog_id) ? Theme.chat_muteIconDrawable : null;
            ChatAvatarContainer chatAvatarContainer = this.avatarContainer;
            Drawable drawable3 = this.currentEncryptedChat != null ? Theme.chat_lockIconDrawable : null;
            if (!UserObject.isReplyUser(this.currentUser) && !isThreadChat()) {
                drawable = drawable2;
            }
            chatAvatarContainer.setTitleIcons(drawable3, drawable);
            ActionBarMenuSubItem actionBarMenuSubItem = this.muteItem;
            if (actionBarMenuSubItem == null) {
                return;
            }
            if (drawable2 != null) {
                actionBarMenuSubItem.setTextAndIcon(LocaleController.getString("UnmuteNotifications", NUM), NUM);
            } else {
                actionBarMenuSubItem.setTextAndIcon(LocaleController.getString("MuteNotifications", NUM), NUM);
            }
        }
    }

    private void checkAndUpdateAvatar() {
        if (this.currentUser != null) {
            TLRPC$User user = getMessagesController().getUser(Integer.valueOf(this.currentUser.id));
            if (user != null) {
                this.currentUser = user;
            } else {
                return;
            }
        } else if (this.currentChat != null) {
            TLRPC$Chat chat = getMessagesController().getChat(Integer.valueOf(this.currentChat.id));
            if (chat != null) {
                this.currentChat = chat;
            } else {
                return;
            }
        }
        ChatAvatarContainer chatAvatarContainer = this.avatarContainer;
        if (chatAvatarContainer != null) {
            chatAvatarContainer.checkAndUpdateAvatar();
        }
    }

    public void openVideoEditor(String str, String str2) {
        String str3 = str2;
        if (getParentActivity() != null) {
            final Bitmap createVideoThumbnail = SendMessagesHelper.createVideoThumbnail(str, 1);
            PhotoViewer.getInstance().setParentActivity(getParentActivity());
            final ArrayList arrayList = new ArrayList();
            MediaController.PhotoEntry photoEntry = new MediaController.PhotoEntry(0, 0, 0, str, 0, true, 0, 0, 0);
            photoEntry.caption = str3;
            arrayList.add(photoEntry);
            PhotoViewer.getInstance().openPhotoForSelect(arrayList, 0, 2, false, new PhotoViewer.EmptyPhotoViewerProvider() {
                public boolean canScrollAway() {
                    return false;
                }

                public ImageReceiver.BitmapHolder getThumbForPhoto(MessageObject messageObject, TLRPC$FileLocation tLRPC$FileLocation, int i) {
                    return new ImageReceiver.BitmapHolder(createVideoThumbnail, (String) null, 0);
                }

                public void sendButtonPressed(int i, VideoEditedInfo videoEditedInfo, boolean z, int i2) {
                    ChatActivity.this.sendMedia((MediaController.PhotoEntry) arrayList.get(0), videoEditedInfo, z, i2);
                }
            }, this);
            return;
        }
        String str4 = str;
        fillEditingMediaWithCaption(str3, (ArrayList<TLRPC$MessageEntity>) null);
        SendMessagesHelper.prepareSendingVideo(getAccountInstance(), str, (VideoEditedInfo) null, this.dialog_id, this.replyingMessageObject, getThreadMessage(), (CharSequence) null, (ArrayList<TLRPC$MessageEntity>) null, 0, this.editingMessageObject, true, 0);
        afterMessageSend();
    }

    private void openEditingMessageInPhotoEditor() {
        MessageObject messageObject = this.editingMessageObject;
        if (messageObject != null && messageObject.canEditMedia() && this.editingMessageObjectReqId == 0) {
            if (this.editingMessageObject.isPhoto() || this.editingMessageObject.isVideo()) {
                final MessageObject messageObject2 = this.editingMessageObject;
                File file = null;
                if (!TextUtils.isEmpty(messageObject2.messageOwner.attachPath)) {
                    File file2 = new File(messageObject2.messageOwner.attachPath);
                    if (file2.exists()) {
                        file = file2;
                    }
                }
                if (file == null) {
                    file = FileLoader.getPathToMessage(messageObject2.messageOwner);
                }
                if (file.exists()) {
                    PhotoViewer.getInstance().setParentActivity(getParentActivity());
                    ArrayList arrayList = new ArrayList();
                    final MediaController.PhotoEntry photoEntry = new MediaController.PhotoEntry(0, 0, 0, file.getAbsolutePath(), 0, messageObject2.isVideo(), 0, 0, 0);
                    photoEntry.caption = this.chatActivityEnterView.getFieldText();
                    arrayList.add(photoEntry);
                    PhotoViewer.getInstance().openPhotoForSelect(arrayList, 0, 2, false, new PhotoViewer.EmptyPhotoViewerProvider() {
                        public boolean allowSendingSubmenu() {
                            return false;
                        }

                        public boolean canCaptureMorePhotos() {
                            return false;
                        }

                        public PhotoViewer.PlaceProviderObject getPlaceForPhoto(MessageObject messageObject, TLRPC$FileLocation tLRPC$FileLocation, int i, boolean z) {
                            return ChatActivity.this.getPlaceForPhoto(messageObject2, (TLRPC$FileLocation) null, z, true);
                        }

                        public void sendButtonPressed(int i, VideoEditedInfo videoEditedInfo, boolean z, int i2) {
                            if (ChatActivity.this.editingMessageObject == messageObject2) {
                                MediaController.PhotoEntry photoEntry = photoEntry;
                                if (photoEntry.isCropped || photoEntry.isPainted || photoEntry.isFiltered || videoEditedInfo != null) {
                                    ChatActivity.this.sendMedia(photoEntry, videoEditedInfo, z, i2);
                                } else {
                                    ChatActivity.this.chatActivityEnterView.doneEditingMessage();
                                }
                            }
                        }

                        public MessageObject getEditingMessageObject() {
                            MessageObject access$25100 = ChatActivity.this.editingMessageObject;
                            MessageObject messageObject = messageObject2;
                            if (access$25100 == messageObject) {
                                return messageObject;
                            }
                            return null;
                        }

                        public void onCaptionChanged(CharSequence charSequence) {
                            if (ChatActivity.this.editingMessageObject == messageObject2) {
                                ChatActivity.this.chatActivityEnterView.setFieldText(charSequence, true);
                            }
                        }

                        public boolean closeKeyboard() {
                            ChatActivity chatActivity = ChatActivity.this;
                            if (chatActivity.chatActivityEnterView == null || !chatActivity.isKeyboardVisible()) {
                                return false;
                            }
                            ChatActivity.this.chatActivityEnterView.closeKeyboard();
                            return true;
                        }
                    }, this);
                }
            }
        }
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:61:0x0102 A[LOOP:0: B:1:0x000c->B:61:0x0102, LOOP_END] */
    /* JADX WARNING: Removed duplicated region for block: B:63:0x0085 A[SYNTHETIC] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public org.telegram.ui.PhotoViewer.PlaceProviderObject getPlaceForPhoto(org.telegram.messenger.MessageObject r18, org.telegram.tgnet.TLRPC$FileLocation r19, boolean r20, boolean r21) {
        /*
            r17 = this;
            r0 = r17
            r1 = r19
            org.telegram.ui.Components.RecyclerListView r2 = r0.chatListView
            int r2 = r2.getChildCount()
            r3 = 0
            r4 = 0
        L_0x000c:
            r5 = 0
            if (r4 >= r2) goto L_0x0106
            org.telegram.ui.Components.RecyclerListView r6 = r0.chatListView
            android.view.View r6 = r6.getChildAt(r4)
            boolean r7 = r6 instanceof org.telegram.ui.Cells.ChatMessageCell
            if (r7 == 0) goto L_0x0033
            if (r18 == 0) goto L_0x0082
            r8 = r6
            org.telegram.ui.Cells.ChatMessageCell r8 = (org.telegram.ui.Cells.ChatMessageCell) r8
            org.telegram.messenger.MessageObject r9 = r8.getMessageObject()
            if (r9 == 0) goto L_0x0082
            int r9 = r9.getId()
            int r10 = r18.getId()
            if (r9 != r10) goto L_0x0082
            org.telegram.messenger.ImageReceiver r8 = r8.getPhotoImage()
            goto L_0x0083
        L_0x0033:
            boolean r8 = r6 instanceof org.telegram.ui.Cells.ChatActionCell
            if (r8 == 0) goto L_0x0082
            r8 = r6
            org.telegram.ui.Cells.ChatActionCell r8 = (org.telegram.ui.Cells.ChatActionCell) r8
            org.telegram.messenger.MessageObject r9 = r8.getMessageObject()
            if (r9 == 0) goto L_0x0082
            if (r18 == 0) goto L_0x0051
            int r9 = r9.getId()
            int r10 = r18.getId()
            if (r9 != r10) goto L_0x0082
            org.telegram.messenger.ImageReceiver r8 = r8.getPhotoImage()
            goto L_0x0083
        L_0x0051:
            if (r1 == 0) goto L_0x0082
            java.util.ArrayList<org.telegram.tgnet.TLRPC$PhotoSize> r10 = r9.photoThumbs
            if (r10 == 0) goto L_0x0082
            r10 = 0
        L_0x0058:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$PhotoSize> r11 = r9.photoThumbs
            int r11 = r11.size()
            if (r10 >= r11) goto L_0x0082
            java.util.ArrayList<org.telegram.tgnet.TLRPC$PhotoSize> r11 = r9.photoThumbs
            java.lang.Object r11 = r11.get(r10)
            org.telegram.tgnet.TLRPC$PhotoSize r11 = (org.telegram.tgnet.TLRPC$PhotoSize) r11
            org.telegram.tgnet.TLRPC$FileLocation r11 = r11.location
            if (r11 == 0) goto L_0x007f
            long r12 = r11.volume_id
            long r14 = r1.volume_id
            int r16 = (r12 > r14 ? 1 : (r12 == r14 ? 0 : -1))
            if (r16 != 0) goto L_0x007f
            int r11 = r11.local_id
            int r12 = r1.local_id
            if (r11 != r12) goto L_0x007f
            org.telegram.messenger.ImageReceiver r8 = r8.getPhotoImage()
            goto L_0x0083
        L_0x007f:
            int r10 = r10 + 1
            goto L_0x0058
        L_0x0082:
            r8 = r5
        L_0x0083:
            if (r8 == 0) goto L_0x0102
            r1 = 1082130432(0x40800000, float:4.0)
            if (r21 == 0) goto L_0x009f
            float r2 = r6.getY()
            float r4 = r8.getImageY2()
            float r2 = r2 + r4
            float r4 = r0.chatListViewPaddingTop
            int r9 = org.telegram.messenger.AndroidUtilities.dp(r1)
            float r9 = (float) r9
            float r4 = r4 - r9
            int r2 = (r2 > r4 ? 1 : (r2 == r4 ? 0 : -1))
            if (r2 >= 0) goto L_0x009f
            return r5
        L_0x009f:
            r2 = 2
            int[] r2 = new int[r2]
            r6.getLocationInWindow(r2)
            org.telegram.ui.PhotoViewer$PlaceProviderObject r4 = new org.telegram.ui.PhotoViewer$PlaceProviderObject
            r4.<init>()
            r9 = r2[r3]
            r4.viewX = r9
            r9 = 1
            r2 = r2[r9]
            int r9 = android.os.Build.VERSION.SDK_INT
            r10 = 21
            if (r9 < r10) goto L_0x00b8
            goto L_0x00ba
        L_0x00b8:
            int r3 = org.telegram.messenger.AndroidUtilities.statusBarHeight
        L_0x00ba:
            int r2 = r2 - r3
            r4.viewY = r2
            org.telegram.ui.Components.RecyclerListView r2 = r0.chatListView
            r4.parentView = r2
            boolean r2 = org.telegram.messenger.SharedConfig.smoothKeyboard
            if (r2 != 0) goto L_0x00d3
            android.widget.FrameLayout r2 = r0.pagedownButton
            if (r2 == 0) goto L_0x00d3
            java.lang.Object r2 = r2.getTag()
            if (r2 == 0) goto L_0x00d3
            if (r7 == 0) goto L_0x00d3
            org.telegram.ui.Components.ClippingImageView r5 = r0.animatingImageView
        L_0x00d3:
            r4.animatingImageView = r5
            r4.imageReceiver = r8
            if (r20 == 0) goto L_0x00df
            org.telegram.messenger.ImageReceiver$BitmapHolder r2 = r8.getBitmapSafe()
            r4.thumb = r2
        L_0x00df:
            int[] r2 = r8.getRoundRadius()
            r4.radius = r2
            boolean r2 = r6 instanceof org.telegram.ui.Cells.ChatActionCell
            if (r2 == 0) goto L_0x00f2
            org.telegram.tgnet.TLRPC$Chat r2 = r0.currentChat
            if (r2 == 0) goto L_0x00f2
            int r2 = r2.id
            int r2 = -r2
            r4.dialogId = r2
        L_0x00f2:
            float r2 = r0.chatListViewPaddingTop
            int r3 = r0.chatListViewPaddingVisibleOffset
            float r3 = (float) r3
            float r2 = r2 - r3
            int r1 = org.telegram.messenger.AndroidUtilities.dp(r1)
            float r1 = (float) r1
            float r2 = r2 - r1
            int r1 = (int) r2
            r4.clipTopAddition = r1
            return r4
        L_0x0102:
            int r4 = r4 + 1
            goto L_0x000c
        L_0x0106:
            return r5
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.getPlaceForPhoto(org.telegram.messenger.MessageObject, org.telegram.tgnet.TLRPC$FileLocation, boolean, boolean):org.telegram.ui.PhotoViewer$PlaceProviderObject");
    }

    private void showAttachmentError() {
        if (getParentActivity() != null) {
            BulletinFactory.of((BaseFragment) this).createErrorBulletin(LocaleController.getString("UnsupportedAttachment", NUM)).show();
        }
    }

    /* access modifiers changed from: private */
    public void fillEditingMediaWithCaption(CharSequence charSequence, ArrayList<TLRPC$MessageEntity> arrayList) {
        if (this.editingMessageObject != null) {
            if (!TextUtils.isEmpty(charSequence)) {
                MessageObject messageObject = this.editingMessageObject;
                messageObject.editingMessage = charSequence;
                messageObject.editingMessageEntities = arrayList;
                return;
            }
            ChatActivityEnterView chatActivityEnterView2 = this.chatActivityEnterView;
            if (chatActivityEnterView2 != null) {
                this.editingMessageObject.editingMessage = chatActivityEnterView2.getFieldText();
                MessageObject messageObject2 = this.editingMessageObject;
                if (messageObject2.editingMessage == null && !TextUtils.isEmpty(messageObject2.messageOwner.message)) {
                    this.editingMessageObject.editingMessage = "";
                }
            }
        }
    }

    /* JADX WARNING: Removed duplicated region for block: B:15:0x003f  */
    /* JADX WARNING: Removed duplicated region for block: B:16:0x004c  */
    /* JADX WARNING: Removed duplicated region for block: B:18:0x0050  */
    /* JADX WARNING: Removed duplicated region for block: B:20:0x0054  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private void sendUriAsDocument(android.net.Uri r19) {
        /*
            r18 = this;
            r1 = r18
            if (r19 != 0) goto L_0x0005
            return
        L_0x0005:
            java.lang.String r0 = r19.toString()
            java.lang.String r2 = "com.google.android.apps.photos.contentprovider"
            boolean r2 = r0.contains(r2)
            r3 = 0
            if (r2 == 0) goto L_0x0037
            java.lang.String r2 = "/1/"
            java.lang.String[] r0 = r0.split(r2)     // Catch:{ Exception -> 0x0033 }
            r2 = 1
            r0 = r0[r2]     // Catch:{ Exception -> 0x0033 }
            java.lang.String r2 = "/ACTUAL"
            int r2 = r0.indexOf(r2)     // Catch:{ Exception -> 0x0033 }
            r4 = -1
            if (r2 == r4) goto L_0x0037
            java.lang.String r0 = r0.substring(r3, r2)     // Catch:{ Exception -> 0x0033 }
            java.lang.String r2 = "UTF-8"
            java.lang.String r0 = java.net.URLDecoder.decode(r0, r2)     // Catch:{ Exception -> 0x0033 }
            android.net.Uri r0 = android.net.Uri.parse(r0)     // Catch:{ Exception -> 0x0033 }
            goto L_0x0039
        L_0x0033:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
        L_0x0037:
            r0 = r19
        L_0x0039:
            java.lang.String r2 = org.telegram.messenger.AndroidUtilities.getPath(r0)
            if (r2 != 0) goto L_0x004c
            java.lang.String r2 = r0.toString()
            java.lang.String r4 = "file"
            java.lang.String r0 = org.telegram.messenger.MediaController.copyFileToCache(r0, r4)
            r5 = r0
            r6 = r2
            goto L_0x004e
        L_0x004c:
            r5 = r2
            r6 = r5
        L_0x004e:
            if (r5 != 0) goto L_0x0054
            r18.showAttachmentError()
            return
        L_0x0054:
            r0 = 0
            r1.fillEditingMediaWithCaption(r0, r0)
            org.telegram.messenger.AccountInstance r4 = r18.getAccountInstance()
            r7 = 0
            r8 = 0
            r9 = 0
            long r10 = r1.dialog_id
            org.telegram.messenger.MessageObject r12 = r1.replyingMessageObject
            org.telegram.messenger.MessageObject r13 = r18.getThreadMessage()
            r14 = 0
            org.telegram.messenger.MessageObject r15 = r1.editingMessageObject
            r16 = 1
            r17 = 0
            org.telegram.messenger.SendMessagesHelper.prepareSendingDocument(r4, r5, r6, r7, r8, r9, r10, r12, r13, r14, r15, r16, r17)
            r1.hideFieldPanel(r3)
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.sendUriAsDocument(android.net.Uri):void");
    }

    public void onActivityResultFragment(int i, int i2, Intent intent) {
        String str;
        int i3 = i;
        Intent intent2 = intent;
        if (i2 != -1) {
            return;
        }
        if (i3 == 0 || i3 == 2) {
            createChatAttachView();
            ChatAttachAlert chatAttachAlert2 = this.chatAttachAlert;
            if (chatAttachAlert2 != null) {
                chatAttachAlert2.getPhotoLayout().onActivityResultFragment(i3, intent2, this.currentPicturePath);
            }
            this.currentPicturePath = null;
        } else if (i3 == 1) {
            if (intent2 == null || intent.getData() == null) {
                showAttachmentError();
                return;
            }
            Uri data = intent.getData();
            if (data.toString().contains("video")) {
                try {
                    str = AndroidUtilities.getPath(data);
                } catch (Exception e) {
                    FileLog.e((Throwable) e);
                    str = null;
                }
                if (str == null) {
                    showAttachmentError();
                }
                if (this.paused) {
                    this.startVideoEdit = str;
                } else {
                    openVideoEditor(str, (String) null);
                }
            } else if (this.editingMessageObject == null && this.chatMode == 1) {
                AlertsCreator.createScheduleDatePickerDialog(getParentActivity(), this.dialog_id, new AlertsCreator.ScheduleDatePickerDelegate(data) {
                    public final /* synthetic */ Uri f$1;

                    {
                        this.f$1 = r2;
                    }

                    public final void didSelectDate(boolean z, int i) {
                        ChatActivity.this.lambda$onActivityResultFragment$81$ChatActivity(this.f$1, z, i);
                    }
                });
            } else {
                fillEditingMediaWithCaption((CharSequence) null, (ArrayList<TLRPC$MessageEntity>) null);
                SendMessagesHelper.prepareSendingPhoto(getAccountInstance(), (String) null, data, this.dialog_id, this.replyingMessageObject, getThreadMessage(), (CharSequence) null, (ArrayList<TLRPC$MessageEntity>) null, (ArrayList<TLRPC$InputDocument>) null, (InputContentInfoCompat) null, 0, this.editingMessageObject, true, 0);
            }
            afterMessageSend();
        } else if (i3 != 21) {
        } else {
            if (intent2 == null) {
                showAttachmentError();
                return;
            }
            if (intent.getData() != null) {
                sendUriAsDocument(intent.getData());
            } else if (intent.getClipData() != null) {
                ClipData clipData = intent.getClipData();
                for (int i4 = 0; i4 < clipData.getItemCount(); i4++) {
                    sendUriAsDocument(clipData.getItemAt(i4).getUri());
                }
            } else {
                showAttachmentError();
            }
            afterMessageSend();
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$onActivityResultFragment$81 */
    public /* synthetic */ void lambda$onActivityResultFragment$81$ChatActivity(Uri uri, boolean z, int i) {
        fillEditingMediaWithCaption((CharSequence) null, (ArrayList<TLRPC$MessageEntity>) null);
        SendMessagesHelper.prepareSendingPhoto(getAccountInstance(), (String) null, uri, this.dialog_id, this.replyingMessageObject, getThreadMessage(), (CharSequence) null, (ArrayList<TLRPC$MessageEntity>) null, (ArrayList<TLRPC$InputDocument>) null, (InputContentInfoCompat) null, 0, this.editingMessageObject, z, i);
    }

    public void saveSelfArgs(Bundle bundle) {
        String str = this.currentPicturePath;
        if (str != null) {
            bundle.putString("path", str);
        }
    }

    public void restoreSelfArgs(Bundle bundle) {
        this.currentPicturePath = bundle.getString("path");
    }

    private void removeUnreadPlane(boolean z) {
        MessageObject messageObject = this.unreadMessageObject;
        if (messageObject != null) {
            if (z) {
                boolean[] zArr = this.forwardEndReached;
                zArr[1] = true;
                zArr[0] = true;
                this.first_unread_id = 0;
                this.last_message_id = 0;
            }
            this.createUnreadMessageAfterId = 0;
            this.createUnreadMessageAfterIdLoading = false;
            removeMessageObject(messageObject);
            this.unreadMessageObject = null;
        }
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v0, resolved type: org.telegram.ui.ChatActivity} */
    /* JADX WARNING: type inference failed for: r10v170 */
    /* JADX WARNING: type inference failed for: r10v178 */
    /* JADX WARNING: Code restructure failed: missing block: B:1306:0x191d, code lost:
        if (r0.containsKey("query_id") != false) goto L_0x193e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1312:0x1939, code lost:
        if (r0.getClass().equals(r1.messageOwner.media.getClass()) == false) goto L_0x193e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:312:0x06aa, code lost:
        if (r11 == 1) goto L_0x06ae;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:503:0x0acc, code lost:
        if (r6.messageOwner.from_scheduled == false) goto L_0x0afc;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:505:0x0ad4, code lost:
        if (r3.getId() >= r8.createUnreadMessageAfterId) goto L_0x0afc;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:515:0x0af2, code lost:
        if (r6.messageOwner.from_scheduled == false) goto L_0x0afc;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:517:0x0afa, code lost:
        if (r3.getId() >= r8.createUnreadMessageAfterId) goto L_0x0afc;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:665:0x0d6e, code lost:
        if (r30 != false) goto L_0x0d72;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:724:0x0e7b, code lost:
        if (r1 == 1) goto L_0x0e7d;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:759:0x0var_, code lost:
        if (r5.get(r5.size() - 2) == r8.scrollToMessage) goto L_0x0var_;
     */
    /* JADX WARNING: Incorrect type for immutable var: ssa=boolean, code=?, for r10v40, types: [boolean] */
    /* JADX WARNING: Multi-variable type inference failed */
    /* JADX WARNING: Removed duplicated region for block: B:1302:0x1911 A[SYNTHETIC, Splitter:B:1302:0x1911] */
    /* JADX WARNING: Removed duplicated region for block: B:1325:0x1964  */
    /* JADX WARNING: Removed duplicated region for block: B:1336:0x199c  */
    /* JADX WARNING: Removed duplicated region for block: B:1339:0x19a4  */
    /* JADX WARNING: Removed duplicated region for block: B:1342:0x19d0  */
    /* JADX WARNING: Removed duplicated region for block: B:1345:0x19ec  */
    /* JADX WARNING: Removed duplicated region for block: B:1352:0x1a06  */
    /* JADX WARNING: Removed duplicated region for block: B:1486:0x1CLASSNAME  */
    /* JADX WARNING: Removed duplicated region for block: B:1501:0x1cd2  */
    /* JADX WARNING: Removed duplicated region for block: B:153:0x03ce  */
    /* JADX WARNING: Removed duplicated region for block: B:1540:0x1d67  */
    /* JADX WARNING: Removed duplicated region for block: B:1543:0x1d72  */
    /* JADX WARNING: Removed duplicated region for block: B:1556:0x1dab  */
    /* JADX WARNING: Removed duplicated region for block: B:155:0x03d4  */
    /* JADX WARNING: Removed duplicated region for block: B:166:0x0408  */
    /* JADX WARNING: Removed duplicated region for block: B:175:0x0420  */
    /* JADX WARNING: Removed duplicated region for block: B:185:0x043c  */
    /* JADX WARNING: Removed duplicated region for block: B:194:0x0459  */
    /* JADX WARNING: Removed duplicated region for block: B:202:0x047c  */
    /* JADX WARNING: Removed duplicated region for block: B:214:0x04dc  */
    /* JADX WARNING: Removed duplicated region for block: B:2255:0x2b07  */
    /* JADX WARNING: Removed duplicated region for block: B:2312:0x2CLASSNAME  */
    /* JADX WARNING: Removed duplicated region for block: B:246:0x0539  */
    /* JADX WARNING: Removed duplicated region for block: B:254:0x0555  */
    /* JADX WARNING: Removed duplicated region for block: B:2556:0x06f7 A[SYNTHETIC] */
    /* JADX WARNING: Removed duplicated region for block: B:2560:0x0CLASSNAME A[EDGE_INSN: B:2560:0x0CLASSNAME->B:606:0x0CLASSNAME ?: BREAK  , SYNTHETIC] */
    /* JADX WARNING: Removed duplicated region for block: B:260:0x0582  */
    /* JADX WARNING: Removed duplicated region for block: B:2777:? A[RETURN, SYNTHETIC] */
    /* JADX WARNING: Removed duplicated region for block: B:2915:? A[RETURN, SYNTHETIC] */
    /* JADX WARNING: Removed duplicated region for block: B:301:0x0687  */
    /* JADX WARNING: Removed duplicated region for block: B:304:0x068e  */
    /* JADX WARNING: Removed duplicated region for block: B:311:0x06a9  */
    /* JADX WARNING: Removed duplicated region for block: B:313:0x06ad  */
    /* JADX WARNING: Removed duplicated region for block: B:320:0x06c8  */
    /* JADX WARNING: Removed duplicated region for block: B:336:0x070b  */
    /* JADX WARNING: Removed duplicated region for block: B:473:0x0a1e  */
    /* JADX WARNING: Removed duplicated region for block: B:474:0x0a2f A[ADDED_TO_REGION] */
    /* JADX WARNING: Removed duplicated region for block: B:481:0x0a4b  */
    /* JADX WARNING: Removed duplicated region for block: B:484:0x0a58  */
    /* JADX WARNING: Removed duplicated region for block: B:485:0x0a5e  */
    /* JADX WARNING: Removed duplicated region for block: B:596:0x0c2e  */
    /* JADX WARNING: Removed duplicated region for block: B:597:0x0CLASSNAME  */
    /* JADX WARNING: Removed duplicated region for block: B:600:0x0CLASSNAME  */
    /* JADX WARNING: Removed duplicated region for block: B:608:0x0c7f  */
    /* JADX WARNING: Removed duplicated region for block: B:610:0x0CLASSNAME A[ADDED_TO_REGION] */
    /* JADX WARNING: Removed duplicated region for block: B:615:0x0CLASSNAME  */
    /* JADX WARNING: Removed duplicated region for block: B:618:0x0ca0  */
    /* JADX WARNING: Removed duplicated region for block: B:620:0x0ca4  */
    /* JADX WARNING: Removed duplicated region for block: B:652:0x0d4f  */
    /* JADX WARNING: Removed duplicated region for block: B:670:0x0d79  */
    /* JADX WARNING: Removed duplicated region for block: B:758:0x0var_  */
    /* JADX WARNING: Removed duplicated region for block: B:797:0x0fce  */
    /* JADX WARNING: Removed duplicated region for block: B:818:0x1033  */
    /* JADX WARNING: Removed duplicated region for block: B:831:0x1055  */
    /* JADX WARNING: Removed duplicated region for block: B:854:0x10d3  */
    /* JADX WARNING: Removed duplicated region for block: B:857:0x10db  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public void didReceivedNotification(int r54, int r55, java.lang.Object... r56) {
        /*
            r53 = this;
            r8 = r53
            r0 = r54
            r9 = r56
            int r1 = org.telegram.messenger.NotificationCenter.messagesDidLoad
            java.lang.String r4 = ""
            r5 = 7
            r10 = 5
            r11 = -1
            r12 = 6
            r13 = 4
            r14 = 3
            r2 = 2
            r3 = 1
            r15 = 0
            if (r0 != r1) goto L_0x119a
            r0 = 10
            r1 = r9[r0]
            java.lang.Integer r1 = (java.lang.Integer) r1
            int r1 = r1.intValue()
            int r0 = r8.classGuid
            if (r1 != r0) goto L_0x30bd
            r0 = 11
            r0 = r9[r0]
            java.lang.Integer r0 = (java.lang.Integer) r0
            int r0 = r0.intValue()
            if (r0 >= 0) goto L_0x0032
            int r0 = -r0
            r1 = 1
            goto L_0x0033
        L_0x0032:
            r1 = 0
        L_0x0033:
            r7 = 9
            r22 = 8
            if (r1 != 0) goto L_0x008b
            boolean r6 = r8.fragmentBeginToShow
            if (r6 != 0) goto L_0x008b
            boolean r6 = r8.paused
            if (r6 != 0) goto L_0x008b
            int[] r6 = new int[r7]
            int r24 = org.telegram.messenger.NotificationCenter.chatInfoDidLoad
            r6[r15] = r24
            int r24 = org.telegram.messenger.NotificationCenter.groupCallUpdated
            r6[r3] = r24
            int r24 = org.telegram.messenger.NotificationCenter.dialogsNeedReload
            r6[r2] = r24
            int r24 = org.telegram.messenger.NotificationCenter.scheduledMessagesUpdated
            r6[r14] = r24
            int r24 = org.telegram.messenger.NotificationCenter.closeChats
            r6[r13] = r24
            int r24 = org.telegram.messenger.NotificationCenter.botKeyboardDidLoad
            r6[r10] = r24
            int r24 = org.telegram.messenger.NotificationCenter.userInfoDidLoad
            r6[r12] = r24
            int r24 = org.telegram.messenger.NotificationCenter.pinnedInfoDidLoad
            r6[r5] = r24
            int r24 = org.telegram.messenger.NotificationCenter.needDeleteDialog
            r6[r22] = r24
            int r12 = r8.transitionAnimationIndex
            if (r12 != 0) goto L_0x0082
            org.telegram.messenger.NotificationCenter r12 = r53.getNotificationCenter()
            int r10 = r8.transitionAnimationIndex
            int r6 = r12.setAnimationInProgress(r10, r6)
            r8.transitionAnimationIndex = r6
            org.telegram.ui.-$$Lambda$ChatActivity$Pj9h3qkxs9NzSPthtLjHNBqJ7PY r6 = new org.telegram.ui.-$$Lambda$ChatActivity$Pj9h3qkxs9NzSPthtLjHNBqJ7PY
            r6.<init>()
            r2 = 800(0x320, double:3.953E-321)
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r6, r2)
            goto L_0x008b
        L_0x0082:
            org.telegram.messenger.NotificationCenter r2 = r53.getNotificationCenter()
            int r3 = r8.transitionAnimationIndex
            r2.updateAllowedNotifications(r3, r6)
        L_0x008b:
            java.util.ArrayList<java.lang.Integer> r2 = r8.waitingForLoad
            java.lang.Integer r3 = java.lang.Integer.valueOf(r0)
            int r2 = r2.indexOf(r3)
            org.telegram.messenger.UserConfig r3 = r53.getUserConfig()
            int r3 = r3.getClientUserId()
            r6 = 14
            r6 = r9[r6]
            java.lang.Integer r6 = (java.lang.Integer) r6
            int r6 = r6.intValue()
            r26 = r9[r14]
            java.lang.Boolean r26 = (java.lang.Boolean) r26
            boolean r26 = r26.booleanValue()
            int r10 = r8.postponedScrollToLastMessageQueryIndex
            if (r10 <= 0) goto L_0x00b7
            if (r0 != r10) goto L_0x00b7
            r0 = 1
            goto L_0x00b8
        L_0x00b7:
            r0 = 0
        L_0x00b8:
            if (r0 == 0) goto L_0x00bc
            r8.postponedScrollToLastMessageQueryIndex = r15
        L_0x00bc:
            if (r2 != r11) goto L_0x011a
            int r0 = r8.chatMode
            r1 = 1
            if (r0 != r1) goto L_0x0119
            if (r6 != r1) goto L_0x0119
            if (r26 != 0) goto L_0x0119
            r8.waitingForReplyMessageLoad = r1
            java.util.ArrayList<java.lang.Integer> r0 = r8.waitingForLoad
            int r1 = r8.lastLoadIndex
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)
            r0.add(r1)
            org.telegram.messenger.MessagesController r9 = r53.getMessagesController()
            long r10 = r8.dialog_id
            long r12 = r8.mergeDialogId
            r14 = 0
            boolean r0 = org.telegram.messenger.AndroidUtilities.isTablet()
            if (r0 == 0) goto L_0x00e8
            r0 = 30
            r15 = 30
            goto L_0x00ec
        L_0x00e8:
            r0 = 20
            r15 = 20
        L_0x00ec:
            r16 = 0
            r17 = 0
            r18 = 1
            r19 = 0
            int r0 = r8.classGuid
            r20 = r0
            r21 = 2
            r22 = 0
            org.telegram.tgnet.TLRPC$Chat r0 = r8.currentChat
            boolean r23 = org.telegram.messenger.ChatObject.isChannel(r0)
            int r0 = r8.chatMode
            r24 = r0
            int r0 = r8.threadMessageId
            r25 = r0
            int r0 = r8.replyMaxReadId
            r26 = r0
            int r0 = r8.lastLoadIndex
            r27 = r0
            int r0 = r0 + 1
            r8.lastLoadIndex = r0
            r9.loadMessages(r10, r12, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27)
        L_0x0119:
            return
        L_0x011a:
            if (r1 != 0) goto L_0x0121
            java.util.ArrayList<java.lang.Integer> r1 = r8.waitingForLoad
            r1.remove(r2)
        L_0x0121:
            r1 = 2
            r2 = r9[r1]
            java.util.ArrayList r2 = (java.util.ArrayList) r2
            java.util.ArrayList<org.telegram.messenger.MessageObject> r1 = r8.messages
            boolean r1 = r1.isEmpty()
            if (r1 == 0) goto L_0x01a4
            int r1 = r2.size()
            r12 = 1
            if (r1 != r12) goto L_0x01a4
            java.lang.Object r1 = r2.get(r15)
            org.telegram.messenger.MessageObject r1 = (org.telegram.messenger.MessageObject) r1
            boolean r1 = org.telegram.messenger.MessageObject.isSystemSignUp(r1)
            if (r1 == 0) goto L_0x01a4
            r8.forceHistoryEmpty = r12
            boolean[] r0 = r8.endReached
            r0[r12] = r12
            r0[r15] = r12
            boolean[] r0 = r8.forwardEndReached
            r0[r12] = r12
            r0[r15] = r12
            r8.firstLoading = r15
            r8.showProgressView(r15)
            boolean r0 = r8.fragmentOpened
            if (r0 != 0) goto L_0x016a
            org.telegram.ui.Components.RecyclerListView r0 = r8.chatListView
            r0.setAnimateEmptyView(r15, r12)
            org.telegram.ui.Components.RecyclerListView r0 = r8.chatListView
            android.widget.FrameLayout r1 = r8.emptyViewContainer
            r0.setEmptyView(r1)
            org.telegram.ui.Components.RecyclerListView r0 = r8.chatListView
            r0.setAnimateEmptyView(r12, r12)
            goto L_0x0171
        L_0x016a:
            org.telegram.ui.Components.RecyclerListView r0 = r8.chatListView
            android.widget.FrameLayout r1 = r8.emptyViewContainer
            r0.setEmptyView(r1)
        L_0x0171:
            org.telegram.ui.ChatActivity$ChatActivityAdapter r0 = r8.chatAdapter
            r0.notifyDataSetChanged()
            r53.resumeDelayedFragmentAnimation()
            java.lang.Object r0 = r2.get(r15)
            org.telegram.messenger.MessageObject r0 = (org.telegram.messenger.MessageObject) r0
            boolean r1 = r0.isUnread()
            if (r1 == 0) goto L_0x01a3
            org.telegram.messenger.MessagesController r9 = r53.getMessagesController()
            long r10 = r8.dialog_id
            int r12 = r0.getId()
            int r13 = r0.getId()
            org.telegram.tgnet.TLRPC$Message r0 = r0.messageOwner
            int r14 = r0.date
            r15 = 0
            r16 = 0
            r18 = 0
            r19 = 1
            r20 = 0
            r9.markDialogAsRead(r10, r12, r13, r14, r15, r16, r18, r19, r20)
        L_0x01a3:
            return
        L_0x01a4:
            int r1 = r8.chatMode
            if (r1 == r6) goto L_0x01b5
            r6 = 1
            if (r1 == r6) goto L_0x01b4
            int r0 = r2.size()
            r8.scheduledMessagesCount = r0
            r8.updateScheduledInterface(r6)
        L_0x01b4:
            return
        L_0x01b5:
            r6 = 1
            boolean r12 = r8.waitingForReplyMessageLoad
            if (r12 == 0) goto L_0x021e
            if (r1 == r6) goto L_0x0206
            r1 = r12
            boolean r6 = r8.createUnreadMessageAfterIdLoading
            if (r6 != 0) goto L_0x0207
            r6 = 0
        L_0x01c2:
            int r10 = r2.size()
            if (r6 >= r10) goto L_0x0200
            java.lang.Object r10 = r2.get(r6)
            org.telegram.messenger.MessageObject r10 = (org.telegram.messenger.MessageObject) r10
            int r12 = r10.getId()
            int r11 = r8.startLoadFromMessageId
            if (r12 != r11) goto L_0x01d8
        L_0x01d6:
            r12 = 1
            goto L_0x0201
        L_0x01d8:
            int r6 = r6 + 1
            int r11 = r2.size()
            if (r6 >= r11) goto L_0x01fd
            java.lang.Object r11 = r2.get(r6)
            org.telegram.messenger.MessageObject r11 = (org.telegram.messenger.MessageObject) r11
            int r12 = r10.getId()
            int r14 = r8.startLoadFromMessageId
            if (r12 < r14) goto L_0x01fd
            int r11 = r11.getId()
            int r12 = r8.startLoadFromMessageId
            if (r11 >= r12) goto L_0x01fd
            int r6 = r10.getId()
            r8.startLoadFromMessageId = r6
            goto L_0x01d6
        L_0x01fd:
            r11 = -1
            r14 = 3
            goto L_0x01c2
        L_0x0200:
            r12 = 0
        L_0x0201:
            if (r12 != 0) goto L_0x0207
            r8.startLoadFromMessageId = r15
            return
        L_0x0206:
            r1 = r12
        L_0x0207:
            int r6 = r8.startLoadFromMessageId
            boolean r10 = r8.needSelectFromMessageId
            int r11 = r8.createUnreadMessageAfterId
            boolean r12 = r8.createUnreadMessageAfterIdLoading
            r53.clearChatData()
            int r14 = r8.chatMode
            if (r14 != 0) goto L_0x021c
            r8.createUnreadMessageAfterId = r11
            r8.startLoadFromMessageId = r6
            r8.needSelectFromMessageId = r10
        L_0x021c:
            r6 = r12
            goto L_0x0220
        L_0x021e:
            r1 = r12
            r6 = 0
        L_0x0220:
            int r10 = r8.loadsCount
            r12 = 1
            int r10 = r10 + r12
            r8.loadsCount = r10
            r10 = r9[r15]
            java.lang.Long r10 = (java.lang.Long) r10
            long r10 = r10.longValue()
            r27 = r6
            long r5 = r8.dialog_id
            int r30 = (r10 > r5 ? 1 : (r10 == r5 ? 0 : -1))
            if (r30 != 0) goto L_0x0238
            r5 = 0
            goto L_0x0239
        L_0x0238:
            r5 = 1
        L_0x0239:
            r6 = r9[r12]
            java.lang.Integer r6 = (java.lang.Integer) r6
            int r6 = r6.intValue()
            r10 = r9[r13]
            java.lang.Integer r10 = (java.lang.Integer) r10
            int r10 = r10.intValue()
            r11 = 7
            r30 = r9[r11]
            java.lang.Integer r30 = (java.lang.Integer) r30
            r30.intValue()
            r11 = r9[r22]
            java.lang.Integer r11 = (java.lang.Integer) r11
            int r11 = r11.intValue()
            r30 = r9[r7]
            java.lang.Boolean r30 = (java.lang.Boolean) r30
            boolean r30 = r30.booleanValue()
            r31 = 12
            r31 = r9[r31]
            java.lang.Integer r31 = (java.lang.Integer) r31
            int r12 = r31.intValue()
            r31 = 13
            r31 = r9[r31]
            java.lang.Integer r31 = (java.lang.Integer) r31
            int r31 = r31.intValue()
            if (r31 >= 0) goto L_0x027f
            int r31 = r31 * -1
            r8.hasAllMentionsLocal = r15
            r7 = r31
            r14 = 1
            goto L_0x028a
        L_0x027f:
            boolean r14 = r8.first
            if (r14 == 0) goto L_0x0287
            r14 = 1
            r8.hasAllMentionsLocal = r14
            goto L_0x0288
        L_0x0287:
            r14 = 1
        L_0x0288:
            r7 = r31
        L_0x028a:
            if (r11 != r13) goto L_0x02c0
            r8.startLoadFromMessageId = r12
            int r31 = r2.size()
            int r31 = r31 + -1
            r15 = r31
        L_0x0296:
            if (r15 <= 0) goto L_0x02c0
            java.lang.Object r31 = r2.get(r15)
            r13 = r31
            org.telegram.messenger.MessageObject r13 = (org.telegram.messenger.MessageObject) r13
            int r14 = r13.type
            if (r14 >= 0) goto L_0x02bb
            int r13 = r13.getId()
            int r14 = r8.startLoadFromMessageId
            if (r13 != r14) goto L_0x02bb
            r13 = 1
            int r15 = r15 - r13
            java.lang.Object r14 = r2.get(r15)
            org.telegram.messenger.MessageObject r14 = (org.telegram.messenger.MessageObject) r14
            int r14 = r14.getId()
            r8.startLoadFromMessageId = r14
            goto L_0x02c0
        L_0x02bb:
            int r15 = r15 + -1
            r13 = 4
            r14 = 1
            goto L_0x0296
        L_0x02c0:
            if (r0 == 0) goto L_0x03c8
            if (r11 != 0) goto L_0x0317
            if (r26 == 0) goto L_0x0317
            int r14 = r2.size()
            if (r14 >= r6) goto L_0x0317
            int r0 = r8.lastLoadIndex
            r8.postponedScrollToLastMessageQueryIndex = r0
            java.util.ArrayList<java.lang.Integer> r1 = r8.waitingForLoad
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r1.add(r0)
            org.telegram.messenger.MessagesController r30 = r53.getMessagesController()
            long r0 = r8.dialog_id
            r31 = r0
            long r0 = r8.mergeDialogId
            r33 = r0
            r35 = 0
            r37 = 0
            r38 = 0
            r39 = 0
            r40 = 0
            int r0 = r8.classGuid
            r41 = r0
            r42 = 0
            r43 = 0
            org.telegram.tgnet.TLRPC$Chat r0 = r8.currentChat
            boolean r44 = org.telegram.messenger.ChatObject.isChannel(r0)
            int r0 = r8.chatMode
            r45 = r0
            int r0 = r8.threadMessageId
            r46 = r0
            int r0 = r8.replyMaxReadId
            r47 = r0
            int r0 = r8.lastLoadIndex
            r48 = r0
            int r0 = r0 + 1
            r8.lastLoadIndex = r0
            r36 = r6
            r30.loadMessages(r31, r33, r35, r36, r37, r38, r39, r40, r41, r42, r43, r44, r45, r46, r47, r48)
            return
        L_0x0317:
            r14 = 4
            if (r11 != r14) goto L_0x031e
            int r14 = r8.startLoadFromMessageId
            r8.postponedScrollMessageId = r14
        L_0x031e:
            org.telegram.ui.ActionBar.AlertDialog r14 = r8.progressDialog
            if (r14 == 0) goto L_0x0325
            r14.dismiss()
        L_0x0325:
            r14 = 0
            r8.showPinnedProgress(r14)
            boolean r14 = r8.postponedScrollIsCanceled
            if (r14 == 0) goto L_0x032e
            return
        L_0x032e:
            int r14 = r8.postponedScrollMessageId
            if (r14 != 0) goto L_0x0337
            r53.clearChatData()
            goto L_0x03c8
        L_0x0337:
            boolean r14 = r8.showScrollToMessageError
            if (r14 == 0) goto L_0x03ae
            r14 = 0
        L_0x033c:
            int r15 = r2.size()
            if (r14 >= r15) goto L_0x0355
            java.lang.Object r15 = r2.get(r14)
            org.telegram.messenger.MessageObject r15 = (org.telegram.messenger.MessageObject) r15
            int r15 = r15.getId()
            int r13 = r8.postponedScrollMessageId
            if (r15 != r13) goto L_0x0352
            r13 = 1
            goto L_0x0356
        L_0x0352:
            int r14 = r14 + 1
            goto L_0x033c
        L_0x0355:
            r13 = 0
        L_0x0356:
            if (r13 != 0) goto L_0x03ab
            boolean r0 = r53.isThreadChat()
            if (r0 == 0) goto L_0x0396
            android.os.Bundle r0 = new android.os.Bundle
            r0.<init>()
            org.telegram.tgnet.TLRPC$EncryptedChat r1 = r8.currentEncryptedChat
            if (r1 == 0) goto L_0x036f
            int r1 = r1.id
            java.lang.String r2 = "enc_id"
            r0.putInt(r2, r1)
            goto L_0x0385
        L_0x036f:
            org.telegram.tgnet.TLRPC$Chat r1 = r8.currentChat
            if (r1 == 0) goto L_0x037b
            int r1 = r1.id
            java.lang.String r2 = "chat_id"
            r0.putInt(r2, r1)
            goto L_0x0385
        L_0x037b:
            org.telegram.tgnet.TLRPC$User r1 = r8.currentUser
            int r1 = r1.id
            java.lang.String r2 = "user_id"
            r0.putInt(r2, r1)
        L_0x0385:
            int r1 = r8.postponedScrollMessageId
            java.lang.String r2 = "message_id"
            r0.putInt(r2, r1)
            org.telegram.ui.ChatActivity r1 = new org.telegram.ui.ChatActivity
            r1.<init>(r0)
            r2 = 1
            r8.presentFragment(r1, r2)
            goto L_0x03aa
        L_0x0396:
            org.telegram.ui.Components.BulletinFactory r0 = org.telegram.ui.Components.BulletinFactory.of((org.telegram.ui.ActionBar.BaseFragment) r53)
            r1 = 2131626125(0x7f0e088d, float:1.8879477E38)
            java.lang.String r2 = "MessageNotFound"
            java.lang.String r1 = org.telegram.messenger.LocaleController.getString(r2, r1)
            org.telegram.ui.Components.Bulletin r0 = r0.createErrorBulletin(r1)
            r0.show()
        L_0x03aa:
            return
        L_0x03ab:
            r14 = 0
            r8.showScrollToMessageError = r14
        L_0x03ae:
            int r14 = r8.startLoadFromMessageId
            boolean r15 = r8.needSelectFromMessageId
            int r13 = r8.createUnreadMessageAfterId
            r36 = r1
            boolean r1 = r8.createUnreadMessageAfterIdLoading
            r53.clearChatData()
            r27 = r1
            int r1 = r8.chatMode
            if (r1 != 0) goto L_0x03ca
            r8.createUnreadMessageAfterId = r13
            r8.startLoadFromMessageId = r14
            r8.needSelectFromMessageId = r15
            goto L_0x03ca
        L_0x03c8:
            r36 = r1
        L_0x03ca:
            androidx.recyclerview.widget.ChatListItemAnimator r1 = r8.chatListItemAnimator
            if (r1 == 0) goto L_0x03d2
            r13 = 0
            r1.setShouldAnimateEnterFromBottom(r13)
        L_0x03d2:
            if (r10 == 0) goto L_0x0408
            r1 = 5
            r13 = r9[r1]
            java.lang.Integer r13 = (java.lang.Integer) r13
            int r1 = r13.intValue()
            r8.last_message_id = r1
            r1 = 3
            if (r11 != r1) goto L_0x03fc
            boolean r1 = r8.loadingFromOldPosition
            if (r1 == 0) goto L_0x03f7
            r1 = 6
            r9 = r9[r1]
            java.lang.Integer r9 = (java.lang.Integer) r9
            int r1 = r9.intValue()
            if (r1 == 0) goto L_0x03f3
            r8.createUnreadMessageAfterId = r10
        L_0x03f3:
            r9 = 0
            r8.loadingFromOldPosition = r9
            goto L_0x03f9
        L_0x03f7:
            r9 = 0
            r1 = 0
        L_0x03f9:
            r8.first_unread_id = r9
            goto L_0x041e
        L_0x03fc:
            r8.first_unread_id = r10
            r1 = 6
            r9 = r9[r1]
            java.lang.Integer r9 = (java.lang.Integer) r9
            int r1 = r9.intValue()
            goto L_0x041e
        L_0x0408:
            int r1 = r8.startLoadFromMessageId
            if (r1 == 0) goto L_0x041d
            r1 = 3
            if (r11 == r1) goto L_0x0412
            r1 = 4
            if (r11 != r1) goto L_0x041d
        L_0x0412:
            r1 = 5
            r9 = r9[r1]
            java.lang.Integer r9 = (java.lang.Integer) r9
            int r1 = r9.intValue()
            r8.last_message_id = r1
        L_0x041d:
            r1 = 0
        L_0x041e:
            if (r11 == 0) goto L_0x043c
            boolean r9 = r53.isThreadChat()
            if (r9 == 0) goto L_0x042a
            int r9 = r8.first_unread_id
            if (r9 != 0) goto L_0x0436
        L_0x042a:
            int r9 = r8.startLoadFromMessageId
            if (r9 != 0) goto L_0x0436
            int r9 = r8.last_message_id
            if (r9 == 0) goto L_0x0433
            goto L_0x0436
        L_0x0433:
            r9 = 1
            r10 = 0
            goto L_0x043e
        L_0x0436:
            boolean[] r9 = r8.forwardEndReached
            r10 = 0
            r9[r5] = r10
            goto L_0x043d
        L_0x043c:
            r10 = 0
        L_0x043d:
            r9 = 1
        L_0x043e:
            if (r11 == r9) goto L_0x0443
            r13 = 3
            if (r11 != r13) goto L_0x0455
        L_0x0443:
            if (r5 != r9) goto L_0x0455
            boolean[] r13 = r8.endReached
            boolean[] r14 = r8.cacheEndReached
            r14[r10] = r9
            r13[r10] = r9
            boolean[] r13 = r8.forwardEndReached
            r13[r10] = r10
            int[] r13 = r8.minMessageId
            r13[r10] = r10
        L_0x0455:
            int r13 = r8.chatMode
            if (r13 != r9) goto L_0x0467
            boolean[] r13 = r8.endReached
            boolean[] r14 = r8.cacheEndReached
            r14[r10] = r9
            r13[r10] = r9
            boolean[] r13 = r8.forwardEndReached
            r13[r10] = r9
            r13[r10] = r9
        L_0x0467:
            int r10 = r8.loadsCount
            if (r10 != r9) goto L_0x0478
            int r10 = r2.size()
            r13 = 20
            if (r10 <= r13) goto L_0x0478
            int r10 = r8.loadsCount
            int r10 = r10 + r9
            r8.loadsCount = r10
        L_0x0478:
            boolean r10 = r8.firstLoading
            if (r10 == 0) goto L_0x04d6
            boolean[] r10 = r8.forwardEndReached
            boolean r10 = r10[r5]
            if (r10 != 0) goto L_0x04cb
            java.util.ArrayList<org.telegram.messenger.MessageObject> r10 = r8.messages
            r10.clear()
            java.util.HashMap<java.lang.String, java.util.ArrayList<org.telegram.messenger.MessageObject>> r10 = r8.messagesByDays
            r10.clear()
            android.util.LongSparseArray<org.telegram.messenger.MessageObject$GroupedMessages> r10 = r8.groupedMessagesMap
            r10.clear()
            r10 = 0
            r8.threadMessageAdded = r10
            r10 = 2
            r13 = 0
        L_0x0496:
            if (r13 >= r10) goto L_0x04cb
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r14 = r8.messagesDict
            r14 = r14[r13]
            r14.clear()
            org.telegram.tgnet.TLRPC$EncryptedChat r14 = r8.currentEncryptedChat
            if (r14 != 0) goto L_0x04b1
            int[] r14 = r8.maxMessageId
            r15 = 2147483647(0x7fffffff, float:NaN)
            r14[r13] = r15
            int[] r14 = r8.minMessageId
            r21 = -2147483648(0xfffffffvar_, float:-0.0)
            r14[r13] = r21
            goto L_0x04be
        L_0x04b1:
            r15 = 2147483647(0x7fffffff, float:NaN)
            r21 = -2147483648(0xfffffffvar_, float:-0.0)
            int[] r14 = r8.maxMessageId
            r14[r13] = r21
            int[] r14 = r8.minMessageId
            r14[r13] = r15
        L_0x04be:
            int[] r14 = r8.maxDate
            r14[r13] = r21
            int[] r14 = r8.minDate
            r15 = 0
            r14[r13] = r15
            int r13 = r13 + 1
            r10 = 2
            goto L_0x0496
        L_0x04cb:
            r15 = 0
            r8.firstLoading = r15
            org.telegram.ui.-$$Lambda$ChatActivity$wwqWhZTn8GwXN1-Y5H7y3T6W4S0 r13 = new org.telegram.ui.-$$Lambda$ChatActivity$wwqWhZTn8GwXN1-Y5H7y3T6W4S0
            r13.<init>()
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r13)
        L_0x04d6:
            boolean r13 = r53.isThreadChat()
            if (r13 == 0) goto L_0x0533
            r10 = 2
            r13 = 3
            if (r11 == r10) goto L_0x04e2
            if (r11 != r13) goto L_0x0533
        L_0x04e2:
            if (r26 != 0) goto L_0x0533
            if (r11 != r13) goto L_0x04ee
            boolean r13 = r8.scrollToThreadMessage
            if (r13 == 0) goto L_0x04ee
            int r13 = r8.threadMessageId
            r8.startLoadFromMessageId = r13
        L_0x04ee:
            int r13 = r2.size()
            r9 = 0
            r10 = 0
            r14 = 0
            r15 = 0
        L_0x04f6:
            if (r15 >= r13) goto L_0x0513
            java.lang.Object r21 = r2.get(r15)
            org.telegram.messenger.MessageObject r21 = (org.telegram.messenger.MessageObject) r21
            r56 = r13
            int r13 = r21.getId()
            if (r13 != r12) goto L_0x0507
            r14 = 1
        L_0x0507:
            if (r13 <= r12) goto L_0x050c
            int r10 = r10 + 1
            goto L_0x050e
        L_0x050c:
            int r9 = r9 + 1
        L_0x050e:
            int r15 = r15 + 1
            r13 = r56
            goto L_0x04f6
        L_0x0513:
            r13 = 2
            if (r11 != r13) goto L_0x0519
            r13 = 10
            goto L_0x051b
        L_0x0519:
            int r13 = r6 / 2
        L_0x051b:
            if (r14 == 0) goto L_0x051f
            int r13 = r13 + 1
        L_0x051f:
            if (r9 >= r13) goto L_0x0528
            boolean[] r9 = r8.endReached
            r14 = 1
            r15 = 0
            r9[r15] = r14
            goto L_0x052a
        L_0x0528:
            r14 = 1
            r15 = 0
        L_0x052a:
            int r9 = r6 - r13
            if (r10 >= r9) goto L_0x0534
            boolean[] r9 = r8.forwardEndReached
            r9[r15] = r14
            goto L_0x0534
        L_0x0533:
            r14 = 1
        L_0x0534:
            int r9 = r8.chatMode
            r10 = 2
            if (r9 != r10) goto L_0x053d
            boolean[] r9 = r8.endReached
            r9[r5] = r14
        L_0x053d:
            if (r11 != 0) goto L_0x05fb
            boolean[] r9 = r8.forwardEndReached
            r13 = 0
            boolean r9 = r9[r13]
            if (r9 == 0) goto L_0x05fb
            java.util.ArrayList<org.telegram.messenger.MessageObject> r9 = r8.pendingSendMessages
            boolean r9 = r9.isEmpty()
            if (r9 != 0) goto L_0x05fb
            int r9 = r2.size()
            r13 = 0
        L_0x0553:
            if (r13 >= r9) goto L_0x057a
            android.util.SparseArray<org.telegram.messenger.MessageObject> r14 = r8.pendingSendMessagesDict
            java.lang.Object r15 = r2.get(r13)
            org.telegram.messenger.MessageObject r15 = (org.telegram.messenger.MessageObject) r15
            int r15 = r15.getId()
            java.lang.Object r14 = r14.get(r15)
            org.telegram.messenger.MessageObject r14 = (org.telegram.messenger.MessageObject) r14
            if (r14 == 0) goto L_0x0577
            android.util.SparseArray<org.telegram.messenger.MessageObject> r15 = r8.pendingSendMessagesDict
            int r10 = r14.getId()
            r15.remove(r10)
            java.util.ArrayList<org.telegram.messenger.MessageObject> r10 = r8.pendingSendMessages
            r10.remove(r14)
        L_0x0577:
            int r13 = r13 + 1
            goto L_0x0553
        L_0x057a:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r9 = r8.pendingSendMessages
            boolean r9 = r9.isEmpty()
            if (r9 != 0) goto L_0x05fb
            java.util.ArrayList<org.telegram.messenger.MessageObject> r9 = r8.pendingSendMessages
            r10 = 0
            java.lang.Object r9 = r9.get(r10)
            org.telegram.messenger.MessageObject r9 = (org.telegram.messenger.MessageObject) r9
            org.telegram.tgnet.TLRPC$Message r9 = r9.messageOwner
            int r9 = r9.date
            boolean r13 = r2.isEmpty()
            if (r13 != 0) goto L_0x05e5
            java.lang.Object r13 = r2.get(r10)
            org.telegram.messenger.MessageObject r13 = (org.telegram.messenger.MessageObject) r13
            org.telegram.tgnet.TLRPC$Message r10 = r13.messageOwner
            int r10 = r10.date
            if (r9 < r10) goto L_0x05a2
            goto L_0x05e5
        L_0x05a2:
            int r10 = r2.size()
            r12 = 1
            int r10 = r10 - r12
            java.lang.Object r10 = r2.get(r10)
            org.telegram.messenger.MessageObject r10 = (org.telegram.messenger.MessageObject) r10
            org.telegram.tgnet.TLRPC$Message r10 = r10.messageOwner
            int r10 = r10.date
            if (r9 > r10) goto L_0x05ba
            int r9 = r2.size()
            r14 = r9
            goto L_0x05e6
        L_0x05ba:
            int r10 = r2.size()
            r13 = 0
            r14 = 0
        L_0x05c0:
            int r15 = r10 + -1
            if (r13 >= r15) goto L_0x05e6
            java.lang.Object r15 = r2.get(r13)
            org.telegram.messenger.MessageObject r15 = (org.telegram.messenger.MessageObject) r15
            org.telegram.tgnet.TLRPC$Message r15 = r15.messageOwner
            int r15 = r15.date
            if (r15 < r9) goto L_0x05e1
            int r15 = r13 + 1
            java.lang.Object r21 = r2.get(r15)
            r12 = r21
            org.telegram.messenger.MessageObject r12 = (org.telegram.messenger.MessageObject) r12
            org.telegram.tgnet.TLRPC$Message r12 = r12.messageOwner
            int r12 = r12.date
            if (r12 > r9) goto L_0x05e1
            r14 = r15
        L_0x05e1:
            int r13 = r13 + 1
            r12 = 1
            goto L_0x05c0
        L_0x05e5:
            r14 = 0
        L_0x05e6:
            java.util.ArrayList r9 = new java.util.ArrayList
            r9.<init>(r2)
            java.util.ArrayList<org.telegram.messenger.MessageObject> r2 = r8.pendingSendMessages
            r9.addAll(r14, r2)
            java.util.ArrayList<org.telegram.messenger.MessageObject> r2 = r8.pendingSendMessages
            r2.clear()
            android.util.SparseArray<org.telegram.messenger.MessageObject> r2 = r8.pendingSendMessagesDict
            r2.clear()
            r2 = r9
        L_0x05fb:
            boolean r9 = r8.threadMessageAdded
            if (r9 != 0) goto L_0x0684
            boolean r9 = r53.isThreadChat()
            if (r9 == 0) goto L_0x0684
            if (r11 != 0) goto L_0x060d
            int r9 = r2.size()
            if (r9 < r6) goto L_0x061a
        L_0x060d:
            r9 = 2
            if (r11 == r9) goto L_0x0613
            r9 = 3
            if (r11 != r9) goto L_0x0684
        L_0x0613:
            boolean[] r9 = r8.endReached
            r12 = 0
            boolean r9 = r9[r12]
            if (r9 == 0) goto L_0x0684
        L_0x061a:
            org.telegram.tgnet.TLRPC$TL_message r9 = new org.telegram.tgnet.TLRPC$TL_message
            r9.<init>()
            org.telegram.messenger.MessageObject r12 = r8.threadMessageObject
            int r12 = r12.getRepliesCount()
            if (r12 != 0) goto L_0x0643
            boolean r12 = r8.isComments
            if (r12 == 0) goto L_0x0637
            r12 = 2131626266(0x7f0e091a, float:1.8879763E38)
            java.lang.String r13 = "NoComments"
            java.lang.String r12 = org.telegram.messenger.LocaleController.getString(r13, r12)
            r9.message = r12
            goto L_0x064e
        L_0x0637:
            r12 = 2131626303(0x7f0e093f, float:1.8879838E38)
            java.lang.String r13 = "NoReplies"
            java.lang.String r12 = org.telegram.messenger.LocaleController.getString(r13, r12)
            r9.message = r12
            goto L_0x064e
        L_0x0643:
            r12 = 2131625200(0x7f0e04f0, float:1.8877601E38)
            java.lang.String r13 = "DiscussionStarted"
            java.lang.String r12 = org.telegram.messenger.LocaleController.getString(r13, r12)
            r9.message = r12
        L_0x064e:
            r13 = 0
            r9.id = r13
            org.telegram.messenger.MessageObject r12 = r8.threadMessageObject
            org.telegram.tgnet.TLRPC$Message r12 = r12.messageOwner
            int r12 = r12.date
            r9.date = r12
            org.telegram.messenger.MessageObject r14 = new org.telegram.messenger.MessageObject
            int r12 = r8.currentAccount
            r14.<init>(r12, r9, r13, r13)
            r8.replyMessageHeaderObject = r14
            r9 = 10
            r14.type = r9
            r9 = 1
            r14.contentType = r9
            r14.isDateObject = r9
            int r9 = r8.lastStableId
            int r15 = r9 + 1
            r8.lastStableId = r15
            r14.stableId = r9
            r2.add(r14)
            r8.updateReplyMessageHeader(r13)
            java.util.ArrayList<org.telegram.messenger.MessageObject> r9 = r8.threadMessageObjects
            r2.addAll(r9)
            int r6 = r6 + 2
            r9 = 1
            r8.threadMessageAdded = r9
            goto L_0x0685
        L_0x0684:
            r9 = 1
        L_0x0685:
            if (r11 != r9) goto L_0x068a
            java.util.Collections.reverse(r2)
        L_0x068a:
            org.telegram.tgnet.TLRPC$EncryptedChat r12 = r8.currentEncryptedChat
            if (r12 != 0) goto L_0x06a6
            org.telegram.messenger.MediaDataController r37 = r53.getMediaDataController()
            long r13 = r8.dialog_id
            int r12 = r8.chatMode
            if (r12 != r9) goto L_0x069b
            r41 = 1
            goto L_0x069d
        L_0x069b:
            r41 = 0
        L_0x069d:
            r42 = 0
            r38 = r2
            r39 = r13
            r37.loadReplyMessagesForMessages(r38, r39, r41, r42)
        L_0x06a6:
            r9 = 2
            if (r11 == r9) goto L_0x06ad
            r9 = 1
            if (r11 != r9) goto L_0x06bb
            goto L_0x06ae
        L_0x06ad:
            r9 = 1
        L_0x06ae:
            boolean r12 = r2.isEmpty()
            if (r12 == 0) goto L_0x06bb
            if (r26 != 0) goto L_0x06bb
            boolean[] r12 = r8.forwardEndReached
            r13 = 0
            r12[r13] = r9
        L_0x06bb:
            org.telegram.messenger.MediaController r13 = org.telegram.messenger.MediaController.getInstance()
            int r14 = r2.size()
            r10 = 0
            r12 = 0
            r15 = 0
        L_0x06c6:
            if (r10 >= r14) goto L_0x06f7
            int r21 = r14 - r10
            r56 = r12
            int r12 = r21 + -1
            r9 = r56
            java.lang.Object r12 = r2.get(r12)
            org.telegram.messenger.MessageObject r12 = (org.telegram.messenger.MessageObject) r12
            org.telegram.tgnet.TLRPC$Message r12 = r12.messageOwner
            org.telegram.tgnet.TLRPC$MessageAction r12 = r12.action
            r56 = r14
            if (r10 != 0) goto L_0x06e5
            boolean r14 = r12 instanceof org.telegram.tgnet.TLRPC$TL_messageActionChatCreate
            if (r14 == 0) goto L_0x06e5
            r12 = r9
            r15 = 1
            goto L_0x06f1
        L_0x06e5:
            if (r15 != 0) goto L_0x06e8
            goto L_0x06f8
        L_0x06e8:
            r14 = 2
            if (r10 >= r14) goto L_0x06f0
            boolean r14 = r12 instanceof org.telegram.tgnet.TLRPC$TL_messageActionChatEditPhoto
            if (r14 == 0) goto L_0x06f0
            goto L_0x06f1
        L_0x06f0:
            r12 = r9
        L_0x06f1:
            int r10 = r10 + 1
            r14 = r56
            r9 = 1
            goto L_0x06c6
        L_0x06f7:
            r9 = r12
        L_0x06f8:
            r56 = 0
            r10 = 0
            r14 = 0
            r15 = 0
            r31 = 0
            r37 = 0
            r38 = 0
        L_0x0703:
            int r12 = r2.size()
            r39 = r7
            if (r10 >= r12) goto L_0x0CLASSNAME
            java.lang.Object r12 = r2.get(r10)
            org.telegram.messenger.MessageObject r12 = (org.telegram.messenger.MessageObject) r12
            org.telegram.messenger.MessageObject r7 = r12.replyMessageObject
            if (r7 == 0) goto L_0x0725
            r42 = r10
            android.util.SparseArray<org.telegram.messenger.MessageObject> r10 = r8.repliesMessagesDict
            int r7 = r7.getId()
            r43 = r1
            org.telegram.messenger.MessageObject r1 = r12.replyMessageObject
            r10.put(r7, r1)
            goto L_0x0729
        L_0x0725:
            r43 = r1
            r42 = r10
        L_0x0729:
            int r1 = r12.getId()
            int r7 = r8.threadMessageId
            if (r7 == 0) goto L_0x0741
            boolean r7 = r12.isOut()
            if (r7 == 0) goto L_0x073a
            int r7 = r8.threadMaxOutboxReadId
            goto L_0x073c
        L_0x073a:
            int r7 = r8.threadMaxInboxReadId
        L_0x073c:
            if (r1 > r7) goto L_0x0741
            r12.setIsRead()
        L_0x0741:
            int r7 = r12.getApproximateHeight()
            int r7 = r31 + r7
            org.telegram.tgnet.TLRPC$User r10 = r8.currentUser
            r31 = r6
            if (r10 == 0) goto L_0x077d
            boolean r6 = r10.self
            if (r6 == 0) goto L_0x0759
            org.telegram.tgnet.TLRPC$Message r6 = r12.messageOwner
            r44 = r12
            r12 = 1
            r6.out = r12
            goto L_0x075c
        L_0x0759:
            r44 = r12
            r12 = 1
        L_0x075c:
            int r6 = r8.chatMode
            if (r6 == r12) goto L_0x0778
            r12 = r56
            r6 = r44
            boolean r10 = r10.bot
            if (r10 == 0) goto L_0x076e
            boolean r10 = r6.isOut()
            if (r10 != 0) goto L_0x0774
        L_0x076e:
            org.telegram.tgnet.TLRPC$User r10 = r8.currentUser
            int r10 = r10.id
            if (r10 != r3) goto L_0x0780
        L_0x0774:
            r6.setIsRead()
            goto L_0x0780
        L_0x0778:
            r12 = r56
            r6 = r44
            goto L_0x0780
        L_0x077d:
            r6 = r12
            r12 = r56
        L_0x0780:
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r10 = r8.messagesDict
            r10 = r10[r5]
            int r10 = r10.indexOfKey(r1)
            if (r10 < 0) goto L_0x0798
        L_0x078a:
            r44 = r3
            r48 = r5
            r45 = r9
            r5 = r11
            r56 = r13
        L_0x0793:
            r1 = r42
            r11 = r4
            goto L_0x0CLASSNAME
        L_0x0798:
            int r10 = r8.threadMessageId
            if (r10 == 0) goto L_0x07a3
            org.telegram.tgnet.TLRPC$Message r10 = r6.messageOwner
            boolean r10 = r10 instanceof org.telegram.tgnet.TLRPC$TL_messageEmpty
            if (r10 == 0) goto L_0x07a3
            goto L_0x078a
        L_0x07a3:
            org.telegram.tgnet.TLRPC$EncryptedChat r10 = r8.currentEncryptedChat
            if (r10 == 0) goto L_0x07b9
            org.telegram.tgnet.TLRPC$Message r10 = r6.messageOwner
            int r10 = r10.stickerVerified
            if (r10 != 0) goto L_0x07b9
            org.telegram.messenger.MediaDataController r10 = r53.getMediaDataController()
            r44 = r3
            org.telegram.tgnet.TLRPC$Message r3 = r6.messageOwner
            r10.verifyAnimatedStickerMessage(r3)
            goto L_0x07bb
        L_0x07b9:
            r44 = r3
        L_0x07bb:
            r3 = 0
            r8.addToPolls(r6, r3)
            boolean r3 = r53.isSecretChat()
            if (r3 == 0) goto L_0x07c8
            r8.checkSecretMessageForLocation(r6)
        L_0x07c8:
            boolean r3 = r13.isPlayingMessage(r6)
            if (r3 == 0) goto L_0x07de
            org.telegram.messenger.MessageObject r3 = r13.getPlayingMessageObject()
            float r10 = r3.audioProgress
            r6.audioProgress = r10
            int r10 = r3.audioProgressSec
            r6.audioProgressSec = r10
            int r3 = r3.audioPlayerDuration
            r6.audioPlayerDuration = r3
        L_0x07de:
            if (r5 != 0) goto L_0x07f3
            org.telegram.tgnet.TLRPC$Chat r3 = r8.currentChat
            boolean r3 = org.telegram.messenger.ChatObject.isChannel(r3)
            if (r3 == 0) goto L_0x07f3
            r3 = 1
            if (r1 != r3) goto L_0x07f3
            boolean[] r10 = r8.endReached
            r10[r5] = r3
            boolean[] r10 = r8.cacheEndReached
            r10[r5] = r3
        L_0x07f3:
            if (r1 <= 0) goto L_0x080a
            int[] r10 = r8.maxMessageId
            r3 = r10[r5]
            int r3 = java.lang.Math.min(r1, r3)
            r10[r5] = r3
            int[] r3 = r8.minMessageId
            r10 = r3[r5]
            int r10 = java.lang.Math.max(r1, r10)
            r3[r5] = r10
            goto L_0x0822
        L_0x080a:
            org.telegram.tgnet.TLRPC$EncryptedChat r3 = r8.currentEncryptedChat
            if (r3 == 0) goto L_0x0822
            int[] r3 = r8.maxMessageId
            r10 = r3[r5]
            int r10 = java.lang.Math.max(r1, r10)
            r3[r5] = r10
            int[] r3 = r8.minMessageId
            r10 = r3[r5]
            int r10 = java.lang.Math.min(r1, r10)
            r3[r5] = r10
        L_0x0822:
            org.telegram.tgnet.TLRPC$Message r3 = r6.messageOwner
            int r3 = r3.date
            if (r3 == 0) goto L_0x0849
            int[] r10 = r8.maxDate
            r56 = r13
            r13 = r10[r5]
            int r3 = java.lang.Math.max(r13, r3)
            r10[r5] = r3
            int[] r3 = r8.minDate
            r10 = r3[r5]
            if (r10 == 0) goto L_0x0842
            org.telegram.tgnet.TLRPC$Message r10 = r6.messageOwner
            int r10 = r10.date
            r13 = r3[r5]
            if (r10 >= r13) goto L_0x084b
        L_0x0842:
            org.telegram.tgnet.TLRPC$Message r10 = r6.messageOwner
            int r10 = r10.date
            r3[r5] = r10
            goto L_0x084b
        L_0x0849:
            r56 = r13
        L_0x084b:
            if (r1 == 0) goto L_0x0857
            int r3 = r8.last_message_id
            if (r1 != r3) goto L_0x0857
            boolean[] r3 = r8.forwardEndReached
            r10 = 1
            r3[r5] = r10
            goto L_0x0858
        L_0x0857:
            r10 = 1
        L_0x0858:
            org.telegram.tgnet.TLRPC$Message r3 = r6.messageOwner
            org.telegram.tgnet.TLRPC$MessageAction r3 = r3.action
            int r13 = r6.type
            if (r13 < 0) goto L_0x0CLASSNAME
            if (r5 != r10) goto L_0x0868
            boolean r13 = r3 instanceof org.telegram.tgnet.TLRPC$TL_messageActionChatMigrateTo
            if (r13 == 0) goto L_0x0868
        L_0x0866:
            goto L_0x0CLASSNAME
        L_0x0868:
            org.telegram.tgnet.TLRPC$Chat r13 = r8.currentChat
            if (r13 == 0) goto L_0x0879
            boolean r13 = r13.creator
            if (r13 == 0) goto L_0x0879
            boolean r13 = r3 instanceof org.telegram.tgnet.TLRPC$TL_messageActionChatCreate
            if (r13 != 0) goto L_0x0CLASSNAME
            if (r9 == 0) goto L_0x0879
            if (r3 != r9) goto L_0x0879
            goto L_0x0866
        L_0x0879:
            boolean r3 = r3 instanceof org.telegram.tgnet.TLRPC$TL_messageActionChannelMigrateFrom
            if (r3 == 0) goto L_0x087e
            goto L_0x0866
        L_0x087e:
            org.telegram.messenger.MessageObject r3 = r8.needAnimateToMessage
            if (r3 == 0) goto L_0x0899
            int r3 = r3.getId()
            if (r3 != r1) goto L_0x0899
            if (r1 >= 0) goto L_0x0899
            int r3 = r8.chatMode
            r10 = 1
            if (r3 == r10) goto L_0x0899
            org.telegram.messenger.MessageObject r6 = r8.needAnimateToMessage
            java.util.ArrayList<org.telegram.messenger.MessageObject> r10 = r8.animatingMessageObjects
            r10.add(r6)
            r10 = 0
            r8.needAnimateToMessage = r10
        L_0x0899:
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r10 = r8.messagesDict
            r10 = r10[r5]
            r10.put(r1, r6)
            java.util.HashMap<java.lang.String, java.util.ArrayList<org.telegram.messenger.MessageObject>> r10 = r8.messagesByDays
            java.lang.String r13 = r6.dateKey
            java.lang.Object r10 = r10.get(r13)
            java.util.ArrayList r10 = (java.util.ArrayList) r10
            if (r10 != 0) goto L_0x0965
            java.util.ArrayList r10 = new java.util.ArrayList
            r10.<init>()
            java.util.HashMap<java.lang.String, java.util.ArrayList<org.telegram.messenger.MessageObject>> r13 = r8.messagesByDays
            java.lang.String r3 = r6.dateKey
            r13.put(r3, r10)
            org.telegram.tgnet.TLRPC$TL_message r3 = new org.telegram.tgnet.TLRPC$TL_message
            r3.<init>()
            int r13 = r8.chatMode
            r45 = r9
            r9 = 1
            if (r13 != r9) goto L_0x08ff
            org.telegram.tgnet.TLRPC$Message r13 = r6.messageOwner
            int r13 = r13.date
            r9 = 2147483646(0x7ffffffe, float:NaN)
            if (r13 != r9) goto L_0x08e1
            r9 = 2131626136(0x7f0e0898, float:1.88795E38)
            java.lang.String r13 = "MessageScheduledUntilOnline"
            java.lang.String r9 = org.telegram.messenger.LocaleController.getString(r13, r9)
            r3.message = r9
            r47 = r4
            r48 = r5
            r13 = r6
            r21 = r10
            r9 = 0
            goto L_0x0912
        L_0x08e1:
            r21 = r10
            r9 = 1
            java.lang.Object[] r10 = new java.lang.Object[r9]
            r47 = r4
            r48 = r5
            long r4 = (long) r13
            java.lang.String r4 = org.telegram.messenger.LocaleController.formatDateChat(r4, r9)
            r9 = 0
            r10[r9] = r4
            java.lang.String r4 = "MessageScheduledOn"
            r13 = 2131626134(0x7f0e0896, float:1.8879496E38)
            java.lang.String r4 = org.telegram.messenger.LocaleController.formatString(r4, r13, r10)
            r3.message = r4
            r13 = r6
            goto L_0x0912
        L_0x08ff:
            r47 = r4
            r48 = r5
            r21 = r10
            r9 = 0
            org.telegram.tgnet.TLRPC$Message r4 = r6.messageOwner
            int r4 = r4.date
            r13 = r6
            long r5 = (long) r4
            java.lang.String r4 = org.telegram.messenger.LocaleController.formatDateChat(r5)
            r3.message = r4
        L_0x0912:
            r3.id = r9
            java.util.Calendar r4 = java.util.Calendar.getInstance()
            r6 = r13
            org.telegram.tgnet.TLRPC$Message r5 = r6.messageOwner
            int r5 = r5.date
            r13 = r11
            long r10 = (long) r5
            r18 = 1000(0x3e8, double:4.94E-321)
            long r10 = r10 * r18
            r4.setTimeInMillis(r10)
            r5 = 11
            r4.set(r5, r9)
            r5 = 12
            r4.set(r5, r9)
            long r4 = r4.getTimeInMillis()
            long r4 = r4 / r18
            int r5 = (int) r4
            r3.date = r5
            org.telegram.messenger.MessageObject r4 = new org.telegram.messenger.MessageObject
            int r5 = r8.currentAccount
            r4.<init>(r5, r3, r9, r9)
            r3 = 10
            r4.type = r3
            r3 = 1
            r4.contentType = r3
            r4.isDateObject = r3
            int r5 = r8.lastStableId
            int r10 = r5 + 1
            r8.lastStableId = r10
            r4.stableId = r5
            r5 = r13
            if (r5 != r3) goto L_0x095a
            java.util.ArrayList<org.telegram.messenger.MessageObject> r10 = r8.messages
            r10.add(r9, r4)
            goto L_0x095f
        L_0x095a:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r9 = r8.messages
            r9.add(r4)
        L_0x095f:
            int r12 = r12 + 1
            r9 = r12
            r4 = r21
            goto L_0x09a4
        L_0x0965:
            r47 = r4
            r48 = r5
            r45 = r9
            r5 = r11
            if (r38 != 0) goto L_0x09a2
            java.util.ArrayList<org.telegram.messenger.MessageObject> r4 = r8.messages
            boolean r4 = r4.isEmpty()
            if (r4 != 0) goto L_0x09a2
            java.util.ArrayList<org.telegram.messenger.MessageObject> r4 = r8.messages
            int r9 = r4.size()
            r3 = 1
            int r9 = r9 - r3
            java.lang.Object r4 = r4.get(r9)
            org.telegram.messenger.MessageObject r4 = (org.telegram.messenger.MessageObject) r4
            boolean r4 = r4.isDateObject
            if (r4 == 0) goto L_0x09a2
            java.util.ArrayList<org.telegram.messenger.MessageObject> r4 = r8.messages
            int r9 = r4.size()
            int r9 = r9 - r3
            java.lang.Object r4 = r4.get(r9)
            org.telegram.messenger.MessageObject r4 = (org.telegram.messenger.MessageObject) r4
            int r9 = r8.lastStableId
            int r11 = r9 + 1
            r8.lastStableId = r11
            r4.stableId = r9
            r4 = r10
            r9 = r12
            r38 = 1
            goto L_0x09a4
        L_0x09a2:
            r4 = r10
            r9 = r12
        L_0x09a4:
            boolean r10 = r6.hasValidGroupId()
            if (r10 == 0) goto L_0x0a65
            android.util.LongSparseArray<org.telegram.messenger.MessageObject$GroupedMessages> r10 = r8.groupedMessagesMap
            long r11 = r6.getGroupIdForUse()
            java.lang.Object r10 = r10.get(r11)
            r11 = r10
            org.telegram.messenger.MessageObject$GroupedMessages r11 = (org.telegram.messenger.MessageObject.GroupedMessages) r11
            if (r11 == 0) goto L_0x0a1b
            java.util.ArrayList<org.telegram.messenger.MessageObject> r10 = r8.messages
            int r10 = r10.size()
            r3 = 1
            if (r10 <= r3) goto L_0x0a1b
            if (r5 != r3) goto L_0x09d0
            java.util.ArrayList<org.telegram.messenger.MessageObject> r3 = r8.messages
            r10 = 0
            java.lang.Object r3 = r3.get(r10)
            org.telegram.messenger.MessageObject r3 = (org.telegram.messenger.MessageObject) r3
            r13 = r42
            goto L_0x09e0
        L_0x09d0:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r3 = r8.messages
            int r10 = r3.size()
            r13 = 2
            int r10 = r10 - r13
            r13 = r42
            java.lang.Object r3 = r3.get(r10)
            org.telegram.messenger.MessageObject r3 = (org.telegram.messenger.MessageObject) r3
        L_0x09e0:
            long r49 = r3.getGroupIdForUse()
            long r51 = r6.getGroupIdForUse()
            int r10 = (r49 > r51 ? 1 : (r49 == r51 ? 0 : -1))
            if (r10 != 0) goto L_0x0a03
            r42 = r13
            long r12 = r3.localGroupId
            r16 = 0
            int r10 = (r12 > r16 ? 1 : (r12 == r16 ? 0 : -1))
            if (r10 == 0) goto L_0x0a1b
            r6.localGroupId = r12
            android.util.LongSparseArray<org.telegram.messenger.MessageObject$GroupedMessages> r10 = r8.groupedMessagesMap
            long r11 = r3.localGroupId
            java.lang.Object r3 = r10.get(r11)
            org.telegram.messenger.MessageObject$GroupedMessages r3 = (org.telegram.messenger.MessageObject.GroupedMessages) r3
            goto L_0x0a1c
        L_0x0a03:
            r42 = r13
            long r12 = r3.getGroupIdForUse()
            long r49 = r6.getGroupIdForUse()
            int r3 = (r12 > r49 ? 1 : (r12 == r49 ? 0 : -1))
            if (r3 == 0) goto L_0x0a1b
            java.security.SecureRandom r3 = org.telegram.messenger.Utilities.random
            long r10 = r3.nextLong()
            r6.localGroupId = r10
            r3 = 0
            goto L_0x0a1c
        L_0x0a1b:
            r3 = r11
        L_0x0a1c:
            if (r3 != 0) goto L_0x0a2f
            org.telegram.messenger.MessageObject$GroupedMessages r3 = new org.telegram.messenger.MessageObject$GroupedMessages
            r3.<init>()
            long r10 = r6.getGroupId()
            r3.groupId = r10
            android.util.LongSparseArray<org.telegram.messenger.MessageObject$GroupedMessages> r12 = r8.groupedMessagesMap
            r12.put(r10, r3)
            goto L_0x0a49
        L_0x0a2f:
            if (r14 == 0) goto L_0x0a3b
            long r10 = r6.getGroupId()
            int r10 = r14.indexOfKey(r10)
            if (r10 >= 0) goto L_0x0a49
        L_0x0a3b:
            if (r15 != 0) goto L_0x0a42
            android.util.LongSparseArray r15 = new android.util.LongSparseArray
            r15.<init>()
        L_0x0a42:
            long r10 = r6.getGroupId()
            r15.put(r10, r3)
        L_0x0a49:
            if (r14 != 0) goto L_0x0a50
            android.util.LongSparseArray r14 = new android.util.LongSparseArray
            r14.<init>()
        L_0x0a50:
            long r10 = r3.groupId
            r14.put(r10, r3)
            r10 = 1
            if (r5 != r10) goto L_0x0a5e
            java.util.ArrayList<org.telegram.messenger.MessageObject> r3 = r3.messages
            r3.add(r6)
            goto L_0x0a75
        L_0x0a5e:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r3 = r3.messages
            r10 = 0
            r3.add(r10, r6)
            goto L_0x0a75
        L_0x0a65:
            long r10 = r6.getGroupIdForUse()
            r12 = 0
            int r3 = (r10 > r12 ? 1 : (r10 == r12 ? 0 : -1))
            if (r3 == 0) goto L_0x0a75
            org.telegram.tgnet.TLRPC$Message r3 = r6.messageOwner
            r3.grouped_id = r12
            r6.localSentGroupId = r12
        L_0x0a75:
            r3 = 1
            int r9 = r9 + r3
            r4.add(r6)
            int r4 = r8.lastStableId
            int r10 = r4 + 1
            r8.lastStableId = r10
            r6.stableId = r4
            if (r5 != r3) goto L_0x0a8b
            java.util.ArrayList<org.telegram.messenger.MessageObject> r4 = r8.messages
            r10 = 0
            r4.add(r10, r6)
            goto L_0x0aaa
        L_0x0a8b:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r4 = r8.messages
            int r10 = r4.size()
            int r10 = r10 - r3
            java.lang.Object r4 = r4.get(r10)
            org.telegram.messenger.MessageObject r4 = (org.telegram.messenger.MessageObject) r4
            int r10 = r8.lastStableId
            int r11 = r10 + 1
            r8.lastStableId = r11
            r4.stableId = r10
            java.util.ArrayList<org.telegram.messenger.MessageObject> r4 = r8.messages
            int r10 = r4.size()
            int r10 = r10 - r3
            r4.add(r10, r6)
        L_0x0aaa:
            org.telegram.tgnet.TLRPC$EncryptedChat r4 = r8.currentEncryptedChat
            if (r4 != 0) goto L_0x0ad7
            int r4 = r8.createUnreadMessageAfterId
            if (r4 == 0) goto L_0x0afc
            if (r5 == r3) goto L_0x0afc
            int r10 = r42 + 1
            int r3 = r2.size()
            if (r10 >= r3) goto L_0x0afc
            java.lang.Object r3 = r2.get(r10)
            org.telegram.messenger.MessageObject r3 = (org.telegram.messenger.MessageObject) r3
            boolean r4 = r6.isOut()
            if (r4 == 0) goto L_0x0ace
            org.telegram.tgnet.TLRPC$Message r4 = r6.messageOwner
            boolean r4 = r4.from_scheduled
            if (r4 == 0) goto L_0x0afc
        L_0x0ace:
            int r4 = r3.getId()
            int r10 = r8.createUnreadMessageAfterId
            if (r4 < r10) goto L_0x0afd
            goto L_0x0afc
        L_0x0ad7:
            int r3 = r8.createUnreadMessageAfterId
            if (r3 == 0) goto L_0x0afc
            r3 = 1
            if (r5 == r3) goto L_0x0afc
            int r10 = r42 + -1
            if (r10 < 0) goto L_0x0afc
            java.lang.Object r3 = r2.get(r10)
            org.telegram.messenger.MessageObject r3 = (org.telegram.messenger.MessageObject) r3
            boolean r4 = r6.isOut()
            if (r4 == 0) goto L_0x0af4
            org.telegram.tgnet.TLRPC$Message r4 = r6.messageOwner
            boolean r4 = r4.from_scheduled
            if (r4 == 0) goto L_0x0afc
        L_0x0af4:
            int r4 = r3.getId()
            int r10 = r8.createUnreadMessageAfterId
            if (r4 < r10) goto L_0x0afd
        L_0x0afc:
            r3 = 0
        L_0x0afd:
            r4 = 2
            if (r5 != r4) goto L_0x0b6d
            if (r1 == 0) goto L_0x0b6d
            int r10 = r8.first_unread_id
            if (r1 != r10) goto L_0x0b6d
            android.graphics.Point r10 = org.telegram.messenger.AndroidUtilities.displaySize
            int r10 = r10.y
            int r11 = r10 / 2
            if (r7 > r11) goto L_0x0b20
            boolean r4 = r53.isThreadChat()
            if (r4 != 0) goto L_0x0b20
            boolean[] r4 = r8.forwardEndReached
            r11 = 0
            boolean r4 = r4[r11]
            if (r4 != 0) goto L_0x0b1c
            goto L_0x0b20
        L_0x0b1c:
            r11 = r47
            goto L_0x0bc1
        L_0x0b20:
            boolean r4 = r53.isThreadChat()
            if (r4 == 0) goto L_0x0b30
            int r4 = r8.threadMaxInboxReadId
            if (r4 == 0) goto L_0x0b2b
            goto L_0x0b30
        L_0x0b2b:
            r8.scrollToMessage = r6
            r11 = r47
            goto L_0x0b63
        L_0x0b30:
            org.telegram.tgnet.TLRPC$TL_message r4 = new org.telegram.tgnet.TLRPC$TL_message
            r4.<init>()
            r11 = r47
            r4.message = r11
            r13 = 0
            r4.id = r13
            org.telegram.messenger.MessageObject r10 = new org.telegram.messenger.MessageObject
            int r12 = r8.currentAccount
            r10.<init>(r12, r4, r13, r13)
            r4 = 6
            r10.type = r4
            r4 = 2
            r10.contentType = r4
            int r12 = r8.lastStableId
            int r13 = r12 + 1
            r8.lastStableId = r13
            r10.stableId = r12
            java.util.ArrayList<org.telegram.messenger.MessageObject> r13 = r8.messages
            int r12 = r13.size()
            r21 = 1
            int r12 = r12 + -1
            r4 = r12
            r13.add(r4, r10)
            r8.unreadMessageObject = r10
            r8.scrollToMessage = r10
        L_0x0b63:
            r4 = -10000(0xffffffffffffd8f0, float:NaN)
            r8.scrollToMessagePosition = r4
            int r9 = r9 + 1
            r4 = 2
            r37 = 1
            goto L_0x0bc2
        L_0x0b6d:
            r11 = r47
            r4 = 3
            if (r5 == r4) goto L_0x0b75
            r4 = 4
            if (r5 != r4) goto L_0x0bc1
        L_0x0b75:
            int r4 = r8.startLoadFromMessageId
            if (r4 >= 0) goto L_0x0b7b
            if (r1 == r4) goto L_0x0b81
        L_0x0b7b:
            if (r4 <= 0) goto L_0x0bc1
            if (r1 <= 0) goto L_0x0bc1
            if (r1 > r4) goto L_0x0bc1
        L_0x0b81:
            r53.removeSelectedMessageHighlight()
            boolean r4 = r8.needSelectFromMessageId
            if (r4 == 0) goto L_0x0b8e
            int r4 = r8.startLoadFromMessageId
            if (r1 != r4) goto L_0x0b8e
            r8.highlightMessageId = r1
        L_0x0b8e:
            boolean r4 = r8.showScrollToMessageError
            if (r4 == 0) goto L_0x0baa
            int r4 = r8.startLoadFromMessageId
            if (r1 == r4) goto L_0x0baa
            org.telegram.ui.Components.BulletinFactory r4 = org.telegram.ui.Components.BulletinFactory.of((org.telegram.ui.ActionBar.BaseFragment) r53)
            r10 = 2131626125(0x7f0e088d, float:1.8879477E38)
            java.lang.String r13 = "MessageNotFound"
            java.lang.String r10 = org.telegram.messenger.LocaleController.getString(r13, r10)
            org.telegram.ui.Components.Bulletin r4 = r4.createErrorBulletin(r10)
            r4.show()
        L_0x0baa:
            r8.scrollToMessage = r6
            if (r0 == 0) goto L_0x0bb4
            int r4 = r6.getId()
            r8.postponedScrollMessageId = r4
        L_0x0bb4:
            r4 = 0
            r8.startLoadFromMessageId = r4
            int r4 = r8.scrollToMessagePosition
            r10 = -10000(0xffffffffffffd8f0, float:NaN)
            if (r4 != r10) goto L_0x0bc1
            r4 = -9000(0xffffffffffffdcd8, float:NaN)
            r8.scrollToMessagePosition = r4
        L_0x0bc1:
            r4 = 2
        L_0x0bc2:
            if (r5 == r4) goto L_0x0c4f
            org.telegram.messenger.MessageObject r4 = r8.unreadMessageObject
            if (r4 != 0) goto L_0x0c4f
            int r4 = r8.createUnreadMessageAfterId
            if (r4 == 0) goto L_0x0c4f
            org.telegram.tgnet.TLRPC$EncryptedChat r4 = r8.currentEncryptedChat
            if (r4 != 0) goto L_0x0be3
            boolean r4 = r6.isOut()
            if (r4 == 0) goto L_0x0bdc
            org.telegram.tgnet.TLRPC$Message r4 = r6.messageOwner
            boolean r4 = r4.from_scheduled
            if (r4 == 0) goto L_0x0be3
        L_0x0bdc:
            int r4 = r8.createUnreadMessageAfterId
            if (r1 >= r4) goto L_0x0be1
            goto L_0x0be3
        L_0x0be1:
            r1 = 1
            goto L_0x0bf8
        L_0x0be3:
            org.telegram.tgnet.TLRPC$EncryptedChat r4 = r8.currentEncryptedChat
            if (r4 == 0) goto L_0x0c4f
            boolean r4 = r6.isOut()
            if (r4 == 0) goto L_0x0bf3
            org.telegram.tgnet.TLRPC$Message r4 = r6.messageOwner
            boolean r4 = r4.from_scheduled
            if (r4 == 0) goto L_0x0c4f
        L_0x0bf3:
            int r4 = r8.createUnreadMessageAfterId
            if (r1 > r4) goto L_0x0c4f
            goto L_0x0be1
        L_0x0bf8:
            if (r5 == r1) goto L_0x0c0a
            if (r3 != 0) goto L_0x0c0a
            if (r3 != 0) goto L_0x0c4f
            if (r27 == 0) goto L_0x0c4f
            int r3 = r2.size()
            int r3 = r3 - r1
            r1 = r42
            if (r1 != r3) goto L_0x0c5a
            goto L_0x0c0c
        L_0x0c0a:
            r1 = r42
        L_0x0c0c:
            org.telegram.tgnet.TLRPC$TL_message r3 = new org.telegram.tgnet.TLRPC$TL_message
            r3.<init>()
            r3.message = r11
            r4 = 0
            r3.id = r4
            org.telegram.messenger.MessageObject r6 = new org.telegram.messenger.MessageObject
            int r13 = r8.currentAccount
            r6.<init>(r13, r3, r4, r4)
            r3 = 6
            r6.type = r3
            r3 = 2
            r6.contentType = r3
            int r3 = r8.lastStableId
            int r4 = r3 + 1
            r8.lastStableId = r4
            r6.stableId = r3
            r3 = 1
            if (r5 != r3) goto L_0x0CLASSNAME
            java.util.ArrayList<org.telegram.messenger.MessageObject> r4 = r8.messages
            r4.add(r3, r6)
            goto L_0x0c3e
        L_0x0CLASSNAME:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r4 = r8.messages
            int r12 = r4.size()
            int r12 = r12 - r3
            r4.add(r12, r6)
        L_0x0c3e:
            r8.unreadMessageObject = r6
            r4 = 3
            if (r5 != r4) goto L_0x0c4c
            r8.scrollToMessage = r6
            r4 = 0
            r8.startLoadFromMessageId = r4
            r4 = -9000(0xffffffffffffdcd8, float:NaN)
            r8.scrollToMessagePosition = r4
        L_0x0c4c:
            int r9 = r9 + 1
            goto L_0x0c5a
        L_0x0c4f:
            r1 = r42
            goto L_0x0c5a
        L_0x0CLASSNAME:
            r48 = r5
            r45 = r9
            r5 = r11
            goto L_0x0793
        L_0x0CLASSNAME:
            r9 = r12
        L_0x0c5a:
            int r1 = r1 + 1
            r13 = r56
            r10 = r1
            r56 = r9
            r4 = r11
            r6 = r31
            r1 = r43
            r3 = r44
            r9 = r45
            r11 = r5
            r31 = r7
            r7 = r39
            r5 = r48
            goto L_0x0703
        L_0x0CLASSNAME:
            r12 = r56
            r43 = r1
            r48 = r5
            r31 = r6
            r5 = r11
            r11 = r4
            if (r27 == 0) goto L_0x0CLASSNAME
            r1 = 0
            r8.createUnreadMessageAfterId = r1
        L_0x0CLASSNAME:
            if (r5 != 0) goto L_0x0c8d
            if (r12 != 0) goto L_0x0c8d
            int r1 = r8.loadsCount
            r3 = 1
            int r1 = r1 - r3
            r8.loadsCount = r1
            goto L_0x0c8e
        L_0x0c8d:
            r3 = 1
        L_0x0c8e:
            boolean[] r1 = r8.forwardEndReached
            boolean r1 = r1[r48]
            if (r1 == 0) goto L_0x0ca0
            r1 = r48
            if (r1 == r3) goto L_0x0ca2
            r4 = 0
            r8.first_unread_id = r4
            r8.last_message_id = r4
            r8.createUnreadMessageAfterId = r4
            goto L_0x0ca2
        L_0x0ca0:
            r1 = r48
        L_0x0ca2:
            if (r5 != r3) goto L_0x0d4f
            int r2 = r2.size()
            r6 = r31
            if (r2 == r6) goto L_0x0cd3
            if (r26 == 0) goto L_0x0cb8
            org.telegram.tgnet.TLRPC$EncryptedChat r2 = r8.currentEncryptedChat
            if (r2 != 0) goto L_0x0cb8
            boolean[] r2 = r8.forwardEndReached
            boolean r2 = r2[r1]
            if (r2 == 0) goto L_0x0cd3
        L_0x0cb8:
            boolean[] r2 = r8.forwardEndReached
            r3 = 1
            r2[r1] = r3
            if (r1 == r3) goto L_0x0cd0
            r3 = 0
            r8.first_unread_id = r3
            r8.last_message_id = r3
            r8.createUnreadMessageAfterId = r3
            org.telegram.ui.ChatActivity$ChatActivityAdapter r4 = r8.chatAdapter
            int r5 = r4.loadingDownRow
            r4.notifyItemRemoved(r5)
            goto L_0x0cd1
        L_0x0cd0:
            r3 = 0
        L_0x0cd1:
            r8.startLoadFromMessageId = r3
        L_0x0cd3:
            if (r12 <= 0) goto L_0x0d4a
            androidx.recyclerview.widget.GridLayoutManagerFixed r3 = r8.chatLayoutManager
            int r3 = r3.findFirstVisibleItemPosition()
            androidx.recyclerview.widget.GridLayoutManagerFixed r4 = r8.chatLayoutManager
            int r4 = r4.findLastVisibleItemPosition()
            r5 = -1
            if (r3 == r5) goto L_0x0d2a
        L_0x0ce4:
            if (r3 > r4) goto L_0x0d2a
            androidx.recyclerview.widget.GridLayoutManagerFixed r5 = r8.chatLayoutManager
            android.view.View r5 = r5.findViewByPosition(r3)
            boolean r6 = r5 instanceof org.telegram.ui.Cells.ChatMessageCell
            if (r6 == 0) goto L_0x0d0a
            r3 = r5
            org.telegram.ui.Cells.ChatMessageCell r3 = (org.telegram.ui.Cells.ChatMessageCell) r3
            org.telegram.messenger.MessageObject r3 = r3.getMessageObject()
            org.telegram.ui.Components.RecyclerListView r4 = r8.chatListView
            int r4 = r4.getMeasuredHeight()
            int r5 = r5.getBottom()
            int r4 = r4 - r5
            org.telegram.ui.Components.RecyclerListView r5 = r8.chatListView
            int r5 = r5.getPaddingBottom()
        L_0x0d08:
            int r4 = r4 - r5
            goto L_0x0d2c
        L_0x0d0a:
            boolean r6 = r5 instanceof org.telegram.ui.Cells.ChatActionCell
            if (r6 == 0) goto L_0x0d27
            r3 = r5
            org.telegram.ui.Cells.ChatActionCell r3 = (org.telegram.ui.Cells.ChatActionCell) r3
            org.telegram.messenger.MessageObject r3 = r3.getMessageObject()
            org.telegram.ui.Components.RecyclerListView r4 = r8.chatListView
            int r4 = r4.getMeasuredHeight()
            int r5 = r5.getBottom()
            int r4 = r4 - r5
            org.telegram.ui.Components.RecyclerListView r5 = r8.chatListView
            int r5 = r5.getPaddingBottom()
            goto L_0x0d08
        L_0x0d27:
            int r3 = r3 + 1
            goto L_0x0ce4
        L_0x0d2a:
            r3 = 0
            r4 = 0
        L_0x0d2c:
            if (r0 != 0) goto L_0x0d4a
            org.telegram.ui.ChatActivity$ChatActivityAdapter r5 = r8.chatAdapter
            r2 = 1
            r5.notifyItemRangeInserted(r2, r12)
            if (r3 == 0) goto L_0x0d4a
            java.util.ArrayList<org.telegram.messenger.MessageObject> r2 = r8.messages
            int r2 = r2.indexOf(r3)
            if (r2 <= 0) goto L_0x0d4a
            androidx.recyclerview.widget.GridLayoutManagerFixed r3 = r8.chatLayoutManager
            org.telegram.ui.ChatActivity$ChatActivityAdapter r5 = r8.chatAdapter
            int r5 = r5.messagesStartRow
            int r5 = r5 + r2
            r3.scrollToPositionWithOffset(r5, r4)
        L_0x0d4a:
            r2 = 0
            r8.loadingForward = r2
            goto L_0x0fcc
        L_0x0d4f:
            r6 = r31
            int r3 = r2.size()
            if (r3 >= r6) goto L_0x0d94
            r3 = 3
            if (r5 == r3) goto L_0x0d94
            r3 = 4
            if (r5 == r3) goto L_0x0d94
            if (r26 == 0) goto L_0x0d7e
            org.telegram.tgnet.TLRPC$EncryptedChat r2 = r8.currentEncryptedChat
            if (r2 != 0) goto L_0x0d71
            r2 = 1
            if (r1 != r2) goto L_0x0d76
            long r3 = r8.mergeDialogId
            r6 = 0
            int r9 = (r3 > r6 ? 1 : (r3 == r6 ? 0 : -1))
            if (r9 == 0) goto L_0x0d76
            if (r30 == 0) goto L_0x0d76
            goto L_0x0d72
        L_0x0d71:
            r2 = 1
        L_0x0d72:
            boolean[] r3 = r8.endReached
            r3[r1] = r2
        L_0x0d76:
            r3 = 2
            if (r5 == r3) goto L_0x0d94
            boolean[] r4 = r8.cacheEndReached
            r4[r1] = r2
            goto L_0x0d94
        L_0x0d7e:
            r3 = 2
            if (r5 != r3) goto L_0x0d8f
            int r2 = r2.size()
            if (r2 != 0) goto L_0x0d94
            java.util.ArrayList<org.telegram.messenger.MessageObject> r2 = r8.messages
            boolean r2 = r2.isEmpty()
            if (r2 == 0) goto L_0x0d94
        L_0x0d8f:
            boolean[] r2 = r8.endReached
            r3 = 1
            r2[r1] = r3
        L_0x0d94:
            r3 = 0
            r8.loading = r3
            org.telegram.ui.Components.RecyclerListView r3 = r8.chatListView
            if (r3 == 0) goto L_0x0fc3
            org.telegram.ui.Components.RecyclerAnimationScrollHelper r3 = r8.chatScrollHelper
            if (r3 == 0) goto L_0x0fc3
            boolean r3 = r8.first
            if (r3 != 0) goto L_0x0e90
            boolean r3 = r8.scrollToTopOnResume
            if (r3 != 0) goto L_0x0e90
            boolean r3 = r8.forceScrollToTop
            if (r3 == 0) goto L_0x0dad
            goto L_0x0e90
        L_0x0dad:
            if (r12 == 0) goto L_0x0e5f
            androidx.recyclerview.widget.GridLayoutManagerFixed r3 = r8.chatLayoutManager
            int r3 = r3.findFirstVisibleItemPosition()
            androidx.recyclerview.widget.GridLayoutManagerFixed r4 = r8.chatLayoutManager
            int r4 = r4.findLastVisibleItemPosition()
            r5 = -1
            if (r3 == r5) goto L_0x0e04
        L_0x0dbe:
            if (r3 > r4) goto L_0x0e04
            androidx.recyclerview.widget.GridLayoutManagerFixed r5 = r8.chatLayoutManager
            android.view.View r5 = r5.findViewByPosition(r3)
            boolean r6 = r5 instanceof org.telegram.ui.Cells.ChatMessageCell
            if (r6 == 0) goto L_0x0de4
            r3 = r5
            org.telegram.ui.Cells.ChatMessageCell r3 = (org.telegram.ui.Cells.ChatMessageCell) r3
            org.telegram.messenger.MessageObject r3 = r3.getMessageObject()
            org.telegram.ui.Components.RecyclerListView r4 = r8.chatListView
            int r4 = r4.getMeasuredHeight()
            int r5 = r5.getBottom()
            int r4 = r4 - r5
            org.telegram.ui.Components.RecyclerListView r5 = r8.chatListView
            int r5 = r5.getPaddingBottom()
        L_0x0de2:
            int r4 = r4 - r5
            goto L_0x0e06
        L_0x0de4:
            boolean r6 = r5 instanceof org.telegram.ui.Cells.ChatActionCell
            if (r6 == 0) goto L_0x0e01
            r3 = r5
            org.telegram.ui.Cells.ChatActionCell r3 = (org.telegram.ui.Cells.ChatActionCell) r3
            org.telegram.messenger.MessageObject r3 = r3.getMessageObject()
            org.telegram.ui.Components.RecyclerListView r4 = r8.chatListView
            int r4 = r4.getMeasuredHeight()
            int r5 = r5.getBottom()
            int r4 = r4 - r5
            org.telegram.ui.Components.RecyclerListView r5 = r8.chatListView
            int r5 = r5.getPaddingBottom()
            goto L_0x0de2
        L_0x0e01:
            int r3 = r3 + 1
            goto L_0x0dbe
        L_0x0e04:
            r3 = 0
            r4 = 0
        L_0x0e06:
            org.telegram.ui.ChatActivity$ChatActivityAdapter r5 = r8.chatAdapter
            int r5 = r5.messagesEndRow
            org.telegram.ui.ChatActivity$ChatActivityAdapter r6 = r8.chatAdapter
            int r6 = r6.loadingUpRow
            org.telegram.ui.ChatActivity$ChatActivityAdapter r7 = r8.chatAdapter
            r7.updateRowsInternal()
            if (r6 < 0) goto L_0x0e26
            org.telegram.ui.ChatActivity$ChatActivityAdapter r7 = r8.chatAdapter
            int r7 = r7.loadingUpRow
            if (r7 >= 0) goto L_0x0e26
            org.telegram.ui.ChatActivity$ChatActivityAdapter r7 = r8.chatAdapter
            r7.notifyItemRemoved(r6)
        L_0x0e26:
            if (r12 <= 0) goto L_0x0e45
            if (r38 == 0) goto L_0x0e39
            org.telegram.ui.ChatActivity$ChatActivityAdapter r6 = r8.chatAdapter
            r2 = 1
            int r5 = r5 - r2
            r6.notifyItemRemoved(r5)
            org.telegram.ui.ChatActivity$ChatActivityAdapter r6 = r8.chatAdapter
            int r7 = r12 + 1
            r6.notifyItemRangeInserted(r5, r7)
            goto L_0x0e45
        L_0x0e39:
            org.telegram.ui.ChatActivity$ChatActivityAdapter r6 = r8.chatAdapter
            int r7 = r5 + -1
            r6.notifyItemChanged(r7)
            org.telegram.ui.ChatActivity$ChatActivityAdapter r6 = r8.chatAdapter
            r6.notifyItemRangeInserted(r5, r12)
        L_0x0e45:
            if (r0 != 0) goto L_0x0var_
            if (r3 == 0) goto L_0x0var_
            java.util.ArrayList<org.telegram.messenger.MessageObject> r5 = r8.messages
            int r3 = r5.indexOf(r3)
            if (r3 <= 0) goto L_0x0var_
            androidx.recyclerview.widget.GridLayoutManagerFixed r5 = r8.chatLayoutManager
            org.telegram.ui.ChatActivity$ChatActivityAdapter r6 = r8.chatAdapter
            int r6 = r6.messagesStartRow
            int r6 = r6 + r3
            r5.scrollToPositionWithOffset(r6, r4)
            goto L_0x0var_
        L_0x0e5f:
            org.telegram.ui.ChatActivity$ChatActivityAdapter r3 = r8.chatAdapter
            int r3 = r3.loadingUpRow
            if (r3 < 0) goto L_0x0e88
            boolean[] r3 = r8.endReached
            boolean r3 = r3[r1]
            if (r3 == 0) goto L_0x0e88
            if (r1 != 0) goto L_0x0e7a
            long r3 = r8.mergeDialogId
            r5 = 0
            int r7 = (r3 > r5 ? 1 : (r3 == r5 ? 0 : -1))
            if (r7 == 0) goto L_0x0e78
            goto L_0x0e7a
        L_0x0e78:
            r2 = 1
            goto L_0x0e7d
        L_0x0e7a:
            r2 = 1
            if (r1 != r2) goto L_0x0e89
        L_0x0e7d:
            org.telegram.ui.ChatActivity$ChatActivityAdapter r3 = r8.chatAdapter
            int r4 = r3.loadingUpRow
            r3.notifyItemRemoved(r4)
            goto L_0x0var_
        L_0x0e88:
            r2 = 1
        L_0x0e89:
            org.telegram.ui.ChatActivity$ChatActivityAdapter r3 = r8.chatAdapter
            r3.notifyDataSetChanged(r2)
            goto L_0x0var_
        L_0x0e90:
            r2 = 1
            r3 = 0
            r8.forceScrollToTop = r3
            if (r0 != 0) goto L_0x0e9b
            org.telegram.ui.ChatActivity$ChatActivityAdapter r3 = r8.chatAdapter
            r3.notifyDataSetChanged(r2)
        L_0x0e9b:
            org.telegram.messenger.MessageObject r3 = r8.scrollToMessage
            if (r3 == 0) goto L_0x0var_
            int r4 = r8.startLoadFromMessageOffset
            r5 = 2147483647(0x7fffffff, float:NaN)
            if (r4 == r5) goto L_0x0eb2
            int r3 = -r4
            org.telegram.ui.Components.RecyclerListView r4 = r8.chatListView
            int r4 = r4.getPaddingBottom()
            int r3 = r3 - r4
            r8.startLoadFromMessageOffset = r5
        L_0x0eb0:
            r4 = 1
            goto L_0x0ed9
        L_0x0eb2:
            int r4 = r8.scrollToMessagePosition
            r5 = -9000(0xffffffffffffdcd8, float:NaN)
            if (r4 != r5) goto L_0x0ebe
            int r3 = r8.getScrollOffsetForMessage(r3)
        L_0x0ebc:
            r4 = 0
            goto L_0x0ed9
        L_0x0ebe:
            r3 = -10000(0xffffffffffffd8f0, float:NaN)
            if (r4 != r3) goto L_0x0ed7
            r3 = 1093664768(0x41300000, float:11.0)
            int r3 = org.telegram.messenger.AndroidUtilities.dp(r3)
            int r3 = -r3
            if (r37 == 0) goto L_0x0ebc
            int r4 = r8.threadMessageId
            if (r4 == 0) goto L_0x0ebc
            r4 = 1111490560(0x42400000, float:48.0)
            int r4 = org.telegram.messenger.AndroidUtilities.dp(r4)
            int r3 = r3 + r4
            goto L_0x0ebc
        L_0x0ed7:
            r3 = r4
            goto L_0x0eb0
        L_0x0ed9:
            if (r0 != 0) goto L_0x0var_
            java.util.ArrayList<org.telegram.messenger.MessageObject> r5 = r8.messages
            boolean r5 = r5.isEmpty()
            if (r5 != 0) goto L_0x0var_
            org.telegram.ui.ChatActivity$ChatActivityAdapter r5 = r8.chatAdapter
            int r5 = r5.loadingUpRow
            if (r5 < 0) goto L_0x0f1f
            java.util.ArrayList<org.telegram.messenger.MessageObject> r5 = r8.messages
            boolean r5 = r5.isEmpty()
            if (r5 != 0) goto L_0x0f1f
            java.util.ArrayList<org.telegram.messenger.MessageObject> r5 = r8.messages
            int r6 = r5.size()
            r2 = 1
            int r6 = r6 - r2
            java.lang.Object r5 = r5.get(r6)
            org.telegram.messenger.MessageObject r6 = r8.scrollToMessage
            if (r5 == r6) goto L_0x0var_
            java.util.ArrayList<org.telegram.messenger.MessageObject> r5 = r8.messages
            int r6 = r5.size()
            r7 = 2
            int r6 = r6 - r7
            java.lang.Object r5 = r5.get(r6)
            org.telegram.messenger.MessageObject r6 = r8.scrollToMessage
            if (r5 != r6) goto L_0x0f1f
        L_0x0var_:
            androidx.recyclerview.widget.GridLayoutManagerFixed r5 = r8.chatLayoutManager
            org.telegram.ui.ChatActivity$ChatActivityAdapter r6 = r8.chatAdapter
            int r6 = r6.loadingUpRow
            r5.scrollToPositionWithOffset(r6, r3, r4)
            goto L_0x0var_
        L_0x0f1f:
            androidx.recyclerview.widget.GridLayoutManagerFixed r5 = r8.chatLayoutManager
            org.telegram.ui.ChatActivity$ChatActivityAdapter r6 = r8.chatAdapter
            int r6 = r6.messagesStartRow
            java.util.ArrayList<org.telegram.messenger.MessageObject> r7 = r8.messages
            org.telegram.messenger.MessageObject r9 = r8.scrollToMessage
            int r7 = r7.indexOf(r9)
            int r6 = r6 + r7
            r5.scrollToPositionWithOffset(r6, r3, r4)
        L_0x0var_:
            org.telegram.ui.Components.RecyclerListView r3 = r8.chatListView
            r3.invalidate()
            int r3 = r8.scrollToMessagePosition
            r4 = -10000(0xffffffffffffd8f0, float:NaN)
            if (r3 == r4) goto L_0x0var_
            r4 = -9000(0xffffffffffffdcd8, float:NaN)
            if (r3 != r4) goto L_0x0var_
        L_0x0var_:
            r2 = 1
            r8.canShowPagedownButton = r2
            r8.updatePagedownButtonVisibility(r2)
            if (r43 == 0) goto L_0x0var_
            org.telegram.ui.Components.CounterView r3 = r8.pagedownButtonCounter
            if (r3 == 0) goto L_0x0var_
            int r4 = r8.prevSetUnreadCount
            int r5 = r8.newUnreadMessageCount
            if (r4 == r5) goto L_0x0var_
            r4 = r43
            r8.newUnreadMessageCount = r4
            boolean r5 = r8.openAnimationEnded
            r3.setCount(r4, r5)
            int r3 = r8.newUnreadMessageCount
            r8.prevSetUnreadCount = r3
        L_0x0var_:
            r3 = -10000(0xffffffffffffd8f0, float:NaN)
            r8.scrollToMessagePosition = r3
            r3 = 0
            r8.scrollToMessage = r3
            goto L_0x0f6c
        L_0x0var_:
            r53.moveScrollToLastMessage()
        L_0x0f6c:
            if (r39 == 0) goto L_0x0var_
            r2 = 1
            r8.showMentionDownButton(r2, r2)
            org.telegram.ui.ActionBar.SimpleTextView r3 = r8.mentiondownButtonCounter
            if (r3 == 0) goto L_0x0var_
            r4 = 0
            r3.setVisibility(r4)
            org.telegram.ui.ActionBar.SimpleTextView r3 = r8.mentiondownButtonCounter
            java.lang.Object[] r5 = new java.lang.Object[r2]
            r2 = r39
            r8.newMentionsCount = r2
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r5[r4] = r2
            java.lang.String r2 = "%d"
            java.lang.String r2 = java.lang.String.format(r2, r5)
            r3.setText(r2)
        L_0x0var_:
            boolean r2 = r8.paused
            if (r2 == 0) goto L_0x0f9f
            r2 = 1
            r8.scrollToTopOnResume = r2
            org.telegram.messenger.MessageObject r3 = r8.scrollToMessage
            if (r3 == 0) goto L_0x0fa0
            r8.scrollToTopUnReadOnResume = r2
            goto L_0x0fa0
        L_0x0f9f:
            r2 = 1
        L_0x0fa0:
            boolean r3 = r8.first
            if (r3 == 0) goto L_0x0fcc
            org.telegram.ui.Components.RecyclerListView r3 = r8.chatListView
            if (r3 == 0) goto L_0x0fcc
            boolean r4 = r8.fragmentBeginToShow
            if (r4 != 0) goto L_0x0fbd
            r4 = 0
            r3.setAnimateEmptyView(r4, r2)
            org.telegram.ui.Components.RecyclerListView r3 = r8.chatListView
            android.widget.FrameLayout r4 = r8.emptyViewContainer
            r3.setEmptyView(r4)
            org.telegram.ui.Components.RecyclerListView r3 = r8.chatListView
            r3.setAnimateEmptyView(r2, r2)
            goto L_0x0fcc
        L_0x0fbd:
            android.widget.FrameLayout r4 = r8.emptyViewContainer
            r3.setEmptyView(r4)
            goto L_0x0fcc
        L_0x0fc3:
            r2 = 1
            r8.scrollToTopOnResume = r2
            org.telegram.messenger.MessageObject r3 = r8.scrollToMessage
            if (r3 == 0) goto L_0x0fcc
            r8.scrollToTopUnReadOnResume = r2
        L_0x0fcc:
            if (r14 == 0) goto L_0x101e
            r3 = 0
        L_0x0fcf:
            int r4 = r14.size()
            if (r3 >= r4) goto L_0x101e
            java.lang.Object r4 = r14.valueAt(r3)
            org.telegram.messenger.MessageObject$GroupedMessages r4 = (org.telegram.messenger.MessageObject.GroupedMessages) r4
            r4.calculate()
            org.telegram.ui.ChatActivity$ChatActivityAdapter r5 = r8.chatAdapter
            if (r5 == 0) goto L_0x101b
            if (r15 == 0) goto L_0x101b
            long r5 = r14.keyAt(r3)
            int r5 = r15.indexOfKey(r5)
            if (r5 < 0) goto L_0x101b
            java.util.ArrayList<org.telegram.messenger.MessageObject> r5 = r4.messages
            int r6 = r5.size()
            r2 = 1
            int r6 = r6 - r2
            java.lang.Object r5 = r5.get(r6)
            org.telegram.messenger.MessageObject r5 = (org.telegram.messenger.MessageObject) r5
            java.util.ArrayList<org.telegram.messenger.MessageObject> r6 = r8.messages
            int r5 = r6.indexOf(r5)
            if (r5 < 0) goto L_0x101b
            androidx.recyclerview.widget.ChatListItemAnimator r6 = r8.chatListItemAnimator
            if (r6 == 0) goto L_0x100b
            r6.groupWillChanged(r4)
        L_0x100b:
            org.telegram.ui.ChatActivity$ChatActivityAdapter r6 = r8.chatAdapter
            int r7 = r6.messagesStartRow
            int r5 = r5 + r7
            java.util.ArrayList<org.telegram.messenger.MessageObject> r4 = r4.messages
            int r4 = r4.size()
            r6.notifyItemRangeChanged(r5, r4)
        L_0x101b:
            int r3 = r3 + 1
            goto L_0x0fcf
        L_0x101e:
            boolean r3 = r8.first
            if (r3 == 0) goto L_0x1036
            java.util.ArrayList<org.telegram.messenger.MessageObject> r3 = r8.messages
            int r3 = r3.size()
            if (r3 <= 0) goto L_0x1036
            r3 = 0
            r8.first = r3
            boolean r3 = r53.isThreadChat()
            if (r3 == 0) goto L_0x1036
            r53.invalidateMessagesVisiblePart()
        L_0x1036:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r3 = r8.messages
            boolean r3 = r3.isEmpty()
            if (r3 == 0) goto L_0x1053
            org.telegram.tgnet.TLRPC$EncryptedChat r3 = r8.currentEncryptedChat
            if (r3 != 0) goto L_0x1053
            org.telegram.tgnet.TLRPC$User r3 = r8.currentUser
            if (r3 == 0) goto L_0x1053
            boolean r3 = r3.bot
            if (r3 == 0) goto L_0x1053
            java.lang.String r3 = r8.botUser
            if (r3 != 0) goto L_0x1053
            r8.botUser = r11
            r53.updateBottomOverlay()
        L_0x1053:
            if (r12 != 0) goto L_0x1082
            long r3 = r8.mergeDialogId
            r5 = 0
            int r7 = (r3 > r5 ? 1 : (r3 == r5 ? 0 : -1))
            if (r7 == 0) goto L_0x1062
            if (r1 == 0) goto L_0x1060
            goto L_0x1062
        L_0x1060:
            r2 = 1
            goto L_0x106e
        L_0x1062:
            org.telegram.tgnet.TLRPC$EncryptedChat r3 = r8.currentEncryptedChat
            if (r3 == 0) goto L_0x1082
            boolean[] r3 = r8.endReached
            r4 = 0
            boolean r3 = r3[r4]
            if (r3 != 0) goto L_0x1082
            goto L_0x1060
        L_0x106e:
            r8.first = r2
            org.telegram.ui.Components.RecyclerListView r3 = r8.chatListView
            if (r3 == 0) goto L_0x1078
            r4 = 0
            r3.setEmptyView(r4)
        L_0x1078:
            android.widget.FrameLayout r3 = r8.emptyViewContainer
            if (r3 == 0) goto L_0x1080
            r4 = 4
            r3.setVisibility(r4)
        L_0x1080:
            r3 = 0
            goto L_0x1086
        L_0x1082:
            r3 = 0
            r8.showProgressView(r3)
        L_0x1086:
            if (r12 != 0) goto L_0x10d0
            long r4 = r8.mergeDialogId
            r6 = 0
            int r9 = (r4 > r6 ? 1 : (r4 == r6 ? 0 : -1))
            if (r9 == 0) goto L_0x10d0
            if (r1 != 0) goto L_0x10d0
            org.telegram.messenger.NotificationCenter r4 = r53.getNotificationCenter()
            int r5 = r8.transitionAnimationIndex
            r6 = 10
            int[] r6 = new int[r6]
            int r7 = org.telegram.messenger.NotificationCenter.chatInfoDidLoad
            r6[r3] = r7
            int r3 = org.telegram.messenger.NotificationCenter.groupCallUpdated
            r2 = 1
            r6[r2] = r3
            int r2 = org.telegram.messenger.NotificationCenter.dialogsNeedReload
            r3 = 2
            r6[r3] = r2
            int r2 = org.telegram.messenger.NotificationCenter.scheduledMessagesUpdated
            r3 = 3
            r6[r3] = r2
            int r2 = org.telegram.messenger.NotificationCenter.closeChats
            r3 = 4
            r6[r3] = r2
            int r2 = org.telegram.messenger.NotificationCenter.messagesDidLoad
            r3 = 5
            r6[r3] = r2
            int r2 = org.telegram.messenger.NotificationCenter.botKeyboardDidLoad
            r3 = 6
            r6[r3] = r2
            int r2 = org.telegram.messenger.NotificationCenter.userInfoDidLoad
            r3 = 7
            r6[r3] = r2
            int r2 = org.telegram.messenger.NotificationCenter.pinnedInfoDidLoad
            r6[r22] = r2
            int r2 = org.telegram.messenger.NotificationCenter.needDeleteDialog
            r3 = 9
            r6[r3] = r2
            r4.updateAllowedNotifications(r5, r6)
        L_0x10d0:
            r2 = 0
            if (r36 == 0) goto L_0x10d6
            r8.showFloatingDateView(r2)
        L_0x10d6:
            r8.checkScrollForLoad(r2)
            if (r0 == 0) goto L_0x30bd
            org.telegram.ui.ChatActivity$ChatActivityAdapter r0 = r8.chatAdapter
            r0.notifyDataSetChanged()
            org.telegram.ui.ActionBar.AlertDialog r0 = r8.progressDialog
            if (r0 == 0) goto L_0x10e7
            r0.dismiss()
        L_0x10e7:
            r8.updatePinnedListButton(r2)
            int r0 = r8.postponedScrollMessageId
            if (r0 != 0) goto L_0x110e
            org.telegram.ui.ChatActivity$ChatScrollCallback r0 = r8.chatScrollHelperCallback
            r1 = 0
            org.telegram.messenger.MessageObject unused = r0.scrollTo = r1
            org.telegram.ui.ChatActivity$ChatScrollCallback r0 = r8.chatScrollHelperCallback
            r1 = 1
            boolean unused = r0.lastBottom = r1
            org.telegram.ui.ChatActivity$ChatScrollCallback r0 = r8.chatScrollHelperCallback
            int unused = r0.lastItemOffset = r2
            org.telegram.ui.ChatActivity$ChatScrollCallback r0 = r8.chatScrollHelperCallback
            float r3 = r8.chatListViewPaddingTop
            int r3 = (int) r3
            int unused = r0.lastPadding = r3
            org.telegram.ui.Components.RecyclerAnimationScrollHelper r0 = r8.chatScrollHelper
            r0.scrollToPosition(r2, r2, r1, r1)
            goto L_0x30bd
        L_0x110e:
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r2 = r8.messagesDict
            r1 = r2[r1]
            java.lang.Object r0 = r1.get(r0)
            org.telegram.messenger.MessageObject r0 = (org.telegram.messenger.MessageObject) r0
            if (r0 == 0) goto L_0x1139
            android.util.LongSparseArray<org.telegram.messenger.MessageObject$GroupedMessages> r1 = r8.groupedMessagesMap
            long r2 = r0.getGroupId()
            java.lang.Object r1 = r1.get(r2)
            org.telegram.messenger.MessageObject$GroupedMessages r1 = (org.telegram.messenger.MessageObject.GroupedMessages) r1
            long r2 = r0.getGroupId()
            r4 = 0
            int r6 = (r2 > r4 ? 1 : (r2 == r4 ? 0 : -1))
            if (r6 == 0) goto L_0x1139
            if (r1 == 0) goto L_0x1139
            org.telegram.messenger.MessageObject r1 = r1.findPrimaryMessageObject()
            if (r1 == 0) goto L_0x1139
            r0 = r1
        L_0x1139:
            if (r0 == 0) goto L_0x30bd
            java.util.ArrayList<org.telegram.messenger.MessageObject> r1 = r8.messages
            int r1 = r1.indexOf(r0)
            if (r1 < 0) goto L_0x30bd
            androidx.recyclerview.widget.GridLayoutManagerFixed r2 = r8.chatLayoutManager
            int r2 = r2.findFirstVisibleItemPosition()
            int r3 = r0.getId()
            r8.highlightMessageId = r3
            int r4 = r8.postponedScrollMinMessageId
            if (r4 == 0) goto L_0x1160
            if (r3 >= 0) goto L_0x115d
            if (r4 >= 0) goto L_0x115d
            if (r3 >= r4) goto L_0x115b
        L_0x1159:
            r2 = 0
            goto L_0x1163
        L_0x115b:
            r2 = 1
            goto L_0x1163
        L_0x115d:
            if (r3 <= r4) goto L_0x115b
            goto L_0x1159
        L_0x1160:
            if (r2 <= r1) goto L_0x115b
            goto L_0x1159
        L_0x1163:
            org.telegram.ui.Components.RecyclerAnimationScrollHelper r3 = r8.chatScrollHelper
            r3.setScrollDirection(r2)
            boolean r2 = r8.needSelectFromMessageId
            if (r2 != 0) goto L_0x116f
            r53.removeSelectedMessageHighlight()
        L_0x116f:
            int r2 = r8.getScrollOffsetForMessage(r0)
            org.telegram.ui.ChatActivity$ChatScrollCallback r3 = r8.chatScrollHelperCallback
            org.telegram.messenger.MessageObject unused = r3.scrollTo = r0
            org.telegram.ui.ChatActivity$ChatScrollCallback r0 = r8.chatScrollHelperCallback
            r3 = 0
            boolean unused = r0.lastBottom = r3
            org.telegram.ui.ChatActivity$ChatScrollCallback r0 = r8.chatScrollHelperCallback
            int unused = r0.lastItemOffset = r2
            org.telegram.ui.ChatActivity$ChatScrollCallback r0 = r8.chatScrollHelperCallback
            float r4 = r8.chatListViewPaddingTop
            int r4 = (int) r4
            int unused = r0.lastPadding = r4
            org.telegram.ui.Components.RecyclerAnimationScrollHelper r0 = r8.chatScrollHelper
            org.telegram.ui.ChatActivity$ChatActivityAdapter r4 = r8.chatAdapter
            int r4 = r4.messagesStartRow
            int r4 = r4 + r1
            r1 = 1
            r0.scrollToPosition(r4, r2, r3, r1)
            goto L_0x30bd
        L_0x119a:
            r11 = r4
            int r1 = org.telegram.messenger.NotificationCenter.emojiDidLoad
            if (r0 != r1) goto L_0x11f8
            org.telegram.ui.Components.RecyclerListView r0 = r8.chatListView
            if (r0 == 0) goto L_0x11a6
            r0.invalidateViews()
        L_0x11a6:
            org.telegram.ui.ActionBar.SimpleTextView r0 = r8.replyObjectTextView
            if (r0 == 0) goto L_0x11ad
            r0.invalidate()
        L_0x11ad:
            android.widget.TextView r0 = r8.alertTextView
            if (r0 == 0) goto L_0x11b4
            r0.invalidate()
        L_0x11b4:
            r0 = 2
            r15 = 0
        L_0x11b6:
            if (r15 >= r0) goto L_0x11c7
            org.telegram.ui.ActionBar.SimpleTextView[] r0 = r8.pinnedMessageTextView
            r1 = r0[r15]
            if (r1 == 0) goto L_0x11c3
            r0 = r0[r15]
            r0.invalidate()
        L_0x11c3:
            int r15 = r15 + 1
            r0 = 2
            goto L_0x11b6
        L_0x11c7:
            org.telegram.ui.Components.RecyclerListView r0 = r8.mentionListView
            if (r0 == 0) goto L_0x11ce
            r0.invalidateViews()
        L_0x11ce:
            org.telegram.ui.Components.RecyclerListView r0 = r8.stickersListView
            if (r0 == 0) goto L_0x11d5
            r0.invalidateViews()
        L_0x11d5:
            org.telegram.ui.Components.RecyclerListView r0 = r8.messagesSearchListView
            if (r0 == 0) goto L_0x11dc
            r0.invalidateViews()
        L_0x11dc:
            org.telegram.ui.Components.UndoView r0 = r8.undoView
            if (r0 == 0) goto L_0x11e3
            r0.invalidate()
        L_0x11e3:
            org.telegram.ui.Components.ChatActivityEnterView r0 = r8.chatActivityEnterView
            if (r0 == 0) goto L_0x30bd
            org.telegram.ui.Components.EditTextCaption r0 = r0.getEditField()
            int r1 = r0.getCurrentTextColor()
            r2 = -1
            r0.setTextColor(r2)
            r0.setTextColor(r1)
            goto L_0x30bd
        L_0x11f8:
            int r1 = org.telegram.messenger.NotificationCenter.didUpdateConnectionState
            if (r0 != r1) goto L_0x120d
            org.telegram.tgnet.ConnectionsManager r0 = org.telegram.tgnet.ConnectionsManager.getInstance(r55)
            int r0 = r0.getConnectionState()
            r1 = 3
            if (r0 != r1) goto L_0x30bd
            r1 = 0
            r8.checkAutoDownloadMessages(r1)
            goto L_0x30bd
        L_0x120d:
            r1 = 0
            int r2 = org.telegram.messenger.NotificationCenter.chatOnlineCountDidLoad
            if (r0 != r2) goto L_0x1243
            r0 = r9[r1]
            java.lang.Integer r0 = (java.lang.Integer) r0
            org.telegram.tgnet.TLRPC$ChatFull r1 = r8.chatInfo
            if (r1 == 0) goto L_0x1242
            org.telegram.tgnet.TLRPC$Chat r1 = r8.currentChat
            if (r1 == 0) goto L_0x1242
            int r1 = r1.id
            int r0 = r0.intValue()
            if (r1 == r0) goto L_0x1227
            goto L_0x1242
        L_0x1227:
            org.telegram.tgnet.TLRPC$ChatFull r0 = r8.chatInfo
            r1 = 1
            r1 = r9[r1]
            java.lang.Integer r1 = (java.lang.Integer) r1
            int r1 = r1.intValue()
            r0.online_count = r1
            org.telegram.ui.Components.ChatAvatarContainer r0 = r8.avatarContainer
            if (r0 == 0) goto L_0x30bd
            r0.updateOnlineCount()
            org.telegram.ui.Components.ChatAvatarContainer r0 = r8.avatarContainer
            r0.updateSubtitle()
            goto L_0x30bd
        L_0x1242:
            return
        L_0x1243:
            int r1 = org.telegram.messenger.NotificationCenter.updateInterfaces
            if (r0 != r1) goto L_0x1304
            r1 = 0
            r0 = r9[r1]
            java.lang.Integer r0 = (java.lang.Integer) r0
            int r0 = r0.intValue()
            r1 = r0 & 1
            if (r1 != 0) goto L_0x1258
            r2 = r0 & 16
            if (r2 == 0) goto L_0x128c
        L_0x1258:
            org.telegram.tgnet.TLRPC$Chat r2 = r8.currentChat
            if (r2 == 0) goto L_0x1271
            org.telegram.messenger.MessagesController r2 = r53.getMessagesController()
            org.telegram.tgnet.TLRPC$Chat r3 = r8.currentChat
            int r3 = r3.id
            java.lang.Integer r3 = java.lang.Integer.valueOf(r3)
            org.telegram.tgnet.TLRPC$Chat r2 = r2.getChat(r3)
            if (r2 == 0) goto L_0x1289
            r8.currentChat = r2
            goto L_0x1289
        L_0x1271:
            org.telegram.tgnet.TLRPC$User r2 = r8.currentUser
            if (r2 == 0) goto L_0x1289
            org.telegram.messenger.MessagesController r2 = r53.getMessagesController()
            org.telegram.tgnet.TLRPC$User r3 = r8.currentUser
            int r3 = r3.id
            java.lang.Integer r3 = java.lang.Integer.valueOf(r3)
            org.telegram.tgnet.TLRPC$User r2 = r2.getUser(r3)
            if (r2 == 0) goto L_0x1289
            r8.currentUser = r2
        L_0x1289:
            r53.updateTitle()
        L_0x128c:
            boolean r2 = r53.isThreadChat()
            if (r2 != 0) goto L_0x12a7
            r2 = r0 & 32
            if (r2 != 0) goto L_0x129a
            r2 = r0 & 4
            if (r2 == 0) goto L_0x12a7
        L_0x129a:
            org.telegram.tgnet.TLRPC$Chat r2 = r8.currentChat
            if (r2 == 0) goto L_0x12a5
            org.telegram.ui.Components.ChatAvatarContainer r2 = r8.avatarContainer
            if (r2 == 0) goto L_0x12a5
            r2.updateOnlineCount()
        L_0x12a5:
            r15 = 1
            goto L_0x12a8
        L_0x12a7:
            r15 = 0
        L_0x12a8:
            r2 = r0 & 2
            if (r2 != 0) goto L_0x12b2
            r2 = r0 & 8
            if (r2 != 0) goto L_0x12b2
            if (r1 == 0) goto L_0x12b8
        L_0x12b2:
            r53.checkAndUpdateAvatar()
            r53.updateVisibleRows()
        L_0x12b8:
            r1 = r0 & 64
            if (r1 == 0) goto L_0x12bd
            r15 = 1
        L_0x12bd:
            r1 = r0 & 8192(0x2000, float:1.14794E-41)
            if (r1 == 0) goto L_0x12ef
            org.telegram.tgnet.TLRPC$Chat r1 = r8.currentChat
            if (r1 == 0) goto L_0x12ef
            org.telegram.messenger.MessagesController r1 = r53.getMessagesController()
            org.telegram.tgnet.TLRPC$Chat r2 = r8.currentChat
            int r2 = r2.id
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            org.telegram.tgnet.TLRPC$Chat r1 = r1.getChat(r2)
            if (r1 != 0) goto L_0x12d8
            return
        L_0x12d8:
            r8.currentChat = r1
            boolean r1 = r53.isThreadChat()
            r2 = 1
            r15 = r1 ^ 1
            r53.updateBottomOverlay()
            org.telegram.ui.Components.ChatActivityEnterView r1 = r8.chatActivityEnterView
            if (r1 == 0) goto L_0x12ef
            long r2 = r8.dialog_id
            int r4 = r8.currentAccount
            r1.setDialogId(r2, r4)
        L_0x12ef:
            org.telegram.ui.Components.ChatAvatarContainer r1 = r8.avatarContainer
            if (r1 == 0) goto L_0x12fa
            if (r15 == 0) goto L_0x12fa
            r12 = 1
            r1.updateSubtitle(r12)
            goto L_0x12fb
        L_0x12fa:
            r12 = 1
        L_0x12fb:
            r0 = r0 & 128(0x80, float:1.794E-43)
            if (r0 == 0) goto L_0x30bd
            r8.updateTopPanel(r12)
            goto L_0x30bd
        L_0x1304:
            r12 = 1
            int r1 = org.telegram.messenger.NotificationCenter.didReceiveNewMessages
            if (r0 != r1) goto L_0x1392
            r1 = 0
            r0 = r9[r1]
            java.lang.Long r0 = (java.lang.Long) r0
            long r0 = r0.longValue()
            r2 = r9[r12]
            java.util.ArrayList r2 = (java.util.ArrayList) r2
            long r3 = r8.dialog_id
            int r5 = (r0 > r3 ? 1 : (r0 == r3 ? 0 : -1))
            if (r5 != 0) goto L_0x1354
            r3 = 2
            r0 = r9[r3]
            java.lang.Boolean r0 = (java.lang.Boolean) r0
            boolean r0 = r0.booleanValue()
            int r1 = r8.chatMode
            if (r1 != r12) goto L_0x132b
            r3 = 1
            goto L_0x132c
        L_0x132b:
            r3 = 0
        L_0x132c:
            if (r0 == r3) goto L_0x134f
            if (r1 == r12) goto L_0x134e
            boolean r0 = r8.isPaused
            if (r0 != 0) goto L_0x134e
            java.util.ArrayList<org.telegram.messenger.MessageObject> r0 = r8.forwardingMessages
            if (r0 != 0) goto L_0x134e
            boolean r0 = r2.isEmpty()
            if (r0 != 0) goto L_0x134e
            r1 = 0
            java.lang.Object r0 = r2.get(r1)
            org.telegram.messenger.MessageObject r0 = (org.telegram.messenger.MessageObject) r0
            int r0 = r0.getId()
            if (r0 >= 0) goto L_0x134e
            r53.openScheduledMessages()
        L_0x134e:
            return
        L_0x134f:
            r8.processNewMessages(r2)
            goto L_0x30bd
        L_0x1354:
            org.telegram.tgnet.TLRPC$Chat r3 = r8.currentChat
            boolean r3 = org.telegram.messenger.ChatObject.isChannel(r3)
            if (r3 == 0) goto L_0x30bd
            org.telegram.tgnet.TLRPC$Chat r3 = r8.currentChat
            boolean r3 = r3.megagroup
            if (r3 != 0) goto L_0x30bd
            org.telegram.tgnet.TLRPC$ChatFull r3 = r8.chatInfo
            if (r3 == 0) goto L_0x30bd
            int r3 = r3.linked_chat_id
            int r3 = -r3
            long r3 = (long) r3
            int r5 = (r0 > r3 ? 1 : (r0 == r3 ? 0 : -1))
            if (r5 != 0) goto L_0x30bd
            int r0 = r2.size()
            r15 = 0
        L_0x1373:
            if (r15 >= r0) goto L_0x138d
            java.lang.Object r1 = r2.get(r15)
            org.telegram.messenger.MessageObject r1 = (org.telegram.messenger.MessageObject) r1
            boolean r3 = r1.isReply()
            if (r3 == 0) goto L_0x138a
            android.util.SparseArray<org.telegram.messenger.MessageObject> r3 = r8.waitingForReplies
            int r4 = r1.getId()
            r3.put(r4, r1)
        L_0x138a:
            int r15 = r15 + 1
            goto L_0x1373
        L_0x138d:
            r53.checkWaitingForReplies()
            goto L_0x30bd
        L_0x1392:
            int r1 = org.telegram.messenger.NotificationCenter.closeChats
            if (r0 != r1) goto L_0x13cc
            if (r9 == 0) goto L_0x13af
            int r0 = r9.length
            if (r0 <= 0) goto L_0x13af
            r1 = 0
            r0 = r9[r1]
            java.lang.Long r0 = (java.lang.Long) r0
            long r0 = r0.longValue()
            long r2 = r8.dialog_id
            int r4 = (r0 > r2 ? 1 : (r0 == r2 ? 0 : -1))
            if (r4 != 0) goto L_0x30bd
            r53.finishFragment()
            goto L_0x30bd
        L_0x13af:
            boolean r0 = org.telegram.messenger.AndroidUtilities.isTablet()
            if (r0 == 0) goto L_0x13c7
            org.telegram.ui.ActionBar.ActionBarLayout r0 = r8.parentLayout
            if (r0 == 0) goto L_0x13c7
            java.util.ArrayList<org.telegram.ui.ActionBar.BaseFragment> r0 = r0.fragmentsStack
            int r0 = r0.size()
            r1 = 1
            if (r0 <= r1) goto L_0x13c7
            r53.finishFragment()
            goto L_0x30bd
        L_0x13c7:
            r53.removeSelfFromStack()
            goto L_0x30bd
        L_0x13cc:
            int r1 = org.telegram.messenger.NotificationCenter.commentsRead
            if (r0 != r1) goto L_0x1429
            r1 = 0
            r0 = r9[r1]
            java.lang.Integer r0 = (java.lang.Integer) r0
            int r0 = r0.intValue()
            org.telegram.tgnet.TLRPC$Chat r2 = r8.currentChat
            if (r2 == 0) goto L_0x30bd
            int r2 = r2.id
            if (r2 != r0) goto L_0x30bd
            r2 = 1
            r0 = r9[r2]
            java.lang.Integer r0 = (java.lang.Integer) r0
            int r0 = r0.intValue()
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r2 = r8.messagesDict
            r1 = r2[r1]
            java.lang.Object r0 = r1.get(r0)
            org.telegram.messenger.MessageObject r0 = (org.telegram.messenger.MessageObject) r0
            if (r0 == 0) goto L_0x30bd
            boolean r1 = r0.hasReplies()
            if (r1 == 0) goto L_0x30bd
            r1 = 2
            r1 = r9[r1]
            java.lang.Integer r1 = (java.lang.Integer) r1
            int r1 = r1.intValue()
            boolean r2 = r8.paused
            if (r2 == 0) goto L_0x141b
            java.lang.Runnable r2 = r8.delayedReadRunnable
            if (r2 == 0) goto L_0x1413
            org.telegram.messenger.AndroidUtilities.cancelRunOnUIThread(r2)
            r2 = 0
            r8.delayedReadRunnable = r2
        L_0x1413:
            org.telegram.tgnet.TLRPC$Message r0 = r0.messageOwner
            org.telegram.tgnet.TLRPC$TL_messageReplies r0 = r0.replies
            r0.read_max_id = r1
            goto L_0x30bd
        L_0x141b:
            org.telegram.ui.-$$Lambda$ChatActivity$y3gu1Bs8Zs6yHckUowm75hs3oCI r2 = new org.telegram.ui.-$$Lambda$ChatActivity$y3gu1Bs8Zs6yHckUowm75hs3oCI
            r2.<init>(r0, r1)
            r8.delayedReadRunnable = r2
            r0 = 500(0x1f4, double:2.47E-321)
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r2, r0)
            goto L_0x30bd
        L_0x1429:
            int r1 = org.telegram.messenger.NotificationCenter.changeRepliesCounter
            if (r0 != r1) goto L_0x14d8
            r1 = 0
            r0 = r9[r1]
            java.lang.Integer r0 = (java.lang.Integer) r0
            int r0 = r0.intValue()
            org.telegram.tgnet.TLRPC$Chat r2 = r8.currentChat
            if (r2 == 0) goto L_0x30bd
            int r2 = r2.id
            if (r2 != r0) goto L_0x30bd
            r2 = 1
            r0 = r9[r2]
            java.lang.Integer r0 = (java.lang.Integer) r0
            int r0 = r0.intValue()
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r2 = r8.messagesDict
            r2 = r2[r1]
            java.lang.Object r0 = r2.get(r0)
            org.telegram.messenger.MessageObject r0 = (org.telegram.messenger.MessageObject) r0
            if (r0 == 0) goto L_0x30bd
            org.telegram.tgnet.TLRPC$Message r1 = r0.messageOwner
            org.telegram.tgnet.TLRPC$TL_messageReplies r1 = r1.replies
            if (r1 == 0) goto L_0x30bd
            r2 = 2
            r2 = r9[r2]
            java.lang.Integer r2 = (java.lang.Integer) r2
            int r3 = r1.replies
            int r4 = r2.intValue()
            int r3 = r3 + r4
            r1.replies = r3
            int r1 = r2.intValue()
            if (r1 <= 0) goto L_0x14cb
            org.telegram.tgnet.TLRPC$Chat r1 = r8.currentChat
            boolean r1 = org.telegram.messenger.ChatObject.shouldSendAnonymously(r1)
            if (r1 == 0) goto L_0x1481
            org.telegram.tgnet.TLRPC$TL_peerChannel r1 = new org.telegram.tgnet.TLRPC$TL_peerChannel
            r1.<init>()
            org.telegram.tgnet.TLRPC$Chat r2 = r8.currentChat
            int r2 = r2.id
            r1.channel_id = r2
            goto L_0x1490
        L_0x1481:
            org.telegram.tgnet.TLRPC$TL_peerUser r1 = new org.telegram.tgnet.TLRPC$TL_peerUser
            r1.<init>()
            org.telegram.messenger.UserConfig r2 = r53.getUserConfig()
            int r2 = r2.getClientUserId()
            r1.user_id = r2
        L_0x1490:
            org.telegram.tgnet.TLRPC$Message r2 = r0.messageOwner
            org.telegram.tgnet.TLRPC$TL_messageReplies r2 = r2.replies
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Peer> r2 = r2.recent_repliers
            int r2 = r2.size()
            r3 = 0
        L_0x149b:
            if (r3 >= r2) goto L_0x14c0
            org.telegram.tgnet.TLRPC$Message r4 = r0.messageOwner
            org.telegram.tgnet.TLRPC$TL_messageReplies r4 = r4.replies
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Peer> r4 = r4.recent_repliers
            java.lang.Object r4 = r4.get(r3)
            org.telegram.tgnet.TLRPC$Peer r4 = (org.telegram.tgnet.TLRPC$Peer) r4
            int r4 = org.telegram.messenger.MessageObject.getPeerId(r4)
            int r5 = org.telegram.messenger.MessageObject.getPeerId(r1)
            if (r4 != r5) goto L_0x14bd
            org.telegram.tgnet.TLRPC$Message r2 = r0.messageOwner
            org.telegram.tgnet.TLRPC$TL_messageReplies r2 = r2.replies
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Peer> r2 = r2.recent_repliers
            r2.remove(r3)
            goto L_0x14c0
        L_0x14bd:
            int r3 = r3 + 1
            goto L_0x149b
        L_0x14c0:
            org.telegram.tgnet.TLRPC$Message r2 = r0.messageOwner
            org.telegram.tgnet.TLRPC$TL_messageReplies r2 = r2.replies
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Peer> r2 = r2.recent_repliers
            r3 = 0
            r2.add(r3, r1)
            goto L_0x14cc
        L_0x14cb:
            r3 = 0
        L_0x14cc:
            org.telegram.tgnet.TLRPC$Message r0 = r0.messageOwner
            org.telegram.tgnet.TLRPC$TL_messageReplies r0 = r0.replies
            int r1 = r0.replies
            if (r1 >= 0) goto L_0x30bd
            r0.replies = r3
            goto L_0x30bd
        L_0x14d8:
            r3 = 0
            int r1 = org.telegram.messenger.NotificationCenter.threadMessagesRead
            if (r0 != r1) goto L_0x1584
            r0 = r9[r3]
            java.lang.Long r0 = (java.lang.Long) r0
            long r0 = r0.longValue()
            long r2 = r8.dialog_id
            int r4 = (r2 > r0 ? 1 : (r2 == r0 ? 0 : -1))
            if (r4 == 0) goto L_0x14ec
            return
        L_0x14ec:
            r1 = 1
            r0 = r9[r1]
            java.lang.Integer r0 = (java.lang.Integer) r0
            int r0 = r0.intValue()
            int r1 = r8.threadMessageId
            if (r0 == r1) goto L_0x14fa
            return
        L_0x14fa:
            r0 = 2
            r0 = r9[r0]
            java.lang.Integer r0 = (java.lang.Integer) r0
            int r0 = r0.intValue()
            r1 = 3
            r1 = r9[r1]
            java.lang.Integer r1 = (java.lang.Integer) r1
            int r1 = r1.intValue()
            int r2 = r8.threadMaxInboxReadId
            if (r0 <= r2) goto L_0x1547
            r8.threadMaxInboxReadId = r0
            java.util.ArrayList<org.telegram.messenger.MessageObject> r0 = r8.messages
            int r0 = r0.size()
            r2 = 0
        L_0x1519:
            if (r2 >= r0) goto L_0x1547
            java.util.ArrayList<org.telegram.messenger.MessageObject> r3 = r8.messages
            java.lang.Object r3 = r3.get(r2)
            org.telegram.messenger.MessageObject r3 = (org.telegram.messenger.MessageObject) r3
            int r4 = r3.getId()
            boolean r5 = r3.isOut()
            if (r5 != 0) goto L_0x1544
            if (r4 <= 0) goto L_0x1544
            int r5 = r8.threadMaxInboxReadId
            if (r4 > r5) goto L_0x1544
            boolean r4 = r3.isUnread()
            if (r4 != 0) goto L_0x153a
            goto L_0x1547
        L_0x153a:
            r3.setIsRead()
            org.telegram.ui.ChatActivity$ChatActivityAdapter r4 = r8.chatAdapter
            if (r4 == 0) goto L_0x1544
            r4.invalidateRowWithMessageObject(r3)
        L_0x1544:
            int r2 = r2 + 1
            goto L_0x1519
        L_0x1547:
            int r0 = r8.threadMaxOutboxReadId
            if (r1 <= r0) goto L_0x30bd
            r8.threadMaxOutboxReadId = r1
            java.util.ArrayList<org.telegram.messenger.MessageObject> r0 = r8.messages
            int r0 = r0.size()
            r1 = 0
        L_0x1554:
            if (r1 >= r0) goto L_0x30bd
            java.util.ArrayList<org.telegram.messenger.MessageObject> r2 = r8.messages
            java.lang.Object r2 = r2.get(r1)
            org.telegram.messenger.MessageObject r2 = (org.telegram.messenger.MessageObject) r2
            int r3 = r2.getId()
            boolean r4 = r2.isOut()
            if (r4 == 0) goto L_0x1581
            if (r3 <= 0) goto L_0x1581
            int r4 = r8.threadMaxOutboxReadId
            if (r3 > r4) goto L_0x1581
            boolean r3 = r2.isUnread()
            if (r3 != 0) goto L_0x1576
            goto L_0x30bd
        L_0x1576:
            r2.setIsRead()
            org.telegram.ui.ChatActivity$ChatActivityAdapter r3 = r8.chatAdapter
            if (r3 == 0) goto L_0x1581
            r4 = 0
            r3.updateRowWithMessageObject(r2, r4)
        L_0x1581:
            int r1 = r1 + 1
            goto L_0x1554
        L_0x1584:
            int r1 = org.telegram.messenger.NotificationCenter.messagesRead
            if (r0 != r1) goto L_0x1660
            int r0 = r8.chatMode
            r1 = 1
            if (r0 != r1) goto L_0x158e
            return
        L_0x158e:
            r2 = 0
            r0 = r9[r2]
            org.telegram.messenger.support.SparseLongArray r0 = (org.telegram.messenger.support.SparseLongArray) r0
            r2 = r9[r1]
            org.telegram.messenger.support.SparseLongArray r2 = (org.telegram.messenger.support.SparseLongArray) r2
            if (r0 == 0) goto L_0x15f9
            int r1 = r0.size()
            r3 = 0
        L_0x159e:
            if (r3 >= r1) goto L_0x15f9
            int r4 = r0.keyAt(r3)
            long r5 = r0.get(r4)
            long r9 = (long) r4
            long r13 = r8.dialog_id
            int r4 = (r9 > r13 ? 1 : (r9 == r13 ? 0 : -1))
            if (r4 == 0) goto L_0x15b2
            int r3 = r3 + 1
            goto L_0x159e
        L_0x15b2:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r0 = r8.messages
            int r0 = r0.size()
            r1 = 0
            r3 = 0
        L_0x15ba:
            if (r3 >= r0) goto L_0x15f2
            java.util.ArrayList<org.telegram.messenger.MessageObject> r4 = r8.messages
            java.lang.Object r4 = r4.get(r3)
            org.telegram.messenger.MessageObject r4 = (org.telegram.messenger.MessageObject) r4
            boolean r7 = r4.isOut()
            if (r7 != 0) goto L_0x15ef
            int r7 = r4.getId()
            if (r7 <= 0) goto L_0x15ef
            int r7 = r4.getId()
            int r9 = (int) r5
            if (r7 > r9) goto L_0x15ef
            boolean r7 = r4.isUnread()
            if (r7 != 0) goto L_0x15de
            goto L_0x15f2
        L_0x15de:
            r4.setIsRead()
            org.telegram.ui.ChatActivity$ChatActivityAdapter r1 = r8.chatAdapter
            if (r1 == 0) goto L_0x15e8
            r1.invalidateRowWithMessageObject(r4)
        L_0x15e8:
            int r1 = r8.newUnreadMessageCount
            r4 = 1
            int r1 = r1 - r4
            r8.newUnreadMessageCount = r1
            r1 = 1
        L_0x15ef:
            int r3 = r3 + 1
            goto L_0x15ba
        L_0x15f2:
            r3 = 0
            r8.removeUnreadPlane(r3)
            r34 = r1
            goto L_0x15fc
        L_0x15f9:
            r3 = 0
            r34 = 0
        L_0x15fc:
            if (r34 == 0) goto L_0x1614
            int r0 = r8.newUnreadMessageCount
            if (r0 >= 0) goto L_0x1604
            r8.newUnreadMessageCount = r3
        L_0x1604:
            org.telegram.ui.Components.CounterView r0 = r8.pagedownButtonCounter
            if (r0 == 0) goto L_0x1614
            int r1 = r8.prevSetUnreadCount
            int r3 = r8.newUnreadMessageCount
            if (r1 == r3) goto L_0x1614
            r8.prevSetUnreadCount = r3
            r1 = 1
            r0.setCount(r3, r1)
        L_0x1614:
            if (r2 == 0) goto L_0x30bd
            int r0 = r2.size()
            r1 = 0
        L_0x161b:
            if (r1 >= r0) goto L_0x30bd
            int r3 = r2.keyAt(r1)
            long r4 = r2.get(r3)
            int r5 = (int) r4
            long r3 = (long) r3
            long r6 = r8.dialog_id
            int r9 = (r3 > r6 ? 1 : (r3 == r6 ? 0 : -1))
            if (r9 == 0) goto L_0x1630
            int r1 = r1 + 1
            goto L_0x161b
        L_0x1630:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r0 = r8.messages
            int r0 = r0.size()
            r15 = 0
        L_0x1637:
            if (r15 >= r0) goto L_0x30bd
            java.util.ArrayList<org.telegram.messenger.MessageObject> r1 = r8.messages
            java.lang.Object r1 = r1.get(r15)
            org.telegram.messenger.MessageObject r1 = (org.telegram.messenger.MessageObject) r1
            boolean r2 = r1.isOut()
            if (r2 == 0) goto L_0x165d
            int r2 = r1.getId()
            if (r2 <= 0) goto L_0x165d
            int r2 = r1.getId()
            if (r2 > r5) goto L_0x165d
            r1.setIsRead()
            org.telegram.ui.ChatActivity$ChatActivityAdapter r2 = r8.chatAdapter
            if (r2 == 0) goto L_0x165d
            r2.invalidateRowWithMessageObject(r1)
        L_0x165d:
            int r15 = r15 + 1
            goto L_0x1637
        L_0x1660:
            int r1 = org.telegram.messenger.NotificationCenter.historyCleared
            if (r0 != r1) goto L_0x17d6
            r1 = 0
            r0 = r9[r1]
            java.lang.Long r0 = (java.lang.Long) r0
            long r0 = r0.longValue()
            long r2 = r8.dialog_id
            int r4 = (r0 > r2 ? 1 : (r0 == r2 ? 0 : -1))
            if (r4 == 0) goto L_0x1674
            return
        L_0x1674:
            r1 = 1
            r0 = r9[r1]
            java.lang.Integer r0 = (java.lang.Integer) r0
            int r0 = r0.intValue()
            java.util.ArrayList<java.lang.Integer> r1 = r8.pinnedMessageIds
            boolean r1 = r1.isEmpty()
            if (r1 != 0) goto L_0x169a
            java.util.ArrayList<java.lang.Integer> r1 = r8.pinnedMessageIds
            r1.clear()
            java.util.HashMap<java.lang.Integer, org.telegram.messenger.MessageObject> r1 = r8.pinnedMessageObjects
            r1.clear()
            r1 = 0
            r8.currentPinnedMessageId = r1
            r8.loadedPinnedMessagesCount = r1
            r8.totalPinnedMessagesCount = r1
            r1 = 1
            r8.updatePinnedMessageView(r1)
        L_0x169a:
            r1 = 0
            r2 = 0
        L_0x169c:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r3 = r8.messages
            int r3 = r3.size()
            if (r1 >= r3) goto L_0x16f5
            java.util.ArrayList<org.telegram.messenger.MessageObject> r3 = r8.messages
            java.lang.Object r3 = r3.get(r1)
            org.telegram.messenger.MessageObject r3 = (org.telegram.messenger.MessageObject) r3
            int r4 = r3.getId()
            if (r4 <= 0) goto L_0x16f2
            if (r4 <= r0) goto L_0x16b5
            goto L_0x16f2
        L_0x16b5:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r2 = r8.messages
            r2.remove(r1)
            int r1 = r1 + -1
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r2 = r8.messagesDict
            r5 = 0
            r2 = r2[r5]
            r2.remove(r4)
            java.util.HashMap<java.lang.String, java.util.ArrayList<org.telegram.messenger.MessageObject>> r2 = r8.messagesByDays
            java.lang.String r4 = r3.dateKey
            java.lang.Object r2 = r2.get(r4)
            java.util.ArrayList r2 = (java.util.ArrayList) r2
            if (r2 == 0) goto L_0x16f1
            r2.remove(r3)
            boolean r2 = r2.isEmpty()
            if (r2 == 0) goto L_0x16f1
            java.util.HashMap<java.lang.String, java.util.ArrayList<org.telegram.messenger.MessageObject>> r2 = r8.messagesByDays
            java.lang.String r3 = r3.dateKey
            r2.remove(r3)
            if (r1 < 0) goto L_0x16f1
            java.util.ArrayList<org.telegram.messenger.MessageObject> r2 = r8.messages
            int r2 = r2.size()
            if (r1 >= r2) goto L_0x16f1
            java.util.ArrayList<org.telegram.messenger.MessageObject> r2 = r8.messages
            r2.remove(r1)
            int r1 = r1 + -1
        L_0x16f1:
            r2 = 1
        L_0x16f2:
            r3 = 1
            int r1 = r1 + r3
            goto L_0x169c
        L_0x16f5:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r0 = r8.messages
            boolean r0 = r0.isEmpty()
            if (r0 == 0) goto L_0x17be
            boolean[] r0 = r8.endReached
            r1 = 0
            boolean r0 = r0[r1]
            if (r0 != 0) goto L_0x179a
            boolean r0 = r8.loading
            if (r0 != 0) goto L_0x179a
            r8.showProgressView(r1)
            org.telegram.ui.Components.RecyclerListView r0 = r8.chatListView
            if (r0 == 0) goto L_0x1713
            r3 = 0
            r0.setEmptyView(r3)
        L_0x1713:
            org.telegram.tgnet.TLRPC$EncryptedChat r0 = r8.currentEncryptedChat
            if (r0 != 0) goto L_0x172a
            int[] r0 = r8.maxMessageId
            r3 = 2147483647(0x7fffffff, float:NaN)
            r4 = 1
            r0[r4] = r3
            r0[r1] = r3
            int[] r0 = r8.minMessageId
            r5 = -2147483648(0xfffffffvar_, float:-0.0)
            r0[r4] = r5
            r0[r1] = r5
            goto L_0x173c
        L_0x172a:
            r3 = 2147483647(0x7fffffff, float:NaN)
            r4 = 1
            r5 = -2147483648(0xfffffffvar_, float:-0.0)
            int[] r0 = r8.maxMessageId
            r0[r4] = r5
            r0[r1] = r5
            int[] r0 = r8.minMessageId
            r0[r4] = r3
            r0[r1] = r3
        L_0x173c:
            int[] r0 = r8.maxDate
            r0[r4] = r5
            r0[r1] = r5
            int[] r0 = r8.minDate
            r0[r4] = r1
            r0[r1] = r1
            java.util.ArrayList<java.lang.Integer> r0 = r8.waitingForLoad
            int r1 = r8.lastLoadIndex
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)
            r0.add(r1)
            org.telegram.messenger.MessagesController r13 = r53.getMessagesController()
            long r14 = r8.dialog_id
            long r0 = r8.mergeDialogId
            r18 = 0
            r19 = 30
            r20 = 0
            r21 = 0
            boolean[] r3 = r8.cacheEndReached
            r4 = 0
            boolean r3 = r3[r4]
            r5 = 1
            r22 = r3 ^ 1
            int[] r3 = r8.minDate
            r23 = r3[r4]
            int r3 = r8.classGuid
            r24 = r3
            r25 = 0
            r26 = 0
            org.telegram.tgnet.TLRPC$Chat r3 = r8.currentChat
            boolean r27 = org.telegram.messenger.ChatObject.isChannel(r3)
            int r3 = r8.chatMode
            r28 = r3
            int r3 = r8.threadMessageId
            r29 = r3
            int r3 = r8.replyMaxReadId
            r30 = r3
            int r3 = r8.lastLoadIndex
            r31 = r3
            int r3 = r3 + 1
            r8.lastLoadIndex = r3
            r16 = r0
            r13.loadMessages(r14, r16, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31)
            r1 = 1
            r8.loading = r1
            goto L_0x17be
        L_0x179a:
            org.telegram.messenger.MessageObject r0 = r8.botButtons
            if (r0 == 0) goto L_0x17a9
            r1 = 0
            r8.botButtons = r1
            org.telegram.ui.Components.ChatActivityEnterView r0 = r8.chatActivityEnterView
            if (r0 == 0) goto L_0x17a9
            r3 = 0
            r0.setButtons(r1, r3)
        L_0x17a9:
            org.telegram.tgnet.TLRPC$EncryptedChat r0 = r8.currentEncryptedChat
            if (r0 != 0) goto L_0x17be
            org.telegram.tgnet.TLRPC$User r0 = r8.currentUser
            if (r0 == 0) goto L_0x17be
            boolean r0 = r0.bot
            if (r0 == 0) goto L_0x17be
            java.lang.String r0 = r8.botUser
            if (r0 != 0) goto L_0x17be
            r8.botUser = r11
            r53.updateBottomOverlay()
        L_0x17be:
            r1 = 0
            r8.canShowPagedownButton = r1
            r3 = 1
            r8.updatePagedownButtonVisibility(r3)
            r8.showMentionDownButton(r1, r3)
            r8.removeUnreadPlane(r3)
            if (r2 == 0) goto L_0x30bd
            org.telegram.ui.ChatActivity$ChatActivityAdapter r0 = r8.chatAdapter
            if (r0 == 0) goto L_0x30bd
            r0.notifyDataSetChanged(r1)
            goto L_0x30bd
        L_0x17d6:
            int r1 = org.telegram.messenger.NotificationCenter.messagesDeleted
            if (r0 != r1) goto L_0x1800
            r1 = 2
            r0 = r9[r1]
            java.lang.Boolean r0 = (java.lang.Boolean) r0
            boolean r0 = r0.booleanValue()
            int r1 = r8.chatMode
            r12 = 1
            if (r1 != r12) goto L_0x17ea
            r1 = 1
            goto L_0x17eb
        L_0x17ea:
            r1 = 0
        L_0x17eb:
            if (r0 == r1) goto L_0x17ee
            return
        L_0x17ee:
            r1 = 0
            r0 = r9[r1]
            java.util.ArrayList r0 = (java.util.ArrayList) r0
            r1 = r9[r12]
            java.lang.Integer r1 = (java.lang.Integer) r1
            int r1 = r1.intValue()
            r8.processDeletedMessages(r0, r1)
            goto L_0x30bd
        L_0x1800:
            r12 = 1
            int r1 = org.telegram.messenger.NotificationCenter.messageReceivedByServer
            if (r0 != r1) goto L_0x1a22
            r1 = 6
            r0 = r9[r1]
            java.lang.Boolean r0 = (java.lang.Boolean) r0
            boolean r0 = r0.booleanValue()
            int r1 = r8.chatMode
            if (r1 != r12) goto L_0x1814
            r1 = 1
            goto L_0x1815
        L_0x1814:
            r1 = 0
        L_0x1815:
            if (r0 == r1) goto L_0x1818
            return
        L_0x1818:
            r1 = 0
            r0 = r9[r1]
            r2 = r0
            java.lang.Integer r2 = (java.lang.Integer) r2
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r0 = r8.messagesDict
            r0 = r0[r1]
            int r1 = r2.intValue()
            java.lang.Object r0 = r0.get(r1)
            r1 = r0
            org.telegram.messenger.MessageObject r1 = (org.telegram.messenger.MessageObject) r1
            boolean r0 = r53.isThreadChat()
            if (r0 == 0) goto L_0x1857
            android.util.SparseArray<org.telegram.messenger.MessageObject> r0 = r8.pendingSendMessagesDict
            int r0 = r0.size()
            if (r0 <= 0) goto L_0x1857
            android.util.SparseArray<org.telegram.messenger.MessageObject> r0 = r8.pendingSendMessagesDict
            int r3 = r2.intValue()
            java.lang.Object r0 = r0.get(r3)
            org.telegram.messenger.MessageObject r0 = (org.telegram.messenger.MessageObject) r0
            if (r0 == 0) goto L_0x1857
            r3 = 1
            r4 = r9[r3]
            java.lang.Integer r4 = (java.lang.Integer) r4
            android.util.SparseArray<org.telegram.messenger.MessageObject> r3 = r8.pendingSendMessagesDict
            int r4 = r4.intValue()
            r3.put(r4, r0)
        L_0x1857:
            if (r1 == 0) goto L_0x30bd
            r53.checkChecksHint()
            boolean r0 = r1.shouldRemoveVideoEditedInfo
            if (r0 == 0) goto L_0x1867
            r3 = 0
            r1.videoEditedInfo = r3
            r3 = 0
            r1.shouldRemoveVideoEditedInfo = r3
            goto L_0x1868
        L_0x1867:
            r3 = 0
        L_0x1868:
            r4 = 1
            r0 = r9[r4]
            r4 = r0
            java.lang.Integer r4 = (java.lang.Integer) r4
            boolean r0 = r4.equals(r2)
            if (r0 != 0) goto L_0x18da
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r0 = r8.messagesDict
            r0 = r0[r3]
            int r5 = r4.intValue()
            int r0 = r0.indexOfKey(r5)
            if (r0 < 0) goto L_0x18da
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r0 = r8.messagesDict
            r0 = r0[r3]
            int r4 = r2.intValue()
            java.lang.Object r0 = r0.get(r4)
            org.telegram.messenger.MessageObject r0 = (org.telegram.messenger.MessageObject) r0
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r4 = r8.messagesDict
            r4 = r4[r3]
            int r2 = r2.intValue()
            r4.remove(r2)
            if (r0 == 0) goto L_0x18d9
            java.util.ArrayList<org.telegram.messenger.MessageObject> r2 = r8.messages
            int r2 = r2.indexOf(r0)
            java.util.ArrayList<org.telegram.messenger.MessageObject> r3 = r8.messages
            r3.remove(r2)
            java.util.HashMap<java.lang.String, java.util.ArrayList<org.telegram.messenger.MessageObject>> r3 = r8.messagesByDays
            java.lang.String r0 = r0.dateKey
            java.lang.Object r0 = r3.get(r0)
            java.util.ArrayList r0 = (java.util.ArrayList) r0
            r0.remove(r1)
            boolean r0 = r0.isEmpty()
            if (r0 == 0) goto L_0x18d1
            java.util.HashMap<java.lang.String, java.util.ArrayList<org.telegram.messenger.MessageObject>> r0 = r8.messagesByDays
            java.lang.String r1 = r1.dateKey
            r0.remove(r1)
            if (r2 < 0) goto L_0x18d1
            java.util.ArrayList<org.telegram.messenger.MessageObject> r0 = r8.messages
            int r0 = r0.size()
            if (r2 >= r0) goto L_0x18d1
            java.util.ArrayList<org.telegram.messenger.MessageObject> r0 = r8.messages
            r0.remove(r2)
        L_0x18d1:
            org.telegram.ui.ChatActivity$ChatActivityAdapter r0 = r8.chatAdapter
            if (r0 == 0) goto L_0x18d9
            r1 = 0
            r0.notifyDataSetChanged(r1)
        L_0x18d9:
            return
        L_0x18da:
            r0 = 2
            r0 = r9[r0]
            r3 = r0
            org.telegram.tgnet.TLRPC$Message r3 = (org.telegram.tgnet.TLRPC$Message) r3
            int r0 = r9.length
            r5 = 4
            if (r0 < r5) goto L_0x18e9
            r0 = r9[r5]
            java.lang.Long r0 = (java.lang.Long) r0
            goto L_0x18ef
        L_0x18e9:
            r5 = 0
            java.lang.Long r0 = java.lang.Long.valueOf(r5)
        L_0x18ef:
            r5 = r0
            if (r3 == 0) goto L_0x19a0
            boolean r0 = r1.isForwarded()     // Catch:{ Exception -> 0x1940 }
            if (r0 == 0) goto L_0x190e
            org.telegram.tgnet.TLRPC$Message r0 = r1.messageOwner     // Catch:{ Exception -> 0x1940 }
            org.telegram.tgnet.TLRPC$ReplyMarkup r6 = r0.reply_markup     // Catch:{ Exception -> 0x1940 }
            if (r6 != 0) goto L_0x1902
            org.telegram.tgnet.TLRPC$ReplyMarkup r6 = r3.reply_markup     // Catch:{ Exception -> 0x1940 }
            if (r6 != 0) goto L_0x190c
        L_0x1902:
            java.lang.String r0 = r0.message     // Catch:{ Exception -> 0x1940 }
            java.lang.String r6 = r3.message     // Catch:{ Exception -> 0x1940 }
            boolean r0 = r0.equals(r6)     // Catch:{ Exception -> 0x1940 }
            if (r0 != 0) goto L_0x190e
        L_0x190c:
            r6 = 1
            goto L_0x190f
        L_0x190e:
            r6 = 0
        L_0x190f:
            if (r6 != 0) goto L_0x193e
            org.telegram.tgnet.TLRPC$Message r0 = r1.messageOwner     // Catch:{ Exception -> 0x193c }
            java.util.HashMap<java.lang.String, java.lang.String> r0 = r0.params     // Catch:{ Exception -> 0x193c }
            if (r0 == 0) goto L_0x191f
            java.lang.String r7 = "query_id"
            boolean r0 = r0.containsKey(r7)     // Catch:{ Exception -> 0x193c }
            if (r0 != 0) goto L_0x193e
        L_0x191f:
            org.telegram.tgnet.TLRPC$MessageMedia r0 = r3.media     // Catch:{ Exception -> 0x193c }
            if (r0 == 0) goto L_0x1945
            org.telegram.tgnet.TLRPC$Message r7 = r1.messageOwner     // Catch:{ Exception -> 0x193c }
            org.telegram.tgnet.TLRPC$MessageMedia r7 = r7.media     // Catch:{ Exception -> 0x193c }
            if (r7 == 0) goto L_0x1945
            java.lang.Class r0 = r0.getClass()     // Catch:{ Exception -> 0x193c }
            org.telegram.tgnet.TLRPC$Message r7 = r1.messageOwner     // Catch:{ Exception -> 0x193c }
            org.telegram.tgnet.TLRPC$MessageMedia r7 = r7.media     // Catch:{ Exception -> 0x193c }
            java.lang.Class r7 = r7.getClass()     // Catch:{ Exception -> 0x193c }
            boolean r0 = r0.equals(r7)     // Catch:{ Exception -> 0x193c }
            if (r0 != 0) goto L_0x1945
            goto L_0x193e
        L_0x193c:
            r0 = move-exception
            goto L_0x1942
        L_0x193e:
            r0 = 1
            goto L_0x1946
        L_0x1940:
            r0 = move-exception
            r6 = 0
        L_0x1942:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
        L_0x1945:
            r0 = 0
        L_0x1946:
            long r10 = r1.getGroupId()
            r13 = 0
            int r7 = (r10 > r13 ? 1 : (r10 == r13 ? 0 : -1))
            if (r7 == 0) goto L_0x1977
            long r10 = r3.grouped_id
            int r7 = (r10 > r13 ? 1 : (r10 == r13 ? 0 : -1))
            if (r7 == 0) goto L_0x1977
            android.util.LongSparseArray<org.telegram.messenger.MessageObject$GroupedMessages> r7 = r8.groupedMessagesMap
            long r10 = r1.getGroupId()
            java.lang.Object r7 = r7.get(r10)
            org.telegram.messenger.MessageObject$GroupedMessages r7 = (org.telegram.messenger.MessageObject.GroupedMessages) r7
            if (r7 == 0) goto L_0x196b
            android.util.LongSparseArray<org.telegram.messenger.MessageObject$GroupedMessages> r10 = r8.groupedMessagesMap
            long r13 = r3.grouped_id
            r10.put(r13, r7)
        L_0x196b:
            org.telegram.tgnet.TLRPC$Message r7 = r1.messageOwner
            long r10 = r7.grouped_id
            r1.localSentGroupId = r10
            long r10 = r5.longValue()
            r7.grouped_id = r10
        L_0x1977:
            org.telegram.tgnet.TLRPC$Message r5 = r1.messageOwner
            org.telegram.tgnet.TLRPC$MessageFwdHeader r5 = r5.fwd_from
            r1.messageOwner = r3
            if (r5 == 0) goto L_0x198f
            org.telegram.tgnet.TLRPC$MessageFwdHeader r7 = r3.fwd_from
            if (r7 == 0) goto L_0x198f
            java.lang.String r7 = r7.from_name
            boolean r7 = android.text.TextUtils.isEmpty(r7)
            if (r7 != 0) goto L_0x198f
            org.telegram.tgnet.TLRPC$Message r7 = r1.messageOwner
            r7.fwd_from = r5
        L_0x198f:
            r5 = 1
            r1.generateThumbs(r5)
            r1.setType()
            org.telegram.tgnet.TLRPC$MessageMedia r3 = r3.media
            boolean r3 = r3 instanceof org.telegram.tgnet.TLRPC$TL_messageMediaGame
            if (r3 == 0) goto L_0x19a2
            r1.applyNewText()
            goto L_0x19a2
        L_0x19a0:
            r0 = 0
            r6 = 0
        L_0x19a2:
            if (r6 == 0) goto L_0x19a7
            r1.measureInlineBotButtons()
        L_0x19a7:
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r3 = r8.messagesDict
            r5 = 0
            r3 = r3[r5]
            int r2 = r2.intValue()
            r3.remove(r2)
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r2 = r8.messagesDict
            r2 = r2[r5]
            int r3 = r4.intValue()
            r2.put(r3, r1)
            org.telegram.tgnet.TLRPC$Message r2 = r1.messageOwner
            int r3 = r4.intValue()
            r2.id = r3
            org.telegram.tgnet.TLRPC$Message r2 = r1.messageOwner
            r2.send_state = r5
            r1.forceUpdate = r0
            int r2 = r9.length
            r3 = 6
            if (r2 < r3) goto L_0x19dc
            r2 = 5
            r2 = r9[r2]
            java.lang.Integer r2 = (java.lang.Integer) r2
            int r2 = r2.intValue()
            r1.applyMediaExistanceFlags(r2)
        L_0x19dc:
            r2 = 0
            r8.addToPolls(r1, r2)
            java.util.ArrayList r14 = new java.util.ArrayList
            r14.<init>()
            r14.add(r1)
            org.telegram.tgnet.TLRPC$EncryptedChat r2 = r8.currentEncryptedChat
            if (r2 != 0) goto L_0x1a02
            org.telegram.messenger.MediaDataController r13 = r53.getMediaDataController()
            long r2 = r8.dialog_id
            int r4 = r8.chatMode
            r5 = 1
            if (r4 != r5) goto L_0x19fa
            r17 = 1
            goto L_0x19fc
        L_0x19fa:
            r17 = 0
        L_0x19fc:
            r18 = 0
            r15 = r2
            r13.loadReplyMessagesForMessages(r14, r15, r17, r18)
        L_0x1a02:
            org.telegram.ui.ChatActivity$ChatActivityAdapter r2 = r8.chatAdapter
            if (r2 == 0) goto L_0x1a0a
            r3 = 0
            r2.updateRowWithMessageObject(r1, r3)
        L_0x1a0a:
            androidx.recyclerview.widget.GridLayoutManagerFixed r1 = r8.chatLayoutManager
            if (r1 == 0) goto L_0x1a19
            if (r0 == 0) goto L_0x1a19
            int r0 = r1.findFirstVisibleItemPosition()
            if (r0 != 0) goto L_0x1a19
            r53.moveScrollToLastMessage()
        L_0x1a19:
            org.telegram.messenger.NotificationsController r0 = r53.getNotificationsController()
            r0.playOutChatSound()
            goto L_0x30bd
        L_0x1a22:
            int r1 = org.telegram.messenger.NotificationCenter.messageReceivedByAck
            if (r0 != r1) goto L_0x1a48
            r1 = 0
            r0 = r9[r1]
            java.lang.Integer r0 = (java.lang.Integer) r0
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r2 = r8.messagesDict
            r2 = r2[r1]
            int r0 = r0.intValue()
            java.lang.Object r0 = r2.get(r0)
            org.telegram.messenger.MessageObject r0 = (org.telegram.messenger.MessageObject) r0
            if (r0 == 0) goto L_0x30bd
            org.telegram.tgnet.TLRPC$Message r2 = r0.messageOwner
            r2.send_state = r1
            org.telegram.ui.ChatActivity$ChatActivityAdapter r2 = r8.chatAdapter
            if (r2 == 0) goto L_0x30bd
            r2.updateRowWithMessageObject(r0, r1)
            goto L_0x30bd
        L_0x1a48:
            r1 = 0
            int r2 = org.telegram.messenger.NotificationCenter.messageSendError
            if (r0 != r2) goto L_0x1a6b
            r0 = r9[r1]
            java.lang.Integer r0 = (java.lang.Integer) r0
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r2 = r8.messagesDict
            r1 = r2[r1]
            int r0 = r0.intValue()
            java.lang.Object r0 = r1.get(r0)
            org.telegram.messenger.MessageObject r0 = (org.telegram.messenger.MessageObject) r0
            if (r0 == 0) goto L_0x30bd
            org.telegram.tgnet.TLRPC$Message r0 = r0.messageOwner
            r1 = 2
            r0.send_state = r1
            r53.updateVisibleRows()
            goto L_0x30bd
        L_0x1a6b:
            int r1 = org.telegram.messenger.NotificationCenter.groupCallUpdated
            r2 = 150(0x96, double:7.4E-322)
            if (r0 != r1) goto L_0x1ab4
            r1 = 0
            r0 = r9[r1]
            java.lang.Integer r0 = (java.lang.Integer) r0
            long r4 = r8.dialog_id
            int r0 = r0.intValue()
            int r0 = -r0
            long r6 = (long) r0
            int r0 = (r4 > r6 ? 1 : (r4 == r6 ? 0 : -1))
            if (r0 != 0) goto L_0x30bd
            org.telegram.messenger.MessagesController r0 = r53.getMessagesController()
            org.telegram.tgnet.TLRPC$Chat r4 = r8.currentChat
            int r4 = r4.id
            org.telegram.messenger.ChatObject$Call r0 = r0.getGroupCall(r4, r1)
            r8.groupCall = r0
            org.telegram.ui.Components.FragmentContextView r0 = r8.fragmentContextView
            if (r0 == 0) goto L_0x1aae
            long r4 = r8.openAnimationStartTime
            r6 = 0
            int r1 = (r4 > r6 ? 1 : (r4 == r6 ? 0 : -1))
            if (r1 == 0) goto L_0x1aaa
            long r4 = android.os.SystemClock.elapsedRealtime()
            long r6 = r8.openAnimationStartTime
            long r6 = r6 + r2
            int r1 = (r4 > r6 ? 1 : (r4 == r6 ? 0 : -1))
            if (r1 >= 0) goto L_0x1aa8
            goto L_0x1aaa
        L_0x1aa8:
            r3 = 0
            goto L_0x1aab
        L_0x1aaa:
            r3 = 1
        L_0x1aab:
            r0.checkCall(r3)
        L_0x1aae:
            r1 = 0
            r8.checkGroupCallJoin(r1)
            goto L_0x30bd
        L_0x1ab4:
            r1 = 0
            int r4 = org.telegram.messenger.NotificationCenter.didLoadChatInviter
            if (r0 != r4) goto L_0x1af9
            r0 = r9[r1]
            java.lang.Integer r0 = (java.lang.Integer) r0
            int r0 = r0.intValue()
            long r4 = r8.dialog_id
            int r0 = -r0
            long r0 = (long) r0
            int r6 = (r4 > r0 ? 1 : (r4 == r0 ? 0 : -1))
            if (r6 != 0) goto L_0x30bd
            int r0 = r8.chatInviterId
            if (r0 != 0) goto L_0x30bd
            r1 = 1
            r0 = r9[r1]
            java.lang.Integer r0 = (java.lang.Integer) r0
            int r0 = r0.intValue()
            r8.chatInviterId = r0
            org.telegram.tgnet.TLRPC$ChatFull r1 = r8.chatInfo
            if (r1 == 0) goto L_0x1ade
            r1.inviterId = r0
        L_0x1ade:
            long r0 = r8.openAnimationStartTime
            r4 = 0
            int r6 = (r0 > r4 ? 1 : (r0 == r4 ? 0 : -1))
            if (r6 == 0) goto L_0x1af3
            long r0 = android.os.SystemClock.elapsedRealtime()
            long r4 = r8.openAnimationStartTime
            long r4 = r4 + r2
            int r2 = (r0 > r4 ? 1 : (r0 == r4 ? 0 : -1))
            if (r2 < 0) goto L_0x1af3
            r3 = 1
            goto L_0x1af4
        L_0x1af3:
            r3 = 0
        L_0x1af4:
            r8.updateInfoTopView(r3)
            goto L_0x30bd
        L_0x1af9:
            int r1 = org.telegram.messenger.NotificationCenter.chatInfoDidLoad
            if (r0 != r1) goto L_0x1dcd
            r1 = 0
            r0 = r9[r1]
            org.telegram.tgnet.TLRPC$ChatFull r0 = (org.telegram.tgnet.TLRPC$ChatFull) r0
            org.telegram.tgnet.TLRPC$Chat r1 = r8.currentChat
            if (r1 == 0) goto L_0x30bd
            int r4 = r0.id
            int r5 = r1.id
            if (r4 != r5) goto L_0x30bd
            boolean r4 = r0 instanceof org.telegram.tgnet.TLRPC$TL_channelFull
            if (r4 == 0) goto L_0x1b68
            boolean r1 = r1.megagroup
            if (r1 == 0) goto L_0x1b5c
            org.telegram.tgnet.TLRPC$ChatParticipants r1 = r0.participants
            if (r1 == 0) goto L_0x1b37
            r1 = 0
            r4 = 0
        L_0x1b1a:
            org.telegram.tgnet.TLRPC$ChatParticipants r5 = r0.participants
            java.util.ArrayList<org.telegram.tgnet.TLRPC$ChatParticipant> r5 = r5.participants
            int r5 = r5.size()
            if (r1 >= r5) goto L_0x1b38
            org.telegram.tgnet.TLRPC$ChatParticipants r5 = r0.participants
            java.util.ArrayList<org.telegram.tgnet.TLRPC$ChatParticipant> r5 = r5.participants
            java.lang.Object r5 = r5.get(r1)
            org.telegram.tgnet.TLRPC$ChatParticipant r5 = (org.telegram.tgnet.TLRPC$ChatParticipant) r5
            int r5 = r5.date
            int r4 = java.lang.Math.max(r5, r4)
            int r1 = r1 + 1
            goto L_0x1b1a
        L_0x1b37:
            r4 = 0
        L_0x1b38:
            if (r4 == 0) goto L_0x1b4d
            long r5 = java.lang.System.currentTimeMillis()
            r10 = 1000(0x3e8, double:4.94E-321)
            long r5 = r5 / r10
            long r10 = (long) r4
            long r5 = r5 - r10
            long r4 = java.lang.Math.abs(r5)
            r6 = 3600(0xe10, double:1.7786E-320)
            int r1 = (r4 > r6 ? 1 : (r4 == r6 ? 0 : -1))
            if (r1 <= 0) goto L_0x1b5c
        L_0x1b4d:
            org.telegram.messenger.MessagesController r1 = r53.getMessagesController()
            org.telegram.tgnet.TLRPC$Chat r4 = r8.currentChat
            int r4 = r4.id
            java.lang.Integer r4 = java.lang.Integer.valueOf(r4)
            r1.loadChannelParticipants(r4)
        L_0x1b5c:
            org.telegram.tgnet.TLRPC$ChatParticipants r1 = r0.participants
            if (r1 != 0) goto L_0x1b68
            org.telegram.tgnet.TLRPC$ChatFull r1 = r8.chatInfo
            if (r1 == 0) goto L_0x1b68
            org.telegram.tgnet.TLRPC$ChatParticipants r1 = r1.participants
            r0.participants = r1
        L_0x1b68:
            r53.showGigagroupConvertAlert()
            org.telegram.tgnet.TLRPC$ChatFull r1 = r8.chatInfo
            if (r1 == 0) goto L_0x1b72
            int r1 = r1.linked_chat_id
            goto L_0x1b73
        L_0x1b72:
            r1 = 0
        L_0x1b73:
            r8.chatInfo = r0
            org.telegram.messenger.MessagesController r0 = r53.getMessagesController()
            org.telegram.tgnet.TLRPC$Chat r4 = r8.currentChat
            int r4 = r4.id
            r5 = 1
            org.telegram.messenger.ChatObject$Call r0 = r0.getGroupCall(r4, r5)
            r8.groupCall = r0
            org.telegram.tgnet.TLRPC$Chat r0 = r8.currentChat
            boolean r0 = org.telegram.messenger.ChatObject.isChannel(r0)
            if (r0 == 0) goto L_0x1bb0
            org.telegram.tgnet.TLRPC$Chat r0 = r8.currentChat
            boolean r0 = r0.megagroup
            if (r0 == 0) goto L_0x1bb0
            org.telegram.ui.Components.FragmentContextView r0 = r8.fragmentContextView
            if (r0 == 0) goto L_0x1bb0
            long r4 = r8.openAnimationStartTime
            r6 = 0
            int r10 = (r4 > r6 ? 1 : (r4 == r6 ? 0 : -1))
            if (r10 == 0) goto L_0x1bac
            long r4 = android.os.SystemClock.elapsedRealtime()
            long r6 = r8.openAnimationStartTime
            long r6 = r6 + r2
            int r10 = (r4 > r6 ? 1 : (r4 == r6 ? 0 : -1))
            if (r10 >= 0) goto L_0x1baa
            goto L_0x1bac
        L_0x1baa:
            r4 = 0
            goto L_0x1bad
        L_0x1bac:
            r4 = 1
        L_0x1bad:
            r0.checkCall(r4)
        L_0x1bb0:
            org.telegram.tgnet.TLRPC$ChatFull r0 = r8.chatInfo
            int r0 = r0.linked_chat_id
            if (r1 == r0) goto L_0x1bf4
            if (r1 == 0) goto L_0x1bce
            org.telegram.messenger.MessagesController r0 = r53.getMessagesController()
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)
            org.telegram.tgnet.TLRPC$Chat r0 = r0.getChat(r1)
            org.telegram.messenger.MessagesController r1 = r53.getMessagesController()
            int r4 = r8.classGuid
            r5 = 1
            r1.startShortPoll(r0, r4, r5)
        L_0x1bce:
            org.telegram.tgnet.TLRPC$ChatFull r0 = r8.chatInfo
            int r0 = r0.linked_chat_id
            if (r0 == 0) goto L_0x1bf4
            org.telegram.messenger.MessagesController r0 = r53.getMessagesController()
            org.telegram.tgnet.TLRPC$ChatFull r1 = r8.chatInfo
            int r1 = r1.linked_chat_id
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)
            org.telegram.tgnet.TLRPC$Chat r0 = r0.getChat(r1)
            if (r0 == 0) goto L_0x1bf4
            boolean r1 = r0.megagroup
            if (r1 == 0) goto L_0x1bf4
            org.telegram.messenger.MessagesController r1 = r53.getMessagesController()
            int r4 = r8.classGuid
            r5 = 0
            r1.startShortPoll(r0, r4, r5)
        L_0x1bf4:
            long r0 = r8.openAnimationStartTime
            r4 = 0
            int r6 = (r0 > r4 ? 1 : (r0 == r4 ? 0 : -1))
            if (r6 == 0) goto L_0x1CLASSNAME
            long r0 = android.os.SystemClock.elapsedRealtime()
            long r4 = r8.openAnimationStartTime
            long r4 = r4 + r2
            int r2 = (r0 > r4 ? 1 : (r0 == r4 ? 0 : -1))
            if (r2 < 0) goto L_0x1CLASSNAME
            r0 = 1
            goto L_0x1c0a
        L_0x1CLASSNAME:
            r0 = 0
        L_0x1c0a:
            r8.checkActionBarMenu(r0)
            int r1 = r8.chatInviterId
            if (r1 != 0) goto L_0x1CLASSNAME
            r1 = 1
            r8.fillInviterId(r1)
            r8.updateInfoTopView(r0)
        L_0x1CLASSNAME:
            org.telegram.ui.Components.ChatActivityEnterView r0 = r8.chatActivityEnterView
            if (r0 == 0) goto L_0x1CLASSNAME
            org.telegram.tgnet.TLRPC$ChatFull r1 = r8.chatInfo
            r0.setChatInfo(r1)
        L_0x1CLASSNAME:
            org.telegram.ui.Adapters.MentionsAdapter r0 = r8.mentionsAdapter
            if (r0 == 0) goto L_0x1c2a
            org.telegram.tgnet.TLRPC$ChatFull r1 = r8.chatInfo
            r0.setChatInfo(r1)
        L_0x1c2a:
            boolean r0 = r53.isThreadChat()
            if (r0 != 0) goto L_0x1c6c
            org.telegram.ui.Components.ChatAvatarContainer r0 = r8.avatarContainer
            if (r0 == 0) goto L_0x1c3c
            r0.updateOnlineCount()
            org.telegram.ui.Components.ChatAvatarContainer r0 = r8.avatarContainer
            r0.updateSubtitle()
        L_0x1c3c:
            boolean r0 = r8.loadingPinnedMessagesList
            if (r0 != 0) goto L_0x1c6c
            java.util.ArrayList<java.lang.Integer> r0 = r8.pinnedMessageIds
            boolean r0 = r0.isEmpty()
            if (r0 != 0) goto L_0x1c6c
            org.telegram.tgnet.TLRPC$ChatFull r0 = r8.chatInfo
            int r0 = r0.pinned_msg_id
            java.util.ArrayList<java.lang.Integer> r1 = r8.pinnedMessageIds
            r2 = 0
            java.lang.Object r1 = r1.get(r2)
            java.lang.Integer r1 = (java.lang.Integer) r1
            int r1 = r1.intValue()
            if (r0 <= r1) goto L_0x1c6d
            org.telegram.messenger.MediaDataController r0 = r53.getMediaDataController()
            long r3 = r8.dialog_id
            org.telegram.tgnet.TLRPC$ChatFull r1 = r8.chatInfo
            int r1 = r1.pinned_msg_id
            r0.loadPinnedMessages(r3, r2, r1)
            r1 = 1
            r8.loadingPinnedMessagesList = r1
            goto L_0x1c6d
        L_0x1c6c:
            r2 = 0
        L_0x1c6d:
            org.telegram.tgnet.TLRPC$ChatFull r0 = r8.chatInfo
            boolean r1 = r0 instanceof org.telegram.tgnet.TLRPC$TL_chatFull
            if (r1 == 0) goto L_0x1cd2
            r8.hasBotsCommands = r2
            android.util.SparseArray<org.telegram.tgnet.TLRPC$BotInfo> r0 = r8.botInfo
            r0.clear()
            r8.botsCount = r2
            org.telegram.ui.Components.URLSpanBotCommand.enabled = r2
            r0 = 0
        L_0x1c7f:
            org.telegram.tgnet.TLRPC$ChatFull r1 = r8.chatInfo
            org.telegram.tgnet.TLRPC$ChatParticipants r1 = r1.participants
            java.util.ArrayList<org.telegram.tgnet.TLRPC$ChatParticipant> r1 = r1.participants
            int r1 = r1.size()
            if (r0 >= r1) goto L_0x1cc9
            org.telegram.tgnet.TLRPC$ChatFull r1 = r8.chatInfo
            org.telegram.tgnet.TLRPC$ChatParticipants r1 = r1.participants
            java.util.ArrayList<org.telegram.tgnet.TLRPC$ChatParticipant> r1 = r1.participants
            java.lang.Object r1 = r1.get(r0)
            org.telegram.tgnet.TLRPC$ChatParticipant r1 = (org.telegram.tgnet.TLRPC$ChatParticipant) r1
            org.telegram.messenger.MessagesController r2 = r53.getMessagesController()
            int r1 = r1.user_id
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)
            org.telegram.tgnet.TLRPC$User r1 = r2.getUser(r1)
            if (r1 == 0) goto L_0x1cc6
            boolean r2 = r1.bot
            if (r2 == 0) goto L_0x1cc6
            r2 = 1
            org.telegram.ui.Components.URLSpanBotCommand.enabled = r2
            int r3 = r8.botsCount
            int r3 = r3 + r2
            r8.botsCount = r3
            boolean r3 = r53.isThreadChat()
            if (r3 != 0) goto L_0x1cbb
            r8.hasBotsCommands = r2
        L_0x1cbb:
            org.telegram.messenger.MediaDataController r3 = r53.getMediaDataController()
            int r1 = r1.id
            int r4 = r8.classGuid
            r3.loadBotInfo(r1, r2, r4)
        L_0x1cc6:
            int r0 = r0 + 1
            goto L_0x1c7f
        L_0x1cc9:
            org.telegram.ui.Components.RecyclerListView r0 = r8.chatListView
            if (r0 == 0) goto L_0x1d63
            r0.invalidateViews()
            goto L_0x1d63
        L_0x1cd2:
            boolean r0 = r0 instanceof org.telegram.tgnet.TLRPC$TL_channelFull
            if (r0 == 0) goto L_0x1d63
            r1 = 0
            r8.hasBotsCommands = r1
            android.util.SparseArray<org.telegram.tgnet.TLRPC$BotInfo> r0 = r8.botInfo
            r0.clear()
            r8.botsCount = r1
            org.telegram.tgnet.TLRPC$ChatFull r0 = r8.chatInfo
            java.util.ArrayList<org.telegram.tgnet.TLRPC$BotInfo> r0 = r0.bot_info
            boolean r0 = r0.isEmpty()
            if (r0 != 0) goto L_0x1cf4
            org.telegram.tgnet.TLRPC$Chat r0 = r8.currentChat
            if (r0 == 0) goto L_0x1cf4
            boolean r0 = r0.megagroup
            if (r0 == 0) goto L_0x1cf4
            r0 = 1
            goto L_0x1cf5
        L_0x1cf4:
            r0 = 0
        L_0x1cf5:
            org.telegram.ui.Components.URLSpanBotCommand.enabled = r0
            org.telegram.tgnet.TLRPC$ChatFull r0 = r8.chatInfo
            java.util.ArrayList<org.telegram.tgnet.TLRPC$BotInfo> r0 = r0.bot_info
            int r0 = r0.size()
            r8.botsCount = r0
            r0 = 0
        L_0x1d02:
            org.telegram.tgnet.TLRPC$ChatFull r1 = r8.chatInfo
            java.util.ArrayList<org.telegram.tgnet.TLRPC$BotInfo> r1 = r1.bot_info
            int r1 = r1.size()
            if (r0 >= r1) goto L_0x1d41
            org.telegram.tgnet.TLRPC$ChatFull r1 = r8.chatInfo
            java.util.ArrayList<org.telegram.tgnet.TLRPC$BotInfo> r1 = r1.bot_info
            java.lang.Object r1 = r1.get(r0)
            org.telegram.tgnet.TLRPC$BotInfo r1 = (org.telegram.tgnet.TLRPC$BotInfo) r1
            boolean r2 = r53.isThreadChat()
            if (r2 != 0) goto L_0x1d37
            java.util.ArrayList<org.telegram.tgnet.TLRPC$TL_botCommand> r2 = r1.commands
            boolean r2 = r2.isEmpty()
            if (r2 != 0) goto L_0x1d37
            org.telegram.tgnet.TLRPC$Chat r2 = r8.currentChat
            boolean r2 = org.telegram.messenger.ChatObject.isChannel(r2)
            if (r2 == 0) goto L_0x1d34
            org.telegram.tgnet.TLRPC$Chat r2 = r8.currentChat
            if (r2 == 0) goto L_0x1d37
            boolean r2 = r2.megagroup
            if (r2 == 0) goto L_0x1d37
        L_0x1d34:
            r2 = 1
            r8.hasBotsCommands = r2
        L_0x1d37:
            android.util.SparseArray<org.telegram.tgnet.TLRPC$BotInfo> r2 = r8.botInfo
            int r3 = r1.user_id
            r2.put(r3, r1)
            int r0 = r0 + 1
            goto L_0x1d02
        L_0x1d41:
            org.telegram.ui.Components.RecyclerListView r0 = r8.chatListView
            if (r0 == 0) goto L_0x1d48
            r0.invalidateViews()
        L_0x1d48:
            org.telegram.ui.Adapters.MentionsAdapter r0 = r8.mentionsAdapter
            if (r0 == 0) goto L_0x1d63
            org.telegram.tgnet.TLRPC$Chat r0 = r8.currentChat
            boolean r0 = org.telegram.messenger.ChatObject.isChannel(r0)
            if (r0 == 0) goto L_0x1d5c
            org.telegram.tgnet.TLRPC$Chat r0 = r8.currentChat
            if (r0 == 0) goto L_0x1d63
            boolean r0 = r0.megagroup
            if (r0 == 0) goto L_0x1d63
        L_0x1d5c:
            org.telegram.ui.Adapters.MentionsAdapter r0 = r8.mentionsAdapter
            android.util.SparseArray<org.telegram.tgnet.TLRPC$BotInfo> r1 = r8.botInfo
            r0.setBotInfo(r1)
        L_0x1d63:
            org.telegram.ui.Components.ChatActivityEnterView r0 = r8.chatActivityEnterView
            if (r0 == 0) goto L_0x1d6e
            int r1 = r8.botsCount
            boolean r2 = r8.hasBotsCommands
            r0.setBotsCount(r1, r2)
        L_0x1d6e:
            org.telegram.ui.Adapters.MentionsAdapter r0 = r8.mentionsAdapter
            if (r0 == 0) goto L_0x1d77
            int r1 = r8.botsCount
            r0.setBotsCount(r1)
        L_0x1d77:
            int r0 = r8.chatMode
            if (r0 != 0) goto L_0x1dbf
            org.telegram.tgnet.TLRPC$Chat r0 = r8.currentChat
            boolean r0 = org.telegram.messenger.ChatObject.isChannel(r0)
            if (r0 == 0) goto L_0x1dbf
            long r0 = r8.mergeDialogId
            r2 = 0
            int r4 = (r0 > r2 ? 1 : (r0 == r2 ? 0 : -1))
            if (r4 != 0) goto L_0x1dbf
            org.telegram.tgnet.TLRPC$ChatFull r0 = r8.chatInfo
            int r0 = r0.migrated_from_chat_id
            if (r0 == 0) goto L_0x1dbf
            boolean r0 = r53.isThreadChat()
            if (r0 != 0) goto L_0x1dbf
            org.telegram.tgnet.TLRPC$ChatFull r0 = r8.chatInfo
            int r1 = r0.migrated_from_chat_id
            int r1 = -r1
            long r1 = (long) r1
            r8.mergeDialogId = r1
            int[] r1 = r8.maxMessageId
            int r0 = r0.migrated_from_max_id
            r2 = 1
            r1[r2] = r0
            org.telegram.ui.ChatActivity$ChatActivityAdapter r0 = r8.chatAdapter
            r1 = 0
            if (r0 == 0) goto L_0x1dae
            r0.notifyDataSetChanged(r1)
        L_0x1dae:
            long r2 = r8.mergeDialogId
            r4 = 0
            int r0 = (r2 > r4 ? 1 : (r2 == r4 ? 0 : -1))
            if (r0 == 0) goto L_0x1dbf
            boolean[] r0 = r8.endReached
            boolean r0 = r0[r1]
            if (r0 == 0) goto L_0x1dbf
            r8.checkScrollForLoad(r1)
        L_0x1dbf:
            r0 = 3
            r0 = r9[r0]
            java.lang.Boolean r0 = (java.lang.Boolean) r0
            boolean r0 = r0.booleanValue()
            r8.checkGroupCallJoin(r0)
            goto L_0x30bd
        L_0x1dcd:
            int r1 = org.telegram.messenger.NotificationCenter.chatInfoCantLoad
            if (r0 != r1) goto L_0x1e89
            r1 = 0
            r0 = r9[r1]
            java.lang.Integer r0 = (java.lang.Integer) r0
            int r0 = r0.intValue()
            org.telegram.tgnet.TLRPC$Chat r1 = r8.currentChat
            if (r1 == 0) goto L_0x30bd
            int r1 = r1.id
            if (r1 != r0) goto L_0x30bd
            r1 = 1
            r0 = r9[r1]
            java.lang.Integer r0 = (java.lang.Integer) r0
            int r0 = r0.intValue()
            android.app.Activity r1 = r53.getParentActivity()
            if (r1 == 0) goto L_0x1e88
            android.app.Dialog r1 = r8.closeChatDialog
            if (r1 == 0) goto L_0x1df7
            goto L_0x1e88
        L_0x1df7:
            org.telegram.ui.ActionBar.AlertDialog$Builder r1 = new org.telegram.ui.ActionBar.AlertDialog$Builder
            android.app.Activity r2 = r53.getParentActivity()
            r1.<init>((android.content.Context) r2)
            r2 = 2131624282(0x7f0e015a, float:1.887574E38)
            java.lang.String r3 = "AppName"
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r3, r2)
            r1.setTitle(r2)
            if (r0 != 0) goto L_0x1e2e
            org.telegram.tgnet.TLRPC$Chat r0 = r8.currentChat
            boolean r0 = r0.has_link
            if (r0 == 0) goto L_0x1e21
            r0 = 2131624694(0x7f0e02f6, float:1.8876575E38)
            java.lang.String r2 = "ChannelCantOpenBannedByAdmin"
            java.lang.String r0 = org.telegram.messenger.LocaleController.getString(r2, r0)
            r1.setMessage(r0)
            goto L_0x1e5d
        L_0x1e21:
            r0 = 2131624696(0x7f0e02f8, float:1.887658E38)
            java.lang.String r2 = "ChannelCantOpenPrivate"
            java.lang.String r0 = org.telegram.messenger.LocaleController.getString(r2, r0)
            r1.setMessage(r0)
            goto L_0x1e5d
        L_0x1e2e:
            r2 = 1
            if (r0 != r2) goto L_0x1e3e
            r0 = 2131624695(0x7f0e02f7, float:1.8876577E38)
            java.lang.String r2 = "ChannelCantOpenNa"
            java.lang.String r0 = org.telegram.messenger.LocaleController.getString(r2, r0)
            r1.setMessage(r0)
            goto L_0x1e5d
        L_0x1e3e:
            r2 = 2
            if (r0 != r2) goto L_0x1e4e
            r0 = 2131624693(0x7f0e02f5, float:1.8876573E38)
            java.lang.String r2 = "ChannelCantOpenBanned"
            java.lang.String r0 = org.telegram.messenger.LocaleController.getString(r2, r0)
            r1.setMessage(r0)
            goto L_0x1e5d
        L_0x1e4e:
            r2 = 3
            if (r0 != r2) goto L_0x1e5d
            r0 = 2131625882(0x7f0e079a, float:1.8878984E38)
            java.lang.String r2 = "JoinByPeekChannelText"
            java.lang.String r0 = org.telegram.messenger.LocaleController.getString(r2, r0)
            r1.setMessage(r0)
        L_0x1e5d:
            r0 = 2131626507(0x7f0e0a0b, float:1.8880252E38)
            java.lang.String r2 = "OK"
            java.lang.String r0 = org.telegram.messenger.LocaleController.getString(r2, r0)
            r2 = 0
            r1.setPositiveButton(r0, r2)
            org.telegram.ui.ActionBar.AlertDialog r0 = r1.create()
            r8.closeChatDialog = r0
            android.app.Dialog r0 = r8.showDialog(r0)
            if (r0 != 0) goto L_0x1e79
            r1 = 1
            r8.showCloseChatDialogLater = r1
        L_0x1e79:
            r1 = 0
            r8.loading = r1
            r8.showProgressView(r1)
            org.telegram.ui.ChatActivity$ChatActivityAdapter r0 = r8.chatAdapter
            if (r0 == 0) goto L_0x30bd
            r0.notifyDataSetChanged(r1)
            goto L_0x30bd
        L_0x1e88:
            return
        L_0x1e89:
            int r1 = org.telegram.messenger.NotificationCenter.contactsDidLoad
            if (r0 != r1) goto L_0x1ea0
            r1 = 1
            r8.updateTopPanel(r1)
            boolean r0 = r53.isThreadChat()
            if (r0 != 0) goto L_0x30bd
            org.telegram.ui.Components.ChatAvatarContainer r0 = r8.avatarContainer
            if (r0 == 0) goto L_0x30bd
            r0.updateSubtitle()
            goto L_0x30bd
        L_0x1ea0:
            int r1 = org.telegram.messenger.NotificationCenter.encryptedChatUpdated
            if (r0 != r1) goto L_0x1var_
            r1 = 0
            r0 = r9[r1]
            org.telegram.tgnet.TLRPC$EncryptedChat r0 = (org.telegram.tgnet.TLRPC$EncryptedChat) r0
            org.telegram.tgnet.TLRPC$EncryptedChat r1 = r8.currentEncryptedChat
            if (r1 == 0) goto L_0x30bd
            int r2 = r0.id
            int r1 = r1.id
            if (r2 != r1) goto L_0x30bd
            r8.currentEncryptedChat = r0
            r1 = 1
            r8.updateTopPanel(r1)
            r53.updateSecretStatus()
            r53.initStickers()
            org.telegram.ui.Components.ChatActivityEnterView r0 = r8.chatActivityEnterView
            if (r0 == 0) goto L_0x1eef
            org.telegram.tgnet.TLRPC$EncryptedChat r1 = r8.currentEncryptedChat
            if (r1 == 0) goto L_0x1ed4
            int r1 = r1.layer
            int r1 = org.telegram.messenger.AndroidUtilities.getPeerLayerVersion(r1)
            r2 = 23
            if (r1 < r2) goto L_0x1ed2
            goto L_0x1ed4
        L_0x1ed2:
            r1 = 0
            goto L_0x1ed5
        L_0x1ed4:
            r1 = 1
        L_0x1ed5:
            org.telegram.tgnet.TLRPC$EncryptedChat r2 = r8.currentEncryptedChat
            if (r2 == 0) goto L_0x1ee6
            int r2 = r2.layer
            int r2 = org.telegram.messenger.AndroidUtilities.getPeerLayerVersion(r2)
            r3 = 46
            if (r2 < r3) goto L_0x1ee4
            goto L_0x1ee6
        L_0x1ee4:
            r2 = 0
            goto L_0x1ee7
        L_0x1ee6:
            r2 = 1
        L_0x1ee7:
            r0.setAllowStickersAndGifs(r1, r2)
            org.telegram.ui.Components.ChatActivityEnterView r0 = r8.chatActivityEnterView
            r0.checkRoundVideo()
        L_0x1eef:
            org.telegram.ui.Adapters.MentionsAdapter r0 = r8.mentionsAdapter
            if (r0 == 0) goto L_0x30bd
            org.telegram.ui.Components.ChatActivityEnterView r1 = r8.chatActivityEnterView
            boolean r1 = r1.isEditingMessage()
            if (r1 != 0) goto L_0x1f0b
            org.telegram.tgnet.TLRPC$EncryptedChat r1 = r8.currentEncryptedChat
            if (r1 == 0) goto L_0x1var_
            int r1 = r1.layer
            int r1 = org.telegram.messenger.AndroidUtilities.getPeerLayerVersion(r1)
            r2 = 46
            if (r1 < r2) goto L_0x1f0b
        L_0x1var_:
            r3 = 1
            goto L_0x1f0c
        L_0x1f0b:
            r3 = 0
        L_0x1f0c:
            r0.setNeedBotContext(r3)
            goto L_0x30bd
        L_0x1var_:
            int r1 = org.telegram.messenger.NotificationCenter.messagesReadEncrypted
            if (r0 != r1) goto L_0x1var_
            r1 = 0
            r0 = r9[r1]
            java.lang.Integer r0 = (java.lang.Integer) r0
            int r0 = r0.intValue()
            org.telegram.tgnet.TLRPC$EncryptedChat r1 = r8.currentEncryptedChat
            if (r1 == 0) goto L_0x30bd
            int r1 = r1.id
            if (r1 != r0) goto L_0x30bd
            r1 = 1
            r0 = r9[r1]
            java.lang.Integer r0 = (java.lang.Integer) r0
            int r0 = r0.intValue()
            java.util.ArrayList<org.telegram.messenger.MessageObject> r1 = r8.messages
            java.util.Iterator r1 = r1.iterator()
        L_0x1var_:
            boolean r2 = r1.hasNext()
            if (r2 == 0) goto L_0x30bd
            java.lang.Object r2 = r1.next()
            org.telegram.messenger.MessageObject r2 = (org.telegram.messenger.MessageObject) r2
            boolean r3 = r2.isOut()
            if (r3 != 0) goto L_0x1var_
            goto L_0x1var_
        L_0x1var_:
            boolean r3 = r2.isOut()
            if (r3 == 0) goto L_0x1var_
            boolean r3 = r2.isUnread()
            if (r3 != 0) goto L_0x1var_
            goto L_0x30bd
        L_0x1var_:
            org.telegram.tgnet.TLRPC$Message r3 = r2.messageOwner
            int r3 = r3.date
            r4 = 1
            int r3 = r3 - r4
            if (r3 > r0) goto L_0x1var_
            r2.setIsRead()
            org.telegram.ui.ChatActivity$ChatActivityAdapter r3 = r8.chatAdapter
            if (r3 == 0) goto L_0x1var_
            r3.invalidateRowWithMessageObject(r2)
            goto L_0x1var_
        L_0x1var_:
            int r1 = org.telegram.messenger.NotificationCenter.removeAllMessagesFromDialog
            if (r0 != r1) goto L_0x1fa8
            r1 = 0
            r0 = r9[r1]
            java.lang.Long r0 = (java.lang.Long) r0
            long r2 = r0.longValue()
            long r4 = r8.dialog_id
            int r0 = (r4 > r2 ? 1 : (r4 == r2 ? 0 : -1))
            if (r0 != 0) goto L_0x30bd
            int r0 = r8.threadMessageId
            if (r0 == 0) goto L_0x1f9a
            boolean[] r0 = r8.forwardEndReached
            boolean r2 = r0[r1]
            if (r2 == 0) goto L_0x1f8d
            r0[r1] = r1
            org.telegram.ui.ChatActivity$ChatActivityAdapter r0 = r8.chatAdapter
            r0.notifyItemInserted(r1)
        L_0x1f8d:
            int r0 = r8.currentAccount
            org.telegram.messenger.MessagesController r0 = org.telegram.messenger.MessagesController.getInstance(r0)
            org.telegram.messenger.MessageObject r1 = r8.threadMessageObject
            r0.addToViewsQueue(r1)
            goto L_0x30bd
        L_0x1f9a:
            r1 = 1
            r0 = r9[r1]
            java.lang.Boolean r0 = (java.lang.Boolean) r0
            boolean r0 = r0.booleanValue()
            r8.clearHistory(r0)
            goto L_0x30bd
        L_0x1fa8:
            int r1 = org.telegram.messenger.NotificationCenter.screenshotTook
            if (r0 != r1) goto L_0x1fb1
            r53.updateInformationForScreenshotDetector()
            goto L_0x30bd
        L_0x1fb1:
            int r1 = org.telegram.messenger.NotificationCenter.blockedUsersDidLoad
            if (r0 != r1) goto L_0x1fdd
            org.telegram.tgnet.TLRPC$User r0 = r8.currentUser
            if (r0 == 0) goto L_0x30bd
            boolean r0 = org.telegram.messenger.UserObject.isReplyUser((org.telegram.tgnet.TLRPC$User) r0)
            if (r0 != 0) goto L_0x30bd
            boolean r0 = r8.userBlocked
            org.telegram.messenger.MessagesController r1 = r53.getMessagesController()
            android.util.SparseIntArray r1 = r1.blockePeers
            org.telegram.tgnet.TLRPC$User r2 = r8.currentUser
            int r2 = r2.id
            int r1 = r1.indexOfKey(r2)
            if (r1 < 0) goto L_0x1fd3
            r3 = 1
            goto L_0x1fd4
        L_0x1fd3:
            r3 = 0
        L_0x1fd4:
            r8.userBlocked = r3
            if (r0 == r3) goto L_0x30bd
            r53.updateBottomOverlay()
            goto L_0x30bd
        L_0x1fdd:
            int r1 = org.telegram.messenger.NotificationCenter.fileNewChunkAvailable
            if (r0 != r1) goto L_0x2020
            r1 = 0
            r0 = r9[r1]
            org.telegram.messenger.MessageObject r0 = (org.telegram.messenger.MessageObject) r0
            r1 = 3
            r1 = r9[r1]
            java.lang.Long r1 = (java.lang.Long) r1
            long r1 = r1.longValue()
            r3 = 0
            int r5 = (r1 > r3 ? 1 : (r1 == r3 ? 0 : -1))
            if (r5 == 0) goto L_0x30bd
            long r3 = r8.dialog_id
            long r5 = r0.getDialogId()
            int r7 = (r3 > r5 ? 1 : (r3 == r5 ? 0 : -1))
            if (r7 != 0) goto L_0x30bd
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r3 = r8.messagesDict
            r4 = 0
            r3 = r3[r4]
            int r0 = r0.getId()
            java.lang.Object r0 = r3.get(r0)
            org.telegram.messenger.MessageObject r0 = (org.telegram.messenger.MessageObject) r0
            if (r0 == 0) goto L_0x30bd
            org.telegram.tgnet.TLRPC$Message r0 = r0.messageOwner
            org.telegram.tgnet.TLRPC$MessageMedia r0 = r0.media
            org.telegram.tgnet.TLRPC$Document r0 = r0.document
            if (r0 == 0) goto L_0x30bd
            int r2 = (int) r1
            r0.size = r2
            r53.updateVisibleRows()
            goto L_0x30bd
        L_0x2020:
            int r1 = org.telegram.messenger.NotificationCenter.didCreatedNewDeleteTask
            r2 = 32
            if (r0 != r1) goto L_0x2087
            r1 = 0
            r0 = r9[r1]
            android.util.SparseArray r0 = (android.util.SparseArray) r0
            r1 = 0
            r3 = 0
        L_0x202d:
            int r4 = r0.size()
            if (r1 >= r4) goto L_0x2080
            int r4 = r0.keyAt(r1)
            java.lang.Object r5 = r0.get(r4)
            java.util.ArrayList r5 = (java.util.ArrayList) r5
            r6 = 0
        L_0x203e:
            int r7 = r5.size()
            if (r6 >= r7) goto L_0x207d
            java.lang.Object r7 = r5.get(r6)
            java.lang.Long r7 = (java.lang.Long) r7
            long r9 = r7.longValue()
            if (r6 != 0) goto L_0x2067
            long r13 = r9 >> r2
            int r7 = (int) r13
            if (r7 >= 0) goto L_0x2056
            r7 = 0
        L_0x2056:
            org.telegram.tgnet.TLRPC$Chat r11 = r8.currentChat
            boolean r11 = org.telegram.messenger.ChatObject.isChannel(r11)
            if (r11 == 0) goto L_0x2063
            org.telegram.tgnet.TLRPC$Chat r11 = r8.currentChat
            int r11 = r11.id
            goto L_0x2064
        L_0x2063:
            r11 = 0
        L_0x2064:
            if (r7 == r11) goto L_0x2067
            return
        L_0x2067:
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r7 = r8.messagesDict
            r11 = 0
            r7 = r7[r11]
            int r10 = (int) r9
            java.lang.Object r7 = r7.get(r10)
            org.telegram.messenger.MessageObject r7 = (org.telegram.messenger.MessageObject) r7
            if (r7 == 0) goto L_0x207a
            org.telegram.tgnet.TLRPC$Message r3 = r7.messageOwner
            r3.destroyTime = r4
            r3 = 1
        L_0x207a:
            int r6 = r6 + 1
            goto L_0x203e
        L_0x207d:
            int r1 = r1 + 1
            goto L_0x202d
        L_0x2080:
            if (r3 == 0) goto L_0x30bd
            r53.updateVisibleRows()
            goto L_0x30bd
        L_0x2087:
            int r1 = org.telegram.messenger.NotificationCenter.messagePlayingDidStart
            if (r0 != r1) goto L_0x2175
            r1 = 0
            r0 = r9[r1]
            org.telegram.messenger.MessageObject r0 = (org.telegram.messenger.MessageObject) r0
            long r1 = r0.eventId
            r3 = 0
            int r5 = (r1 > r3 ? 1 : (r1 == r3 ? 0 : -1))
            if (r5 == 0) goto L_0x2099
            return
        L_0x2099:
            r1 = 1
            r8.sendSecretMessageRead(r0, r1)
            boolean r1 = r0.isRoundVideo()
            if (r1 != 0) goto L_0x20a9
            boolean r1 = r0.isVideo()
            if (r1 == 0) goto L_0x20c6
        L_0x20a9:
            android.view.View r1 = r8.fragmentView
            if (r1 == 0) goto L_0x20c6
            android.view.ViewParent r1 = r1.getParent()
            if (r1 == 0) goto L_0x20c6
            org.telegram.messenger.MediaController r1 = org.telegram.messenger.MediaController.getInstance()
            r2 = 1
            android.view.TextureView r3 = r8.createTextureView(r2)
            com.google.android.exoplayer2.ui.AspectRatioFrameLayout r4 = r8.aspectRatioFrameLayout
            android.widget.FrameLayout r5 = r8.videoPlayerContainer
            r1.setTextureView(r3, r4, r5, r2)
            r8.updateTextureViewPosition(r2)
        L_0x20c6:
            org.telegram.ui.Components.RecyclerListView r1 = r8.chatListView
            if (r1 == 0) goto L_0x30bd
            int r1 = r1.getChildCount()
            r2 = 0
        L_0x20cf:
            if (r2 >= r1) goto L_0x2146
            org.telegram.ui.Components.RecyclerListView r3 = r8.chatListView
            android.view.View r3 = r3.getChildAt(r2)
            boolean r4 = r3 instanceof org.telegram.ui.Cells.ChatMessageCell
            if (r4 == 0) goto L_0x2143
            org.telegram.ui.Cells.ChatMessageCell r3 = (org.telegram.ui.Cells.ChatMessageCell) r3
            org.telegram.messenger.MessageObject r4 = r3.getMessageObject()
            if (r4 == 0) goto L_0x2143
            boolean r5 = r4.isVideo()
            boolean r6 = r4.isRoundVideo()
            if (r6 != 0) goto L_0x2102
            if (r5 == 0) goto L_0x20f0
            goto L_0x2102
        L_0x20f0:
            boolean r5 = r4.isVoice()
            if (r5 != 0) goto L_0x20fc
            boolean r4 = r4.isMusic()
            if (r4 == 0) goto L_0x2143
        L_0x20fc:
            r4 = 0
            r6 = 1
            r3.updateButtonState(r4, r6, r4)
            goto L_0x2143
        L_0x2102:
            r6 = 1
            boolean r7 = r0.equals(r4)
            r7 = r7 ^ r6
            r3.checkVideoPlayback(r7)
            org.telegram.messenger.MediaController r6 = org.telegram.messenger.MediaController.getInstance()
            boolean r6 = r6.isPlayingMessage(r4)
            if (r6 != 0) goto L_0x213c
            if (r5 == 0) goto L_0x212e
            org.telegram.messenger.MediaController r5 = org.telegram.messenger.MediaController.getInstance()
            boolean r5 = r5.isGoingToShowMessageObject(r4)
            if (r5 != 0) goto L_0x212e
            org.telegram.messenger.ImageReceiver r5 = r3.getPhotoImage()
            org.telegram.ui.Components.AnimatedFileDrawable r5 = r5.getAnimation()
            if (r5 == 0) goto L_0x212e
            r5.start()
        L_0x212e:
            float r5 = r4.audioProgress
            r6 = 0
            int r5 = (r5 > r6 ? 1 : (r5 == r6 ? 0 : -1))
            if (r5 == 0) goto L_0x2143
            r4.resetPlayingProgress()
            r3.invalidate()
            goto L_0x2143
        L_0x213c:
            if (r5 == 0) goto L_0x2143
            r4 = 1
            r5 = 0
            r3.updateButtonState(r5, r4, r5)
        L_0x2143:
            int r2 = r2 + 1
            goto L_0x20cf
        L_0x2146:
            org.telegram.ui.Components.RecyclerListView r0 = r8.mentionListView
            int r0 = r0.getChildCount()
            r1 = 0
        L_0x214d:
            if (r1 >= r0) goto L_0x30bd
            org.telegram.ui.Components.RecyclerListView r2 = r8.mentionListView
            android.view.View r2 = r2.getChildAt(r1)
            boolean r3 = r2 instanceof org.telegram.ui.Cells.ContextLinkCell
            if (r3 == 0) goto L_0x2172
            org.telegram.ui.Cells.ContextLinkCell r2 = (org.telegram.ui.Cells.ContextLinkCell) r2
            org.telegram.messenger.MessageObject r3 = r2.getMessageObject()
            if (r3 == 0) goto L_0x2172
            boolean r4 = r3.isVoice()
            if (r4 != 0) goto L_0x216d
            boolean r3 = r3.isMusic()
            if (r3 == 0) goto L_0x2172
        L_0x216d:
            r3 = 1
            r4 = 0
            r2.updateButtonState(r4, r3)
        L_0x2172:
            int r1 = r1 + 1
            goto L_0x214d
        L_0x2175:
            int r1 = org.telegram.messenger.NotificationCenter.messagePlayingGoingToStop
            if (r0 != r1) goto L_0x220d
            r1 = 1
            r0 = r9[r1]
            java.lang.Boolean r0 = (java.lang.Boolean) r0
            boolean r0 = r0.booleanValue()
            if (r0 == 0) goto L_0x2194
            org.telegram.ui.Components.SizeNotifierFrameLayout r0 = r8.contentView
            android.widget.FrameLayout r1 = r8.videoPlayerContainer
            r0.removeView(r1)
            r1 = 0
            r8.videoPlayerContainer = r1
            r8.videoTextureView = r1
            r8.aspectRatioFrameLayout = r1
            goto L_0x30bd
        L_0x2194:
            org.telegram.ui.Components.RecyclerListView r0 = r8.chatListView
            if (r0 == 0) goto L_0x30bd
            android.widget.FrameLayout r0 = r8.videoPlayerContainer
            if (r0 == 0) goto L_0x30bd
            java.lang.Object r0 = r0.getTag()
            if (r0 == 0) goto L_0x30bd
            r1 = 0
            r0 = r9[r1]
            r1 = r0
            org.telegram.messenger.MessageObject r1 = (org.telegram.messenger.MessageObject) r1
            org.telegram.ui.Components.RecyclerListView r0 = r8.chatListView
            int r0 = r0.getChildCount()
            r15 = 0
        L_0x21af:
            if (r15 >= r0) goto L_0x30bd
            org.telegram.ui.Components.RecyclerListView r2 = r8.chatListView
            android.view.View r2 = r2.getChildAt(r15)
            boolean r3 = r2 instanceof org.telegram.ui.Cells.ChatMessageCell
            if (r3 == 0) goto L_0x220a
            org.telegram.ui.Cells.ChatMessageCell r2 = (org.telegram.ui.Cells.ChatMessageCell) r2
            org.telegram.messenger.MessageObject r3 = r2.getMessageObject()
            if (r1 != r3) goto L_0x220a
            org.telegram.messenger.ImageReceiver r0 = r2.getPhotoImage()
            org.telegram.ui.Components.AnimatedFileDrawable r2 = r0.getAnimation()
            if (r2 == 0) goto L_0x30bd
            android.graphics.Bitmap r0 = r2.getAnimatedBitmap()
            if (r0 == 0) goto L_0x21f4
            android.view.TextureView r3 = r8.videoTextureView     // Catch:{ all -> 0x21f0 }
            int r4 = r0.getWidth()     // Catch:{ all -> 0x21f0 }
            int r5 = r0.getHeight()     // Catch:{ all -> 0x21f0 }
            android.graphics.Bitmap r3 = r3.getBitmap(r4, r5)     // Catch:{ all -> 0x21f0 }
            android.graphics.Canvas r4 = new android.graphics.Canvas     // Catch:{ all -> 0x21f0 }
            r4.<init>(r0)     // Catch:{ all -> 0x21f0 }
            r0 = 0
            r5 = 0
            r6 = 0
            r4.drawBitmap(r3, r0, r5, r6)     // Catch:{ all -> 0x21f0 }
            r3.recycle()     // Catch:{ all -> 0x21f0 }
            goto L_0x21f4
        L_0x21f0:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
        L_0x21f4:
            int r0 = r1.audioProgressMs
            long r3 = (long) r0
            org.telegram.messenger.FileLoader r0 = r53.getFileLoader()
            org.telegram.tgnet.TLRPC$Document r1 = r1.getDocument()
            r5 = 1
            boolean r0 = r0.isLoadingVideo(r1, r5)
            r0 = r0 ^ r5
            r2.seekTo(r3, r0)
            goto L_0x30bd
        L_0x220a:
            int r15 = r15 + 1
            goto L_0x21af
        L_0x220d:
            int r1 = org.telegram.messenger.NotificationCenter.messagePlayingDidReset
            if (r0 == r1) goto L_0x3012
            int r3 = org.telegram.messenger.NotificationCenter.messagePlayingPlayStateChanged
            if (r0 != r3) goto L_0x2217
            goto L_0x3012
        L_0x2217:
            int r1 = org.telegram.messenger.NotificationCenter.messagePlayingProgressDidChanged
            if (r0 != r1) goto L_0x2278
            r1 = 0
            r0 = r9[r1]
            java.lang.Integer r0 = (java.lang.Integer) r0
            org.telegram.ui.Components.RecyclerListView r1 = r8.chatListView
            if (r1 == 0) goto L_0x30bd
            int r1 = r1.getChildCount()
            r15 = 0
        L_0x2229:
            if (r15 >= r1) goto L_0x30bd
            org.telegram.ui.Components.RecyclerListView r2 = r8.chatListView
            android.view.View r2 = r2.getChildAt(r15)
            boolean r3 = r2 instanceof org.telegram.ui.Cells.ChatMessageCell
            if (r3 == 0) goto L_0x2275
            org.telegram.ui.Cells.ChatMessageCell r2 = (org.telegram.ui.Cells.ChatMessageCell) r2
            org.telegram.messenger.MessageObject r3 = r2.getMessageObject()
            if (r3 == 0) goto L_0x2275
            int r4 = r3.getId()
            int r5 = r0.intValue()
            if (r4 != r5) goto L_0x2275
            org.telegram.messenger.MediaController r0 = org.telegram.messenger.MediaController.getInstance()
            org.telegram.messenger.MessageObject r0 = r0.getPlayingMessageObject()
            if (r0 == 0) goto L_0x30bd
            org.telegram.ui.Components.SeekBar r1 = r2.getSeekBar()
            boolean r1 = r1.isDragging()
            if (r1 != 0) goto L_0x30bd
            float r1 = r0.audioProgress
            r3.audioProgress = r1
            int r1 = r0.audioProgressSec
            r3.audioProgressSec = r1
            int r0 = r0.audioPlayerDuration
            r3.audioPlayerDuration = r0
            r2.updatePlayingMessageProgress()
            org.telegram.ui.Cells.ChatMessageCell r0 = r8.drawLaterRoundProgressCell
            if (r0 != r2) goto L_0x30bd
            android.view.View r0 = r8.fragmentView
            r0.invalidate()
            goto L_0x30bd
        L_0x2275:
            int r15 = r15 + 1
            goto L_0x2229
        L_0x2278:
            int r1 = org.telegram.messenger.NotificationCenter.didUpdatePollResults
            if (r0 != r1) goto L_0x232a
            r1 = 0
            r0 = r9[r1]
            java.lang.Long r0 = (java.lang.Long) r0
            long r0 = r0.longValue()
            android.util.LongSparseArray<java.util.ArrayList<org.telegram.messenger.MessageObject>> r2 = r8.polls
            java.lang.Object r0 = r2.get(r0)
            java.util.ArrayList r0 = (java.util.ArrayList) r0
            if (r0 == 0) goto L_0x30bd
            r1 = 1
            r2 = r9[r1]
            org.telegram.tgnet.TLRPC$TL_poll r2 = (org.telegram.tgnet.TLRPC$TL_poll) r2
            r1 = 2
            r3 = r9[r1]
            org.telegram.tgnet.TLRPC$PollResults r3 = (org.telegram.tgnet.TLRPC$PollResults) r3
            int r1 = r0.size()
            r4 = 0
            r5 = 0
            r6 = 0
            r15 = 0
        L_0x22a1:
            if (r5 >= r1) goto L_0x22d7
            java.lang.Object r7 = r0.get(r5)
            org.telegram.messenger.MessageObject r7 = (org.telegram.messenger.MessageObject) r7
            boolean r9 = r7.isVoted()
            org.telegram.tgnet.TLRPC$Message r11 = r7.messageOwner
            org.telegram.tgnet.TLRPC$MessageMedia r11 = r11.media
            org.telegram.tgnet.TLRPC$TL_messageMediaPoll r11 = (org.telegram.tgnet.TLRPC$TL_messageMediaPoll) r11
            if (r2 == 0) goto L_0x22ba
            r11.poll = r2
            boolean r6 = r2.quiz
            goto L_0x22c0
        L_0x22ba:
            org.telegram.tgnet.TLRPC$Poll r13 = r11.poll
            if (r13 == 0) goto L_0x22c0
            boolean r6 = r13.quiz
        L_0x22c0:
            org.telegram.messenger.MessageObject.updatePollResults(r11, r3)
            org.telegram.ui.ChatActivity$ChatActivityAdapter r11 = r8.chatAdapter
            if (r11 == 0) goto L_0x22cd
            r12 = 1
            android.view.View r11 = r11.updateRowWithMessageObject(r7, r12)
            r15 = r11
        L_0x22cd:
            boolean r7 = r7.isVoted()
            if (r9 == r7) goto L_0x22d4
            r4 = 1
        L_0x22d4:
            int r5 = r5 + 1
            goto L_0x22a1
        L_0x22d7:
            if (r4 == 0) goto L_0x30bd
            if (r6 == 0) goto L_0x30bd
            org.telegram.ui.Components.UndoView r0 = r8.undoView
            if (r0 == 0) goto L_0x30bd
            boolean r0 = r15 instanceof org.telegram.ui.Cells.ChatMessageCell
            if (r0 == 0) goto L_0x30bd
            r0 = r15
            org.telegram.ui.Cells.ChatMessageCell r0 = (org.telegram.ui.Cells.ChatMessageCell) r0
            boolean r1 = r0.isAnimatingPollAnswer()
            if (r1 == 0) goto L_0x30bd
            java.util.ArrayList<org.telegram.tgnet.TLRPC$TL_pollAnswerVoters> r1 = r3.results
            int r1 = r1.size()
            r2 = 0
        L_0x22f3:
            if (r2 >= r1) goto L_0x30bd
            java.util.ArrayList<org.telegram.tgnet.TLRPC$TL_pollAnswerVoters> r4 = r3.results
            java.lang.Object r4 = r4.get(r2)
            org.telegram.tgnet.TLRPC$TL_pollAnswerVoters r4 = (org.telegram.tgnet.TLRPC$TL_pollAnswerVoters) r4
            boolean r5 = r4.chosen
            if (r5 == 0) goto L_0x2327
            boolean r1 = r4.correct
            if (r1 == 0) goto L_0x2311
            org.telegram.ui.Components.FireworksOverlay r0 = r8.fireworksOverlay
            r0.start()
            r1 = 3
            r2 = 2
            r15.performHapticFeedback(r1, r2)
            goto L_0x30bd
        L_0x2311:
            r1 = 3
            r2 = 2
            r0.shakeView()
            r15.performHapticFeedback(r1, r2)
            org.telegram.messenger.MessageObject r1 = r0.getMessageObject()
            r8.showPollSolution(r1, r3)
            r1 = 1
            r2 = 0
            r0.showHintButton(r2, r1, r2)
            goto L_0x30bd
        L_0x2327:
            int r2 = r2 + 1
            goto L_0x22f3
        L_0x232a:
            int r1 = org.telegram.messenger.NotificationCenter.didUpdateReactions
            if (r0 != r1) goto L_0x2376
            r1 = 0
            r0 = r9[r1]
            java.lang.Long r0 = (java.lang.Long) r0
            long r0 = r0.longValue()
            long r2 = r8.dialog_id
            int r4 = (r0 > r2 ? 1 : (r0 == r2 ? 0 : -1))
            if (r4 == 0) goto L_0x2343
            long r2 = r8.mergeDialogId
            int r4 = (r0 > r2 ? 1 : (r0 == r2 ? 0 : -1))
            if (r4 != 0) goto L_0x30bd
        L_0x2343:
            r2 = 1
            r3 = r9[r2]
            java.lang.Integer r3 = (java.lang.Integer) r3
            int r2 = r3.intValue()
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r3 = r8.messagesDict
            long r4 = r8.dialog_id
            int r6 = (r0 > r4 ? 1 : (r0 == r4 ? 0 : -1))
            if (r6 != 0) goto L_0x2356
            r15 = 0
            goto L_0x2357
        L_0x2356:
            r15 = 1
        L_0x2357:
            r0 = r3[r15]
            java.lang.Object r0 = r0.get(r2)
            org.telegram.messenger.MessageObject r0 = (org.telegram.messenger.MessageObject) r0
            if (r0 == 0) goto L_0x30bd
            org.telegram.tgnet.TLRPC$Message r1 = r0.messageOwner
            r2 = 2
            r2 = r9[r2]
            org.telegram.tgnet.TLRPC$TL_messageReactions r2 = (org.telegram.tgnet.TLRPC$TL_messageReactions) r2
            org.telegram.messenger.MessageObject.updateReactions(r1, r2)
            r0.measureInlineBotButtons()
            org.telegram.ui.ChatActivity$ChatActivityAdapter r1 = r8.chatAdapter
            r2 = 1
            r1.updateRowWithMessageObject(r0, r2)
            goto L_0x30bd
        L_0x2376:
            int r1 = org.telegram.messenger.NotificationCenter.didVerifyMessagesStickers
            if (r0 != r1) goto L_0x23ad
            r1 = 0
            r0 = r9[r1]
            java.util.ArrayList r0 = (java.util.ArrayList) r0
            int r2 = r0.size()
            r3 = 0
        L_0x2384:
            if (r3 >= r2) goto L_0x30bd
            java.lang.Object r4 = r0.get(r3)
            org.telegram.tgnet.TLRPC$Message r4 = (org.telegram.tgnet.TLRPC$Message) r4
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r5 = r8.messagesDict
            r5 = r5[r1]
            int r6 = r4.id
            java.lang.Object r5 = r5.get(r6)
            org.telegram.messenger.MessageObject r5 = (org.telegram.messenger.MessageObject) r5
            if (r5 == 0) goto L_0x23aa
            org.telegram.tgnet.TLRPC$Message r6 = r5.messageOwner
            int r4 = r4.stickerVerified
            r6.stickerVerified = r4
            r5.setType()
            org.telegram.ui.ChatActivity$ChatActivityAdapter r4 = r8.chatAdapter
            if (r4 == 0) goto L_0x23aa
            r4.updateRowWithMessageObject(r5, r1)
        L_0x23aa:
            int r3 = r3 + 1
            goto L_0x2384
        L_0x23ad:
            r1 = 0
            int r3 = org.telegram.messenger.NotificationCenter.updateMessageMedia
            if (r0 != r3) goto L_0x24c4
            r0 = r9[r1]
            org.telegram.tgnet.TLRPC$Message r0 = (org.telegram.tgnet.TLRPC$Message) r0
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r2 = r8.messagesDict
            r2 = r2[r1]
            int r3 = r0.id
            java.lang.Object r2 = r2.get(r3)
            org.telegram.messenger.MessageObject r2 = (org.telegram.messenger.MessageObject) r2
            if (r2 == 0) goto L_0x30bd
            org.telegram.tgnet.TLRPC$Message r3 = r2.messageOwner
            org.telegram.tgnet.TLRPC$MessageMedia r4 = r0.media
            r3.media = r4
            java.lang.String r4 = r0.attachPath
            r3.attachPath = r4
            r2.generateThumbs(r1)
            long r3 = r2.getGroupId()
            r5 = 0
            int r1 = (r3 > r5 ? 1 : (r3 == r5 ? 0 : -1))
            if (r1 == 0) goto L_0x24a0
            java.util.ArrayList<org.telegram.tgnet.TLRPC$PhotoSize> r1 = r2.photoThumbs
            if (r1 == 0) goto L_0x23e5
            boolean r1 = r1.isEmpty()
            if (r1 == 0) goto L_0x24a0
        L_0x23e5:
            android.util.LongSparseArray<org.telegram.messenger.MessageObject$GroupedMessages> r1 = r8.groupedMessagesMap
            long r3 = r2.getGroupId()
            java.lang.Object r1 = r1.get(r3)
            org.telegram.messenger.MessageObject$GroupedMessages r1 = (org.telegram.messenger.MessageObject.GroupedMessages) r1
            if (r1 == 0) goto L_0x24a0
            java.util.ArrayList<org.telegram.messenger.MessageObject> r3 = r1.messages
            int r3 = r3.indexOf(r2)
            if (r3 < 0) goto L_0x24a0
            java.util.ArrayList<org.telegram.messenger.MessageObject> r4 = r1.messages
            int r4 = r4.size()
            if (r3 <= 0) goto L_0x2462
            java.util.ArrayList<org.telegram.messenger.MessageObject> r5 = r1.messages
            int r5 = r5.size()
            r6 = 1
            int r5 = r5 - r6
            if (r3 >= r5) goto L_0x2462
            org.telegram.messenger.MessageObject$GroupedMessages r5 = new org.telegram.messenger.MessageObject$GroupedMessages
            r5.<init>()
            java.security.SecureRandom r6 = org.telegram.messenger.Utilities.random
            long r6 = r6.nextLong()
            r5.groupId = r6
            java.util.ArrayList<org.telegram.messenger.MessageObject> r6 = r5.messages
            java.util.ArrayList<org.telegram.messenger.MessageObject> r7 = r1.messages
            int r9 = r3 + 1
            int r10 = r7.size()
            java.util.List r7 = r7.subList(r9, r10)
            r6.addAll(r7)
            r6 = 0
        L_0x242c:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r7 = r5.messages
            int r7 = r7.size()
            if (r6 >= r7) goto L_0x2448
            java.util.ArrayList<org.telegram.messenger.MessageObject> r7 = r5.messages
            java.lang.Object r7 = r7.get(r6)
            org.telegram.messenger.MessageObject r7 = (org.telegram.messenger.MessageObject) r7
            long r10 = r5.groupId
            r7.localGroupId = r10
            java.util.ArrayList<org.telegram.messenger.MessageObject> r7 = r1.messages
            r7.remove(r9)
            int r6 = r6 + 1
            goto L_0x242c
        L_0x2448:
            android.util.LongSparseArray<org.telegram.messenger.MessageObject$GroupedMessages> r6 = r8.groupedMessagesMap
            long r9 = r5.groupId
            r6.put(r9, r5)
            java.util.ArrayList<org.telegram.messenger.MessageObject> r6 = r5.messages
            int r7 = r6.size()
            r9 = 1
            int r7 = r7 - r9
            java.lang.Object r6 = r6.get(r7)
            r15 = r6
            org.telegram.messenger.MessageObject r15 = (org.telegram.messenger.MessageObject) r15
            r5.calculate()
            goto L_0x2463
        L_0x2462:
            r15 = 0
        L_0x2463:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r5 = r1.messages
            r5.remove(r3)
            java.util.ArrayList<org.telegram.messenger.MessageObject> r3 = r1.messages
            boolean r3 = r3.isEmpty()
            if (r3 == 0) goto L_0x2478
            android.util.LongSparseArray<org.telegram.messenger.MessageObject$GroupedMessages> r3 = r8.groupedMessagesMap
            long r4 = r1.groupId
            r3.remove(r4)
            goto L_0x24a0
        L_0x2478:
            if (r15 != 0) goto L_0x2489
            java.util.ArrayList<org.telegram.messenger.MessageObject> r3 = r1.messages
            int r5 = r3.size()
            r6 = 1
            int r5 = r5 - r6
            java.lang.Object r3 = r3.get(r5)
            r15 = r3
            org.telegram.messenger.MessageObject r15 = (org.telegram.messenger.MessageObject) r15
        L_0x2489:
            r1.calculate()
            java.util.ArrayList<org.telegram.messenger.MessageObject> r1 = r8.messages
            int r1 = r1.indexOf(r15)
            if (r1 < 0) goto L_0x24a0
            org.telegram.ui.ChatActivity$ChatActivityAdapter r3 = r8.chatAdapter
            if (r3 == 0) goto L_0x24a0
            int r5 = r3.messagesStartRow
            int r1 = r1 + r5
            r3.notifyItemRangeChanged(r1, r4)
        L_0x24a0:
            org.telegram.tgnet.TLRPC$MessageMedia r0 = r0.media
            int r1 = r0.ttl_seconds
            if (r1 == 0) goto L_0x24bf
            org.telegram.tgnet.TLRPC$Photo r1 = r0.photo
            boolean r1 = r1 instanceof org.telegram.tgnet.TLRPC$TL_photoEmpty
            if (r1 != 0) goto L_0x24b2
            org.telegram.tgnet.TLRPC$Document r0 = r0.document
            boolean r0 = r0 instanceof org.telegram.tgnet.TLRPC$TL_documentEmpty
            if (r0 == 0) goto L_0x24bf
        L_0x24b2:
            r2.setType()
            org.telegram.ui.ChatActivity$ChatActivityAdapter r0 = r8.chatAdapter
            if (r0 == 0) goto L_0x30bd
            r1 = 0
            r0.updateRowWithMessageObject(r2, r1)
            goto L_0x30bd
        L_0x24bf:
            r53.updateVisibleRows()
            goto L_0x30bd
        L_0x24c4:
            int r3 = org.telegram.messenger.NotificationCenter.replaceMessagesObjects
            if (r0 != r3) goto L_0x24ef
            r0 = r9[r1]
            java.lang.Long r0 = (java.lang.Long) r0
            long r0 = r0.longValue()
            long r2 = r8.dialog_id
            int r4 = (r0 > r2 ? 1 : (r0 == r2 ? 0 : -1))
            if (r4 == 0) goto L_0x24dd
            long r4 = r8.mergeDialogId
            int r6 = (r0 > r4 ? 1 : (r0 == r4 ? 0 : -1))
            if (r6 == 0) goto L_0x24dd
            return
        L_0x24dd:
            int r4 = (r0 > r2 ? 1 : (r0 == r2 ? 0 : -1))
            r1 = 1
            if (r4 != 0) goto L_0x24e4
            r12 = 0
            goto L_0x24e5
        L_0x24e4:
            r12 = 1
        L_0x24e5:
            r0 = r9[r1]
            java.util.ArrayList r0 = (java.util.ArrayList) r0
            r1 = 0
            r8.replaceMessageObjects(r0, r12, r1)
            goto L_0x30bd
        L_0x24ef:
            int r1 = org.telegram.messenger.NotificationCenter.notificationsSettingsUpdated
            if (r0 != r1) goto L_0x250b
            r53.updateTitleIcons()
            org.telegram.tgnet.TLRPC$Chat r0 = r8.currentChat
            boolean r0 = org.telegram.messenger.ChatObject.isChannel(r0)
            if (r0 != 0) goto L_0x2506
            org.telegram.tgnet.TLRPC$User r0 = r8.currentUser
            boolean r0 = org.telegram.messenger.UserObject.isReplyUser((org.telegram.tgnet.TLRPC$User) r0)
            if (r0 == 0) goto L_0x30bd
        L_0x2506:
            r53.updateBottomOverlay()
            goto L_0x30bd
        L_0x250b:
            int r1 = org.telegram.messenger.NotificationCenter.replyMessagesDidLoad
            if (r0 != r1) goto L_0x256b
            r1 = 0
            r0 = r9[r1]
            java.lang.Long r0 = (java.lang.Long) r0
            long r0 = r0.longValue()
            long r2 = r8.dialog_id
            int r4 = (r0 > r2 ? 1 : (r0 == r2 ? 0 : -1))
            if (r4 != 0) goto L_0x2540
            r2 = 1
            r0 = r9[r2]
            java.util.ArrayList r0 = (java.util.ArrayList) r0
            int r1 = r0.size()
            r15 = 0
        L_0x2528:
            if (r15 >= r1) goto L_0x253c
            java.lang.Object r2 = r0.get(r15)
            org.telegram.messenger.MessageObject r2 = (org.telegram.messenger.MessageObject) r2
            android.util.SparseArray<org.telegram.messenger.MessageObject> r3 = r8.repliesMessagesDict
            int r4 = r2.getId()
            r3.put(r4, r2)
            int r15 = r15 + 1
            goto L_0x2528
        L_0x253c:
            r53.updateVisibleRows()
            goto L_0x2565
        L_0x2540:
            android.util.SparseArray<org.telegram.messenger.MessageObject> r2 = r8.waitingForReplies
            int r2 = r2.size()
            if (r2 == 0) goto L_0x2565
            org.telegram.tgnet.TLRPC$Chat r2 = r8.currentChat
            boolean r2 = org.telegram.messenger.ChatObject.isChannel(r2)
            if (r2 == 0) goto L_0x2565
            org.telegram.tgnet.TLRPC$Chat r2 = r8.currentChat
            boolean r2 = r2.megagroup
            if (r2 != 0) goto L_0x2565
            org.telegram.tgnet.TLRPC$ChatFull r2 = r8.chatInfo
            if (r2 == 0) goto L_0x2565
            int r2 = r2.linked_chat_id
            int r2 = -r2
            long r2 = (long) r2
            int r4 = (r0 > r2 ? 1 : (r0 == r2 ? 0 : -1))
            if (r4 != 0) goto L_0x2565
            r53.checkWaitingForReplies()
        L_0x2565:
            r1 = 1
            r8.updateReplyMessageHeader(r1)
            goto L_0x30bd
        L_0x256b:
            r1 = 1
            int r3 = org.telegram.messenger.NotificationCenter.didLoadPinnedMessages
            if (r0 != r3) goto L_0x278e
            r3 = 0
            r0 = r9[r3]
            java.lang.Long r0 = (java.lang.Long) r0
            long r2 = r0.longValue()
            long r4 = r8.dialog_id
            int r0 = (r2 > r4 ? 1 : (r2 == r4 ? 0 : -1))
            if (r0 != 0) goto L_0x30bd
            r0 = r9[r1]
            java.util.ArrayList r0 = (java.util.ArrayList) r0
            r1 = 2
            r2 = r9[r1]
            java.lang.Boolean r2 = (java.lang.Boolean) r2
            boolean r1 = r2.booleanValue()
            r2 = 3
            r2 = r9[r2]
            java.util.ArrayList r2 = (java.util.ArrayList) r2
            if (r0 == 0) goto L_0x2728
            r3 = 4
            r3 = r9[r3]
            java.util.HashMap r3 = (java.util.HashMap) r3
            r4 = 5
            r4 = r9[r4]
            java.lang.Integer r4 = (java.lang.Integer) r4
            int r4 = r4.intValue()
            r5 = 6
            r5 = r9[r5]
            java.lang.Integer r5 = (java.lang.Integer) r5
            int r5 = r5.intValue()
            r6 = 7
            r6 = r9[r6]
            java.lang.Boolean r6 = (java.lang.Boolean) r6
            boolean r6 = r6.booleanValue()
            java.util.HashMap r7 = new java.util.HashMap
            java.util.HashMap<java.lang.Integer, org.telegram.messenger.MessageObject> r9 = r8.pinnedMessageObjects
            r7.<init>(r9)
            if (r3 == 0) goto L_0x25cf
            r9 = 0
            r8.loadingPinnedMessagesList = r9
            if (r4 != 0) goto L_0x25cb
            java.util.ArrayList<java.lang.Integer> r4 = r8.pinnedMessageIds
            r4.clear()
            java.util.HashMap<java.lang.Integer, org.telegram.messenger.MessageObject> r4 = r8.pinnedMessageObjects
            r4.clear()
        L_0x25cb:
            r8.totalPinnedMessagesCount = r5
            r8.pinnedEndReached = r6
        L_0x25cf:
            if (r2 == 0) goto L_0x25e2
            org.telegram.messenger.MediaDataController r26 = r53.getMediaDataController()
            long r4 = r8.dialog_id
            r30 = 0
            r31 = 0
            r27 = r2
            r28 = r4
            r26.loadReplyMessagesForMessages(r27, r28, r30, r31)
        L_0x25e2:
            int r4 = r0.size()
            r5 = 0
            r6 = 0
            r15 = 0
        L_0x25e9:
            if (r6 >= r4) goto L_0x26d7
            java.lang.Object r9 = r0.get(r6)
            java.lang.Integer r9 = (java.lang.Integer) r9
            if (r1 == 0) goto L_0x2660
            java.util.HashMap<java.lang.Integer, org.telegram.messenger.MessageObject> r11 = r8.pinnedMessageObjects
            boolean r11 = r11.containsKey(r9)
            if (r11 == 0) goto L_0x25fd
            goto L_0x26d3
        L_0x25fd:
            java.util.ArrayList<java.lang.Integer> r5 = r8.pinnedMessageIds
            r5.add(r9)
            java.lang.Object r5 = r7.get(r9)
            org.telegram.messenger.MessageObject r5 = (org.telegram.messenger.MessageObject) r5
            if (r5 != 0) goto L_0x2619
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r5 = r8.messagesDict
            r11 = 0
            r5 = r5[r11]
            int r11 = r9.intValue()
            java.lang.Object r5 = r5.get(r11)
            org.telegram.messenger.MessageObject r5 = (org.telegram.messenger.MessageObject) r5
        L_0x2619:
            if (r5 != 0) goto L_0x2648
            if (r2 == 0) goto L_0x2648
            if (r15 != 0) goto L_0x2642
            java.util.HashMap r5 = new java.util.HashMap
            r5.<init>()
            int r11 = r2.size()
            r13 = 0
        L_0x2629:
            if (r13 >= r11) goto L_0x2641
            java.lang.Object r14 = r2.get(r13)
            org.telegram.messenger.MessageObject r14 = (org.telegram.messenger.MessageObject) r14
            if (r14 == 0) goto L_0x263e
            int r15 = r14.getId()
            java.lang.Integer r15 = java.lang.Integer.valueOf(r15)
            r5.put(r15, r14)
        L_0x263e:
            int r13 = r13 + 1
            goto L_0x2629
        L_0x2641:
            r15 = r5
        L_0x2642:
            java.lang.Object r5 = r15.get(r9)
            org.telegram.messenger.MessageObject r5 = (org.telegram.messenger.MessageObject) r5
        L_0x2648:
            if (r5 != 0) goto L_0x2652
            if (r3 == 0) goto L_0x2652
            java.lang.Object r5 = r3.get(r9)
            org.telegram.messenger.MessageObject r5 = (org.telegram.messenger.MessageObject) r5
        L_0x2652:
            java.util.HashMap<java.lang.Integer, org.telegram.messenger.MessageObject> r11 = r8.pinnedMessageObjects
            r11.put(r9, r5)
            if (r3 != 0) goto L_0x267b
            int r5 = r8.totalPinnedMessagesCount
            r11 = 1
            int r5 = r5 + r11
            r8.totalPinnedMessagesCount = r5
            goto L_0x267b
        L_0x2660:
            java.util.HashMap<java.lang.Integer, org.telegram.messenger.MessageObject> r11 = r8.pinnedMessageObjects
            boolean r11 = r11.containsKey(r9)
            if (r11 != 0) goto L_0x2669
            goto L_0x26d3
        L_0x2669:
            java.util.HashMap<java.lang.Integer, org.telegram.messenger.MessageObject> r5 = r8.pinnedMessageObjects
            r5.remove(r9)
            java.util.ArrayList<java.lang.Integer> r5 = r8.pinnedMessageIds
            r5.remove(r9)
            if (r3 != 0) goto L_0x267b
            int r5 = r8.totalPinnedMessagesCount
            r11 = 1
            int r5 = r5 - r11
            r8.totalPinnedMessagesCount = r5
        L_0x267b:
            java.util.ArrayList<java.lang.Integer> r5 = r8.pinnedMessageIds
            int r5 = r5.size()
            r8.loadedPinnedMessagesCount = r5
            org.telegram.ui.ChatActivity$ChatActivityAdapter r5 = r8.chatAdapter
            if (r5 == 0) goto L_0x26d2
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r5 = r8.messagesDict
            r11 = 0
            r5 = r5[r11]
            int r9 = r9.intValue()
            java.lang.Object r5 = r5.get(r9)
            org.telegram.messenger.MessageObject r5 = (org.telegram.messenger.MessageObject) r5
            if (r5 == 0) goto L_0x26d2
            boolean r9 = r5.hasValidGroupId()
            if (r9 == 0) goto L_0x26cc
            android.util.LongSparseArray<org.telegram.messenger.MessageObject$GroupedMessages> r9 = r8.groupedMessagesMap
            long r13 = r5.getGroupId()
            java.lang.Object r5 = r9.get(r13)
            org.telegram.messenger.MessageObject$GroupedMessages r5 = (org.telegram.messenger.MessageObject.GroupedMessages) r5
            if (r5 == 0) goto L_0x26d2
            java.util.ArrayList<org.telegram.messenger.MessageObject> r9 = r8.messages
            java.util.ArrayList<org.telegram.messenger.MessageObject> r11 = r5.messages
            int r13 = r11.size()
            r12 = 1
            int r13 = r13 - r12
            java.lang.Object r11 = r11.get(r13)
            int r9 = r9.indexOf(r11)
            if (r9 < 0) goto L_0x26d2
            org.telegram.ui.ChatActivity$ChatActivityAdapter r11 = r8.chatAdapter
            java.util.ArrayList<org.telegram.messenger.MessageObject> r5 = r5.messages
            int r5 = r5.size()
            r11.notifyItemRangeChanged(r9, r5)
            goto L_0x26d2
        L_0x26cc:
            org.telegram.ui.ChatActivity$ChatActivityAdapter r9 = r8.chatAdapter
            r11 = 0
            r9.updateRowWithMessageObject(r5, r11)
        L_0x26d2:
            r5 = 1
        L_0x26d3:
            int r6 = r6 + 1
            goto L_0x25e9
        L_0x26d7:
            if (r5 == 0) goto L_0x2707
            int r3 = r8.chatMode
            r4 = 2
            if (r3 != r4) goto L_0x26ef
            org.telegram.ui.Components.ChatAvatarContainer r3 = r8.avatarContainer
            if (r3 == 0) goto L_0x26ef
            int r4 = r53.getPinnedMessagesCount()
            java.lang.String r5 = "PinnedMessagesCount"
            java.lang.String r4 = org.telegram.messenger.LocaleController.formatPluralString(r5, r4)
            r3.setTitle(r4)
        L_0x26ef:
            java.util.ArrayList<java.lang.Integer> r3 = r8.pinnedMessageIds
            org.telegram.ui.-$$Lambda$ChatActivity$qiqbXvEk6CA4jYzI-q4p-EQ6UJk r4 = org.telegram.ui.$$Lambda$ChatActivity$qiqbXvEk6CA4jYzIq4pEQ6UJk.INSTANCE
            java.util.Collections.sort(r3, r4)
            java.util.ArrayList<java.lang.Integer> r3 = r8.pinnedMessageIds
            boolean r3 = r3.isEmpty()
            if (r3 == 0) goto L_0x2703
            r3 = 1
            r8.hidePinnedMessageView(r3)
            goto L_0x2707
        L_0x2703:
            r3 = 0
            r8.updateMessagesVisiblePart(r3)
        L_0x2707:
            int r3 = r8.chatMode
            r4 = 2
            if (r3 != r4) goto L_0x30bd
            if (r1 == 0) goto L_0x2715
            if (r2 == 0) goto L_0x30bd
            r8.processNewMessages(r2)
            goto L_0x30bd
        L_0x2715:
            org.telegram.tgnet.TLRPC$Chat r1 = r8.currentChat
            boolean r1 = org.telegram.messenger.ChatObject.isChannel(r1)
            if (r1 == 0) goto L_0x2722
            org.telegram.tgnet.TLRPC$Chat r1 = r8.currentChat
            int r15 = r1.id
            goto L_0x2723
        L_0x2722:
            r15 = 0
        L_0x2723:
            r8.processDeletedMessages(r0, r15)
            goto L_0x30bd
        L_0x2728:
            if (r1 == 0) goto L_0x2777
            int r0 = r2.size()
            r1 = 0
        L_0x272f:
            if (r1 >= r0) goto L_0x2760
            java.lang.Object r3 = r2.get(r1)
            org.telegram.messenger.MessageObject r3 = (org.telegram.messenger.MessageObject) r3
            java.util.HashMap<java.lang.Integer, org.telegram.messenger.MessageObject> r4 = r8.pinnedMessageObjects
            int r5 = r3.getId()
            java.lang.Integer r5 = java.lang.Integer.valueOf(r5)
            boolean r4 = r4.containsKey(r5)
            if (r4 == 0) goto L_0x2754
            java.util.HashMap<java.lang.Integer, org.telegram.messenger.MessageObject> r4 = r8.pinnedMessageObjects
            int r5 = r3.getId()
            java.lang.Integer r5 = java.lang.Integer.valueOf(r5)
            r4.put(r5, r3)
        L_0x2754:
            android.util.SparseArray<java.lang.Boolean> r4 = r8.loadingPinnedMessages
            int r3 = r3.getId()
            r4.remove(r3)
            int r1 = r1 + 1
            goto L_0x272f
        L_0x2760:
            org.telegram.messenger.MediaDataController r26 = r53.getMediaDataController()
            long r0 = r8.dialog_id
            r30 = 0
            r31 = 0
            r27 = r2
            r28 = r0
            r26.loadReplyMessagesForMessages(r27, r28, r30, r31)
            r1 = 0
            r8.updateMessagesVisiblePart(r1)
            goto L_0x30bd
        L_0x2777:
            r1 = 0
            java.util.ArrayList<java.lang.Integer> r0 = r8.pinnedMessageIds
            r0.clear()
            java.util.HashMap<java.lang.Integer, org.telegram.messenger.MessageObject> r0 = r8.pinnedMessageObjects
            r0.clear()
            r8.currentPinnedMessageId = r1
            r8.loadedPinnedMessagesCount = r1
            r8.totalPinnedMessagesCount = r1
            r1 = 1
            r8.hidePinnedMessageView(r1)
            goto L_0x30bd
        L_0x278e:
            r1 = 0
            r4 = 2
            int r3 = org.telegram.messenger.NotificationCenter.didReceivedWebpages
            if (r0 != r3) goto L_0x27ee
            r0 = r9[r1]
            java.util.ArrayList r0 = (java.util.ArrayList) r0
            r1 = 0
            r2 = 0
        L_0x279a:
            int r3 = r0.size()
            if (r2 >= r3) goto L_0x27e7
            java.lang.Object r3 = r0.get(r2)
            org.telegram.tgnet.TLRPC$Message r3 = (org.telegram.tgnet.TLRPC$Message) r3
            long r4 = org.telegram.messenger.MessageObject.getDialogId(r3)
            long r6 = r8.dialog_id
            int r9 = (r4 > r6 ? 1 : (r4 == r6 ? 0 : -1))
            if (r9 == 0) goto L_0x27b7
            long r9 = r8.mergeDialogId
            int r11 = (r4 > r9 ? 1 : (r4 == r9 ? 0 : -1))
            if (r11 == 0) goto L_0x27b7
            goto L_0x27e4
        L_0x27b7:
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r9 = r8.messagesDict
            int r10 = (r4 > r6 ? 1 : (r4 == r6 ? 0 : -1))
            if (r10 != 0) goto L_0x27bf
            r4 = 0
            goto L_0x27c0
        L_0x27bf:
            r4 = 1
        L_0x27c0:
            r4 = r9[r4]
            int r5 = r3.id
            java.lang.Object r4 = r4.get(r5)
            org.telegram.messenger.MessageObject r4 = (org.telegram.messenger.MessageObject) r4
            if (r4 == 0) goto L_0x27e4
            org.telegram.tgnet.TLRPC$Message r1 = r4.messageOwner
            org.telegram.tgnet.TLRPC$TL_messageMediaWebPage r5 = new org.telegram.tgnet.TLRPC$TL_messageMediaWebPage
            r5.<init>()
            r1.media = r5
            org.telegram.tgnet.TLRPC$Message r1 = r4.messageOwner
            org.telegram.tgnet.TLRPC$MessageMedia r1 = r1.media
            org.telegram.tgnet.TLRPC$MessageMedia r3 = r3.media
            org.telegram.tgnet.TLRPC$WebPage r3 = r3.webpage
            r1.webpage = r3
            r1 = 1
            r4.generateThumbs(r1)
            r1 = 1
        L_0x27e4:
            int r2 = r2 + 1
            goto L_0x279a
        L_0x27e7:
            if (r1 == 0) goto L_0x30bd
            r53.updateVisibleRows()
            goto L_0x30bd
        L_0x27ee:
            int r1 = org.telegram.messenger.NotificationCenter.didReceivedWebpagesInUpdates
            if (r0 != r1) goto L_0x2820
            org.telegram.tgnet.TLRPC$WebPage r0 = r8.foundWebPage
            if (r0 == 0) goto L_0x30bd
            r1 = 0
            r0 = r9[r1]
            android.util.LongSparseArray r0 = (android.util.LongSparseArray) r0
            r1 = 0
        L_0x27fc:
            int r2 = r0.size()
            if (r1 >= r2) goto L_0x30bd
            java.lang.Object r2 = r0.valueAt(r1)
            org.telegram.tgnet.TLRPC$WebPage r2 = (org.telegram.tgnet.TLRPC$WebPage) r2
            long r3 = r2.id
            org.telegram.tgnet.TLRPC$WebPage r5 = r8.foundWebPage
            long r5 = r5.id
            int r7 = (r3 > r5 ? 1 : (r3 == r5 ? 0 : -1))
            if (r7 != 0) goto L_0x281c
            boolean r0 = r2 instanceof org.telegram.tgnet.TLRPC$TL_webPageEmpty
            r1 = 1
            r0 = r0 ^ r1
            r3 = 0
            r8.showFieldPanelForWebPage(r0, r2, r3)
            goto L_0x30bd
        L_0x281c:
            r3 = 0
            int r1 = r1 + 1
            goto L_0x27fc
        L_0x2820:
            r3 = 0
            int r1 = org.telegram.messenger.NotificationCenter.messagesReadContent
            if (r0 != r1) goto L_0x2899
            r0 = r9[r3]
            java.util.ArrayList r0 = (java.util.ArrayList) r0
            org.telegram.tgnet.TLRPC$Chat r1 = r8.currentChat
            boolean r1 = org.telegram.messenger.ChatObject.isChannel(r1)
            if (r1 == 0) goto L_0x2836
            org.telegram.tgnet.TLRPC$Chat r1 = r8.currentChat
            int r1 = r1.id
            goto L_0x2837
        L_0x2836:
            r1 = 0
        L_0x2837:
            r3 = 0
        L_0x2838:
            int r4 = r0.size()
            if (r3 >= r4) goto L_0x30bd
            java.lang.Object r4 = r0.get(r3)
            java.lang.Long r4 = (java.lang.Long) r4
            long r4 = r4.longValue()
            long r6 = r4 >> r2
            int r7 = (int) r6
            if (r7 >= 0) goto L_0x284e
            r7 = 0
        L_0x284e:
            if (r7 == r1) goto L_0x2851
            goto L_0x2896
        L_0x2851:
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r6 = r8.messagesDict
            r7 = 0
            r6 = r6[r7]
            int r5 = (int) r4
            java.lang.Object r4 = r6.get(r5)
            org.telegram.messenger.MessageObject r4 = (org.telegram.messenger.MessageObject) r4
            if (r4 == 0) goto L_0x2896
            r4.setContentIsRead()
            org.telegram.tgnet.TLRPC$Message r5 = r4.messageOwner
            boolean r5 = r5.mentioned
            if (r5 == 0) goto L_0x288f
            int r5 = r8.newMentionsCount
            r6 = 1
            int r5 = r5 - r6
            r8.newMentionsCount = r5
            if (r5 > 0) goto L_0x2879
            r7 = 0
            r8.newMentionsCount = r7
            r8.hasAllMentionsLocal = r6
            r8.showMentionDownButton(r7, r6)
            goto L_0x288f
        L_0x2879:
            r7 = 0
            org.telegram.ui.ActionBar.SimpleTextView r9 = r8.mentiondownButtonCounter
            if (r9 == 0) goto L_0x288f
            java.lang.Object[] r10 = new java.lang.Object[r6]
            java.lang.Integer r5 = java.lang.Integer.valueOf(r5)
            r10[r7] = r5
            java.lang.String r5 = "%d"
            java.lang.String r5 = java.lang.String.format(r5, r10)
            r9.setText(r5)
        L_0x288f:
            org.telegram.ui.ChatActivity$ChatActivityAdapter r5 = r8.chatAdapter
            if (r5 == 0) goto L_0x2896
            r5.invalidateRowWithMessageObject(r4)
        L_0x2896:
            int r3 = r3 + 1
            goto L_0x2838
        L_0x2899:
            int r1 = org.telegram.messenger.NotificationCenter.botInfoDidLoad
            if (r0 != r1) goto L_0x2942
            r1 = 1
            r0 = r9[r1]
            java.lang.Integer r0 = (java.lang.Integer) r0
            int r0 = r0.intValue()
            int r1 = r8.classGuid
            if (r1 != r0) goto L_0x30bd
            r1 = 0
            r0 = r9[r1]
            org.telegram.tgnet.TLRPC$BotInfo r0 = (org.telegram.tgnet.TLRPC$BotInfo) r0
            org.telegram.tgnet.TLRPC$EncryptedChat r1 = r8.currentEncryptedChat
            if (r1 != 0) goto L_0x293d
            java.util.ArrayList<org.telegram.tgnet.TLRPC$TL_botCommand> r1 = r0.commands
            boolean r1 = r1.isEmpty()
            if (r1 != 0) goto L_0x28cc
            org.telegram.tgnet.TLRPC$Chat r1 = r8.currentChat
            boolean r1 = org.telegram.messenger.ChatObject.isChannel(r1)
            if (r1 != 0) goto L_0x28cc
            boolean r1 = r53.isThreadChat()
            if (r1 != 0) goto L_0x28cc
            r1 = 1
            r8.hasBotsCommands = r1
        L_0x28cc:
            android.util.SparseArray<org.telegram.tgnet.TLRPC$BotInfo> r1 = r8.botInfo
            int r2 = r0.user_id
            r1.put(r2, r0)
            org.telegram.ui.ChatActivity$ChatActivityAdapter r0 = r8.chatAdapter
            if (r0 == 0) goto L_0x2917
            int r0 = r0.botInfoRow
            org.telegram.ui.ChatActivity$ChatActivityAdapter r1 = r8.chatAdapter
            r1.updateRowsInternal()
            if (r0 >= 0) goto L_0x28f4
            org.telegram.ui.ChatActivity$ChatActivityAdapter r1 = r8.chatAdapter
            int r1 = r1.botInfoRow
            if (r1 < 0) goto L_0x28f4
            org.telegram.ui.ChatActivity$ChatActivityAdapter r0 = r8.chatAdapter
            int r1 = r0.botInfoRow
            r0.notifyItemInserted(r1)
            goto L_0x2917
        L_0x28f4:
            if (r0 < 0) goto L_0x2904
            org.telegram.ui.ChatActivity$ChatActivityAdapter r1 = r8.chatAdapter
            int r1 = r1.botInfoRow
            if (r1 >= 0) goto L_0x2904
            org.telegram.ui.ChatActivity$ChatActivityAdapter r1 = r8.chatAdapter
            r1.notifyItemRemoved(r0)
            goto L_0x2917
        L_0x2904:
            if (r0 < 0) goto L_0x2917
            org.telegram.ui.ChatActivity$ChatActivityAdapter r0 = r8.chatAdapter
            int r0 = r0.botInfoRow
            if (r0 < 0) goto L_0x2917
            org.telegram.ui.ChatActivity$ChatActivityAdapter r0 = r8.chatAdapter
            int r1 = r0.botInfoRow
            r0.notifyItemChanged(r1)
        L_0x2917:
            org.telegram.ui.Adapters.MentionsAdapter r0 = r8.mentionsAdapter
            if (r0 == 0) goto L_0x2932
            org.telegram.tgnet.TLRPC$Chat r0 = r8.currentChat
            boolean r0 = org.telegram.messenger.ChatObject.isChannel(r0)
            if (r0 == 0) goto L_0x292b
            org.telegram.tgnet.TLRPC$Chat r0 = r8.currentChat
            if (r0 == 0) goto L_0x2932
            boolean r0 = r0.megagroup
            if (r0 == 0) goto L_0x2932
        L_0x292b:
            org.telegram.ui.Adapters.MentionsAdapter r0 = r8.mentionsAdapter
            android.util.SparseArray<org.telegram.tgnet.TLRPC$BotInfo> r1 = r8.botInfo
            r0.setBotInfo(r1)
        L_0x2932:
            org.telegram.ui.Components.ChatActivityEnterView r0 = r8.chatActivityEnterView
            if (r0 == 0) goto L_0x293d
            int r1 = r8.botsCount
            boolean r2 = r8.hasBotsCommands
            r0.setBotsCount(r1, r2)
        L_0x293d:
            r53.updateBotButtons()
            goto L_0x30bd
        L_0x2942:
            int r1 = org.telegram.messenger.NotificationCenter.botKeyboardDidLoad
            if (r0 != r1) goto L_0x298c
            long r0 = r8.dialog_id
            r2 = 1
            r3 = r9[r2]
            java.lang.Long r3 = (java.lang.Long) r3
            long r2 = r3.longValue()
            int r4 = (r0 > r2 ? 1 : (r0 == r2 ? 0 : -1))
            if (r4 != 0) goto L_0x30bd
            r1 = 0
            r0 = r9[r1]
            org.telegram.tgnet.TLRPC$Message r0 = (org.telegram.tgnet.TLRPC$Message) r0
            if (r0 == 0) goto L_0x296e
            boolean r2 = r8.userBlocked
            if (r2 != 0) goto L_0x296e
            org.telegram.messenger.MessageObject r2 = new org.telegram.messenger.MessageObject
            int r3 = r8.currentAccount
            r2.<init>(r3, r0, r1, r1)
            r8.botButtons = r2
            r53.checkBotKeyboard()
            goto L_0x30bd
        L_0x296e:
            r3 = 0
            r8.botButtons = r3
            org.telegram.ui.Components.ChatActivityEnterView r0 = r8.chatActivityEnterView
            if (r0 == 0) goto L_0x30bd
            org.telegram.messenger.MessageObject r0 = r8.replyingMessageObject
            if (r0 == 0) goto L_0x2983
            org.telegram.messenger.MessageObject r1 = r8.botReplyButtons
            if (r1 != r0) goto L_0x2983
            r8.botReplyButtons = r3
            r1 = 1
            r8.hideFieldPanel(r1)
        L_0x2983:
            org.telegram.ui.Components.ChatActivityEnterView r0 = r8.chatActivityEnterView
            org.telegram.messenger.MessageObject r1 = r8.botButtons
            r0.setButtons(r1)
            goto L_0x30bd
        L_0x298c:
            r3 = 0
            int r1 = org.telegram.messenger.NotificationCenter.chatSearchResultsAvailable
            if (r0 != r1) goto L_0x2a05
            int r0 = r8.classGuid
            r1 = 0
            r2 = r9[r1]
            java.lang.Integer r2 = (java.lang.Integer) r2
            int r1 = r2.intValue()
            if (r0 != r1) goto L_0x30bd
            r1 = 6
            r0 = r9[r1]
            java.lang.Boolean r0 = (java.lang.Boolean) r0
            boolean r0 = r0.booleanValue()
            if (r0 == 0) goto L_0x29fc
            r1 = 1
            r0 = r9[r1]
            java.lang.Integer r0 = (java.lang.Integer) r0
            int r2 = r0.intValue()
            r0 = 3
            r0 = r9[r0]
            java.lang.Long r0 = (java.lang.Long) r0
            long r0 = r0.longValue()
            if (r2 == 0) goto L_0x29d3
            r3 = 0
            r5 = 1
            long r6 = r8.dialog_id
            int r10 = (r0 > r6 ? 1 : (r0 == r6 ? 0 : -1))
            if (r10 != 0) goto L_0x29c7
            r12 = 0
            goto L_0x29c8
        L_0x29c7:
            r12 = 1
        L_0x29c8:
            r6 = 1
            r7 = 0
            r1 = r53
            r10 = 2
            r4 = r5
            r5 = r12
            r1.scrollToMessageId(r2, r3, r4, r5, r6, r7)
            goto L_0x29d7
        L_0x29d3:
            r10 = 2
            r53.updateVisibleRows()
        L_0x29d7:
            r0 = r9[r10]
            java.lang.Integer r0 = (java.lang.Integer) r0
            int r0 = r0.intValue()
            r1 = 4
            r1 = r9[r1]
            java.lang.Integer r1 = (java.lang.Integer) r1
            int r1 = r1.intValue()
            r2 = 5
            r2 = r9[r2]
            java.lang.Integer r2 = (java.lang.Integer) r2
            int r2 = r2.intValue()
            r8.updateSearchButtons(r0, r1, r2)
            org.telegram.ui.ActionBar.ActionBarMenuItem r0 = r8.searchItem
            if (r0 == 0) goto L_0x29fc
            r1 = 0
            r0.setShowSearchProgress(r1)
        L_0x29fc:
            org.telegram.ui.Adapters.MessagesSearchAdapter r0 = r8.messagesSearchAdapter
            if (r0 == 0) goto L_0x30bd
            r0.notifyDataSetChanged()
            goto L_0x30bd
        L_0x2a05:
            r10 = 2
            int r1 = org.telegram.messenger.NotificationCenter.chatSearchResultsLoading
            if (r0 != r1) goto L_0x2a28
            int r0 = r8.classGuid
            r1 = 0
            r1 = r9[r1]
            java.lang.Integer r1 = (java.lang.Integer) r1
            int r1 = r1.intValue()
            if (r0 != r1) goto L_0x30bd
            org.telegram.ui.ActionBar.ActionBarMenuItem r0 = r8.searchItem
            if (r0 == 0) goto L_0x2a1f
            r1 = 1
            r0.setShowSearchProgress(r1)
        L_0x2a1f:
            org.telegram.ui.Adapters.MessagesSearchAdapter r0 = r8.messagesSearchAdapter
            if (r0 == 0) goto L_0x30bd
            r0.notifyDataSetChanged()
            goto L_0x30bd
        L_0x2a28:
            int r1 = org.telegram.messenger.NotificationCenter.didUpdateMessagesViews
            if (r0 != r1) goto L_0x2CLASSNAME
            r1 = 0
            r0 = r9[r1]
            android.util.SparseArray r0 = (android.util.SparseArray) r0
            r1 = 1
            r2 = r9[r1]
            android.util.SparseArray r2 = (android.util.SparseArray) r2
            r1 = r9[r10]
            android.util.SparseArray r1 = (android.util.SparseArray) r1
            r4 = 3
            r5 = r9[r4]
            java.lang.Boolean r5 = (java.lang.Boolean) r5
            boolean r4 = r5.booleanValue()
            r5 = r3
            r6 = 0
        L_0x2a45:
            if (r6 >= r10) goto L_0x2ab9
            if (r6 != 0) goto L_0x2a4b
            r7 = r0
            goto L_0x2a4c
        L_0x2a4b:
            r7 = r2
        L_0x2a4c:
            if (r7 != 0) goto L_0x2a4f
            goto L_0x2ab6
        L_0x2a4f:
            long r13 = r8.dialog_id
            int r9 = (int) r13
            java.lang.Object r7 = r7.get(r9)
            android.util.SparseIntArray r7 = (android.util.SparseIntArray) r7
            if (r7 == 0) goto L_0x2ab6
            r9 = 0
        L_0x2a5b:
            int r11 = r7.size()
            if (r9 >= r11) goto L_0x2ab6
            int r11 = r7.keyAt(r9)
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r13 = r8.messagesDict
            r14 = 0
            r13 = r13[r14]
            java.lang.Object r13 = r13.get(r11)
            org.telegram.messenger.MessageObject r13 = (org.telegram.messenger.MessageObject) r13
            if (r13 == 0) goto L_0x2ab3
            int r11 = r7.get(r11)
            if (r6 != 0) goto L_0x2a82
            org.telegram.tgnet.TLRPC$Message r14 = r13.messageOwner
            int r15 = r14.views
            if (r11 > r15) goto L_0x2a7f
            goto L_0x2ab3
        L_0x2a7f:
            r14.views = r11
            goto L_0x2a8b
        L_0x2a82:
            org.telegram.tgnet.TLRPC$Message r14 = r13.messageOwner
            int r15 = r14.forwards
            if (r11 > r15) goto L_0x2a89
            goto L_0x2ab3
        L_0x2a89:
            r14.forwards = r11
        L_0x2a8b:
            boolean r11 = r13.hasValidGroupId()
            if (r11 == 0) goto L_0x2aab
            android.util.LongSparseArray<org.telegram.messenger.MessageObject$GroupedMessages> r11 = r8.groupedMessagesMap
            long r14 = r13.getGroupId()
            java.lang.Object r11 = r11.get(r14)
            org.telegram.messenger.MessageObject$GroupedMessages r11 = (org.telegram.messenger.MessageObject.GroupedMessages) r11
            if (r11 == 0) goto L_0x2aab
            if (r5 != 0) goto L_0x2aa6
            android.util.LongSparseArray r5 = new android.util.LongSparseArray
            r5.<init>()
        L_0x2aa6:
            long r14 = r11.groupId
            r5.put(r14, r11)
        L_0x2aab:
            org.telegram.ui.ChatActivity$ChatActivityAdapter r11 = r8.chatAdapter
            if (r11 == 0) goto L_0x2ab3
            r14 = 0
            r11.updateRowWithMessageObject(r13, r14)
        L_0x2ab3:
            int r9 = r9 + 1
            goto L_0x2a5b
        L_0x2ab6:
            int r6 = r6 + 1
            goto L_0x2a45
        L_0x2ab9:
            if (r1 == 0) goto L_0x2CLASSNAME
            long r6 = r8.dialog_id
            int r0 = (int) r6
            java.lang.Object r0 = r1.get(r0)
            android.util.SparseArray r0 = (android.util.SparseArray) r0
            org.telegram.messenger.MessageObject r1 = r8.threadMessageObject
            if (r1 == 0) goto L_0x2b04
            org.telegram.ui.ActionBar.ActionBarLayout r1 = r8.parentLayout
            if (r1 == 0) goto L_0x2b04
            java.util.ArrayList<org.telegram.ui.ActionBar.BaseFragment> r1 = r1.fragmentsStack
            int r1 = r1.size()
            r2 = 1
            int r1 = r1 - r2
            r2 = 0
        L_0x2ad5:
            if (r2 >= r1) goto L_0x2b04
            org.telegram.ui.ActionBar.ActionBarLayout r6 = r8.parentLayout
            java.util.ArrayList<org.telegram.ui.ActionBar.BaseFragment> r6 = r6.fragmentsStack
            java.lang.Object r6 = r6.get(r2)
            org.telegram.ui.ActionBar.BaseFragment r6 = (org.telegram.ui.ActionBar.BaseFragment) r6
            if (r6 == r8) goto L_0x2b01
            boolean r7 = r6 instanceof org.telegram.ui.ChatActivity
            if (r7 == 0) goto L_0x2b01
            org.telegram.ui.ChatActivity r6 = (org.telegram.ui.ChatActivity) r6
            boolean r7 = r6.needRemovePreviousSameChatActivity
            if (r7 == 0) goto L_0x2b01
            long r9 = r6.dialog_id
            long r13 = r8.dialog_id
            int r7 = (r9 > r13 ? 1 : (r9 == r13 ? 0 : -1))
            if (r7 != 0) goto L_0x2b01
            int r6 = r6.getChatMode()
            int r7 = r53.getChatMode()
            if (r6 != r7) goto L_0x2b01
            r1 = 1
            goto L_0x2b05
        L_0x2b01:
            int r2 = r2 + 1
            goto L_0x2ad5
        L_0x2b04:
            r1 = 0
        L_0x2b05:
            if (r0 == 0) goto L_0x2CLASSNAME
            r15 = r3
            r2 = 0
            r3 = 0
        L_0x2b0a:
            int r6 = r0.size()
            if (r3 >= r6) goto L_0x2CLASSNAME
            int r6 = r0.keyAt(r3)
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r7 = r8.messagesDict
            r9 = 0
            r7 = r7[r9]
            java.lang.Object r7 = r7.get(r6)
            org.telegram.messenger.MessageObject r7 = (org.telegram.messenger.MessageObject) r7
            if (r7 == 0) goto L_0x2CLASSNAME
            org.telegram.messenger.MessageObject r9 = r8.threadMessageObject
            if (r7 == r9) goto L_0x2CLASSNAME
            java.lang.Object r6 = r0.get(r6)
            org.telegram.tgnet.TLRPC$TL_messageReplies r6 = (org.telegram.tgnet.TLRPC$TL_messageReplies) r6
            if (r6 == 0) goto L_0x2CLASSNAME
            if (r4 != 0) goto L_0x2b49
            org.telegram.tgnet.TLRPC$Message r9 = r7.messageOwner
            org.telegram.tgnet.TLRPC$TL_messageReplies r9 = r9.replies
            if (r9 == 0) goto L_0x2b49
            int r10 = r6.replies_pts
            int r11 = r9.replies_pts
            if (r10 > r11) goto L_0x2b49
            int r10 = r6.read_max_id
            int r11 = r9.read_max_id
            if (r10 > r11) goto L_0x2b49
            int r10 = r6.max_id
            int r9 = r9.max_id
            if (r10 > r9) goto L_0x2b49
            goto L_0x2CLASSNAME
        L_0x2b49:
            if (r4 == 0) goto L_0x2ba3
            if (r1 != 0) goto L_0x2bb3
            org.telegram.tgnet.TLRPC$Message r2 = r7.messageOwner
            org.telegram.tgnet.TLRPC$TL_messageReplies r9 = r2.replies
            if (r9 != 0) goto L_0x2b5a
            org.telegram.tgnet.TLRPC$TL_messageReplies r9 = new org.telegram.tgnet.TLRPC$TL_messageReplies
            r9.<init>()
            r2.replies = r9
        L_0x2b5a:
            org.telegram.tgnet.TLRPC$Message r2 = r7.messageOwner
            org.telegram.tgnet.TLRPC$TL_messageReplies r2 = r2.replies
            int r9 = r2.replies
            int r10 = r6.replies
            int r9 = r9 + r10
            r2.replies = r9
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Peer> r2 = r6.recent_repliers
            int r2 = r2.size()
            r9 = 0
        L_0x2b6c:
            if (r9 >= r2) goto L_0x2b80
            org.telegram.tgnet.TLRPC$Message r10 = r7.messageOwner
            org.telegram.tgnet.TLRPC$TL_messageReplies r10 = r10.replies
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Peer> r10 = r10.recent_repliers
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Peer> r11 = r6.recent_repliers
            java.lang.Object r11 = r11.get(r9)
            r10.remove(r11)
            int r9 = r9 + 1
            goto L_0x2b6c
        L_0x2b80:
            org.telegram.tgnet.TLRPC$Message r2 = r7.messageOwner
            org.telegram.tgnet.TLRPC$TL_messageReplies r2 = r2.replies
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Peer> r2 = r2.recent_repliers
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Peer> r6 = r6.recent_repliers
            r9 = 0
            r2.addAll(r9, r6)
        L_0x2b8c:
            org.telegram.tgnet.TLRPC$Message r2 = r7.messageOwner
            org.telegram.tgnet.TLRPC$TL_messageReplies r2 = r2.replies
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Peer> r2 = r2.recent_repliers
            int r2 = r2.size()
            r6 = 3
            if (r2 <= r6) goto L_0x2bb3
            org.telegram.tgnet.TLRPC$Message r2 = r7.messageOwner
            org.telegram.tgnet.TLRPC$TL_messageReplies r2 = r2.replies
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Peer> r2 = r2.recent_repliers
            r2.remove(r9)
            goto L_0x2b8c
        L_0x2ba3:
            org.telegram.tgnet.TLRPC$Message r2 = r7.messageOwner
            org.telegram.tgnet.TLRPC$TL_messageReplies r9 = r2.replies
            if (r9 == 0) goto L_0x2bb1
            int r9 = r9.read_max_id
            int r10 = r6.read_max_id
            if (r9 <= r10) goto L_0x2bb1
            r6.read_max_id = r9
        L_0x2bb1:
            r2.replies = r6
        L_0x2bb3:
            boolean r2 = r7.hasValidGroupId()
            if (r2 == 0) goto L_0x2bea
            android.util.LongSparseArray<org.telegram.messenger.MessageObject$GroupedMessages> r2 = r8.groupedMessagesMap
            long r6 = r7.getGroupId()
            java.lang.Object r2 = r2.get(r6)
            org.telegram.messenger.MessageObject$GroupedMessages r2 = (org.telegram.messenger.MessageObject.GroupedMessages) r2
            if (r2 == 0) goto L_0x2c0f
            if (r5 != 0) goto L_0x2bce
            android.util.LongSparseArray r5 = new android.util.LongSparseArray
            r5.<init>()
        L_0x2bce:
            long r6 = r2.groupId
            r5.put(r6, r2)
            java.util.ArrayList<org.telegram.messenger.MessageObject> r6 = r2.messages
            int r6 = r6.size()
            r7 = 0
        L_0x2bda:
            if (r7 >= r6) goto L_0x2c0f
            java.util.ArrayList<org.telegram.messenger.MessageObject> r9 = r2.messages
            java.lang.Object r9 = r9.get(r7)
            org.telegram.messenger.MessageObject r9 = (org.telegram.messenger.MessageObject) r9
            r10 = 1
            r9.animateComments = r10
            int r7 = r7 + 1
            goto L_0x2bda
        L_0x2bea:
            org.telegram.ui.ChatActivity$ChatActivityAdapter r2 = r8.chatAdapter
            if (r2 == 0) goto L_0x2c0f
            java.util.ArrayList<org.telegram.messenger.MessageObject> r2 = r8.messages
            int r2 = r2.indexOf(r7)
            if (r2 < 0) goto L_0x2c0c
            if (r15 != 0) goto L_0x2bfe
            java.util.ArrayList r6 = new java.util.ArrayList
            r6.<init>()
            r15 = r6
        L_0x2bfe:
            org.telegram.ui.ChatActivity$ChatActivityAdapter r6 = r8.chatAdapter
            int r6 = r6.messagesStartRow
            int r2 = r2 + r6
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r15.add(r2)
        L_0x2c0c:
            r2 = 1
            r7.animateComments = r2
        L_0x2c0f:
            r2 = 1
        L_0x2CLASSNAME:
            int r3 = r3 + 1
            goto L_0x2b0a
        L_0x2CLASSNAME:
            r15 = r3
            r2 = 0
        L_0x2CLASSNAME:
            if (r2 == 0) goto L_0x30bd
            org.telegram.ui.ChatActivity$ChatActivityAdapter r0 = r8.chatAdapter
            if (r0 == 0) goto L_0x2c6f
            if (r5 == 0) goto L_0x2CLASSNAME
            int r0 = r5.size()
            r1 = 0
        L_0x2CLASSNAME:
            if (r1 >= r0) goto L_0x2CLASSNAME
            java.lang.Object r2 = r5.valueAt(r1)
            org.telegram.messenger.MessageObject$GroupedMessages r2 = (org.telegram.messenger.MessageObject.GroupedMessages) r2
            java.util.ArrayList<org.telegram.messenger.MessageObject> r3 = r2.messages
            int r4 = r3.size()
            r6 = 1
            int r4 = r4 - r6
            java.lang.Object r3 = r3.get(r4)
            org.telegram.messenger.MessageObject r3 = (org.telegram.messenger.MessageObject) r3
            java.util.ArrayList<org.telegram.messenger.MessageObject> r4 = r8.messages
            int r3 = r4.indexOf(r3)
            if (r3 < 0) goto L_0x2CLASSNAME
            org.telegram.ui.ChatActivity$ChatActivityAdapter r4 = r8.chatAdapter
            int r6 = r4.messagesStartRow
            int r3 = r3 + r6
            java.util.ArrayList<org.telegram.messenger.MessageObject> r2 = r2.messages
            int r2 = r2.size()
            r4.notifyItemRangeChanged(r3, r2)
        L_0x2CLASSNAME:
            int r1 = r1 + 1
            goto L_0x2CLASSNAME
        L_0x2CLASSNAME:
            if (r15 == 0) goto L_0x2c6f
            int r0 = r15.size()
            r1 = 0
        L_0x2c5b:
            if (r1 >= r0) goto L_0x2c6f
            org.telegram.ui.ChatActivity$ChatActivityAdapter r2 = r8.chatAdapter
            java.lang.Object r3 = r15.get(r1)
            java.lang.Integer r3 = (java.lang.Integer) r3
            int r3 = r3.intValue()
            r2.notifyItemChanged(r3)
            int r1 = r1 + 1
            goto L_0x2c5b
        L_0x2c6f:
            r53.updateVisibleRows()
            r1 = 1
            r8.updateReplyMessageHeader(r1)
            goto L_0x30bd
        L_0x2CLASSNAME:
            int r1 = org.telegram.messenger.NotificationCenter.peerSettingsDidLoad
            if (r0 != r1) goto L_0x2ca2
            r1 = 0
            r0 = r9[r1]
            java.lang.Long r0 = (java.lang.Long) r0
            long r0 = r0.longValue()
            long r2 = r8.dialog_id
            int r4 = (r0 > r2 ? 1 : (r0 == r2 ? 0 : -1))
            if (r4 == 0) goto L_0x2CLASSNAME
            org.telegram.tgnet.TLRPC$User r2 = r8.currentUser
            if (r2 == 0) goto L_0x30bd
            int r2 = r2.id
            long r2 = (long) r2
            int r4 = (r2 > r0 ? 1 : (r2 == r0 ? 0 : -1))
            if (r4 != 0) goto L_0x30bd
        L_0x2CLASSNAME:
            boolean r0 = r8.paused
            r1 = 1
            r0 = r0 ^ r1
            r8.updateTopPanel(r0)
            r8.updateInfoTopView(r1)
            goto L_0x30bd
        L_0x2ca2:
            r1 = 1
            int r3 = org.telegram.messenger.NotificationCenter.newDraftReceived
            if (r0 != r3) goto L_0x2cbb
            r3 = 0
            r0 = r9[r3]
            java.lang.Long r0 = (java.lang.Long) r0
            long r2 = r0.longValue()
            long r4 = r8.dialog_id
            int r0 = (r2 > r4 ? 1 : (r2 == r4 ? 0 : -1))
            if (r0 != 0) goto L_0x30bd
            r8.applyDraftMaybe(r1)
            goto L_0x30bd
        L_0x2cbb:
            int r1 = org.telegram.messenger.NotificationCenter.pinnedInfoDidLoad
            if (r0 != r1) goto L_0x2d5a
            r1 = 0
            r0 = r9[r1]
            java.lang.Long r0 = (java.lang.Long) r0
            long r0 = r0.longValue()
            long r2 = r8.dialog_id
            int r4 = (r0 > r2 ? 1 : (r0 == r2 ? 0 : -1))
            if (r4 != 0) goto L_0x30bd
            r1 = 1
            r0 = r9[r1]
            java.util.ArrayList r0 = (java.util.ArrayList) r0
            int r1 = r8.chatMode
            if (r1 != r10) goto L_0x2cea
            java.util.ArrayList r1 = new java.util.ArrayList
            r1.<init>(r0)
            r8.pinnedMessageIds = r1
            java.util.HashMap r0 = new java.util.HashMap
            r1 = r9[r10]
            java.util.HashMap r1 = (java.util.HashMap) r1
            r0.<init>(r1)
            r8.pinnedMessageObjects = r0
            goto L_0x2cf2
        L_0x2cea:
            r8.pinnedMessageIds = r0
            r0 = r9[r10]
            java.util.HashMap r0 = (java.util.HashMap) r0
            r8.pinnedMessageObjects = r0
        L_0x2cf2:
            java.util.ArrayList<java.lang.Integer> r0 = r8.pinnedMessageIds
            int r0 = r0.size()
            r8.loadedPinnedMessagesCount = r0
            r0 = 3
            r0 = r9[r0]
            java.lang.Integer r0 = (java.lang.Integer) r0
            int r0 = r0.intValue()
            r8.totalPinnedMessagesCount = r0
            r0 = 4
            r0 = r9[r0]
            java.lang.Boolean r0 = (java.lang.Boolean) r0
            boolean r0 = r0.booleanValue()
            r8.pinnedEndReached = r0
            org.telegram.messenger.MediaDataController r1 = r53.getMediaDataController()
            java.util.ArrayList r2 = new java.util.ArrayList
            java.util.HashMap<java.lang.Integer, org.telegram.messenger.MessageObject> r0 = r8.pinnedMessageObjects
            java.util.Collection r0 = r0.values()
            r2.<init>(r0)
            long r3 = r8.dialog_id
            r5 = 0
            r6 = 0
            r1.loadReplyMessagesForMessages(r2, r3, r5, r6)
            boolean r0 = r8.loadingPinnedMessagesList
            if (r0 != 0) goto L_0x30bd
            int r0 = r8.totalPinnedMessagesCount
            if (r0 != 0) goto L_0x30bd
            boolean r0 = r8.pinnedEndReached
            if (r0 != 0) goto L_0x30bd
            org.telegram.messenger.MediaDataController r0 = r53.getMediaDataController()
            long r1 = r8.dialog_id
            java.util.ArrayList<java.lang.Integer> r3 = r8.pinnedMessageIds
            boolean r3 = r3.isEmpty()
            if (r3 == 0) goto L_0x2d43
            r3 = 0
            r4 = 0
            goto L_0x2d52
        L_0x2d43:
            java.util.ArrayList<java.lang.Integer> r3 = r8.pinnedMessageIds
            r4 = 0
            java.lang.Object r3 = r3.get(r4)
            java.lang.Integer r3 = (java.lang.Integer) r3
            int r34 = r3.intValue()
            r3 = r34
        L_0x2d52:
            r0.loadPinnedMessages(r1, r4, r3)
            r1 = 1
            r8.loadingPinnedMessagesList = r1
            goto L_0x30bd
        L_0x2d5a:
            r4 = 0
            int r1 = org.telegram.messenger.NotificationCenter.userInfoDidLoad
            if (r0 != r1) goto L_0x2ddb
            r0 = r9[r4]
            java.lang.Integer r0 = (java.lang.Integer) r0
            org.telegram.tgnet.TLRPC$User r1 = r8.currentUser
            if (r1 == 0) goto L_0x30bd
            int r1 = r1.id
            int r0 = r0.intValue()
            if (r1 != r0) goto L_0x30bd
            r1 = 1
            r0 = r9[r1]
            org.telegram.tgnet.TLRPC$UserFull r0 = (org.telegram.tgnet.TLRPC$UserFull) r0
            r8.userInfo = r0
            org.telegram.ui.ActionBar.ActionBarMenuItem r0 = r8.headerItem
            if (r0 == 0) goto L_0x2da7
            org.telegram.tgnet.TLRPC$UserFull r0 = r8.userInfo
            boolean r0 = r0.phone_calls_available
            if (r0 == 0) goto L_0x2d9b
            org.telegram.ui.ActionBar.ActionBarMenuItem r0 = r8.headerItem
            r0.showSubItem(r2)
            org.telegram.tgnet.TLRPC$UserFull r0 = r8.userInfo
            boolean r0 = r0.video_calls_available
            if (r0 == 0) goto L_0x2d93
            org.telegram.ui.ActionBar.ActionBarMenuItem r0 = r8.headerItem
            r1 = 33
            r0.showSubItem(r1)
            goto L_0x2da7
        L_0x2d93:
            org.telegram.ui.ActionBar.ActionBarMenuItem r0 = r8.headerItem
            r1 = 33
            r0.hideSubItem(r1)
            goto L_0x2da7
        L_0x2d9b:
            org.telegram.ui.ActionBar.ActionBarMenuItem r0 = r8.headerItem
            r0.hideSubItem(r2)
            org.telegram.ui.ActionBar.ActionBarMenuItem r0 = r8.headerItem
            r1 = 33
            r0.hideSubItem(r1)
        L_0x2da7:
            r1 = 0
            r8.checkActionBarMenu(r1)
            boolean r0 = r8.loadingPinnedMessagesList
            if (r0 != 0) goto L_0x30bd
            java.util.ArrayList<java.lang.Integer> r0 = r8.pinnedMessageIds
            boolean r0 = r0.isEmpty()
            if (r0 != 0) goto L_0x30bd
            org.telegram.tgnet.TLRPC$UserFull r0 = r8.userInfo
            int r0 = r0.pinned_msg_id
            java.util.ArrayList<java.lang.Integer> r2 = r8.pinnedMessageIds
            java.lang.Object r2 = r2.get(r1)
            java.lang.Integer r2 = (java.lang.Integer) r2
            int r2 = r2.intValue()
            if (r0 <= r2) goto L_0x30bd
            org.telegram.messenger.MediaDataController r0 = r53.getMediaDataController()
            long r2 = r8.dialog_id
            org.telegram.tgnet.TLRPC$UserFull r4 = r8.userInfo
            int r4 = r4.pinned_msg_id
            r0.loadPinnedMessages(r2, r1, r4)
            r1 = 1
            r8.loadingPinnedMessagesList = r1
            goto L_0x30bd
        L_0x2ddb:
            int r1 = org.telegram.messenger.NotificationCenter.didSetNewWallpapper
            if (r0 != r1) goto L_0x2e1c
            android.view.View r0 = r8.fragmentView
            if (r0 == 0) goto L_0x30bd
            org.telegram.ui.Components.SizeNotifierFrameLayout r0 = r8.contentView
            android.graphics.drawable.Drawable r1 = org.telegram.ui.ActionBar.Theme.getCachedWallpaper()
            boolean r2 = org.telegram.ui.ActionBar.Theme.isWallpaperMotion()
            r0.setBackgroundImage(r1, r2)
            android.view.View r0 = r8.progressView2
            android.graphics.drawable.Drawable r0 = r0.getBackground()
            android.graphics.PorterDuffColorFilter r1 = org.telegram.ui.ActionBar.Theme.colorFilter
            r0.setColorFilter(r1)
            android.widget.TextView r0 = r8.emptyView
            if (r0 == 0) goto L_0x2e08
            android.graphics.drawable.Drawable r0 = r0.getBackground()
            android.graphics.PorterDuffColorFilter r1 = org.telegram.ui.ActionBar.Theme.colorFilter
            r0.setColorFilter(r1)
        L_0x2e08:
            org.telegram.ui.Components.ChatBigEmptyView r0 = r8.bigEmptyView
            if (r0 == 0) goto L_0x2e15
            android.graphics.drawable.Drawable r0 = r0.getBackground()
            android.graphics.PorterDuffColorFilter r1 = org.telegram.ui.ActionBar.Theme.colorFilter
            r0.setColorFilter(r1)
        L_0x2e15:
            org.telegram.ui.Components.RecyclerListView r0 = r8.chatListView
            r0.invalidateViews()
            goto L_0x30bd
        L_0x2e1c:
            int r1 = org.telegram.messenger.NotificationCenter.didApplyNewTheme
            if (r0 != r1) goto L_0x2e76
            org.telegram.ui.Components.UndoView r0 = r8.undoView
            if (r0 == 0) goto L_0x2e75
            boolean r0 = r8.paused
            if (r0 == 0) goto L_0x2e29
            goto L_0x2e75
        L_0x2e29:
            r1 = 0
            r0 = r9[r1]
            org.telegram.ui.ActionBar.Theme$ThemeInfo r0 = (org.telegram.ui.ActionBar.Theme.ThemeInfo) r0
            r1 = 1
            r2 = r9[r1]
            org.telegram.ui.ActionBar.Theme$ThemeAccent r2 = (org.telegram.ui.ActionBar.Theme.ThemeAccent) r2
            boolean r1 = r0.firstAccentIsDefault
            if (r1 == 0) goto L_0x2e75
            if (r2 == 0) goto L_0x2e75
            int r1 = r2.id
            int r3 = org.telegram.ui.ActionBar.Theme.DEFALT_THEME_ACCENT_ID
            if (r1 == r3) goto L_0x2e40
            goto L_0x2e75
        L_0x2e40:
            android.content.SharedPreferences r1 = org.telegram.messenger.MessagesController.getGlobalMainSettings()
            java.lang.String r3 = "themehint"
            r4 = 0
            boolean r3 = r1.getBoolean(r3, r4)
            if (r3 == 0) goto L_0x2e4e
            return
        L_0x2e4e:
            android.content.SharedPreferences$Editor r1 = r1.edit()
            java.lang.String r3 = "themehint"
            r4 = 1
            android.content.SharedPreferences$Editor r1 = r1.putBoolean(r3, r4)
            r1.commit()
            r1 = r9[r10]
            java.lang.Boolean r1 = (java.lang.Boolean) r1
            boolean r1 = r1.booleanValue()
            org.telegram.ui.Components.UndoView r9 = r8.undoView
            r10 = 0
            r12 = 12
            r13 = 0
            org.telegram.ui.-$$Lambda$ChatActivity$RxjBLO-i2N-JucIXbwSp8OIu93Q r14 = new org.telegram.ui.-$$Lambda$ChatActivity$RxjBLO-i2N-JucIXbwSp8OIu93Q
            r14.<init>(r0, r1)
            r9.showWithAction(r10, r12, r13, r14)
            goto L_0x30bd
        L_0x2e75:
            return
        L_0x2e76:
            int r1 = org.telegram.messenger.NotificationCenter.goingToPreviewTheme
            if (r0 != r1) goto L_0x2ead
            androidx.recyclerview.widget.GridLayoutManagerFixed r0 = r8.chatLayoutManager
            if (r0 == 0) goto L_0x30bd
            int r0 = r0.findFirstVisibleItemPosition()
            r8.scrollToPositionOnRecreate = r0
            org.telegram.ui.Components.RecyclerListView r0 = r8.chatListView
            int r1 = r8.scrollToPositionOnRecreate
            androidx.recyclerview.widget.RecyclerView$ViewHolder r0 = r0.findViewHolderForAdapterPosition(r1)
            org.telegram.ui.Components.RecyclerListView$Holder r0 = (org.telegram.ui.Components.RecyclerListView.Holder) r0
            if (r0 == 0) goto L_0x2ea8
            org.telegram.ui.Components.RecyclerListView r1 = r8.chatListView
            int r1 = r1.getMeasuredHeight()
            android.view.View r0 = r0.itemView
            int r0 = r0.getBottom()
            int r1 = r1 - r0
            org.telegram.ui.Components.RecyclerListView r0 = r8.chatListView
            int r0 = r0.getPaddingBottom()
            int r1 = r1 - r0
            r8.scrollToOffsetOnRecreate = r1
            goto L_0x30bd
        L_0x2ea8:
            r0 = -1
            r8.scrollToPositionOnRecreate = r0
            goto L_0x30bd
        L_0x2ead:
            int r1 = org.telegram.messenger.NotificationCenter.channelRightsUpdated
            if (r0 != r1) goto L_0x2ede
            r1 = 0
            r0 = r9[r1]
            org.telegram.tgnet.TLRPC$Chat r0 = (org.telegram.tgnet.TLRPC$Chat) r0
            org.telegram.tgnet.TLRPC$Chat r1 = r8.currentChat
            if (r1 == 0) goto L_0x30bd
            int r1 = r0.id
            org.telegram.tgnet.TLRPC$Chat r2 = r8.currentChat
            int r2 = r2.id
            if (r1 != r2) goto L_0x30bd
            org.telegram.ui.Components.ChatActivityEnterView r1 = r8.chatActivityEnterView
            if (r1 == 0) goto L_0x30bd
            r8.currentChat = r0
            org.telegram.ui.Components.ChatActivityEnterView r0 = r8.chatActivityEnterView
            r0.checkChannelRights()
            r53.checkRaiseSensors()
            r53.updateSecretStatus()
            org.telegram.tgnet.TLRPC$Chat r0 = r8.currentChat
            boolean r0 = r0.gigagroup
            if (r0 == 0) goto L_0x30bd
            r53.updateBottomOverlay()
            goto L_0x30bd
        L_0x2ede:
            int r1 = org.telegram.messenger.NotificationCenter.updateMentionsCount
            if (r0 != r1) goto L_0x2var_
            long r0 = r8.dialog_id
            r2 = 0
            r3 = r9[r2]
            java.lang.Long r3 = (java.lang.Long) r3
            long r2 = r3.longValue()
            int r4 = (r0 > r2 ? 1 : (r0 == r2 ? 0 : -1))
            if (r4 != 0) goto L_0x30bd
            r1 = 1
            r0 = r9[r1]
            java.lang.Integer r0 = (java.lang.Integer) r0
            int r0 = r0.intValue()
            int r2 = r8.newMentionsCount
            if (r2 <= r0) goto L_0x30bd
            r8.newMentionsCount = r0
            if (r0 > 0) goto L_0x2f0c
            r2 = 0
            r8.newMentionsCount = r2
            r8.hasAllMentionsLocal = r1
            r8.showMentionDownButton(r2, r1)
            goto L_0x30bd
        L_0x2f0c:
            r2 = 0
            org.telegram.ui.ActionBar.SimpleTextView r0 = r8.mentiondownButtonCounter
            java.lang.Object[] r1 = new java.lang.Object[r1]
            int r3 = r8.newMentionsCount
            java.lang.Integer r3 = java.lang.Integer.valueOf(r3)
            r1[r2] = r3
            java.lang.String r2 = "%d"
            java.lang.String r1 = java.lang.String.format(r2, r1)
            r0.setText(r1)
            goto L_0x30bd
        L_0x2var_:
            r2 = 0
            int r1 = org.telegram.messenger.NotificationCenter.audioRecordTooShort
            if (r0 != r1) goto L_0x2var_
            r0 = r9[r2]
            java.lang.Integer r0 = (java.lang.Integer) r0
            int r0 = r0.intValue()
            int r1 = r8.classGuid
            if (r0 == r1) goto L_0x2var_
            return
        L_0x2var_:
            r0 = r9[r10]
            java.lang.Integer r0 = (java.lang.Integer) r0
            int r0 = r0.intValue()
            r1 = 100
            if (r0 >= r1) goto L_0x30bd
            r1 = 1
            r0 = r9[r1]
            java.lang.Boolean r0 = (java.lang.Boolean) r0
            boolean r0 = r0.booleanValue()
            r1 = 0
            r8.showVoiceHint(r1, r0)
            goto L_0x30bd
        L_0x2var_:
            r1 = 0
            int r2 = org.telegram.messenger.NotificationCenter.videoLoadingStateChanged
            if (r0 != r2) goto L_0x2f8c
            org.telegram.ui.Components.RecyclerListView r0 = r8.chatListView
            if (r0 == 0) goto L_0x30bd
            r2 = r9[r1]
            java.lang.String r2 = (java.lang.String) r2
            int r0 = r0.getChildCount()
            r1 = 0
        L_0x2var_:
            if (r1 >= r0) goto L_0x30bd
            org.telegram.ui.Components.RecyclerListView r3 = r8.chatListView
            android.view.View r3 = r3.getChildAt(r1)
            boolean r4 = r3 instanceof org.telegram.ui.Cells.ChatMessageCell
            if (r4 != 0) goto L_0x2var_
        L_0x2f6f:
            r5 = 0
            goto L_0x2var_
        L_0x2var_:
            org.telegram.ui.Cells.ChatMessageCell r3 = (org.telegram.ui.Cells.ChatMessageCell) r3
            org.telegram.tgnet.TLRPC$Document r4 = r3.getStreamingMedia()
            if (r4 != 0) goto L_0x2f7a
            goto L_0x2f6f
        L_0x2f7a:
            java.lang.String r4 = org.telegram.messenger.FileLoader.getAttachFileName(r4)
            boolean r4 = r4.equals(r2)
            if (r4 == 0) goto L_0x2f6f
            r4 = 1
            r5 = 0
            r3.updateButtonState(r5, r4, r5)
        L_0x2var_:
            int r1 = r1 + 1
            goto L_0x2var_
        L_0x2f8c:
            r5 = 0
            int r1 = org.telegram.messenger.NotificationCenter.scheduledMessagesUpdated
            if (r0 != r1) goto L_0x2fb1
            r0 = r9[r5]
            java.lang.Long r0 = (java.lang.Long) r0
            long r0 = r0.longValue()
            long r2 = r8.dialog_id
            int r4 = (r2 > r0 ? 1 : (r2 == r0 ? 0 : -1))
            if (r4 != 0) goto L_0x30bd
            r1 = 1
            r0 = r9[r1]
            java.lang.Integer r0 = (java.lang.Integer) r0
            int r0 = r0.intValue()
            r8.scheduledMessagesCount = r0
            boolean r0 = r8.openAnimationEnded
            r8.updateScheduledInterface(r0)
            goto L_0x30bd
        L_0x2fb1:
            int r1 = org.telegram.messenger.NotificationCenter.diceStickersDidLoad
            if (r0 != r1) goto L_0x2fdf
            org.telegram.ui.Components.RecyclerListView r0 = r8.chatListView
            if (r0 != 0) goto L_0x2fba
            return
        L_0x2fba:
            int r0 = r0.getChildCount()
            r15 = 0
        L_0x2fbf:
            if (r15 >= r0) goto L_0x30bd
            org.telegram.ui.Components.RecyclerListView r1 = r8.chatListView
            android.view.View r1 = r1.getChildAt(r15)
            boolean r2 = r1 instanceof org.telegram.ui.Cells.ChatMessageCell
            if (r2 != 0) goto L_0x2fcc
            goto L_0x2fdc
        L_0x2fcc:
            org.telegram.ui.Cells.ChatMessageCell r1 = (org.telegram.ui.Cells.ChatMessageCell) r1
            org.telegram.messenger.MessageObject r2 = r1.getMessageObject()
            boolean r2 = r2.isDice()
            if (r2 == 0) goto L_0x2fdc
            r2 = 1
            r1.setCurrentDiceValue(r2)
        L_0x2fdc:
            int r15 = r15 + 1
            goto L_0x2fbf
        L_0x2fdf:
            int r1 = org.telegram.messenger.NotificationCenter.dialogDeleted
            if (r0 != r1) goto L_0x30bd
            r1 = 0
            r0 = r9[r1]
            java.lang.Long r0 = (java.lang.Long) r0
            long r0 = r0.longValue()
            long r2 = r8.dialog_id
            int r4 = (r0 > r2 ? 1 : (r0 == r2 ? 0 : -1))
            if (r4 != 0) goto L_0x30bd
            org.telegram.ui.ActionBar.ActionBarLayout r0 = r8.parentLayout
            if (r0 == 0) goto L_0x300d
            java.util.ArrayList<org.telegram.ui.ActionBar.BaseFragment> r0 = r0.fragmentsStack
            org.telegram.ui.ActionBar.ActionBarLayout r1 = r8.parentLayout
            java.util.ArrayList<org.telegram.ui.ActionBar.BaseFragment> r1 = r1.fragmentsStack
            int r1 = r1.size()
            r2 = 1
            int r1 = r1 - r2
            java.lang.Object r0 = r0.get(r1)
            if (r0 != r8) goto L_0x300d
            r53.finishFragment()
            goto L_0x30bd
        L_0x300d:
            r53.removeSelfFromStack()
            goto L_0x30bd
        L_0x3012:
            if (r0 != r1) goto L_0x3017
            r53.destroyTextureView()
        L_0x3017:
            org.telegram.ui.Components.RecyclerListView r0 = r8.chatListView
            if (r0 == 0) goto L_0x30bd
            int r0 = r0.getChildCount()
            r14 = 0
        L_0x3020:
            if (r14 >= r0) goto L_0x308b
            org.telegram.ui.Components.RecyclerListView r1 = r8.chatListView
            android.view.View r1 = r1.getChildAt(r14)
            boolean r2 = r1 instanceof org.telegram.ui.Cells.ChatMessageCell
            if (r2 == 0) goto L_0x3088
            org.telegram.ui.Cells.ChatMessageCell r1 = (org.telegram.ui.Cells.ChatMessageCell) r1
            org.telegram.messenger.MessageObject r2 = r1.getMessageObject()
            if (r2 == 0) goto L_0x3088
            boolean r3 = r2.isVoice()
            if (r3 != 0) goto L_0x3083
            boolean r3 = r2.isMusic()
            if (r3 == 0) goto L_0x3041
            goto L_0x3083
        L_0x3041:
            boolean r3 = r2.isVideo()
            if (r3 == 0) goto L_0x306e
            r3 = 1
            r4 = 0
            r1.updateButtonState(r4, r3, r4)
            org.telegram.messenger.MediaController r3 = org.telegram.messenger.MediaController.getInstance()
            boolean r3 = r3.isPlayingMessage(r2)
            if (r3 != 0) goto L_0x3088
            org.telegram.messenger.MediaController r3 = org.telegram.messenger.MediaController.getInstance()
            boolean r2 = r3.isGoingToShowMessageObject(r2)
            if (r2 != 0) goto L_0x3088
            org.telegram.messenger.ImageReceiver r1 = r1.getPhotoImage()
            org.telegram.ui.Components.AnimatedFileDrawable r1 = r1.getAnimation()
            if (r1 == 0) goto L_0x3088
            r1.start()
            goto L_0x3088
        L_0x306e:
            boolean r3 = r2.isRoundVideo()
            if (r3 == 0) goto L_0x3088
            org.telegram.messenger.MediaController r3 = org.telegram.messenger.MediaController.getInstance()
            boolean r2 = r3.isPlayingMessage(r2)
            if (r2 != 0) goto L_0x3088
            r2 = 1
            r1.checkVideoPlayback(r2)
            goto L_0x3088
        L_0x3083:
            r2 = 1
            r3 = 0
            r1.updateButtonState(r3, r2, r3)
        L_0x3088:
            int r14 = r14 + 1
            goto L_0x3020
        L_0x308b:
            org.telegram.ui.Components.RecyclerListView r0 = r8.mentionListView
            int r0 = r0.getChildCount()
            r14 = 0
        L_0x3092:
            if (r14 >= r0) goto L_0x30bd
            org.telegram.ui.Components.RecyclerListView r1 = r8.mentionListView
            android.view.View r1 = r1.getChildAt(r14)
            boolean r2 = r1 instanceof org.telegram.ui.Cells.ContextLinkCell
            if (r2 == 0) goto L_0x30b8
            org.telegram.ui.Cells.ContextLinkCell r1 = (org.telegram.ui.Cells.ContextLinkCell) r1
            org.telegram.messenger.MessageObject r2 = r1.getMessageObject()
            if (r2 == 0) goto L_0x30b8
            boolean r3 = r2.isVoice()
            if (r3 != 0) goto L_0x30b2
            boolean r2 = r2.isMusic()
            if (r2 == 0) goto L_0x30b8
        L_0x30b2:
            r2 = 1
            r3 = 0
            r1.updateButtonState(r3, r2)
            goto L_0x30ba
        L_0x30b8:
            r2 = 1
            r3 = 0
        L_0x30ba:
            int r14 = r14 + 1
            goto L_0x3092
        L_0x30bd:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.didReceivedNotification(int, int, java.lang.Object[]):void");
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$didReceivedNotification$82 */
    public /* synthetic */ void lambda$didReceivedNotification$82$ChatActivity() {
        getNotificationCenter().onAnimationFinish(this.transitionAnimationIndex);
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$didReceivedNotification$83 */
    public /* synthetic */ void lambda$didReceivedNotification$83$ChatActivity() {
        getNotificationCenter().runDelayedNotifications();
        resumeDelayedFragmentAnimation();
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$didReceivedNotification$84 */
    public /* synthetic */ void lambda$didReceivedNotification$84$ChatActivity(MessageObject messageObject, int i) {
        this.delayedReadRunnable = null;
        messageObject.messageOwner.replies.read_max_id = i;
    }

    static /* synthetic */ void lambda$didReceivedNotification$86(Theme.ThemeAccent themeAccent, Theme.ThemeInfo themeInfo, boolean z) {
        if (themeAccent != null) {
            Theme.ThemeAccent accent = themeInfo.getAccent(false);
            NotificationCenter.getGlobalInstance().postNotificationName(NotificationCenter.needSetDayNightTheme, themeInfo, Boolean.FALSE, null, Integer.valueOf(themeAccent.id));
            if (z) {
                Theme.deleteThemeAccent(themeInfo, accent, true);
                return;
            }
            return;
        }
        NotificationCenter.getGlobalInstance().postNotificationName(NotificationCenter.needSetDayNightTheme, themeInfo, Boolean.FALSE, null, -1);
    }

    private void checkSecretMessageForLocation(MessageObject messageObject) {
        if (messageObject.type == 4 && !this.locationAlertShown && !SharedConfig.isSecretMapPreviewSet()) {
            this.locationAlertShown = true;
            AlertsCreator.showSecretLocationAlert(getParentActivity(), this.currentAccount, new Runnable() {
                public final void run() {
                    ChatActivity.this.lambda$checkSecretMessageForLocation$87$ChatActivity();
                }
            }, true);
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$checkSecretMessageForLocation$87 */
    public /* synthetic */ void lambda$checkSecretMessageForLocation$87$ChatActivity() {
        int childCount = this.chatListView.getChildCount();
        for (int i = 0; i < childCount; i++) {
            View childAt = this.chatListView.getChildAt(i);
            if (childAt instanceof ChatMessageCell) {
                ChatMessageCell chatMessageCell = (ChatMessageCell) childAt;
                if (chatMessageCell.getMessageObject().type == 4) {
                    chatMessageCell.forceResetMessageObject();
                }
            }
        }
    }

    private void checkGroupCallJoin(boolean z) {
        TLRPC$ChatFull tLRPC$ChatFull;
        String str;
        if (this.groupCall == null || (str = this.voiceChatHash) == null || !this.openAnimationEnded) {
            if (!(this.voiceChatHash == null || !z || (tLRPC$ChatFull = this.chatInfo) == null || tLRPC$ChatFull.call != null || this.fragmentView == null || getParentActivity() == null)) {
                BulletinFactory.of((BaseFragment) this).createSimpleBulletin(NUM, LocaleController.getString("LinkHashExpired", NUM)).show();
                this.voiceChatHash = null;
            }
            this.lastCallCheckFromServer = !this.openAnimationEnded;
            return;
        }
        VoIPHelper.startCall(this.currentChat, (TLRPC$InputPeer) null, str, this.createGroupCall, getParentActivity(), this, getAccountInstance());
        this.voiceChatHash = null;
    }

    private void checkWaitingForReplies() {
        TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader;
        int i;
        MessageObject messageObject;
        TLRPC$TL_messageReplies tLRPC$TL_messageReplies;
        int indexOf;
        if (this.waitingForReplies.size() != 0) {
            int size = this.waitingForReplies.size();
            ArrayList arrayList = null;
            LongSparseArray longSparseArray = null;
            ArrayList arrayList2 = null;
            for (int i2 = 0; i2 < size; i2++) {
                MessageObject valueAt = this.waitingForReplies.valueAt(i2);
                if (valueAt.replyMessageObject != null) {
                    if (arrayList == null) {
                        arrayList = new ArrayList();
                    }
                    arrayList.add(Integer.valueOf(this.waitingForReplies.keyAt(i2)));
                    if (!((valueAt.messageOwner.action instanceof TLRPC$TL_messageActionPinMessage) || (tLRPC$MessageFwdHeader = valueAt.replyMessageObject.messageOwner.fwd_from) == null || ((long) MessageObject.getPeerId(tLRPC$MessageFwdHeader.saved_from_peer)) != this.dialog_id || (i = valueAt.replyMessageObject.messageOwner.fwd_from.channel_post) == 0 || (messageObject = this.messagesDict[0].get(i)) == null || (tLRPC$TL_messageReplies = messageObject.messageOwner.replies) == null)) {
                        tLRPC$TL_messageReplies.replies++;
                        messageObject.animateComments = true;
                        TLRPC$Message tLRPC$Message = valueAt.messageOwner;
                        TLRPC$Peer tLRPC$Peer = tLRPC$Message.from_id;
                        if (tLRPC$Peer == null) {
                            tLRPC$Peer = tLRPC$Message.peer_id;
                        }
                        int size2 = tLRPC$TL_messageReplies.recent_repliers.size();
                        int i3 = 0;
                        while (true) {
                            if (i3 >= size2) {
                                break;
                            } else if (MessageObject.getPeerId(messageObject.messageOwner.replies.recent_repliers.get(i3)) == MessageObject.getPeerId(tLRPC$Peer)) {
                                messageObject.messageOwner.replies.recent_repliers.remove(i3);
                                break;
                            } else {
                                i3++;
                            }
                        }
                        messageObject.messageOwner.replies.recent_repliers.add(0, tLRPC$Peer);
                        if (!valueAt.isOut()) {
                            messageObject.messageOwner.replies.max_id = valueAt.getId();
                        }
                        MessagesStorage messagesStorage = getMessagesStorage();
                        int i4 = this.currentChat.id;
                        int id = messageObject.getId();
                        TLRPC$TL_messageReplies tLRPC$TL_messageReplies2 = messageObject.messageOwner.replies;
                        messagesStorage.updateRepliesCount(i4, id, tLRPC$TL_messageReplies2.recent_repliers, tLRPC$TL_messageReplies2.max_id, 1);
                        if (messageObject.hasValidGroupId()) {
                            MessageObject.GroupedMessages groupedMessages = this.groupedMessagesMap.get(messageObject.getGroupId());
                            if (groupedMessages != null) {
                                if (longSparseArray == null) {
                                    longSparseArray = new LongSparseArray();
                                }
                                longSparseArray.put(groupedMessages.groupId, groupedMessages);
                                int size3 = groupedMessages.messages.size();
                                for (int i5 = 0; i5 < size3; i5++) {
                                    groupedMessages.messages.get(i5).animateComments = true;
                                }
                            }
                        } else if (this.chatAdapter != null && (indexOf = this.messages.indexOf(messageObject)) >= 0) {
                            if (arrayList2 == null) {
                                arrayList2 = new ArrayList();
                            }
                            arrayList2.add(Integer.valueOf(indexOf + this.chatAdapter.messagesStartRow));
                        }
                    }
                }
            }
            if (arrayList != null) {
                int size4 = arrayList.size();
                for (int i6 = 0; i6 < size4; i6++) {
                    this.waitingForReplies.remove(((Integer) arrayList.get(i6)).intValue());
                }
            }
            if (this.chatAdapter != null) {
                if (longSparseArray != null) {
                    int size5 = longSparseArray.size();
                    for (int i7 = 0; i7 < size5; i7++) {
                        MessageObject.GroupedMessages groupedMessages2 = (MessageObject.GroupedMessages) longSparseArray.valueAt(i7);
                        ArrayList<MessageObject> arrayList3 = groupedMessages2.messages;
                        int indexOf2 = this.messages.indexOf(arrayList3.get(arrayList3.size() - 1));
                        if (indexOf2 >= 0) {
                            ChatActivityAdapter chatActivityAdapter = this.chatAdapter;
                            chatActivityAdapter.notifyItemRangeChanged(indexOf2 + chatActivityAdapter.messagesStartRow, groupedMessages2.messages.size());
                        }
                    }
                }
                if (arrayList2 != null) {
                    int size6 = arrayList2.size();
                    for (int i8 = 0; i8 < size6; i8++) {
                        this.chatAdapter.notifyItemChanged(((Integer) arrayList2.get(i8)).intValue());
                    }
                }
            }
        }
    }

    private void clearHistory(boolean z) {
        TLRPC$User tLRPC$User;
        this.messages.clear();
        this.waitingForLoad.clear();
        this.messagesByDays.clear();
        this.groupedMessagesMap.clear();
        this.threadMessageAdded = false;
        for (int i = 1; i >= 0; i--) {
            this.messagesDict[i].clear();
            if (this.currentEncryptedChat == null) {
                this.maxMessageId[i] = Integer.MAX_VALUE;
                this.minMessageId[i] = Integer.MIN_VALUE;
            } else {
                this.maxMessageId[i] = Integer.MIN_VALUE;
                this.minMessageId[i] = Integer.MAX_VALUE;
            }
            this.maxDate[i] = Integer.MIN_VALUE;
            this.minDate[i] = 0;
            this.selectedMessagesIds[i].clear();
            this.selectedMessagesCanCopyIds[i].clear();
            this.selectedMessagesCanStarIds[i].clear();
        }
        hideActionMode();
        updatePinnedMessageView(true);
        if (this.botButtons != null) {
            this.botButtons = null;
            ChatActivityEnterView chatActivityEnterView2 = this.chatActivityEnterView;
            if (chatActivityEnterView2 != null) {
                chatActivityEnterView2.setButtons((MessageObject) null, false);
            }
        }
        if (z) {
            ChatActivityAdapter chatActivityAdapter = this.chatAdapter;
            if (chatActivityAdapter != null) {
                showProgressView(chatActivityAdapter.botInfoRow < 0);
                this.chatListView.setEmptyView((View) null);
            }
            for (int i2 = 0; i2 < 2; i2++) {
                this.endReached[i2] = false;
                this.cacheEndReached[i2] = false;
                this.forwardEndReached[i2] = true;
            }
            this.first = true;
            this.firstLoading = true;
            this.loading = true;
            this.startLoadFromMessageId = 0;
            this.needSelectFromMessageId = false;
            this.waitingForLoad.add(Integer.valueOf(this.lastLoadIndex));
            int i3 = this.startLoadFromMessageIdSaved;
            if (i3 != 0) {
                this.startLoadFromMessageId = i3;
                this.startLoadFromMessageIdSaved = 0;
                MessagesController messagesController = getMessagesController();
                long j = this.dialog_id;
                long j2 = this.mergeDialogId;
                int i4 = AndroidUtilities.isTablet() ? 30 : 20;
                int i5 = this.startLoadFromMessageId;
                int i6 = this.classGuid;
                boolean isChannel = ChatObject.isChannel(this.currentChat);
                int i7 = this.chatMode;
                int i8 = this.threadMessageId;
                int i9 = this.replyMaxReadId;
                int i10 = this.lastLoadIndex;
                this.lastLoadIndex = i10 + 1;
                messagesController.loadMessages(j, j2, false, i4, i5, 0, true, 0, i6, 3, 0, isChannel, i7, i8, i9, i10);
            } else {
                MessagesController messagesController2 = getMessagesController();
                long j3 = this.dialog_id;
                long j4 = this.mergeDialogId;
                int i11 = AndroidUtilities.isTablet() ? 30 : 20;
                int i12 = this.classGuid;
                boolean isChannel2 = ChatObject.isChannel(this.currentChat);
                int i13 = this.chatMode;
                int i14 = this.threadMessageId;
                int i15 = this.replyMaxReadId;
                int i16 = this.lastLoadIndex;
                this.lastLoadIndex = i16 + 1;
                messagesController2.loadMessages(j3, j4, false, i11, 0, 0, true, 0, i12, 2, 0, isChannel2, i13, i14, i15, i16);
            }
        } else if (this.progressView != null) {
            showProgressView(false);
            this.chatListView.setEmptyView(this.emptyViewContainer);
        }
        ChatActivityAdapter chatActivityAdapter2 = this.chatAdapter;
        if (chatActivityAdapter2 != null) {
            chatActivityAdapter2.notifyDataSetChanged(false);
        }
        if (this.currentEncryptedChat == null && (tLRPC$User = this.currentUser) != null && tLRPC$User.bot && this.botUser == null) {
            this.botUser = "";
            updateBottomOverlay();
        }
    }

    public boolean processSwitchButton(TLRPC$TL_keyboardButtonSwitchInline tLRPC$TL_keyboardButtonSwitchInline) {
        if (this.inlineReturn == 0 || tLRPC$TL_keyboardButtonSwitchInline.same_peer || this.parentLayout == null) {
            return false;
        }
        String str = "@" + this.currentUser.username + " " + tLRPC$TL_keyboardButtonSwitchInline.query;
        if (this.inlineReturn == this.dialog_id) {
            this.inlineReturn = 0;
            this.chatActivityEnterView.setFieldText(str);
        } else {
            getMediaDataController().saveDraft(this.inlineReturn, 0, str, (ArrayList<TLRPC$MessageEntity>) null, (TLRPC$Message) null, false);
            if (this.parentLayout.fragmentsStack.size() > 1) {
                ArrayList<BaseFragment> arrayList = this.parentLayout.fragmentsStack;
                BaseFragment baseFragment = arrayList.get(arrayList.size() - 2);
                if (!(baseFragment instanceof ChatActivity) || ((ChatActivity) baseFragment).dialog_id != this.inlineReturn) {
                    Bundle bundle = new Bundle();
                    long j = this.inlineReturn;
                    int i = (int) j;
                    int i2 = (int) (j >> 32);
                    if (i == 0) {
                        bundle.putInt("enc_id", i2);
                    } else if (i > 0) {
                        bundle.putInt("user_id", i);
                    } else {
                        bundle.putInt("chat_id", -i);
                    }
                    presentFragment(new ChatActivity(bundle), true);
                } else {
                    finishFragment();
                }
            }
        }
        return true;
    }

    private void showGigagroupConvertAlert() {
        TLRPC$ChatFull tLRPC$ChatFull = this.chatInfo;
        if (tLRPC$ChatFull != null && !this.paused) {
            TLRPC$Chat tLRPC$Chat = this.currentChat;
            if (tLRPC$Chat.creator && tLRPC$Chat.megagroup && !tLRPC$Chat.gigagroup && tLRPC$ChatFull.pending_suggestions.contains("CONVERT_GIGAGROUP") && this.visibleDialog == null) {
                AndroidUtilities.runOnUIThread(new Runnable() {
                    public final void run() {
                        ChatActivity.this.lambda$showGigagroupConvertAlert$90$ChatActivity();
                    }
                }, 1000);
            }
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$showGigagroupConvertAlert$90 */
    public /* synthetic */ void lambda$showGigagroupConvertAlert$90$ChatActivity() {
        TLRPC$ChatFull tLRPC$ChatFull = this.chatInfo;
        if (tLRPC$ChatFull != null && !this.paused) {
            TLRPC$Chat tLRPC$Chat = this.currentChat;
            if (tLRPC$Chat.creator && tLRPC$Chat.megagroup && !tLRPC$Chat.gigagroup && tLRPC$ChatFull.pending_suggestions.contains("CONVERT_GIGAGROUP") && this.visibleDialog == null) {
                SharedPreferences notificationsSettings = MessagesController.getNotificationsSettings(this.currentAccount);
                int i = notificationsSettings.getInt("group_convert_time", 0);
                int i2 = BuildVars.DEBUG_PRIVATE_VERSION ? 120 : 604800;
                int currentTime = getConnectionsManager().getCurrentTime();
                if (Math.abs(currentTime - i) >= i2 && this.visibleDialog == null && getParentActivity() != null) {
                    notificationsSettings.edit().putInt("group_convert_time", currentTime).commit();
                    showDialog(AlertsCreator.createGigagroupConvertAlert(getParentActivity(), new DialogInterface.OnClickListener() {
                        public final void onClick(DialogInterface dialogInterface, int i) {
                            ChatActivity.this.lambda$null$88$ChatActivity(dialogInterface, i);
                        }
                    }, new DialogInterface.OnClickListener() {
                        public final void onClick(DialogInterface dialogInterface, int i) {
                            ChatActivity.this.lambda$null$89$ChatActivity(dialogInterface, i);
                        }
                    }).create());
                }
            }
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$88 */
    public /* synthetic */ void lambda$null$88$ChatActivity(DialogInterface dialogInterface, int i) {
        showDialog(new GigagroupConvertAlert(getParentActivity(), this) {
            /* access modifiers changed from: protected */
            public void onCovert() {
                MessagesController messagesController = ChatActivity.this.getMessagesController();
                Activity parentActivity = ChatActivity.this.getParentActivity();
                ChatActivity chatActivity = ChatActivity.this;
                messagesController.convertToGigaGroup(parentActivity, chatActivity.currentChat, chatActivity, new MessagesStorage.BooleanCallback() {
                    public final void run(boolean z) {
                        ChatActivity.AnonymousClass79.this.lambda$onCovert$0$ChatActivity$79(z);
                    }
                });
            }

            /* access modifiers changed from: private */
            /* renamed from: lambda$onCovert$0 */
            public /* synthetic */ void lambda$onCovert$0$ChatActivity$79(boolean z) {
                if (z) {
                    ChatActivity.this.undoView.showWithAction(0, 76, (Runnable) null);
                }
            }

            /* access modifiers changed from: protected */
            public void onCancel() {
                ChatActivity.this.undoView.showWithAction(0, 75, (Runnable) null);
                ChatActivity.this.getMessagesController().removeSuggestion(ChatActivity.this.dialog_id, "CONVERT_GIGAGROUP");
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$89 */
    public /* synthetic */ void lambda$null$89$ChatActivity(DialogInterface dialogInterface, int i) {
        this.undoView.showWithAction(0, 75, (Runnable) null);
    }

    /* JADX WARNING: type inference failed for: r4v17 */
    /* JADX WARNING: type inference failed for: r4v38 */
    /* JADX WARNING: type inference failed for: r4v39 */
    /* JADX WARNING: type inference failed for: r4v88 */
    /* JADX WARNING: Incorrect type for immutable var: ssa=int, code=?, for r4v16, types: [int, boolean] */
    /* JADX WARNING: Incorrect type for immutable var: ssa=int, code=?, for r4v36, types: [int, boolean] */
    /* JADX WARNING: Removed duplicated region for block: B:299:0x04e4  */
    /* JADX WARNING: Removed duplicated region for block: B:319:0x0519  */
    /* JADX WARNING: Removed duplicated region for block: B:344:0x056a  */
    /* JADX WARNING: Removed duplicated region for block: B:387:0x0623  */
    /* JADX WARNING: Removed duplicated region for block: B:428:0x06db  */
    /* JADX WARNING: Removed duplicated region for block: B:432:0x06e7  */
    /* JADX WARNING: Removed duplicated region for block: B:450:0x073f  */
    /* JADX WARNING: Removed duplicated region for block: B:528:0x0943  */
    /* JADX WARNING: Removed duplicated region for block: B:531:0x0949  */
    /* JADX WARNING: Removed duplicated region for block: B:538:0x0968  */
    /* JADX WARNING: Removed duplicated region for block: B:541:0x096f  */
    /* JADX WARNING: Removed duplicated region for block: B:552:0x0996 A[ADDED_TO_REGION] */
    /* JADX WARNING: Removed duplicated region for block: B:555:0x09a0  */
    /* JADX WARNING: Removed duplicated region for block: B:679:0x0726 A[SYNTHETIC] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private void processNewMessages(java.util.ArrayList<org.telegram.messenger.MessageObject> r29) {
        /*
            r28 = this;
            r0 = r28
            r1 = r29
            org.telegram.messenger.UserConfig r2 = r28.getUserConfig()
            int r2 = r2.getClientUserId()
            androidx.recyclerview.widget.ChatListItemAnimator r3 = r0.chatListItemAnimator
            r4 = 1
            if (r3 == 0) goto L_0x0014
            r3.setShouldAnimateEnterFromBottom(r4)
        L_0x0014:
            int r3 = r29.size()
            r6 = 0
            r7 = 0
            r8 = 0
            r9 = 0
        L_0x001c:
            if (r7 >= r3) goto L_0x0201
            java.lang.Object r12 = r1.get(r7)
            org.telegram.messenger.MessageObject r12 = (org.telegram.messenger.MessageObject) r12
            int r13 = r12.getId()
            int r14 = r0.threadMessageId
            if (r14 == 0) goto L_0x003e
            if (r13 <= 0) goto L_0x003e
            boolean r14 = r12.isOut()
            if (r14 == 0) goto L_0x0037
            int r14 = r0.threadMaxOutboxReadId
            goto L_0x0039
        L_0x0037:
            int r14 = r0.threadMaxInboxReadId
        L_0x0039:
            if (r13 > r14) goto L_0x003e
            r12.setIsRead()
        L_0x003e:
            org.telegram.tgnet.TLRPC$EncryptedChat r14 = r0.currentEncryptedChat
            if (r14 != 0) goto L_0x0054
            boolean[] r14 = r0.forwardEndReached
            boolean r14 = r14[r6]
            if (r14 != 0) goto L_0x0054
            if (r13 >= 0) goto L_0x0054
            android.util.SparseArray<org.telegram.messenger.MessageObject> r14 = r0.pendingSendMessagesDict
            r14.put(r13, r12)
            java.util.ArrayList<org.telegram.messenger.MessageObject> r13 = r0.pendingSendMessages
            r13.add(r6, r12)
        L_0x0054:
            boolean r13 = r12.isDice()
            if (r13 == 0) goto L_0x0062
            boolean r13 = r12.isForwarded()
            if (r13 != 0) goto L_0x0062
            r12.wasUnread = r4
        L_0x0062:
            int r13 = r0.chatMode
            if (r13 != r4) goto L_0x00a0
            boolean r13 = r12.hasValidGroupId()
            if (r13 == 0) goto L_0x00a0
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r13 = r0.messagesDict
            r13 = r13[r6]
            int r14 = r12.getId()
            int r13 = r13.indexOfKey(r14)
            if (r13 < 0) goto L_0x00a0
            long r13 = r12.getGroupId()
            if (r8 != 0) goto L_0x0085
            android.util.LongSparseArray r8 = new android.util.LongSparseArray
            r8.<init>()
        L_0x0085:
            java.lang.Object r15 = r8.get(r13)
            java.lang.Long r15 = (java.lang.Long) r15
            if (r15 != 0) goto L_0x009a
            java.security.SecureRandom r15 = org.telegram.messenger.Utilities.random
            long r15 = r15.nextLong()
            java.lang.Long r15 = java.lang.Long.valueOf(r15)
            r8.put(r13, r15)
        L_0x009a:
            long r13 = r15.longValue()
            r12.localGroupId = r13
        L_0x00a0:
            boolean r13 = r12.isOut()
            if (r13 == 0) goto L_0x0122
            if (r9 != 0) goto L_0x00b4
            org.telegram.messenger.NotificationCenter r9 = org.telegram.messenger.NotificationCenter.getGlobalInstance()
            int r13 = org.telegram.messenger.NotificationCenter.closeSearchByActiveAction
            java.lang.Object[] r14 = new java.lang.Object[r6]
            r9.postNotificationName(r13, r14)
            r9 = 1
        L_0x00b4:
            org.telegram.tgnet.TLRPC$Chat r13 = r0.currentChat
            if (r13 == 0) goto L_0x0122
            org.telegram.messenger.MessagesController r13 = r28.getMessagesController()
            org.telegram.tgnet.TLRPC$Chat r14 = r0.currentChat
            int r14 = r14.id
            java.lang.Integer r14 = java.lang.Integer.valueOf(r14)
            org.telegram.tgnet.TLRPC$Chat r13 = r13.getChat(r14)
            if (r13 == 0) goto L_0x0122
            r0.currentChat = r13
            boolean r14 = r13.gigagroup
            if (r14 != 0) goto L_0x0122
            boolean r13 = r13.slowmode_enabled
            if (r13 == 0) goto L_0x0122
            boolean r13 = r12.isSent()
            if (r13 == 0) goto L_0x0122
            int r13 = r0.chatMode
            if (r13 == r4) goto L_0x0122
            org.telegram.tgnet.TLRPC$ChatFull r13 = r0.chatInfo
            if (r13 == 0) goto L_0x0117
            org.telegram.tgnet.TLRPC$Message r14 = r12.messageOwner
            int r14 = r14.date
            int r13 = r13.slowmode_seconds
            int r14 = r14 + r13
            org.telegram.tgnet.ConnectionsManager r13 = r28.getConnectionsManager()
            int r13 = r13.getCurrentTime()
            org.telegram.tgnet.ConnectionsManager r15 = r28.getConnectionsManager()
            int r15 = r15.getCurrentTime()
            if (r14 <= r15) goto L_0x0117
            org.telegram.tgnet.TLRPC$ChatFull r15 = r0.chatInfo
            int r5 = r15.slowmode_next_send_date
            int r10 = r15.slowmode_seconds
            int r13 = r13 + r10
            int r10 = java.lang.Math.min(r13, r14)
            int r5 = java.lang.Math.max(r5, r10)
            r15.slowmode_next_send_date = r5
            org.telegram.ui.Components.ChatActivityEnterView r5 = r0.chatActivityEnterView
            if (r5 == 0) goto L_0x0117
            org.telegram.tgnet.TLRPC$ChatFull r10 = r0.chatInfo
            int r10 = r10.slowmode_next_send_date
            r5.setSlowModeTimer(r10)
        L_0x0117:
            org.telegram.messenger.MessagesController r5 = r28.getMessagesController()
            org.telegram.tgnet.TLRPC$Chat r10 = r0.currentChat
            int r10 = r10.id
            r5.loadFullChat(r10, r6, r4)
        L_0x0122:
            org.telegram.tgnet.TLRPC$Chat r5 = r0.currentChat
            if (r5 == 0) goto L_0x0164
            org.telegram.tgnet.TLRPC$Message r5 = r12.messageOwner
            org.telegram.tgnet.TLRPC$MessageAction r5 = r5.action
            boolean r10 = r5 instanceof org.telegram.tgnet.TLRPC$TL_messageActionChatDeleteUser
            if (r10 == 0) goto L_0x0132
            int r10 = r5.user_id
            if (r10 == r2) goto L_0x0142
        L_0x0132:
            boolean r10 = r5 instanceof org.telegram.tgnet.TLRPC$TL_messageActionChatAddUser
            if (r10 == 0) goto L_0x01ac
            java.util.ArrayList<java.lang.Integer> r5 = r5.users
            java.lang.Integer r10 = java.lang.Integer.valueOf(r2)
            boolean r5 = r5.contains(r10)
            if (r5 == 0) goto L_0x01ac
        L_0x0142:
            org.telegram.messenger.MessagesController r5 = r28.getMessagesController()
            org.telegram.tgnet.TLRPC$Chat r10 = r0.currentChat
            int r10 = r10.id
            java.lang.Integer r10 = java.lang.Integer.valueOf(r10)
            org.telegram.tgnet.TLRPC$Chat r5 = r5.getChat(r10)
            if (r5 == 0) goto L_0x01ac
            r0.currentChat = r5
            r0.checkActionBarMenu(r6)
            r28.updateBottomOverlay()
            org.telegram.ui.Components.ChatAvatarContainer r5 = r0.avatarContainer
            if (r5 == 0) goto L_0x01ac
            r5.updateSubtitle(r4)
            goto L_0x01ac
        L_0x0164:
            long r10 = r0.inlineReturn
            r13 = 0
            int r5 = (r10 > r13 ? 1 : (r10 == r13 ? 0 : -1))
            if (r5 == 0) goto L_0x01ac
            org.telegram.tgnet.TLRPC$Message r5 = r12.messageOwner
            org.telegram.tgnet.TLRPC$ReplyMarkup r5 = r5.reply_markup
            if (r5 == 0) goto L_0x01ac
            r5 = 0
        L_0x0173:
            org.telegram.tgnet.TLRPC$Message r10 = r12.messageOwner
            org.telegram.tgnet.TLRPC$ReplyMarkup r10 = r10.reply_markup
            java.util.ArrayList<org.telegram.tgnet.TLRPC$TL_keyboardButtonRow> r10 = r10.rows
            int r10 = r10.size()
            if (r5 >= r10) goto L_0x01ac
            org.telegram.tgnet.TLRPC$Message r10 = r12.messageOwner
            org.telegram.tgnet.TLRPC$ReplyMarkup r10 = r10.reply_markup
            java.util.ArrayList<org.telegram.tgnet.TLRPC$TL_keyboardButtonRow> r10 = r10.rows
            java.lang.Object r10 = r10.get(r5)
            org.telegram.tgnet.TLRPC$TL_keyboardButtonRow r10 = (org.telegram.tgnet.TLRPC$TL_keyboardButtonRow) r10
            r11 = 0
        L_0x018c:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$KeyboardButton> r13 = r10.buttons
            int r13 = r13.size()
            if (r11 >= r13) goto L_0x01a9
            java.util.ArrayList<org.telegram.tgnet.TLRPC$KeyboardButton> r13 = r10.buttons
            java.lang.Object r13 = r13.get(r11)
            org.telegram.tgnet.TLRPC$KeyboardButton r13 = (org.telegram.tgnet.TLRPC$KeyboardButton) r13
            boolean r14 = r13 instanceof org.telegram.tgnet.TLRPC$TL_keyboardButtonSwitchInline
            if (r14 == 0) goto L_0x01a6
            org.telegram.tgnet.TLRPC$TL_keyboardButtonSwitchInline r13 = (org.telegram.tgnet.TLRPC$TL_keyboardButtonSwitchInline) r13
            r0.processSwitchButton(r13)
            goto L_0x01a9
        L_0x01a6:
            int r11 = r11 + 1
            goto L_0x018c
        L_0x01a9:
            int r5 = r5 + 1
            goto L_0x0173
        L_0x01ac:
            int r5 = r12.getReplyMsgId()
            if (r5 == 0) goto L_0x01fd
            org.telegram.messenger.MessageObject r5 = r12.replyMessageObject
            if (r5 != 0) goto L_0x01fd
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r5 = r0.messagesDict
            r5 = r5[r6]
            int r10 = r12.getReplyMsgId()
            java.lang.Object r5 = r5.get(r10)
            org.telegram.messenger.MessageObject r5 = (org.telegram.messenger.MessageObject) r5
            r12.replyMessageObject = r5
            if (r5 != 0) goto L_0x01e0
            long r10 = r12.getDialogId()
            long r13 = r0.mergeDialogId
            int r5 = (r10 > r13 ? 1 : (r10 == r13 ? 0 : -1))
            if (r5 == 0) goto L_0x01e0
            android.util.SparseArray<org.telegram.messenger.MessageObject> r5 = r0.repliesMessagesDict
            int r10 = r12.getReplyMsgId()
            java.lang.Object r5 = r5.get(r10)
            org.telegram.messenger.MessageObject r5 = (org.telegram.messenger.MessageObject) r5
            r12.replyMessageObject = r5
        L_0x01e0:
            org.telegram.tgnet.TLRPC$Message r5 = r12.messageOwner
            org.telegram.tgnet.TLRPC$MessageAction r5 = r5.action
            boolean r10 = r5 instanceof org.telegram.tgnet.TLRPC$TL_messageActionPinMessage
            if (r10 == 0) goto L_0x01ed
            r10 = 0
            r12.generatePinMessageText(r10, r10)
            goto L_0x01fd
        L_0x01ed:
            r10 = 0
            boolean r11 = r5 instanceof org.telegram.tgnet.TLRPC$TL_messageActionGameScore
            if (r11 == 0) goto L_0x01f6
            r12.generateGameMessageText(r10)
            goto L_0x01fd
        L_0x01f6:
            boolean r5 = r5 instanceof org.telegram.tgnet.TLRPC$TL_messageActionPaymentSent
            if (r5 == 0) goto L_0x01fd
            r12.generatePaymentSentMessageText(r10)
        L_0x01fd:
            int r7 = r7 + 1
            goto L_0x001c
        L_0x0201:
            int r3 = r0.chatMode
            if (r3 != r4) goto L_0x020e
            boolean r3 = r29.isEmpty()
            if (r3 != 0) goto L_0x020e
            r0.replaceMessageObjects(r1, r6, r4)
        L_0x020e:
            boolean[] r3 = r0.forwardEndReached
            boolean r3 = r3[r6]
            r5 = 5
            java.lang.String r7 = "%d"
            if (r3 != 0) goto L_0x03f3
            org.telegram.tgnet.TLRPC$EncryptedChat r3 = r0.currentEncryptedChat
            r11 = -2147483648(0xfffffffvar_, float:-0.0)
            if (r3 == 0) goto L_0x0221
            r3 = 2147483647(0x7fffffff, float:NaN)
            goto L_0x0223
        L_0x0221:
            r3 = -2147483648(0xfffffffvar_, float:-0.0)
        L_0x0223:
            r12 = 0
            r13 = 0
            r14 = 0
        L_0x0226:
            int r15 = r29.size()
            if (r12 >= r15) goto L_0x03ae
            java.lang.Object r15 = r1.get(r12)
            org.telegram.messenger.MessageObject r15 = (org.telegram.messenger.MessageObject) r15
            int r8 = r0.threadMessageId
            if (r8 == 0) goto L_0x0246
            int r9 = r15.getReplyTopMsgId()
            if (r8 == r9) goto L_0x0246
            int r8 = r0.threadMessageId
            int r9 = r15.getReplyMsgId()
            if (r8 == r9) goto L_0x0246
            goto L_0x03a8
        L_0x0246:
            int r8 = r15.getId()
            boolean r9 = r15.isOut()
            if (r9 == 0) goto L_0x0262
            boolean r9 = r0.waitingForSendingMessageLoad
            if (r9 == 0) goto L_0x0262
            r0.waitingForSendingMessageLoad = r6
            org.telegram.ui.Components.ChatActivityEnterView r9 = r0.chatActivityEnterView
            r9.hideTopView(r4)
            android.animation.ValueAnimator r9 = r0.changeBoundAnimator
            if (r9 == 0) goto L_0x0262
            r9.start()
        L_0x0262:
            int r9 = r0.chatMode
            if (r9 == r4) goto L_0x027d
            org.telegram.tgnet.TLRPC$User r9 = r0.currentUser
            if (r9 == 0) goto L_0x027d
            boolean r9 = r9.bot
            if (r9 == 0) goto L_0x0274
            boolean r9 = r15.isOut()
            if (r9 != 0) goto L_0x027a
        L_0x0274:
            org.telegram.tgnet.TLRPC$User r9 = r0.currentUser
            int r9 = r9.id
            if (r9 != r2) goto L_0x027d
        L_0x027a:
            r15.setIsRead()
        L_0x027d:
            org.telegram.tgnet.TLRPC$Message r9 = r15.messageOwner
            org.telegram.tgnet.TLRPC$MessageAction r9 = r9.action
            org.telegram.ui.Components.ChatAvatarContainer r10 = r0.avatarContainer
            if (r10 == 0) goto L_0x029a
            org.telegram.tgnet.TLRPC$EncryptedChat r6 = r0.currentEncryptedChat
            if (r6 == 0) goto L_0x029a
            boolean r6 = r9 instanceof org.telegram.tgnet.TLRPC$TL_messageEncryptedAction
            if (r6 == 0) goto L_0x029a
            org.telegram.tgnet.TLRPC$DecryptedMessageAction r6 = r9.encryptedAction
            boolean r4 = r6 instanceof org.telegram.tgnet.TLRPC$TL_decryptedMessageActionSetMessageTTL
            if (r4 == 0) goto L_0x029a
            org.telegram.tgnet.TLRPC$TL_decryptedMessageActionSetMessageTTL r6 = (org.telegram.tgnet.TLRPC$TL_decryptedMessageActionSetMessageTTL) r6
            int r4 = r6.ttl_seconds
            r10.setTime(r4)
        L_0x029a:
            boolean r4 = r9 instanceof org.telegram.tgnet.TLRPC$TL_messageActionChatMigrateTo
            if (r4 == 0) goto L_0x02a2
            r0.migrateToNewChat(r15)
            return
        L_0x02a2:
            org.telegram.tgnet.TLRPC$Chat r4 = r0.currentChat
            if (r4 == 0) goto L_0x02b3
            boolean r4 = r4.megagroup
            if (r4 == 0) goto L_0x02b3
            boolean r4 = r9 instanceof org.telegram.tgnet.TLRPC$TL_messageActionChatAddUser
            if (r4 != 0) goto L_0x02b2
            boolean r4 = r9 instanceof org.telegram.tgnet.TLRPC$TL_messageActionChatDeleteUser
            if (r4 == 0) goto L_0x02b3
        L_0x02b2:
            r14 = 1
        L_0x02b3:
            if (r12 != 0) goto L_0x02cc
            org.telegram.tgnet.TLRPC$Message r4 = r15.messageOwner
            int r4 = r4.id
            if (r4 >= 0) goto L_0x02cc
            int r4 = r15.type
            if (r4 == r5) goto L_0x02c5
            boolean r4 = r15.isVoice()
            if (r4 == 0) goto L_0x02cc
        L_0x02c5:
            int r4 = r0.chatMode
            r6 = 1
            if (r4 == r6) goto L_0x02cc
            r0.needAnimateToMessage = r15
        L_0x02cc:
            boolean r4 = r15.isOut()
            if (r4 == 0) goto L_0x02da
            boolean r4 = r15.wasJustSent
            if (r4 == 0) goto L_0x02da
            r28.scrollToLastMessage()
            return
        L_0x02da:
            int r4 = r15.type
            if (r4 < 0) goto L_0x03a8
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r4 = r0.messagesDict
            r6 = 0
            r4 = r4[r6]
            int r4 = r4.indexOfKey(r8)
            if (r4 < 0) goto L_0x02eb
            goto L_0x03a8
        L_0x02eb:
            org.telegram.tgnet.TLRPC$Chat r4 = r0.currentChat
            if (r4 == 0) goto L_0x0312
            boolean r6 = r4.creator
            if (r6 == 0) goto L_0x0312
            boolean r4 = org.telegram.messenger.ChatObject.isChannel(r4)
            if (r4 == 0) goto L_0x02ff
            org.telegram.tgnet.TLRPC$Chat r4 = r0.currentChat
            boolean r4 = r4.megagroup
            if (r4 == 0) goto L_0x0312
        L_0x02ff:
            boolean r4 = r9 instanceof org.telegram.tgnet.TLRPC$TL_messageActionChatCreate
            if (r4 != 0) goto L_0x03a8
            boolean r4 = r9 instanceof org.telegram.tgnet.TLRPC$TL_messageActionChatEditPhoto
            if (r4 == 0) goto L_0x0312
            java.util.ArrayList<org.telegram.messenger.MessageObject> r4 = r0.messages
            int r4 = r4.size()
            r6 = 2
            if (r4 >= r6) goto L_0x0312
            goto L_0x03a8
        L_0x0312:
            boolean r4 = r9 instanceof org.telegram.tgnet.TLRPC$TL_messageActionChannelMigrateFrom
            if (r4 == 0) goto L_0x0318
            goto L_0x03a8
        L_0x0318:
            int r4 = r0.threadMessageId
            if (r4 == 0) goto L_0x0324
            org.telegram.tgnet.TLRPC$Message r4 = r15.messageOwner
            boolean r4 = r4 instanceof org.telegram.tgnet.TLRPC$TL_messageEmpty
            if (r4 == 0) goto L_0x0324
            goto L_0x03a8
        L_0x0324:
            org.telegram.messenger.MessageObject r4 = r0.threadMessageObject
            if (r4 == 0) goto L_0x034e
            boolean r4 = r15.isReply()
            if (r4 == 0) goto L_0x034e
            org.telegram.tgnet.TLRPC$Message r4 = r15.messageOwner
            org.telegram.tgnet.TLRPC$MessageAction r4 = r4.action
            boolean r4 = r4 instanceof org.telegram.tgnet.TLRPC$TL_messageActionPinMessage
            if (r4 != 0) goto L_0x034e
            int r4 = r15.getReplyAnyMsgId()
            org.telegram.messenger.MessageObject r6 = r0.threadMessageObject
            int r6 = r6.getId()
            if (r6 != r4) goto L_0x034e
            org.telegram.messenger.MessageObject r4 = r0.threadMessageObject
            org.telegram.tgnet.TLRPC$Message r4 = r4.messageOwner
            org.telegram.tgnet.TLRPC$TL_messageReplies r4 = r4.replies
            int r6 = r4.replies
            r9 = 1
            int r6 = r6 + r9
            r4.replies = r6
        L_0x034e:
            r4 = 0
            r0.addToPolls(r15, r4)
            r15.checkLayout()
            org.telegram.tgnet.TLRPC$Message r4 = r15.messageOwner
            int r4 = r4.date
            int r4 = java.lang.Math.max(r11, r4)
            if (r8 <= 0) goto L_0x036c
            int r3 = java.lang.Math.max(r8, r3)
            int r6 = r0.last_message_id
            int r6 = java.lang.Math.max(r6, r8)
            r0.last_message_id = r6
            goto L_0x037c
        L_0x036c:
            org.telegram.tgnet.TLRPC$EncryptedChat r6 = r0.currentEncryptedChat
            if (r6 == 0) goto L_0x037c
            int r3 = java.lang.Math.min(r8, r3)
            int r6 = r0.last_message_id
            int r6 = java.lang.Math.min(r6, r8)
            r0.last_message_id = r6
        L_0x037c:
            int r6 = r0.threadMessageId
            if (r6 != 0) goto L_0x0399
            org.telegram.tgnet.TLRPC$Message r6 = r15.messageOwner
            boolean r6 = r6.mentioned
            if (r6 == 0) goto L_0x0393
            boolean r6 = r15.isContentUnread()
            if (r6 == 0) goto L_0x0393
            int r6 = r0.newMentionsCount
            r8 = 1
            int r6 = r6 + r8
            r0.newMentionsCount = r6
            goto L_0x0394
        L_0x0393:
            r8 = 1
        L_0x0394:
            int r6 = r0.newUnreadMessageCount
            int r6 = r6 + r8
            r0.newUnreadMessageCount = r6
        L_0x0399:
            int r6 = r15.type
            r8 = 10
            if (r6 == r8) goto L_0x03a6
            r8 = 11
            if (r6 != r8) goto L_0x03a4
            goto L_0x03a6
        L_0x03a4:
            r11 = r4
            goto L_0x03a8
        L_0x03a6:
            r11 = r4
            r13 = 1
        L_0x03a8:
            int r12 = r12 + 1
            r4 = 1
            r6 = 0
            goto L_0x0226
        L_0x03ae:
            int r2 = r0.newUnreadMessageCount
            if (r2 == 0) goto L_0x03c9
            org.telegram.ui.Components.CounterView r2 = r0.pagedownButtonCounter
            if (r2 == 0) goto L_0x03c9
            r3 = 0
            r2.setVisibility(r3)
            int r2 = r0.prevSetUnreadCount
            int r3 = r0.newUnreadMessageCount
            if (r2 == r3) goto L_0x03c9
            r0.prevSetUnreadCount = r3
            org.telegram.ui.Components.CounterView r2 = r0.pagedownButtonCounter
            r4 = 1
            r2.setCount(r3, r4)
            goto L_0x03ca
        L_0x03c9:
            r4 = 1
        L_0x03ca:
            int r2 = r0.newMentionsCount
            if (r2 == 0) goto L_0x03ec
            org.telegram.ui.ActionBar.SimpleTextView r2 = r0.mentiondownButtonCounter
            if (r2 == 0) goto L_0x03ec
            r3 = 0
            r2.setVisibility(r3)
            org.telegram.ui.ActionBar.SimpleTextView r2 = r0.mentiondownButtonCounter
            java.lang.Object[] r5 = new java.lang.Object[r4]
            int r6 = r0.newMentionsCount
            java.lang.Integer r6 = java.lang.Integer.valueOf(r6)
            r5[r3] = r6
            java.lang.String r3 = java.lang.String.format(r7, r5)
            r2.setText(r3)
            r0.showMentionDownButton(r4, r4)
        L_0x03ec:
            r28.updateVisibleRows()
            r2 = 0
            r4 = 1
            goto L_0x0aba
        L_0x03f3:
            boolean r3 = org.telegram.messenger.BuildVars.LOGS_ENABLED
            if (r3 == 0) goto L_0x0419
            java.lang.StringBuilder r3 = new java.lang.StringBuilder
            r3.<init>()
            java.lang.String r4 = "received new messages "
            r3.append(r4)
            int r4 = r29.size()
            r3.append(r4)
            java.lang.String r4 = " in dialog "
            r3.append(r4)
            long r8 = r0.dialog_id
            r3.append(r8)
            java.lang.String r3 = r3.toString()
            org.telegram.messenger.FileLog.d(r3)
        L_0x0419:
            r3 = 0
            r4 = 0
            r6 = 0
            r8 = 0
            r10 = 0
            r13 = 0
            r14 = 0
        L_0x0420:
            int r9 = r29.size()
            if (r4 >= r9) goto L_0x09c4
            java.lang.Object r9 = r1.get(r4)
            org.telegram.messenger.MessageObject r9 = (org.telegram.messenger.MessageObject) r9
            boolean r12 = r9.scheduled
            int r15 = r0.chatMode
            r11 = 1
            if (r15 != r11) goto L_0x0435
            r11 = 1
            goto L_0x0436
        L_0x0435:
            r11 = 0
        L_0x0436:
            if (r12 != r11) goto L_0x09ae
            int r11 = r0.threadMessageId
            if (r11 == 0) goto L_0x044c
            int r12 = r9.getReplyTopMsgId()
            if (r11 == r12) goto L_0x044c
            int r11 = r0.threadMessageId
            int r12 = r9.getReplyMsgId()
            if (r11 == r12) goto L_0x044c
            goto L_0x09ae
        L_0x044c:
            int r11 = r9.getId()
            int r12 = r0.chatMode
            r15 = 1
            if (r12 != r15) goto L_0x04da
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r12 = r0.messagesDict
            r15 = 0
            r12 = r12[r15]
            int r12 = r12.indexOfKey(r11)
            if (r12 < 0) goto L_0x04da
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r12 = r0.messagesDict
            r12 = r12[r15]
            java.lang.Object r12 = r12.get(r11)
            org.telegram.messenger.MessageObject r12 = (org.telegram.messenger.MessageObject) r12
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r5 = r0.messagesDict
            r5 = r5[r15]
            r5.remove(r11)
            if (r12 == 0) goto L_0x04da
            java.util.ArrayList<org.telegram.messenger.MessageObject> r5 = r0.messages
            int r5 = r5.indexOf(r12)
            java.util.ArrayList<org.telegram.messenger.MessageObject> r15 = r0.messages
            r15.remove(r5)
            java.util.HashMap<java.lang.String, java.util.ArrayList<org.telegram.messenger.MessageObject>> r15 = r0.messagesByDays
            r20 = r8
            java.lang.String r8 = r12.dateKey
            java.lang.Object r8 = r15.get(r8)
            java.util.ArrayList r8 = (java.util.ArrayList) r8
            r8.remove(r12)
            boolean r8 = r8.isEmpty()
            if (r8 == 0) goto L_0x04a9
            java.util.HashMap<java.lang.String, java.util.ArrayList<org.telegram.messenger.MessageObject>> r8 = r0.messagesByDays
            java.lang.String r15 = r12.dateKey
            r8.remove(r15)
            if (r5 < 0) goto L_0x04a9
            java.util.ArrayList<org.telegram.messenger.MessageObject> r8 = r0.messages
            int r8 = r8.size()
            if (r5 >= r8) goto L_0x04a9
            java.util.ArrayList<org.telegram.messenger.MessageObject> r8 = r0.messages
            r8.remove(r5)
        L_0x04a9:
            boolean r5 = r12.hasValidGroupId()
            if (r5 == 0) goto L_0x04cf
            android.util.LongSparseArray<org.telegram.messenger.MessageObject$GroupedMessages> r5 = r0.groupedMessagesMap
            r8 = r13
            r15 = r14
            long r13 = r12.getGroupId()
            java.lang.Object r5 = r5.get(r13)
            org.telegram.messenger.MessageObject$GroupedMessages r5 = (org.telegram.messenger.MessageObject.GroupedMessages) r5
            java.util.ArrayList<org.telegram.messenger.MessageObject> r13 = r5.messages
            r13.remove(r12)
            if (r3 != 0) goto L_0x04c9
            android.util.LongSparseArray r3 = new android.util.LongSparseArray
            r3.<init>()
        L_0x04c9:
            long r12 = r5.groupId
            r3.put(r12, r5)
            goto L_0x04d1
        L_0x04cf:
            r8 = r13
            r15 = r14
        L_0x04d1:
            org.telegram.ui.ChatActivity$ChatActivityAdapter r5 = r0.chatAdapter
            if (r5 == 0) goto L_0x04de
            r12 = 0
            r5.notifyDataSetChanged(r12)
            goto L_0x04de
        L_0x04da:
            r20 = r8
            r8 = r13
            r15 = r14
        L_0x04de:
            boolean r5 = r28.isSecretChat()
            if (r5 == 0) goto L_0x04e7
            r0.checkSecretMessageForLocation(r9)
        L_0x04e7:
            int r5 = r0.chatMode
            r12 = 1
            if (r5 == r12) goto L_0x0503
            org.telegram.tgnet.TLRPC$User r5 = r0.currentUser
            if (r5 == 0) goto L_0x0503
            boolean r5 = r5.bot
            if (r5 == 0) goto L_0x04fa
            boolean r5 = r9.isOut()
            if (r5 != 0) goto L_0x0500
        L_0x04fa:
            org.telegram.tgnet.TLRPC$User r5 = r0.currentUser
            int r5 = r5.id
            if (r5 != r2) goto L_0x0503
        L_0x0500:
            r9.setIsRead()
        L_0x0503:
            org.telegram.tgnet.TLRPC$Message r5 = r9.messageOwner
            org.telegram.tgnet.TLRPC$MessageAction r5 = r5.action
            org.telegram.ui.Components.ChatAvatarContainer r12 = r0.avatarContainer
            if (r12 == 0) goto L_0x0520
            org.telegram.tgnet.TLRPC$EncryptedChat r13 = r0.currentEncryptedChat
            if (r13 == 0) goto L_0x0520
            boolean r13 = r5 instanceof org.telegram.tgnet.TLRPC$TL_messageEncryptedAction
            if (r13 == 0) goto L_0x0520
            org.telegram.tgnet.TLRPC$DecryptedMessageAction r13 = r5.encryptedAction
            boolean r14 = r13 instanceof org.telegram.tgnet.TLRPC$TL_decryptedMessageActionSetMessageTTL
            if (r14 == 0) goto L_0x0520
            org.telegram.tgnet.TLRPC$TL_decryptedMessageActionSetMessageTTL r13 = (org.telegram.tgnet.TLRPC$TL_decryptedMessageActionSetMessageTTL) r13
            int r13 = r13.ttl_seconds
            r12.setTime(r13)
        L_0x0520:
            int r12 = r9.type
            if (r12 < 0) goto L_0x09a0
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r12 = r0.messagesDict
            r13 = 0
            r12 = r12[r13]
            int r12 = r12.indexOfKey(r11)
            if (r12 < 0) goto L_0x0531
            goto L_0x09a0
        L_0x0531:
            org.telegram.tgnet.TLRPC$Chat r12 = r0.currentChat
            if (r12 == 0) goto L_0x0558
            boolean r13 = r12.creator
            if (r13 == 0) goto L_0x0558
            boolean r12 = org.telegram.messenger.ChatObject.isChannel(r12)
            if (r12 == 0) goto L_0x0545
            org.telegram.tgnet.TLRPC$Chat r12 = r0.currentChat
            boolean r12 = r12.megagroup
            if (r12 == 0) goto L_0x0558
        L_0x0545:
            boolean r12 = r5 instanceof org.telegram.tgnet.TLRPC$TL_messageActionChatCreate
            if (r12 != 0) goto L_0x09a0
            boolean r12 = r5 instanceof org.telegram.tgnet.TLRPC$TL_messageActionChatEditPhoto
            if (r12 == 0) goto L_0x0558
            java.util.ArrayList<org.telegram.messenger.MessageObject> r12 = r0.messages
            int r12 = r12.size()
            r13 = 2
            if (r12 >= r13) goto L_0x0558
            goto L_0x09a0
        L_0x0558:
            boolean r12 = r5 instanceof org.telegram.tgnet.TLRPC$TL_messageActionChannelMigrateFrom
            if (r12 == 0) goto L_0x055e
            goto L_0x09a0
        L_0x055e:
            int r12 = r0.threadMessageId
            if (r12 == 0) goto L_0x056a
            org.telegram.tgnet.TLRPC$Message r12 = r9.messageOwner
            boolean r12 = r12 instanceof org.telegram.tgnet.TLRPC$TL_messageEmpty
            if (r12 == 0) goto L_0x056a
            goto L_0x09a0
        L_0x056a:
            org.telegram.messenger.MessageObject r12 = r0.threadMessageObject
            if (r12 == 0) goto L_0x059a
            org.telegram.tgnet.TLRPC$Message r12 = r12.messageOwner
            org.telegram.tgnet.TLRPC$TL_messageReplies r12 = r12.replies
            if (r12 == 0) goto L_0x059a
            boolean r12 = r9.isReply()
            if (r12 == 0) goto L_0x059a
            org.telegram.tgnet.TLRPC$Message r12 = r9.messageOwner
            org.telegram.tgnet.TLRPC$MessageAction r12 = r12.action
            boolean r12 = r12 instanceof org.telegram.tgnet.TLRPC$TL_messageActionPinMessage
            if (r12 != 0) goto L_0x059a
            int r12 = r9.getReplyAnyMsgId()
            org.telegram.messenger.MessageObject r13 = r0.threadMessageObject
            int r13 = r13.getId()
            if (r13 != r12) goto L_0x059a
            org.telegram.messenger.MessageObject r12 = r0.threadMessageObject
            org.telegram.tgnet.TLRPC$Message r12 = r12.messageOwner
            org.telegram.tgnet.TLRPC$TL_messageReplies r12 = r12.replies
            int r13 = r12.replies
            r14 = 1
            int r13 = r13 + r14
            r12.replies = r13
        L_0x059a:
            r12 = 0
            r0.addToPolls(r9, r12)
            if (r4 != 0) goto L_0x05bc
            org.telegram.tgnet.TLRPC$Message r12 = r9.messageOwner
            int r12 = r12.id
            if (r12 >= 0) goto L_0x05bc
            int r12 = r9.type
            r13 = 5
            if (r12 == r13) goto L_0x05b1
            boolean r12 = r9.isVoice()
            if (r12 == 0) goto L_0x05bd
        L_0x05b1:
            int r12 = r0.chatMode
            r14 = 1
            if (r12 == r14) goto L_0x05bd
            java.util.ArrayList<org.telegram.messenger.MessageObject> r12 = r0.animatingMessageObjects
            r12.add(r9)
            goto L_0x05bd
        L_0x05bc:
            r13 = 5
        L_0x05bd:
            boolean r12 = r9.hasValidGroupId()
            if (r12 == 0) goto L_0x05f8
            android.util.LongSparseArray<org.telegram.messenger.MessageObject$GroupedMessages> r12 = r0.groupedMessagesMap
            long r13 = r9.getGroupId()
            java.lang.Object r12 = r12.get(r13)
            org.telegram.messenger.MessageObject$GroupedMessages r12 = (org.telegram.messenger.MessageObject.GroupedMessages) r12
            if (r12 != 0) goto L_0x05e4
            org.telegram.messenger.MessageObject$GroupedMessages r12 = new org.telegram.messenger.MessageObject$GroupedMessages
            r12.<init>()
            long r13 = r9.getGroupId()
            r12.groupId = r13
            r21 = r2
            android.util.LongSparseArray<org.telegram.messenger.MessageObject$GroupedMessages> r2 = r0.groupedMessagesMap
            r2.put(r13, r12)
            goto L_0x05e6
        L_0x05e4:
            r21 = r2
        L_0x05e6:
            if (r3 != 0) goto L_0x05ed
            android.util.LongSparseArray r3 = new android.util.LongSparseArray
            r3.<init>()
        L_0x05ed:
            long r13 = r12.groupId
            r3.put(r13, r12)
            java.util.ArrayList<org.telegram.messenger.MessageObject> r2 = r12.messages
            r2.add(r9)
            goto L_0x05fb
        L_0x05f8:
            r21 = r2
            r12 = 0
        L_0x05fb:
            if (r12 == 0) goto L_0x061f
            java.util.ArrayList<org.telegram.messenger.MessageObject> r2 = r12.messages
            int r2 = r2.size()
            r13 = 1
            if (r2 <= r13) goto L_0x0615
            java.util.ArrayList<org.telegram.messenger.MessageObject> r2 = r12.messages
            int r12 = r2.size()
            r13 = 2
            int r12 = r12 - r13
            java.lang.Object r2 = r2.get(r12)
            org.telegram.messenger.MessageObject r2 = (org.telegram.messenger.MessageObject) r2
            goto L_0x0616
        L_0x0615:
            r2 = 0
        L_0x0616:
            if (r2 == 0) goto L_0x061f
            java.util.ArrayList<org.telegram.messenger.MessageObject> r12 = r0.messages
            int r2 = r12.indexOf(r2)
            goto L_0x0620
        L_0x061f:
            r2 = -1
        L_0x0620:
            r12 = -1
            if (r2 != r12) goto L_0x06db
            boolean r12 = r9.scheduled
            if (r12 != 0) goto L_0x062d
            org.telegram.tgnet.TLRPC$Message r12 = r9.messageOwner
            int r12 = r12.id
            if (r12 < 0) goto L_0x0635
        L_0x062d:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r12 = r0.messages
            boolean r12 = r12.isEmpty()
            if (r12 == 0) goto L_0x063c
        L_0x0635:
            r23 = r8
            r25 = r15
            r2 = 0
            goto L_0x06e1
        L_0x063c:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r12 = r0.messages
            int r12 = r12.size()
            r13 = 0
        L_0x0643:
            if (r13 >= r12) goto L_0x06c1
            java.util.ArrayList<org.telegram.messenger.MessageObject> r14 = r0.messages
            java.lang.Object r14 = r14.get(r13)
            org.telegram.messenger.MessageObject r14 = (org.telegram.messenger.MessageObject) r14
            r22 = r2
            int r2 = r14.type
            if (r2 < 0) goto L_0x06ae
            org.telegram.tgnet.TLRPC$Message r2 = r14.messageOwner
            r23 = r8
            int r8 = r2.date
            r24 = r12
            if (r8 <= 0) goto L_0x06b2
            int r12 = r0.chatMode
            r25 = r15
            r15 = 1
            if (r12 == r15) goto L_0x0670
            int r2 = r2.id
            if (r2 <= 0) goto L_0x0670
            org.telegram.tgnet.TLRPC$Message r12 = r9.messageOwner
            int r12 = r12.id
            if (r12 <= 0) goto L_0x0670
            if (r2 < r12) goto L_0x0676
        L_0x0670:
            org.telegram.tgnet.TLRPC$Message r2 = r9.messageOwner
            int r2 = r2.date
            if (r8 > r2) goto L_0x06b4
        L_0x0676:
            long r26 = r14.getGroupId()
            r17 = 0
            int r2 = (r26 > r17 ? 1 : (r26 == r17 ? 0 : -1))
            if (r2 == 0) goto L_0x0696
            android.util.LongSparseArray<org.telegram.messenger.MessageObject$GroupedMessages> r2 = r0.groupedMessagesMap
            long r14 = r14.getGroupId()
            java.lang.Object r2 = r2.get(r14)
            org.telegram.messenger.MessageObject$GroupedMessages r2 = (org.telegram.messenger.MessageObject.GroupedMessages) r2
            if (r2 == 0) goto L_0x0697
            java.util.ArrayList<org.telegram.messenger.MessageObject> r8 = r2.messages
            int r8 = r8.size()
            if (r8 != 0) goto L_0x0697
        L_0x0696:
            r2 = 0
        L_0x0697:
            if (r2 != 0) goto L_0x069b
            r2 = r13
            goto L_0x06c9
        L_0x069b:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r8 = r0.messages
            java.util.ArrayList<org.telegram.messenger.MessageObject> r2 = r2.messages
            int r12 = r2.size()
            r13 = 1
            int r12 = r12 - r13
            java.lang.Object r2 = r2.get(r12)
            int r2 = r8.indexOf(r2)
            goto L_0x06c9
        L_0x06ae:
            r23 = r8
            r24 = r12
        L_0x06b2:
            r25 = r15
        L_0x06b4:
            r17 = 0
            int r13 = r13 + 1
            r2 = r22
            r8 = r23
            r12 = r24
            r15 = r25
            goto L_0x0643
        L_0x06c1:
            r22 = r2
            r23 = r8
            r25 = r15
            r17 = 0
        L_0x06c9:
            r8 = -1
            if (r2 == r8) goto L_0x06d4
            java.util.ArrayList<org.telegram.messenger.MessageObject> r8 = r0.messages
            int r8 = r8.size()
            if (r2 <= r8) goto L_0x06e3
        L_0x06d4:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r2 = r0.messages
            int r2 = r2.size()
            goto L_0x06e3
        L_0x06db:
            r22 = r2
            r23 = r8
            r25 = r15
        L_0x06e1:
            r17 = 0
        L_0x06e3:
            org.telegram.tgnet.TLRPC$EncryptedChat r8 = r0.currentEncryptedChat
            if (r8 == 0) goto L_0x071f
            org.telegram.tgnet.TLRPC$Message r8 = r9.messageOwner
            org.telegram.tgnet.TLRPC$MessageMedia r8 = r8.media
            boolean r12 = r8 instanceof org.telegram.tgnet.TLRPC$TL_messageMediaWebPage
            if (r12 == 0) goto L_0x071f
            org.telegram.tgnet.TLRPC$WebPage r8 = r8.webpage
            boolean r8 = r8 instanceof org.telegram.tgnet.TLRPC$TL_webPageUrlPending
            if (r8 == 0) goto L_0x071f
            if (r10 != 0) goto L_0x06fc
            java.util.HashMap r10 = new java.util.HashMap
            r10.<init>()
        L_0x06fc:
            org.telegram.tgnet.TLRPC$Message r8 = r9.messageOwner
            org.telegram.tgnet.TLRPC$MessageMedia r8 = r8.media
            org.telegram.tgnet.TLRPC$WebPage r8 = r8.webpage
            java.lang.String r8 = r8.url
            java.lang.Object r8 = r10.get(r8)
            java.util.ArrayList r8 = (java.util.ArrayList) r8
            if (r8 != 0) goto L_0x071c
            java.util.ArrayList r8 = new java.util.ArrayList
            r8.<init>()
            org.telegram.tgnet.TLRPC$Message r12 = r9.messageOwner
            org.telegram.tgnet.TLRPC$MessageMedia r12 = r12.media
            org.telegram.tgnet.TLRPC$WebPage r12 = r12.webpage
            java.lang.String r12 = r12.url
            r10.put(r12, r8)
        L_0x071c:
            r8.add(r9)
        L_0x071f:
            r9.checkLayout()
            boolean r8 = r5 instanceof org.telegram.tgnet.TLRPC$TL_messageActionChatMigrateTo
            if (r8 == 0) goto L_0x073f
            r0.migrateToNewChat(r9)
            if (r3 == 0) goto L_0x073e
            r6 = 0
        L_0x072c:
            int r1 = r3.size()
            if (r6 >= r1) goto L_0x073e
            java.lang.Object r1 = r3.valueAt(r6)
            org.telegram.messenger.MessageObject$GroupedMessages r1 = (org.telegram.messenger.MessageObject.GroupedMessages) r1
            r1.calculate()
            int r6 = r6 + 1
            goto L_0x072c
        L_0x073e:
            return
        L_0x073f:
            org.telegram.tgnet.TLRPC$Chat r8 = r0.currentChat
            if (r8 == 0) goto L_0x0751
            boolean r8 = r8.megagroup
            if (r8 == 0) goto L_0x0751
            boolean r8 = r5 instanceof org.telegram.tgnet.TLRPC$TL_messageActionChatAddUser
            if (r8 != 0) goto L_0x074f
            boolean r5 = r5 instanceof org.telegram.tgnet.TLRPC$TL_messageActionChatDeleteUser
            if (r5 == 0) goto L_0x0751
        L_0x074f:
            r25 = 1
        L_0x0751:
            int[] r5 = r0.minDate
            r8 = 0
            r12 = r5[r8]
            if (r12 == 0) goto L_0x0760
            org.telegram.tgnet.TLRPC$Message r12 = r9.messageOwner
            int r12 = r12.date
            r13 = r5[r8]
            if (r12 >= r13) goto L_0x0766
        L_0x0760:
            org.telegram.tgnet.TLRPC$Message r12 = r9.messageOwner
            int r12 = r12.date
            r5[r8] = r12
        L_0x0766:
            boolean r5 = r9.isOut()
            if (r5 == 0) goto L_0x077a
            org.telegram.tgnet.TLRPC$Message r5 = r9.messageOwner
            boolean r5 = r5.from_scheduled
            if (r5 != 0) goto L_0x077a
            r5 = 1
            r0.removeUnreadPlane(r5)
            r28.hideInfoView()
            r6 = 1
        L_0x077a:
            if (r11 <= 0) goto L_0x0792
            int[] r5 = r0.maxMessageId
            r8 = 0
            r12 = r5[r8]
            int r12 = java.lang.Math.min(r11, r12)
            r5[r8] = r12
            int[] r5 = r0.minMessageId
            r12 = r5[r8]
            int r12 = java.lang.Math.max(r11, r12)
            r5[r8] = r12
            goto L_0x07ab
        L_0x0792:
            r8 = 0
            org.telegram.tgnet.TLRPC$EncryptedChat r5 = r0.currentEncryptedChat
            if (r5 == 0) goto L_0x07ab
            int[] r5 = r0.maxMessageId
            r12 = r5[r8]
            int r12 = java.lang.Math.max(r11, r12)
            r5[r8] = r12
            int[] r5 = r0.minMessageId
            r12 = r5[r8]
            int r12 = java.lang.Math.min(r11, r12)
            r5[r8] = r12
        L_0x07ab:
            int[] r5 = r0.maxDate
            r12 = r5[r8]
            org.telegram.tgnet.TLRPC$Message r13 = r9.messageOwner
            int r13 = r13.date
            int r12 = java.lang.Math.max(r12, r13)
            r5[r8] = r12
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r5 = r0.messagesDict
            r5 = r5[r8]
            r5.put(r11, r9)
            java.util.HashMap<java.lang.String, java.util.ArrayList<org.telegram.messenger.MessageObject>> r5 = r0.messagesByDays
            java.lang.String r8 = r9.dateKey
            java.lang.Object r5 = r5.get(r8)
            java.util.ArrayList r5 = (java.util.ArrayList) r5
            java.util.ArrayList<org.telegram.messenger.MessageObject> r8 = r0.messages
            int r8 = r8.size()
            if (r2 <= r8) goto L_0x07d8
            java.util.ArrayList<org.telegram.messenger.MessageObject> r2 = r0.messages
            int r2 = r2.size()
        L_0x07d8:
            if (r5 != 0) goto L_0x087c
            java.util.ArrayList r5 = new java.util.ArrayList
            r5.<init>()
            java.util.HashMap<java.lang.String, java.util.ArrayList<org.telegram.messenger.MessageObject>> r8 = r0.messagesByDays
            java.lang.String r11 = r9.dateKey
            r8.put(r11, r5)
            org.telegram.tgnet.TLRPC$TL_message r8 = new org.telegram.tgnet.TLRPC$TL_message
            r8.<init>()
            int r11 = r0.chatMode
            r12 = 1
            if (r11 != r12) goto L_0x0822
            org.telegram.tgnet.TLRPC$Message r11 = r9.messageOwner
            int r11 = r11.date
            r13 = 2147483646(0x7ffffffe, float:NaN)
            if (r11 != r13) goto L_0x0809
            r11 = 2131626136(0x7f0e0898, float:1.88795E38)
            java.lang.String r13 = "MessageScheduledUntilOnline"
            java.lang.String r11 = org.telegram.messenger.LocaleController.getString(r13, r11)
            r8.message = r11
            r19 = r5
            r15 = r6
            r6 = 0
            goto L_0x0831
        L_0x0809:
            r13 = 2131626134(0x7f0e0896, float:1.8879496E38)
            java.lang.Object[] r14 = new java.lang.Object[r12]
            r19 = r5
            r15 = r6
            long r5 = (long) r11
            java.lang.String r5 = org.telegram.messenger.LocaleController.formatDateChat(r5, r12)
            r6 = 0
            r14[r6] = r5
            java.lang.String r5 = "MessageScheduledOn"
            java.lang.String r5 = org.telegram.messenger.LocaleController.formatString(r5, r13, r14)
            r8.message = r5
            goto L_0x0831
        L_0x0822:
            r19 = r5
            r15 = r6
            r6 = 0
            org.telegram.tgnet.TLRPC$Message r5 = r9.messageOwner
            int r5 = r5.date
            long r11 = (long) r5
            java.lang.String r5 = org.telegram.messenger.LocaleController.formatDateChat(r11)
            r8.message = r5
        L_0x0831:
            r8.id = r6
            java.util.Calendar r5 = java.util.Calendar.getInstance()
            org.telegram.tgnet.TLRPC$Message r11 = r9.messageOwner
            int r11 = r11.date
            long r11 = (long) r11
            r13 = 1000(0x3e8, double:4.94E-321)
            long r11 = r11 * r13
            r5.setTimeInMillis(r11)
            r11 = 11
            r5.set(r11, r6)
            r11 = 12
            r5.set(r11, r6)
            long r11 = r5.getTimeInMillis()
            long r11 = r11 / r13
            int r5 = (int) r11
            r8.date = r5
            org.telegram.messenger.MessageObject r5 = new org.telegram.messenger.MessageObject
            int r11 = r0.currentAccount
            r5.<init>(r11, r8, r6, r6)
            r6 = 10
            r5.type = r6
            r6 = 1
            r5.contentType = r6
            r5.isDateObject = r6
            int r6 = r0.lastStableId
            int r8 = r6 + 1
            r0.lastStableId = r8
            r5.stableId = r6
            java.util.ArrayList<org.telegram.messenger.MessageObject> r6 = r0.messages
            r6.add(r2, r5)
            org.telegram.ui.ChatActivity$ChatActivityAdapter r5 = r0.chatAdapter
            if (r5 == 0) goto L_0x0879
            r5.notifyItemInserted(r2)
        L_0x0879:
            r5 = r19
            goto L_0x087d
        L_0x087c:
            r15 = r6
        L_0x087d:
            org.telegram.tgnet.TLRPC$Message r6 = r9.messageOwner
            org.telegram.tgnet.TLRPC$MessageAction r6 = r6.action
            boolean r6 = r6 instanceof org.telegram.tgnet.TLRPC$TL_messageActionGeoProximityReached
            if (r6 != 0) goto L_0x08e6
            boolean r6 = r9.isOut()
            if (r6 == 0) goto L_0x0895
            org.telegram.tgnet.TLRPC$Message r6 = r9.messageOwner
            boolean r6 = r6.from_scheduled
            if (r6 == 0) goto L_0x0892
            goto L_0x0895
        L_0x0892:
            r6 = 0
            r12 = 2
            goto L_0x08e8
        L_0x0895:
            boolean r6 = r0.paused
            if (r6 == 0) goto L_0x08e6
            if (r2 != 0) goto L_0x08e6
            boolean r6 = r0.scrollToTopUnReadOnResume
            if (r6 != 0) goto L_0x08a9
            org.telegram.messenger.MessageObject r6 = r0.unreadMessageObject
            if (r6 == 0) goto L_0x08a9
            r0.removeMessageObject(r6)
            r6 = 0
            r0.unreadMessageObject = r6
        L_0x08a9:
            org.telegram.messenger.MessageObject r6 = r0.unreadMessageObject
            if (r6 != 0) goto L_0x08e6
            org.telegram.tgnet.TLRPC$TL_message r6 = new org.telegram.tgnet.TLRPC$TL_message
            r6.<init>()
            java.lang.String r8 = ""
            r6.message = r8
            r8 = 0
            r6.id = r8
            org.telegram.messenger.MessageObject r11 = new org.telegram.messenger.MessageObject
            int r12 = r0.currentAccount
            r11.<init>(r12, r6, r8, r8)
            r6 = 6
            r11.type = r6
            r12 = 2
            r11.contentType = r12
            int r6 = r0.lastStableId
            int r13 = r6 + 1
            r0.lastStableId = r13
            r11.stableId = r6
            java.util.ArrayList<org.telegram.messenger.MessageObject> r6 = r0.messages
            r6.add(r8, r11)
            org.telegram.ui.ChatActivity$ChatActivityAdapter r6 = r0.chatAdapter
            if (r6 == 0) goto L_0x08da
            r6.notifyItemInserted(r8)
        L_0x08da:
            r0.unreadMessageObject = r11
            r0.scrollToMessage = r11
            r6 = -10000(0xffffffffffffd8f0, float:NaN)
            r0.scrollToMessagePosition = r6
            r6 = 1
            r0.scrollToTopUnReadOnResume = r6
            goto L_0x08e7
        L_0x08e6:
            r12 = 2
        L_0x08e7:
            r6 = 0
        L_0x08e8:
            r5.add(r6, r9)
            org.telegram.ui.ChatActivity$ChatActivityAdapter r5 = r0.chatAdapter
            if (r5 == 0) goto L_0x0934
            java.util.ArrayList<org.telegram.messenger.MessageObject> r5 = r0.messages
            int r5 = r5.size()
            if (r2 >= r5) goto L_0x0934
            java.util.ArrayList<org.telegram.messenger.MessageObject> r5 = r0.messages
            java.lang.Object r5 = r5.get(r2)
            org.telegram.messenger.MessageObject r5 = (org.telegram.messenger.MessageObject) r5
            boolean r6 = r5.hasValidGroupId()
            if (r6 == 0) goto L_0x0934
            long r13 = r5.getGroupId()
            long r26 = r9.getGroupId()
            int r6 = (r13 > r26 ? 1 : (r13 == r26 ? 0 : -1))
            if (r6 == 0) goto L_0x0934
            android.util.LongSparseArray<org.telegram.messenger.MessageObject$GroupedMessages> r6 = r0.groupedMessagesMap
            long r13 = r5.getGroupId()
            java.lang.Object r5 = r6.get(r13)
            org.telegram.messenger.MessageObject$GroupedMessages r5 = (org.telegram.messenger.MessageObject.GroupedMessages) r5
            if (r5 == 0) goto L_0x0934
            java.util.ArrayList<org.telegram.messenger.MessageObject> r6 = r5.messages
            int r6 = r6.size()
            r8 = 1
            if (r6 <= r8) goto L_0x0934
            java.util.ArrayList<org.telegram.messenger.MessageObject> r5 = r5.messages
            int r5 = r5.size()
            org.telegram.ui.ChatActivity$ChatActivityAdapter r6 = r0.chatAdapter
            int r5 = r5 - r8
            r6.notifyItemRangeChanged(r8, r5)
        L_0x0934:
            int r5 = r0.lastStableId
            int r6 = r5 + 1
            r0.lastStableId = r6
            r9.stableId = r5
            java.util.ArrayList<org.telegram.messenger.MessageObject> r5 = r0.messages
            r5.add(r2, r9)
            if (r2 != 0) goto L_0x0945
            r20 = 1
        L_0x0945:
            org.telegram.ui.ChatActivity$ChatActivityAdapter r5 = r0.chatAdapter
            if (r5 == 0) goto L_0x0951
            r5.notifyItemChanged(r2)
            org.telegram.ui.ChatActivity$ChatActivityAdapter r5 = r0.chatAdapter
            r5.notifyItemInserted(r2)
        L_0x0951:
            boolean r2 = r9.isOut()
            if (r2 == 0) goto L_0x096b
            boolean r2 = r0.waitingForSendingMessageLoad
            if (r2 == 0) goto L_0x096b
            r2 = 0
            r0.waitingForSendingMessageLoad = r2
            org.telegram.ui.Components.ChatActivityEnterView r2 = r0.chatActivityEnterView
            r5 = 1
            r2.hideTopView(r5)
            android.animation.ValueAnimator r2 = r0.changeBoundAnimator
            if (r2 == 0) goto L_0x096b
            r2.start()
        L_0x096b:
            int r2 = r0.threadMessageId
            if (r2 != 0) goto L_0x098e
            boolean r2 = r9.isOut()
            if (r2 != 0) goto L_0x0988
            org.telegram.tgnet.TLRPC$Message r2 = r9.messageOwner
            boolean r2 = r2.mentioned
            if (r2 == 0) goto L_0x0988
            boolean r2 = r9.isContentUnread()
            if (r2 == 0) goto L_0x0988
            int r2 = r0.newMentionsCount
            r5 = 1
            int r2 = r2 + r5
            r0.newMentionsCount = r2
            goto L_0x0989
        L_0x0988:
            r5 = 1
        L_0x0989:
            int r2 = r0.newUnreadMessageCount
            int r2 = r2 + r5
            r0.newUnreadMessageCount = r2
        L_0x098e:
            int r2 = r9.type
            r5 = 10
            r8 = 11
            if (r2 == r5) goto L_0x099b
            if (r2 != r8) goto L_0x0999
            goto L_0x099b
        L_0x0999:
            r6 = r15
            goto L_0x09b7
        L_0x099b:
            r6 = r15
            r14 = r25
            r13 = 1
            goto L_0x09bb
        L_0x09a0:
            r21 = r2
            r23 = r8
            r25 = r15
        L_0x09a6:
            r5 = 10
            r8 = 11
            r12 = 2
            r17 = 0
            goto L_0x09b7
        L_0x09ae:
            r21 = r2
            r20 = r8
            r23 = r13
            r25 = r14
            goto L_0x09a6
        L_0x09b7:
            r13 = r23
            r14 = r25
        L_0x09bb:
            int r4 = r4 + 1
            r8 = r20
            r2 = r21
            r5 = 5
            goto L_0x0420
        L_0x09c4:
            r20 = r8
            r23 = r13
            r25 = r14
            if (r10 == 0) goto L_0x09dd
            org.telegram.messenger.MessagesController r2 = r28.getMessagesController()
            long r4 = r0.dialog_id
            int r8 = r0.chatMode
            r9 = 1
            if (r8 != r9) goto L_0x09d9
            r8 = 1
            goto L_0x09da
        L_0x09d9:
            r8 = 0
        L_0x09da:
            r2.reloadWebPages(r4, r10, r8)
        L_0x09dd:
            if (r3 == 0) goto L_0x0a1f
            r2 = 0
        L_0x09e0:
            int r4 = r3.size()
            if (r2 >= r4) goto L_0x0a1f
            java.lang.Object r4 = r3.valueAt(r2)
            org.telegram.messenger.MessageObject$GroupedMessages r4 = (org.telegram.messenger.MessageObject.GroupedMessages) r4
            java.util.ArrayList<org.telegram.messenger.MessageObject$GroupedMessagePosition> r5 = r4.posArray
            int r5 = r5.size()
            r4.calculate()
            java.util.ArrayList<org.telegram.messenger.MessageObject$GroupedMessagePosition> r8 = r4.posArray
            int r8 = r8.size()
            int r5 = r8 - r5
            if (r5 <= 0) goto L_0x0a1c
            org.telegram.ui.ChatActivity$ChatActivityAdapter r5 = r0.chatAdapter
            if (r5 == 0) goto L_0x0a1c
            java.util.ArrayList<org.telegram.messenger.MessageObject> r5 = r0.messages
            java.util.ArrayList<org.telegram.messenger.MessageObject> r4 = r4.messages
            int r9 = r4.size()
            r10 = 1
            int r9 = r9 - r10
            java.lang.Object r4 = r4.get(r9)
            int r4 = r5.indexOf(r4)
            if (r4 < 0) goto L_0x0a1c
            org.telegram.ui.ChatActivity$ChatActivityAdapter r5 = r0.chatAdapter
            r5.notifyItemRangeChanged(r4, r8)
        L_0x0a1c:
            int r2 = r2 + 1
            goto L_0x09e0
        L_0x0a1f:
            r2 = 0
            r0.showProgressView(r2)
            org.telegram.ui.ChatActivity$ChatActivityAdapter r2 = r0.chatAdapter
            if (r2 != 0) goto L_0x0a2a
            r3 = 1
            r0.scrollToTopOnResume = r3
        L_0x0a2a:
            org.telegram.ui.Components.RecyclerListView r3 = r0.chatListView
            if (r3 == 0) goto L_0x0ab1
            if (r2 == 0) goto L_0x0ab1
            androidx.recyclerview.widget.GridLayoutManagerFixed r2 = r0.chatLayoutManager
            int r2 = r2.findFirstVisibleItemPosition()
            r3 = -1
            if (r2 != r3) goto L_0x0a3a
            r2 = 0
        L_0x0a3a:
            androidx.recyclerview.widget.GridLayoutManagerFixed r3 = r0.chatLayoutManager
            android.view.View r3 = r3.findViewByPosition(r2)
            if (r3 == 0) goto L_0x0a4e
            int r3 = r3.getBottom()
            org.telegram.ui.Components.RecyclerListView r4 = r0.chatListView
            int r4 = r4.getMeasuredHeight()
            int r3 = r3 - r4
            goto L_0x0a4f
        L_0x0a4e:
            r3 = 0
        L_0x0a4f:
            if (r2 != 0) goto L_0x0a59
            r2 = 1084227584(0x40a00000, float:5.0)
            int r2 = org.telegram.messenger.AndroidUtilities.dp(r2)
            if (r3 <= r2) goto L_0x0a5b
        L_0x0a59:
            if (r6 == 0) goto L_0x0a75
        L_0x0a5b:
            r2 = 0
            r0.newUnreadMessageCount = r2
            boolean r2 = r0.firstLoading
            if (r2 != 0) goto L_0x0a73
            int r2 = r0.chatMode
            r3 = 1
            if (r2 == r3) goto L_0x0a73
            boolean r2 = r0.paused
            if (r2 == 0) goto L_0x0a6e
            r0.scrollToTopOnResume = r3
            goto L_0x0a73
        L_0x0a6e:
            r0.forceScrollToTop = r3
            r28.moveScrollToLastMessage()
        L_0x0a73:
            r4 = 1
            goto L_0x0a8e
        L_0x0a75:
            int r2 = r0.newUnreadMessageCount
            if (r2 == 0) goto L_0x0a88
            org.telegram.ui.Components.CounterView r3 = r0.pagedownButtonCounter
            if (r3 == 0) goto L_0x0a88
            int r4 = r0.prevSetUnreadCount
            if (r4 == r2) goto L_0x0a88
            r0.prevSetUnreadCount = r2
            r4 = 1
            r3.setCount(r2, r4)
            goto L_0x0a89
        L_0x0a88:
            r4 = 1
        L_0x0a89:
            r0.canShowPagedownButton = r4
            r0.updatePagedownButtonVisibility(r4)
        L_0x0a8e:
            int r2 = r0.newMentionsCount
            if (r2 == 0) goto L_0x0ab4
            org.telegram.ui.ActionBar.SimpleTextView r2 = r0.mentiondownButtonCounter
            if (r2 == 0) goto L_0x0ab4
            r3 = 0
            r2.setVisibility(r3)
            org.telegram.ui.ActionBar.SimpleTextView r2 = r0.mentiondownButtonCounter
            java.lang.Object[] r5 = new java.lang.Object[r4]
            int r6 = r0.newMentionsCount
            java.lang.Integer r6 = java.lang.Integer.valueOf(r6)
            r5[r3] = r6
            java.lang.String r3 = java.lang.String.format(r7, r5)
            r2.setText(r3)
            r0.showMentionDownButton(r4, r4)
            goto L_0x0ab4
        L_0x0ab1:
            r4 = 1
            r0.scrollToTopOnResume = r4
        L_0x0ab4:
            r2 = r20
            r13 = r23
            r14 = r25
        L_0x0aba:
            int r3 = r0.chatMode
            if (r3 != r4) goto L_0x0b28
            boolean r3 = r29.isEmpty()
            if (r3 != 0) goto L_0x0b28
            r3 = 0
            java.lang.Object r1 = r1.get(r3)
            org.telegram.messenger.MessageObject r1 = (org.telegram.messenger.MessageObject) r1
            int r3 = r1.getId()
            if (r3 >= 0) goto L_0x0b28
            androidx.recyclerview.widget.ChatListItemAnimator r4 = r0.chatListItemAnimator
            if (r4 == 0) goto L_0x0ad8
            r4.setShouldAnimateEnterFromBottom(r2)
        L_0x0ad8:
            if (r2 == 0) goto L_0x0ade
            r28.moveScrollToLastMessage()
            goto L_0x0b28
        L_0x0ade:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r2 = r0.messages
            int r2 = r2.indexOf(r1)
            androidx.recyclerview.widget.GridLayoutManagerFixed r4 = r0.chatLayoutManager
            if (r4 == 0) goto L_0x0b20
            if (r2 <= 0) goto L_0x0b20
            org.telegram.ui.ChatActivity$ChatActivityAdapter r5 = r0.chatAdapter
            int r5 = r5.messagesStartRow
            int r5 = r5 + r2
            android.view.View r4 = r4.findViewByPosition(r5)
            if (r4 != 0) goto L_0x0b08
            androidx.recyclerview.widget.GridLayoutManagerFixed r4 = r0.chatLayoutManager
            org.telegram.ui.ChatActivity$ChatActivityAdapter r5 = r0.chatAdapter
            int r5 = r5.messagesStartRow
            int r5 = r5 + r2
            r2 = 1
            int r5 = r5 - r2
            android.view.View r2 = r4.findViewByPosition(r5)
            if (r2 == 0) goto L_0x0b20
        L_0x0b08:
            androidx.recyclerview.widget.GridLayoutManagerFixed r2 = r0.chatLayoutManager
            org.telegram.ui.ChatActivity$ChatActivityAdapter r3 = r0.chatAdapter
            int r3 = r3.messagesStartRow
            java.util.ArrayList<org.telegram.messenger.MessageObject> r4 = r0.messages
            int r4 = r4.indexOf(r1)
            int r3 = r3 + r4
            int r1 = r0.getScrollOffsetForMessage(r1)
            r4 = 0
            r2.scrollToPositionWithOffset(r3, r1, r4)
            goto L_0x0b28
        L_0x0b20:
            org.telegram.ui.-$$Lambda$ChatActivity$tuDx4ieWEjDd0KKzQNyxFg7cXiY r1 = new org.telegram.ui.-$$Lambda$ChatActivity$tuDx4ieWEjDd0KKzQNyxFg7cXiY
            r1.<init>(r3)
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r1)
        L_0x0b28:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r1 = r0.messages
            boolean r1 = r1.isEmpty()
            if (r1 != 0) goto L_0x0b40
            java.lang.String r1 = r0.botUser
            if (r1 == 0) goto L_0x0b40
            int r1 = r1.length()
            if (r1 != 0) goto L_0x0b40
            r1 = 0
            r0.botUser = r1
            r28.updateBottomOverlay()
        L_0x0b40:
            if (r13 == 0) goto L_0x0b48
            r28.updateTitle()
            r28.checkAndUpdateAvatar()
        L_0x0b48:
            if (r14 == 0) goto L_0x0b58
            org.telegram.messenger.MessagesController r1 = r28.getMessagesController()
            org.telegram.tgnet.TLRPC$Chat r2 = r0.currentChat
            int r2 = r2.id
            r3 = 0
            r4 = 1
            r1.loadFullChat(r2, r3, r4)
            goto L_0x0b59
        L_0x0b58:
            r4 = 1
        L_0x0b59:
            r28.checkWaitingForReplies()
            r0.updateReplyMessageHeader(r4)
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.processNewMessages(java.util.ArrayList):void");
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$processNewMessages$91 */
    public /* synthetic */ void lambda$processNewMessages$91$ChatActivity(int i) {
        scrollToMessageId(i, 0, false, 0, true, 0);
    }

    /* JADX WARNING: Code restructure failed: missing block: B:41:0x00b4, code lost:
        if (r7 == r0.groupedMessagesMap.get(r5.getGroupId())) goto L_0x00b6;
     */
    /* JADX WARNING: Removed duplicated region for block: B:114:0x021b  */
    /* JADX WARNING: Removed duplicated region for block: B:122:0x024d  */
    /* JADX WARNING: Removed duplicated region for block: B:123:0x0254  */
    /* JADX WARNING: Removed duplicated region for block: B:128:0x026f  */
    /* JADX WARNING: Removed duplicated region for block: B:131:0x0277  */
    /* JADX WARNING: Removed duplicated region for block: B:133:0x02b6  */
    /* JADX WARNING: Removed duplicated region for block: B:137:0x02c3  */
    /* JADX WARNING: Removed duplicated region for block: B:158:0x033b  */
    /* JADX WARNING: Removed duplicated region for block: B:186:0x0409  */
    /* JADX WARNING: Removed duplicated region for block: B:18:0x0040  */
    /* JADX WARNING: Removed duplicated region for block: B:210:0x0484  */
    /* JADX WARNING: Removed duplicated region for block: B:214:0x0499  */
    /* JADX WARNING: Removed duplicated region for block: B:216:0x006d A[EDGE_INSN: B:216:0x006d->B:30:0x006d ?: BREAK  , SYNTHETIC] */
    /* JADX WARNING: Removed duplicated region for block: B:230:? A[RETURN, SYNTHETIC] */
    /* JADX WARNING: Removed duplicated region for block: B:33:0x007c  */
    /* JADX WARNING: Removed duplicated region for block: B:47:0x00c4  */
    /* JADX WARNING: Removed duplicated region for block: B:58:0x0100  */
    /* JADX WARNING: Removed duplicated region for block: B:82:0x015e  */
    /* JADX WARNING: Removed duplicated region for block: B:85:0x016a  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private void processDeletedMessages(java.util.ArrayList<java.lang.Integer> r42, int r43) {
        /*
            r41 = this;
            r0 = r41
            r1 = r43
            java.util.ArrayList r2 = new java.util.ArrayList
            r2.<init>()
            org.telegram.tgnet.TLRPC$Chat r3 = r0.currentChat
            boolean r3 = org.telegram.messenger.ChatObject.isChannel(r3)
            r4 = 0
            r6 = 1
            if (r3 == 0) goto L_0x0026
            if (r1 != 0) goto L_0x001e
            long r8 = r0.mergeDialogId
            int r3 = (r8 > r4 ? 1 : (r8 == r4 ? 0 : -1))
            if (r3 == 0) goto L_0x001e
            r1 = 1
            goto L_0x002a
        L_0x001e:
            org.telegram.tgnet.TLRPC$Chat r3 = r0.currentChat
            int r3 = r3.id
            if (r1 != r3) goto L_0x0025
            goto L_0x0029
        L_0x0025:
            return
        L_0x0026:
            if (r1 == 0) goto L_0x0029
            return
        L_0x0029:
            r1 = 0
        L_0x002a:
            int r3 = r42.size()
            org.telegram.messenger.MessageObject r8 = r0.threadMessageObject
            if (r8 == 0) goto L_0x006d
            org.telegram.ui.ActionBar.ActionBarLayout r8 = r0.parentLayout
            if (r8 == 0) goto L_0x006d
            java.util.ArrayList<org.telegram.ui.ActionBar.BaseFragment> r8 = r8.fragmentsStack
            int r8 = r8.size()
            int r8 = r8 - r6
            r9 = 0
        L_0x003e:
            if (r9 >= r8) goto L_0x006d
            org.telegram.ui.ActionBar.ActionBarLayout r10 = r0.parentLayout
            java.util.ArrayList<org.telegram.ui.ActionBar.BaseFragment> r10 = r10.fragmentsStack
            java.lang.Object r10 = r10.get(r9)
            org.telegram.ui.ActionBar.BaseFragment r10 = (org.telegram.ui.ActionBar.BaseFragment) r10
            if (r10 == r0) goto L_0x006a
            boolean r11 = r10 instanceof org.telegram.ui.ChatActivity
            if (r11 == 0) goto L_0x006a
            org.telegram.ui.ChatActivity r10 = (org.telegram.ui.ChatActivity) r10
            boolean r11 = r10.needRemovePreviousSameChatActivity
            if (r11 == 0) goto L_0x006a
            long r11 = r10.dialog_id
            long r13 = r0.dialog_id
            int r15 = (r11 > r13 ? 1 : (r11 == r13 ? 0 : -1))
            if (r15 != 0) goto L_0x006a
            int r10 = r10.getChatMode()
            int r11 = r41.getChatMode()
            if (r10 != r11) goto L_0x006a
            r8 = 1
            goto L_0x006e
        L_0x006a:
            int r9 = r9 + 1
            goto L_0x003e
        L_0x006d:
            r8 = 0
        L_0x006e:
            r10 = 0
            r11 = 0
            r12 = 0
            r13 = 0
            r14 = 0
            r15 = 0
            r16 = 0
            r17 = 0
            r18 = 0
        L_0x007a:
            if (r10 >= r3) goto L_0x0269
            r9 = r42
            java.lang.Object r19 = r9.get(r10)
            r4 = r19
            java.lang.Integer r4 = (java.lang.Integer) r4
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r5 = r0.messagesDict
            r5 = r5[r1]
            int r7 = r4.intValue()
            java.lang.Object r5 = r5.get(r7)
            org.telegram.messenger.MessageObject r5 = (org.telegram.messenger.MessageObject) r5
            org.telegram.messenger.MessageObject r7 = r0.selectedObject
            if (r7 == 0) goto L_0x00a0
            if (r5 == r7) goto L_0x009b
            goto L_0x00a0
        L_0x009b:
            r22 = r13
            r23 = r14
            goto L_0x00b6
        L_0x00a0:
            if (r5 == 0) goto L_0x00be
            org.telegram.messenger.MessageObject$GroupedMessages r7 = r0.selectedObjectGroup
            if (r7 == 0) goto L_0x00be
            android.util.LongSparseArray<org.telegram.messenger.MessageObject$GroupedMessages> r6 = r0.groupedMessagesMap
            r22 = r13
            r23 = r14
            long r13 = r5.getGroupId()
            java.lang.Object r6 = r6.get(r13)
            if (r7 != r6) goto L_0x00c2
        L_0x00b6:
            org.telegram.ui.ActionBar.ActionBarPopupWindow r6 = r0.scrimPopupWindow
            if (r6 == 0) goto L_0x00c2
            r6.dismiss()
            goto L_0x00c2
        L_0x00be:
            r22 = r13
            r23 = r14
        L_0x00c2:
            if (r1 != 0) goto L_0x00fe
            java.util.HashMap<java.lang.Integer, org.telegram.messenger.MessageObject> r6 = r0.pinnedMessageObjects
            boolean r6 = r6.containsKey(r4)
            if (r6 == 0) goto L_0x00f5
            java.util.HashMap<java.lang.Integer, org.telegram.messenger.MessageObject> r6 = r0.pinnedMessageObjects
            r6.remove(r4)
            java.util.ArrayList<java.lang.Integer> r6 = r0.pinnedMessageIds
            r6.remove(r4)
            java.util.ArrayList<java.lang.Integer> r6 = r0.pinnedMessageIds
            int r6 = r6.size()
            r0.loadedPinnedMessagesCount = r6
            int r6 = r0.totalPinnedMessagesCount
            r7 = 1
            int r6 = r6 - r7
            r0.totalPinnedMessagesCount = r6
            if (r6 >= 0) goto L_0x00ea
            r6 = 0
            r0.totalPinnedMessagesCount = r6
            goto L_0x00eb
        L_0x00ea:
            r6 = 0
        L_0x00eb:
            int r7 = r0.currentPinnedMessageId
            int r13 = r4.intValue()
            if (r7 != r13) goto L_0x00f5
            r0.currentPinnedMessageId = r6
        L_0x00f5:
            android.util.SparseArray<org.telegram.messenger.MessageObject> r6 = r0.repliesMessagesDict
            int r7 = r4.intValue()
            r6.remove(r7)
        L_0x00fe:
            if (r5 == 0) goto L_0x0254
            org.telegram.tgnet.TLRPC$Message r6 = r5.messageOwner
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r7 = r6.reply_to
            if (r7 == 0) goto L_0x0137
            org.telegram.tgnet.TLRPC$MessageAction r6 = r6.action
            boolean r6 = r6 instanceof org.telegram.tgnet.TLRPC$TL_messageActionPinMessage
            if (r6 != 0) goto L_0x0137
            int r6 = r5.getReplyAnyMsgId()
            org.telegram.messenger.MessageObject r7 = r0.threadMessageObject
            if (r7 == 0) goto L_0x0139
            int r7 = r7.getId()
            if (r7 != r6) goto L_0x0139
            if (r8 != 0) goto L_0x0130
            org.telegram.messenger.MessageObject r6 = r0.threadMessageObject
            boolean r6 = r6.hasReplies()
            if (r6 == 0) goto L_0x0130
            org.telegram.messenger.MessageObject r6 = r0.threadMessageObject
            org.telegram.tgnet.TLRPC$Message r6 = r6.messageOwner
            org.telegram.tgnet.TLRPC$TL_messageReplies r6 = r6.replies
            int r7 = r6.replies
            r11 = 1
            int r7 = r7 - r11
            r6.replies = r7
        L_0x0130:
            int r6 = r0.replyOriginalMessageId
            if (r6 == 0) goto L_0x0136
            int r12 = r12 + 1
        L_0x0136:
            r11 = 1
        L_0x0137:
            r14 = 1
            goto L_0x0158
        L_0x0139:
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r7 = r0.messagesDict
            r7 = r7[r1]
            java.lang.Object r6 = r7.get(r6)
            org.telegram.messenger.MessageObject r6 = (org.telegram.messenger.MessageObject) r6
            if (r6 == 0) goto L_0x0137
            boolean r7 = r6.hasReplies()
            if (r7 == 0) goto L_0x0137
            org.telegram.tgnet.TLRPC$Message r7 = r6.messageOwner
            org.telegram.tgnet.TLRPC$TL_messageReplies r7 = r7.replies
            int r13 = r7.replies
            r14 = 1
            int r13 = r13 - r14
            r7.replies = r13
            r7 = 0
            r6.viewsReloaded = r7
        L_0x0158:
            r5.deleted = r14
            org.telegram.messenger.MessageObject r6 = r0.editingMessageObject
            if (r6 != r5) goto L_0x0161
            r0.hideFieldPanel(r14)
        L_0x0161:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r6 = r0.messages
            int r6 = r6.indexOf(r5)
            r7 = -1
            if (r6 == r7) goto L_0x024d
            boolean r7 = r5.scheduled
            if (r7 == 0) goto L_0x0175
            int r7 = r0.scheduledMessagesCount
            int r7 = r7 - r14
            r0.scheduledMessagesCount = r7
            r17 = 1
        L_0x0175:
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r7 = r0.selectedMessagesIds
            r7 = r7[r1]
            int r13 = r4.intValue()
            int r7 = r7.indexOfKey(r13)
            if (r7 < 0) goto L_0x0191
            int r7 = r3 + -1
            if (r10 != r7) goto L_0x0189
            r7 = 1
            goto L_0x018a
        L_0x0189:
            r7 = 0
        L_0x018a:
            r13 = 0
            r0.addToSelectedMessages(r5, r13, r7)
            r14 = r7
            r13 = 1
            goto L_0x0195
        L_0x0191:
            r13 = r22
            r14 = r23
        L_0x0195:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r7 = r0.messages
            java.lang.Object r7 = r7.remove(r6)
            org.telegram.messenger.MessageObject r7 = (org.telegram.messenger.MessageObject) r7
            r24 = r3
            org.telegram.ui.ChatActivity$ChatActivityAdapter r3 = r0.chatAdapter
            if (r3 == 0) goto L_0x01af
            int r3 = r3.messagesStartRow
            int r3 = r3 + r6
            java.lang.Integer r3 = java.lang.Integer.valueOf(r3)
            r2.add(r3)
        L_0x01af:
            long r22 = r7.getGroupId()
            r20 = 0
            int r3 = (r22 > r20 ? 1 : (r22 == r20 ? 0 : -1))
            if (r3 == 0) goto L_0x0200
            android.util.LongSparseArray<org.telegram.messenger.MessageObject$GroupedMessages> r3 = r0.groupedMessagesMap
            r25 = r8
            long r7 = r7.getGroupId()
            java.lang.Object r3 = r3.get(r7)
            org.telegram.messenger.MessageObject$GroupedMessages r3 = (org.telegram.messenger.MessageObject.GroupedMessages) r3
            if (r3 == 0) goto L_0x0202
            if (r15 != 0) goto L_0x01d5
            android.util.LongSparseArray r15 = new android.util.LongSparseArray
            r15.<init>()
            android.util.LongSparseArray r18 = new android.util.LongSparseArray
            r18.<init>()
        L_0x01d5:
            r7 = r18
            long r8 = r3.groupId
            r15.put(r8, r3)
            long r8 = r3.groupId
            java.lang.Object r8 = r7.get(r8)
            if (r8 != 0) goto L_0x01f6
            long r8 = r3.groupId
            r26 = r11
            java.util.ArrayList<org.telegram.messenger.MessageObject> r11 = r3.messages
            int r11 = r11.size()
            java.lang.Integer r11 = java.lang.Integer.valueOf(r11)
            r7.put(r8, r11)
            goto L_0x01f8
        L_0x01f6:
            r26 = r11
        L_0x01f8:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r3 = r3.messages
            r3.remove(r5)
            r18 = r7
            goto L_0x0204
        L_0x0200:
            r25 = r8
        L_0x0202:
            r26 = r11
        L_0x0204:
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r3 = r0.messagesDict
            r3 = r3[r1]
            int r4 = r4.intValue()
            r3.remove(r4)
            java.util.HashMap<java.lang.String, java.util.ArrayList<org.telegram.messenger.MessageObject>> r3 = r0.messagesByDays
            java.lang.String r4 = r5.dateKey
            java.lang.Object r3 = r3.get(r4)
            java.util.ArrayList r3 = (java.util.ArrayList) r3
            if (r3 == 0) goto L_0x0248
            r3.remove(r5)
            boolean r3 = r3.isEmpty()
            if (r3 == 0) goto L_0x0248
            java.util.HashMap<java.lang.String, java.util.ArrayList<org.telegram.messenger.MessageObject>> r3 = r0.messagesByDays
            java.lang.String r4 = r5.dateKey
            r3.remove(r4)
            java.util.ArrayList<org.telegram.messenger.MessageObject> r3 = r0.messages
            int r3 = r3.size()
            if (r6 >= r3) goto L_0x0248
            java.util.ArrayList<org.telegram.messenger.MessageObject> r3 = r0.messages
            r3.remove(r6)
            org.telegram.ui.ChatActivity$ChatActivityAdapter r3 = r0.chatAdapter
            if (r3 == 0) goto L_0x0248
            int r3 = r3.messagesStartRow
            int r3 = r3 + r6
            java.lang.Integer r3 = java.lang.Integer.valueOf(r3)
            r2.add(r3)
        L_0x0248:
            r11 = r26
            r16 = 1
            goto L_0x025e
        L_0x024d:
            r24 = r3
            r25 = r8
            r26 = r11
            goto L_0x0258
        L_0x0254:
            r24 = r3
            r25 = r8
        L_0x0258:
            r20 = 0
            r13 = r22
            r14 = r23
        L_0x025e:
            int r10 = r10 + 1
            r4 = r20
            r3 = r24
            r8 = r25
            r6 = 1
            goto L_0x007a
        L_0x0269:
            r22 = r13
            r23 = r14
            if (r11 == 0) goto L_0x0273
            r1 = 1
            r0.updateReplyMessageHeader(r1)
        L_0x0273:
            r1 = 2
            r3 = 3
            if (r12 == 0) goto L_0x02b4
            org.telegram.messenger.NotificationCenter r4 = r41.getNotificationCenter()
            int r5 = org.telegram.messenger.NotificationCenter.changeRepliesCounter
            java.lang.Object[] r6 = new java.lang.Object[r3]
            org.telegram.tgnet.TLRPC$Chat r7 = r0.replyOriginalChat
            int r7 = r7.id
            java.lang.Integer r7 = java.lang.Integer.valueOf(r7)
            r8 = 0
            r6[r8] = r7
            int r7 = r0.replyOriginalMessageId
            java.lang.Integer r7 = java.lang.Integer.valueOf(r7)
            r8 = 1
            r6[r8] = r7
            int r7 = -r12
            java.lang.Integer r8 = java.lang.Integer.valueOf(r7)
            r6[r1] = r8
            r4.postNotificationName(r5, r6)
            org.telegram.messenger.MessagesStorage r24 = r41.getMessagesStorage()
            org.telegram.tgnet.TLRPC$Chat r4 = r0.replyOriginalChat
            int r4 = r4.id
            int r5 = r0.replyOriginalMessageId
            r27 = 0
            r28 = 0
            r25 = r4
            r26 = r5
            r29 = r7
            r24.updateRepliesCount(r25, r26, r27, r28, r29)
        L_0x02b4:
            if (r22 == 0) goto L_0x02c1
            if (r23 != 0) goto L_0x02be
            r4 = 0
            r5 = 1
            r6 = 0
            r0.addToSelectedMessages(r4, r6, r5)
        L_0x02be:
            r41.updateActionModeTitle()
        L_0x02c1:
            if (r15 == 0) goto L_0x0333
            r4 = 0
        L_0x02c4:
            int r5 = r15.size()
            if (r4 >= r5) goto L_0x0333
            java.lang.Object r5 = r15.valueAt(r4)
            org.telegram.messenger.MessageObject$GroupedMessages r5 = (org.telegram.messenger.MessageObject.GroupedMessages) r5
            androidx.recyclerview.widget.ChatListItemAnimator r6 = r0.chatListItemAnimator
            if (r6 == 0) goto L_0x02e8
            java.util.ArrayList<org.telegram.messenger.MessageObject> r6 = r5.messages
            int r6 = r6.size()
            r7 = 1
            if (r6 != r7) goto L_0x02e3
            androidx.recyclerview.widget.ChatListItemAnimator r6 = r0.chatListItemAnimator
            r6.groupWillTransformToSingleMessage(r5)
            goto L_0x02e8
        L_0x02e3:
            androidx.recyclerview.widget.ChatListItemAnimator r6 = r0.chatListItemAnimator
            r6.groupWillChanged(r5)
        L_0x02e8:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r6 = r5.messages
            boolean r6 = r6.isEmpty()
            if (r6 == 0) goto L_0x02f8
            android.util.LongSparseArray<org.telegram.messenger.MessageObject$GroupedMessages> r6 = r0.groupedMessagesMap
            long r7 = r5.groupId
            r6.remove(r7)
            goto L_0x032c
        L_0x02f8:
            r5.calculate()
            java.util.ArrayList<org.telegram.messenger.MessageObject> r6 = r5.messages
            int r7 = r6.size()
            r8 = 1
            int r7 = r7 - r8
            java.lang.Object r6 = r6.get(r7)
            org.telegram.messenger.MessageObject r6 = (org.telegram.messenger.MessageObject) r6
            java.util.ArrayList<org.telegram.messenger.MessageObject> r7 = r0.messages
            int r6 = r7.indexOf(r6)
            if (r6 < 0) goto L_0x032c
            org.telegram.ui.ChatActivity$ChatActivityAdapter r7 = r0.chatAdapter
            if (r7 == 0) goto L_0x032c
            int r8 = r7.messagesStartRow
            int r6 = r6 + r8
            long r8 = r5.groupId
            r5 = r18
            java.lang.Object r8 = r5.get(r8)
            java.lang.Integer r8 = (java.lang.Integer) r8
            int r8 = r8.intValue()
            r7.notifyItemRangeChanged(r6, r8)
            goto L_0x032e
        L_0x032c:
            r5 = r18
        L_0x032e:
            int r4 = r4 + 1
            r18 = r5
            goto L_0x02c4
        L_0x0333:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r4 = r0.messages
            boolean r4 = r4.isEmpty()
            if (r4 == 0) goto L_0x0407
            boolean[] r4 = r0.endReached
            r5 = 0
            boolean r4 = r4[r5]
            if (r4 != 0) goto L_0x03d7
            boolean r4 = r0.loading
            if (r4 != 0) goto L_0x03d7
            r0.showProgressView(r5)
            org.telegram.ui.Components.RecyclerListView r4 = r0.chatListView
            if (r4 == 0) goto L_0x0351
            r5 = 0
            r4.setEmptyView(r5)
        L_0x0351:
            org.telegram.tgnet.TLRPC$EncryptedChat r4 = r0.currentEncryptedChat
            r5 = 2147483647(0x7fffffff, float:NaN)
            r6 = -2147483648(0xfffffffvar_, float:-0.0)
            if (r4 != 0) goto L_0x0369
            int[] r4 = r0.maxMessageId
            r7 = 1
            r4[r7] = r5
            r8 = 0
            r4[r8] = r5
            int[] r4 = r0.minMessageId
            r4[r7] = r6
            r4[r8] = r6
            goto L_0x0377
        L_0x0369:
            r7 = 1
            r8 = 0
            int[] r4 = r0.maxMessageId
            r4[r7] = r6
            r4[r8] = r6
            int[] r4 = r0.minMessageId
            r4[r7] = r5
            r4[r8] = r5
        L_0x0377:
            int[] r4 = r0.maxDate
            r4[r7] = r6
            r4[r8] = r6
            int[] r4 = r0.minDate
            r4[r7] = r8
            r4[r8] = r8
            java.util.ArrayList<java.lang.Integer> r4 = r0.waitingForLoad
            int r5 = r0.lastLoadIndex
            java.lang.Integer r5 = java.lang.Integer.valueOf(r5)
            r4.add(r5)
            org.telegram.messenger.MessagesController r22 = r41.getMessagesController()
            long r4 = r0.dialog_id
            long r6 = r0.mergeDialogId
            r27 = 0
            r28 = 30
            r29 = 0
            r30 = 0
            boolean[] r8 = r0.cacheEndReached
            r9 = 0
            boolean r8 = r8[r9]
            r10 = 1
            r31 = r8 ^ 1
            int[] r8 = r0.minDate
            r32 = r8[r9]
            int r8 = r0.classGuid
            r33 = r8
            r34 = 0
            r35 = 0
            org.telegram.tgnet.TLRPC$Chat r8 = r0.currentChat
            boolean r36 = org.telegram.messenger.ChatObject.isChannel(r8)
            int r8 = r0.chatMode
            r37 = r8
            int r8 = r0.threadMessageId
            r38 = r8
            int r8 = r0.replyMaxReadId
            r39 = r8
            int r8 = r0.lastLoadIndex
            r40 = r8
            int r8 = r8 + 1
            r0.lastLoadIndex = r8
            r23 = r4
            r25 = r6
            r22.loadMessages(r23, r25, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36, r37, r38, r39, r40)
            r4 = 1
            r0.loading = r4
            goto L_0x03fd
        L_0x03d7:
            org.telegram.messenger.MessageObject r4 = r0.botButtons
            if (r4 == 0) goto L_0x03e6
            r4 = 0
            r0.botButtons = r4
            org.telegram.ui.Components.ChatActivityEnterView r5 = r0.chatActivityEnterView
            if (r5 == 0) goto L_0x03e6
            r6 = 0
            r5.setButtons(r4, r6)
        L_0x03e6:
            org.telegram.tgnet.TLRPC$EncryptedChat r4 = r0.currentEncryptedChat
            if (r4 != 0) goto L_0x03fd
            org.telegram.tgnet.TLRPC$User r4 = r0.currentUser
            if (r4 == 0) goto L_0x03fd
            boolean r4 = r4.bot
            if (r4 == 0) goto L_0x03fd
            java.lang.String r4 = r0.botUser
            if (r4 != 0) goto L_0x03fd
            java.lang.String r4 = ""
            r0.botUser = r4
            r41.updateBottomOverlay()
        L_0x03fd:
            r4 = 0
            r0.canShowPagedownButton = r4
            r5 = 1
            r0.updatePagedownButtonVisibility(r5)
            r0.showMentionDownButton(r4, r5)
        L_0x0407:
            if (r16 == 0) goto L_0x0484
            int r4 = r0.chatMode
            if (r4 != r1) goto L_0x041e
            org.telegram.ui.Components.ChatAvatarContainer r1 = r0.avatarContainer
            if (r1 == 0) goto L_0x041e
            int r4 = r41.getPinnedMessagesCount()
            java.lang.String r5 = "PinnedMessagesCount"
            java.lang.String r4 = org.telegram.messenger.LocaleController.formatPluralString(r5, r4)
            r1.setTitle(r4)
        L_0x041e:
            org.telegram.ui.ChatActivity$ChatActivityAdapter r1 = r0.chatAdapter
            if (r1 == 0) goto L_0x0480
            int r1 = r1.loadingUpRow
            org.telegram.ui.ChatActivity$ChatActivityAdapter r4 = r0.chatAdapter
            int r4 = r4.loadingDownRow
            int r5 = r2.size()
            r6 = 0
        L_0x0431:
            if (r6 >= r5) goto L_0x0445
            org.telegram.ui.ChatActivity$ChatActivityAdapter r7 = r0.chatAdapter
            java.lang.Object r8 = r2.get(r6)
            java.lang.Integer r8 = (java.lang.Integer) r8
            int r8 = r8.intValue()
            r7.notifyItemRemoved(r8)
            int r6 = r6 + 1
            goto L_0x0431
        L_0x0445:
            boolean r2 = r41.isThreadChat()
            if (r2 == 0) goto L_0x0456
            java.util.ArrayList<org.telegram.messenger.MessageObject> r2 = r0.messages
            int r2 = r2.size()
            if (r2 > r3) goto L_0x0454
            goto L_0x0456
        L_0x0454:
            r2 = 0
            goto L_0x045a
        L_0x0456:
            r2 = 0
            r0.removeUnreadPlane(r2)
        L_0x045a:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r3 = r0.messages
            boolean r3 = r3.isEmpty()
            if (r3 == 0) goto L_0x0471
            if (r1 < 0) goto L_0x0469
            org.telegram.ui.ChatActivity$ChatActivityAdapter r1 = r0.chatAdapter
            r1.notifyItemRemoved(r2)
        L_0x0469:
            if (r4 < 0) goto L_0x0480
            org.telegram.ui.ChatActivity$ChatActivityAdapter r1 = r0.chatAdapter
            r1.notifyItemRemoved(r2)
            goto L_0x0480
        L_0x0471:
            org.telegram.ui.ChatActivity$ChatActivityAdapter r1 = r0.chatAdapter
            int r2 = r1.messagesStartRow
            java.util.ArrayList<org.telegram.messenger.MessageObject> r3 = r0.messages
            int r3 = r3.size()
            r1.notifyItemRangeChanged(r2, r3)
        L_0x0480:
            r41.updateVisibleRows()
            goto L_0x0497
        L_0x0484:
            int r1 = r0.threadMessageId
            if (r1 != 0) goto L_0x0497
            r1 = 0
            r0.first_unread_id = r1
            r0.last_message_id = r1
            r0.createUnreadMessageAfterId = r1
            org.telegram.messenger.MessageObject r1 = r0.unreadMessageObject
            r0.removeMessageObject(r1)
            r1 = 0
            r0.unreadMessageObject = r1
        L_0x0497:
            if (r17 == 0) goto L_0x049d
            r1 = 1
            r0.updateScheduledInterface(r1)
        L_0x049d:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.processDeletedMessages(java.util.ArrayList, int):void");
    }

    private void replaceMessageObjects(ArrayList<MessageObject> arrayList, int i, boolean z) {
        ChatActivityAdapter chatActivityAdapter;
        int i2;
        MessageObject.GroupedMessages groupedMessages;
        int indexOf;
        ArrayList<TLRPC$PhotoSize> arrayList2;
        MessageObject messageObject;
        ArrayList<MessageObject> arrayList3 = arrayList;
        TLRPC$User tLRPC$User = null;
        LongSparseArray longSparseArray = null;
        int i3 = 0;
        while (i3 < arrayList.size()) {
            MessageObject messageObject2 = arrayList3.get(i3);
            if (this.pinnedMessageObjects.get(Integer.valueOf(messageObject2.getId())) != null) {
                this.pinnedMessageObjects.put(Integer.valueOf(messageObject2.getId()), messageObject2);
            }
            MessageObject messageObject3 = this.messagesDict[i].get(messageObject2.getId());
            if (this.pinnedMessageObjects.containsKey(Integer.valueOf(messageObject2.getId()))) {
                this.pinnedMessageObjects.put(Integer.valueOf(messageObject2.getId()), messageObject2);
                if (messageObject2.getId() == this.currentPinnedMessageId) {
                    updatePinnedMessageView(true);
                }
            }
            if (i == 0 && this.repliesMessagesDict.indexOfKey(messageObject2.getId()) >= 0) {
                this.repliesMessagesDict.put(messageObject2.getId(), messageObject2);
            }
            if (messageObject3 != null && (!z || messageObject3.messageOwner.date == messageObject2.messageOwner.date)) {
                if (z) {
                    arrayList3.remove(i3);
                    i3--;
                }
                addToPolls(messageObject2, messageObject3);
                if (messageObject2.type >= 0) {
                    MessageObject messageObject4 = messageObject3.replyMessageObject;
                    if (messageObject4 != null) {
                        messageObject2.replyMessageObject = messageObject4;
                        TLRPC$MessageAction tLRPC$MessageAction = messageObject2.messageOwner.action;
                        if (tLRPC$MessageAction instanceof TLRPC$TL_messageActionGameScore) {
                            messageObject2.generateGameMessageText(tLRPC$User);
                        } else if (tLRPC$MessageAction instanceof TLRPC$TL_messageActionPaymentSent) {
                            messageObject2.generatePaymentSentMessageText(tLRPC$User);
                        }
                    }
                    if (!messageObject3.isEditing()) {
                        if (messageObject3.getFileName().equals(messageObject2.getFileName())) {
                            messageObject2.messageOwner.attachPath = messageObject3.messageOwner.attachPath;
                            messageObject2.attachPathExists = messageObject3.attachPathExists;
                            messageObject2.mediaExists = messageObject3.mediaExists;
                        } else {
                            messageObject2.checkMediaExistance();
                        }
                    }
                    this.messagesDict[i].put(messageObject3.getId(), messageObject2);
                } else {
                    this.messagesDict[i].remove(messageObject3.getId());
                }
                int indexOf2 = this.messages.indexOf(messageObject3);
                if (indexOf2 >= 0) {
                    ArrayList arrayList4 = this.messagesByDays.get(messageObject3.dateKey);
                    int indexOf3 = arrayList4 != null ? arrayList4.indexOf(messageObject3) : -1;
                    if (!(messageObject3.getGroupId() == 0 || (groupedMessages = this.groupedMessagesMap.get(messageObject3.getGroupId())) == null || (indexOf = groupedMessages.messages.indexOf(messageObject3)) < 0)) {
                        if (messageObject3.getGroupId() != messageObject2.getGroupId()) {
                            this.groupedMessagesMap.put(messageObject2.getGroupId(), groupedMessages);
                        }
                        if (messageObject2.isMusic() || messageObject2.isDocument() || ((arrayList2 = messageObject2.photoThumbs) != null && !arrayList2.isEmpty())) {
                            groupedMessages.messages.set(indexOf, messageObject2);
                            messageObject3 = messageObject3;
                            MessageObject.GroupedMessagePosition remove = groupedMessages.positions.remove(messageObject3);
                            if (remove != null) {
                                groupedMessages.positions.put(messageObject2, remove);
                            }
                            if (longSparseArray == null) {
                                longSparseArray = new LongSparseArray();
                            }
                            longSparseArray.put(groupedMessages.groupId, groupedMessages);
                        } else {
                            if (longSparseArray == null) {
                                longSparseArray = new LongSparseArray();
                            }
                            longSparseArray.put(groupedMessages.groupId, groupedMessages);
                            if (indexOf <= 0 || indexOf >= groupedMessages.messages.size() - 1) {
                                messageObject = messageObject3;
                            } else {
                                MessageObject.GroupedMessages groupedMessages2 = new MessageObject.GroupedMessages();
                                messageObject = messageObject3;
                                groupedMessages2.groupId = Utilities.random.nextLong();
                                ArrayList<MessageObject> arrayList5 = groupedMessages2.messages;
                                ArrayList<MessageObject> arrayList6 = groupedMessages.messages;
                                int i4 = indexOf + 1;
                                arrayList5.addAll(arrayList6.subList(i4, arrayList6.size()));
                                for (int i5 = 0; i5 < groupedMessages2.messages.size(); i5++) {
                                    groupedMessages2.messages.get(i5).localGroupId = groupedMessages2.groupId;
                                    groupedMessages.messages.remove(i4);
                                }
                                longSparseArray.put(groupedMessages2.groupId, groupedMessages2);
                                this.groupedMessagesMap.put(groupedMessages2.groupId, groupedMessages2);
                            }
                            groupedMessages.messages.remove(indexOf);
                            messageObject3 = messageObject;
                        }
                    }
                    if (messageObject2.type >= 0) {
                        messageObject2.stableId = messageObject3.stableId;
                        this.messages.set(indexOf2, messageObject2);
                        ChatActivityAdapter chatActivityAdapter2 = this.chatAdapter;
                        if (chatActivityAdapter2 != null) {
                            chatActivityAdapter2.updateRowAtPosition(chatActivityAdapter2.messagesStartRow + indexOf2);
                        }
                        if (indexOf3 >= 0) {
                            arrayList4.set(indexOf3, messageObject2);
                        }
                    } else {
                        this.messages.remove(indexOf2);
                        ChatActivityAdapter chatActivityAdapter3 = this.chatAdapter;
                        if (chatActivityAdapter3 != null) {
                            chatActivityAdapter3.notifyItemRemoved(chatActivityAdapter3.messagesStartRow + indexOf2);
                        }
                        if (indexOf3 >= 0) {
                            arrayList4.remove(indexOf3);
                            if (arrayList4.isEmpty()) {
                                this.messagesByDays.remove(messageObject3.dateKey);
                                this.messages.remove(indexOf2);
                                int access$31100 = this.chatAdapter.loadingUpRow;
                                int access$31000 = this.chatAdapter.loadingDownRow;
                                ChatActivityAdapter chatActivityAdapter4 = this.chatAdapter;
                                chatActivityAdapter4.notifyItemRemoved(chatActivityAdapter4.messagesStartRow + indexOf2);
                                if (this.messages.isEmpty()) {
                                    if (access$31100 >= 0) {
                                        i2 = 0;
                                        this.chatAdapter.notifyItemRemoved(0);
                                    } else {
                                        i2 = 0;
                                    }
                                    if (access$31000 >= 0) {
                                        this.chatAdapter.notifyItemRemoved(i2);
                                    }
                                    i3++;
                                    tLRPC$User = null;
                                }
                            }
                        }
                    }
                }
            }
            i3++;
            tLRPC$User = null;
        }
        if (longSparseArray != null) {
            for (int i6 = 0; i6 < longSparseArray.size(); i6++) {
                MessageObject.GroupedMessages groupedMessages3 = (MessageObject.GroupedMessages) longSparseArray.valueAt(i6);
                if (groupedMessages3.messages.isEmpty()) {
                    this.groupedMessagesMap.remove(groupedMessages3.groupId);
                } else {
                    groupedMessages3.calculate();
                    ArrayList<MessageObject> arrayList7 = groupedMessages3.messages;
                    int indexOf4 = this.messages.indexOf(arrayList7.get(arrayList7.size() - 1));
                    if (indexOf4 >= 0 && (chatActivityAdapter = this.chatAdapter) != null) {
                        chatActivityAdapter.notifyItemRangeChanged(indexOf4 + chatActivityAdapter.messagesStartRow, groupedMessages3.messages.size());
                        ChatListItemAnimator chatListItemAnimator2 = this.chatListItemAnimator;
                        if (chatListItemAnimator2 != null) {
                            chatListItemAnimator2.groupWillChanged(groupedMessages3);
                        }
                    }
                }
            }
        }
    }

    private void migrateToNewChat(MessageObject messageObject) {
        BaseFragment baseFragment;
        ActionBarLayout actionBarLayout = this.parentLayout;
        if (actionBarLayout != null) {
            int i = messageObject.messageOwner.action.channel_id;
            if (actionBarLayout.fragmentsStack.size() > 0) {
                ArrayList<BaseFragment> arrayList = this.parentLayout.fragmentsStack;
                baseFragment = arrayList.get(arrayList.size() - 1);
            } else {
                baseFragment = null;
            }
            int indexOf = this.parentLayout.fragmentsStack.indexOf(this);
            ActionBarLayout actionBarLayout2 = this.parentLayout;
            if (indexOf <= 0 || (baseFragment instanceof ChatActivity) || (baseFragment instanceof ProfileActivity) || !this.currentChat.creator) {
                AndroidUtilities.runOnUIThread(new Runnable(baseFragment, messageObject, actionBarLayout2) {
                    public final /* synthetic */ BaseFragment f$1;
                    public final /* synthetic */ MessageObject f$2;
                    public final /* synthetic */ ActionBarLayout f$3;

                    {
                        this.f$1 = r2;
                        this.f$2 = r3;
                        this.f$3 = r4;
                    }

                    public final void run() {
                        ChatActivity.this.lambda$migrateToNewChat$92$ChatActivity(this.f$1, this.f$2, this.f$3);
                    }
                });
            } else {
                int size = actionBarLayout2.fragmentsStack.size() - 1;
                while (indexOf < size) {
                    BaseFragment baseFragment2 = actionBarLayout2.fragmentsStack.get(indexOf);
                    if (baseFragment2 instanceof ChatActivity) {
                        Bundle bundle = new Bundle();
                        bundle.putInt("chat_id", i);
                        actionBarLayout2.addFragmentToStack(new ChatActivity(bundle), indexOf);
                        baseFragment2.removeSelfFromStack();
                    } else if (baseFragment2 instanceof ProfileActivity) {
                        Bundle bundle2 = new Bundle();
                        bundle2.putInt("chat_id", i);
                        actionBarLayout2.addFragmentToStack(new ProfileActivity(bundle2), indexOf);
                        baseFragment2.removeSelfFromStack();
                    } else if (baseFragment2 instanceof ChatEditActivity) {
                        Bundle bundle3 = new Bundle();
                        bundle3.putInt("chat_id", i);
                        actionBarLayout2.addFragmentToStack(new ChatEditActivity(bundle3), indexOf);
                        baseFragment2.removeSelfFromStack();
                    } else if (baseFragment2 instanceof ChatUsersActivity) {
                        if (!((ChatUsersActivity) baseFragment2).hasSelectType()) {
                            Bundle arguments = baseFragment2.getArguments();
                            arguments.putInt("chat_id", i);
                            actionBarLayout2.addFragmentToStack(new ChatUsersActivity(arguments), indexOf);
                        }
                        baseFragment2.removeSelfFromStack();
                    }
                    indexOf++;
                }
            }
            AndroidUtilities.runOnUIThread(new Runnable(i) {
                public final /* synthetic */ int f$1;

                {
                    this.f$1 = r2;
                }

                public final void run() {
                    ChatActivity.this.lambda$migrateToNewChat$93$ChatActivity(this.f$1);
                }
            }, 1000);
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$migrateToNewChat$92 */
    public /* synthetic */ void lambda$migrateToNewChat$92$ChatActivity(BaseFragment baseFragment, MessageObject messageObject, ActionBarLayout actionBarLayout) {
        if (baseFragment instanceof NotificationCenter.NotificationCenterDelegate) {
            getNotificationCenter().removeObserver((NotificationCenter.NotificationCenterDelegate) baseFragment, NotificationCenter.closeChats);
        }
        getNotificationCenter().postNotificationName(NotificationCenter.closeChats, new Object[0]);
        Bundle bundle = new Bundle();
        bundle.putInt("chat_id", messageObject.messageOwner.action.channel_id);
        actionBarLayout.addFragmentToStack(new ChatActivity(bundle), actionBarLayout.fragmentsStack.size() - 1);
        baseFragment.finishFragment();
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$migrateToNewChat$93 */
    public /* synthetic */ void lambda$migrateToNewChat$93$ChatActivity(int i) {
        getMessagesController().loadFullChat(i, 0, true);
    }

    private void addToPolls(MessageObject messageObject, MessageObject messageObject2) {
        long pollId = messageObject.getPollId();
        if (pollId != 0) {
            ArrayList arrayList = this.polls.get(pollId);
            if (arrayList == null) {
                arrayList = new ArrayList();
                this.polls.put(pollId, arrayList);
            }
            arrayList.add(messageObject);
            if (messageObject2 != null) {
                arrayList.remove(messageObject2);
            }
        }
    }

    /* access modifiers changed from: private */
    public void showInfoHint(MessageObject messageObject, CharSequence charSequence, int i) {
        UndoView undoView2 = this.topUndoView;
        if (undoView2 != null) {
            $$Lambda$ChatActivity$MuR_bXfdjXpBO_6wm6V85lYmWj8 r6 = new Runnable(i) {
                public final /* synthetic */ int f$1;

                {
                    this.f$1 = r2;
                }

                public final void run() {
                    ChatActivity.this.lambda$showInfoHint$94$ChatActivity(this.f$1);
                }
            };
            undoView2.showWithAction(0, 18, charSequence, r6, r6);
            this.hintMessageObject = messageObject;
            this.hintMessageType = i;
        }
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Code restructure failed: missing block: B:6:0x0016, code lost:
        r2 = (org.telegram.ui.Cells.ChatMessageCell) r2;
     */
    /* renamed from: lambda$showInfoHint$94 */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$showInfoHint$94$ChatActivity(int r6) {
        /*
            r5 = this;
            org.telegram.ui.Components.RecyclerListView r0 = r5.chatListView
            if (r0 == 0) goto L_0x002d
            int r0 = r0.getChildCount()
            r1 = 0
        L_0x0009:
            if (r1 >= r0) goto L_0x002d
            org.telegram.ui.Components.RecyclerListView r2 = r5.chatListView
            android.view.View r2 = r2.getChildAt(r1)
            boolean r3 = r2 instanceof org.telegram.ui.Cells.ChatMessageCell
            if (r3 != 0) goto L_0x0016
            goto L_0x002a
        L_0x0016:
            org.telegram.ui.Cells.ChatMessageCell r2 = (org.telegram.ui.Cells.ChatMessageCell) r2
            org.telegram.messenger.MessageObject r3 = r2.getMessageObject()
            if (r3 == 0) goto L_0x002a
            org.telegram.messenger.MessageObject r4 = r5.hintMessageObject
            boolean r3 = r3.equals(r4)
            if (r3 == 0) goto L_0x002a
            r3 = 1
            r2.showHintButton(r3, r3, r6)
        L_0x002a:
            int r1 = r1 + 1
            goto L_0x0009
        L_0x002d:
            r6 = 0
            r5.hintMessageObject = r6
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.lambda$showInfoHint$94$ChatActivity(int):void");
    }

    /* access modifiers changed from: private */
    public void showPollSolution(MessageObject messageObject, TLRPC$PollResults tLRPC$PollResults) {
        CharSequence charSequence;
        if (tLRPC$PollResults != null && !TextUtils.isEmpty(tLRPC$PollResults.solution)) {
            if (!tLRPC$PollResults.solution_entities.isEmpty()) {
                charSequence = new SpannableStringBuilder(tLRPC$PollResults.solution);
                MessageObject.addEntitiesToText(charSequence, tLRPC$PollResults.solution_entities, false, true, true, false);
            } else {
                charSequence = tLRPC$PollResults.solution;
            }
            showInfoHint(messageObject, charSequence, 0);
        }
    }

    /* access modifiers changed from: private */
    public void updateSearchButtons(int i, int i2, int i3) {
        ImageView imageView = this.searchUpButton;
        if (imageView != null) {
            imageView.setEnabled((i & 1) != 0);
            this.searchDownButton.setEnabled((i & 2) != 0);
            ImageView imageView2 = this.searchUpButton;
            float f = 1.0f;
            imageView2.setAlpha(imageView2.isEnabled() ? 1.0f : 0.5f);
            ImageView imageView3 = this.searchDownButton;
            if (!imageView3.isEnabled()) {
                f = 0.5f;
            }
            imageView3.setAlpha(f);
            if (i3 < 0) {
                this.searchCountText.setCount("", 0, false);
            } else if (i3 == 0) {
                this.searchCountText.setCount(LocaleController.getString("NoResult", NUM), 0, false);
            } else {
                int i4 = i2 + 1;
                this.searchCountText.setCount(LocaleController.formatString("OfCounted", NUM, Integer.valueOf(i4), Integer.valueOf(i3)), i4, true);
            }
        }
    }

    public boolean needDelayOpenAnimation() {
        if (this.chatMode != 1 && getParentLayout().fragmentsStack.size() > 1) {
            BaseFragment baseFragment = getParentLayout().fragmentsStack.get(getParentLayout().fragmentsStack.size() - 2);
            if ((baseFragment instanceof ChatActivity) && ((ChatActivity) baseFragment).isKeyboardVisible()) {
                return false;
            }
        }
        return this.firstLoading;
    }

    /* access modifiers changed from: protected */
    public void onBecomeFullyVisible() {
        super.onBecomeFullyVisible();
        if (this.showCloseChatDialogLater) {
            showDialog(this.closeChatDialog);
        }
    }

    /* access modifiers changed from: protected */
    public void onBecomeFullyHidden() {
        hideUndoViews();
    }

    public void saveKeyboardPositionBeforeTransition() {
        Runnable runnable = this.cancelFixedPositionRunnable;
        if (runnable != null) {
            AndroidUtilities.cancelRunOnUIThread(runnable);
        }
        ChatActivityEnterView chatActivityEnterView2 = this.chatActivityEnterView;
        if (chatActivityEnterView2 != null && this.contentView != null && chatActivityEnterView2.getAdjustPanLayoutHelper() != null && !this.chatActivityEnterView.getAdjustPanLayoutHelper().animationInProgress()) {
            this.fixedKeyboardHeight = this.contentView.getKeyboardHeight();
        }
    }

    public void removeKeyboardPositionBeforeTransition() {
        if (this.fixedKeyboardHeight > 0) {
            $$Lambda$ChatActivity$K8B725PECwnvP9_OaOi0u24uvM r0 = new Runnable() {
                public final void run() {
                    ChatActivity.this.lambda$removeKeyboardPositionBeforeTransition$95$ChatActivity();
                }
            };
            this.cancelFixedPositionRunnable = r0;
            AndroidUtilities.runOnUIThread(r0, 200);
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$removeKeyboardPositionBeforeTransition$95 */
    public /* synthetic */ void lambda$removeKeyboardPositionBeforeTransition$95$ChatActivity() {
        this.cancelFixedPositionRunnable = null;
        this.fixedKeyboardHeight = -1;
        this.fragmentView.requestLayout();
    }

    public void onTransitionAnimationStart(boolean z, boolean z2) {
        int[] iArr;
        if (z) {
            this.fragmentBeginToShow = true;
            iArr = this.transitionAnimationIndex == 0 ? new int[]{NotificationCenter.dialogsNeedReload, NotificationCenter.closeChats, NotificationCenter.botKeyboardDidLoad, NotificationCenter.needDeleteDialog, NotificationCenter.messagesDidLoad} : new int[]{NotificationCenter.dialogsNeedReload, NotificationCenter.closeChats, NotificationCenter.botKeyboardDidLoad, NotificationCenter.needDeleteDialog};
            this.openAnimationEnded = false;
            if (!z2) {
                this.openAnimationStartTime = SystemClock.elapsedRealtime();
            }
        } else {
            iArr = UserObject.isUserSelf(this.currentUser) ? new int[]{NotificationCenter.dialogsNeedReload, NotificationCenter.closeChats, NotificationCenter.botKeyboardDidLoad, NotificationCenter.needDeleteDialog, NotificationCenter.mediaDidLoad} : null;
            ChatActivityEnterView chatActivityEnterView2 = this.chatActivityEnterView;
            if (chatActivityEnterView2 != null) {
                chatActivityEnterView2.onBeginHide();
            }
        }
        this.transitionAnimationIndex = getNotificationCenter().setAnimationInProgress(this.transitionAnimationIndex, iArr);
    }

    /* access modifiers changed from: protected */
    public void onTransitionAnimationProgress(boolean z, float f) {
        View view = this.blurredView;
        if (view != null && view.getVisibility() == 0) {
            if (z) {
                this.blurredView.setAlpha(1.0f - f);
            } else {
                this.blurredView.setAlpha(f);
            }
        }
    }

    public void onTransitionAnimationEnd(boolean z, boolean z2) {
        MessageObject messageObject;
        ActionBarLayout actionBarLayout;
        Bulletin bulletin;
        if (z) {
            if (!this.fragmentOpened) {
                this.fragmentOpened = true;
                updateMessagesVisiblePart(false);
            }
            if (z2 && this.showPinBulletin && (bulletin = this.pinBulletin) != null) {
                bulletin.show();
                this.showPinBulletin = false;
            }
        }
        Runnable runnable = this.cancelFixedPositionRunnable;
        if (runnable != null) {
            AndroidUtilities.cancelRunOnUIThread(runnable);
        }
        this.fixedKeyboardHeight = -1;
        if (z) {
            View view = this.blurredView;
            String str = null;
            if (view != null && view.getVisibility() == 0) {
                this.blurredView.setVisibility(8);
                this.blurredView.setBackground((Drawable) null);
            }
            this.openAnimationEnded = true;
            getNotificationCenter().onAnimationFinish(this.transitionAnimationIndex);
            if (Build.VERSION.SDK_INT >= 21) {
                createChatAttachView();
            }
            checkGroupCallJoin(this.lastCallCheckFromServer);
            if (this.chatActivityEnterView.hasRecordVideo() && !this.chatActivityEnterView.isSendButtonVisible()) {
                TLRPC$Chat tLRPC$Chat = this.currentChat;
                boolean z3 = tLRPC$Chat != null && ChatObject.isChannel(tLRPC$Chat) && !this.currentChat.megagroup;
                SharedPreferences globalMainSettings = MessagesController.getGlobalMainSettings();
                String str2 = z3 ? "needShowRoundHintChannel2" : "needShowRoundHint2";
                int i = globalMainSettings.getInt(str2, 0);
                if (i < 3 && Utilities.random.nextFloat() <= 0.2f) {
                    showVoiceHint(false, this.chatActivityEnterView.isInVideoMode());
                    globalMainSettings.edit().putInt(str2, i + 1).commit();
                }
            }
            if (!z2 && (actionBarLayout = this.parentLayout) != null && this.needRemovePreviousSameChatActivity) {
                int size = actionBarLayout.fragmentsStack.size() - 1;
                int i2 = 0;
                while (true) {
                    if (i2 >= size) {
                        break;
                    }
                    BaseFragment baseFragment = this.parentLayout.fragmentsStack.get(i2);
                    if (baseFragment != this && (baseFragment instanceof ChatActivity)) {
                        ChatActivity chatActivity = (ChatActivity) baseFragment;
                        if (chatActivity.needRemovePreviousSameChatActivity && chatActivity.dialog_id == this.dialog_id && chatActivity.getChatMode() == getChatMode() && chatActivity.threadMessageId == this.threadMessageId && chatActivity.reportType == this.reportType) {
                            baseFragment.removeSelfFromStack();
                            break;
                        }
                    }
                    i2++;
                }
            }
            showScheduledOrNoSoundHint();
            if (!z2 && this.firstOpen) {
                if (this.chatActivityEnterView != null && (messageObject = this.threadMessageObject) != null && messageObject.getRepliesCount() == 0 && ChatObject.canSendMessages(this.currentChat)) {
                    this.chatActivityEnterView.setFieldFocused();
                    this.chatActivityEnterView.openKeyboard();
                }
                if (getMessagesController().isPromoDialog(this.dialog_id, true)) {
                    int i3 = getMessagesController().promoDialogType;
                    SharedPreferences globalNotificationsSettings = MessagesController.getGlobalNotificationsSettings();
                    if (i3 == 0) {
                        if (globalNotificationsSettings.getLong("proxychannel", 0) != this.dialog_id) {
                            str = LocaleController.getString("UseProxySponsorInfo", NUM);
                        }
                    } else if (i3 == 1) {
                        String str3 = getMessagesController().promoPsaType;
                        if (!globalNotificationsSettings.getBoolean(str3 + "_shown", false)) {
                            str = LocaleController.getString("PsaInfo_" + str3);
                            if (TextUtils.isEmpty(str)) {
                                str = LocaleController.getString("PsaInfoDefault", NUM);
                            }
                        }
                    }
                    if (!TextUtils.isEmpty(str) && this.topUndoView != null) {
                        if (i3 == 0) {
                            globalNotificationsSettings.edit().putLong("proxychannel", this.dialog_id).commit();
                        } else if (i3 == 1) {
                            String str4 = getMessagesController().promoPsaType;
                            SharedPreferences.Editor edit = globalNotificationsSettings.edit();
                            edit.putBoolean(str4 + "_shown", true).commit();
                        }
                        SpannableStringBuilder spannableStringBuilder = new SpannableStringBuilder(str);
                        MessageObject.addLinks(false, spannableStringBuilder);
                        this.topUndoView.showWithAction(0, 18, spannableStringBuilder, (Runnable) null, (Runnable) null);
                    }
                }
                this.firstOpen = false;
                return;
            }
            return;
        }
        getNotificationCenter().onAnimationFinish(this.transitionAnimationIndex);
    }

    /* access modifiers changed from: protected */
    public void onDialogDismiss(Dialog dialog) {
        Dialog dialog2 = this.closeChatDialog;
        if (dialog2 != null && dialog == dialog2) {
            getMessagesController().deleteDialog(this.dialog_id, 0);
            ActionBarLayout actionBarLayout = this.parentLayout;
            if (actionBarLayout != null && !actionBarLayout.fragmentsStack.isEmpty()) {
                ArrayList<BaseFragment> arrayList = this.parentLayout.fragmentsStack;
                if (arrayList.get(arrayList.size() - 1) != this) {
                    ArrayList<BaseFragment> arrayList2 = this.parentLayout.fragmentsStack;
                    removeSelfFromStack();
                    arrayList2.get(arrayList2.size() - 1).finishFragment();
                    return;
                }
            }
            finishFragment();
        }
    }

    /* JADX WARNING: Code restructure failed: missing block: B:12:0x0031, code lost:
        if (r4.findItem(16908321) != null) goto L_0x0034;
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public boolean extendActionMode(android.view.Menu r4) {
        /*
            r3 = this;
            boolean r0 = org.telegram.ui.PhotoViewer.hasInstance()
            r1 = 16908321(0x1020021, float:2.3877321E-38)
            r2 = 1
            if (r0 == 0) goto L_0x0025
            org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.getInstance()
            boolean r0 = r0.isVisible()
            if (r0 == 0) goto L_0x0025
            org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.getInstance()
            int r0 = r0.getSelectiongLength()
            if (r0 == 0) goto L_0x0024
            android.view.MenuItem r0 = r4.findItem(r1)
            if (r0 != 0) goto L_0x0034
        L_0x0024:
            return r2
        L_0x0025:
            org.telegram.ui.Components.ChatActivityEnterView r0 = r3.chatActivityEnterView
            int r0 = r0.getSelectionLength()
            if (r0 == 0) goto L_0x0037
            android.view.MenuItem r0 = r4.findItem(r1)
            if (r0 != 0) goto L_0x0034
            goto L_0x0037
        L_0x0034:
            r3.fillActionModeMenu(r4)
        L_0x0037:
            return r2
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.extendActionMode(android.view.Menu):boolean");
    }

    public void fillActionModeMenu(Menu menu) {
        if (menu.findItem(NUM) == null) {
            if (Build.VERSION.SDK_INT >= 23) {
                menu.removeItem(16908341);
            }
            SpannableStringBuilder spannableStringBuilder = new SpannableStringBuilder(LocaleController.getString("Bold", NUM));
            spannableStringBuilder.setSpan(new TypefaceSpan(AndroidUtilities.getTypeface("fonts/rmedium.ttf")), 0, spannableStringBuilder.length(), 33);
            menu.add(NUM, NUM, 6, spannableStringBuilder);
            SpannableStringBuilder spannableStringBuilder2 = new SpannableStringBuilder(LocaleController.getString("Italic", NUM));
            spannableStringBuilder2.setSpan(new TypefaceSpan(AndroidUtilities.getTypeface("fonts/ritalic.ttf")), 0, spannableStringBuilder2.length(), 33);
            menu.add(NUM, NUM, 7, spannableStringBuilder2);
            SpannableStringBuilder spannableStringBuilder3 = new SpannableStringBuilder(LocaleController.getString("Mono", NUM));
            spannableStringBuilder3.setSpan(new TypefaceSpan(Typeface.MONOSPACE), 0, spannableStringBuilder3.length(), 33);
            menu.add(NUM, NUM, 8, spannableStringBuilder3);
            TLRPC$EncryptedChat tLRPC$EncryptedChat = this.currentEncryptedChat;
            if (tLRPC$EncryptedChat == null || AndroidUtilities.getPeerLayerVersion(tLRPC$EncryptedChat.layer) >= 101) {
                SpannableStringBuilder spannableStringBuilder4 = new SpannableStringBuilder(LocaleController.getString("Strike", NUM));
                TextStyleSpan.TextStyleRun textStyleRun = new TextStyleSpan.TextStyleRun();
                textStyleRun.flags = 8 | textStyleRun.flags;
                spannableStringBuilder4.setSpan(new TextStyleSpan(textStyleRun), 0, spannableStringBuilder4.length(), 33);
                menu.add(NUM, NUM, 9, spannableStringBuilder4);
                SpannableStringBuilder spannableStringBuilder5 = new SpannableStringBuilder(LocaleController.getString("Underline", NUM));
                TextStyleSpan.TextStyleRun textStyleRun2 = new TextStyleSpan.TextStyleRun();
                textStyleRun2.flags |= 16;
                spannableStringBuilder5.setSpan(new TextStyleSpan(textStyleRun2), 0, spannableStringBuilder5.length(), 33);
                menu.add(NUM, NUM, 10, spannableStringBuilder5);
            }
            menu.add(NUM, NUM, 11, LocaleController.getString("CreateLink", NUM));
            menu.add(NUM, NUM, 12, LocaleController.getString("Regular", NUM));
        }
    }

    /* access modifiers changed from: private */
    public void updateScheduledInterface(boolean z) {
        ChatActivityEnterView chatActivityEnterView2 = this.chatActivityEnterView;
        if (chatActivityEnterView2 != null) {
            chatActivityEnterView2.updateScheduleButton(z);
        }
    }

    /* access modifiers changed from: private */
    public void updateBottomOverlay() {
        int i;
        TLRPC$User tLRPC$User;
        boolean z;
        if (this.bottomOverlayChatText != null && (i = this.chatMode) != 1) {
            if (this.reportType >= 0) {
                updateActionModeTitle();
            } else if (i == 2) {
                TLRPC$Chat tLRPC$Chat = this.currentChat;
                if (tLRPC$Chat != null) {
                    z = ChatObject.canPinMessages(tLRPC$Chat);
                } else {
                    TLRPC$UserFull tLRPC$UserFull = this.userInfo;
                    z = tLRPC$UserFull != null ? tLRPC$UserFull.can_pin_message : false;
                }
                if (z) {
                    this.bottomOverlayChatText.setTag(1);
                    this.bottomOverlayChatText.setText(LocaleController.getString("UnpinAllMessages", NUM));
                } else {
                    this.bottomOverlayChatText.setTag((Object) null);
                    this.bottomOverlayChatText.setText(LocaleController.getString("HidePinnedMessages", NUM));
                }
                showBottomOverlayProgress(false, false);
            } else if (this.currentChat == null) {
                showBottomOverlayProgress(false, false);
                if (this.userBlocked) {
                    if (this.currentUser.bot) {
                        this.bottomOverlayChatText.setText(LocaleController.getString("BotUnblock", NUM));
                    } else {
                        this.bottomOverlayChatText.setText(LocaleController.getString("Unblock", NUM));
                    }
                    if (this.botButtons != null) {
                        this.botButtons = null;
                        if (this.chatActivityEnterView != null) {
                            MessageObject messageObject = this.replyingMessageObject;
                            if (messageObject != null && this.botReplyButtons == messageObject) {
                                this.botReplyButtons = null;
                                hideFieldPanel(false);
                            }
                            this.chatActivityEnterView.setButtons(this.botButtons, false);
                        }
                    }
                } else if (UserObject.isReplyUser(this.currentUser)) {
                    if (!getMessagesController().isDialogMuted(this.dialog_id)) {
                        this.bottomOverlayChatText.setText(LocaleController.getString("ChannelMute", NUM), false);
                    } else {
                        this.bottomOverlayChatText.setText(LocaleController.getString("ChannelUnmute", NUM), true);
                    }
                    showBottomOverlayProgress(false, this.bottomOverlayProgress.getTag() != null);
                } else if (this.botUser == null || !this.currentUser.bot) {
                    this.bottomOverlayChatText.setText(LocaleController.getString("DeleteThisChat", NUM));
                } else {
                    this.bottomOverlayChatText.setText(LocaleController.getString("BotStart", NUM));
                    this.chatActivityEnterView.hidePopup(false);
                    if (getParentActivity() != null) {
                        AndroidUtilities.hideKeyboard(getParentActivity().getCurrentFocus());
                    }
                }
            } else if (!isThreadChat()) {
                if (ChatObject.isChannel(this.currentChat)) {
                    TLRPC$Chat tLRPC$Chat2 = this.currentChat;
                    if (!(tLRPC$Chat2 instanceof TLRPC$TL_channelForbidden)) {
                        if (!ChatObject.isNotInChat(tLRPC$Chat2)) {
                            if (!getMessagesController().isDialogMuted(this.dialog_id)) {
                                this.bottomOverlayChatText.setText(LocaleController.getString("ChannelMute", NUM), false);
                            } else {
                                this.bottomOverlayChatText.setText(LocaleController.getString("ChannelUnmute", NUM), true);
                            }
                            showBottomOverlayProgress(false, this.bottomOverlayProgress.getTag() != null);
                        } else if (getMessagesController().isJoiningChannel(this.currentChat.id)) {
                            showBottomOverlayProgress(true, false);
                        } else {
                            this.bottomOverlayChatText.setText(LocaleController.getString("ChannelJoin", NUM));
                            showBottomOverlayProgress(false, false);
                        }
                    }
                }
                this.bottomOverlayChatText.setText(LocaleController.getString("DeleteThisGroup", NUM));
            }
            TLRPC$Chat tLRPC$Chat3 = this.currentChat;
            if (tLRPC$Chat3 == null || !tLRPC$Chat3.gigagroup || this.reportType >= 0 || this.chatMode != 0) {
                this.bottomOverlayImage.setVisibility(4);
            } else {
                this.bottomOverlayImage.setVisibility(0);
            }
            if (this.inPreviewMode) {
                this.searchContainer.setVisibility(4);
                this.bottomOverlayChat.setVisibility(4);
                this.chatActivityEnterView.setFieldFocused(false);
                this.chatActivityEnterView.setVisibility(4);
            } else if (this.searchItem == null || !this.searchItemVisible) {
                this.searchContainer.animate().setListener((Animator.AnimatorListener) null).cancel();
                if (this.searchContainer.getVisibility() == 0) {
                    this.searchContainer.animate().alpha(0.0f).setDuration(150).setListener(new AnimatorListenerAdapter() {
                        public void onAnimationEnd(Animator animator) {
                            super.onAnimationEnd(animator);
                            ChatActivity.this.searchContainer.setVisibility(4);
                        }
                    }).start();
                }
                this.chatActivityEnterView.setVisibility(0);
                if (this.muteItem != null) {
                    TLRPC$Chat tLRPC$Chat4 = this.currentChat;
                    if (tLRPC$Chat4 == null || !ChatObject.isNotInChat(tLRPC$Chat4)) {
                        this.muteItem.setVisibility(0);
                    } else {
                        this.muteItem.setVisibility(8);
                    }
                }
                if (this.reportType >= 0) {
                    this.bottomOverlayChat.setVisibility(0);
                    this.chatActivityEnterView.setVisibility(4);
                } else if (this.chatMode == 2 || ((this.currentChat != null && !isThreadChat() && (ChatObject.isNotInChat(this.currentChat) || !ChatObject.canWriteToChat(this.currentChat))) || ((tLRPC$User = this.currentUser) != null && (UserObject.isDeleted(tLRPC$User) || this.userBlocked || UserObject.isReplyUser(this.currentUser))))) {
                    if (this.chatActivityEnterView.isEditingMessage()) {
                        this.chatActivityEnterView.setVisibility(0);
                        this.bottomOverlayChat.setVisibility(4);
                        this.chatActivityEnterView.setFieldFocused();
                        AndroidUtilities.runOnUIThread(new Runnable() {
                            public final void run() {
                                ChatActivity.this.lambda$updateBottomOverlay$96$ChatActivity();
                            }
                        }, 100);
                    } else {
                        this.bottomOverlayChat.setVisibility(0);
                        this.chatActivityEnterView.setFieldFocused(false);
                        this.chatActivityEnterView.setVisibility(4);
                        this.chatActivityEnterView.closeKeyboard();
                        StickersAdapter stickersAdapter2 = this.stickersAdapter;
                        if (stickersAdapter2 != null) {
                            stickersAdapter2.hide();
                        }
                    }
                    ActionBarMenuItem actionBarMenuItem = this.attachItem;
                    if (actionBarMenuItem != null) {
                        actionBarMenuItem.setVisibility(8);
                    }
                    ActionBarMenuItem actionBarMenuItem2 = this.editTextItem;
                    if (actionBarMenuItem2 != null) {
                        actionBarMenuItem2.setVisibility(8);
                    }
                    ActionBarMenuItem actionBarMenuItem3 = this.headerItem;
                    if (actionBarMenuItem3 != null) {
                        actionBarMenuItem3.setVisibility(0);
                    }
                } else if (this.botUser == null || !this.currentUser.bot) {
                    this.chatActivityEnterView.setVisibility(0);
                    this.bottomOverlayChat.setVisibility(4);
                } else {
                    this.bottomOverlayChat.setVisibility(0);
                    this.chatActivityEnterView.setVisibility(4);
                }
                if (this.topViewWasVisible == 1) {
                    this.chatActivityEnterView.showTopView(false, false);
                    this.topViewWasVisible = 0;
                }
            } else {
                this.searchContainer.animate().setListener((Animator.AnimatorListener) null).cancel();
                if (this.searchContainer.getVisibility() != 0) {
                    this.searchContainer.setVisibility(0);
                    this.searchContainer.setAlpha(0.0f);
                }
                this.searchContainer.animate().alpha(1.0f).setDuration(150).setListener(new AnimatorListenerAdapter() {
                    public void onAnimationEnd(Animator animator) {
                        super.onAnimationEnd(animator);
                        ChatActivity.this.chatActivityEnterView.setVisibility(4);
                    }
                }).start();
                this.bottomOverlayChat.setVisibility(4);
                this.chatActivityEnterView.setFieldFocused(false);
                if (this.chatActivityEnterView.isTopViewVisible()) {
                    this.topViewWasVisible = 1;
                    this.chatActivityEnterView.hideTopView(false);
                } else {
                    this.topViewWasVisible = 2;
                }
            }
            checkRaiseSensors();
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$updateBottomOverlay$96 */
    public /* synthetic */ void lambda$updateBottomOverlay$96$ChatActivity() {
        this.chatActivityEnterView.openKeyboard();
    }

    public void updateReplyMessageHeader(boolean z) {
        String str;
        ChatAvatarContainer chatAvatarContainer = this.avatarContainer;
        if (!(chatAvatarContainer == null || this.threadMessageId == 0)) {
            if (!this.isComments) {
                chatAvatarContainer.setTitle(LocaleController.formatPluralString("Replies", this.threadMessageObject.getRepliesCount()));
            } else if (this.threadMessageObject.hasReplies()) {
                this.avatarContainer.setTitle(LocaleController.formatPluralString("Comments", this.threadMessageObject.getRepliesCount()));
            } else {
                this.avatarContainer.setTitle(LocaleController.getString("CommentsTitle", NUM));
            }
        }
        if (this.replyMessageHeaderObject != null) {
            if (this.threadMessageObject.getRepliesCount() != 0) {
                str = LocaleController.getString("DiscussionStarted", NUM);
            } else if (this.isComments) {
                str = LocaleController.getString("NoComments", NUM);
            } else {
                str = LocaleController.getString("NoReplies", NUM);
            }
            MessageObject messageObject = this.replyMessageHeaderObject;
            messageObject.messageOwner.message = str;
            messageObject.messageText = str;
            if (z) {
                this.chatAdapter.updateRowWithMessageObject(messageObject, true);
            }
        }
    }

    public void showAlert(String str, String str2) {
        FrameLayout frameLayout = this.alertView;
        if (frameLayout != null && str != null && str2 != null) {
            if (frameLayout.getTag() != null) {
                this.alertView.setTag((Object) null);
                AnimatorSet animatorSet = this.alertViewAnimator;
                if (animatorSet != null) {
                    animatorSet.cancel();
                    this.alertViewAnimator = null;
                }
                if (this.alertView.getVisibility() != 0) {
                    this.alertViewEnterProgress = 0.0f;
                    invalidateChatListViewTopPadding();
                }
                this.alertView.setVisibility(0);
                this.alertViewAnimator = new AnimatorSet();
                ValueAnimator ofFloat = ValueAnimator.ofFloat(new float[]{this.alertViewEnterProgress, 1.0f});
                ofFloat.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
                    public final void onAnimationUpdate(ValueAnimator valueAnimator) {
                        ChatActivity.this.lambda$showAlert$97$ChatActivity(valueAnimator);
                    }
                });
                this.alertViewAnimator.playTogether(new Animator[]{ofFloat});
                this.alertViewAnimator.setDuration(200);
                this.alertViewAnimator.addListener(new AnimatorListenerAdapter() {
                    public void onAnimationEnd(Animator animator) {
                        if (ChatActivity.this.alertViewAnimator != null && ChatActivity.this.alertViewAnimator.equals(animator)) {
                            float unused = ChatActivity.this.alertViewEnterProgress = 1.0f;
                            ChatActivity.this.invalidateChatListViewTopPadding();
                            AnimatorSet unused2 = ChatActivity.this.alertViewAnimator = null;
                        }
                    }

                    public void onAnimationCancel(Animator animator) {
                        if (ChatActivity.this.alertViewAnimator != null && ChatActivity.this.alertViewAnimator.equals(animator)) {
                            AnimatorSet unused = ChatActivity.this.alertViewAnimator = null;
                        }
                    }
                });
                this.alertViewAnimator.start();
            }
            this.alertNameTextView.setText(str);
            this.alertTextView.setText(Emoji.replaceEmoji(str2.replace(10, ' '), this.alertTextView.getPaint().getFontMetricsInt(), AndroidUtilities.dp(14.0f), false));
            Runnable runnable = this.hideAlertViewRunnable;
            if (runnable != null) {
                AndroidUtilities.cancelRunOnUIThread(runnable);
            }
            AnonymousClass83 r5 = new Runnable() {
                public void run() {
                    if (ChatActivity.this.hideAlertViewRunnable == this && ChatActivity.this.alertView.getTag() == null) {
                        ChatActivity.this.alertView.setTag(1);
                        if (ChatActivity.this.alertViewAnimator != null) {
                            ChatActivity.this.alertViewAnimator.cancel();
                            AnimatorSet unused = ChatActivity.this.alertViewAnimator = null;
                        }
                        AnimatorSet unused2 = ChatActivity.this.alertViewAnimator = new AnimatorSet();
                        ValueAnimator ofFloat = ValueAnimator.ofFloat(new float[]{ChatActivity.this.alertViewEnterProgress, 0.0f});
                        ofFloat.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
                            public final void onAnimationUpdate(ValueAnimator valueAnimator) {
                                ChatActivity.AnonymousClass83.this.lambda$run$0$ChatActivity$83(valueAnimator);
                            }
                        });
                        ChatActivity.this.alertViewAnimator.playTogether(new Animator[]{ofFloat});
                        ChatActivity.this.alertViewAnimator.setDuration(200);
                        ChatActivity.this.alertViewAnimator.addListener(new AnimatorListenerAdapter() {
                            public void onAnimationEnd(Animator animator) {
                                if (ChatActivity.this.alertViewAnimator != null && ChatActivity.this.alertViewAnimator.equals(animator)) {
                                    ChatActivity.this.alertView.setVisibility(8);
                                    float unused = ChatActivity.this.alertViewEnterProgress = 0.0f;
                                    ChatActivity.this.invalidateChatListViewTopPadding();
                                    AnimatorSet unused2 = ChatActivity.this.alertViewAnimator = null;
                                }
                            }

                            public void onAnimationCancel(Animator animator) {
                                if (ChatActivity.this.alertViewAnimator != null && ChatActivity.this.alertViewAnimator.equals(animator)) {
                                    AnimatorSet unused = ChatActivity.this.alertViewAnimator = null;
                                }
                            }
                        });
                        ChatActivity.this.alertViewAnimator.start();
                    }
                }

                /* access modifiers changed from: private */
                /* renamed from: lambda$run$0 */
                public /* synthetic */ void lambda$run$0$ChatActivity$83(ValueAnimator valueAnimator) {
                    float unused = ChatActivity.this.alertViewEnterProgress = ((Float) valueAnimator.getAnimatedValue()).floatValue();
                    ChatActivity.this.invalidateChatListViewTopPadding();
                }
            };
            this.hideAlertViewRunnable = r5;
            AndroidUtilities.runOnUIThread(r5, 3000);
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$showAlert$97 */
    public /* synthetic */ void lambda$showAlert$97$ChatActivity(ValueAnimator valueAnimator) {
        this.alertViewEnterProgress = ((Float) valueAnimator.getAnimatedValue()).floatValue();
        invalidateChatListViewTopPadding();
    }

    private boolean hidePinnedMessageView(boolean z) {
        FrameLayout frameLayout = this.pinnedMessageView;
        if (frameLayout == null || frameLayout.getTag() != null) {
            return false;
        }
        int i = 0;
        while (true) {
            AnimatorSet[] animatorSetArr = this.pinnedNextAnimation;
            if (i >= animatorSetArr.length) {
                break;
            }
            if (animatorSetArr[i] != null) {
                animatorSetArr[i].cancel();
                this.pinnedNextAnimation[i] = null;
            }
            i++;
        }
        this.setPinnedTextTranslationX = false;
        this.pinnedMessageView.setTag(1);
        AnimatorSet animatorSet = this.pinnedMessageViewAnimator;
        if (animatorSet != null) {
            animatorSet.cancel();
            this.pinnedMessageViewAnimator = null;
        }
        if (z) {
            this.pinnedMessageViewAnimator = new AnimatorSet();
            ValueAnimator ofFloat = ValueAnimator.ofFloat(new float[]{this.pinnedMessageEnterOffset, (float) (-AndroidUtilities.dp(50.0f))});
            ofFloat.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
                public final void onAnimationUpdate(ValueAnimator valueAnimator) {
                    ChatActivity.this.lambda$hidePinnedMessageView$98$ChatActivity(valueAnimator);
                }
            });
            this.pinnedMessageViewAnimator.playTogether(new Animator[]{ofFloat});
            this.pinnedMessageViewAnimator.setDuration(200);
            this.pinnedMessageViewAnimator.addListener(new AnimatorListenerAdapter() {
                public void onAnimationEnd(Animator animator) {
                    if (ChatActivity.this.pinnedMessageViewAnimator != null && ChatActivity.this.pinnedMessageViewAnimator.equals(animator)) {
                        ChatActivity.this.pinnedMessageView.setVisibility(8);
                        AnimatorSet unused = ChatActivity.this.pinnedMessageViewAnimator = null;
                    }
                }

                public void onAnimationCancel(Animator animator) {
                    if (ChatActivity.this.pinnedMessageViewAnimator != null && ChatActivity.this.pinnedMessageViewAnimator.equals(animator)) {
                        AnimatorSet unused = ChatActivity.this.pinnedMessageViewAnimator = null;
                    }
                }
            });
            this.pinnedMessageViewAnimator.start();
        } else {
            this.pinnedMessageEnterOffset = (float) (-AndroidUtilities.dp(50.0f));
            this.pinnedMessageView.setVisibility(8);
            this.chatListView.invalidate();
        }
        return true;
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$hidePinnedMessageView$98 */
    public /* synthetic */ void lambda$hidePinnedMessageView$98$ChatActivity(ValueAnimator valueAnimator) {
        this.pinnedMessageEnterOffset = ((Float) valueAnimator.getAnimatedValue()).floatValue();
        invalidateChatListViewTopPadding();
        invalidateMessagesVisiblePart();
        this.chatListView.invalidate();
    }

    /* access modifiers changed from: private */
    public void updatePinnedMessageView(boolean z) {
        updatePinnedMessageView(z, 0);
    }

    private void updatePinnedListButton(boolean z) {
        boolean z2 = z;
        if (!isThreadChat() && this.pinnedListButton != null) {
            boolean z3 = this.pinnedMessageIds.size() > 1;
            boolean z4 = this.pinnedListButton.getTag() != null;
            boolean z5 = this.pinnedProgress.getTag() != null;
            if (!(z3 == z4 && z5 == this.pinnedPorgressIsShowing)) {
                AnimatorSet animatorSet = this.pinnedListAnimator;
                if (animatorSet != null) {
                    animatorSet.cancel();
                    this.pinnedListAnimator = null;
                }
                final boolean z6 = !z3 && !this.pinnedPorgressIsShowing;
                final boolean z7 = z3 && !this.pinnedPorgressIsShowing;
                int i = 8;
                int i2 = 4;
                if (z2) {
                    if (z3) {
                        this.pinnedListButton.setVisibility(0);
                    } else {
                        this.closePinned.setVisibility(0);
                    }
                    if (this.pinnedPorgressIsShowing) {
                        this.pinnedProgress.setVisibility(0);
                        this.pinnedProgress.setAlpha(0.0f);
                        this.pinnedProgress.setScaleX(0.4f);
                        this.pinnedProgress.setScaleY(0.4f);
                    }
                    AnimatorSet animatorSet2 = new AnimatorSet();
                    this.pinnedListAnimator = animatorSet2;
                    Animator[] animatorArr = new Animator[9];
                    ImageView imageView = this.pinnedListButton;
                    Property property = View.ALPHA;
                    float[] fArr = new float[1];
                    fArr[0] = z7 ? 1.0f : 0.0f;
                    animatorArr[0] = ObjectAnimator.ofFloat(imageView, property, fArr);
                    ImageView imageView2 = this.pinnedListButton;
                    Property property2 = View.SCALE_X;
                    float[] fArr2 = new float[1];
                    fArr2[0] = z7 ? 1.0f : 0.4f;
                    animatorArr[1] = ObjectAnimator.ofFloat(imageView2, property2, fArr2);
                    ImageView imageView3 = this.pinnedListButton;
                    Property property3 = View.SCALE_Y;
                    float[] fArr3 = new float[1];
                    fArr3[0] = z7 ? 1.0f : 0.4f;
                    animatorArr[2] = ObjectAnimator.ofFloat(imageView3, property3, fArr3);
                    ImageView imageView4 = this.closePinned;
                    Property property4 = View.ALPHA;
                    float[] fArr4 = new float[1];
                    fArr4[0] = z6 ? 1.0f : 0.0f;
                    animatorArr[3] = ObjectAnimator.ofFloat(imageView4, property4, fArr4);
                    ImageView imageView5 = this.closePinned;
                    Property property5 = View.SCALE_X;
                    float[] fArr5 = new float[1];
                    fArr5[0] = z6 ? 1.0f : 0.4f;
                    animatorArr[4] = ObjectAnimator.ofFloat(imageView5, property5, fArr5);
                    ImageView imageView6 = this.closePinned;
                    Property property6 = View.SCALE_Y;
                    float[] fArr6 = new float[1];
                    fArr6[0] = z6 ? 1.0f : 0.4f;
                    animatorArr[5] = ObjectAnimator.ofFloat(imageView6, property6, fArr6);
                    RadialProgressView radialProgressView = this.pinnedProgress;
                    Property property7 = View.ALPHA;
                    float[] fArr7 = new float[1];
                    fArr7[0] = !this.pinnedPorgressIsShowing ? 0.0f : 1.0f;
                    animatorArr[6] = ObjectAnimator.ofFloat(radialProgressView, property7, fArr7);
                    RadialProgressView radialProgressView2 = this.pinnedProgress;
                    Property property8 = View.SCALE_X;
                    float[] fArr8 = new float[1];
                    fArr8[0] = !this.pinnedPorgressIsShowing ? 0.4f : 1.0f;
                    animatorArr[7] = ObjectAnimator.ofFloat(radialProgressView2, property8, fArr8);
                    RadialProgressView radialProgressView3 = this.pinnedProgress;
                    Property property9 = View.SCALE_Y;
                    float[] fArr9 = new float[1];
                    fArr9[0] = !this.pinnedPorgressIsShowing ? 0.4f : 1.0f;
                    animatorArr[8] = ObjectAnimator.ofFloat(radialProgressView3, property9, fArr9);
                    animatorSet2.playTogether(animatorArr);
                    this.pinnedListAnimator.setDuration(180);
                    this.pinnedListAnimator.addListener(new AnimatorListenerAdapter() {
                        public void onAnimationEnd(Animator animator) {
                            AnimatorSet unused = ChatActivity.this.pinnedListAnimator = null;
                            int i = 0;
                            ChatActivity.this.closePinned.setVisibility(z6 ? 0 : 4);
                            ChatActivity.this.pinnedListButton.setVisibility(z7 ? 0 : 4);
                            RadialProgressView access$32300 = ChatActivity.this.pinnedProgress;
                            if (!ChatActivity.this.pinnedPorgressIsShowing) {
                                i = 4;
                            }
                            access$32300.setVisibility(i);
                        }
                    });
                    this.pinnedListAnimator.start();
                } else {
                    this.closePinned.setAlpha(z6 ? 1.0f : 0.0f);
                    this.closePinned.setScaleX(z6 ? 1.0f : 0.4f);
                    this.closePinned.setScaleY(z6 ? 1.0f : 0.4f);
                    this.closePinned.setVisibility(z6 ? 0 : 4);
                    this.pinnedListButton.setAlpha(z7 ? 1.0f : 0.0f);
                    this.pinnedListButton.setScaleX(z7 ? 1.0f : 0.4f);
                    this.pinnedListButton.setScaleY(z7 ? 1.0f : 0.4f);
                    ImageView imageView7 = this.pinnedListButton;
                    if (z7) {
                        i2 = 0;
                    }
                    imageView7.setVisibility(i2);
                    this.pinnedProgress.setAlpha(this.pinnedPorgressIsShowing ? 1.0f : 0.0f);
                    this.pinnedProgress.setScaleX(this.pinnedPorgressIsShowing ? 1.0f : 0.4f);
                    this.pinnedProgress.setScaleY(this.pinnedPorgressIsShowing ? 1.0f : 0.4f);
                    RadialProgressView radialProgressView4 = this.pinnedProgress;
                    if (this.pinnedPorgressIsShowing) {
                        i = 0;
                    }
                    radialProgressView4.setVisibility(i);
                }
                this.pinnedListButton.setTag(z3 ? 1 : null);
                this.pinnedProgress.setTag(this.pinnedPorgressIsShowing ? 1 : null);
            }
            if (this.pinnedLineView == null) {
                return;
            }
            if (isThreadChat()) {
                this.pinnedLineView.set(0, 1, false);
            } else {
                this.pinnedLineView.set((this.pinnedMessageIds.size() - 1) - Collections.binarySearch(this.pinnedMessageIds, Integer.valueOf(this.currentPinnedMessageId), Comparator.CC.reverseOrder()), this.pinnedMessageIds.size(), z2);
            }
        }
    }

    /* JADX WARNING: Code restructure failed: missing block: B:28:0x008d, code lost:
        if (r6.pinnedMessageIds.get(0).intValue() != r4.getInt("pin_" + r6.dialog_id, 0)) goto L_0x008f;
     */
    /* JADX WARNING: Removed duplicated region for block: B:154:0x03c2  */
    /* JADX WARNING: Removed duplicated region for block: B:155:0x03d0  */
    /* JADX WARNING: Removed duplicated region for block: B:168:0x040f  */
    /* JADX WARNING: Removed duplicated region for block: B:175:0x0439  */
    /* JADX WARNING: Removed duplicated region for block: B:202:0x0504  */
    /* JADX WARNING: Removed duplicated region for block: B:20:0x0058  */
    /* JADX WARNING: Removed duplicated region for block: B:283:0x0959  */
    /* JADX WARNING: Removed duplicated region for block: B:296:0x09b5  */
    /* JADX WARNING: Removed duplicated region for block: B:299:0x09c0  */
    /* JADX WARNING: Removed duplicated region for block: B:304:0x0a5d  */
    /* JADX WARNING: Removed duplicated region for block: B:305:0x0a65  */
    /* JADX WARNING: Removed duplicated region for block: B:306:0x0a8a  */
    /* JADX WARNING: Removed duplicated region for block: B:327:0x0afd  */
    /* JADX WARNING: Removed duplicated region for block: B:333:? A[RETURN, SYNTHETIC] */
    /* JADX WARNING: Removed duplicated region for block: B:39:0x00ae  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private void updatePinnedMessageView(boolean r34, int r35) {
        /*
            r33 = this;
            r6 = r33
            r7 = r34
            r0 = r35
            android.widget.FrameLayout r1 = r6.pinnedMessageView
            if (r1 == 0) goto L_0x0b00
            int r1 = r6.chatMode
            if (r1 == 0) goto L_0x0010
            goto L_0x0b00
        L_0x0010:
            boolean r1 = r33.isThreadChat()
            r2 = 0
            r8 = 0
            if (r1 == 0) goto L_0x0021
            boolean r1 = r6.threadMessageVisible
            if (r1 != 0) goto L_0x004c
            org.telegram.messenger.MessageObject r1 = r6.threadMessageObject
            int r3 = r6.threadMessageId
            goto L_0x004e
        L_0x0021:
            int r1 = r6.currentPinnedMessageId
            if (r1 == 0) goto L_0x004c
            java.util.ArrayList<java.lang.Integer> r1 = r6.pinnedMessageIds
            boolean r1 = r1.isEmpty()
            if (r1 != 0) goto L_0x004c
            java.util.HashMap<java.lang.Integer, org.telegram.messenger.MessageObject> r1 = r6.pinnedMessageObjects
            int r3 = r6.currentPinnedMessageId
            java.lang.Integer r3 = java.lang.Integer.valueOf(r3)
            java.lang.Object r1 = r1.get(r3)
            org.telegram.messenger.MessageObject r1 = (org.telegram.messenger.MessageObject) r1
            if (r1 != 0) goto L_0x0049
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r1 = r6.messagesDict
            r1 = r1[r8]
            int r3 = r6.currentPinnedMessageId
            java.lang.Object r1 = r1.get(r3)
            org.telegram.messenger.MessageObject r1 = (org.telegram.messenger.MessageObject) r1
        L_0x0049:
            int r3 = r6.currentPinnedMessageId
            goto L_0x004e
        L_0x004c:
            r1 = r2
            r3 = 0
        L_0x004e:
            int r4 = r6.currentAccount
            android.content.SharedPreferences r4 = org.telegram.messenger.MessagesController.getNotificationsSettings(r4)
            org.telegram.messenger.MessageObject r5 = r6.threadMessageObject
            if (r5 != 0) goto L_0x008f
            org.telegram.tgnet.TLRPC$ChatFull r5 = r6.chatInfo
            if (r5 != 0) goto L_0x0060
            org.telegram.tgnet.TLRPC$UserFull r5 = r6.userInfo
            if (r5 == 0) goto L_0x0af6
        L_0x0060:
            if (r3 == 0) goto L_0x0af6
            java.util.ArrayList<java.lang.Integer> r5 = r6.pinnedMessageIds
            boolean r5 = r5.isEmpty()
            if (r5 != 0) goto L_0x008f
            java.util.ArrayList<java.lang.Integer> r5 = r6.pinnedMessageIds
            java.lang.Object r5 = r5.get(r8)
            java.lang.Integer r5 = (java.lang.Integer) r5
            int r5 = r5.intValue()
            java.lang.StringBuilder r9 = new java.lang.StringBuilder
            r9.<init>()
            java.lang.String r10 = "pin_"
            r9.append(r10)
            long r10 = r6.dialog_id
            r9.append(r10)
            java.lang.String r9 = r9.toString()
            int r4 = r4.getInt(r9, r8)
            if (r5 == r4) goto L_0x0af6
        L_0x008f:
            int r4 = r6.reportType
            if (r4 >= 0) goto L_0x0af6
            org.telegram.ui.ActionBar.ActionBar r4 = r6.actionBar
            if (r4 == 0) goto L_0x00a7
            boolean r4 = r4.isActionModeShowed()
            if (r4 != 0) goto L_0x0af6
            org.telegram.ui.ActionBar.ActionBar r4 = r6.actionBar
            boolean r4 = r4.isSearchFieldVisible()
            if (r4 == 0) goto L_0x00a7
            goto L_0x0af6
        L_0x00a7:
            r33.updatePinnedListButton(r34)
            r15 = 0
            r14 = 2
            if (r1 == 0) goto L_0x0a8a
            android.widget.FrameLayout r3 = r6.pinnedMessageView
            java.lang.Object r3 = r3.getTag()
            r13 = 1
            if (r3 == 0) goto L_0x0115
            android.widget.FrameLayout r3 = r6.pinnedMessageView
            r3.setTag(r2)
            android.animation.AnimatorSet r3 = r6.pinnedMessageViewAnimator
            if (r3 == 0) goto L_0x00c5
            r3.cancel()
            r6.pinnedMessageViewAnimator = r2
        L_0x00c5:
            if (r7 == 0) goto L_0x0105
            float[] r3 = new float[r14]
            float r9 = r6.pinnedMessageEnterOffset
            r3[r8] = r9
            r3[r13] = r15
            android.animation.ValueAnimator r3 = android.animation.ValueAnimator.ofFloat(r3)
            org.telegram.ui.ChatActivity$86 r9 = new org.telegram.ui.ChatActivity$86
            r9.<init>()
            r3.addUpdateListener(r9)
            android.widget.FrameLayout r9 = r6.pinnedMessageView
            r9.setVisibility(r8)
            android.animation.AnimatorSet r9 = new android.animation.AnimatorSet
            r9.<init>()
            r6.pinnedMessageViewAnimator = r9
            android.animation.Animator[] r10 = new android.animation.Animator[r13]
            r10[r8] = r3
            r9.playTogether(r10)
            android.animation.AnimatorSet r3 = r6.pinnedMessageViewAnimator
            r9 = 200(0xc8, double:9.9E-322)
            r3.setDuration(r9)
            android.animation.AnimatorSet r3 = r6.pinnedMessageViewAnimator
            org.telegram.ui.ChatActivity$87 r9 = new org.telegram.ui.ChatActivity$87
            r9.<init>()
            r3.addListener(r9)
            android.animation.AnimatorSet r3 = r6.pinnedMessageViewAnimator
            r3.start()
            goto L_0x0112
        L_0x0105:
            r6.pinnedMessageEnterOffset = r15
            r33.invalidateChatListViewTopPadding()
            r33.invalidateMessagesVisiblePart()
            android.widget.FrameLayout r3 = r6.pinnedMessageView
            r3.setVisibility(r8)
        L_0x0112:
            r18 = 1
            goto L_0x0117
        L_0x0115:
            r18 = 0
        L_0x0117:
            r3 = 0
        L_0x0118:
            android.animation.AnimatorSet[] r9 = r6.pinnedNextAnimation
            int r10 = r9.length
            if (r3 >= r10) goto L_0x012d
            r10 = r9[r3]
            if (r10 == 0) goto L_0x012a
            r9 = r9[r3]
            r9.cancel()
            android.animation.AnimatorSet[] r9 = r6.pinnedNextAnimation
            r9[r3] = r2
        L_0x012a:
            int r3 = r3 + 1
            goto L_0x0118
        L_0x012d:
            r6.setPinnedTextTranslationX = r8
            org.telegram.ui.ActionBar.SimpleTextView[] r3 = r6.pinnedNameTextView
            if (r0 == 0) goto L_0x0139
            int r9 = r6.loadedPinnedMessagesCount
            if (r9 != r14) goto L_0x0139
            r9 = 1
            goto L_0x013a
        L_0x0139:
            r9 = 0
        L_0x013a:
            r12 = r3[r9]
            org.telegram.ui.ActionBar.SimpleTextView[] r9 = r6.pinnedMessageTextView
            if (r0 == 0) goto L_0x0142
            r10 = 1
            goto L_0x0143
        L_0x0142:
            r10 = 0
        L_0x0143:
            r11 = r9[r10]
            r3 = r3[r8]
            android.view.ViewGroup$LayoutParams r3 = r3.getLayoutParams()
            android.widget.FrameLayout$LayoutParams r3 = (android.widget.FrameLayout.LayoutParams) r3
            org.telegram.ui.ActionBar.SimpleTextView[] r9 = r6.pinnedNameTextView
            r9 = r9[r13]
            android.view.ViewGroup$LayoutParams r9 = r9.getLayoutParams()
            r10 = r9
            android.widget.FrameLayout$LayoutParams r10 = (android.widget.FrameLayout.LayoutParams) r10
            org.telegram.ui.Components.NumberTextView r9 = r6.pinnedCounterTextView
            android.view.ViewGroup$LayoutParams r9 = r9.getLayoutParams()
            android.widget.FrameLayout$LayoutParams r9 = (android.widget.FrameLayout.LayoutParams) r9
            org.telegram.ui.ActionBar.SimpleTextView[] r14 = r6.pinnedMessageTextView
            r14 = r14[r8]
            android.view.ViewGroup$LayoutParams r14 = r14.getLayoutParams()
            android.widget.FrameLayout$LayoutParams r14 = (android.widget.FrameLayout.LayoutParams) r14
            org.telegram.ui.ActionBar.SimpleTextView[] r15 = r6.pinnedMessageTextView
            r15 = r15[r13]
            android.view.ViewGroup$LayoutParams r15 = r15.getLayoutParams()
            android.widget.FrameLayout$LayoutParams r15 = (android.widget.FrameLayout.LayoutParams) r15
            java.util.ArrayList<org.telegram.tgnet.TLRPC$PhotoSize> r5 = r1.photoThumbs2
            r19 = 1134559232(0x43a00000, float:320.0)
            int r13 = org.telegram.messenger.AndroidUtilities.dp(r19)
            org.telegram.tgnet.TLRPC$PhotoSize r5 = org.telegram.messenger.FileLoader.getClosestPhotoSizeWithSize(r5, r13)
            java.util.ArrayList<org.telegram.tgnet.TLRPC$PhotoSize> r13 = r1.photoThumbs2
            r21 = 1109393408(0x42200000, float:40.0)
            int r4 = org.telegram.messenger.AndroidUtilities.dp(r21)
            org.telegram.tgnet.TLRPC$PhotoSize r4 = org.telegram.messenger.FileLoader.getClosestPhotoSizeWithSize(r13, r4)
            org.telegram.tgnet.TLObject r13 = r1.photoThumbsObject2
            if (r5 != 0) goto L_0x01cf
            boolean r4 = r1.mediaExists
            if (r4 == 0) goto L_0x01ab
            java.util.ArrayList<org.telegram.tgnet.TLRPC$PhotoSize> r4 = r1.photoThumbs
            int r5 = org.telegram.messenger.AndroidUtilities.getPhotoSize()
            org.telegram.tgnet.TLRPC$PhotoSize r4 = org.telegram.messenger.FileLoader.getClosestPhotoSizeWithSize(r4, r5)
            if (r4 == 0) goto L_0x01a3
            int r5 = r4.size
            goto L_0x01a4
        L_0x01a3:
            r5 = 0
        L_0x01a4:
            r13 = 0
            r31 = r5
            r5 = r4
            r4 = r31
            goto L_0x01b8
        L_0x01ab:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$PhotoSize> r4 = r1.photoThumbs
            int r5 = org.telegram.messenger.AndroidUtilities.dp(r19)
            org.telegram.tgnet.TLRPC$PhotoSize r4 = org.telegram.messenger.FileLoader.getClosestPhotoSizeWithSize(r4, r5)
            r5 = r4
            r4 = 0
            r13 = 1
        L_0x01b8:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$PhotoSize> r8 = r1.photoThumbs
            int r2 = org.telegram.messenger.AndroidUtilities.dp(r21)
            org.telegram.tgnet.TLRPC$PhotoSize r2 = org.telegram.messenger.FileLoader.getClosestPhotoSizeWithSize(r8, r2)
            org.telegram.tgnet.TLObject r8 = r1.photoThumbsObject
            r31 = r4
            r4 = r2
            r2 = r31
            r32 = r13
            r13 = r8
            r8 = r32
            goto L_0x01d1
        L_0x01cf:
            r2 = 0
            r8 = 1
        L_0x01d1:
            if (r5 != r4) goto L_0x01d4
            r4 = 0
        L_0x01d4:
            int r7 = r3.leftMargin
            r21 = r7
            if (r5 == 0) goto L_0x01f3
            boolean r7 = r5 instanceof org.telegram.tgnet.TLRPC$TL_photoSizeEmpty
            if (r7 != 0) goto L_0x01f3
            org.telegram.tgnet.TLRPC$FileLocation r7 = r5.location
            boolean r7 = r7 instanceof org.telegram.tgnet.TLRPC$TL_fileLocationUnavailable
            if (r7 != 0) goto L_0x01f3
            boolean r7 = r1.isAnyKindOfSticker()
            if (r7 != 0) goto L_0x01f3
            boolean r7 = r1.isSecretMedia()
            if (r7 == 0) goto L_0x01f1
            goto L_0x01f3
        L_0x01f1:
            r7 = 0
            goto L_0x01f4
        L_0x01f3:
            r7 = 1
        L_0x01f4:
            if (r7 == 0) goto L_0x0227
            r23 = r11
            r11 = 0
            r6.pinnedImageLocation = r11
            r6.pinnedImageLocationObject = r11
            if (r0 != 0) goto L_0x020f
            org.telegram.ui.Components.BackupImageView[] r2 = r6.pinnedMessageImageView
            r4 = 0
            r2 = r2[r4]
            r2.setImageBitmap(r11)
            org.telegram.ui.Components.BackupImageView[] r2 = r6.pinnedMessageImageView
            r2 = r2[r4]
            r4 = 4
            r2.setVisibility(r4)
        L_0x020f:
            r2 = 1099956224(0x41900000, float:18.0)
            int r2 = org.telegram.messenger.AndroidUtilities.dp(r2)
            r15.leftMargin = r2
            r14.leftMargin = r2
            r9.leftMargin = r2
            r10.leftMargin = r2
            r3.leftMargin = r2
            r28 = r12
            r5 = r23
            r4 = 1
            r8 = 0
            goto L_0x02b3
        L_0x0227:
            r23 = r11
            boolean r11 = r1.isRoundVideo()
            if (r11 == 0) goto L_0x0241
            org.telegram.ui.Components.BackupImageView[] r11 = r6.pinnedMessageImageView
            r20 = 1
            r11 = r11[r20]
            r24 = 1098907648(0x41800000, float:16.0)
            r25 = r9
            int r9 = org.telegram.messenger.AndroidUtilities.dp(r24)
            r11.setRoundRadius(r9)
            goto L_0x0252
        L_0x0241:
            r25 = r9
            r20 = 1
            org.telegram.ui.Components.BackupImageView[] r9 = r6.pinnedMessageImageView
            r9 = r9[r20]
            r11 = 1073741824(0x40000000, float:2.0)
            int r11 = org.telegram.messenger.AndroidUtilities.dp(r11)
            r9.setRoundRadius(r11)
        L_0x0252:
            r6.pinnedImageSize = r2
            r6.pinnedImageCacheType = r8
            r6.pinnedImageLocation = r5
            r6.pinnedImageThumbLocation = r4
            r6.pinnedImageLocationObject = r13
            org.telegram.ui.Components.BackupImageView[] r9 = r6.pinnedMessageImageView
            r9 = r9[r20]
            org.telegram.messenger.ImageLocation r5 = org.telegram.messenger.ImageLocation.getForObject(r5, r13)
            org.telegram.messenger.ImageLocation r4 = org.telegram.messenger.ImageLocation.getForObject(r4, r13)
            r24 = 0
            java.lang.String r11 = "50_50"
            java.lang.String r13 = "50_50_b"
            r26 = r25
            r27 = r10
            r10 = r5
            r5 = r23
            r28 = r12
            r12 = r4
            r4 = 1
            r29 = r14
            r14 = r24
            r30 = r15
            r15 = r2
            r16 = r8
            r17 = r1
            r9.setImage(r10, r11, r12, r13, r14, r15, r16, r17)
            org.telegram.ui.Components.BackupImageView[] r2 = r6.pinnedMessageImageView
            r2 = r2[r4]
            r8 = 0
            r2.setVisibility(r8)
            if (r0 == 0) goto L_0x029a
            org.telegram.ui.Components.BackupImageView[] r2 = r6.pinnedMessageImageView
            r2 = r2[r4]
            r8 = 0
            r2.setAlpha(r8)
            goto L_0x029b
        L_0x029a:
            r8 = 0
        L_0x029b:
            r2 = 1113325568(0x425CLASSNAME, float:55.0)
            int r2 = org.telegram.messenger.AndroidUtilities.dp(r2)
            r15 = r30
            r15.leftMargin = r2
            r14 = r29
            r14.leftMargin = r2
            r9 = r26
            r9.leftMargin = r2
            r10 = r27
            r10.leftMargin = r2
            r3.leftMargin = r2
        L_0x02b3:
            org.telegram.ui.ActionBar.SimpleTextView[] r2 = r6.pinnedNameTextView
            r11 = 0
            r2 = r2[r11]
            r2.setLayoutParams(r3)
            org.telegram.ui.ActionBar.SimpleTextView[] r2 = r6.pinnedNameTextView
            r2 = r2[r4]
            r2.setLayoutParams(r10)
            org.telegram.ui.Components.NumberTextView r2 = r6.pinnedCounterTextView
            r2.setLayoutParams(r9)
            org.telegram.ui.ActionBar.SimpleTextView[] r2 = r6.pinnedMessageTextView
            r2 = r2[r11]
            r2.setLayoutParams(r14)
            org.telegram.ui.ActionBar.SimpleTextView[] r2 = r6.pinnedMessageTextView
            r2 = r2[r4]
            r2.setLayoutParams(r15)
            int r2 = r6.threadMessageId
            if (r2 == 0) goto L_0x03df
            int r2 = r6.currentAccount
            org.telegram.messenger.MessagesController r2 = org.telegram.messenger.MessagesController.getInstance(r2)
            org.telegram.messenger.MessageObject r9 = r6.threadMessageObject
            org.telegram.tgnet.TLRPC$Message r10 = r9.messageOwner
            org.telegram.tgnet.TLRPC$MessageFwdHeader r10 = r10.fwd_from
            if (r10 == 0) goto L_0x036f
            org.telegram.tgnet.TLRPC$Peer r11 = r10.saved_from_peer
            if (r11 == 0) goto L_0x036f
            int r12 = r11.user_id
            if (r12 == 0) goto L_0x030b
            org.telegram.tgnet.TLRPC$Peer r9 = r10.from_id
            boolean r10 = r9 instanceof org.telegram.tgnet.TLRPC$TL_peerUser
            if (r10 == 0) goto L_0x0301
            int r9 = r9.user_id
            java.lang.Integer r9 = java.lang.Integer.valueOf(r9)
            org.telegram.tgnet.TLRPC$User r2 = r2.getUser(r9)
            goto L_0x0385
        L_0x0301:
            java.lang.Integer r9 = java.lang.Integer.valueOf(r12)
            org.telegram.tgnet.TLRPC$User r2 = r2.getUser(r9)
            goto L_0x0385
        L_0x030b:
            int r12 = r11.channel_id
            if (r12 == 0) goto L_0x0333
            boolean r9 = r9.isSavedFromMegagroup()
            if (r9 == 0) goto L_0x0326
            org.telegram.tgnet.TLRPC$Peer r9 = r10.from_id
            boolean r11 = r9 instanceof org.telegram.tgnet.TLRPC$TL_peerUser
            if (r11 == 0) goto L_0x0326
            int r9 = r9.user_id
            java.lang.Integer r9 = java.lang.Integer.valueOf(r9)
            org.telegram.tgnet.TLRPC$User r2 = r2.getUser(r9)
            goto L_0x0385
        L_0x0326:
            org.telegram.tgnet.TLRPC$Peer r9 = r10.saved_from_peer
            int r9 = r9.channel_id
            java.lang.Integer r9 = java.lang.Integer.valueOf(r9)
            org.telegram.tgnet.TLRPC$Chat r2 = r2.getChat(r9)
            goto L_0x039b
        L_0x0333:
            int r9 = r11.chat_id
            if (r9 == 0) goto L_0x03be
            org.telegram.tgnet.TLRPC$Peer r10 = r10.from_id
            boolean r11 = r10 instanceof org.telegram.tgnet.TLRPC$TL_peerUser
            if (r11 == 0) goto L_0x0348
            int r9 = r10.user_id
            java.lang.Integer r9 = java.lang.Integer.valueOf(r9)
            org.telegram.tgnet.TLRPC$User r2 = r2.getUser(r9)
            goto L_0x0385
        L_0x0348:
            boolean r11 = r10 instanceof org.telegram.tgnet.TLRPC$TL_peerChat
            if (r11 == 0) goto L_0x0357
            int r9 = r10.chat_id
            java.lang.Integer r9 = java.lang.Integer.valueOf(r9)
            org.telegram.tgnet.TLRPC$Chat r2 = r2.getChat(r9)
            goto L_0x039b
        L_0x0357:
            boolean r11 = r10 instanceof org.telegram.tgnet.TLRPC$TL_peerChannel
            if (r11 == 0) goto L_0x0366
            int r9 = r10.channel_id
            java.lang.Integer r9 = java.lang.Integer.valueOf(r9)
            org.telegram.tgnet.TLRPC$Chat r2 = r2.getChat(r9)
            goto L_0x039b
        L_0x0366:
            java.lang.Integer r9 = java.lang.Integer.valueOf(r9)
            org.telegram.tgnet.TLRPC$Chat r2 = r2.getChat(r9)
            goto L_0x039b
        L_0x036f:
            boolean r9 = r9.isFromUser()
            if (r9 == 0) goto L_0x0387
            org.telegram.messenger.MessageObject r9 = r6.threadMessageObject
            org.telegram.tgnet.TLRPC$Message r9 = r9.messageOwner
            org.telegram.tgnet.TLRPC$Peer r9 = r9.from_id
            int r9 = r9.user_id
            java.lang.Integer r9 = java.lang.Integer.valueOf(r9)
            org.telegram.tgnet.TLRPC$User r2 = r2.getUser(r9)
        L_0x0385:
            r9 = 0
            goto L_0x03c0
        L_0x0387:
            org.telegram.messenger.MessageObject r9 = r6.threadMessageObject
            org.telegram.tgnet.TLRPC$Message r9 = r9.messageOwner
            org.telegram.tgnet.TLRPC$Peer r10 = r9.from_id
            boolean r11 = r10 instanceof org.telegram.tgnet.TLRPC$TL_peerChannel
            if (r11 == 0) goto L_0x039e
            int r9 = r10.channel_id
            java.lang.Integer r9 = java.lang.Integer.valueOf(r9)
            org.telegram.tgnet.TLRPC$Chat r2 = r2.getChat(r9)
        L_0x039b:
            r9 = r2
            r2 = 0
            goto L_0x03c0
        L_0x039e:
            boolean r11 = r10 instanceof org.telegram.tgnet.TLRPC$TL_peerChat
            if (r11 == 0) goto L_0x03ad
            int r9 = r10.chat_id
            java.lang.Integer r9 = java.lang.Integer.valueOf(r9)
            org.telegram.tgnet.TLRPC$Chat r2 = r2.getChat(r9)
            goto L_0x039b
        L_0x03ad:
            boolean r10 = r9.post
            if (r10 == 0) goto L_0x03be
            org.telegram.tgnet.TLRPC$Peer r9 = r9.peer_id
            int r9 = r9.channel_id
            java.lang.Integer r9 = java.lang.Integer.valueOf(r9)
            org.telegram.tgnet.TLRPC$Chat r2 = r2.getChat(r9)
            goto L_0x039b
        L_0x03be:
            r2 = 0
            goto L_0x0385
        L_0x03c0:
            if (r2 == 0) goto L_0x03d0
            java.lang.String r9 = r2.first_name
            java.lang.String r2 = r2.last_name
            java.lang.String r2 = org.telegram.messenger.ContactsController.formatName(r9, r2)
            r10 = r28
            r10.setText(r2)
            goto L_0x03d9
        L_0x03d0:
            r10 = r28
            if (r9 == 0) goto L_0x03d9
            java.lang.String r2 = r9.title
            r10.setText(r2)
        L_0x03d9:
            r11 = r34
            r13 = r21
            r9 = 2
            goto L_0x043d
        L_0x03df:
            r10 = r28
            int[] r2 = r6.currentPinnedMessageIndex
            r9 = 0
            r2 = r2[r9]
            if (r2 == 0) goto L_0x03fb
            int r2 = r6.loadedPinnedMessagesCount
            r9 = 2
            if (r2 == r9) goto L_0x03ee
            goto L_0x03fc
        L_0x03ee:
            r2 = 2131626987(0x7f0e0beb, float:1.8881226E38)
            java.lang.String r11 = "PreviousPinnedMessage"
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r11, r2)
            r10.setText(r2)
            goto L_0x0408
        L_0x03fb:
            r9 = 2
        L_0x03fc:
            r2 = 2131626942(0x7f0e0bbe, float:1.8881134E38)
            java.lang.String r11 = "PinnedMessage"
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r11, r2)
            r10.setText(r2)
        L_0x0408:
            int[] r2 = r6.currentPinnedMessageIndex
            r11 = 0
            r2 = r2[r11]
            if (r2 == 0) goto L_0x0439
            int r2 = r33.getPinnedMessagesCount()
            org.telegram.ui.Components.NumberTextView r12 = r6.pinnedCounterTextView
            int r13 = r2 + -1
            int[] r14 = r6.currentPinnedMessageIndex
            r14 = r14[r11]
            int r2 = r2 - r14
            int r2 = java.lang.Math.max(r4, r2)
            int r2 = java.lang.Math.min(r13, r2)
            r11 = r34
            r13 = r21
            if (r11 == 0) goto L_0x0434
            org.telegram.ui.Components.NumberTextView r14 = r6.pinnedCounterTextView
            java.lang.Object r14 = r14.getTag()
            if (r14 != 0) goto L_0x0434
            r14 = 1
            goto L_0x0435
        L_0x0434:
            r14 = 0
        L_0x0435:
            r12.setNumber(r2, r14)
            goto L_0x043d
        L_0x0439:
            r11 = r34
            r13 = r21
        L_0x043d:
            int r2 = r1.type
            r12 = 14
            if (r2 != r12) goto L_0x045e
            java.lang.Object[] r2 = new java.lang.Object[r9]
            java.lang.String r12 = r1.getMusicAuthor()
            r14 = 0
            r2[r14] = r12
            java.lang.String r1 = r1.getMusicTitle()
            r2[r4] = r1
            java.lang.String r1 = "%s - %s"
            java.lang.String r1 = java.lang.String.format(r1, r2)
            r5.setText(r1)
        L_0x045b:
            r12 = 0
            goto L_0x0502
        L_0x045e:
            r12 = 17
            r14 = 32
            r15 = 10
            r8 = 150(0x96, float:2.1E-43)
            if (r2 != r12) goto L_0x0485
            org.telegram.tgnet.TLRPC$Message r1 = r1.messageOwner
            org.telegram.tgnet.TLRPC$MessageMedia r1 = r1.media
            org.telegram.tgnet.TLRPC$TL_messageMediaPoll r1 = (org.telegram.tgnet.TLRPC$TL_messageMediaPoll) r1
            org.telegram.tgnet.TLRPC$Poll r1 = r1.poll
            java.lang.String r1 = r1.question
            int r2 = r1.length()
            if (r2 <= r8) goto L_0x047d
            r2 = 0
            java.lang.String r1 = r1.substring(r2, r8)
        L_0x047d:
            java.lang.String r1 = r1.replace(r15, r14)
            r5.setText(r1)
            goto L_0x045b
        L_0x0485:
            org.telegram.tgnet.TLRPC$Message r2 = r1.messageOwner
            org.telegram.tgnet.TLRPC$MessageMedia r2 = r2.media
            boolean r12 = r2 instanceof org.telegram.tgnet.TLRPC$TL_messageMediaGame
            r16 = 1096810496(0x41600000, float:14.0)
            if (r12 == 0) goto L_0x04a8
            org.telegram.tgnet.TLRPC$TL_game r1 = r2.game
            java.lang.String r1 = r1.title
            android.graphics.Paint r2 = r5.getPaint()
            android.graphics.Paint$FontMetricsInt r2 = r2.getFontMetricsInt()
            int r8 = org.telegram.messenger.AndroidUtilities.dp(r16)
            r12 = 0
            java.lang.CharSequence r1 = org.telegram.messenger.Emoji.replaceEmoji(r1, r2, r8, r12)
            r5.setText(r1)
            goto L_0x0502
        L_0x04a8:
            r12 = 0
            java.lang.CharSequence r2 = r1.caption
            boolean r2 = android.text.TextUtils.isEmpty(r2)
            if (r2 != 0) goto L_0x04d9
            java.lang.CharSequence r1 = r1.caption
            java.lang.String r1 = r1.toString()
            int r2 = r1.length()
            if (r2 <= r8) goto L_0x04c1
            java.lang.String r1 = r1.substring(r12, r8)
        L_0x04c1:
            java.lang.String r1 = r1.replace(r15, r14)
            android.graphics.Paint r2 = r5.getPaint()
            android.graphics.Paint$FontMetricsInt r2 = r2.getFontMetricsInt()
            int r8 = org.telegram.messenger.AndroidUtilities.dp(r16)
            java.lang.CharSequence r1 = org.telegram.messenger.Emoji.replaceEmoji(r1, r2, r8, r12)
            r5.setText(r1)
            goto L_0x0502
        L_0x04d9:
            java.lang.CharSequence r1 = r1.messageText
            if (r1 == 0) goto L_0x0502
            java.lang.String r1 = r1.toString()
            int r2 = r1.length()
            if (r2 <= r8) goto L_0x04eb
            java.lang.String r1 = r1.substring(r12, r8)
        L_0x04eb:
            java.lang.String r1 = r1.replace(r15, r14)
            android.graphics.Paint r2 = r5.getPaint()
            android.graphics.Paint$FontMetricsInt r2 = r2.getFontMetricsInt()
            int r8 = org.telegram.messenger.AndroidUtilities.dp(r16)
            java.lang.CharSequence r1 = org.telegram.messenger.Emoji.replaceEmoji(r1, r2, r8, r12)
            r5.setText(r1)
        L_0x0502:
            if (r0 == 0) goto L_0x0959
            android.animation.AnimatorSet[] r1 = r6.pinnedNextAnimation
            android.animation.AnimatorSet r2 = new android.animation.AnimatorSet
            r2.<init>()
            r1[r12] = r2
            android.animation.AnimatorSet[] r1 = r6.pinnedNextAnimation
            android.animation.AnimatorSet r2 = new android.animation.AnimatorSet
            r2.<init>()
            r1[r4] = r2
            java.util.ArrayList r1 = new java.util.ArrayList
            r1.<init>()
            java.util.ArrayList r2 = new java.util.ArrayList
            r2.<init>()
            r5.setVisibility(r12)
            r10.setVisibility(r12)
            int r8 = r6.loadedPinnedMessagesCount
            r14 = 1082130432(0x40800000, float:4.0)
            if (r8 == r9) goto L_0x0577
            int[] r8 = r6.currentPinnedMessageIndex
            r8 = r8[r12]
            if (r8 != 0) goto L_0x0533
            goto L_0x0577
        L_0x0533:
            org.telegram.ui.Components.NumberTextView r8 = r6.pinnedCounterTextView
            java.lang.Object r8 = r8.getTag()
            if (r8 == 0) goto L_0x05b3
            org.telegram.ui.Components.NumberTextView r8 = r6.pinnedCounterTextView
            r8.setVisibility(r12)
            org.telegram.ui.Components.NumberTextView r8 = r6.pinnedCounterTextView
            r12 = 0
            r8.setAlpha(r12)
            org.telegram.ui.Components.NumberTextView r8 = r6.pinnedCounterTextView
            android.util.Property r12 = android.view.View.ALPHA
            float[] r15 = new float[r9]
            r15 = {0, NUM} // fill-array
            android.animation.ObjectAnimator r8 = android.animation.ObjectAnimator.ofFloat(r8, r12, r15)
            r1.add(r8)
            org.telegram.ui.Components.NumberTextView r8 = r6.pinnedCounterTextView
            android.util.Property r12 = android.view.View.TRANSLATION_Y
            float[] r15 = new float[r9]
            int r9 = org.telegram.messenger.AndroidUtilities.dp(r14)
            int r9 = -r9
            float r9 = (float) r9
            r16 = 0
            r15[r16] = r9
            r9 = 0
            r15[r4] = r9
            android.animation.ObjectAnimator r8 = android.animation.ObjectAnimator.ofFloat(r8, r12, r15)
            r1.add(r8)
            org.telegram.ui.Components.NumberTextView r8 = r6.pinnedCounterTextView
            r9 = 0
            r8.setTag(r9)
            goto L_0x05b3
        L_0x0577:
            org.telegram.ui.Components.NumberTextView r8 = r6.pinnedCounterTextView
            java.lang.Object r8 = r8.getTag()
            if (r8 != 0) goto L_0x05b3
            org.telegram.ui.Components.NumberTextView r8 = r6.pinnedCounterTextView
            android.util.Property r9 = android.view.View.ALPHA
            r12 = 2
            float[] r15 = new float[r12]
            r15 = {NUM, 0} // fill-array
            android.animation.ObjectAnimator r8 = android.animation.ObjectAnimator.ofFloat(r8, r9, r15)
            r1.add(r8)
            org.telegram.ui.Components.NumberTextView r8 = r6.pinnedCounterTextView
            android.util.Property r9 = android.view.View.TRANSLATION_Y
            float[] r15 = new float[r12]
            r12 = 0
            r16 = 0
            r15[r16] = r12
            int r12 = org.telegram.messenger.AndroidUtilities.dp(r14)
            int r12 = -r12
            float r12 = (float) r12
            r15[r4] = r12
            android.animation.ObjectAnimator r8 = android.animation.ObjectAnimator.ofFloat(r8, r9, r15)
            r1.add(r8)
            org.telegram.ui.Components.NumberTextView r8 = r6.pinnedCounterTextView
            java.lang.Integer r9 = java.lang.Integer.valueOf(r4)
            r8.setTag(r9)
        L_0x05b3:
            int r8 = r6.loadedPinnedMessagesCount
            r12 = 2
            if (r8 != r12) goto L_0x0630
            java.lang.CharSequence r8 = r10.getText()
            org.telegram.ui.ActionBar.SimpleTextView[] r15 = r6.pinnedNameTextView
            r16 = 0
            r15 = r15[r16]
            java.lang.CharSequence r15 = r15.getText()
            boolean r8 = android.text.TextUtils.equals(r8, r15)
            if (r8 != 0) goto L_0x0630
            r8 = 0
            r10.setAlpha(r8)
            android.util.Property r8 = android.view.View.ALPHA
            float[] r15 = new float[r12]
            r15 = {0, NUM} // fill-array
            android.animation.ObjectAnimator r8 = android.animation.ObjectAnimator.ofFloat(r10, r8, r15)
            r1.add(r8)
            org.telegram.ui.ActionBar.SimpleTextView[] r8 = r6.pinnedNameTextView
            r8 = r8[r16]
            android.util.Property r15 = android.view.View.ALPHA
            float[] r9 = new float[r12]
            r9 = {NUM, 0} // fill-array
            android.animation.ObjectAnimator r8 = android.animation.ObjectAnimator.ofFloat(r8, r15, r9)
            r1.add(r8)
            android.util.Property r8 = android.view.View.TRANSLATION_Y
            float[] r9 = new float[r12]
            if (r0 != r12) goto L_0x05f9
            r12 = 1082130432(0x40800000, float:4.0)
            goto L_0x05fb
        L_0x05f9:
            r12 = -1065353216(0xffffffffCLASSNAME, float:-4.0)
        L_0x05fb:
            int r12 = org.telegram.messenger.AndroidUtilities.dp(r12)
            float r12 = (float) r12
            r15 = 0
            r9[r15] = r12
            r12 = 0
            r9[r4] = r12
            android.animation.ObjectAnimator r8 = android.animation.ObjectAnimator.ofFloat(r10, r8, r9)
            r1.add(r8)
            org.telegram.ui.ActionBar.SimpleTextView[] r8 = r6.pinnedNameTextView
            r8 = r8[r15]
            android.util.Property r9 = android.view.View.TRANSLATION_Y
            r14 = 2
            float[] r4 = new float[r14]
            r4[r15] = r12
            if (r0 != r14) goto L_0x061d
            r12 = -1065353216(0xffffffffCLASSNAME, float:-4.0)
            goto L_0x061f
        L_0x061d:
            r12 = 1082130432(0x40800000, float:4.0)
        L_0x061f:
            int r12 = org.telegram.messenger.AndroidUtilities.dp(r12)
            float r12 = (float) r12
            r14 = 1
            r4[r14] = r12
            android.animation.ObjectAnimator r4 = android.animation.ObjectAnimator.ofFloat(r8, r9, r4)
            r1.add(r4)
            r12 = 0
            goto L_0x0667
        L_0x0630:
            org.telegram.ui.ActionBar.SimpleTextView[] r4 = r6.pinnedNameTextView
            r8 = 0
            r4 = r4[r8]
            if (r10 == r4) goto L_0x064f
            r4 = 1065353216(0x3var_, float:1.0)
            r10.setAlpha(r4)
            org.telegram.ui.ActionBar.SimpleTextView[] r9 = r6.pinnedNameTextView
            r9 = r9[r8]
            r12 = 0
            r9.setAlpha(r12)
            r10.setTranslationY(r12)
            org.telegram.ui.ActionBar.SimpleTextView[] r9 = r6.pinnedNameTextView
            r9 = r9[r8]
            r9.setTranslationY(r12)
            goto L_0x0667
        L_0x064f:
            r4 = 1065353216(0x3var_, float:1.0)
            r12 = 0
            r10.setAlpha(r4)
            r10.setTranslationY(r12)
            org.telegram.ui.ActionBar.SimpleTextView[] r4 = r6.pinnedNameTextView
            r8 = 1
            r4 = r4[r8]
            r4.setTranslationY(r12)
            org.telegram.ui.ActionBar.SimpleTextView[] r4 = r6.pinnedNameTextView
            r4 = r4[r8]
            r4.setAlpha(r12)
        L_0x0667:
            java.lang.CharSequence r4 = r5.getText()
            org.telegram.ui.ActionBar.SimpleTextView[] r8 = r6.pinnedMessageTextView
            r9 = 0
            r8 = r8[r9]
            java.lang.CharSequence r8 = r8.getText()
            boolean r4 = android.text.TextUtils.equals(r4, r8)
            r8 = -1073741824(0xffffffffCLASSNAME, float:-2.0)
            r9 = 5
            if (r4 != 0) goto L_0x071b
            r5.setAlpha(r12)
            android.util.Property r4 = android.view.View.ALPHA
            r12 = 2
            float[] r14 = new float[r12]
            r14 = {0, NUM} // fill-array
            android.animation.ObjectAnimator r4 = android.animation.ObjectAnimator.ofFloat(r5, r4, r14)
            r1.add(r4)
            org.telegram.ui.ActionBar.SimpleTextView[] r4 = r6.pinnedMessageTextView
            r14 = 0
            r4 = r4[r14]
            android.util.Property r14 = android.view.View.ALPHA
            float[] r15 = new float[r12]
            r15 = {NUM, 0} // fill-array
            android.animation.ObjectAnimator r4 = android.animation.ObjectAnimator.ofFloat(r4, r14, r15)
            r1.add(r4)
            boolean r4 = r6.forceScrollToFirst
            if (r4 == 0) goto L_0x06ac
            int r4 = r6.loadedPinnedMessagesCount
            if (r4 <= r9) goto L_0x06ac
            r4 = 1
            goto L_0x06ad
        L_0x06ac:
            r4 = 0
        L_0x06ad:
            if (r4 == 0) goto L_0x06d2
            android.util.Property r12 = android.view.View.TRANSLATION_Y
            r14 = 2
            float[] r15 = new float[r14]
            r17 = 1082130432(0x40800000, float:4.0)
            int r9 = org.telegram.messenger.AndroidUtilities.dp(r17)
            float r9 = (float) r9
            r19 = 0
            r15[r19] = r9
            int r9 = org.telegram.messenger.AndroidUtilities.dp(r8)
            float r9 = (float) r9
            r20 = 1
            r15[r20] = r9
            android.animation.ObjectAnimator r9 = android.animation.ObjectAnimator.ofFloat(r5, r12, r15)
            r2.add(r9)
            r14 = 0
            r15 = 0
            goto L_0x06f4
        L_0x06d2:
            r14 = 2
            r17 = 1082130432(0x40800000, float:4.0)
            android.util.Property r9 = android.view.View.TRANSLATION_Y
            float[] r12 = new float[r14]
            if (r0 != r14) goto L_0x06de
            r14 = 1082130432(0x40800000, float:4.0)
            goto L_0x06e0
        L_0x06de:
            r14 = -1065353216(0xffffffffCLASSNAME, float:-4.0)
        L_0x06e0:
            int r14 = org.telegram.messenger.AndroidUtilities.dp(r14)
            float r14 = (float) r14
            r15 = 0
            r12[r15] = r14
            r14 = 0
            r19 = 1
            r12[r19] = r14
            android.animation.ObjectAnimator r9 = android.animation.ObjectAnimator.ofFloat(r5, r9, r12)
            r1.add(r9)
        L_0x06f4:
            org.telegram.ui.ActionBar.SimpleTextView[] r9 = r6.pinnedMessageTextView
            r9 = r9[r15]
            android.util.Property r12 = android.view.View.TRANSLATION_Y
            r23 = r4
            r8 = 2
            float[] r4 = new float[r8]
            r4[r15] = r14
            if (r0 != r8) goto L_0x0706
            r14 = -1065353216(0xffffffffCLASSNAME, float:-4.0)
            goto L_0x0708
        L_0x0706:
            r14 = 1082130432(0x40800000, float:4.0)
        L_0x0708:
            int r8 = org.telegram.messenger.AndroidUtilities.dp(r14)
            float r8 = (float) r8
            r14 = 1
            r4[r14] = r8
            android.animation.ObjectAnimator r4 = android.animation.ObjectAnimator.ofFloat(r9, r12, r4)
            r1.add(r4)
            r4 = r23
            r8 = 0
            goto L_0x0734
        L_0x071b:
            r4 = 1065353216(0x3var_, float:1.0)
            r5.setAlpha(r4)
            org.telegram.ui.ActionBar.SimpleTextView[] r4 = r6.pinnedMessageTextView
            r8 = 0
            r4 = r4[r8]
            r9 = 0
            r4.setAlpha(r9)
            r5.setTranslationY(r9)
            org.telegram.ui.ActionBar.SimpleTextView[] r4 = r6.pinnedMessageTextView
            r4 = r4[r8]
            r4.setTranslationY(r9)
            r4 = 0
        L_0x0734:
            int r3 = r3.leftMargin
            if (r3 == r13) goto L_0x0823
            r9 = 1
            r6.setPinnedTextTranslationX = r9
            int r0 = r13 - r3
            org.telegram.ui.ActionBar.SimpleTextView[] r3 = r6.pinnedMessageTextView
            r3 = r3[r8]
            android.util.Property r12 = android.view.View.TRANSLATION_X
            r13 = 2
            float[] r14 = new float[r13]
            float r15 = (float) r0
            r14[r8] = r15
            r16 = 0
            r14[r9] = r16
            android.animation.ObjectAnimator r3 = android.animation.ObjectAnimator.ofFloat(r3, r12, r14)
            r1.add(r3)
            org.telegram.ui.ActionBar.SimpleTextView[] r3 = r6.pinnedMessageTextView
            r3 = r3[r9]
            android.util.Property r12 = android.view.View.TRANSLATION_X
            float[] r14 = new float[r13]
            r14[r8] = r15
            r14[r9] = r16
            android.animation.ObjectAnimator r3 = android.animation.ObjectAnimator.ofFloat(r3, r12, r14)
            r1.add(r3)
            org.telegram.ui.ActionBar.SimpleTextView[] r3 = r6.pinnedNameTextView
            r3 = r3[r8]
            android.util.Property r12 = android.view.View.TRANSLATION_X
            float[] r14 = new float[r13]
            r14[r8] = r15
            r14[r9] = r16
            android.animation.ObjectAnimator r3 = android.animation.ObjectAnimator.ofFloat(r3, r12, r14)
            r1.add(r3)
            org.telegram.ui.ActionBar.SimpleTextView[] r3 = r6.pinnedNameTextView
            r3 = r3[r9]
            android.util.Property r12 = android.view.View.TRANSLATION_X
            float[] r14 = new float[r13]
            r14[r8] = r15
            r14[r9] = r16
            android.animation.ObjectAnimator r3 = android.animation.ObjectAnimator.ofFloat(r3, r12, r14)
            r1.add(r3)
            org.telegram.ui.Components.NumberTextView r3 = r6.pinnedCounterTextView
            android.util.Property r12 = android.view.View.TRANSLATION_X
            float[] r14 = new float[r13]
            int r13 = r6.pinnedCounterTextViewX
            int r15 = r13 + r0
            float r15 = (float) r15
            r14[r8] = r15
            float r13 = (float) r13
            r14[r9] = r13
            android.animation.ObjectAnimator r3 = android.animation.ObjectAnimator.ofFloat(r3, r12, r14)
            r1.add(r3)
            if (r0 <= 0) goto L_0x07e7
            org.telegram.ui.Components.BackupImageView[] r0 = r6.pinnedMessageImageView
            r0 = r0[r8]
            r3 = 1065353216(0x3var_, float:1.0)
            r0.setAlpha(r3)
            org.telegram.ui.Components.BackupImageView[] r0 = r6.pinnedMessageImageView
            r0 = r0[r8]
            android.util.Property r3 = android.view.View.ALPHA
            r9 = 2
            float[] r12 = new float[r9]
            r12 = {NUM, 0} // fill-array
            android.animation.ObjectAnimator r0 = android.animation.ObjectAnimator.ofFloat(r0, r3, r12)
            r1.add(r0)
            org.telegram.ui.Components.BackupImageView[] r0 = r6.pinnedMessageImageView
            r0 = r0[r8]
            android.util.Property r3 = android.view.View.SCALE_X
            float[] r12 = new float[r9]
            r12 = {NUM, NUM} // fill-array
            android.animation.ObjectAnimator r0 = android.animation.ObjectAnimator.ofFloat(r0, r3, r12)
            r1.add(r0)
            org.telegram.ui.Components.BackupImageView[] r0 = r6.pinnedMessageImageView
            r0 = r0[r8]
            android.util.Property r3 = android.view.View.SCALE_Y
            float[] r8 = new float[r9]
            r8 = {NUM, NUM} // fill-array
            android.animation.ObjectAnimator r0 = android.animation.ObjectAnimator.ofFloat(r0, r3, r8)
            r1.add(r0)
            goto L_0x081f
        L_0x07e7:
            r9 = 2
            org.telegram.ui.Components.BackupImageView[] r0 = r6.pinnedMessageImageView
            r3 = 1
            r0 = r0[r3]
            android.util.Property r8 = android.view.View.ALPHA
            float[] r12 = new float[r9]
            r12 = {0, NUM} // fill-array
            android.animation.ObjectAnimator r0 = android.animation.ObjectAnimator.ofFloat(r0, r8, r12)
            r1.add(r0)
            org.telegram.ui.Components.BackupImageView[] r0 = r6.pinnedMessageImageView
            r0 = r0[r3]
            android.util.Property r8 = android.view.View.SCALE_X
            float[] r12 = new float[r9]
            r12 = {NUM, NUM} // fill-array
            android.animation.ObjectAnimator r0 = android.animation.ObjectAnimator.ofFloat(r0, r8, r12)
            r1.add(r0)
            org.telegram.ui.Components.BackupImageView[] r0 = r6.pinnedMessageImageView
            r0 = r0[r3]
            android.util.Property r3 = android.view.View.SCALE_Y
            float[] r8 = new float[r9]
            r8 = {NUM, NUM} // fill-array
            android.animation.ObjectAnimator r0 = android.animation.ObjectAnimator.ofFloat(r0, r3, r8)
            r1.add(r0)
        L_0x081f:
            r0 = 0
            r9 = 1
            goto L_0x08f5
        L_0x0823:
            r3 = 0
            r6.setPinnedTextTranslationX = r3
            r8 = 0
            r5.setTranslationX(r8)
            org.telegram.ui.ActionBar.SimpleTextView[] r9 = r6.pinnedMessageTextView
            r9 = r9[r3]
            r9.setTranslationX(r8)
            r10.setTranslationX(r8)
            org.telegram.ui.ActionBar.SimpleTextView[] r9 = r6.pinnedNameTextView
            r9 = r9[r3]
            r9.setTranslationX(r8)
            org.telegram.ui.Components.NumberTextView r3 = r6.pinnedCounterTextView
            int r8 = r6.pinnedCounterTextViewX
            float r8 = (float) r8
            r3.setTranslationX(r8)
            org.telegram.ui.Components.BackupImageView[] r3 = r6.pinnedMessageImageView
            r8 = 1
            r3 = r3[r8]
            r9 = 1065353216(0x3var_, float:1.0)
            r3.setAlpha(r9)
            if (r7 != 0) goto L_0x08f3
            org.telegram.ui.Components.BackupImageView[] r3 = r6.pinnedMessageImageView
            r3 = r3[r8]
            android.util.Property r8 = android.view.View.ALPHA
            r9 = 2
            float[] r12 = new float[r9]
            r12 = {0, NUM} // fill-array
            android.animation.ObjectAnimator r3 = android.animation.ObjectAnimator.ofFloat(r3, r8, r12)
            r1.add(r3)
            org.telegram.ui.Components.BackupImageView[] r3 = r6.pinnedMessageImageView
            r8 = 0
            r3 = r3[r8]
            android.util.Property r8 = android.view.View.ALPHA
            float[] r12 = new float[r9]
            r12 = {NUM, 0} // fill-array
            android.animation.ObjectAnimator r3 = android.animation.ObjectAnimator.ofFloat(r3, r8, r12)
            r1.add(r3)
            boolean r3 = r6.forceScrollToFirst
            r9 = 1077936128(0x40400000, float:3.0)
            if (r3 == 0) goto L_0x08aa
            int r3 = r6.loadedPinnedMessagesCount
            r12 = 5
            if (r3 <= r12) goto L_0x08aa
            org.telegram.ui.Components.BackupImageView[] r3 = r6.pinnedMessageImageView
            r12 = 1
            r13 = r3[r12]
            r3 = r3[r12]
            android.util.Property r14 = android.view.View.TRANSLATION_Y
            r15 = 2
            float[] r8 = new float[r15]
            int r15 = org.telegram.messenger.AndroidUtilities.dp(r9)
            float r15 = (float) r15
            r17 = 0
            r8[r17] = r15
            r15 = -1073741824(0xffffffffCLASSNAME, float:-2.0)
            int r15 = org.telegram.messenger.AndroidUtilities.dp(r15)
            float r15 = (float) r15
            r8[r12] = r15
            android.animation.ObjectAnimator r3 = android.animation.ObjectAnimator.ofFloat(r3, r14, r8)
            r2.add(r3)
            r22 = r13
            r13 = 0
            r15 = 0
            goto L_0x08cf
        L_0x08aa:
            r12 = 1
            org.telegram.ui.Components.BackupImageView[] r3 = r6.pinnedMessageImageView
            r3 = r3[r12]
            android.util.Property r8 = android.view.View.TRANSLATION_Y
            r13 = 2
            float[] r14 = new float[r13]
            if (r0 != r13) goto L_0x08b9
            r13 = 1077936128(0x40400000, float:3.0)
            goto L_0x08bb
        L_0x08b9:
            r13 = -1069547520(0xffffffffCLASSNAME, float:-3.0)
        L_0x08bb:
            int r13 = org.telegram.messenger.AndroidUtilities.dp(r13)
            float r13 = (float) r13
            r15 = 0
            r14[r15] = r13
            r13 = 0
            r14[r12] = r13
            android.animation.ObjectAnimator r3 = android.animation.ObjectAnimator.ofFloat(r3, r8, r14)
            r1.add(r3)
            r22 = 0
        L_0x08cf:
            org.telegram.ui.Components.BackupImageView[] r3 = r6.pinnedMessageImageView
            r3 = r3[r15]
            android.util.Property r8 = android.view.View.TRANSLATION_Y
            r12 = 2
            float[] r14 = new float[r12]
            r14[r15] = r13
            if (r0 != r12) goto L_0x08df
            r16 = -1069547520(0xffffffffCLASSNAME, float:-3.0)
            goto L_0x08e1
        L_0x08df:
            r16 = 1077936128(0x40400000, float:3.0)
        L_0x08e1:
            int r0 = org.telegram.messenger.AndroidUtilities.dp(r16)
            float r0 = (float) r0
            r9 = 1
            r14[r9] = r0
            android.animation.ObjectAnimator r0 = android.animation.ObjectAnimator.ofFloat(r3, r8, r14)
            r1.add(r0)
            r0 = r22
            goto L_0x08f5
        L_0x08f3:
            r9 = 1
            r0 = 0
        L_0x08f5:
            android.animation.AnimatorSet[] r3 = r6.pinnedNextAnimation
            r3 = r3[r9]
            org.telegram.ui.ChatActivity$88 r8 = new org.telegram.ui.ChatActivity$88
            r8.<init>(r4, r0, r5)
            r3.addListener(r8)
            android.animation.AnimatorSet[] r0 = r6.pinnedNextAnimation
            r0 = r0[r9]
            r12 = 180(0xb4, double:8.9E-322)
            r0.setDuration(r12)
            boolean r0 = r6.forceScrollToFirst
            if (r0 == 0) goto L_0x091c
            int r0 = r6.loadedPinnedMessagesCount
            r3 = 5
            if (r0 <= r3) goto L_0x091c
            android.animation.AnimatorSet[] r0 = r6.pinnedNextAnimation
            r0 = r0[r9]
            org.telegram.ui.Components.CubicBezierInterpolator r3 = org.telegram.ui.Components.CubicBezierInterpolator.EASE_OUT
            r0.setInterpolator(r3)
        L_0x091c:
            android.animation.AnimatorSet[] r0 = r6.pinnedNextAnimation
            r0 = r0[r9]
            r0.playTogether(r2)
            android.animation.AnimatorSet[] r0 = r6.pinnedNextAnimation
            r8 = 0
            r0 = r0[r8]
            r0.playTogether(r1)
            android.animation.AnimatorSet[] r0 = r6.pinnedNextAnimation
            r14 = r0[r8]
            org.telegram.ui.ChatActivity$89 r15 = new org.telegram.ui.ChatActivity$89
            r0 = r15
            r1 = r33
            r2 = r4
            r3 = r5
            r4 = r10
            r5 = r7
            r0.<init>(r2, r3, r4, r5)
            r14.addListener(r15)
            android.animation.AnimatorSet[] r0 = r6.pinnedNextAnimation
            r0 = r0[r8]
            r0.setDuration(r12)
            boolean r0 = r6.setPinnedTextTranslationX
            if (r0 != 0) goto L_0x0a57
            android.animation.AnimatorSet[] r0 = r6.pinnedNextAnimation
            r0 = r0[r8]
            r0.start()
            android.animation.AnimatorSet[] r0 = r6.pinnedNextAnimation
            r0 = r0[r9]
            r0.start()
            goto L_0x0a57
        L_0x0959:
            r8 = 0
            r9 = 1
            int r0 = r6.loadedPinnedMessagesCount
            r1 = 2
            if (r0 == r1) goto L_0x0982
            int[] r0 = r6.currentPinnedMessageIndex
            r0 = r0[r8]
            if (r0 != 0) goto L_0x0967
            goto L_0x0982
        L_0x0967:
            org.telegram.ui.Components.NumberTextView r0 = r6.pinnedCounterTextView
            java.lang.Object r0 = r0.getTag()
            if (r0 == 0) goto L_0x09a0
            org.telegram.ui.Components.NumberTextView r0 = r6.pinnedCounterTextView
            r0.setVisibility(r8)
            org.telegram.ui.Components.NumberTextView r0 = r6.pinnedCounterTextView
            r1 = 1065353216(0x3var_, float:1.0)
            r0.setAlpha(r1)
            org.telegram.ui.Components.NumberTextView r0 = r6.pinnedCounterTextView
            r1 = 0
            r0.setTag(r1)
            goto L_0x09a0
        L_0x0982:
            org.telegram.ui.Components.NumberTextView r0 = r6.pinnedCounterTextView
            java.lang.Object r0 = r0.getTag()
            if (r0 != 0) goto L_0x09a0
            org.telegram.ui.Components.NumberTextView r0 = r6.pinnedCounterTextView
            r1 = 0
            r0.setAlpha(r1)
            org.telegram.ui.Components.NumberTextView r0 = r6.pinnedCounterTextView
            r2 = 4
            r0.setVisibility(r2)
            org.telegram.ui.Components.NumberTextView r0 = r6.pinnedCounterTextView
            java.lang.Integer r2 = java.lang.Integer.valueOf(r9)
            r0.setTag(r2)
            goto L_0x09a1
        L_0x09a0:
            r1 = 0
        L_0x09a1:
            org.telegram.ui.Components.NumberTextView r0 = r6.pinnedCounterTextView
            r0.setTranslationY(r1)
            org.telegram.ui.Components.NumberTextView r0 = r6.pinnedCounterTextView
            int r1 = r6.pinnedCounterTextViewX
            float r1 = (float) r1
            r0.setTranslationX(r1)
            org.telegram.ui.Components.NumberTextView r0 = r6.pinnedCounterTextView
            int r1 = r6.loadedPinnedMessagesCount
            r2 = 2
            if (r1 == r2) goto L_0x09c0
            int[] r1 = r6.currentPinnedMessageIndex
            r2 = 0
            r1 = r1[r2]
            if (r1 != 0) goto L_0x09bd
            goto L_0x09c1
        L_0x09bd:
            r15 = 1065353216(0x3var_, float:1.0)
            goto L_0x09c2
        L_0x09c0:
            r2 = 0
        L_0x09c1:
            r15 = 0
        L_0x09c2:
            r0.setAlpha(r15)
            r5.setVisibility(r2)
            r0 = 1065353216(0x3var_, float:1.0)
            r5.setAlpha(r0)
            r1 = 0
            r5.setTranslationX(r1)
            r5.setTranslationY(r1)
            r10.setVisibility(r2)
            r10.setAlpha(r0)
            r10.setTranslationX(r1)
            r10.setTranslationY(r1)
            org.telegram.ui.ActionBar.SimpleTextView[] r0 = r6.pinnedMessageTextView
            r0 = r0[r9]
            r2 = 4
            r0.setVisibility(r2)
            org.telegram.ui.ActionBar.SimpleTextView[] r0 = r6.pinnedMessageTextView
            r0 = r0[r9]
            r0.setTranslationX(r1)
            org.telegram.ui.ActionBar.SimpleTextView[] r0 = r6.pinnedMessageTextView
            r0 = r0[r9]
            r0.setTranslationY(r1)
            org.telegram.ui.ActionBar.SimpleTextView[] r0 = r6.pinnedNameTextView
            r0 = r0[r9]
            r0.setVisibility(r2)
            org.telegram.ui.ActionBar.SimpleTextView[] r0 = r6.pinnedNameTextView
            r0 = r0[r9]
            r0.setTranslationX(r1)
            org.telegram.ui.ActionBar.SimpleTextView[] r0 = r6.pinnedNameTextView
            r0 = r0[r9]
            r0.setTranslationY(r1)
            org.telegram.ui.Components.BackupImageView[] r0 = r6.pinnedMessageImageView
            r1 = 0
            r0 = r0[r1]
            r0.setVisibility(r2)
            org.telegram.ui.Components.BackupImageView[] r0 = r6.pinnedMessageImageView
            r2 = r0[r9]
            r3 = r0[r1]
            r0[r9] = r3
            r0[r1] = r2
            r0 = r0[r1]
            r4 = 1065353216(0x3var_, float:1.0)
            r0.setAlpha(r4)
            org.telegram.ui.Components.BackupImageView[] r0 = r6.pinnedMessageImageView
            r0 = r0[r1]
            r0.setScaleX(r4)
            org.telegram.ui.Components.BackupImageView[] r0 = r6.pinnedMessageImageView
            r0 = r0[r1]
            r0.setScaleY(r4)
            org.telegram.ui.Components.BackupImageView[] r0 = r6.pinnedMessageImageView
            r0 = r0[r1]
            r1 = 0
            r0.setTranslationY(r1)
            org.telegram.ui.Components.BackupImageView[] r0 = r6.pinnedMessageImageView
            r0 = r0[r9]
            r0.setAlpha(r4)
            org.telegram.ui.Components.BackupImageView[] r0 = r6.pinnedMessageImageView
            r0 = r0[r9]
            r0.setScaleX(r4)
            org.telegram.ui.Components.BackupImageView[] r0 = r6.pinnedMessageImageView
            r0 = r0[r9]
            r0.setScaleY(r4)
            org.telegram.ui.Components.BackupImageView[] r0 = r6.pinnedMessageImageView
            r0 = r0[r9]
            r1 = 0
            r0.setTranslationY(r1)
        L_0x0a57:
            boolean r0 = r33.isThreadChat()
            if (r0 == 0) goto L_0x0a65
            org.telegram.ui.Components.PinnedLineView r0 = r6.pinnedLineView
            r1 = 0
            r0.set(r1, r9, r1)
            goto L_0x0afb
        L_0x0a65:
            java.util.ArrayList<java.lang.Integer> r0 = r6.pinnedMessageIds
            int r1 = r6.currentPinnedMessageId
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)
            java.util.Comparator r2 = j$.util.Comparator.CC.reverseOrder()
            int r0 = java.util.Collections.binarySearch(r0, r1, r2)
            org.telegram.ui.Components.PinnedLineView r1 = r6.pinnedLineView
            java.util.ArrayList<java.lang.Integer> r2 = r6.pinnedMessageIds
            int r2 = r2.size()
            int r2 = r2 - r9
            int r2 = r2 - r0
            java.util.ArrayList<java.lang.Integer> r0 = r6.pinnedMessageIds
            int r0 = r0.size()
            r1.set(r2, r0, r11)
            goto L_0x0afb
        L_0x0a8a:
            r11 = r7
            r1 = 0
            r2 = 4
            r4 = 1065353216(0x3var_, float:1.0)
            org.telegram.ui.Components.NumberTextView r0 = r6.pinnedCounterTextView
            int r5 = r6.loadedPinnedMessagesCount
            r7 = 2
            if (r5 == r7) goto L_0x0aa0
            int[] r5 = r6.currentPinnedMessageIndex
            r8 = 0
            r5 = r5[r8]
            if (r5 != 0) goto L_0x0a9e
            goto L_0x0aa1
        L_0x0a9e:
            r2 = 0
            goto L_0x0aa1
        L_0x0aa0:
            r8 = 0
        L_0x0aa1:
            r0.setVisibility(r2)
            org.telegram.ui.Components.NumberTextView r0 = r6.pinnedCounterTextView
            int r2 = r6.loadedPinnedMessagesCount
            if (r2 == r7) goto L_0x0ab4
            int[] r2 = r6.currentPinnedMessageIndex
            r2 = r2[r8]
            if (r2 != 0) goto L_0x0ab1
            goto L_0x0ab4
        L_0x0ab1:
            r5 = 1065353216(0x3var_, float:1.0)
            goto L_0x0ab5
        L_0x0ab4:
            r5 = 0
        L_0x0ab5:
            r0.setAlpha(r5)
            r0 = 0
            r6.pinnedImageLocation = r0
            r6.pinnedImageLocationObject = r0
            boolean r18 = r33.hidePinnedMessageView(r34)
            android.util.SparseArray<java.lang.Boolean> r0 = r6.loadingPinnedMessages
            int r0 = r0.indexOfKey(r3)
            if (r0 >= 0) goto L_0x0afb
            android.util.SparseArray<java.lang.Boolean> r0 = r6.loadingPinnedMessages
            java.lang.Boolean r1 = java.lang.Boolean.TRUE
            r0.put(r3, r1)
            java.util.ArrayList r13 = new java.util.ArrayList
            r13.<init>()
            java.lang.Integer r0 = java.lang.Integer.valueOf(r3)
            r13.add(r0)
            org.telegram.messenger.MediaDataController r9 = r33.getMediaDataController()
            long r10 = r6.dialog_id
            org.telegram.tgnet.TLRPC$Chat r0 = r6.currentChat
            boolean r0 = org.telegram.messenger.ChatObject.isChannel(r0)
            if (r0 == 0) goto L_0x0af0
            org.telegram.tgnet.TLRPC$Chat r0 = r6.currentChat
            int r8 = r0.id
            r12 = r8
            goto L_0x0af1
        L_0x0af0:
            r12 = 0
        L_0x0af1:
            r14 = 1
            r9.loadPinnedMessages(r10, r12, r13, r14)
            goto L_0x0afb
        L_0x0af6:
            r11 = r7
            boolean r18 = r33.hidePinnedMessageView(r34)
        L_0x0afb:
            if (r18 == 0) goto L_0x0b00
            r33.checkListViewPaddings()
        L_0x0b00:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.updatePinnedMessageView(boolean, int):void");
    }

    private void updateTopPanel(boolean z) {
        boolean z2;
        if (this.topChatPanelView != null && this.chatMode == 0) {
            SharedPreferences notificationsSettings = MessagesController.getNotificationsSettings(this.currentAccount);
            long j = this.dialog_id;
            TLRPC$EncryptedChat tLRPC$EncryptedChat = this.currentEncryptedChat;
            if (tLRPC$EncryptedChat != null) {
                boolean z3 = tLRPC$EncryptedChat.admin_id != getUserConfig().getClientUserId() && !getContactsController().isLoadingContacts() && getContactsController().contactsDict.get(Integer.valueOf(this.currentUser.id)) == null;
                long j2 = (long) this.currentUser.id;
                int i = notificationsSettings.getInt("dialog_bar_vis3" + j2, 0);
                if (z3 && (i == 1 || i == 3)) {
                    z3 = false;
                }
                z2 = z3;
                j = j2;
            } else {
                StringBuilder sb = new StringBuilder();
                sb.append("dialog_bar_vis3");
                sb.append(j);
                z2 = notificationsSettings.getInt(sb.toString(), 0) == 2;
            }
            boolean z4 = notificationsSettings.getBoolean("dialog_bar_share" + j, false);
            boolean z5 = notificationsSettings.getBoolean("dialog_bar_report" + j, false);
            boolean z6 = notificationsSettings.getBoolean("dialog_bar_block" + j, false);
            boolean z7 = notificationsSettings.getBoolean("dialog_bar_add" + j, false);
            boolean z8 = notificationsSettings.getBoolean("dialog_bar_archived" + this.dialog_id, false);
            boolean z9 = notificationsSettings.getBoolean("dialog_bar_location" + j, false);
            boolean z10 = notificationsSettings.getBoolean("dialog_bar_invite" + j, false);
            if (z10) {
                z2 = true;
            }
            if (z5 || z6 || z9) {
                this.reportSpamButton.setVisibility(0);
            } else {
                this.reportSpamButton.setVisibility(8);
            }
            this.addToContactsButtonArchive = false;
            TLRPC$User user = this.currentUser != null ? getMessagesController().getUser(Integer.valueOf(this.currentUser.id)) : null;
            if (z10) {
                String string = LocaleController.getString("GroupAddMembers", NUM);
                if (string != null) {
                    string = string.toUpperCase();
                }
                this.addToContactsButton.setVisibility(0);
                this.addToContactsButton.setText(string);
                this.addToContactsButton.setTag(4);
                this.addToContactsButton.setTextColor(Theme.getColor("chat_addContact"));
                if (Build.VERSION.SDK_INT >= 21) {
                    Theme.setSelectorDrawableColor(this.addToContactsButton.getBackground(), Theme.getColor("chat_addContact") & NUM, true);
                }
                this.reportSpamButton.setTag("chat_addContact");
            } else if (user != null) {
                if (UserObject.isReplyUser(user)) {
                    this.addToContactsButton.setVisibility(8);
                } else {
                    boolean z11 = user.contact;
                    if (!z11 && !user.self && z7) {
                        this.addContactItem.setVisibility(0);
                        this.addContactItem.setText(LocaleController.getString("AddToContacts", NUM));
                        this.addToContactsButton.setVisibility(0);
                        if (z8) {
                            this.addToContactsButtonArchive = true;
                            this.addToContactsButton.setText(LocaleController.getString("Unarchive", NUM).toUpperCase());
                            this.addToContactsButton.setTag(3);
                        } else if (this.reportSpamButton.getVisibility() == 0) {
                            this.addToContactsButton.setText(LocaleController.getString("AddContactChat", NUM));
                        } else {
                            this.addToContactsButton.setText(LocaleController.formatString("AddContactFullChat", NUM, UserObject.getFirstName(user)).toUpperCase());
                        }
                        this.addToContactsButton.setTag((Object) null);
                        this.addToContactsButton.setVisibility(0);
                    } else if (!z4 || user.self) {
                        if (z11 || user.self || z2) {
                            this.addContactItem.setVisibility(8);
                        } else {
                            this.addContactItem.setVisibility(0);
                            this.addContactItem.setText(LocaleController.getString("ShareMyContactInfo", NUM));
                            this.addToContactsButton.setTag(2);
                        }
                        this.addToContactsButton.setVisibility(8);
                    } else {
                        this.addContactItem.setVisibility(0);
                        this.addToContactsButton.setVisibility(0);
                        this.addContactItem.setText(LocaleController.getString("ShareMyContactInfo", NUM));
                        this.addToContactsButton.setText(LocaleController.getString("ShareMyPhone", NUM).toUpperCase());
                        this.addToContactsButton.setTag(1);
                        this.addToContactsButton.setVisibility(0);
                    }
                }
                this.reportSpamButton.setText(LocaleController.getString("ReportSpamUser", NUM));
            } else {
                if (z9) {
                    this.reportSpamButton.setText(LocaleController.getString("ReportSpamLocation", NUM));
                    this.reportSpamButton.setTag(NUM, 1);
                    this.reportSpamButton.setTextColor(Theme.getColor("chat_addContact"));
                    if (Build.VERSION.SDK_INT >= 21) {
                        Theme.setSelectorDrawableColor(this.reportSpamButton.getBackground(), Theme.getColor("chat_addContact") & NUM, true);
                    }
                    this.reportSpamButton.setTag("chat_addContact");
                } else {
                    if (z8) {
                        this.addToContactsButtonArchive = true;
                        this.addToContactsButton.setText(LocaleController.getString("Unarchive", NUM).toUpperCase());
                        this.addToContactsButton.setTag(3);
                        this.addToContactsButton.setVisibility(0);
                        this.reportSpamButton.setText(LocaleController.getString("ReportSpam", NUM));
                    } else {
                        this.addToContactsButton.setVisibility(8);
                        this.reportSpamButton.setText(LocaleController.getString("ReportSpamAndLeave", NUM));
                    }
                    this.reportSpamButton.setTag(NUM, (Object) null);
                    this.reportSpamButton.setTextColor(Theme.getColor("chat_reportSpam"));
                    if (Build.VERSION.SDK_INT >= 21) {
                        Theme.setSelectorDrawableColor(this.reportSpamButton.getBackground(), Theme.getColor("chat_reportSpam") & NUM, true);
                    }
                    this.reportSpamButton.setTag("chat_reportSpam");
                }
                ActionBarMenuSubItem actionBarMenuSubItem = this.addContactItem;
                if (actionBarMenuSubItem != null) {
                    actionBarMenuSubItem.setVisibility(8);
                }
            }
            if (this.userBlocked || (this.addToContactsButton.getVisibility() == 8 && this.reportSpamButton.getVisibility() == 8)) {
                z2 = false;
            }
            if (z2) {
                if (this.topChatPanelView.getTag() != null) {
                    if (BuildVars.LOGS_ENABLED) {
                        FileLog.d("show spam button");
                    }
                    this.topChatPanelView.setTag((Object) null);
                    this.topChatPanelView.setVisibility(0);
                    AnimatorSet animatorSet = this.reportSpamViewAnimator;
                    if (animatorSet != null) {
                        animatorSet.cancel();
                        this.reportSpamViewAnimator = null;
                    }
                    if (z) {
                        this.reportSpamViewAnimator = new AnimatorSet();
                        ValueAnimator ofFloat = ValueAnimator.ofFloat(new float[]{this.topChatPanelViewOffset, 0.0f});
                        ofFloat.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
                            public final void onAnimationUpdate(ValueAnimator valueAnimator) {
                                ChatActivity.this.lambda$updateTopPanel$99$ChatActivity(valueAnimator);
                            }
                        });
                        this.reportSpamViewAnimator.playTogether(new Animator[]{ofFloat});
                        this.reportSpamViewAnimator.setDuration(200);
                        this.reportSpamViewAnimator.addListener(new AnimatorListenerAdapter() {
                            public void onAnimationEnd(Animator animator) {
                                if (ChatActivity.this.reportSpamViewAnimator != null && ChatActivity.this.reportSpamViewAnimator.equals(animator)) {
                                    AnimatorSet unused = ChatActivity.this.reportSpamViewAnimator = null;
                                }
                            }

                            public void onAnimationCancel(Animator animator) {
                                if (ChatActivity.this.reportSpamViewAnimator != null && ChatActivity.this.reportSpamViewAnimator.equals(animator)) {
                                    AnimatorSet unused = ChatActivity.this.reportSpamViewAnimator = null;
                                }
                            }
                        });
                        this.reportSpamViewAnimator.start();
                    } else {
                        this.topChatPanelViewOffset = 0.0f;
                        invalidateChatListViewTopPadding();
                        invalidateMessagesVisiblePart();
                    }
                }
            } else if (this.topChatPanelView.getTag() == null) {
                if (BuildVars.LOGS_ENABLED) {
                    FileLog.d("hide spam button");
                }
                this.topChatPanelView.setTag(1);
                AnimatorSet animatorSet2 = this.reportSpamViewAnimator;
                if (animatorSet2 != null) {
                    animatorSet2.cancel();
                    this.reportSpamViewAnimator = null;
                }
                if (z) {
                    this.reportSpamViewAnimator = new AnimatorSet();
                    ValueAnimator ofFloat2 = ValueAnimator.ofFloat(new float[]{this.topChatPanelViewOffset, (float) (-AndroidUtilities.dp(50.0f))});
                    ofFloat2.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
                        public final void onAnimationUpdate(ValueAnimator valueAnimator) {
                            ChatActivity.this.lambda$updateTopPanel$100$ChatActivity(valueAnimator);
                        }
                    });
                    this.reportSpamViewAnimator.playTogether(new Animator[]{ofFloat2});
                    this.reportSpamViewAnimator.setDuration(200);
                    this.reportSpamViewAnimator.addListener(new AnimatorListenerAdapter() {
                        public void onAnimationEnd(Animator animator) {
                            if (ChatActivity.this.reportSpamViewAnimator != null && ChatActivity.this.reportSpamViewAnimator.equals(animator)) {
                                ChatActivity.this.topChatPanelView.setVisibility(8);
                                AnimatorSet unused = ChatActivity.this.reportSpamViewAnimator = null;
                            }
                        }

                        public void onAnimationCancel(Animator animator) {
                            if (ChatActivity.this.reportSpamViewAnimator != null && ChatActivity.this.reportSpamViewAnimator.equals(animator)) {
                                AnimatorSet unused = ChatActivity.this.reportSpamViewAnimator = null;
                            }
                        }
                    });
                    this.reportSpamViewAnimator.start();
                } else {
                    this.topChatPanelViewOffset = (float) (-AndroidUtilities.dp(50.0f));
                    invalidateChatListViewTopPadding();
                    invalidateMessagesVisiblePart();
                }
            }
            checkListViewPaddings();
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$updateTopPanel$99 */
    public /* synthetic */ void lambda$updateTopPanel$99$ChatActivity(ValueAnimator valueAnimator) {
        this.topChatPanelViewOffset = ((Float) valueAnimator.getAnimatedValue()).floatValue();
        invalidateChatListViewTopPadding();
        invalidateMessagesVisiblePart();
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$updateTopPanel$100 */
    public /* synthetic */ void lambda$updateTopPanel$100$ChatActivity(ValueAnimator valueAnimator) {
        this.topChatPanelViewOffset = ((Float) valueAnimator.getAnimatedValue()).floatValue();
        invalidateChatListViewTopPadding();
        invalidateMessagesVisiblePart();
    }

    private void checkListViewPaddings() {
        MessageObject messageObject;
        if (this.wasManualScroll || (messageObject = this.unreadMessageObject) == null) {
            if (this.checkPaddingsRunnable == null) {
                $$Lambda$ChatActivity$cCrl6rWPTBv7kdqXikDreqI3e0 r0 = new Runnable() {
                    public final void run() {
                        ChatActivity.this.lambda$checkListViewPaddings$101$ChatActivity();
                    }
                };
                this.checkPaddingsRunnable = r0;
                AndroidUtilities.runOnUIThread(r0);
            }
        } else if (this.messages.indexOf(messageObject) >= 0) {
            this.fixPaddingsInLayout = true;
            View view = this.fragmentView;
            if (view != null) {
                view.requestLayout();
            }
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$checkListViewPaddings$101 */
    public /* synthetic */ void lambda$checkListViewPaddings$101$ChatActivity() {
        this.checkPaddingsRunnable = null;
        invalidateChatListViewTopPadding();
        invalidateMessagesVisiblePart();
    }

    /* access modifiers changed from: private */
    public void checkRaiseSensors() {
        FrameLayout frameLayout;
        FrameLayout frameLayout2;
        FrameLayout frameLayout3;
        ChatActivityEnterView chatActivityEnterView2 = this.chatActivityEnterView;
        if (chatActivityEnterView2 == null || !chatActivityEnterView2.isStickersExpanded()) {
            TLRPC$Chat tLRPC$Chat = this.currentChat;
            if (tLRPC$Chat != null && !ChatObject.canSendMedia(tLRPC$Chat)) {
                MediaController.getInstance().setAllowStartRecord(false);
            } else if (ApplicationLoader.mainInterfacePaused || (((frameLayout = this.bottomOverlayChat) != null && frameLayout.getVisibility() == 0) || (((frameLayout2 = this.bottomOverlay) != null && frameLayout2.getVisibility() == 0) || ((frameLayout3 = this.searchContainer) != null && frameLayout3.getVisibility() == 0)))) {
                MediaController.getInstance().setAllowStartRecord(false);
            } else {
                MediaController.getInstance().setAllowStartRecord(true);
            }
        } else {
            MediaController.getInstance().setAllowStartRecord(false);
        }
    }

    public void dismissCurrentDialog() {
        ChatAttachAlert chatAttachAlert2 = this.chatAttachAlert;
        if (chatAttachAlert2 == null || this.visibleDialog != chatAttachAlert2) {
            super.dismissCurrentDialog();
            return;
        }
        chatAttachAlert2.getPhotoLayout().closeCamera(false);
        this.chatAttachAlert.dismissInternal();
        this.chatAttachAlert.getPhotoLayout().hideCamera(true);
    }

    /* access modifiers changed from: protected */
    public void setInPreviewMode(boolean z) {
        MessageObject messageObject;
        TLRPC$Message tLRPC$Message;
        float f;
        super.setInPreviewMode(z);
        ChatAvatarContainer chatAvatarContainer = this.avatarContainer;
        if (chatAvatarContainer != null) {
            chatAvatarContainer.setOccupyStatusBar(!z);
            ChatAvatarContainer chatAvatarContainer2 = this.avatarContainer;
            if (!z) {
                f = 56.0f;
            } else {
                f = (float) (this.chatMode == 2 ? 10 : 0);
            }
            chatAvatarContainer2.setLayoutParams(LayoutHelper.createFrame(-2, -1.0f, 51, f, 0.0f, 40.0f, 0.0f));
        }
        ChatActivityEnterView chatActivityEnterView2 = this.chatActivityEnterView;
        if (chatActivityEnterView2 != null) {
            chatActivityEnterView2.setVisibility(!z ? 0 : 4);
        }
        ActionBar actionBar = this.actionBar;
        if (actionBar != null) {
            actionBar.setBackButtonDrawable(!z ? new BackDrawable(false) : null);
            ActionBarMenuItem actionBarMenuItem = this.headerItem;
            float f2 = 1.0f;
            if (actionBarMenuItem != null) {
                actionBarMenuItem.setAlpha(!z ? 1.0f : 0.0f);
            }
            ActionBarMenuItem actionBarMenuItem2 = this.attachItem;
            if (actionBarMenuItem2 != null) {
                if (z) {
                    f2 = 0.0f;
                }
                actionBarMenuItem2.setAlpha(f2);
            }
        }
        RecyclerListView recyclerListView = this.chatListView;
        if (recyclerListView != null) {
            int childCount = recyclerListView.getChildCount();
            for (int i = 0; i < childCount; i++) {
                View childAt = this.chatListView.getChildAt(i);
                boolean z2 = childAt instanceof ChatMessageCell;
                if (z2) {
                    messageObject = ((ChatMessageCell) childAt).getMessageObject();
                } else {
                    messageObject = childAt instanceof ChatActionCell ? ((ChatActionCell) childAt).getMessageObject() : null;
                }
                if (messageObject != null && (tLRPC$Message = messageObject.messageOwner) != null && tLRPC$Message.media_unread && tLRPC$Message.mentioned) {
                    if (!messageObject.isVoice() && !messageObject.isRoundVideo()) {
                        int i2 = this.newMentionsCount - 1;
                        this.newMentionsCount = i2;
                        if (i2 <= 0) {
                            this.newMentionsCount = 0;
                            this.hasAllMentionsLocal = true;
                            showMentionDownButton(false, true);
                        } else {
                            this.mentiondownButtonCounter.setText(String.format("%d", new Object[]{Integer.valueOf(i2)}));
                        }
                        getMessagesController().markMentionMessageAsRead(messageObject.getId(), ChatObject.isChannel(this.currentChat) ? this.currentChat.id : 0, this.dialog_id);
                        messageObject.setContentIsRead();
                    }
                    if (z2) {
                        ChatMessageCell chatMessageCell = (ChatMessageCell) childAt;
                        chatMessageCell.setHighlighted(false);
                        chatMessageCell.setHighlightedAnimated();
                    }
                }
            }
            this.chatListView.setItemAnimator((RecyclerView.ItemAnimator) null);
        }
        updateBottomOverlay();
        updateSecretStatus();
    }

    public void onResume() {
        ChatActivityEnterView chatActivityEnterView2;
        MessageObject messageObject;
        boolean z;
        BackupImageView backupImageView;
        View view;
        super.onResume();
        ActionBarLayout actionBarLayout = this.parentLayout;
        if (actionBarLayout != null && !actionBarLayout.isInPreviewMode() && (view = this.blurredView) != null && view.getVisibility() == 0) {
            this.blurredView.setVisibility(8);
            this.blurredView.setBackground((Drawable) null);
        }
        this.activityResumeTime = System.currentTimeMillis();
        if (this.openImport && getSendMessagesHelper().getImportingHistory(this.dialog_id) != null) {
            ImportingAlert importingAlert = new ImportingAlert(getParentActivity(), this);
            importingAlert.setOnHideListener(new DialogInterface.OnDismissListener() {
                public final void onDismiss(DialogInterface dialogInterface) {
                    ChatActivity.this.lambda$onResume$102$ChatActivity(dialogInterface);
                }
            });
            showDialog(importingAlert);
            this.openImport = false;
        }
        checkAdjustResize();
        MediaController.getInstance().startRaiseToEarSensors(this);
        checkRaiseSensors();
        ChatAttachAlert chatAttachAlert2 = this.chatAttachAlert;
        if (chatAttachAlert2 != null) {
            chatAttachAlert2.onResume();
        }
        SizeNotifierFrameLayout sizeNotifierFrameLayout = this.contentView;
        if (sizeNotifierFrameLayout != null) {
            sizeNotifierFrameLayout.onResume();
        }
        checkChecksHint();
        AnonymousClass92 r0 = new Bulletin.Delegate() {
            public /* synthetic */ void onHide(Bulletin bulletin) {
                Bulletin.Delegate.CC.$default$onHide(this, bulletin);
            }

            public /* synthetic */ void onOffsetChange(float f) {
                Bulletin.Delegate.CC.$default$onOffsetChange(this, f);
            }

            public /* synthetic */ void onShow(Bulletin bulletin) {
                Bulletin.Delegate.CC.$default$onShow(this, bulletin);
            }

            public int getBottomOffset() {
                int i;
                ChatActivityEnterView chatActivityEnterView = ChatActivity.this.chatActivityEnterView;
                if (chatActivityEnterView == null || chatActivityEnterView.getVisibility() != 0) {
                    i = AndroidUtilities.dp(51.0f);
                } else if ((ChatActivity.this.contentView.getKeyboardHeight() >= AndroidUtilities.dp(20.0f) || !ChatActivity.this.chatActivityEnterView.isPopupShowing()) && !ChatActivity.this.chatActivityEnterView.pannelAniamationInProgress()) {
                    i = ChatActivity.this.chatActivityEnterView.getHeight();
                } else {
                    i = ChatActivity.this.chatActivityEnterView.getHeight() + ChatActivity.this.chatActivityEnterView.getEmojiPadding();
                }
                if (ChatActivity.this.chatActivityEnterView.pannelAniamationInProgress()) {
                    i = (int) (((float) i) + (ChatActivity.this.bottomPanelTranslationY - ((float) ChatActivity.this.chatActivityEnterView.getEmojiPadding())));
                }
                return ((int) (((float) i) + ChatActivity.this.contentPanTranslation)) - AndroidUtilities.dp(1.5f);
            }
        };
        this.bulletinDelegate = r0;
        Bulletin.addDelegate((BaseFragment) this, (Bulletin.Delegate) r0);
        checkActionBarMenu(false);
        TLRPC$PhotoSize tLRPC$PhotoSize = this.replyImageLocation;
        if (!(tLRPC$PhotoSize == null || (backupImageView = this.replyImageView) == null)) {
            backupImageView.setImage(ImageLocation.getForObject(tLRPC$PhotoSize, this.replyImageLocationObject), "50_50", ImageLocation.getForObject(this.replyImageThumbLocation, this.replyImageLocationObject), "50_50_b", (String) null, this.replyImageSize, this.replyImageCacheType, this.replyingMessageObject);
        }
        if (!(this.pinnedImageLocation == null || this.pinnedMessageImageView == null)) {
            this.pinnedMessageImageView[0].setImage(ImageLocation.getForObject(this.pinnedImageLocation, this.pinnedImageLocationObject), "50_50", ImageLocation.getForObject(this.pinnedImageThumbLocation, this.pinnedImageLocationObject), "50_50_b", (String) null, this.pinnedImageSize, this.pinnedImageCacheType, this.pinnedMessageObjects.get(Integer.valueOf(this.currentPinnedMessageId)));
        }
        if (this.chatMode == 0) {
            getNotificationsController().setOpenedDialogId(this.dialog_id);
        }
        getMessagesController().setLastVisibleDialogId(this.dialog_id, this.chatMode == 1, true);
        if (this.scrollToTopOnResume) {
            if (!this.scrollToTopUnReadOnResume || (messageObject = this.scrollToMessage) == null) {
                moveScrollToLastMessage();
            } else if (this.chatListView != null) {
                int i = this.scrollToMessagePosition;
                if (i == -9000) {
                    i = getScrollOffsetForMessage(messageObject);
                } else if (i == -10000) {
                    i = -AndroidUtilities.dp(11.0f);
                } else {
                    z = true;
                    this.chatLayoutManager.scrollToPositionWithOffset(this.chatAdapter.messagesStartRow + this.messages.indexOf(this.scrollToMessage), i, z);
                }
                z = false;
                this.chatLayoutManager.scrollToPositionWithOffset(this.chatAdapter.messagesStartRow + this.messages.indexOf(this.scrollToMessage), i, z);
            }
            this.scrollToTopUnReadOnResume = false;
            this.scrollToTopOnResume = false;
            this.scrollToMessage = null;
        }
        this.paused = false;
        this.pausedOnLastMessage = false;
        checkScrollForLoad(false);
        if (this.wasPaused) {
            this.wasPaused = false;
            ChatActivityAdapter chatActivityAdapter = this.chatAdapter;
            if (chatActivityAdapter != null) {
                chatActivityAdapter.notifyDataSetChanged(false);
            }
        }
        fixLayout();
        applyDraftMaybe(false);
        FrameLayout frameLayout = this.bottomOverlayChat;
        if (!(frameLayout == null || frameLayout.getVisibility() == 0 || this.actionBar.isSearchFieldVisible())) {
            this.chatActivityEnterView.setFieldFocused(true);
        }
        ChatActivityEnterView chatActivityEnterView3 = this.chatActivityEnterView;
        if (chatActivityEnterView3 != null) {
            chatActivityEnterView3.onResume();
        }
        if (this.currentUser != null) {
            this.chatEnterTime = System.currentTimeMillis();
            this.chatLeaveTime = 0;
        }
        if (this.startVideoEdit != null) {
            AndroidUtilities.runOnUIThread(new Runnable() {
                public final void run() {
                    ChatActivity.this.lambda$onResume$103$ChatActivity();
                }
            });
        }
        if (this.chatListView != null && ((chatActivityEnterView2 = this.chatActivityEnterView) == null || !chatActivityEnterView2.isEditingMessage())) {
            this.chatListView.setOnItemLongClickListener(this.onItemLongClickListener);
            this.chatListView.setOnItemClickListener(this.onItemClickListener);
            this.chatListView.setLongClickable(true);
        }
        checkBotCommands();
        updateTitle();
        showGigagroupConvertAlert();
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$onResume$102 */
    public /* synthetic */ void lambda$onResume$102$ChatActivity(DialogInterface dialogInterface) {
        FragmentContextView fragmentContextView2 = this.fragmentContextView;
        if (fragmentContextView2 != null) {
            fragmentContextView2.checkImport(false);
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$onResume$103 */
    public /* synthetic */ void lambda$onResume$103$ChatActivity() {
        openVideoEditor(this.startVideoEdit, (String) null);
        this.startVideoEdit = null;
    }

    public void checkAdjustResize() {
        if (this.reportType >= 0) {
            AndroidUtilities.requestAdjustNothing(getParentActivity(), this.classGuid);
        } else {
            AndroidUtilities.requestAdjustResize(getParentActivity(), this.classGuid);
        }
    }

    public void finishFragment() {
        super.finishFragment();
        ActionBarPopupWindow actionBarPopupWindow = this.scrimPopupWindow;
        if (actionBarPopupWindow != null) {
            actionBarPopupWindow.setPauseNotifications(false);
            this.scrimPopupWindow.dismiss();
        }
    }

    /* JADX WARNING: Removed duplicated region for block: B:108:0x01f1  */
    /* JADX WARNING: Removed duplicated region for block: B:109:0x021a  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public void onPause() {
        /*
            r18 = this;
            r0 = r18
            super.onPause()
            org.telegram.ui.ActionBar.ActionBarPopupWindow r1 = r0.scrimPopupWindow
            r2 = 0
            if (r1 == 0) goto L_0x0012
            r1.setPauseNotifications(r2)
            org.telegram.ui.ActionBar.ActionBarPopupWindow r1 = r0.scrimPopupWindow
            r1.dismiss()
        L_0x0012:
            int r1 = r0.threadMessageId
            long r3 = (long) r1
            r5 = 0
            int r1 = (r3 > r5 ? 1 : (r3 == r5 ? 0 : -1))
            if (r1 == 0) goto L_0x0026
            org.telegram.tgnet.TLRPC$Chat r1 = r0.currentChat
            if (r1 == 0) goto L_0x0026
            int r1 = r1.id
            long r7 = (long) r1
            r1 = 32
            long r7 = r7 << r1
            long r3 = r3 | r7
        L_0x0026:
            org.telegram.messenger.MessagesController r1 = r18.getMessagesController()
            long r7 = r0.dialog_id
            r1.markDialogAsReadNow(r7, r3)
            org.telegram.messenger.MediaController r1 = org.telegram.messenger.MediaController.getInstance()
            r3 = 1
            r1.stopRaiseToEarSensors(r0, r3)
            r0.paused = r3
            r0.wasPaused = r3
            int r1 = r0.chatMode
            if (r1 != 0) goto L_0x0046
            org.telegram.messenger.NotificationsController r1 = r18.getNotificationsController()
            r1.setOpenedDialogId(r5)
        L_0x0046:
            org.telegram.ui.Components.Bulletin.removeDelegate((org.telegram.ui.ActionBar.BaseFragment) r18)
            org.telegram.messenger.MessagesController r1 = r18.getMessagesController()
            long r4 = r0.dialog_id
            int r6 = r0.chatMode
            if (r6 != r3) goto L_0x0055
            r6 = 1
            goto L_0x0056
        L_0x0055:
            r6 = 0
        L_0x0056:
            r1.setLastVisibleDialogId(r4, r6, r2)
            boolean r1 = r0.ignoreAttachOnPause
            r4 = 0
            if (r1 != 0) goto L_0x0091
            org.telegram.ui.Components.ChatActivityEnterView r1 = r0.chatActivityEnterView
            if (r1 == 0) goto L_0x0091
            android.widget.FrameLayout r1 = r0.bottomOverlayChat
            int r1 = r1.getVisibility()
            if (r1 == 0) goto L_0x0091
            org.telegram.ui.Components.ChatActivityEnterView r1 = r0.chatActivityEnterView
            r1.onPause()
            org.telegram.messenger.MessageObject r1 = r0.replyingMessageObject
            org.telegram.ui.Components.ChatActivityEnterView r5 = r0.chatActivityEnterView
            boolean r5 = r5.isEditingMessage()
            if (r5 != 0) goto L_0x0084
            org.telegram.ui.Components.ChatActivityEnterView r5 = r0.chatActivityEnterView
            java.lang.CharSequence r5 = r5.getFieldText()
            java.lang.CharSequence r5 = org.telegram.messenger.AndroidUtilities.getTrimmedString(r5)
            goto L_0x0085
        L_0x0084:
            r5 = r4
        L_0x0085:
            org.telegram.ui.Components.ChatActivityEnterView r6 = r0.chatActivityEnterView
            boolean r6 = r6.isMessageWebPageSearchEnabled()
            org.telegram.ui.Components.ChatActivityEnterView r7 = r0.chatActivityEnterView
            r7.setFieldFocused(r2)
            goto L_0x0094
        L_0x0091:
            r1 = r4
            r5 = r1
            r6 = 1
        L_0x0094:
            org.telegram.ui.Components.ChatAttachAlert r7 = r0.chatAttachAlert
            if (r7 == 0) goto L_0x00a2
            boolean r8 = r0.ignoreAttachOnPause
            if (r8 != 0) goto L_0x00a0
            r7.onPause()
            goto L_0x00a2
        L_0x00a0:
            r0.ignoreAttachOnPause = r2
        L_0x00a2:
            org.telegram.ui.Components.SizeNotifierFrameLayout r7 = r0.contentView
            if (r7 == 0) goto L_0x00a9
            r7.onPause()
        L_0x00a9:
            int r7 = r0.chatMode
            if (r7 != 0) goto L_0x0257
            java.lang.CharSequence[] r7 = new java.lang.CharSequence[r3]
            r7[r2] = r5
            org.telegram.messenger.MediaDataController r5 = r18.getMediaDataController()
            org.telegram.tgnet.TLRPC$EncryptedChat r8 = r0.currentEncryptedChat
            if (r8 == 0) goto L_0x00c6
            int r8 = r8.layer
            int r8 = org.telegram.messenger.AndroidUtilities.getPeerLayerVersion(r8)
            r9 = 101(0x65, float:1.42E-43)
            if (r8 < r9) goto L_0x00c4
            goto L_0x00c6
        L_0x00c4:
            r8 = 0
            goto L_0x00c7
        L_0x00c6:
            r8 = 1
        L_0x00c7:
            java.util.ArrayList r14 = r5.getEntities(r7, r8)
            org.telegram.messenger.MediaDataController r9 = r18.getMediaDataController()
            long r10 = r0.dialog_id
            int r12 = r0.threadMessageId
            r13 = r7[r2]
            if (r1 == 0) goto L_0x00d9
            org.telegram.tgnet.TLRPC$Message r4 = r1.messageOwner
        L_0x00d9:
            r15 = r4
            r16 = r6 ^ 1
            r9.saveDraft(r10, r12, r13, r14, r15, r16)
            org.telegram.messenger.MessagesController r1 = r18.getMessagesController()
            long r4 = r0.dialog_id
            int r6 = r0.threadMessageId
            r1.lambda$null$132(r2, r4, r6)
            boolean r1 = r0.pausedOnLastMessage
            if (r1 != 0) goto L_0x0247
            boolean r1 = r0.firstLoading
            if (r1 != 0) goto L_0x0247
            int r1 = r0.currentAccount
            android.content.SharedPreferences r1 = org.telegram.messenger.MessagesController.getNotificationsSettings(r1)
            android.content.SharedPreferences$Editor r1 = r1.edit()
            androidx.recyclerview.widget.GridLayoutManagerFixed r4 = r0.chatLayoutManager
            if (r4 == 0) goto L_0x01ea
            int r4 = r4.findFirstVisibleItemPosition()
            if (r4 == 0) goto L_0x01ea
            org.telegram.ui.Components.RecyclerListView r5 = r0.chatListView
            androidx.recyclerview.widget.RecyclerView$ViewHolder r5 = r5.findViewHolderForAdapterPosition(r4)
            org.telegram.ui.Components.RecyclerListView$Holder r5 = (org.telegram.ui.Components.RecyclerListView.Holder) r5
            if (r5 == 0) goto L_0x01ea
            android.view.View r6 = r5.itemView
            boolean r7 = r6 instanceof org.telegram.ui.Cells.ChatMessageCell
            if (r7 == 0) goto L_0x0121
            org.telegram.ui.Cells.ChatMessageCell r6 = (org.telegram.ui.Cells.ChatMessageCell) r6
            org.telegram.messenger.MessageObject r6 = r6.getMessageObject()
            int r6 = r6.getId()
            goto L_0x0131
        L_0x0121:
            boolean r7 = r6 instanceof org.telegram.ui.Cells.ChatActionCell
            if (r7 == 0) goto L_0x0130
            org.telegram.ui.Cells.ChatActionCell r6 = (org.telegram.ui.Cells.ChatActionCell) r6
            org.telegram.messenger.MessageObject r6 = r6.getMessageObject()
            int r6 = r6.getId()
            goto L_0x0131
        L_0x0130:
            r6 = 0
        L_0x0131:
            if (r6 != 0) goto L_0x013d
            org.telegram.ui.Components.RecyclerListView r5 = r0.chatListView
            int r6 = r4 + 1
            androidx.recyclerview.widget.RecyclerView$ViewHolder r5 = r5.findViewHolderForAdapterPosition(r6)
            org.telegram.ui.Components.RecyclerListView$Holder r5 = (org.telegram.ui.Components.RecyclerListView.Holder) r5
        L_0x013d:
            int r4 = r4 - r3
            r6 = 0
            r7 = 0
        L_0x0140:
            org.telegram.ui.ChatActivity$ChatActivityAdapter r8 = r0.chatAdapter
            int r8 = r8.messagesStartRow
            if (r4 < r8) goto L_0x0186
            org.telegram.ui.ChatActivity$ChatActivityAdapter r8 = r0.chatAdapter
            int r8 = r8.messagesStartRow
            int r8 = r4 - r8
            if (r8 < 0) goto L_0x0183
            java.util.ArrayList<org.telegram.messenger.MessageObject> r9 = r0.messages
            int r9 = r9.size()
            if (r8 < r9) goto L_0x015b
            goto L_0x0183
        L_0x015b:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r9 = r0.messages
            java.lang.Object r8 = r9.get(r8)
            org.telegram.messenger.MessageObject r8 = (org.telegram.messenger.MessageObject) r8
            int r9 = r8.getId()
            if (r9 != 0) goto L_0x016a
            goto L_0x0183
        L_0x016a:
            boolean r9 = r8.isOut()
            if (r9 == 0) goto L_0x0176
            org.telegram.tgnet.TLRPC$Message r9 = r8.messageOwner
            boolean r9 = r9.from_scheduled
            if (r9 == 0) goto L_0x017d
        L_0x0176:
            boolean r8 = r8.isUnread()
            if (r8 == 0) goto L_0x017d
            r7 = 1
        L_0x017d:
            r8 = 2
            if (r6 <= r8) goto L_0x0181
            goto L_0x0186
        L_0x0181:
            int r6 = r6 + 1
        L_0x0183:
            int r4 = r4 + -1
            goto L_0x0140
        L_0x0186:
            if (r5 == 0) goto L_0x01ea
            if (r7 != 0) goto L_0x01ea
            android.view.View r4 = r5.itemView
            boolean r6 = r4 instanceof org.telegram.ui.Cells.ChatMessageCell
            if (r6 == 0) goto L_0x019b
            org.telegram.ui.Cells.ChatMessageCell r4 = (org.telegram.ui.Cells.ChatMessageCell) r4
            org.telegram.messenger.MessageObject r4 = r4.getMessageObject()
            int r4 = r4.getId()
            goto L_0x01ab
        L_0x019b:
            boolean r6 = r4 instanceof org.telegram.ui.Cells.ChatActionCell
            if (r6 == 0) goto L_0x01aa
            org.telegram.ui.Cells.ChatActionCell r4 = (org.telegram.ui.Cells.ChatActionCell) r4
            org.telegram.messenger.MessageObject r4 = r4.getMessageObject()
            int r4 = r4.getId()
            goto L_0x01ab
        L_0x01aa:
            r4 = 0
        L_0x01ab:
            if (r4 <= 0) goto L_0x01b1
            org.telegram.tgnet.TLRPC$EncryptedChat r6 = r0.currentEncryptedChat
            if (r6 == 0) goto L_0x01b7
        L_0x01b1:
            if (r4 >= 0) goto L_0x01ea
            org.telegram.tgnet.TLRPC$EncryptedChat r6 = r0.currentEncryptedChat
            if (r6 == 0) goto L_0x01ea
        L_0x01b7:
            android.view.View r2 = r5.itemView
            int r2 = r2.getBottom()
            org.telegram.ui.Components.RecyclerListView r5 = r0.chatListView
            int r5 = r5.getMeasuredHeight()
            int r2 = r2 - r5
            boolean r5 = org.telegram.messenger.BuildVars.LOGS_ENABLED
            if (r5 == 0) goto L_0x01e4
            java.lang.StringBuilder r5 = new java.lang.StringBuilder
            r5.<init>()
            java.lang.String r6 = "save offset = "
            r5.append(r6)
            r5.append(r2)
            java.lang.String r6 = " for mid "
            r5.append(r6)
            r5.append(r4)
            java.lang.String r5 = r5.toString()
            org.telegram.messenger.FileLog.d(r5)
        L_0x01e4:
            r17 = r4
            r4 = r2
            r2 = r17
            goto L_0x01eb
        L_0x01ea:
            r4 = 0
        L_0x01eb:
            java.lang.String r5 = "diditemo"
            java.lang.String r6 = "diditem"
            if (r2 == 0) goto L_0x021a
            java.lang.StringBuilder r3 = new java.lang.StringBuilder
            r3.<init>()
            r3.append(r6)
            long r6 = r0.dialog_id
            r3.append(r6)
            java.lang.String r3 = r3.toString()
            r1.putInt(r3, r2)
            java.lang.StringBuilder r2 = new java.lang.StringBuilder
            r2.<init>()
            r2.append(r5)
            long r5 = r0.dialog_id
            r2.append(r5)
            java.lang.String r2 = r2.toString()
            r1.putInt(r2, r4)
            goto L_0x0244
        L_0x021a:
            r0.pausedOnLastMessage = r3
            java.lang.StringBuilder r2 = new java.lang.StringBuilder
            r2.<init>()
            r2.append(r6)
            long r3 = r0.dialog_id
            r2.append(r3)
            java.lang.String r2 = r2.toString()
            r1.remove(r2)
            java.lang.StringBuilder r2 = new java.lang.StringBuilder
            r2.<init>()
            r2.append(r5)
            long r3 = r0.dialog_id
            r2.append(r3)
            java.lang.String r2 = r2.toString()
            r1.remove(r2)
        L_0x0244:
            r1.commit()
        L_0x0247:
            org.telegram.tgnet.TLRPC$User r1 = r0.currentUser
            if (r1 == 0) goto L_0x0254
            long r1 = java.lang.System.currentTimeMillis()
            r0.chatLeaveTime = r1
            r18.updateInformationForScreenshotDetector()
        L_0x0254:
            r18.hideUndoViews()
        L_0x0257:
            androidx.recyclerview.widget.ChatListItemAnimator r1 = r0.chatListItemAnimator
            if (r1 == 0) goto L_0x025e
            r1.endAnimations()
        L_0x025e:
            org.telegram.ui.Components.RecyclerAnimationScrollHelper r1 = r0.chatScrollHelper
            if (r1 == 0) goto L_0x0265
            r1.cancel()
        L_0x0265:
            boolean r1 = org.telegram.ui.AvatarPreviewer.hasVisibleInstance()
            if (r1 == 0) goto L_0x0272
            org.telegram.ui.AvatarPreviewer r1 = org.telegram.ui.AvatarPreviewer.getInstance()
            r1.close()
        L_0x0272:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.onPause():void");
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v7, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v14, resolved type: android.text.SpannableStringBuilder} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v15, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v16, resolved type: java.lang.String} */
    /* JADX WARNING: Multi-variable type inference failed */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private void applyDraftMaybe(boolean r12) {
        /*
            r11 = this;
            org.telegram.ui.Components.ChatActivityEnterView r0 = r11.chatActivityEnterView
            if (r0 == 0) goto L_0x01c2
            int r0 = r11.chatMode
            if (r0 == 0) goto L_0x000a
            goto L_0x01c2
        L_0x000a:
            org.telegram.messenger.MediaDataController r0 = r11.getMediaDataController()
            long r1 = r11.dialog_id
            int r3 = r11.threadMessageId
            org.telegram.tgnet.TLRPC$DraftMessage r0 = r0.getDraft(r1, r3)
            r1 = 0
            if (r0 == 0) goto L_0x002b
            int r2 = r0.reply_to_msg_id
            if (r2 == 0) goto L_0x002b
            org.telegram.messenger.MediaDataController r2 = r11.getMediaDataController()
            long r3 = r11.dialog_id
            int r5 = r11.threadMessageId
            org.telegram.tgnet.TLRPC$Message r2 = r2.getDraftMessage(r3, r5)
            r5 = r2
            goto L_0x002c
        L_0x002b:
            r5 = r1
        L_0x002c:
            org.telegram.ui.Components.ChatActivityEnterView r2 = r11.chatActivityEnterView
            java.lang.CharSequence r2 = r2.getFieldText()
            java.lang.String r3 = ""
            r4 = 1
            if (r2 != 0) goto L_0x0199
            if (r0 == 0) goto L_0x01a5
            org.telegram.ui.Components.ChatActivityEnterView r12 = r11.chatActivityEnterView
            boolean r2 = r0.no_webpage
            r2 = r2 ^ r4
            r12.setWebPage(r1, r2)
            java.util.ArrayList<org.telegram.tgnet.TLRPC$MessageEntity> r12 = r0.entities
            boolean r12 = r12.isEmpty()
            r1 = 0
            if (r12 != 0) goto L_0x016d
            java.lang.String r12 = r0.message
            android.text.SpannableStringBuilder r12 = android.text.SpannableStringBuilder.valueOf(r12)
            java.util.ArrayList<org.telegram.tgnet.TLRPC$MessageEntity> r2 = r0.entities
            org.telegram.messenger.MediaDataController.sortEntities(r2)
            r2 = 0
        L_0x0056:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$MessageEntity> r6 = r0.entities
            int r6 = r6.size()
            if (r2 >= r6) goto L_0x016f
            java.util.ArrayList<org.telegram.tgnet.TLRPC$MessageEntity> r6 = r0.entities
            java.lang.Object r6 = r6.get(r2)
            org.telegram.tgnet.TLRPC$MessageEntity r6 = (org.telegram.tgnet.TLRPC$MessageEntity) r6
            boolean r7 = r6 instanceof org.telegram.tgnet.TLRPC$TL_inputMessageEntityMentionName
            r8 = 33
            if (r7 != 0) goto L_0x0120
            boolean r9 = r6 instanceof org.telegram.tgnet.TLRPC$TL_messageEntityMentionName
            if (r9 == 0) goto L_0x0072
            goto L_0x0120
        L_0x0072:
            boolean r7 = r6 instanceof org.telegram.tgnet.TLRPC$TL_messageEntityCode
            if (r7 != 0) goto L_0x0107
            boolean r7 = r6 instanceof org.telegram.tgnet.TLRPC$TL_messageEntityPre
            if (r7 == 0) goto L_0x007c
            goto L_0x0107
        L_0x007c:
            boolean r7 = r6 instanceof org.telegram.tgnet.TLRPC$TL_messageEntityBold
            if (r7 == 0) goto L_0x0099
            org.telegram.ui.Components.TextStyleSpan$TextStyleRun r7 = new org.telegram.ui.Components.TextStyleSpan$TextStyleRun
            r7.<init>()
            int r8 = r7.flags
            r8 = r8 | r4
            r7.flags = r8
            org.telegram.ui.Components.TextStyleSpan r8 = new org.telegram.ui.Components.TextStyleSpan
            r8.<init>(r7)
            int r7 = r6.offset
            int r6 = r6.length
            int r6 = r6 + r7
            org.telegram.messenger.MediaDataController.addStyleToText(r8, r7, r6, r12, r4)
            goto L_0x0169
        L_0x0099:
            boolean r7 = r6 instanceof org.telegram.tgnet.TLRPC$TL_messageEntityItalic
            if (r7 == 0) goto L_0x00b7
            org.telegram.ui.Components.TextStyleSpan$TextStyleRun r7 = new org.telegram.ui.Components.TextStyleSpan$TextStyleRun
            r7.<init>()
            int r8 = r7.flags
            r8 = r8 | 2
            r7.flags = r8
            org.telegram.ui.Components.TextStyleSpan r8 = new org.telegram.ui.Components.TextStyleSpan
            r8.<init>(r7)
            int r7 = r6.offset
            int r6 = r6.length
            int r6 = r6 + r7
            org.telegram.messenger.MediaDataController.addStyleToText(r8, r7, r6, r12, r4)
            goto L_0x0169
        L_0x00b7:
            boolean r7 = r6 instanceof org.telegram.tgnet.TLRPC$TL_messageEntityStrike
            if (r7 == 0) goto L_0x00d5
            org.telegram.ui.Components.TextStyleSpan$TextStyleRun r7 = new org.telegram.ui.Components.TextStyleSpan$TextStyleRun
            r7.<init>()
            int r8 = r7.flags
            r8 = r8 | 8
            r7.flags = r8
            org.telegram.ui.Components.TextStyleSpan r8 = new org.telegram.ui.Components.TextStyleSpan
            r8.<init>(r7)
            int r7 = r6.offset
            int r6 = r6.length
            int r6 = r6 + r7
            org.telegram.messenger.MediaDataController.addStyleToText(r8, r7, r6, r12, r4)
            goto L_0x0169
        L_0x00d5:
            boolean r7 = r6 instanceof org.telegram.tgnet.TLRPC$TL_messageEntityUnderline
            if (r7 == 0) goto L_0x00f3
            org.telegram.ui.Components.TextStyleSpan$TextStyleRun r7 = new org.telegram.ui.Components.TextStyleSpan$TextStyleRun
            r7.<init>()
            int r8 = r7.flags
            r8 = r8 | 16
            r7.flags = r8
            org.telegram.ui.Components.TextStyleSpan r8 = new org.telegram.ui.Components.TextStyleSpan
            r8.<init>(r7)
            int r7 = r6.offset
            int r6 = r6.length
            int r6 = r6 + r7
            org.telegram.messenger.MediaDataController.addStyleToText(r8, r7, r6, r12, r4)
            goto L_0x0169
        L_0x00f3:
            boolean r7 = r6 instanceof org.telegram.tgnet.TLRPC$TL_messageEntityTextUrl
            if (r7 == 0) goto L_0x0169
            org.telegram.ui.Components.URLSpanReplacement r7 = new org.telegram.ui.Components.URLSpanReplacement
            java.lang.String r9 = r6.url
            r7.<init>(r9)
            int r9 = r6.offset
            int r6 = r6.length
            int r6 = r6 + r9
            r12.setSpan(r7, r9, r6, r8)
            goto L_0x0169
        L_0x0107:
            org.telegram.ui.Components.TextStyleSpan$TextStyleRun r7 = new org.telegram.ui.Components.TextStyleSpan$TextStyleRun
            r7.<init>()
            int r8 = r7.flags
            r8 = r8 | 4
            r7.flags = r8
            org.telegram.ui.Components.TextStyleSpan r8 = new org.telegram.ui.Components.TextStyleSpan
            r8.<init>(r7)
            int r7 = r6.offset
            int r6 = r6.length
            int r6 = r6 + r7
            org.telegram.messenger.MediaDataController.addStyleToText(r8, r7, r6, r12, r4)
            goto L_0x0169
        L_0x0120:
            if (r7 == 0) goto L_0x012a
            r7 = r6
            org.telegram.tgnet.TLRPC$TL_inputMessageEntityMentionName r7 = (org.telegram.tgnet.TLRPC$TL_inputMessageEntityMentionName) r7
            org.telegram.tgnet.TLRPC$InputUser r7 = r7.user_id
            int r7 = r7.user_id
            goto L_0x012f
        L_0x012a:
            r7 = r6
            org.telegram.tgnet.TLRPC$TL_messageEntityMentionName r7 = (org.telegram.tgnet.TLRPC$TL_messageEntityMentionName) r7
            int r7 = r7.user_id
        L_0x012f:
            int r9 = r6.offset
            int r10 = r6.length
            int r9 = r9 + r10
            int r10 = r12.length()
            if (r9 >= r10) goto L_0x014c
            int r9 = r6.offset
            int r10 = r6.length
            int r9 = r9 + r10
            char r9 = r12.charAt(r9)
            r10 = 32
            if (r9 != r10) goto L_0x014c
            int r9 = r6.length
            int r9 = r9 + r4
            r6.length = r9
        L_0x014c:
            org.telegram.ui.Components.URLSpanUserMention r9 = new org.telegram.ui.Components.URLSpanUserMention
            java.lang.StringBuilder r10 = new java.lang.StringBuilder
            r10.<init>()
            r10.append(r3)
            r10.append(r7)
            java.lang.String r7 = r10.toString()
            r10 = 3
            r9.<init>(r7, r10)
            int r7 = r6.offset
            int r6 = r6.length
            int r6 = r6 + r7
            r12.setSpan(r9, r7, r6, r8)
        L_0x0169:
            int r2 = r2 + 1
            goto L_0x0056
        L_0x016d:
            java.lang.String r12 = r0.message
        L_0x016f:
            org.telegram.ui.Components.ChatActivityEnterView r2 = r11.chatActivityEnterView
            r2.setFieldText(r12)
            android.os.Bundle r12 = r11.getArguments()
            java.lang.String r2 = "hasUrl"
            boolean r12 = r12.getBoolean(r2, r1)
            if (r12 == 0) goto L_0x01a5
            org.telegram.ui.Components.ChatActivityEnterView r12 = r11.chatActivityEnterView
            java.lang.String r0 = r0.message
            r1 = 10
            int r0 = r0.indexOf(r1)
            int r0 = r0 + r4
            r12.setSelection(r0)
            org.telegram.ui.-$$Lambda$ChatActivity$J7PSFYpXPjMls_tMf-quCZK6j9A r12 = new org.telegram.ui.-$$Lambda$ChatActivity$J7PSFYpXPjMls_tMf-quCZK6j9A
            r12.<init>()
            r0 = 700(0x2bc, double:3.46E-321)
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r12, r0)
            goto L_0x01a5
        L_0x0199:
            if (r12 == 0) goto L_0x01a5
            if (r0 != 0) goto L_0x01a5
            org.telegram.ui.Components.ChatActivityEnterView r12 = r11.chatActivityEnterView
            r12.setFieldText(r3)
            r11.hideFieldPanel(r4)
        L_0x01a5:
            org.telegram.messenger.MessageObject r12 = r11.replyingMessageObject
            if (r12 != 0) goto L_0x01c2
            if (r5 == 0) goto L_0x01c2
            org.telegram.messenger.MessageObject r12 = new org.telegram.messenger.MessageObject
            int r4 = r11.currentAccount
            org.telegram.messenger.MessagesController r0 = r11.getMessagesController()
            j$.util.concurrent.ConcurrentHashMap r6 = r0.getUsers()
            r7 = 0
            r8 = 0
            r3 = r12
            r3.<init>((int) r4, (org.telegram.tgnet.TLRPC$Message) r5, (java.util.AbstractMap<java.lang.Integer, org.telegram.tgnet.TLRPC$User>) r6, (boolean) r7, (boolean) r8)
            r11.replyingMessageObject = r12
            r11.showFieldPanelForReply(r12)
        L_0x01c2:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.applyDraftMaybe(boolean):void");
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$applyDraftMaybe$104 */
    public /* synthetic */ void lambda$applyDraftMaybe$104$ChatActivity() {
        ChatActivityEnterView chatActivityEnterView2 = this.chatActivityEnterView;
        if (chatActivityEnterView2 != null) {
            chatActivityEnterView2.setFieldFocused(true);
            this.chatActivityEnterView.openKeyboard();
        }
    }

    private void updateInformationForScreenshotDetector() {
        if (this.currentUser != null) {
            if (this.currentEncryptedChat != null) {
                ArrayList arrayList = new ArrayList();
                RecyclerListView recyclerListView = this.chatListView;
                if (recyclerListView != null) {
                    int childCount = recyclerListView.getChildCount();
                    for (int i = 0; i < childCount; i++) {
                        View childAt = this.chatListView.getChildAt(i);
                        MessageObject messageObject = null;
                        if (childAt instanceof ChatMessageCell) {
                            messageObject = ((ChatMessageCell) childAt).getMessageObject();
                        }
                        if (messageObject != null && messageObject.getId() < 0) {
                            long j = messageObject.messageOwner.random_id;
                            if (j != 0) {
                                arrayList.add(Long.valueOf(j));
                            }
                        }
                    }
                }
                MediaController.getInstance().setLastVisibleMessageIds(this.currentAccount, this.chatEnterTime, this.chatLeaveTime, this.currentUser, this.currentEncryptedChat, arrayList, 0);
                return;
            }
            SecretMediaViewer instance = SecretMediaViewer.getInstance();
            MessageObject currentMessageObject = instance.getCurrentMessageObject();
            if (currentMessageObject != null && !currentMessageObject.isOut()) {
                MediaController.getInstance().setLastVisibleMessageIds(this.currentAccount, instance.getOpenTime(), instance.getCloseTime(), this.currentUser, (TLRPC$EncryptedChat) null, (ArrayList<Long>) null, currentMessageObject.getId());
            }
        }
    }

    /* access modifiers changed from: private */
    public boolean fixLayoutInternal() {
        boolean z;
        MessageObject.GroupedMessages currentMessagesGroup;
        if (AndroidUtilities.isTablet() || ApplicationLoader.applicationContext.getResources().getConfiguration().orientation != 2) {
            this.selectedMessagesCountTextView.setTextSize(20);
        } else {
            this.selectedMessagesCountTextView.setTextSize(18);
        }
        int childCount = this.chatListView.getChildCount();
        HashMap hashMap = null;
        int i = 0;
        while (true) {
            z = true;
            if (i >= childCount) {
                break;
            }
            View childAt = this.chatListView.getChildAt(i);
            if ((childAt instanceof ChatMessageCell) && (currentMessagesGroup = ((ChatMessageCell) childAt).getCurrentMessagesGroup()) != null && currentMessagesGroup.hasSibling && !currentMessagesGroup.messages.isEmpty()) {
                if (hashMap == null) {
                    hashMap = new HashMap();
                }
                if (!hashMap.containsKey(Long.valueOf(currentMessagesGroup.groupId))) {
                    hashMap.put(Long.valueOf(currentMessagesGroup.groupId), currentMessagesGroup);
                    ArrayList<MessageObject> arrayList = currentMessagesGroup.messages;
                    int indexOf = this.messages.indexOf(arrayList.get(arrayList.size() - 1));
                    if (indexOf >= 0) {
                        ChatActivityAdapter chatActivityAdapter = this.chatAdapter;
                        chatActivityAdapter.notifyItemRangeChanged(indexOf + chatActivityAdapter.messagesStartRow, currentMessagesGroup.messages.size());
                        this.chatListView.setItemAnimator((RecyclerView.ItemAnimator) null);
                    }
                }
            }
            i++;
        }
        if (!AndroidUtilities.isTablet()) {
            return true;
        }
        if (!AndroidUtilities.isSmallTablet() || ApplicationLoader.applicationContext.getResources().getConfiguration().orientation != 1) {
            ActionBar actionBar = this.actionBar;
            ActionBarLayout actionBarLayout = this.parentLayout;
            if (!(actionBarLayout == null || actionBarLayout.fragmentsStack.isEmpty() || this.parentLayout.fragmentsStack.get(0) == this || this.parentLayout.fragmentsStack.size() == 1)) {
                z = false;
            }
            actionBar.setBackButtonDrawable(new BackDrawable(z));
        } else {
            this.actionBar.setBackButtonDrawable(new BackDrawable(false));
        }
        return false;
    }

    private void fixLayout() {
        ChatAvatarContainer chatAvatarContainer = this.avatarContainer;
        if (chatAvatarContainer != null) {
            chatAvatarContainer.getViewTreeObserver().addOnPreDrawListener(new ViewTreeObserver.OnPreDrawListener() {
                public boolean onPreDraw() {
                    if (ChatActivity.this.avatarContainer != null) {
                        ChatActivity.this.avatarContainer.getViewTreeObserver().removeOnPreDrawListener(this);
                    }
                    return ChatActivity.this.fixLayoutInternal();
                }
            });
        }
    }

    public boolean maybePlayVisibleVideo() {
        MessageObject messageObject;
        AnimatedFileDrawable animatedFileDrawable;
        ImageReceiver photoImage;
        AnimatedFileDrawable animation;
        if (this.chatListView == null) {
            return false;
        }
        MessageObject playingMessageObject = MediaController.getInstance().getPlayingMessageObject();
        if (playingMessageObject != null && !playingMessageObject.isVideo()) {
            return false;
        }
        HintView hintView = this.noSoundHintView;
        ArrayList<MessageObject> arrayList = null;
        if (hintView == null || hintView.getTag() == null) {
            animatedFileDrawable = null;
            messageObject = null;
        } else {
            ChatMessageCell messageCell = this.noSoundHintView.getMessageCell();
            ImageReceiver photoImage2 = messageCell.getPhotoImage();
            animatedFileDrawable = photoImage2.getAnimation();
            if (animatedFileDrawable != null) {
                messageObject = messageCell.getMessageObject();
                this.scrollToVideo = ((float) messageCell.getTop()) + photoImage2.getImageY2() > ((float) this.chatListView.getMeasuredHeight());
            } else {
                messageObject = null;
            }
        }
        if (messageObject == null) {
            int childCount = this.chatListView.getChildCount();
            int i = 0;
            while (true) {
                if (i >= childCount) {
                    break;
                }
                View childAt = this.chatListView.getChildAt(i);
                if (childAt instanceof ChatMessageCell) {
                    ChatMessageCell chatMessageCell = (ChatMessageCell) childAt;
                    MessageObject messageObject2 = chatMessageCell.getMessageObject();
                    boolean isRoundVideo = messageObject2.isRoundVideo();
                    if ((messageObject2.isVideo() || isRoundVideo) && messageObject2.videoEditedInfo == null && (animation = photoImage.getAnimation()) != null) {
                        float top = ((float) childAt.getTop()) + (photoImage = chatMessageCell.getPhotoImage()).getImageY();
                        float imageHeight = photoImage.getImageHeight() + top;
                        if (imageHeight >= 0.0f && top <= ((float) this.chatListView.getMeasuredHeight())) {
                            if (messageObject != null && top < 0.0f) {
                                break;
                            }
                            this.scrollToVideo = top < 0.0f || imageHeight > ((float) this.chatListView.getMeasuredHeight());
                            if (top >= 0.0f && imageHeight <= ((float) this.chatListView.getMeasuredHeight())) {
                                messageObject = messageObject2;
                                animatedFileDrawable = animation;
                                break;
                            }
                            messageObject = messageObject2;
                            animatedFileDrawable = animation;
                        }
                    }
                }
                i++;
            }
        }
        if (messageObject == null || MediaController.getInstance().isPlayingMessage(messageObject)) {
            return false;
        }
        hideHints(true);
        if (messageObject.isRoundVideo()) {
            boolean playMessage = MediaController.getInstance().playMessage(messageObject);
            MediaController instance = MediaController.getInstance();
            if (playMessage) {
                arrayList = createVoiceMessagesPlaylist(messageObject, false);
            }
            instance.setVoiceMessagesPlaylist(arrayList, false);
            return playMessage;
        }
        SharedConfig.setNoSoundHintShowed(true);
        messageObject.audioProgress = animatedFileDrawable.getCurrentProgress();
        messageObject.audioProgressMs = animatedFileDrawable.getCurrentProgressMs();
        animatedFileDrawable.stop();
        if (PhotoViewer.isPlayingMessageInPip(messageObject)) {
            PhotoViewer.getPipInstance().destroyPhotoViewer();
        }
        return MediaController.getInstance().playMessage(messageObject);
    }

    public void onConfigurationChanged(Configuration configuration) {
        MessageObject playingMessageObject;
        fixLayout();
        Dialog dialog = this.visibleDialog;
        if (dialog instanceof DatePickerDialog) {
            dialog.dismiss();
        }
        ActionBarPopupWindow actionBarPopupWindow = this.scrimPopupWindow;
        if (actionBarPopupWindow != null) {
            actionBarPopupWindow.dismiss();
            this.scrimView = null;
        }
        if (AndroidUtilities.isTablet()) {
            return;
        }
        if (configuration.orientation == 2) {
            if ((!PhotoViewer.hasInstance() || !PhotoViewer.getInstance().isVisible()) && (playingMessageObject = MediaController.getInstance().getPlayingMessageObject()) != null && playingMessageObject.isVideo()) {
                PhotoViewer.getInstance().setParentActivity(getParentActivity());
                getFileLoader().setLoadingVideoForPlayer(playingMessageObject.getDocument(), false);
                MediaController.getInstance().cleanupPlayer(true, true, false, true);
                PhotoViewer instance = PhotoViewer.getInstance();
                int i = playingMessageObject.type;
                long j = 0;
                long j2 = i != 0 ? this.dialog_id : 0;
                if (i != 0) {
                    j = this.mergeDialogId;
                }
                if (instance.openPhoto(playingMessageObject, j2, j, this.photoViewerProvider, false)) {
                    PhotoViewer.getInstance().setParentChatActivity(this);
                }
                hideHints(false);
                MediaController.getInstance().resetGoingToShowMessageObject();
            }
        } else if (PhotoViewer.hasInstance() && PhotoViewer.getInstance().isOpenedFullScreenVideo()) {
            PhotoViewer.getInstance().injectVideoPlayerToMediaController();
            PhotoViewer.getInstance().closePhoto(false, true);
        }
    }

    /* access modifiers changed from: private */
    public void createDeleteMessagesAlert(MessageObject messageObject, MessageObject.GroupedMessages groupedMessages) {
        createDeleteMessagesAlert(messageObject, groupedMessages, 1);
    }

    private void createDeleteMessagesAlert(MessageObject messageObject, MessageObject.GroupedMessages groupedMessages, int i) {
        if (messageObject != null || this.selectedMessagesIds[0].size() + this.selectedMessagesIds[1].size() != 0) {
            AlertsCreator.createDeleteMessagesAlert(this, this.currentUser, this.currentChat, this.currentEncryptedChat, this.chatInfo, this.mergeDialogId, messageObject, this.selectedMessagesIds, groupedMessages, this.chatMode == 1, i, new Runnable() {
                public final void run() {
                    ChatActivity.this.lambda$createDeleteMessagesAlert$105$ChatActivity();
                }
            });
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$createDeleteMessagesAlert$105 */
    public /* synthetic */ void lambda$createDeleteMessagesAlert$105$ChatActivity() {
        hideActionMode();
        updatePinnedMessageView(true);
    }

    /* access modifiers changed from: private */
    public void hideActionMode() {
        ActionBar actionBar = this.actionBar;
        if (actionBar != null) {
            if (actionBar.isActionModeShowed()) {
                this.actionBar.hideActionMode();
            } else {
                return;
            }
        }
        this.cantDeleteMessagesCount = 0;
        this.canEditMessagesCount = 0;
        this.cantForwardMessagesCount = 0;
        this.canSaveMusicCount = 0;
        this.canSaveDocumentsCount = 0;
        this.cantSaveMessagesCount = 0;
        ChatActivityEnterView chatActivityEnterView2 = this.chatActivityEnterView;
        if (chatActivityEnterView2 != null) {
            EditTextCaption editField = chatActivityEnterView2.getEditField();
            if (this.chatActivityEnterView.getVisibility() == 0) {
                editField.requestFocus();
            }
            editField.setAllowDrawCursor(true);
        }
        TextSelectionHelper.ChatListTextSelectionHelper chatListTextSelectionHelper = this.textSelectionHelper;
        if (chatListTextSelectionHelper != null) {
            chatListTextSelectionHelper.clear(true);
            this.textSelectionHelper.cancelAllAnimators();
        }
        TextSelectionHint textSelectionHint2 = this.textSelectionHint;
        if (textSelectionHint2 != null) {
            textSelectionHint2.hide();
        }
        ChatActivityEnterView chatActivityEnterView3 = this.chatActivityEnterView;
        if (chatActivityEnterView3 != null) {
            chatActivityEnterView3.preventInput = false;
        }
        this.textSelectionHintWasShowed = false;
    }

    /* access modifiers changed from: private */
    public void createMenu(View view, boolean z, boolean z2, float f, float f2) {
        createMenu(view, z, z2, f, f2, true);
    }

    private CharSequence getMessageCaption(MessageObject messageObject, MessageObject.GroupedMessages groupedMessages) {
        String restrictionReason = MessagesController.getRestrictionReason(messageObject.messageOwner.restriction_reason);
        if (!TextUtils.isEmpty(restrictionReason)) {
            return restrictionReason;
        }
        CharSequence charSequence = messageObject.caption;
        if (charSequence != null) {
            return charSequence;
        }
        if (groupedMessages == null) {
            return null;
        }
        int size = groupedMessages.messages.size();
        CharSequence charSequence2 = null;
        for (int i = 0; i < size; i++) {
            CharSequence charSequence3 = groupedMessages.messages.get(i).caption;
            if (charSequence3 != null) {
                if (charSequence2 != null) {
                    return null;
                }
                charSequence2 = charSequence3;
            }
        }
        return charSequence2;
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v3, resolved type: android.widget.ScrollView} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v25, resolved type: org.telegram.ui.ChatActivity$95} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r0v264, resolved type: org.telegram.ui.ChatActivity$95} */
    /* JADX WARNING: type inference failed for: r11v2, types: [android.widget.ScrollView, android.view.View] */
    /* access modifiers changed from: private */
    /* JADX WARNING: Code restructure failed: missing block: B:165:0x030e, code lost:
        if (r0.getDialogId() != r7.mergeDialogId) goto L_0x0313;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:420:0x0972, code lost:
        if (r2.edit_messages != false) goto L_0x0974;
     */
    /* JADX WARNING: Multi-variable type inference failed */
    /* JADX WARNING: Removed duplicated region for block: B:116:0x0250  */
    /* JADX WARNING: Removed duplicated region for block: B:117:0x0252  */
    /* JADX WARNING: Removed duplicated region for block: B:120:0x025d A[ADDED_TO_REGION] */
    /* JADX WARNING: Removed duplicated region for block: B:136:0x02ae  */
    /* JADX WARNING: Removed duplicated region for block: B:137:0x02b0  */
    /* JADX WARNING: Removed duplicated region for block: B:142:0x02bf  */
    /* JADX WARNING: Removed duplicated region for block: B:151:0x02e3  */
    /* JADX WARNING: Removed duplicated region for block: B:152:0x02e5  */
    /* JADX WARNING: Removed duplicated region for block: B:163:0x0302  */
    /* JADX WARNING: Removed duplicated region for block: B:192:0x0360  */
    /* JADX WARNING: Removed duplicated region for block: B:196:0x0366 A[ADDED_TO_REGION] */
    /* JADX WARNING: Removed duplicated region for block: B:242:0x04d5 A[RETURN] */
    /* JADX WARNING: Removed duplicated region for block: B:243:0x04d6  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public void createMenu(android.view.View r29, boolean r30, boolean r31, float r32, float r33, boolean r34) {
        /*
            r28 = this;
            r7 = r28
            r8 = r29
            org.telegram.ui.ActionBar.ActionBar r0 = r7.actionBar
            boolean r0 = r0.isActionModeShowed()
            if (r0 != 0) goto L_0x1531
            int r0 = r7.reportType
            if (r0 < 0) goto L_0x0012
            goto L_0x1531
        L_0x0012:
            boolean r0 = r8 instanceof org.telegram.ui.Cells.ChatMessageCell
            r1 = 0
            if (r0 == 0) goto L_0x001f
            r0 = r8
            org.telegram.ui.Cells.ChatMessageCell r0 = (org.telegram.ui.Cells.ChatMessageCell) r0
            org.telegram.messenger.MessageObject r0 = r0.getMessageObject()
            goto L_0x002c
        L_0x001f:
            boolean r0 = r8 instanceof org.telegram.ui.Cells.ChatActionCell
            if (r0 == 0) goto L_0x002b
            r0 = r8
            org.telegram.ui.Cells.ChatActionCell r0 = (org.telegram.ui.Cells.ChatActionCell) r0
            org.telegram.messenger.MessageObject r0 = r0.getMessageObject()
            goto L_0x002c
        L_0x002b:
            r0 = r1
        L_0x002c:
            if (r0 != 0) goto L_0x002f
            return
        L_0x002f:
            int r2 = r7.getMessageType(r0)
            r9 = 2
            r10 = 0
            r11 = 1
            if (r30 == 0) goto L_0x01c5
            org.telegram.tgnet.TLRPC$Message r3 = r0.messageOwner
            org.telegram.tgnet.TLRPC$MessageAction r3 = r3.action
            boolean r4 = r3 instanceof org.telegram.tgnet.TLRPC$TL_messageActionPinMessage
            if (r4 == 0) goto L_0x0079
            int r1 = r0.getReplyMsgId()
            if (r1 == 0) goto L_0x0064
            int r1 = r0.getReplyMsgId()
            org.telegram.tgnet.TLRPC$Message r2 = r0.messageOwner
            int r2 = r2.id
            r3 = 1
            long r4 = r0.getDialogId()
            long r8 = r7.mergeDialogId
            int r0 = (r4 > r8 ? 1 : (r4 == r8 ? 0 : -1))
            if (r0 != 0) goto L_0x005b
            r4 = 1
            goto L_0x005c
        L_0x005b:
            r4 = 0
        L_0x005c:
            r5 = 0
            r6 = 0
            r0 = r28
            r0.scrollToMessageId(r1, r2, r3, r4, r5, r6)
            goto L_0x0078
        L_0x0064:
            android.app.Activity r0 = r28.getParentActivity()
            r1 = 2131626125(0x7f0e088d, float:1.8879477E38)
            java.lang.String r2 = "MessageNotFound"
            java.lang.String r1 = org.telegram.messenger.LocaleController.getString(r2, r1)
            android.widget.Toast r0 = android.widget.Toast.makeText(r0, r1, r10)
            r0.show()
        L_0x0078:
            return
        L_0x0079:
            boolean r4 = r3 instanceof org.telegram.tgnet.TLRPC$TL_messageActionSetMessagesTTL
            if (r4 == 0) goto L_0x0086
            org.telegram.ui.Components.ChatAvatarContainer r3 = r7.avatarContainer
            boolean r3 = r3.openSetTimer()
            if (r3 == 0) goto L_0x01c5
            return
        L_0x0086:
            boolean r3 = r3 instanceof org.telegram.tgnet.TLRPC$TL_messageActionPaymentSent
            if (r3 == 0) goto L_0x00ba
            org.telegram.messenger.MessageObject r3 = r0.replyMessageObject
            if (r3 == 0) goto L_0x00ba
            boolean r3 = r3.isInvoice()
            if (r3 == 0) goto L_0x00ba
            org.telegram.tgnet.TLRPC$TL_payments_getPaymentReceipt r1 = new org.telegram.tgnet.TLRPC$TL_payments_getPaymentReceipt
            r1.<init>()
            int r2 = r0.getId()
            r1.msg_id = r2
            org.telegram.messenger.MessagesController r2 = r28.getMessagesController()
            org.telegram.tgnet.TLRPC$Message r0 = r0.messageOwner
            org.telegram.tgnet.TLRPC$Peer r0 = r0.peer_id
            org.telegram.tgnet.TLRPC$InputPeer r0 = r2.getInputPeer((org.telegram.tgnet.TLRPC$Peer) r0)
            r1.peer = r0
            org.telegram.tgnet.ConnectionsManager r0 = r28.getConnectionsManager()
            org.telegram.ui.-$$Lambda$ChatActivity$x0opOmbBTExSdALGVreShLAsHsY r2 = new org.telegram.ui.-$$Lambda$ChatActivity$x0opOmbBTExSdALGVreShLAsHsY
            r2.<init>()
            r0.sendRequest(r1, r2, r9)
            return
        L_0x00ba:
            org.telegram.tgnet.TLRPC$Message r3 = r0.messageOwner
            org.telegram.tgnet.TLRPC$MessageAction r3 = r3.action
            boolean r4 = r3 instanceof org.telegram.tgnet.TLRPC$TL_messageActionGroupCall
            if (r4 != 0) goto L_0x00ca
            boolean r4 = r3 instanceof org.telegram.tgnet.TLRPC$TL_messageActionInviteToGroupCall
            if (r4 != 0) goto L_0x00ca
            boolean r3 = r3 instanceof org.telegram.tgnet.TLRPC$TL_messageActionGroupCallScheduled
            if (r3 == 0) goto L_0x01c5
        L_0x00ca:
            android.app.Activity r3 = r28.getParentActivity()
            if (r3 != 0) goto L_0x00d1
            return
        L_0x00d1:
            org.telegram.messenger.voip.VoIPService r3 = org.telegram.messenger.voip.VoIPService.getSharedInstance()
            if (r3 == 0) goto L_0x0157
            org.telegram.messenger.ChatObject$Call r1 = r3.groupCall
            if (r1 == 0) goto L_0x013a
            org.telegram.tgnet.TLRPC$Message r0 = r0.messageOwner
            org.telegram.tgnet.TLRPC$MessageAction r0 = r0.action
            org.telegram.tgnet.TLRPC$TL_inputGroupCall r0 = r0.call
            long r2 = r0.id
            org.telegram.tgnet.TLRPC$GroupCall r0 = r1.call
            long r0 = r0.id
            int r4 = (r2 > r0 ? 1 : (r2 == r0 ? 0 : -1))
            if (r4 != 0) goto L_0x013a
            android.app.Activity r0 = r28.getParentActivity()
            boolean r0 = r0 instanceof org.telegram.ui.LaunchActivity
            if (r0 == 0) goto L_0x0113
            android.app.Activity r0 = r28.getParentActivity()
            org.telegram.ui.LaunchActivity r0 = (org.telegram.ui.LaunchActivity) r0
            int r1 = r7.currentAccount
            org.telegram.messenger.AccountInstance r1 = org.telegram.messenger.AccountInstance.getInstance(r1)
            r2 = 0
            r3 = 0
            r4 = 0
            r5 = 0
            r29 = r0
            r30 = r1
            r31 = r2
            r32 = r3
            r33 = r4
            r34 = r5
            org.telegram.ui.GroupCallActivity.create(r29, r30, r31, r32, r33, r34)
            goto L_0x0156
        L_0x0113:
            android.content.Intent r0 = new android.content.Intent
            android.app.Activity r1 = r28.getParentActivity()
            java.lang.Class<org.telegram.ui.LaunchActivity> r2 = org.telegram.ui.LaunchActivity.class
            r0.<init>(r1, r2)
            java.lang.String r1 = "voip_chat"
            android.content.Intent r0 = r0.setAction(r1)
            org.telegram.messenger.voip.VoIPService r1 = org.telegram.messenger.voip.VoIPService.getSharedInstance()
            int r1 = r1.getAccount()
            java.lang.String r2 = "currentAccount"
            r0.putExtra(r2, r1)
            android.app.Activity r1 = r28.getParentActivity()
            r1.startActivity(r0)
            goto L_0x0156
        L_0x013a:
            org.telegram.messenger.ChatObject$Call r0 = r28.getGroupCall()
            if (r0 != 0) goto L_0x0142
            r3 = 1
            goto L_0x0143
        L_0x0142:
            r3 = 0
        L_0x0143:
            r7.createGroupCall = r3
            org.telegram.tgnet.TLRPC$Chat r0 = r7.currentChat
            r1 = 0
            r2 = 0
            android.app.Activity r4 = r28.getParentActivity()
            org.telegram.messenger.AccountInstance r6 = r28.getAccountInstance()
            r5 = r28
            org.telegram.ui.Components.voip.VoIPHelper.startCall(r0, r1, r2, r3, r4, r5, r6)
        L_0x0156:
            return
        L_0x0157:
            org.telegram.ui.Components.FragmentContextView r3 = r7.fragmentContextView
            if (r3 == 0) goto L_0x01b3
            org.telegram.messenger.ChatObject$Call r3 = r28.getGroupCall()
            if (r3 == 0) goto L_0x01b3
            org.telegram.messenger.voip.VoIPService r0 = org.telegram.messenger.voip.VoIPService.getSharedInstance()
            if (r0 == 0) goto L_0x018d
            android.app.Activity r0 = r28.getParentActivity()
            org.telegram.ui.LaunchActivity r0 = (org.telegram.ui.LaunchActivity) r0
            org.telegram.messenger.voip.VoIPService r1 = org.telegram.messenger.voip.VoIPService.getSharedInstance()
            int r1 = r1.getAccount()
            org.telegram.messenger.AccountInstance r1 = org.telegram.messenger.AccountInstance.getInstance(r1)
            r2 = 0
            r3 = 0
            r4 = 0
            r5 = 0
            r29 = r0
            r30 = r1
            r31 = r2
            r32 = r3
            r33 = r4
            r34 = r5
            org.telegram.ui.GroupCallActivity.create(r29, r30, r31, r32, r33, r34)
            goto L_0x01b2
        L_0x018d:
            org.telegram.messenger.ChatObject$Call r0 = r28.getGroupCall()
            if (r0 != 0) goto L_0x0194
            return
        L_0x0194:
            org.telegram.messenger.MessagesController r1 = r28.getMessagesController()
            int r0 = r0.chatId
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            org.telegram.tgnet.TLRPC$Chat r0 = r1.getChat(r0)
            r1 = 0
            r2 = 0
            r3 = 0
            android.app.Activity r4 = r28.getParentActivity()
            org.telegram.messenger.AccountInstance r6 = r28.getAccountInstance()
            r5 = r28
            org.telegram.ui.Components.voip.VoIPHelper.startCall(r0, r1, r2, r3, r4, r5, r6)
        L_0x01b2:
            return
        L_0x01b3:
            org.telegram.tgnet.TLRPC$Chat r3 = r7.currentChat
            boolean r3 = org.telegram.messenger.ChatObject.canManageCalls(r3)
            if (r3 == 0) goto L_0x01c5
            org.telegram.tgnet.TLRPC$Chat r0 = r7.currentChat
            org.telegram.messenger.AccountInstance r2 = r28.getAccountInstance()
            org.telegram.ui.Components.voip.VoIPHelper.showGroupCallAlert(r7, r0, r1, r11, r2)
            return
        L_0x01c5:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r3 = r7.threadMessageObjects
            if (r3 == 0) goto L_0x01d1
            boolean r3 = r3.contains(r0)
            if (r3 == 0) goto L_0x01d1
            r3 = 1
            goto L_0x01d3
        L_0x01d1:
            r3 = r30
        L_0x01d3:
            r7.selectedObject = r1
            r7.selectedObjectGroup = r1
            r7.forwardingMessage = r1
            r7.forwardingMessageGroup = r1
            r7.selectedObjectToEditCaption = r1
            r4 = 1
        L_0x01de:
            if (r4 < 0) goto L_0x01f8
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r5 = r7.selectedMessagesCanCopyIds
            r5 = r5[r4]
            r5.clear()
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r5 = r7.selectedMessagesCanStarIds
            r5 = r5[r4]
            r5.clear()
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r5 = r7.selectedMessagesIds
            r5 = r5[r4]
            r5.clear()
            int r4 = r4 + -1
            goto L_0x01de
        L_0x01f8:
            r28.hideActionMode()
            r7.updatePinnedMessageView(r11)
            if (r34 == 0) goto L_0x0205
            org.telegram.messenger.MessageObject$GroupedMessages r4 = r7.getValidGroupedMessage(r0)
            goto L_0x0206
        L_0x0205:
            r4 = r1
        L_0x0206:
            int r5 = r7.chatMode
            if (r5 == r11) goto L_0x023d
            boolean r5 = r28.isThreadChat()
            if (r5 == 0) goto L_0x0211
            goto L_0x023d
        L_0x0211:
            org.telegram.tgnet.TLRPC$Chat r5 = r7.currentChat
            if (r5 == 0) goto L_0x0229
            long r5 = r0.getDialogId()
            long r12 = r7.mergeDialogId
            int r14 = (r5 > r12 ? 1 : (r5 == r12 ? 0 : -1))
            if (r14 == 0) goto L_0x023d
            org.telegram.tgnet.TLRPC$Chat r5 = r7.currentChat
            boolean r5 = org.telegram.messenger.ChatObject.canPinMessages(r5)
            if (r5 == 0) goto L_0x023d
            r5 = 1
            goto L_0x023e
        L_0x0229:
            org.telegram.tgnet.TLRPC$EncryptedChat r5 = r7.currentEncryptedChat
            if (r5 != 0) goto L_0x023d
            org.telegram.tgnet.TLRPC$User r5 = r7.currentUser
            boolean r5 = org.telegram.messenger.UserObject.isDeleted(r5)
            if (r5 == 0) goto L_0x0236
            goto L_0x023d
        L_0x0236:
            org.telegram.tgnet.TLRPC$UserFull r5 = r7.userInfo
            if (r5 == 0) goto L_0x023d
            boolean r5 = r5.can_pin_message
            goto L_0x023e
        L_0x023d:
            r5 = 0
        L_0x023e:
            if (r5 == 0) goto L_0x0252
            int r5 = r0.getId()
            if (r5 <= 0) goto L_0x0252
            org.telegram.tgnet.TLRPC$Message r5 = r0.messageOwner
            org.telegram.tgnet.TLRPC$MessageAction r5 = r5.action
            if (r5 == 0) goto L_0x0250
            boolean r5 = r5 instanceof org.telegram.tgnet.TLRPC$TL_messageActionEmpty
            if (r5 == 0) goto L_0x0252
        L_0x0250:
            r5 = 1
            goto L_0x0253
        L_0x0252:
            r5 = 0
        L_0x0253:
            long r12 = r0.getDialogId()
            long r14 = r7.mergeDialogId
            int r6 = (r12 > r14 ? 1 : (r12 == r14 ? 0 : -1))
            if (r6 == 0) goto L_0x0293
            if (r5 == 0) goto L_0x0293
            java.util.HashMap<java.lang.Integer, org.telegram.messenger.MessageObject> r6 = r7.pinnedMessageObjects
            int r12 = r0.getId()
            java.lang.Integer r12 = java.lang.Integer.valueOf(r12)
            boolean r6 = r6.containsKey(r12)
            if (r6 != 0) goto L_0x0291
            if (r4 == 0) goto L_0x0293
            java.util.ArrayList<org.telegram.messenger.MessageObject> r6 = r4.messages
            boolean r6 = r6.isEmpty()
            if (r6 != 0) goto L_0x0293
            java.util.HashMap<java.lang.Integer, org.telegram.messenger.MessageObject> r6 = r7.pinnedMessageObjects
            java.util.ArrayList<org.telegram.messenger.MessageObject> r12 = r4.messages
            java.lang.Object r12 = r12.get(r10)
            org.telegram.messenger.MessageObject r12 = (org.telegram.messenger.MessageObject) r12
            int r12 = r12.getId()
            java.lang.Integer r12 = java.lang.Integer.valueOf(r12)
            boolean r6 = r6.containsKey(r12)
            if (r6 == 0) goto L_0x0293
        L_0x0291:
            r6 = 1
            goto L_0x0294
        L_0x0293:
            r6 = 0
        L_0x0294:
            org.telegram.tgnet.TLRPC$Chat r12 = r7.currentChat
            boolean r12 = r0.canEditMessage(r12)
            if (r12 == 0) goto L_0x02b0
            org.telegram.ui.Components.ChatActivityEnterView r12 = r7.chatActivityEnterView
            boolean r12 = r12.hasAudioToSend()
            if (r12 != 0) goto L_0x02b0
            long r12 = r0.getDialogId()
            long r14 = r7.mergeDialogId
            int r16 = (r12 > r14 ? 1 : (r12 == r14 ? 0 : -1))
            if (r16 == 0) goto L_0x02b0
            r12 = 1
            goto L_0x02b1
        L_0x02b0:
            r12 = 0
        L_0x02b1:
            if (r12 == 0) goto L_0x02e6
            if (r4 == 0) goto L_0x02e6
            java.util.ArrayList<org.telegram.messenger.MessageObject> r12 = r4.messages
            int r12 = r12.size()
            r13 = 0
            r14 = 0
        L_0x02bd:
            if (r13 >= r12) goto L_0x02e1
            java.util.ArrayList<org.telegram.messenger.MessageObject> r15 = r4.messages
            java.lang.Object r15 = r15.get(r13)
            org.telegram.messenger.MessageObject r15 = (org.telegram.messenger.MessageObject) r15
            if (r13 == 0) goto L_0x02d1
            java.lang.CharSequence r1 = r15.caption
            boolean r1 = android.text.TextUtils.isEmpty(r1)
            if (r1 != 0) goto L_0x02dd
        L_0x02d1:
            r7.selectedObjectToEditCaption = r15
            java.lang.CharSequence r1 = r15.caption
            boolean r1 = android.text.TextUtils.isEmpty(r1)
            if (r1 != 0) goto L_0x02dd
            int r14 = r14 + 1
        L_0x02dd:
            int r13 = r13 + 1
            r1 = 0
            goto L_0x02bd
        L_0x02e1:
            if (r14 >= r9) goto L_0x02e5
            r12 = 1
            goto L_0x02e6
        L_0x02e5:
            r12 = 0
        L_0x02e6:
            int r1 = r7.chatMode
            if (r1 == r11) goto L_0x0360
            java.util.ArrayList<org.telegram.messenger.MessageObject> r1 = r7.threadMessageObjects
            if (r1 == 0) goto L_0x02f4
            boolean r1 = r1.contains(r0)
            if (r1 != 0) goto L_0x0360
        L_0x02f4:
            org.telegram.tgnet.TLRPC$EncryptedChat r1 = r7.currentEncryptedChat
            if (r1 == 0) goto L_0x0302
            int r1 = r1.layer
            int r1 = org.telegram.messenger.AndroidUtilities.getPeerLayerVersion(r1)
            r13 = 46
            if (r1 < r13) goto L_0x0360
        L_0x0302:
            if (r2 != r11) goto L_0x0311
            long r13 = r0.getDialogId()
            r30 = r12
            long r11 = r7.mergeDialogId
            int r1 = (r13 > r11 ? 1 : (r13 == r11 ? 0 : -1))
            if (r1 == 0) goto L_0x0362
            goto L_0x0313
        L_0x0311:
            r30 = r12
        L_0x0313:
            org.telegram.tgnet.TLRPC$Message r1 = r0.messageOwner
            org.telegram.tgnet.TLRPC$MessageAction r1 = r1.action
            boolean r1 = r1 instanceof org.telegram.tgnet.TLRPC$TL_messageActionSecureValuesSent
            if (r1 != 0) goto L_0x0362
            org.telegram.tgnet.TLRPC$EncryptedChat r1 = r7.currentEncryptedChat
            if (r1 != 0) goto L_0x0325
            int r1 = r0.getId()
            if (r1 < 0) goto L_0x0362
        L_0x0325:
            android.widget.FrameLayout r1 = r7.bottomOverlayChat
            if (r1 == 0) goto L_0x032f
            int r1 = r1.getVisibility()
            if (r1 == 0) goto L_0x0362
        L_0x032f:
            org.telegram.tgnet.TLRPC$Chat r1 = r7.currentChat
            if (r1 == 0) goto L_0x035e
            boolean r1 = org.telegram.messenger.ChatObject.isNotInChat(r1)
            if (r1 == 0) goto L_0x033f
            boolean r1 = r28.isThreadChat()
            if (r1 == 0) goto L_0x0362
        L_0x033f:
            org.telegram.tgnet.TLRPC$Chat r1 = r7.currentChat
            boolean r1 = org.telegram.messenger.ChatObject.isChannel(r1)
            if (r1 == 0) goto L_0x0355
            org.telegram.tgnet.TLRPC$Chat r1 = r7.currentChat
            boolean r1 = org.telegram.messenger.ChatObject.canPost(r1)
            if (r1 != 0) goto L_0x0355
            org.telegram.tgnet.TLRPC$Chat r1 = r7.currentChat
            boolean r1 = r1.megagroup
            if (r1 == 0) goto L_0x0362
        L_0x0355:
            org.telegram.tgnet.TLRPC$Chat r1 = r7.currentChat
            boolean r1 = org.telegram.messenger.ChatObject.canSendMessages(r1)
            if (r1 != 0) goto L_0x035e
            goto L_0x0362
        L_0x035e:
            r1 = 1
            goto L_0x0363
        L_0x0360:
            r30 = r12
        L_0x0362:
            r1 = 0
        L_0x0363:
            r11 = 3
            if (r3 != 0) goto L_0x04cf
            if (r2 < r9) goto L_0x04cf
            r12 = 20
            if (r2 != r12) goto L_0x036e
            goto L_0x04cf
        L_0x036e:
            org.telegram.ui.Components.ChatActivityEnterView r1 = r7.chatActivityEnterView
            if (r1 == 0) goto L_0x0381
            boolean r1 = r1.isRecordingAudioVideo()
            if (r1 != 0) goto L_0x0380
            org.telegram.ui.Components.ChatActivityEnterView r1 = r7.chatActivityEnterView
            boolean r1 = r1.isRecordLocked()
            if (r1 == 0) goto L_0x0381
        L_0x0380:
            return
        L_0x0381:
            org.telegram.ui.ActionBar.ActionBar r1 = r7.actionBar
            org.telegram.ui.ActionBar.ActionBarMenu r1 = r1.createActionMode()
            r2 = 12
            org.telegram.ui.ActionBar.ActionBarMenuItem r1 = r1.getItem(r2)
            if (r1 == 0) goto L_0x0392
            r1.setVisibility(r10)
        L_0x0392:
            android.widget.FrameLayout r1 = r7.bottomMessagesActionContainer
            r1.setVisibility(r10)
            org.telegram.ui.Components.ChatActivityEnterView r1 = r7.chatActivityEnterView
            int r1 = r1.getMeasuredHeight()
            r2 = 1112276992(0x424CLASSNAME, float:51.0)
            int r2 = org.telegram.messenger.AndroidUtilities.dp(r2)
            int r23 = r1 - r2
            org.telegram.ui.Components.ChatActivityEnterView r1 = r7.chatActivityEnterView
            int r1 = r1.getVisibility()
            if (r1 != 0) goto L_0x0414
            java.util.ArrayList r1 = new java.util.ArrayList
            r1.<init>()
            org.telegram.ui.Components.ChatActivityEnterView r2 = r7.chatActivityEnterView
            r1.add(r2)
            android.widget.FrameLayout r2 = r7.mentionContainer
            if (r2 == 0) goto L_0x03c6
            int r2 = r2.getVisibility()
            if (r2 != 0) goto L_0x03c6
            android.widget.FrameLayout r2 = r7.mentionContainer
            r1.add(r2)
        L_0x03c6:
            android.widget.FrameLayout r2 = r7.stickersPanel
            if (r2 == 0) goto L_0x03d5
            int r2 = r2.getVisibility()
            if (r2 != 0) goto L_0x03d5
            android.widget.FrameLayout r2 = r7.stickersPanel
            r1.add(r2)
        L_0x03d5:
            org.telegram.ui.ActionBar.ActionBar r2 = r7.actionBar
            r17 = 1
            android.widget.FrameLayout r3 = r7.bottomMessagesActionContainer
            r19 = 0
            android.view.View[] r4 = new android.view.View[r10]
            java.lang.Object[] r1 = r1.toArray(r4)
            r20 = r1
            android.view.View[] r20 = (android.view.View[]) r20
            boolean[] r1 = new boolean[r11]
            r1 = {0, 1, 1} // fill-array
            org.telegram.ui.Components.RecyclerListView r4 = r7.chatListView
            r16 = r2
            r18 = r3
            r21 = r1
            r22 = r4
            r16.showActionMode(r17, r18, r19, r20, r21, r22, r23)
            android.app.Activity r1 = r28.getParentActivity()
            boolean r1 = r1 instanceof org.telegram.ui.LaunchActivity
            if (r1 == 0) goto L_0x040a
            android.app.Activity r1 = r28.getParentActivity()
            org.telegram.ui.LaunchActivity r1 = (org.telegram.ui.LaunchActivity) r1
            r1.hideVisibleActionMode()
        L_0x040a:
            org.telegram.ui.Components.ChatActivityEnterView r1 = r7.chatActivityEnterView
            org.telegram.ui.Components.EditTextCaption r1 = r1.getEditField()
            r1.setAllowDrawCursor(r10)
            goto L_0x0456
        L_0x0414:
            android.widget.FrameLayout r1 = r7.bottomOverlayChat
            int r1 = r1.getVisibility()
            if (r1 != 0) goto L_0x043f
            org.telegram.ui.ActionBar.ActionBar r1 = r7.actionBar
            r17 = 1
            android.widget.FrameLayout r2 = r7.bottomMessagesActionContainer
            r19 = 0
            r3 = 1
            android.view.View[] r4 = new android.view.View[r3]
            android.widget.FrameLayout r5 = r7.bottomOverlayChat
            r4[r10] = r5
            boolean[] r5 = new boolean[r3]
            r5[r10] = r3
            org.telegram.ui.Components.RecyclerListView r3 = r7.chatListView
            r16 = r1
            r18 = r2
            r20 = r4
            r21 = r5
            r22 = r3
            r16.showActionMode(r17, r18, r19, r20, r21, r22, r23)
            goto L_0x0456
        L_0x043f:
            org.telegram.ui.ActionBar.ActionBar r1 = r7.actionBar
            r17 = 1
            android.widget.FrameLayout r2 = r7.bottomMessagesActionContainer
            r19 = 0
            r20 = 0
            r21 = 0
            org.telegram.ui.Components.RecyclerListView r3 = r7.chatListView
            r16 = r1
            r18 = r2
            r22 = r3
            r16.showActionMode(r17, r18, r19, r20, r21, r22, r23)
        L_0x0456:
            org.telegram.ui.ActionBar.ActionBarPopupWindow r1 = r7.scrimPopupWindow
            if (r1 == 0) goto L_0x045d
            r1.dismiss()
        L_0x045d:
            androidx.recyclerview.widget.GridLayoutManagerFixed r1 = r7.chatLayoutManager
            r2 = 1
            r1.setCanScrollVertically(r2)
            r7.updatePinnedMessageView(r2)
            android.animation.AnimatorSet r1 = new android.animation.AnimatorSet
            r1.<init>()
            java.util.ArrayList r2 = new java.util.ArrayList
            r2.<init>()
            r3 = 0
        L_0x0471:
            java.util.ArrayList<android.view.View> r4 = r7.actionModeViews
            int r4 = r4.size()
            if (r3 >= r4) goto L_0x049e
            java.util.ArrayList<android.view.View> r4 = r7.actionModeViews
            java.lang.Object r4 = r4.get(r3)
            android.view.View r4 = (android.view.View) r4
            int r5 = org.telegram.ui.ActionBar.ActionBar.getCurrentActionBarHeight()
            int r5 = r5 / r9
            float r5 = (float) r5
            r4.setPivotY(r5)
            org.telegram.messenger.AndroidUtilities.clearDrawableAnimation(r4)
            android.util.Property r5 = android.view.View.SCALE_Y
            float[] r6 = new float[r9]
            r6 = {NUM, NUM} // fill-array
            android.animation.ObjectAnimator r4 = android.animation.ObjectAnimator.ofFloat(r4, r5, r6)
            r2.add(r4)
            int r3 = r3 + 1
            goto L_0x0471
        L_0x049e:
            r1.playTogether(r2)
            r2 = 250(0xfa, double:1.235E-321)
            r1.setDuration(r2)
            r1.start()
            r1 = r31
            r7.addToSelectedMessages(r0, r1)
            org.telegram.ui.Components.ChatActivityEnterView r0 = r7.chatActivityEnterView
            r1 = 1
            if (r0 == 0) goto L_0x04b5
            r0.preventInput = r1
        L_0x04b5:
            org.telegram.ui.Components.NumberTextView r0 = r7.selectedMessagesCountTextView
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r2 = r7.selectedMessagesIds
            r2 = r2[r10]
            int r2 = r2.size()
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r3 = r7.selectedMessagesIds
            r1 = r3[r1]
            int r1 = r1.size()
            int r2 = r2 + r1
            r0.setNumber(r2, r10)
            r28.updateVisibleRows()
            return
        L_0x04cf:
            android.app.Activity r12 = r28.getParentActivity()
            if (r12 != 0) goto L_0x04d6
            return
        L_0x04d6:
            java.util.ArrayList r12 = new java.util.ArrayList
            r12.<init>()
            java.util.ArrayList r13 = new java.util.ArrayList
            r13.<init>()
            java.util.ArrayList r14 = new java.util.ArrayList
            r14.<init>()
            if (r2 >= 0) goto L_0x04fc
            r15 = -1
            if (r2 != r15) goto L_0x1225
            if (r3 == 0) goto L_0x1225
            boolean r3 = r0.isSending()
            if (r3 != 0) goto L_0x04f8
            boolean r3 = r0.isEditing()
            if (r3 == 0) goto L_0x1225
        L_0x04f8:
            org.telegram.tgnet.TLRPC$EncryptedChat r3 = r7.currentEncryptedChat
            if (r3 != 0) goto L_0x1225
        L_0x04fc:
            r7.selectedObject = r0
            r7.selectedObjectGroup = r4
            r3 = -1
            r4 = 2131165733(0x7var_, float:1.7945691E38)
            r17 = 2131165731(0x7var_, float:1.7945687E38)
            r15 = 2131624995(0x7f0e0423, float:1.8877185E38)
            java.lang.String r9 = "Copy"
            if (r2 != r3) goto L_0x0555
            int r1 = r0.type
            if (r1 == 0) goto L_0x0522
            boolean r0 = r0.isAnimatedEmoji()
            if (r0 != 0) goto L_0x0522
            org.telegram.messenger.MessageObject r0 = r7.selectedObject
            org.telegram.messenger.MessageObject$GroupedMessages r1 = r7.selectedObjectGroup
            java.lang.CharSequence r0 = r7.getMessageCaption(r0, r1)
            if (r0 == 0) goto L_0x0537
        L_0x0522:
            java.lang.String r0 = org.telegram.messenger.LocaleController.getString(r9, r15)
            r13.add(r0)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r11)
            r14.add(r0)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r17)
            r12.add(r0)
        L_0x0537:
            r0 = 2131624653(0x7f0e02cd, float:1.8876492E38)
            java.lang.String r1 = "CancelSending"
            java.lang.String r0 = org.telegram.messenger.LocaleController.getString(r1, r0)
            r13.add(r0)
            r0 = 24
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r14.add(r0)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r4)
            r12.add(r0)
            goto L_0x1225
        L_0x0555:
            r3 = 2131625090(0x7f0e0482, float:1.8877378E38)
            java.lang.String r4 = "Delete"
            if (r2 != 0) goto L_0x05a0
            r0 = 2131627226(0x7f0e0cda, float:1.888171E38)
            java.lang.String r1 = "Retry"
            java.lang.String r0 = org.telegram.messenger.LocaleController.getString(r1, r0)
            r13.add(r0)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r10)
            r14.add(r0)
            r0 = 2131165806(0x7var_e, float:1.794584E38)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r12.add(r0)
            java.lang.String r0 = org.telegram.messenger.LocaleController.getString(r4, r3)
            r13.add(r0)
            r0 = 1
            java.lang.Integer r1 = java.lang.Integer.valueOf(r0)
            r14.add(r1)
            org.telegram.messenger.MessageObject r0 = r7.selectedObject
            org.telegram.tgnet.TLRPC$Message r0 = r0.messageOwner
            int r0 = r0.ttl_period
            if (r0 == 0) goto L_0x0594
            r4 = 2131165734(0x7var_, float:1.7945693E38)
            goto L_0x0597
        L_0x0594:
            r4 = 2131165733(0x7var_, float:1.7945691E38)
        L_0x0597:
            java.lang.Integer r0 = java.lang.Integer.valueOf(r4)
            r12.add(r0)
            goto L_0x1225
        L_0x05a0:
            r11 = 8
            r15 = 1
            if (r2 != r15) goto L_0x071d
            org.telegram.tgnet.TLRPC$Chat r2 = r7.currentChat
            if (r2 == 0) goto L_0x06b7
            if (r1 == 0) goto L_0x05c8
            r1 = 2131627148(0x7f0e0c8c, float:1.8881552E38)
            java.lang.String r2 = "Reply"
            java.lang.String r1 = org.telegram.messenger.LocaleController.getString(r2, r1)
            r13.add(r1)
            java.lang.Integer r1 = java.lang.Integer.valueOf(r11)
            r14.add(r1)
            r1 = 2131165796(0x7var_, float:1.794582E38)
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)
            r12.add(r1)
        L_0x05c8:
            boolean r1 = r28.isThreadChat()
            if (r1 != 0) goto L_0x0605
            int r1 = r7.chatMode
            r2 = 1
            if (r1 == r2) goto L_0x0605
            boolean r1 = r0.hasReplies()
            if (r1 == 0) goto L_0x0605
            org.telegram.tgnet.TLRPC$Chat r1 = r7.currentChat
            boolean r1 = r1.megagroup
            if (r1 == 0) goto L_0x0605
            boolean r1 = r0.canViewThread()
            if (r1 == 0) goto L_0x0605
            int r1 = r0.getRepliesCount()
            java.lang.String r2 = "ViewReplies"
            java.lang.String r1 = org.telegram.messenger.LocaleController.formatPluralString(r2, r1)
            r13.add(r1)
            r1 = 27
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)
            r14.add(r1)
            r1 = 2131165840(0x7var_, float:1.7945908E38)
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)
            r12.add(r1)
        L_0x0605:
            if (r6 == 0) goto L_0x0627
            r1 = 2131627814(0x7f0e0var_, float:1.8882903E38)
            java.lang.String r2 = "UnpinMessage"
            java.lang.String r1 = org.telegram.messenger.LocaleController.getString(r2, r1)
            r13.add(r1)
            r1 = 14
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)
            r14.add(r1)
            r1 = 2131165835(0x7var_b, float:1.7945898E38)
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)
            r12.add(r1)
            goto L_0x0648
        L_0x0627:
            if (r5 == 0) goto L_0x0648
            r1 = 2131626931(0x7f0e0bb3, float:1.8881112E38)
            java.lang.String r2 = "PinMessage"
            java.lang.String r1 = org.telegram.messenger.LocaleController.getString(r2, r1)
            r13.add(r1)
            r1 = 13
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)
            r14.add(r1)
            r1 = 2131165788(0x7var_c, float:1.7945803E38)
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)
            r12.add(r1)
        L_0x0648:
            org.telegram.tgnet.TLRPC$Chat r1 = r7.currentChat
            boolean r1 = r0.canEditMessage(r1)
            if (r1 == 0) goto L_0x066f
            r1 = 2131625214(0x7f0e04fe, float:1.887763E38)
            java.lang.String r2 = "Edit"
            java.lang.String r1 = org.telegram.messenger.LocaleController.getString(r2, r1)
            r13.add(r1)
            r1 = 12
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)
            r14.add(r1)
            r1 = 2131165742(0x7var_e, float:1.794571E38)
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)
            r12.add(r1)
        L_0x066f:
            org.telegram.messenger.MessageObject r1 = r7.selectedObject
            int r2 = r1.contentType
            if (r2 != 0) goto L_0x06dc
            boolean r1 = r1.isMediaEmptyWebpage()
            if (r1 != 0) goto L_0x06dc
            org.telegram.messenger.MessageObject r1 = r7.selectedObject
            int r1 = r1.getId()
            if (r1 <= 0) goto L_0x06dc
            org.telegram.messenger.MessageObject r1 = r7.selectedObject
            boolean r1 = r1.isOut()
            if (r1 != 0) goto L_0x06dc
            org.telegram.tgnet.TLRPC$Chat r1 = r7.currentChat
            if (r1 != 0) goto L_0x0697
            org.telegram.tgnet.TLRPC$User r1 = r7.currentUser
            if (r1 == 0) goto L_0x06dc
            boolean r1 = r1.bot
            if (r1 == 0) goto L_0x06dc
        L_0x0697:
            r1 = 2131627151(0x7f0e0c8f, float:1.8881558E38)
            java.lang.String r2 = "ReportChat"
            java.lang.String r1 = org.telegram.messenger.LocaleController.getString(r2, r1)
            r13.add(r1)
            r1 = 23
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)
            r14.add(r1)
            r1 = 2131165798(0x7var_, float:1.7945823E38)
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)
            r12.add(r1)
            goto L_0x06dc
        L_0x06b7:
            int r2 = r0.getId()
            if (r2 <= 0) goto L_0x06dc
            if (r1 == 0) goto L_0x06dc
            r1 = 2131627148(0x7f0e0c8c, float:1.8881552E38)
            java.lang.String r2 = "Reply"
            java.lang.String r1 = org.telegram.messenger.LocaleController.getString(r2, r1)
            r13.add(r1)
            java.lang.Integer r1 = java.lang.Integer.valueOf(r11)
            r14.add(r1)
            r1 = 2131165796(0x7var_, float:1.794582E38)
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)
            r12.add(r1)
        L_0x06dc:
            int r1 = r7.chatMode
            r2 = 1
            if (r1 != r2) goto L_0x06e3
            r1 = 1
            goto L_0x06e4
        L_0x06e3:
            r1 = 0
        L_0x06e4:
            org.telegram.tgnet.TLRPC$Chat r2 = r7.currentChat
            boolean r1 = r0.canDeleteMessage(r1, r2)
            if (r1 == 0) goto L_0x1225
            java.util.ArrayList<org.telegram.messenger.MessageObject> r1 = r7.threadMessageObjects
            if (r1 == 0) goto L_0x06f6
            boolean r0 = r1.contains(r0)
            if (r0 != 0) goto L_0x1225
        L_0x06f6:
            java.lang.String r0 = org.telegram.messenger.LocaleController.getString(r4, r3)
            r13.add(r0)
            r0 = 1
            java.lang.Integer r1 = java.lang.Integer.valueOf(r0)
            r14.add(r1)
            org.telegram.messenger.MessageObject r0 = r7.selectedObject
            org.telegram.tgnet.TLRPC$Message r0 = r0.messageOwner
            int r0 = r0.ttl_period
            if (r0 == 0) goto L_0x0711
            r4 = 2131165734(0x7var_, float:1.7945693E38)
            goto L_0x0714
        L_0x0711:
            r4 = 2131165733(0x7var_, float:1.7945691E38)
        L_0x0714:
            java.lang.Integer r0 = java.lang.Integer.valueOf(r4)
            r12.add(r0)
            goto L_0x1225
        L_0x071d:
            r15 = 20
            if (r2 != r15) goto L_0x077e
            r0 = 2131627226(0x7f0e0cda, float:1.888171E38)
            java.lang.String r1 = "Retry"
            java.lang.String r0 = org.telegram.messenger.LocaleController.getString(r1, r0)
            r13.add(r0)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r10)
            r14.add(r0)
            r0 = 2131165806(0x7var_e, float:1.794584E38)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r12.add(r0)
            r0 = 2131624995(0x7f0e0423, float:1.8877185E38)
            java.lang.String r0 = org.telegram.messenger.LocaleController.getString(r9, r0)
            r13.add(r0)
            r0 = 3
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r14.add(r0)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r17)
            r12.add(r0)
            java.lang.String r0 = org.telegram.messenger.LocaleController.getString(r4, r3)
            r13.add(r0)
            r0 = 1
            java.lang.Integer r1 = java.lang.Integer.valueOf(r0)
            r14.add(r1)
            org.telegram.messenger.MessageObject r0 = r7.selectedObject
            org.telegram.tgnet.TLRPC$Message r0 = r0.messageOwner
            int r0 = r0.ttl_period
            if (r0 == 0) goto L_0x0772
            r4 = 2131165734(0x7var_, float:1.7945693E38)
            goto L_0x0775
        L_0x0772:
            r4 = 2131165733(0x7var_, float:1.7945691E38)
        L_0x0775:
            java.lang.Integer r0 = java.lang.Integer.valueOf(r4)
            r12.add(r0)
            goto L_0x1225
        L_0x077e:
            org.telegram.tgnet.TLRPC$EncryptedChat r15 = r7.currentEncryptedChat
            java.lang.String r3 = "SaveToDownloads"
            r24 = 2131165737(0x7var_, float:1.79457E38)
            r25 = 2131165819(0x7var_b, float:1.7945866E38)
            java.lang.String r10 = "ShareFile"
            if (r15 != 0) goto L_0x0var_
            int r15 = r7.chatMode
            r11 = 1
            if (r15 != r11) goto L_0x07b0
            r15 = 2131626130(0x7f0e0892, float:1.8879488E38)
            java.lang.String r11 = "MessageScheduleSend"
            java.lang.String r11 = org.telegram.messenger.LocaleController.getString(r11, r15)
            r13.add(r11)
            r11 = 100
            java.lang.Integer r11 = java.lang.Integer.valueOf(r11)
            r14.add(r11)
            r11 = 2131165883(0x7var_bb, float:1.7945996E38)
            java.lang.Integer r11 = java.lang.Integer.valueOf(r11)
            r12.add(r11)
        L_0x07b0:
            org.telegram.messenger.MessageObject r11 = r7.selectedObject
            org.telegram.tgnet.TLRPC$Message r11 = r11.messageOwner
            org.telegram.tgnet.TLRPC$MessageAction r11 = r11.action
            boolean r11 = r11 instanceof org.telegram.tgnet.TLRPC$TL_messageActionPhoneCall
            if (r11 == 0) goto L_0x081a
            org.telegram.tgnet.TLRPC$Message r11 = r0.messageOwner
            org.telegram.tgnet.TLRPC$MessageAction r11 = r11.action
            org.telegram.tgnet.TLRPC$TL_messageActionPhoneCall r11 = (org.telegram.tgnet.TLRPC$TL_messageActionPhoneCall) r11
            org.telegram.tgnet.TLRPC$PhoneCallDiscardReason r15 = r11.reason
            boolean r8 = r15 instanceof org.telegram.tgnet.TLRPC$TL_phoneCallDiscardReasonMissed
            if (r8 != 0) goto L_0x07ca
            boolean r8 = r15 instanceof org.telegram.tgnet.TLRPC$TL_phoneCallDiscardReasonBusy
            if (r8 == 0) goto L_0x07d6
        L_0x07ca:
            boolean r8 = r0.isOutOwner()
            if (r8 != 0) goto L_0x07d6
            r8 = 2131624607(0x7f0e029f, float:1.8876398E38)
            java.lang.String r15 = "CallBack"
            goto L_0x07db
        L_0x07d6:
            r8 = 2131624604(0x7f0e029c, float:1.8876392E38)
            java.lang.String r15 = "CallAgain"
        L_0x07db:
            java.lang.String r8 = org.telegram.messenger.LocaleController.getString(r15, r8)
            r13.add(r8)
            r8 = 18
            java.lang.Integer r8 = java.lang.Integer.valueOf(r8)
            r14.add(r8)
            r8 = 2131165723(0x7var_b, float:1.7945671E38)
            java.lang.Integer r8 = java.lang.Integer.valueOf(r8)
            r12.add(r8)
            boolean r8 = org.telegram.ui.Components.voip.VoIPHelper.canRateCall(r11)
            if (r8 == 0) goto L_0x081a
            r8 = 2131624614(0x7f0e02a6, float:1.8876413E38)
            java.lang.String r11 = "CallMessageReportProblem"
            java.lang.String r8 = org.telegram.messenger.LocaleController.getString(r11, r8)
            r13.add(r8)
            r8 = 19
            java.lang.Integer r8 = java.lang.Integer.valueOf(r8)
            r14.add(r8)
            r8 = 2131165744(0x7var_, float:1.7945714E38)
            java.lang.Integer r8 = java.lang.Integer.valueOf(r8)
            r12.add(r8)
        L_0x081a:
            if (r1 == 0) goto L_0x083b
            r1 = 2131627148(0x7f0e0c8c, float:1.8881552E38)
            java.lang.String r8 = "Reply"
            java.lang.String r1 = org.telegram.messenger.LocaleController.getString(r8, r1)
            r13.add(r1)
            r1 = 8
            java.lang.Integer r8 = java.lang.Integer.valueOf(r1)
            r14.add(r8)
            r1 = 2131165796(0x7var_, float:1.794582E38)
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)
            r12.add(r1)
        L_0x083b:
            org.telegram.messenger.MessageObject r1 = r7.selectedObject
            int r8 = r1.type
            if (r8 == 0) goto L_0x0859
            boolean r1 = r1.isDice()
            if (r1 != 0) goto L_0x0859
            org.telegram.messenger.MessageObject r1 = r7.selectedObject
            boolean r1 = r1.isAnimatedEmoji()
            if (r1 != 0) goto L_0x0859
            org.telegram.messenger.MessageObject r1 = r7.selectedObject
            org.telegram.messenger.MessageObject$GroupedMessages r8 = r7.selectedObjectGroup
            java.lang.CharSequence r1 = r7.getMessageCaption(r1, r8)
            if (r1 == 0) goto L_0x0872
        L_0x0859:
            r1 = 2131624995(0x7f0e0423, float:1.8877185E38)
            java.lang.String r8 = org.telegram.messenger.LocaleController.getString(r9, r1)
            r13.add(r8)
            r1 = 3
            java.lang.Integer r8 = java.lang.Integer.valueOf(r1)
            r14.add(r8)
            java.lang.Integer r1 = java.lang.Integer.valueOf(r17)
            r12.add(r1)
        L_0x0872:
            boolean r1 = r28.isThreadChat()
            if (r1 != 0) goto L_0x08ca
            int r1 = r7.chatMode
            r8 = 1
            if (r1 == r8) goto L_0x08ca
            org.telegram.tgnet.TLRPC$Chat r8 = r7.currentChat
            if (r8 == 0) goto L_0x08ca
            boolean r8 = r8.has_link
            if (r8 != 0) goto L_0x088b
            boolean r8 = r0.hasReplies()
            if (r8 == 0) goto L_0x08ca
        L_0x088b:
            org.telegram.tgnet.TLRPC$Chat r8 = r7.currentChat
            boolean r8 = r8.megagroup
            if (r8 == 0) goto L_0x08ca
            boolean r8 = r0.canViewThread()
            if (r8 == 0) goto L_0x08ca
            boolean r8 = r0.hasReplies()
            if (r8 == 0) goto L_0x08ab
            int r8 = r0.getRepliesCount()
            java.lang.String r11 = "ViewReplies"
            java.lang.String r8 = org.telegram.messenger.LocaleController.formatPluralString(r11, r8)
            r13.add(r8)
            goto L_0x08b7
        L_0x08ab:
            r8 = 2131627980(0x7f0e0fcc, float:1.888324E38)
            java.lang.String r11 = "ViewThread"
            java.lang.String r8 = org.telegram.messenger.LocaleController.getString(r11, r8)
            r13.add(r8)
        L_0x08b7:
            r8 = 27
            java.lang.Integer r8 = java.lang.Integer.valueOf(r8)
            r14.add(r8)
            r8 = 2131165840(0x7var_, float:1.7945908E38)
            java.lang.Integer r8 = java.lang.Integer.valueOf(r8)
            r12.add(r8)
        L_0x08ca:
            int r8 = r7.chatMode
            r1 = 1
            if (r8 == r1) goto L_0x0904
            org.telegram.tgnet.TLRPC$Chat r8 = r7.currentChat
            boolean r8 = org.telegram.messenger.ChatObject.isChannel(r8)
            if (r8 == 0) goto L_0x0904
            org.telegram.messenger.MessageObject r8 = r7.selectedObject
            long r26 = r8.getDialogId()
            r8 = r2
            long r1 = r7.mergeDialogId
            int r11 = (r26 > r1 ? 1 : (r26 == r1 ? 0 : -1))
            if (r11 == 0) goto L_0x0905
            r1 = 2131624997(0x7f0e0425, float:1.887719E38)
            java.lang.String r2 = "CopyLink"
            java.lang.String r1 = org.telegram.messenger.LocaleController.getString(r2, r1)
            r13.add(r1)
            r1 = 22
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)
            r14.add(r1)
            r1 = 2131165759(0x7var_f, float:1.7945744E38)
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)
            r12.add(r1)
            goto L_0x0905
        L_0x0904:
            r8 = r2
        L_0x0905:
            r1 = 2
            if (r8 != r1) goto L_0x09f2
            int r1 = r7.chatMode
            r2 = 1
            if (r1 == r2) goto L_0x0deb
            org.telegram.messenger.MessageObject r2 = r7.selectedObject
            int r2 = r2.type
            r8 = 17
            if (r2 != r8) goto L_0x09a8
            boolean r2 = r0.isPollClosed()
            if (r2 != 0) goto L_0x09a8
            boolean r2 = r0.canUnvote()
            if (r2 == 0) goto L_0x0940
            r2 = 2131627820(0x7f0e0f2c, float:1.8882915E38)
            java.lang.String r3 = "Unvote"
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r3, r2)
            r13.add(r2)
            r2 = 25
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r14.add(r2)
            r2 = 2131165836(0x7var_c, float:1.79459E38)
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r12.add(r2)
        L_0x0940:
            boolean r2 = r0.isForwarded()
            if (r2 != 0) goto L_0x0deb
            boolean r2 = r0.isOut()
            if (r2 == 0) goto L_0x095a
            org.telegram.tgnet.TLRPC$Chat r2 = r7.currentChat
            boolean r2 = org.telegram.messenger.ChatObject.isChannel(r2)
            if (r2 == 0) goto L_0x0974
            org.telegram.tgnet.TLRPC$Chat r2 = r7.currentChat
            boolean r2 = r2.megagroup
            if (r2 != 0) goto L_0x0974
        L_0x095a:
            org.telegram.tgnet.TLRPC$Chat r2 = r7.currentChat
            boolean r2 = org.telegram.messenger.ChatObject.isChannel(r2)
            if (r2 == 0) goto L_0x0deb
            org.telegram.tgnet.TLRPC$Chat r2 = r7.currentChat
            boolean r3 = r2.megagroup
            if (r3 != 0) goto L_0x0deb
            boolean r3 = r2.creator
            if (r3 != 0) goto L_0x0974
            org.telegram.tgnet.TLRPC$TL_chatAdminRights r2 = r2.admin_rights
            if (r2 == 0) goto L_0x0deb
            boolean r2 = r2.edit_messages
            if (r2 == 0) goto L_0x0deb
        L_0x0974:
            boolean r2 = r0.isQuiz()
            if (r2 == 0) goto L_0x0987
            r2 = 2131627590(0x7f0e0e46, float:1.8882449E38)
            java.lang.String r3 = "StopQuiz"
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r3, r2)
            r13.add(r2)
            goto L_0x0993
        L_0x0987:
            r2 = 2131627587(0x7f0e0e43, float:1.8882443E38)
            java.lang.String r3 = "StopPoll"
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r3, r2)
            r13.add(r2)
        L_0x0993:
            r2 = 26
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r14.add(r2)
            r2 = 2131165790(0x7var_e, float:1.7945807E38)
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r12.add(r2)
            goto L_0x0deb
        L_0x09a8:
            org.telegram.messenger.MessageObject r2 = r7.selectedObject
            boolean r2 = r2.isMusic()
            if (r2 == 0) goto L_0x09ce
            r2 = 2131627251(0x7f0e0cf3, float:1.8881761E38)
            java.lang.String r3 = "SaveToMusic"
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r3, r2)
            r13.add(r2)
            r2 = 10
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r14.add(r2)
            java.lang.Integer r2 = java.lang.Integer.valueOf(r24)
            r12.add(r2)
            goto L_0x0deb
        L_0x09ce:
            r2 = 10
            org.telegram.messenger.MessageObject r8 = r7.selectedObject
            boolean r8 = r8.isDocument()
            if (r8 == 0) goto L_0x0deb
            r8 = 2131627247(0x7f0e0cef, float:1.8881753E38)
            java.lang.String r3 = org.telegram.messenger.LocaleController.getString(r3, r8)
            r13.add(r3)
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r14.add(r2)
            java.lang.Integer r2 = java.lang.Integer.valueOf(r24)
            r12.add(r2)
            goto L_0x0deb
        L_0x09f2:
            r2 = 3
            if (r8 != r2) goto L_0x0a2a
            org.telegram.messenger.MessageObject r2 = r7.selectedObject
            org.telegram.tgnet.TLRPC$Message r2 = r2.messageOwner
            org.telegram.tgnet.TLRPC$MessageMedia r2 = r2.media
            boolean r3 = r2 instanceof org.telegram.tgnet.TLRPC$TL_messageMediaWebPage
            if (r3 == 0) goto L_0x0deb
            org.telegram.tgnet.TLRPC$WebPage r2 = r2.webpage
            org.telegram.tgnet.TLRPC$Document r2 = r2.document
            boolean r2 = org.telegram.messenger.MessageObject.isNewGifDocument((org.telegram.tgnet.TLRPC$Document) r2)
            if (r2 == 0) goto L_0x0deb
            r2 = 2131627248(0x7f0e0cf0, float:1.8881755E38)
            java.lang.String r3 = "SaveToGIFs"
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r3, r2)
            r13.add(r2)
            r2 = 11
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r14.add(r2)
            r2 = 2131165747(0x7var_, float:1.794572E38)
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r12.add(r2)
            goto L_0x0deb
        L_0x0a2a:
            r2 = 4
            if (r8 != r2) goto L_0x0b44
            org.telegram.messenger.MessageObject r8 = r7.selectedObject
            boolean r8 = r8.isVideo()
            if (r8 == 0) goto L_0x0a75
            org.telegram.messenger.MessageObject r3 = r7.selectedObject
            boolean r3 = r3.needDrawBluredPreview()
            if (r3 != 0) goto L_0x0deb
            r3 = 2131627249(0x7f0e0cf1, float:1.8881757E38)
            java.lang.String r8 = "SaveToGallery"
            java.lang.String r3 = org.telegram.messenger.LocaleController.getString(r8, r3)
            r13.add(r3)
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r14.add(r2)
            r2 = 2131165746(0x7var_, float:1.7945718E38)
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r12.add(r2)
            r2 = 2131627427(0x7f0e0da3, float:1.8882118E38)
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r10, r2)
            r13.add(r2)
            r2 = 6
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r14.add(r2)
            java.lang.Integer r2 = java.lang.Integer.valueOf(r25)
            r12.add(r2)
            goto L_0x0deb
        L_0x0a75:
            org.telegram.messenger.MessageObject r2 = r7.selectedObject
            boolean r2 = r2.isMusic()
            if (r2 == 0) goto L_0x0ab4
            r2 = 2131627251(0x7f0e0cf3, float:1.8881761E38)
            java.lang.String r3 = "SaveToMusic"
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r3, r2)
            r13.add(r2)
            r2 = 10
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r14.add(r2)
            java.lang.Integer r2 = java.lang.Integer.valueOf(r24)
            r12.add(r2)
            r2 = 2131627427(0x7f0e0da3, float:1.8882118E38)
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r10, r2)
            r13.add(r2)
            r2 = 6
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r14.add(r2)
            java.lang.Integer r2 = java.lang.Integer.valueOf(r25)
            r12.add(r2)
            goto L_0x0deb
        L_0x0ab4:
            org.telegram.messenger.MessageObject r2 = r7.selectedObject
            org.telegram.tgnet.TLRPC$Document r2 = r2.getDocument()
            if (r2 == 0) goto L_0x0b1c
            org.telegram.messenger.MessageObject r2 = r7.selectedObject
            org.telegram.tgnet.TLRPC$Document r2 = r2.getDocument()
            boolean r2 = org.telegram.messenger.MessageObject.isNewGifDocument((org.telegram.tgnet.TLRPC$Document) r2)
            if (r2 == 0) goto L_0x0ae7
            r2 = 2131627248(0x7f0e0cf0, float:1.8881755E38)
            java.lang.String r8 = "SaveToGIFs"
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r8, r2)
            r13.add(r2)
            r2 = 11
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r14.add(r2)
            r2 = 2131165747(0x7var_, float:1.794572E38)
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r12.add(r2)
        L_0x0ae7:
            r2 = 2131627247(0x7f0e0cef, float:1.8881753E38)
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r3, r2)
            r13.add(r2)
            r2 = 10
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r14.add(r2)
            java.lang.Integer r2 = java.lang.Integer.valueOf(r24)
            r12.add(r2)
            r2 = 2131627427(0x7f0e0da3, float:1.8882118E38)
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r10, r2)
            r13.add(r2)
            r2 = 6
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r14.add(r2)
            java.lang.Integer r2 = java.lang.Integer.valueOf(r25)
            r12.add(r2)
            goto L_0x0deb
        L_0x0b1c:
            org.telegram.messenger.MessageObject r2 = r7.selectedObject
            boolean r2 = r2.needDrawBluredPreview()
            if (r2 != 0) goto L_0x0deb
            r2 = 2131627249(0x7f0e0cf1, float:1.8881757E38)
            java.lang.String r3 = "SaveToGallery"
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r3, r2)
            r13.add(r2)
            r2 = 4
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r14.add(r2)
            r2 = 2131165746(0x7var_, float:1.7945718E38)
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r12.add(r2)
            goto L_0x0deb
        L_0x0b44:
            r2 = 5
            if (r8 != r2) goto L_0x0b99
            r8 = 2131624285(0x7f0e015d, float:1.8875745E38)
            java.lang.String r9 = "ApplyLocalizationFile"
            java.lang.String r8 = org.telegram.messenger.LocaleController.getString(r9, r8)
            r13.add(r8)
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r14.add(r2)
            r2 = 2131165757(0x7var_d, float:1.794574E38)
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r12.add(r2)
            r2 = 2131627247(0x7f0e0cef, float:1.8881753E38)
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r3, r2)
            r13.add(r2)
            r2 = 10
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r14.add(r2)
            java.lang.Integer r2 = java.lang.Integer.valueOf(r24)
            r12.add(r2)
            r2 = 2131627427(0x7f0e0da3, float:1.8882118E38)
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r10, r2)
            r13.add(r2)
            r2 = 6
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r14.add(r2)
            java.lang.Integer r2 = java.lang.Integer.valueOf(r25)
            r12.add(r2)
            goto L_0x0deb
        L_0x0b99:
            r2 = 10
            if (r8 != r2) goto L_0x0bf0
            r2 = 2131624287(0x7f0e015f, float:1.887575E38)
            java.lang.String r8 = "ApplyThemeFile"
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r8, r2)
            r13.add(r2)
            r2 = 5
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r14.add(r2)
            r2 = 2131165829(0x7var_, float:1.7945886E38)
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r12.add(r2)
            r2 = 2131627247(0x7f0e0cef, float:1.8881753E38)
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r3, r2)
            r13.add(r2)
            r2 = 10
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r14.add(r2)
            java.lang.Integer r2 = java.lang.Integer.valueOf(r24)
            r12.add(r2)
            r2 = 2131627427(0x7f0e0da3, float:1.8882118E38)
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r10, r2)
            r13.add(r2)
            r2 = 6
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r14.add(r2)
            java.lang.Integer r2 = java.lang.Integer.valueOf(r25)
            r12.add(r2)
            goto L_0x0deb
        L_0x0bf0:
            r2 = 6
            if (r8 != r2) goto L_0x0CLASSNAME
            r2 = 2131627249(0x7f0e0cf1, float:1.8881757E38)
            java.lang.String r8 = "SaveToGallery"
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r8, r2)
            r13.add(r2)
            r2 = 7
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r14.add(r2)
            r2 = 2131165746(0x7var_, float:1.7945718E38)
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r12.add(r2)
            r2 = 2131627247(0x7f0e0cef, float:1.8881753E38)
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r3, r2)
            r13.add(r2)
            r2 = 10
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r14.add(r2)
            java.lang.Integer r2 = java.lang.Integer.valueOf(r24)
            r12.add(r2)
            r2 = 2131627427(0x7f0e0da3, float:1.8882118E38)
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r10, r2)
            r13.add(r2)
            r2 = 6
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r14.add(r2)
            java.lang.Integer r2 = java.lang.Integer.valueOf(r25)
            r12.add(r2)
            goto L_0x0deb
        L_0x0CLASSNAME:
            r2 = 7
            if (r8 != r2) goto L_0x0cf3
            org.telegram.messenger.MessageObject r2 = r7.selectedObject
            boolean r2 = r2.isMask()
            if (r2 == 0) goto L_0x0CLASSNAME
            r2 = 2131624226(0x7f0e0122, float:1.8875626E38)
            java.lang.String r3 = "AddToMasks"
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r3, r2)
            r13.add(r2)
            r2 = 9
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r14.add(r2)
            r2 = 2131165822(0x7var_e, float:1.7945872E38)
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r12.add(r2)
            goto L_0x0deb
        L_0x0CLASSNAME:
            r2 = 2131624227(0x7f0e0123, float:1.8875628E38)
            java.lang.String r3 = "AddToStickers"
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r3, r2)
            r13.add(r2)
            r2 = 9
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r14.add(r2)
            r2 = 2131165822(0x7var_e, float:1.7945872E38)
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r12.add(r2)
            org.telegram.messenger.MessageObject r2 = r7.selectedObject
            org.telegram.tgnet.TLRPC$Document r2 = r2.getDocument()
            org.telegram.messenger.MediaDataController r3 = r28.getMediaDataController()
            boolean r3 = r3.isStickerInFavorites(r2)
            if (r3 != 0) goto L_0x0cd2
            org.telegram.messenger.MediaDataController r3 = r28.getMediaDataController()
            boolean r3 = r3.canAddStickerToFavorites()
            if (r3 == 0) goto L_0x0deb
            boolean r2 = org.telegram.messenger.MessageObject.isStickerHasSet(r2)
            if (r2 == 0) goto L_0x0deb
            r2 = 2131624225(0x7f0e0121, float:1.8875624E38)
            java.lang.String r3 = "AddToFavorites"
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r3, r2)
            r13.add(r2)
            r2 = 20
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r14.add(r2)
            r2 = 2131165744(0x7var_, float:1.7945714E38)
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r12.add(r2)
            goto L_0x0deb
        L_0x0cd2:
            r2 = 2131625123(0x7f0e04a3, float:1.8877445E38)
            java.lang.String r3 = "DeleteFromFavorites"
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r3, r2)
            r13.add(r2)
            r2 = 21
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r14.add(r2)
            r2 = 2131165833(0x7var_, float:1.7945894E38)
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r12.add(r2)
            goto L_0x0deb
        L_0x0cf3:
            r2 = 8
            if (r8 != r2) goto L_0x0d92
            org.telegram.messenger.MessagesController r2 = r28.getMessagesController()
            org.telegram.messenger.MessageObject r3 = r7.selectedObject
            org.telegram.tgnet.TLRPC$Message r3 = r3.messageOwner
            org.telegram.tgnet.TLRPC$MessageMedia r3 = r3.media
            int r3 = r3.user_id
            java.lang.Integer r3 = java.lang.Integer.valueOf(r3)
            org.telegram.tgnet.TLRPC$User r2 = r2.getUser(r3)
            if (r2 == 0) goto L_0x0d4a
            int r3 = r2.id
            org.telegram.messenger.UserConfig r8 = r28.getUserConfig()
            int r8 = r8.getClientUserId()
            if (r3 == r8) goto L_0x0d4a
            org.telegram.messenger.ContactsController r3 = r28.getContactsController()
            j$.util.concurrent.ConcurrentHashMap<java.lang.Integer, org.telegram.tgnet.TLRPC$TL_contact> r3 = r3.contactsDict
            int r2 = r2.id
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            java.lang.Object r2 = r3.get(r2)
            if (r2 != 0) goto L_0x0d4a
            r2 = 2131624198(0x7f0e0106, float:1.8875569E38)
            java.lang.String r3 = "AddContactTitle"
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r3, r2)
            r13.add(r2)
            r2 = 15
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r14.add(r2)
            r2 = 2131165712(0x7var_, float:1.7945649E38)
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r12.add(r2)
        L_0x0d4a:
            org.telegram.messenger.MessageObject r2 = r7.selectedObject
            org.telegram.tgnet.TLRPC$Message r2 = r2.messageOwner
            org.telegram.tgnet.TLRPC$MessageMedia r2 = r2.media
            java.lang.String r2 = r2.phone_number
            boolean r2 = android.text.TextUtils.isEmpty(r2)
            if (r2 != 0) goto L_0x0deb
            r2 = 2131624995(0x7f0e0423, float:1.8877185E38)
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r9, r2)
            r13.add(r2)
            r2 = 16
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r14.add(r2)
            java.lang.Integer r2 = java.lang.Integer.valueOf(r17)
            r12.add(r2)
            r2 = 2131624603(0x7f0e029b, float:1.887639E38)
            java.lang.String r3 = "Call"
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r3, r2)
            r13.add(r2)
            r2 = 17
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r14.add(r2)
            r2 = 2131165723(0x7var_b, float:1.7945671E38)
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r12.add(r2)
            goto L_0x0deb
        L_0x0d92:
            r2 = 9
            if (r8 != r2) goto L_0x0deb
            org.telegram.messenger.MessageObject r2 = r7.selectedObject
            org.telegram.tgnet.TLRPC$Document r2 = r2.getDocument()
            org.telegram.messenger.MediaDataController r3 = r28.getMediaDataController()
            boolean r3 = r3.isStickerInFavorites(r2)
            if (r3 != 0) goto L_0x0dcc
            boolean r2 = org.telegram.messenger.MessageObject.isStickerHasSet(r2)
            if (r2 == 0) goto L_0x0deb
            r2 = 2131624225(0x7f0e0121, float:1.8875624E38)
            java.lang.String r3 = "AddToFavorites"
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r3, r2)
            r13.add(r2)
            r2 = 20
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r14.add(r2)
            r2 = 2131165744(0x7var_, float:1.7945714E38)
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r12.add(r2)
            goto L_0x0deb
        L_0x0dcc:
            r2 = 2131625123(0x7f0e04a3, float:1.8877445E38)
            java.lang.String r3 = "DeleteFromFavorites"
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r3, r2)
            r13.add(r2)
            r2 = 21
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r14.add(r2)
            r2 = 2131165833(0x7var_, float:1.7945894E38)
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r12.add(r2)
        L_0x0deb:
            int r2 = r7.chatMode
            r1 = 1
            if (r2 == r1) goto L_0x0e26
            org.telegram.messenger.MessageObject r1 = r7.selectedObject
            boolean r1 = r1.needDrawBluredPreview()
            if (r1 != 0) goto L_0x0e26
            org.telegram.messenger.MessageObject r1 = r7.selectedObject
            boolean r1 = r1.isLiveLocation()
            if (r1 != 0) goto L_0x0e26
            org.telegram.messenger.MessageObject r1 = r7.selectedObject
            int r1 = r1.type
            r2 = 16
            if (r1 == r2) goto L_0x0e26
            r1 = 2131625572(0x7f0e0664, float:1.8878356E38)
            java.lang.String r2 = "Forward"
            java.lang.String r1 = org.telegram.messenger.LocaleController.getString(r2, r1)
            r13.add(r1)
            r1 = 2
            java.lang.Integer r2 = java.lang.Integer.valueOf(r1)
            r14.add(r2)
            r1 = 2131165745(0x7var_, float:1.7945716E38)
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)
            r12.add(r1)
        L_0x0e26:
            if (r6 == 0) goto L_0x0e48
            r1 = 2131627814(0x7f0e0var_, float:1.8882903E38)
            java.lang.String r2 = "UnpinMessage"
            java.lang.String r1 = org.telegram.messenger.LocaleController.getString(r2, r1)
            r13.add(r1)
            r1 = 14
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)
            r14.add(r1)
            r1 = 2131165835(0x7var_b, float:1.7945898E38)
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)
            r12.add(r1)
            goto L_0x0e69
        L_0x0e48:
            if (r5 == 0) goto L_0x0e69
            r1 = 2131626931(0x7f0e0bb3, float:1.8881112E38)
            java.lang.String r2 = "PinMessage"
            java.lang.String r1 = org.telegram.messenger.LocaleController.getString(r2, r1)
            r13.add(r1)
            r1 = 13
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)
            r14.add(r1)
            r1 = 2131165788(0x7var_c, float:1.7945803E38)
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)
            r12.add(r1)
        L_0x0e69:
            if (r30 == 0) goto L_0x0e8a
            r1 = 2131625214(0x7f0e04fe, float:1.887763E38)
            java.lang.String r2 = "Edit"
            java.lang.String r1 = org.telegram.messenger.LocaleController.getString(r2, r1)
            r13.add(r1)
            r1 = 12
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)
            r14.add(r1)
            r1 = 2131165742(0x7var_e, float:1.794571E38)
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)
            r12.add(r1)
        L_0x0e8a:
            int r1 = r7.chatMode
            r2 = 1
            if (r1 != r2) goto L_0x0eb8
            org.telegram.messenger.MessageObject r1 = r7.selectedObject
            org.telegram.tgnet.TLRPC$Chat r2 = r7.currentChat
            boolean r1 = r1.canEditMessageScheduleTime(r2)
            if (r1 == 0) goto L_0x0eb8
            r1 = 2131626129(0x7f0e0891, float:1.8879485E38)
            java.lang.String r2 = "MessageScheduleEditTime"
            java.lang.String r1 = org.telegram.messenger.LocaleController.getString(r2, r1)
            r13.add(r1)
            r1 = 102(0x66, float:1.43E-43)
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)
            r14.add(r1)
            r1 = 2131165814(0x7var_, float:1.7945856E38)
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)
            r12.add(r1)
        L_0x0eb8:
            int r1 = r7.chatMode
            r2 = 1
            if (r1 == r2) goto L_0x0var_
            org.telegram.messenger.MessageObject r1 = r7.selectedObject
            int r2 = r1.contentType
            if (r2 != 0) goto L_0x0var_
            int r1 = r1.getId()
            if (r1 <= 0) goto L_0x0var_
            org.telegram.messenger.MessageObject r1 = r7.selectedObject
            boolean r1 = r1.isOut()
            if (r1 != 0) goto L_0x0var_
            org.telegram.tgnet.TLRPC$Chat r1 = r7.currentChat
            if (r1 != 0) goto L_0x0edd
            org.telegram.tgnet.TLRPC$User r1 = r7.currentUser
            if (r1 == 0) goto L_0x0var_
            boolean r1 = r1.bot
            if (r1 == 0) goto L_0x0var_
        L_0x0edd:
            org.telegram.tgnet.TLRPC$User r1 = r7.currentUser
            boolean r1 = org.telegram.messenger.UserObject.isReplyUser((org.telegram.tgnet.TLRPC$User) r1)
            if (r1 == 0) goto L_0x0var_
            r1 = 2131624546(0x7f0e0262, float:1.8876275E38)
            java.lang.String r2 = "BlockContact"
            java.lang.String r1 = org.telegram.messenger.LocaleController.getString(r2, r1)
            r13.add(r1)
            r1 = 23
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)
            r14.add(r1)
            r1 = 2131165721(0x7var_, float:1.7945667E38)
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)
            r12.add(r1)
            goto L_0x0var_
        L_0x0var_:
            r1 = 2131627151(0x7f0e0c8f, float:1.8881558E38)
            java.lang.String r2 = "ReportChat"
            java.lang.String r1 = org.telegram.messenger.LocaleController.getString(r2, r1)
            r13.add(r1)
            r1 = 23
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)
            r14.add(r1)
            r1 = 2131165798(0x7var_, float:1.7945823E38)
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)
            r12.add(r1)
        L_0x0var_:
            int r1 = r7.chatMode
            r2 = 1
            if (r1 != r2) goto L_0x0f2b
            r1 = 1
            goto L_0x0f2c
        L_0x0f2b:
            r1 = 0
        L_0x0f2c:
            org.telegram.tgnet.TLRPC$Chat r2 = r7.currentChat
            boolean r1 = r0.canDeleteMessage(r1, r2)
            if (r1 == 0) goto L_0x1225
            java.util.ArrayList<org.telegram.messenger.MessageObject> r1 = r7.threadMessageObjects
            if (r1 == 0) goto L_0x0f3e
            boolean r0 = r1.contains(r0)
            if (r0 != 0) goto L_0x1225
        L_0x0f3e:
            r0 = 2131625090(0x7f0e0482, float:1.8877378E38)
            java.lang.String r0 = org.telegram.messenger.LocaleController.getString(r4, r0)
            r13.add(r0)
            r0 = 1
            java.lang.Integer r1 = java.lang.Integer.valueOf(r0)
            r14.add(r1)
            org.telegram.messenger.MessageObject r0 = r7.selectedObject
            org.telegram.tgnet.TLRPC$Message r0 = r0.messageOwner
            int r0 = r0.ttl_period
            if (r0 == 0) goto L_0x0f5c
            r4 = 2131165734(0x7var_, float:1.7945693E38)
            goto L_0x0f5f
        L_0x0f5c:
            r4 = 2131165733(0x7var_, float:1.7945691E38)
        L_0x0f5f:
            java.lang.Integer r0 = java.lang.Integer.valueOf(r4)
            r12.add(r0)
            goto L_0x1225
        L_0x0var_:
            r8 = r2
            if (r1 == 0) goto L_0x0f8a
            r1 = 2131627148(0x7f0e0c8c, float:1.8881552E38)
            java.lang.String r5 = "Reply"
            java.lang.String r1 = org.telegram.messenger.LocaleController.getString(r5, r1)
            r13.add(r1)
            r1 = 8
            java.lang.Integer r5 = java.lang.Integer.valueOf(r1)
            r14.add(r5)
            r1 = 2131165796(0x7var_, float:1.794582E38)
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)
            r12.add(r1)
        L_0x0f8a:
            org.telegram.messenger.MessageObject r1 = r7.selectedObject
            int r5 = r1.type
            if (r5 == 0) goto L_0x0fa0
            boolean r1 = r1.isAnimatedEmoji()
            if (r1 != 0) goto L_0x0fa0
            org.telegram.messenger.MessageObject r1 = r7.selectedObject
            org.telegram.messenger.MessageObject$GroupedMessages r5 = r7.selectedObjectGroup
            java.lang.CharSequence r1 = r7.getMessageCaption(r1, r5)
            if (r1 == 0) goto L_0x0fb9
        L_0x0fa0:
            r1 = 2131624995(0x7f0e0423, float:1.8877185E38)
            java.lang.String r5 = org.telegram.messenger.LocaleController.getString(r9, r1)
            r13.add(r5)
            r1 = 3
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)
            r14.add(r1)
            java.lang.Integer r1 = java.lang.Integer.valueOf(r17)
            r12.add(r1)
        L_0x0fb9:
            boolean r1 = r28.isThreadChat()
            if (r1 != 0) goto L_0x1011
            int r1 = r7.chatMode
            r2 = 1
            if (r1 == r2) goto L_0x1011
            org.telegram.tgnet.TLRPC$Chat r2 = r7.currentChat
            if (r2 == 0) goto L_0x1011
            boolean r2 = r2.has_link
            if (r2 != 0) goto L_0x0fd2
            boolean r2 = r0.hasReplies()
            if (r2 == 0) goto L_0x1011
        L_0x0fd2:
            org.telegram.tgnet.TLRPC$Chat r2 = r7.currentChat
            boolean r2 = r2.megagroup
            if (r2 == 0) goto L_0x1011
            boolean r2 = r0.canViewThread()
            if (r2 == 0) goto L_0x1011
            boolean r2 = r0.hasReplies()
            if (r2 == 0) goto L_0x0ff2
            int r0 = r0.getRepliesCount()
            java.lang.String r2 = "ViewReplies"
            java.lang.String r0 = org.telegram.messenger.LocaleController.formatPluralString(r2, r0)
            r13.add(r0)
            goto L_0x0ffe
        L_0x0ff2:
            r0 = 2131627980(0x7f0e0fcc, float:1.888324E38)
            java.lang.String r2 = "ViewThread"
            java.lang.String r0 = org.telegram.messenger.LocaleController.getString(r2, r0)
            r13.add(r0)
        L_0x0ffe:
            r0 = 27
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r14.add(r0)
            r0 = 2131165840(0x7var_, float:1.7945908E38)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r12.add(r0)
        L_0x1011:
            r0 = 4
            if (r8 != r0) goto L_0x10f6
            org.telegram.messenger.MessageObject r2 = r7.selectedObject
            boolean r2 = r2.isVideo()
            if (r2 == 0) goto L_0x1054
            r2 = 2131627249(0x7f0e0cf1, float:1.8881757E38)
            java.lang.String r3 = "SaveToGallery"
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r3, r2)
            r13.add(r2)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r14.add(r0)
            r0 = 2131165746(0x7var_, float:1.7945718E38)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r12.add(r0)
            r0 = 2131627427(0x7f0e0da3, float:1.8882118E38)
            java.lang.String r0 = org.telegram.messenger.LocaleController.getString(r10, r0)
            r13.add(r0)
            r0 = 6
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r14.add(r0)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r25)
            r12.add(r0)
            goto L_0x1116
        L_0x1054:
            org.telegram.messenger.MessageObject r0 = r7.selectedObject
            boolean r0 = r0.isMusic()
            if (r0 == 0) goto L_0x1093
            r0 = 2131627251(0x7f0e0cf3, float:1.8881761E38)
            java.lang.String r2 = "SaveToMusic"
            java.lang.String r0 = org.telegram.messenger.LocaleController.getString(r2, r0)
            r13.add(r0)
            r0 = 10
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r14.add(r0)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r24)
            r12.add(r0)
            r0 = 2131627427(0x7f0e0da3, float:1.8882118E38)
            java.lang.String r0 = org.telegram.messenger.LocaleController.getString(r10, r0)
            r13.add(r0)
            r0 = 6
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r14.add(r0)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r25)
            r12.add(r0)
            goto L_0x1116
        L_0x1093:
            org.telegram.messenger.MessageObject r0 = r7.selectedObject
            boolean r0 = r0.isVideo()
            if (r0 != 0) goto L_0x10d7
            org.telegram.messenger.MessageObject r0 = r7.selectedObject
            org.telegram.tgnet.TLRPC$Document r0 = r0.getDocument()
            if (r0 == 0) goto L_0x10d7
            r0 = 2131627247(0x7f0e0cef, float:1.8881753E38)
            java.lang.String r0 = org.telegram.messenger.LocaleController.getString(r3, r0)
            r13.add(r0)
            r0 = 10
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r14.add(r0)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r24)
            r12.add(r0)
            r0 = 2131627427(0x7f0e0da3, float:1.8882118E38)
            java.lang.String r0 = org.telegram.messenger.LocaleController.getString(r10, r0)
            r13.add(r0)
            r0 = 6
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r14.add(r0)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r25)
            r12.add(r0)
            goto L_0x1116
        L_0x10d7:
            r0 = 2131627249(0x7f0e0cf1, float:1.8881757E38)
            java.lang.String r2 = "SaveToGallery"
            java.lang.String r0 = org.telegram.messenger.LocaleController.getString(r2, r0)
            r13.add(r0)
            r0 = 4
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r14.add(r0)
            r0 = 2131165746(0x7var_, float:1.7945718E38)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r12.add(r0)
            goto L_0x1116
        L_0x10f6:
            r0 = 5
            if (r8 != r0) goto L_0x111b
            r2 = 2131624285(0x7f0e015d, float:1.8875745E38)
            java.lang.String r3 = "ApplyLocalizationFile"
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r3, r2)
            r13.add(r2)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r14.add(r0)
            r0 = 2131165757(0x7var_d, float:1.794574E38)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r12.add(r0)
        L_0x1116:
            r0 = 2131625090(0x7f0e0482, float:1.8877378E38)
            goto L_0x1200
        L_0x111b:
            r2 = 10
            if (r8 != r2) goto L_0x113d
            r2 = 2131624287(0x7f0e015f, float:1.887575E38)
            java.lang.String r3 = "ApplyThemeFile"
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r3, r2)
            r13.add(r2)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r14.add(r0)
            r0 = 2131165829(0x7var_, float:1.7945886E38)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r12.add(r0)
            goto L_0x1116
        L_0x113d:
            r0 = 7
            if (r8 != r0) goto L_0x1160
            r0 = 2131624227(0x7f0e0123, float:1.8875628E38)
            java.lang.String r2 = "AddToStickers"
            java.lang.String r0 = org.telegram.messenger.LocaleController.getString(r2, r0)
            r13.add(r0)
            r0 = 9
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r14.add(r0)
            r0 = 2131165822(0x7var_e, float:1.7945872E38)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r12.add(r0)
            goto L_0x1116
        L_0x1160:
            r0 = 8
            if (r8 != r0) goto L_0x1116
            org.telegram.messenger.MessagesController r0 = r28.getMessagesController()
            org.telegram.messenger.MessageObject r2 = r7.selectedObject
            org.telegram.tgnet.TLRPC$Message r2 = r2.messageOwner
            org.telegram.tgnet.TLRPC$MessageMedia r2 = r2.media
            int r2 = r2.user_id
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            org.telegram.tgnet.TLRPC$User r0 = r0.getUser(r2)
            if (r0 == 0) goto L_0x11b7
            int r2 = r0.id
            org.telegram.messenger.UserConfig r3 = r28.getUserConfig()
            int r3 = r3.getClientUserId()
            if (r2 == r3) goto L_0x11b7
            org.telegram.messenger.ContactsController r2 = r28.getContactsController()
            j$.util.concurrent.ConcurrentHashMap<java.lang.Integer, org.telegram.tgnet.TLRPC$TL_contact> r2 = r2.contactsDict
            int r0 = r0.id
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            java.lang.Object r0 = r2.get(r0)
            if (r0 != 0) goto L_0x11b7
            r0 = 2131624198(0x7f0e0106, float:1.8875569E38)
            java.lang.String r2 = "AddContactTitle"
            java.lang.String r0 = org.telegram.messenger.LocaleController.getString(r2, r0)
            r13.add(r0)
            r0 = 15
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r14.add(r0)
            r0 = 2131165712(0x7var_, float:1.7945649E38)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r12.add(r0)
        L_0x11b7:
            org.telegram.messenger.MessageObject r0 = r7.selectedObject
            org.telegram.tgnet.TLRPC$Message r0 = r0.messageOwner
            org.telegram.tgnet.TLRPC$MessageMedia r0 = r0.media
            java.lang.String r0 = r0.phone_number
            boolean r0 = android.text.TextUtils.isEmpty(r0)
            if (r0 != 0) goto L_0x1116
            r0 = 2131624995(0x7f0e0423, float:1.8877185E38)
            java.lang.String r0 = org.telegram.messenger.LocaleController.getString(r9, r0)
            r13.add(r0)
            r0 = 16
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r14.add(r0)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r17)
            r12.add(r0)
            r0 = 2131624603(0x7f0e029b, float:1.887639E38)
            java.lang.String r2 = "Call"
            java.lang.String r0 = org.telegram.messenger.LocaleController.getString(r2, r0)
            r13.add(r0)
            r0 = 17
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r14.add(r0)
            r0 = 2131165723(0x7var_b, float:1.7945671E38)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r12.add(r0)
            goto L_0x1116
        L_0x1200:
            java.lang.String r0 = org.telegram.messenger.LocaleController.getString(r4, r0)
            r13.add(r0)
            r0 = 1
            java.lang.Integer r1 = java.lang.Integer.valueOf(r0)
            r14.add(r1)
            org.telegram.messenger.MessageObject r0 = r7.selectedObject
            org.telegram.tgnet.TLRPC$Message r0 = r0.messageOwner
            int r0 = r0.ttl_period
            if (r0 == 0) goto L_0x121b
            r4 = 2131165734(0x7var_, float:1.7945693E38)
            goto L_0x121e
        L_0x121b:
            r4 = 2131165733(0x7var_, float:1.7945691E38)
        L_0x121e:
            java.lang.Integer r0 = java.lang.Integer.valueOf(r4)
            r12.add(r0)
        L_0x1225:
            boolean r0 = r14.isEmpty()
            if (r0 == 0) goto L_0x122c
            return
        L_0x122c:
            org.telegram.ui.ActionBar.ActionBarPopupWindow r0 = r7.scrimPopupWindow
            if (r0 == 0) goto L_0x123b
            r0.dismiss()
            r0 = 0
            r7.scrimPopupWindow = r0
            r7.menuDeleteItem = r0
            r7.scrimPopupWindowItems = r0
            return
        L_0x123b:
            android.graphics.Rect r0 = new android.graphics.Rect
            r0.<init>()
            org.telegram.ui.ActionBar.ActionBarPopupWindow$ActionBarPopupWindowLayout r8 = new org.telegram.ui.ActionBar.ActionBarPopupWindow$ActionBarPopupWindowLayout
            android.app.Activity r1 = r28.getParentActivity()
            r8.<init>(r1)
            org.telegram.ui.ChatActivity$94 r1 = new org.telegram.ui.ChatActivity$94
            r1.<init>(r0)
            r8.setOnTouchListener(r1)
            org.telegram.ui.-$$Lambda$ChatActivity$Ut_kToVyew6FD-fIZ3o_z1iGGuM r0 = new org.telegram.ui.-$$Lambda$ChatActivity$Ut_kToVyew6FD-fIZ3o_z1iGGuM
            r0.<init>()
            r8.setDispatchKeyEventListener(r0)
            android.graphics.Rect r9 = new android.graphics.Rect
            r9.<init>()
            android.app.Activity r0 = r28.getParentActivity()
            android.content.res.Resources r0 = r0.getResources()
            r1 = 2131165954(0x7var_, float:1.794614E38)
            android.graphics.drawable.Drawable r0 = r0.getDrawable(r1)
            android.graphics.drawable.Drawable r0 = r0.mutate()
            r0.getPadding(r9)
            r8.setBackgroundDrawable(r0)
            java.lang.String r0 = "actionBarDefaultSubmenuBackground"
            int r0 = org.telegram.ui.ActionBar.Theme.getColor(r0)
            r8.setBackgroundColor(r0)
            android.widget.LinearLayout r10 = new android.widget.LinearLayout
            android.app.Activity r0 = r28.getParentActivity()
            r10.<init>(r0)
            int r0 = android.os.Build.VERSION.SDK_INT
            r1 = 21
            if (r0 < r1) goto L_0x12a2
            org.telegram.ui.ChatActivity$95 r11 = new org.telegram.ui.ChatActivity$95
            android.app.Activity r2 = r28.getParentActivity()
            r3 = 0
            r4 = 0
            r5 = 2131689504(0x7f0var_, float:1.9008025E38)
            r0 = r11
            r1 = r28
            r6 = r10
            r0.<init>(r1, r2, r3, r4, r5, r6)
            goto L_0x12ab
        L_0x12a2:
            android.widget.ScrollView r11 = new android.widget.ScrollView
            android.app.Activity r0 = r28.getParentActivity()
            r11.<init>(r0)
        L_0x12ab:
            r0 = 0
            r11.setClipToPadding(r0)
            r0 = -2
            r1 = -1073741824(0xffffffffCLASSNAME, float:-2.0)
            android.widget.FrameLayout$LayoutParams r0 = org.telegram.ui.Components.LayoutHelper.createFrame(r0, r1)
            r8.addView(r11, r0)
            r0 = 1128792064(0x43480000, float:200.0)
            int r0 = org.telegram.messenger.AndroidUtilities.dp(r0)
            r10.setMinimumWidth(r0)
            r0 = 1
            r10.setOrientation(r0)
            int r0 = r13.size()
            org.telegram.ui.ActionBar.ActionBarMenuSubItem[] r0 = new org.telegram.ui.ActionBar.ActionBarMenuSubItem[r0]
            r7.scrimPopupWindowItems = r0
            int r0 = r13.size()
            r1 = 0
        L_0x12d3:
            if (r1 >= r0) goto L_0x1335
            org.telegram.ui.ActionBar.ActionBarMenuSubItem r2 = new org.telegram.ui.ActionBar.ActionBarMenuSubItem
            android.app.Activity r3 = r28.getParentActivity()
            if (r1 != 0) goto L_0x12df
            r4 = 1
            goto L_0x12e0
        L_0x12df:
            r4 = 0
        L_0x12e0:
            int r5 = r0 + -1
            if (r1 != r5) goto L_0x12e6
            r5 = 1
            goto L_0x12e7
        L_0x12e6:
            r5 = 0
        L_0x12e7:
            r2.<init>(r3, r4, r5)
            java.lang.Object r3 = r13.get(r1)
            java.lang.CharSequence r3 = (java.lang.CharSequence) r3
            java.lang.Object r4 = r12.get(r1)
            java.lang.Integer r4 = (java.lang.Integer) r4
            int r4 = r4.intValue()
            r2.setTextAndIcon(r3, r4)
            java.lang.Object r3 = r14.get(r1)
            java.lang.Integer r3 = (java.lang.Integer) r3
            int r3 = r3.intValue()
            r4 = 1
            if (r3 != r4) goto L_0x1323
            org.telegram.messenger.MessageObject r3 = r7.selectedObject
            org.telegram.tgnet.TLRPC$Message r3 = r3.messageOwner
            int r3 = r3.ttl_period
            if (r3 == 0) goto L_0x1323
            r7.menuDeleteItem = r2
            java.lang.Runnable r3 = r7.updateDeleteItemRunnable
            r3.run()
            java.lang.String r3 = "windowBackgroundWhiteGrayText6"
            int r3 = org.telegram.ui.ActionBar.Theme.getColor(r3)
            r2.setSubtextColor(r3)
        L_0x1323:
            org.telegram.ui.ActionBar.ActionBarMenuSubItem[] r3 = r7.scrimPopupWindowItems
            r3[r1] = r2
            r10.addView(r2)
            org.telegram.ui.-$$Lambda$ChatActivity$uzy8h3LV12BeIdfi17SXlzLglGc r3 = new org.telegram.ui.-$$Lambda$ChatActivity$uzy8h3LV12BeIdfi17SXlzLglGc
            r3.<init>(r1, r14)
            r2.setOnClickListener(r3)
            int r1 = r1 + 1
            goto L_0x12d3
        L_0x1335:
            r0 = -2
            r1 = -2
            r2 = 51
            android.widget.FrameLayout$LayoutParams r0 = org.telegram.ui.Components.LayoutHelper.createScroll(r0, r1, r2)
            r11.addView(r10, r0)
            org.telegram.ui.ChatActivity$96 r0 = new org.telegram.ui.ChatActivity$96
            r2 = -2
            r0.<init>(r8, r1, r2)
            r7.scrimPopupWindow = r0
            r1 = 1
            r0.setPauseNotifications(r1)
            org.telegram.ui.ActionBar.ActionBarPopupWindow r0 = r7.scrimPopupWindow
            r2 = 220(0xdc, float:3.08E-43)
            r0.setDismissAnimationDuration(r2)
            org.telegram.ui.ActionBar.ActionBarPopupWindow r0 = r7.scrimPopupWindow
            r0.setOutsideTouchable(r1)
            org.telegram.ui.ActionBar.ActionBarPopupWindow r0 = r7.scrimPopupWindow
            r0.setClippingEnabled(r1)
            org.telegram.ui.ActionBar.ActionBarPopupWindow r0 = r7.scrimPopupWindow
            r2 = 2131689477(0x7f0var_, float:1.900797E38)
            r0.setAnimationStyle(r2)
            org.telegram.ui.ActionBar.ActionBarPopupWindow r0 = r7.scrimPopupWindow
            r0.setFocusable(r1)
            r0 = 1148846080(0x447a0000, float:1000.0)
            int r0 = org.telegram.messenger.AndroidUtilities.dp(r0)
            r1 = -2147483648(0xfffffffvar_, float:-0.0)
            int r0 = android.view.View.MeasureSpec.makeMeasureSpec(r0, r1)
            r1 = 1148846080(0x447a0000, float:1000.0)
            int r1 = org.telegram.messenger.AndroidUtilities.dp(r1)
            r2 = -2147483648(0xfffffffvar_, float:-0.0)
            int r1 = android.view.View.MeasureSpec.makeMeasureSpec(r1, r2)
            r8.measure(r0, r1)
            org.telegram.ui.ActionBar.ActionBarPopupWindow r0 = r7.scrimPopupWindow
            r1 = 2
            r0.setInputMethodMode(r1)
            org.telegram.ui.ActionBar.ActionBarPopupWindow r0 = r7.scrimPopupWindow
            r1 = 0
            r0.setSoftInputMode(r1)
            org.telegram.ui.ActionBar.ActionBarPopupWindow r0 = r7.scrimPopupWindow
            android.view.View r0 = r0.getContentView()
            r1 = 1
            r0.setFocusableInTouchMode(r1)
            int r0 = r29.getLeft()
            r1 = r32
            int r1 = (int) r1
            int r0 = r0 + r1
            int r1 = r8.getMeasuredWidth()
            int r0 = r0 - r1
            int r1 = r9.left
            int r0 = r0 + r1
            r1 = 1105199104(0x41e00000, float:28.0)
            int r1 = org.telegram.messenger.AndroidUtilities.dp(r1)
            int r0 = r0 - r1
            r1 = 1086324736(0x40CLASSNAME, float:6.0)
            int r1 = org.telegram.messenger.AndroidUtilities.dp(r1)
            if (r0 >= r1) goto L_0x13c1
            r0 = 1086324736(0x40CLASSNAME, float:6.0)
            int r0 = org.telegram.messenger.AndroidUtilities.dp(r0)
            goto L_0x13e7
        L_0x13c1:
            org.telegram.ui.Components.RecyclerListView r1 = r7.chatListView
            int r1 = r1.getMeasuredWidth()
            r2 = 1086324736(0x40CLASSNAME, float:6.0)
            int r2 = org.telegram.messenger.AndroidUtilities.dp(r2)
            int r1 = r1 - r2
            int r2 = r8.getMeasuredWidth()
            int r1 = r1 - r2
            if (r0 <= r1) goto L_0x13e7
            org.telegram.ui.Components.RecyclerListView r0 = r7.chatListView
            int r0 = r0.getMeasuredWidth()
            r1 = 1086324736(0x40CLASSNAME, float:6.0)
            int r1 = org.telegram.messenger.AndroidUtilities.dp(r1)
            int r0 = r0 - r1
            int r1 = r8.getMeasuredWidth()
            int r0 = r0 - r1
        L_0x13e7:
            boolean r1 = org.telegram.messenger.AndroidUtilities.isTablet()
            if (r1 == 0) goto L_0x13f9
            r1 = 2
            int[] r2 = new int[r1]
            android.view.View r1 = r7.fragmentView
            r1.getLocationInWindow(r2)
            r1 = 0
            r2 = r2[r1]
            int r0 = r0 + r2
        L_0x13f9:
            org.telegram.ui.Components.SizeNotifierFrameLayout r1 = r7.contentView
            int r1 = r1.getHeight()
            int r2 = r8.getMeasuredHeight()
            org.telegram.ui.Components.SizeNotifierFrameLayout r3 = r7.contentView
            int r3 = r3.measureKeyboardHeight()
            r4 = 1101004800(0x41a00000, float:20.0)
            int r4 = org.telegram.messenger.AndroidUtilities.dp(r4)
            if (r3 <= r4) goto L_0x1412
            int r1 = r1 + r3
        L_0x1412:
            if (r2 >= r1) goto L_0x1471
            org.telegram.ui.Components.RecyclerListView r3 = r7.chatListView
            float r3 = r3.getY()
            int r4 = r29.getTop()
            float r4 = (float) r4
            float r3 = r3 + r4
            float r3 = r3 + r33
            int r3 = (int) r3
            int r4 = r9.top
            int r4 = r2 - r4
            int r5 = r9.bottom
            int r4 = r4 - r5
            r5 = 1131413504(0x43700000, float:240.0)
            int r5 = org.telegram.messenger.AndroidUtilities.dp(r5)
            if (r4 <= r5) goto L_0x143a
            r4 = 1131413504(0x43700000, float:240.0)
            int r4 = org.telegram.messenger.AndroidUtilities.dp(r4)
            int r4 = r4 - r2
            int r3 = r3 + r4
        L_0x143a:
            float r4 = (float) r3
            org.telegram.ui.Components.RecyclerListView r5 = r7.chatListView
            float r5 = r5.getY()
            r6 = 1103101952(0x41CLASSNAME, float:24.0)
            int r6 = org.telegram.messenger.AndroidUtilities.dp(r6)
            float r6 = (float) r6
            float r5 = r5 + r6
            int r4 = (r4 > r5 ? 1 : (r4 == r5 ? 0 : -1))
            if (r4 >= 0) goto L_0x145d
            org.telegram.ui.Components.RecyclerListView r1 = r7.chatListView
            float r1 = r1.getY()
            r2 = 1103101952(0x41CLASSNAME, float:24.0)
            int r2 = org.telegram.messenger.AndroidUtilities.dp(r2)
            float r2 = (float) r2
            float r1 = r1 + r2
            int r3 = (int) r1
            goto L_0x147a
        L_0x145d:
            int r1 = r1 - r2
            r2 = 1090519040(0x41000000, float:8.0)
            int r2 = org.telegram.messenger.AndroidUtilities.dp(r2)
            int r2 = r1 - r2
            if (r3 <= r2) goto L_0x147a
            r2 = 1090519040(0x41000000, float:8.0)
            int r2 = org.telegram.messenger.AndroidUtilities.dp(r2)
            int r3 = r1 - r2
            goto L_0x147a
        L_0x1471:
            boolean r1 = r7.inBubbleMode
            if (r1 == 0) goto L_0x1477
            r1 = 0
            goto L_0x1479
        L_0x1477:
            int r1 = org.telegram.messenger.AndroidUtilities.statusBarHeight
        L_0x1479:
            r3 = r1
        L_0x147a:
            org.telegram.ui.ActionBar.ActionBarPopupWindow r1 = r7.scrimPopupWindow
            org.telegram.ui.Components.RecyclerListView r2 = r7.chatListView
            r4 = 51
            r1.showAtLocation(r2, r4, r0, r3)
            org.telegram.ui.Components.RecyclerListView r0 = r7.chatListView
            r0.stopScroll()
            androidx.recyclerview.widget.GridLayoutManagerFixed r0 = r7.chatLayoutManager
            r1 = 0
            r0.setCanScrollVertically(r1)
            r0 = r29
            r7.scrimView = r0
            boolean r1 = r0 instanceof org.telegram.ui.Cells.ChatMessageCell
            if (r1 == 0) goto L_0x149f
            org.telegram.ui.Cells.ChatMessageCell r0 = (org.telegram.ui.Cells.ChatMessageCell) r0
            r1 = 1
            r0.setInvalidatesParent(r1)
            r7.restartSticker(r0)
        L_0x149f:
            org.telegram.ui.Components.SizeNotifierFrameLayout r0 = r7.contentView
            r0.invalidate()
            org.telegram.ui.Components.RecyclerListView r0 = r7.chatListView
            r0.invalidate()
            android.animation.AnimatorSet r0 = r7.scrimAnimatorSet
            if (r0 == 0) goto L_0x14b0
            r0.cancel()
        L_0x14b0:
            android.animation.AnimatorSet r0 = new android.animation.AnimatorSet
            r0.<init>()
            r7.scrimAnimatorSet = r0
            java.util.ArrayList r0 = new java.util.ArrayList
            r0.<init>()
            android.graphics.Paint r1 = r7.scrimPaint
            android.util.Property<android.graphics.Paint, java.lang.Integer> r2 = org.telegram.ui.Components.AnimationProperties.PAINT_ALPHA
            r3 = 2
            int[] r3 = new int[r3]
            r3 = {0, 50} // fill-array
            android.animation.ObjectAnimator r1 = android.animation.ObjectAnimator.ofInt(r1, r2, r3)
            r0.add(r1)
            android.widget.FrameLayout r1 = r7.pagedownButton
            java.lang.Object r1 = r1.getTag()
            if (r1 == 0) goto L_0x14e7
            android.widget.FrameLayout r1 = r7.pagedownButton
            android.util.Property r2 = android.view.View.ALPHA
            r3 = 1
            float[] r4 = new float[r3]
            r3 = 0
            r5 = 0
            r4[r5] = r3
            android.animation.ObjectAnimator r1 = android.animation.ObjectAnimator.ofFloat(r1, r2, r4)
            r0.add(r1)
        L_0x14e7:
            android.widget.FrameLayout r1 = r7.mentiondownButton
            java.lang.Object r1 = r1.getTag()
            if (r1 == 0) goto L_0x1501
            android.widget.FrameLayout r1 = r7.mentiondownButton
            android.util.Property r2 = android.view.View.ALPHA
            r3 = 1
            float[] r4 = new float[r3]
            r3 = 0
            r5 = 0
            r4[r5] = r3
            android.animation.ObjectAnimator r1 = android.animation.ObjectAnimator.ofFloat(r1, r2, r4)
            r0.add(r1)
        L_0x1501:
            android.animation.AnimatorSet r1 = r7.scrimAnimatorSet
            r1.playTogether(r0)
            android.animation.AnimatorSet r0 = r7.scrimAnimatorSet
            r1 = 150(0x96, double:7.4E-322)
            r0.setDuration(r1)
            android.animation.AnimatorSet r0 = r7.scrimAnimatorSet
            r0.start()
            r0 = 0
            r7.hideHints(r0)
            org.telegram.ui.Components.UndoView r0 = r7.topUndoView
            r1 = 1
            if (r0 == 0) goto L_0x151e
            r0.hide(r1, r1)
        L_0x151e:
            org.telegram.ui.Components.UndoView r0 = r7.undoView
            if (r0 == 0) goto L_0x1525
            r0.hide(r1, r1)
        L_0x1525:
            org.telegram.ui.Components.ChatActivityEnterView r0 = r7.chatActivityEnterView
            if (r0 == 0) goto L_0x1531
            org.telegram.ui.Components.EditTextCaption r0 = r0.getEditField()
            r1 = 0
            r0.setAllowDrawCursor(r1)
        L_0x1531:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.createMenu(android.view.View, boolean, boolean, float, float, boolean):void");
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$createMenu$107 */
    public /* synthetic */ void lambda$createMenu$107$ChatActivity(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
        AndroidUtilities.runOnUIThread(new Runnable(tLObject) {
            public final /* synthetic */ TLObject f$1;

            {
                this.f$1 = r2;
            }

            public final void run() {
                ChatActivity.this.lambda$null$106$ChatActivity(this.f$1);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$106 */
    public /* synthetic */ void lambda$null$106$ChatActivity(TLObject tLObject) {
        if (tLObject instanceof TLRPC$TL_payments_paymentReceipt) {
            presentFragment(new PaymentFormActivity((TLRPC$TL_payments_paymentReceipt) tLObject));
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$createMenu$108 */
    public /* synthetic */ void lambda$createMenu$108$ChatActivity(KeyEvent keyEvent) {
        ActionBarPopupWindow actionBarPopupWindow;
        if (keyEvent.getKeyCode() == 4 && keyEvent.getRepeatCount() == 0 && (actionBarPopupWindow = this.scrimPopupWindow) != null && actionBarPopupWindow.isShowing()) {
            this.scrimPopupWindow.dismiss();
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$createMenu$109 */
    public /* synthetic */ void lambda$createMenu$109$ChatActivity(int i, ArrayList arrayList, View view) {
        if (this.selectedObject != null && i < arrayList.size()) {
            processSelectedOption(((Integer) arrayList.get(i)).intValue());
            this.scrimView = null;
            this.contentView.invalidate();
            this.chatListView.invalidate();
            ActionBarPopupWindow actionBarPopupWindow = this.scrimPopupWindow;
            if (actionBarPopupWindow != null) {
                actionBarPopupWindow.dismiss();
            }
        }
    }

    /* access modifiers changed from: private */
    public void startEditingMessageObject(MessageObject messageObject) {
        if (messageObject != null && getParentActivity() != null) {
            if (this.searchItem != null && this.actionBar.isSearchFieldVisible()) {
                this.actionBar.closeSearchField();
                this.chatActivityEnterView.setFieldFocused();
            }
            this.mentionsAdapter.setNeedBotContext(false);
            this.chatActivityEnterView.setVisibility(0);
            showFieldPanelForEdit(true, messageObject);
            updateBottomOverlay();
            checkEditTimer();
            this.chatActivityEnterView.setAllowStickersAndGifs(false, false, true);
            updatePinnedMessageView(true);
            updateVisibleRows();
            if (!messageObject.scheduled) {
                TLRPC$TL_messages_getMessageEditData tLRPC$TL_messages_getMessageEditData = new TLRPC$TL_messages_getMessageEditData();
                tLRPC$TL_messages_getMessageEditData.peer = getMessagesController().getInputPeer((int) this.dialog_id);
                tLRPC$TL_messages_getMessageEditData.id = messageObject.getId();
                this.editingMessageObjectReqId = getConnectionsManager().sendRequest(tLRPC$TL_messages_getMessageEditData, new RequestDelegate() {
                    public final void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                        ChatActivity.this.lambda$startEditingMessageObject$111$ChatActivity(tLObject, tLRPC$TL_error);
                    }
                });
                return;
            }
            this.chatActivityEnterView.showEditDoneProgress(false, true);
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$startEditingMessageObject$111 */
    public /* synthetic */ void lambda$startEditingMessageObject$111$ChatActivity(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
        AndroidUtilities.runOnUIThread(new Runnable(tLObject) {
            public final /* synthetic */ TLObject f$1;

            {
                this.f$1 = r2;
            }

            public final void run() {
                ChatActivity.this.lambda$null$110$ChatActivity(this.f$1);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$110 */
    public /* synthetic */ void lambda$null$110$ChatActivity(TLObject tLObject) {
        this.editingMessageObjectReqId = 0;
        if (tLObject == null && getParentActivity() != null) {
            AlertDialog.Builder builder = new AlertDialog.Builder((Context) getParentActivity());
            builder.setTitle(LocaleController.getString("AppName", NUM));
            builder.setMessage(LocaleController.getString("EditMessageError", NUM));
            builder.setPositiveButton(LocaleController.getString("OK", NUM), (DialogInterface.OnClickListener) null);
            showDialog(builder.create());
            ChatActivityEnterView chatActivityEnterView2 = this.chatActivityEnterView;
            if (chatActivityEnterView2 != null) {
                chatActivityEnterView2.setEditingMessageObject((MessageObject) null, false);
                hideFieldPanel(true);
            }
        }
    }

    /* access modifiers changed from: private */
    public void restartSticker(ChatMessageCell chatMessageCell) {
        MessagesController.EmojiSound emojiSound;
        MessageObject messageObject = chatMessageCell.getMessageObject();
        TLRPC$Document document = messageObject.getDocument();
        boolean isAnimatedEmoji = messageObject.isAnimatedEmoji();
        boolean z = true;
        if (!isAnimatedEmoji) {
            if (this.currentEncryptedChat != null && !messageObject.isOut()) {
                z = false;
            }
            if (!MessageObject.isAnimatedStickerDocument(document, z) || SharedConfig.loopStickers) {
                return;
            }
        }
        RLottieDrawable lottieAnimation = chatMessageCell.getPhotoImage().getLottieAnimation();
        if (lottieAnimation != null) {
            if (isAnimatedEmoji) {
                String stickerEmoji = messageObject.getStickerEmoji();
                if (EmojiData.isHeartEmoji(stickerEmoji)) {
                    HashMap hashMap = new HashMap();
                    hashMap.put(1, 1);
                    hashMap.put(13, 0);
                    hashMap.put(59, 1);
                    hashMap.put(71, 0);
                    hashMap.put(128, 1);
                    hashMap.put(140, 0);
                    lottieAnimation.setVibrationPattern(hashMap);
                } else if (EmojiData.isPeachEmoji(stickerEmoji)) {
                    HashMap hashMap2 = new HashMap();
                    hashMap2.put(34, 1);
                    lottieAnimation.setVibrationPattern(hashMap2);
                } else if (EmojiData.isCofinEmoji(stickerEmoji)) {
                    HashMap hashMap3 = new HashMap();
                    hashMap3.put(24, 0);
                    hashMap3.put(36, 0);
                    lottieAnimation.setVibrationPattern(hashMap3);
                }
                if (!(lottieAnimation.isRunning() || stickerEmoji == null || (emojiSound = getMessagesController().emojiSounds.get(stickerEmoji.replace("️", ""))) == null)) {
                    getMediaController().playEmojiSound(getAccountInstance(), stickerEmoji, emojiSound, false);
                }
            }
            lottieAnimation.restart();
        }
    }

    /* access modifiers changed from: private */
    public String getMessageContent(MessageObject messageObject, int i, boolean z) {
        int fromChatId;
        TLRPC$Chat chat;
        String str = "";
        if (z && i != (fromChatId = messageObject.getFromChatId())) {
            if (fromChatId > 0) {
                TLRPC$User user = getMessagesController().getUser(Integer.valueOf(fromChatId));
                if (user != null) {
                    str = ContactsController.formatName(user.first_name, user.last_name) + ":\n";
                }
            } else if (fromChatId < 0 && (chat = getMessagesController().getChat(Integer.valueOf(-fromChatId))) != null) {
                str = chat.title + ":\n";
            }
        }
        String restrictionReason = MessagesController.getRestrictionReason(messageObject.messageOwner.restriction_reason);
        if (!TextUtils.isEmpty(restrictionReason)) {
            return str + restrictionReason;
        } else if ((messageObject.type == 0 || messageObject.isAnimatedEmoji()) && messageObject.messageOwner.message != null) {
            return str + messageObject.messageOwner.message;
        } else {
            TLRPC$Message tLRPC$Message = messageObject.messageOwner;
            if (tLRPC$Message.media == null || tLRPC$Message.message == null) {
                return str + messageObject.messageText;
            }
            return str + messageObject.messageOwner.message;
        }
    }

    /* access modifiers changed from: private */
    public void unpinMessage(MessageObject messageObject) {
        if (messageObject != null) {
            Bulletin bulletin = this.pinBulletin;
            if (bulletin != null) {
                bulletin.hide(false, 0);
            }
            ArrayList arrayList = new ArrayList();
            arrayList.add(this.selectedObject);
            ArrayList arrayList2 = new ArrayList();
            arrayList2.add(Integer.valueOf(messageObject.getId()));
            int i = this.totalPinnedMessagesCount;
            getNotificationCenter().postNotificationName(NotificationCenter.didLoadPinnedMessages, Long.valueOf(this.dialog_id), arrayList2, Boolean.FALSE, null, null, 0, Integer.valueOf(this.totalPinnedMessagesCount - 1), Boolean.valueOf(this.pinnedEndReached));
            Bulletin createUnpinMessageBulletin = BulletinFactory.createUnpinMessageBulletin(this, new Runnable(arrayList2, arrayList, i) {
                public final /* synthetic */ ArrayList f$1;
                public final /* synthetic */ ArrayList f$2;
                public final /* synthetic */ int f$3;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                    this.f$3 = r4;
                }

                public final void run() {
                    ChatActivity.this.lambda$unpinMessage$112$ChatActivity(this.f$1, this.f$2, this.f$3);
                }
            }, new Runnable(messageObject) {
                public final /* synthetic */ MessageObject f$1;

                {
                    this.f$1 = r2;
                }

                public final void run() {
                    ChatActivity.this.lambda$unpinMessage$113$ChatActivity(this.f$1);
                }
            });
            createUnpinMessageBulletin.show();
            this.pinBulletin = createUnpinMessageBulletin;
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$unpinMessage$112 */
    public /* synthetic */ void lambda$unpinMessage$112$ChatActivity(ArrayList arrayList, ArrayList arrayList2, int i) {
        getNotificationCenter().postNotificationName(NotificationCenter.didLoadPinnedMessages, Long.valueOf(this.dialog_id), arrayList, Boolean.TRUE, arrayList2, null, 0, Integer.valueOf(i), Boolean.valueOf(this.pinnedEndReached));
        this.pinBulletin = null;
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$unpinMessage$113 */
    public /* synthetic */ void lambda$unpinMessage$113$ChatActivity(MessageObject messageObject) {
        getMessagesController().pinMessage(this.currentChat, this.currentUser, messageObject.getId(), true, false, false);
        this.pinBulletin = null;
    }

    public void openReportChat(int i) {
        Bundle bundle = new Bundle();
        int i2 = (int) this.dialog_id;
        if (i2 > 0) {
            bundle.putInt("user_id", i2);
        } else {
            bundle.putInt("chat_id", -i2);
        }
        bundle.putInt("report", i);
        ChatActivity chatActivity = new ChatActivity(bundle);
        presentFragment(chatActivity);
        chatActivity.chatActivityDelegate = new ChatActivityDelegate() {
            public /* synthetic */ void onUnpin(boolean z, boolean z2) {
                ChatActivityDelegate.CC.$default$onUnpin(this, z, z2);
            }

            public /* synthetic */ void openReplyMessage(int i) {
                ChatActivityDelegate.CC.$default$openReplyMessage(this, i);
            }

            public /* synthetic */ void openSearch(String str) {
                ChatActivityDelegate.CC.$default$openSearch(this, str);
            }

            public void onReport() {
                ChatActivity.this.undoView.showWithAction(0, 74, (Runnable) null);
            }
        };
    }

    private void saveMessageToGallery(MessageObject messageObject) {
        String str = messageObject.messageOwner.attachPath;
        if (!TextUtils.isEmpty(str) && !new File(str).exists()) {
            str = null;
        }
        if (TextUtils.isEmpty(str)) {
            str = FileLoader.getPathToMessage(messageObject.messageOwner).toString();
        }
        MediaController.saveFile(str, getParentActivity(), messageObject.isVideo() ? 1 : 0, (String) null, (String) null);
    }

    /* JADX WARNING: Code restructure failed: missing block: B:222:0x06be, code lost:
        if (r0.exists() != false) goto L_0x06c2;
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private void processSelectedOption(int r20) {
        /*
            r19 = this;
            r9 = r19
            r0 = r20
            org.telegram.messenger.MessageObject r1 = r9.selectedObject
            if (r1 == 0) goto L_0x098d
            android.app.Activity r1 = r19.getParentActivity()
            if (r1 != 0) goto L_0x0010
            goto L_0x098d
        L_0x0010:
            r1 = 100
            r2 = 1
            r3 = 0
            r10 = 0
            if (r0 == r1) goto L_0x08f6
            r1 = 102(0x66, float:1.43E-43)
            if (r0 == r1) goto L_0x096f
            r1 = 500(0x1f4, float:7.0E-43)
            r4 = 2131624639(0x7f0e02bf, float:1.8876463E38)
            java.lang.String r5 = "Cancel"
            r6 = 1000(0x3e8, double:4.94E-321)
            r8 = 3
            java.lang.String r11 = ""
            r12 = 4
            r13 = 23
            java.lang.String r14 = "android.permission.WRITE_EXTERNAL_STORAGE"
            r15 = 2
            switch(r0) {
                case 0: goto L_0x08ac;
                case 1: goto L_0x0896;
                case 2: goto L_0x083e;
                case 3: goto L_0x080a;
                case 4: goto L_0x0790;
                case 5: goto L_0x06a3;
                case 6: goto L_0x0620;
                case 7: goto L_0x05bc;
                case 8: goto L_0x05b5;
                case 9: goto L_0x057f;
                case 10: goto L_0x04a8;
                case 11: goto L_0x048f;
                case 12: goto L_0x047a;
                case 13: goto L_0x02c2;
                case 14: goto L_0x0279;
                case 15: goto L_0x024a;
                case 16: goto L_0x023d;
                case 17: goto L_0x0205;
                case 18: goto L_0x01d5;
                case 19: goto L_0x01c4;
                case 20: goto L_0x01ac;
                case 21: goto L_0x0194;
                case 22: goto L_0x0156;
                case 23: goto L_0x012a;
                case 24: goto L_0x00e1;
                case 25: goto L_0x00b7;
                case 26: goto L_0x0054;
                case 27: goto L_0x003e;
                case 28: goto L_0x0032;
                default: goto L_0x0030;
            }
        L_0x0030:
            goto L_0x0987
        L_0x0032:
            org.telegram.ui.MessageStatisticActivity r0 = new org.telegram.ui.MessageStatisticActivity
            org.telegram.messenger.MessageObject r1 = r9.selectedObject
            r0.<init>(r1)
            r9.presentFragment(r0)
            goto L_0x0987
        L_0x003e:
            org.telegram.tgnet.TLRPC$Chat r0 = r9.currentChat
            int r2 = r0.id
            r3 = 0
            org.telegram.messenger.MessageObject r0 = r9.selectedObject
            int r4 = r0.getId()
            r5 = 0
            r6 = -1
            r7 = 0
            r8 = 0
            r1 = r19
            r1.openDiscussionMessageChat(r2, r3, r4, r5, r6, r7, r8)
            goto L_0x0987
        L_0x0054:
            org.telegram.messenger.MessageObject r0 = r9.selectedObject
            org.telegram.ui.ActionBar.AlertDialog$Builder r1 = new org.telegram.ui.ActionBar.AlertDialog$Builder
            android.app.Activity r2 = r19.getParentActivity()
            r1.<init>((android.content.Context) r2)
            boolean r2 = r0.isQuiz()
            if (r2 == 0) goto L_0x007e
            r2 = 2131627592(0x7f0e0e48, float:1.8882453E38)
            java.lang.String r3 = "StopQuizAlertTitle"
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r3, r2)
            r1.setTitle(r2)
            r2 = 2131627591(0x7f0e0e47, float:1.888245E38)
            java.lang.String r3 = "StopQuizAlertText"
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r3, r2)
            r1.setMessage(r2)
            goto L_0x0096
        L_0x007e:
            r2 = 2131627589(0x7f0e0e45, float:1.8882447E38)
            java.lang.String r3 = "StopPollAlertTitle"
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r3, r2)
            r1.setTitle(r2)
            r2 = 2131627588(0x7f0e0e44, float:1.8882445E38)
            java.lang.String r3 = "StopPollAlertText"
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r3, r2)
            r1.setMessage(r2)
        L_0x0096:
            r2 = 2131627578(0x7f0e0e3a, float:1.8882424E38)
            java.lang.String r3 = "Stop"
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r3, r2)
            org.telegram.ui.-$$Lambda$ChatActivity$kbtCABEuo2fhex1fhF_zalixnOE r3 = new org.telegram.ui.-$$Lambda$ChatActivity$kbtCABEuo2fhex1fhF_zalixnOE
            r3.<init>(r0)
            r1.setPositiveButton(r2, r3)
            java.lang.String r0 = org.telegram.messenger.LocaleController.getString(r5, r4)
            r1.setNegativeButton(r0, r10)
            org.telegram.ui.ActionBar.AlertDialog r0 = r1.create()
            r9.showDialog(r0)
            goto L_0x0987
        L_0x00b7:
            org.telegram.ui.ActionBar.AlertDialog[] r0 = new org.telegram.ui.ActionBar.AlertDialog[r2]
            org.telegram.ui.ActionBar.AlertDialog r1 = new org.telegram.ui.ActionBar.AlertDialog
            android.app.Activity r2 = r19.getParentActivity()
            r1.<init>(r2, r8)
            r0[r3] = r1
            org.telegram.messenger.SendMessagesHelper r1 = r19.getSendMessagesHelper()
            org.telegram.messenger.MessageObject r2 = r9.selectedObject
            org.telegram.ui.-$$Lambda$ChatActivity$aKy6ZW-zKNbKVDP7hMWM82XyjUE r3 = new org.telegram.ui.-$$Lambda$ChatActivity$aKy6ZW-zKNbKVDP7hMWM82XyjUE
            r3.<init>(r0)
            int r1 = r1.sendVote(r2, r10, r3)
            if (r1 == 0) goto L_0x0987
            org.telegram.ui.-$$Lambda$ChatActivity$tVTQsdLOAJGfWMEjT3dM4CixXy4 r2 = new org.telegram.ui.-$$Lambda$ChatActivity$tVTQsdLOAJGfWMEjT3dM4CixXy4
            r2.<init>(r0, r1)
            r0 = 500(0x1f4, double:2.47E-321)
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r2, r0)
            goto L_0x0987
        L_0x00e1:
            org.telegram.messenger.MessageObject r0 = r9.selectedObject
            boolean r0 = r0.isEditing()
            if (r0 != 0) goto L_0x011f
            org.telegram.messenger.MessageObject r0 = r9.selectedObject
            boolean r0 = r0.isSending()
            if (r0 == 0) goto L_0x00f6
            org.telegram.messenger.MessageObject$GroupedMessages r0 = r9.selectedObjectGroup
            if (r0 != 0) goto L_0x00f6
            goto L_0x011f
        L_0x00f6:
            org.telegram.messenger.MessageObject r0 = r9.selectedObject
            boolean r0 = r0.isSending()
            if (r0 == 0) goto L_0x0987
            org.telegram.messenger.MessageObject$GroupedMessages r0 = r9.selectedObjectGroup
            if (r0 == 0) goto L_0x0987
        L_0x0102:
            org.telegram.messenger.MessageObject$GroupedMessages r0 = r9.selectedObjectGroup
            java.util.ArrayList<org.telegram.messenger.MessageObject> r0 = r0.messages
            int r0 = r0.size()
            if (r3 >= r0) goto L_0x0987
            org.telegram.messenger.SendMessagesHelper r0 = r19.getSendMessagesHelper()
            java.util.ArrayList r1 = new java.util.ArrayList
            org.telegram.messenger.MessageObject$GroupedMessages r2 = r9.selectedObjectGroup
            java.util.ArrayList<org.telegram.messenger.MessageObject> r2 = r2.messages
            r1.<init>(r2)
            r0.cancelSendingMessage((java.util.ArrayList<org.telegram.messenger.MessageObject>) r1)
            int r3 = r3 + 1
            goto L_0x0102
        L_0x011f:
            org.telegram.messenger.SendMessagesHelper r0 = r19.getSendMessagesHelper()
            org.telegram.messenger.MessageObject r1 = r9.selectedObject
            r0.cancelSendingMessage((org.telegram.messenger.MessageObject) r1)
            goto L_0x0987
        L_0x012a:
            org.telegram.tgnet.TLRPC$User r0 = r9.currentUser
            boolean r0 = org.telegram.messenger.UserObject.isReplyUser((org.telegram.tgnet.TLRPC$User) r0)
            if (r0 == 0) goto L_0x0145
            org.telegram.messenger.MessageObject r0 = r9.selectedObject
            org.telegram.tgnet.TLRPC$Message r1 = r0.messageOwner
            org.telegram.tgnet.TLRPC$MessageFwdHeader r1 = r1.fwd_from
            if (r1 == 0) goto L_0x0987
            org.telegram.tgnet.TLRPC$Peer r1 = r1.from_id
            int r1 = org.telegram.messenger.MessageObject.getPeerId(r1)
            org.telegram.ui.Components.AlertsCreator.showBlockReportSpamReplyAlert(r9, r0, r1)
            goto L_0x0987
        L_0x0145:
            android.app.Activity r0 = r19.getParentActivity()
            long r1 = r9.dialog_id
            org.telegram.messenger.MessageObject r3 = r9.selectedObject
            int r3 = r3.getId()
            org.telegram.ui.Components.AlertsCreator.createReportAlert(r0, r1, r3, r9)
            goto L_0x0987
        L_0x0156:
            org.telegram.tgnet.TLRPC$TL_channels_exportMessageLink r0 = new org.telegram.tgnet.TLRPC$TL_channels_exportMessageLink
            r0.<init>()
            org.telegram.messenger.MessageObject r1 = r9.selectedObject
            org.telegram.messenger.MessageObject r2 = r9.replyingMessageObject
            if (r1 != r2) goto L_0x0172
            boolean r2 = r9.isComments
            if (r2 == 0) goto L_0x0172
            int r1 = r9.replyOriginalMessageId
            r0.id = r1
            org.telegram.tgnet.TLRPC$Chat r1 = r9.replyOriginalChat
            org.telegram.tgnet.TLRPC$InputChannel r1 = org.telegram.messenger.MessagesController.getInputChannel((org.telegram.tgnet.TLRPC$Chat) r1)
            r0.channel = r1
            goto L_0x0186
        L_0x0172:
            int r1 = r1.getId()
            r0.id = r1
            org.telegram.tgnet.TLRPC$Chat r1 = r9.currentChat
            org.telegram.tgnet.TLRPC$InputChannel r1 = org.telegram.messenger.MessagesController.getInputChannel((org.telegram.tgnet.TLRPC$Chat) r1)
            r0.channel = r1
            boolean r1 = r19.isReplyChatComment()
            r0.thread = r1
        L_0x0186:
            org.telegram.tgnet.ConnectionsManager r1 = r19.getConnectionsManager()
            org.telegram.ui.-$$Lambda$ChatActivity$FvpfAI0UavJakiDVCGfZi7qUhd8 r2 = new org.telegram.ui.-$$Lambda$ChatActivity$FvpfAI0UavJakiDVCGfZi7qUhd8
            r2.<init>()
            r1.sendRequest(r0, r2)
            goto L_0x0987
        L_0x0194:
            org.telegram.messenger.MediaDataController r3 = r19.getMediaDataController()
            r4 = 2
            org.telegram.messenger.MessageObject r5 = r9.selectedObject
            org.telegram.tgnet.TLRPC$Document r0 = r5.getDocument()
            long r1 = java.lang.System.currentTimeMillis()
            long r1 = r1 / r6
            int r7 = (int) r1
            r8 = 1
            r6 = r0
            r3.addRecentSticker(r4, r5, r6, r7, r8)
            goto L_0x0987
        L_0x01ac:
            org.telegram.messenger.MediaDataController r11 = r19.getMediaDataController()
            r12 = 2
            org.telegram.messenger.MessageObject r13 = r9.selectedObject
            org.telegram.tgnet.TLRPC$Document r14 = r13.getDocument()
            long r0 = java.lang.System.currentTimeMillis()
            long r0 = r0 / r6
            int r15 = (int) r0
            r16 = 0
            r11.addRecentSticker(r12, r13, r14, r15, r16)
            goto L_0x0987
        L_0x01c4:
            android.app.Activity r0 = r19.getParentActivity()
            org.telegram.messenger.MessageObject r1 = r9.selectedObject
            org.telegram.tgnet.TLRPC$Message r1 = r1.messageOwner
            org.telegram.tgnet.TLRPC$MessageAction r1 = r1.action
            org.telegram.tgnet.TLRPC$TL_messageActionPhoneCall r1 = (org.telegram.tgnet.TLRPC$TL_messageActionPhoneCall) r1
            org.telegram.ui.Components.voip.VoIPHelper.showRateAlert(r0, r1)
            goto L_0x0987
        L_0x01d5:
            org.telegram.tgnet.TLRPC$User r0 = r9.currentUser
            if (r0 == 0) goto L_0x0987
            org.telegram.messenger.MessageObject r1 = r9.selectedObject
            boolean r1 = r1.isVideoCall()
            org.telegram.tgnet.TLRPC$UserFull r4 = r9.userInfo
            if (r4 == 0) goto L_0x01e9
            boolean r4 = r4.video_calls_available
            if (r4 == 0) goto L_0x01e9
            r4 = 1
            goto L_0x01ea
        L_0x01e9:
            r4 = 0
        L_0x01ea:
            android.app.Activity r5 = r19.getParentActivity()
            org.telegram.messenger.MessagesController r2 = r19.getMessagesController()
            org.telegram.tgnet.TLRPC$User r3 = r9.currentUser
            int r3 = r3.id
            org.telegram.tgnet.TLRPC$UserFull r6 = r2.getUserFull(r3)
            org.telegram.messenger.AccountInstance r7 = r19.getAccountInstance()
            r2 = r0
            r3 = r1
            org.telegram.ui.Components.voip.VoIPHelper.startCall(r2, r3, r4, r5, r6, r7)
            goto L_0x0987
        L_0x0205:
            android.content.Intent r0 = new android.content.Intent     // Catch:{ Exception -> 0x0237 }
            java.lang.String r2 = "android.intent.action.DIAL"
            java.lang.StringBuilder r3 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0237 }
            r3.<init>()     // Catch:{ Exception -> 0x0237 }
            java.lang.String r4 = "tel:"
            r3.append(r4)     // Catch:{ Exception -> 0x0237 }
            org.telegram.messenger.MessageObject r4 = r9.selectedObject     // Catch:{ Exception -> 0x0237 }
            org.telegram.tgnet.TLRPC$Message r4 = r4.messageOwner     // Catch:{ Exception -> 0x0237 }
            org.telegram.tgnet.TLRPC$MessageMedia r4 = r4.media     // Catch:{ Exception -> 0x0237 }
            java.lang.String r4 = r4.phone_number     // Catch:{ Exception -> 0x0237 }
            r3.append(r4)     // Catch:{ Exception -> 0x0237 }
            java.lang.String r3 = r3.toString()     // Catch:{ Exception -> 0x0237 }
            android.net.Uri r3 = android.net.Uri.parse(r3)     // Catch:{ Exception -> 0x0237 }
            r0.<init>(r2, r3)     // Catch:{ Exception -> 0x0237 }
            r2 = 268435456(0x10000000, float:2.5243549E-29)
            r0.addFlags(r2)     // Catch:{ Exception -> 0x0237 }
            android.app.Activity r2 = r19.getParentActivity()     // Catch:{ Exception -> 0x0237 }
            r2.startActivityForResult(r0, r1)     // Catch:{ Exception -> 0x0237 }
            goto L_0x0987
        L_0x0237:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
            goto L_0x0987
        L_0x023d:
            org.telegram.messenger.MessageObject r0 = r9.selectedObject
            org.telegram.tgnet.TLRPC$Message r0 = r0.messageOwner
            org.telegram.tgnet.TLRPC$MessageMedia r0 = r0.media
            java.lang.String r0 = r0.phone_number
            org.telegram.messenger.AndroidUtilities.addToClipboard(r0)
            goto L_0x0987
        L_0x024a:
            android.os.Bundle r0 = new android.os.Bundle
            r0.<init>()
            org.telegram.messenger.MessageObject r1 = r9.selectedObject
            org.telegram.tgnet.TLRPC$Message r1 = r1.messageOwner
            org.telegram.tgnet.TLRPC$MessageMedia r1 = r1.media
            int r1 = r1.user_id
            java.lang.String r3 = "user_id"
            r0.putInt(r3, r1)
            org.telegram.messenger.MessageObject r1 = r9.selectedObject
            org.telegram.tgnet.TLRPC$Message r1 = r1.messageOwner
            org.telegram.tgnet.TLRPC$MessageMedia r1 = r1.media
            java.lang.String r1 = r1.phone_number
            java.lang.String r3 = "phone"
            r0.putString(r3, r1)
            java.lang.String r1 = "addContact"
            r0.putBoolean(r1, r2)
            org.telegram.ui.ContactAddActivity r1 = new org.telegram.ui.ContactAddActivity
            r1.<init>(r0)
            r9.presentFragment(r1)
            goto L_0x0987
        L_0x0279:
            java.util.HashMap<java.lang.Integer, org.telegram.messenger.MessageObject> r0 = r9.pinnedMessageObjects
            org.telegram.messenger.MessageObject r1 = r9.selectedObject
            int r1 = r1.getId()
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)
            boolean r0 = r0.containsKey(r1)
            if (r0 == 0) goto L_0x028e
            org.telegram.messenger.MessageObject r0 = r9.selectedObject
            goto L_0x02a7
        L_0x028e:
            org.telegram.messenger.MessageObject$GroupedMessages r0 = r9.selectedObjectGroup
            if (r0 == 0) goto L_0x02a5
            java.util.ArrayList<org.telegram.messenger.MessageObject> r0 = r0.messages
            boolean r0 = r0.isEmpty()
            if (r0 != 0) goto L_0x02a5
            org.telegram.messenger.MessageObject$GroupedMessages r0 = r9.selectedObjectGroup
            java.util.ArrayList<org.telegram.messenger.MessageObject> r0 = r0.messages
            java.lang.Object r0 = r0.get(r3)
            org.telegram.messenger.MessageObject r0 = (org.telegram.messenger.MessageObject) r0
            goto L_0x02a7
        L_0x02a5:
            org.telegram.messenger.MessageObject r0 = r9.selectedObject
        L_0x02a7:
            int r1 = r9.chatMode
            if (r1 != r15) goto L_0x02bd
            java.util.ArrayList<org.telegram.messenger.MessageObject> r1 = r9.messages
            int r1 = r1.size()
            if (r1 != r15) goto L_0x02bd
            r19.finishFragment()
            org.telegram.ui.ChatActivity$ChatActivityDelegate r0 = r9.chatActivityDelegate
            r0.onUnpin(r3, r3)
            goto L_0x0987
        L_0x02bd:
            r9.unpinMessage(r0)
            goto L_0x0987
        L_0x02c2:
            org.telegram.messenger.MessageObject$GroupedMessages r0 = r9.selectedObjectGroup
            if (r0 == 0) goto L_0x02dd
            java.util.ArrayList<org.telegram.messenger.MessageObject> r0 = r0.messages
            boolean r0 = r0.isEmpty()
            if (r0 != 0) goto L_0x02dd
            org.telegram.messenger.MessageObject$GroupedMessages r0 = r9.selectedObjectGroup
            java.util.ArrayList<org.telegram.messenger.MessageObject> r0 = r0.messages
            java.lang.Object r0 = r0.get(r3)
            org.telegram.messenger.MessageObject r0 = (org.telegram.messenger.MessageObject) r0
            int r0 = r0.getId()
            goto L_0x02e3
        L_0x02dd:
            org.telegram.messenger.MessageObject r0 = r9.selectedObject
            int r0 = r0.getId()
        L_0x02e3:
            org.telegram.ui.ActionBar.AlertDialog$Builder r1 = new org.telegram.ui.ActionBar.AlertDialog$Builder
            android.app.Activity r6 = r19.getParentActivity()
            r1.<init>((android.content.Context) r6)
            r6 = 2131626935(0x7f0e0bb7, float:1.888112E38)
            java.lang.String r7 = "PinMessageAlertTitle"
            java.lang.String r6 = org.telegram.messenger.LocaleController.getString(r7, r6)
            r1.setTitle(r6)
            org.telegram.tgnet.TLRPC$User r6 = r9.currentUser
            r7 = 2131626937(0x7f0e0bb9, float:1.8881124E38)
            java.lang.String r8 = "PinOldMessageAlert"
            r12 = 1090519040(0x41000000, float:8.0)
            if (r6 == 0) goto L_0x0391
            int r6 = r9.currentPinnedMessageId
            if (r6 == 0) goto L_0x0311
            if (r0 >= r6) goto L_0x0311
            java.lang.String r6 = org.telegram.messenger.LocaleController.getString(r8, r7)
            r1.setMessage(r6)
            goto L_0x031d
        L_0x0311:
            r6 = 2131626934(0x7f0e0bb6, float:1.8881118E38)
            java.lang.String r7 = "PinMessageAlertChat"
            java.lang.String r6 = org.telegram.messenger.LocaleController.getString(r7, r6)
            r1.setMessage(r6)
        L_0x031d:
            boolean[] r6 = new boolean[r15]
            r6 = {0, 0} // fill-array
            org.telegram.tgnet.TLRPC$User r7 = r9.currentUser
            boolean r7 = org.telegram.messenger.UserObject.isUserSelf(r7)
            if (r7 != 0) goto L_0x0459
            android.widget.FrameLayout r7 = new android.widget.FrameLayout
            android.app.Activity r8 = r19.getParentActivity()
            r7.<init>(r8)
            org.telegram.ui.Cells.CheckBoxCell r8 = new org.telegram.ui.Cells.CheckBoxCell
            android.app.Activity r13 = r19.getParentActivity()
            r8.<init>(r13, r2)
            android.graphics.drawable.Drawable r13 = org.telegram.ui.ActionBar.Theme.getSelectorDrawable(r3)
            r8.setBackgroundDrawable(r13)
            r13 = 2131626928(0x7f0e0bb0, float:1.8881106E38)
            java.lang.Object[] r2 = new java.lang.Object[r2]
            org.telegram.tgnet.TLRPC$User r14 = r9.currentUser
            java.lang.String r14 = org.telegram.messenger.UserObject.getFirstName(r14)
            r2[r3] = r14
            java.lang.String r14 = "PinAlsoFor"
            java.lang.String r2 = org.telegram.messenger.LocaleController.formatString(r14, r13, r2)
            r8.setText(r2, r11, r3, r3)
            boolean r2 = org.telegram.messenger.LocaleController.isRTL
            if (r2 == 0) goto L_0x0362
            int r2 = org.telegram.messenger.AndroidUtilities.dp(r12)
            goto L_0x0363
        L_0x0362:
            r2 = 0
        L_0x0363:
            boolean r11 = org.telegram.messenger.LocaleController.isRTL
            if (r11 == 0) goto L_0x0369
            r11 = 0
            goto L_0x036d
        L_0x0369:
            int r11 = org.telegram.messenger.AndroidUtilities.dp(r12)
        L_0x036d:
            r8.setPadding(r2, r3, r11, r3)
            r12 = -1
            r13 = 1111490560(0x42400000, float:48.0)
            r14 = 51
            r15 = 1090519040(0x41000000, float:8.0)
            r16 = 0
            r17 = 1090519040(0x41000000, float:8.0)
            r18 = 0
            android.widget.FrameLayout$LayoutParams r2 = org.telegram.ui.Components.LayoutHelper.createFrame(r12, r13, r14, r15, r16, r17, r18)
            r7.addView(r8, r2)
            org.telegram.ui.-$$Lambda$ChatActivity$uFb1MMJxCTDQDn6VM_vBJNrTSIg r2 = new org.telegram.ui.-$$Lambda$ChatActivity$uFb1MMJxCTDQDn6VM_vBJNrTSIg
            r2.<init>(r6)
            r8.setOnClickListener(r2)
            r1.setView(r7)
            goto L_0x0459
        L_0x0391:
            org.telegram.tgnet.TLRPC$Chat r6 = r9.currentChat
            boolean r6 = org.telegram.messenger.ChatObject.isChannel(r6)
            if (r6 == 0) goto L_0x039f
            org.telegram.tgnet.TLRPC$Chat r6 = r9.currentChat
            boolean r6 = r6.megagroup
            if (r6 != 0) goto L_0x03a9
        L_0x039f:
            org.telegram.tgnet.TLRPC$Chat r6 = r9.currentChat
            if (r6 == 0) goto L_0x043a
            boolean r6 = org.telegram.messenger.ChatObject.isChannel(r6)
            if (r6 != 0) goto L_0x043a
        L_0x03a9:
            java.util.ArrayList<java.lang.Integer> r6 = r9.pinnedMessageIds
            boolean r6 = r6.isEmpty()
            if (r6 != 0) goto L_0x03cd
            java.util.ArrayList<java.lang.Integer> r6 = r9.pinnedMessageIds
            java.lang.Object r6 = r6.get(r3)
            java.lang.Integer r6 = (java.lang.Integer) r6
            int r6 = r6.intValue()
            if (r0 >= r6) goto L_0x03cd
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r8, r7)
            r1.setMessage(r2)
            boolean[] r6 = new boolean[r15]
            r6 = {0, 1} // fill-array
            goto L_0x0459
        L_0x03cd:
            r6 = 2131626932(0x7f0e0bb4, float:1.8881114E38)
            java.lang.String r7 = "PinMessageAlert"
            java.lang.String r6 = org.telegram.messenger.LocaleController.getString(r7, r6)
            r1.setMessage(r6)
            boolean[] r6 = new boolean[r15]
            r6 = {1, 1} // fill-array
            android.widget.FrameLayout r7 = new android.widget.FrameLayout
            android.app.Activity r8 = r19.getParentActivity()
            r7.<init>(r8)
            org.telegram.ui.Cells.CheckBoxCell r8 = new org.telegram.ui.Cells.CheckBoxCell
            android.app.Activity r13 = r19.getParentActivity()
            r8.<init>(r13, r2)
            android.graphics.drawable.Drawable r13 = org.telegram.ui.ActionBar.Theme.getSelectorDrawable(r3)
            r8.setBackgroundDrawable(r13)
            r13 = 2131626936(0x7f0e0bb8, float:1.8881122E38)
            java.lang.String r14 = "PinNotify"
            java.lang.String r13 = org.telegram.messenger.LocaleController.getString(r14, r13)
            r8.setText(r13, r11, r2, r3)
            boolean r2 = org.telegram.messenger.LocaleController.isRTL
            if (r2 == 0) goto L_0x040c
            int r2 = org.telegram.messenger.AndroidUtilities.dp(r12)
            goto L_0x040d
        L_0x040c:
            r2 = 0
        L_0x040d:
            boolean r11 = org.telegram.messenger.LocaleController.isRTL
            if (r11 == 0) goto L_0x0413
            r11 = 0
            goto L_0x0417
        L_0x0413:
            int r11 = org.telegram.messenger.AndroidUtilities.dp(r12)
        L_0x0417:
            r8.setPadding(r2, r3, r11, r3)
            r12 = -1
            r13 = 1111490560(0x42400000, float:48.0)
            r14 = 51
            r15 = 1090519040(0x41000000, float:8.0)
            r16 = 0
            r17 = 1090519040(0x41000000, float:8.0)
            r18 = 0
            android.widget.FrameLayout$LayoutParams r2 = org.telegram.ui.Components.LayoutHelper.createFrame(r12, r13, r14, r15, r16, r17, r18)
            r7.addView(r8, r2)
            org.telegram.ui.-$$Lambda$ChatActivity$Mpzcwy7PIVjJQdojPp-ajz9OkXk r2 = new org.telegram.ui.-$$Lambda$ChatActivity$Mpzcwy7PIVjJQdojPp-ajz9OkXk
            r2.<init>(r6)
            r8.setOnClickListener(r2)
            r1.setView(r7)
            goto L_0x0459
        L_0x043a:
            int r2 = r9.currentPinnedMessageId
            if (r2 == 0) goto L_0x0448
            if (r0 >= r2) goto L_0x0448
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r8, r7)
            r1.setMessage(r2)
            goto L_0x0454
        L_0x0448:
            r2 = 2131626933(0x7f0e0bb5, float:1.8881116E38)
            java.lang.String r3 = "PinMessageAlertChannel"
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r3, r2)
            r1.setMessage(r2)
        L_0x0454:
            boolean[] r6 = new boolean[r15]
            r6 = {0, 1} // fill-array
        L_0x0459:
            r2 = 2131626931(0x7f0e0bb3, float:1.8881112E38)
            java.lang.String r3 = "PinMessage"
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r3, r2)
            org.telegram.ui.-$$Lambda$ChatActivity$2oUrOJgJCkp2f7L1XPOTM-Evnhs r3 = new org.telegram.ui.-$$Lambda$ChatActivity$2oUrOJgJCkp2f7L1XPOTM-Evnhs
            r3.<init>(r0, r6)
            r1.setPositiveButton(r2, r3)
            java.lang.String r0 = org.telegram.messenger.LocaleController.getString(r5, r4)
            r1.setNegativeButton(r0, r10)
            org.telegram.ui.ActionBar.AlertDialog r0 = r1.create()
            r9.showDialog(r0)
            goto L_0x0987
        L_0x047a:
            org.telegram.messenger.MessageObject r0 = r9.selectedObjectToEditCaption
            if (r0 == 0) goto L_0x0482
            r9.startEditingMessageObject(r0)
            goto L_0x0487
        L_0x0482:
            org.telegram.messenger.MessageObject r0 = r9.selectedObject
            r9.startEditingMessageObject(r0)
        L_0x0487:
            r9.selectedObject = r10
            r9.selectedObjectGroup = r10
            r9.selectedObjectToEditCaption = r10
            goto L_0x0987
        L_0x048f:
            org.telegram.messenger.MessageObject r0 = r9.selectedObject
            org.telegram.tgnet.TLRPC$Document r0 = r0.getDocument()
            org.telegram.messenger.MessagesController r1 = r19.getMessagesController()
            org.telegram.messenger.MessageObject r2 = r9.selectedObject
            r1.saveGif(r2, r0)
            r19.showGifHint()
            org.telegram.ui.Components.ChatActivityEnterView r1 = r9.chatActivityEnterView
            r1.addRecentGif(r0)
            goto L_0x0987
        L_0x04a8:
            int r0 = android.os.Build.VERSION.SDK_INT
            if (r0 < r13) goto L_0x04c8
            android.app.Activity r0 = r19.getParentActivity()
            int r0 = r0.checkSelfPermission(r14)
            if (r0 == 0) goto L_0x04c8
            android.app.Activity r0 = r19.getParentActivity()
            java.lang.String[] r1 = new java.lang.String[r2]
            r1[r3] = r14
            r0.requestPermissions(r1, r12)
            r9.selectedObject = r10
            r9.selectedObjectGroup = r10
            r9.selectedObjectToEditCaption = r10
            return
        L_0x04c8:
            org.telegram.messenger.MessageObject r0 = r9.selectedObject
            boolean r0 = r0.isMusic()
            org.telegram.messenger.MessageObject r1 = r9.selectedObject
            boolean r1 = r1.isDocument()
            if (r0 != 0) goto L_0x0555
            if (r1 == 0) goto L_0x04da
            goto L_0x0555
        L_0x04da:
            org.telegram.messenger.MessageObject r0 = r9.selectedObject
            boolean r0 = r0.isVideo()
            org.telegram.messenger.MessageObject r1 = r9.selectedObject
            boolean r1 = r1.isPhoto()
            org.telegram.messenger.MessageObject r2 = r9.selectedObject
            boolean r2 = r2.isGif()
            org.telegram.messenger.MessageObject r3 = r9.selectedObject
            org.telegram.tgnet.TLRPC$Document r3 = r3.getDocument()
            java.lang.String r3 = org.telegram.messenger.FileLoader.getDocumentFileName(r3)
            boolean r4 = android.text.TextUtils.isEmpty(r3)
            if (r4 == 0) goto L_0x0502
            org.telegram.messenger.MessageObject r3 = r9.selectedObject
            java.lang.String r3 = r3.getFileName()
        L_0x0502:
            r15 = r3
            org.telegram.messenger.MessageObject r3 = r9.selectedObject
            org.telegram.tgnet.TLRPC$Message r3 = r3.messageOwner
            java.lang.String r3 = r3.attachPath
            if (r3 == 0) goto L_0x051d
            int r4 = r3.length()
            if (r4 <= 0) goto L_0x051d
            java.io.File r4 = new java.io.File
            r4.<init>(r3)
            boolean r4 = r4.exists()
            if (r4 != 0) goto L_0x051d
            r3 = r10
        L_0x051d:
            if (r3 == 0) goto L_0x0525
            int r4 = r3.length()
            if (r4 != 0) goto L_0x0531
        L_0x0525:
            org.telegram.messenger.MessageObject r3 = r9.selectedObject
            org.telegram.tgnet.TLRPC$Message r3 = r3.messageOwner
            java.io.File r3 = org.telegram.messenger.FileLoader.getPathToMessage(r3)
            java.lang.String r3 = r3.toString()
        L_0x0531:
            r12 = r3
            android.app.Activity r13 = r19.getParentActivity()
            r14 = 2
            org.telegram.messenger.MessageObject r3 = r9.selectedObject
            org.telegram.tgnet.TLRPC$Document r3 = r3.getDocument()
            if (r3 == 0) goto L_0x0547
            org.telegram.messenger.MessageObject r3 = r9.selectedObject
            org.telegram.tgnet.TLRPC$Document r3 = r3.getDocument()
            java.lang.String r11 = r3.mime_type
        L_0x0547:
            r16 = r11
            org.telegram.ui.-$$Lambda$ChatActivity$UEpcmGYAzObPJJDCIE4Gbf1dG_8 r3 = new org.telegram.ui.-$$Lambda$ChatActivity$UEpcmGYAzObPJJDCIE4Gbf1dG_8
            r3.<init>(r1, r0, r2)
            r17 = r3
            org.telegram.messenger.MediaController.saveFile(r12, r13, r14, r15, r16, r17)
            goto L_0x0987
        L_0x0555:
            org.telegram.messenger.MessageObject$GroupedMessages r1 = r9.selectedObjectGroup
            if (r1 == 0) goto L_0x0563
            java.util.ArrayList r1 = new java.util.ArrayList
            org.telegram.messenger.MessageObject$GroupedMessages r2 = r9.selectedObjectGroup
            java.util.ArrayList<org.telegram.messenger.MessageObject> r2 = r2.messages
            r1.<init>(r2)
            goto L_0x056d
        L_0x0563:
            java.util.ArrayList r1 = new java.util.ArrayList
            r1.<init>()
            org.telegram.messenger.MessageObject r2 = r9.selectedObject
            r1.add(r2)
        L_0x056d:
            android.app.Activity r2 = r19.getParentActivity()
            org.telegram.messenger.AccountInstance r3 = r19.getAccountInstance()
            org.telegram.ui.-$$Lambda$ChatActivity$6R8639xN5L8L5f4pD9EUx6cobyE r4 = new org.telegram.ui.-$$Lambda$ChatActivity$6R8639xN5L8L5f4pD9EUx6cobyE
            r4.<init>(r0)
            org.telegram.messenger.MediaController.saveFilesFromMessages(r2, r3, r1, r4)
            goto L_0x0987
        L_0x057f:
            org.telegram.ui.Components.StickersAlert r0 = new org.telegram.ui.Components.StickersAlert
            android.app.Activity r2 = r19.getParentActivity()
            org.telegram.messenger.MessageObject r1 = r9.selectedObject
            org.telegram.tgnet.TLRPC$InputStickerSet r4 = r1.getInputStickerSet()
            r5 = 0
            android.widget.FrameLayout r1 = r9.bottomOverlayChat
            int r1 = r1.getVisibility()
            if (r1 == 0) goto L_0x05a2
            org.telegram.tgnet.TLRPC$Chat r1 = r9.currentChat
            if (r1 == 0) goto L_0x059e
            boolean r1 = org.telegram.messenger.ChatObject.canSendStickers(r1)
            if (r1 == 0) goto L_0x05a2
        L_0x059e:
            org.telegram.ui.Components.ChatActivityEnterView r1 = r9.chatActivityEnterView
            r6 = r1
            goto L_0x05a3
        L_0x05a2:
            r6 = r10
        L_0x05a3:
            r1 = r0
            r3 = r19
            r1.<init>(r2, r3, r4, r5, r6)
            boolean r1 = r19.isKeyboardVisible()
            r0.setCalcMandatoryInsets(r1)
            r9.showDialog(r0)
            goto L_0x0987
        L_0x05b5:
            org.telegram.messenger.MessageObject r0 = r9.selectedObject
            r9.showFieldPanelForReply(r0)
            goto L_0x0987
        L_0x05bc:
            org.telegram.messenger.MessageObject r0 = r9.selectedObject
            org.telegram.tgnet.TLRPC$Message r0 = r0.messageOwner
            java.lang.String r0 = r0.attachPath
            if (r0 == 0) goto L_0x05d6
            int r1 = r0.length()
            if (r1 <= 0) goto L_0x05d6
            java.io.File r1 = new java.io.File
            r1.<init>(r0)
            boolean r1 = r1.exists()
            if (r1 != 0) goto L_0x05d6
            r0 = r10
        L_0x05d6:
            if (r0 == 0) goto L_0x05de
            int r1 = r0.length()
            if (r1 != 0) goto L_0x05ea
        L_0x05de:
            org.telegram.messenger.MessageObject r0 = r9.selectedObject
            org.telegram.tgnet.TLRPC$Message r0 = r0.messageOwner
            java.io.File r0 = org.telegram.messenger.FileLoader.getPathToMessage(r0)
            java.lang.String r0 = r0.toString()
        L_0x05ea:
            int r1 = android.os.Build.VERSION.SDK_INT
            if (r1 < r13) goto L_0x060a
            android.app.Activity r1 = r19.getParentActivity()
            int r1 = r1.checkSelfPermission(r14)
            if (r1 == 0) goto L_0x060a
            android.app.Activity r0 = r19.getParentActivity()
            java.lang.String[] r1 = new java.lang.String[r2]
            r1[r3] = r14
            r0.requestPermissions(r1, r12)
            r9.selectedObject = r10
            r9.selectedObjectGroup = r10
            r9.selectedObjectToEditCaption = r10
            return
        L_0x060a:
            android.app.Activity r1 = r19.getParentActivity()
            org.telegram.messenger.MediaController.saveFile(r0, r1, r3, r10, r10)
            org.telegram.messenger.MessageObject r0 = r9.selectedObject
            boolean r0 = r0.isVideo()
            org.telegram.ui.Components.Bulletin r0 = org.telegram.ui.Components.BulletinFactory.createSaveToGalleryBulletin(r9, r0)
            r0.show()
            goto L_0x0987
        L_0x0620:
            org.telegram.messenger.MessageObject r0 = r9.selectedObject
            org.telegram.tgnet.TLRPC$Message r0 = r0.messageOwner
            java.lang.String r0 = r0.attachPath
            if (r0 == 0) goto L_0x063a
            int r3 = r0.length()
            if (r3 <= 0) goto L_0x063a
            java.io.File r3 = new java.io.File
            r3.<init>(r0)
            boolean r3 = r3.exists()
            if (r3 != 0) goto L_0x063a
            r0 = r10
        L_0x063a:
            if (r0 == 0) goto L_0x0642
            int r3 = r0.length()
            if (r3 != 0) goto L_0x064e
        L_0x0642:
            org.telegram.messenger.MessageObject r0 = r9.selectedObject
            org.telegram.tgnet.TLRPC$Message r0 = r0.messageOwner
            java.io.File r0 = org.telegram.messenger.FileLoader.getPathToMessage(r0)
            java.lang.String r0 = r0.toString()
        L_0x064e:
            android.content.Intent r3 = new android.content.Intent
            java.lang.String r4 = "android.intent.action.SEND"
            r3.<init>(r4)
            org.telegram.messenger.MessageObject r4 = r9.selectedObject
            org.telegram.tgnet.TLRPC$Document r4 = r4.getDocument()
            java.lang.String r4 = r4.mime_type
            r3.setType(r4)
            java.io.File r4 = new java.io.File
            r4.<init>(r0)
            int r0 = android.os.Build.VERSION.SDK_INT
            r5 = 24
            java.lang.String r6 = "android.intent.extra.STREAM"
            if (r0 < r5) goto L_0x0686
            android.app.Activity r0 = r19.getParentActivity()     // Catch:{ Exception -> 0x067e }
            java.lang.String r5 = "org.telegram.messenger.beta.provider"
            android.net.Uri r0 = androidx.core.content.FileProvider.getUriForFile(r0, r5, r4)     // Catch:{ Exception -> 0x067e }
            r3.putExtra(r6, r0)     // Catch:{ Exception -> 0x067e }
            r3.setFlags(r2)     // Catch:{ Exception -> 0x067e }
            goto L_0x068d
        L_0x067e:
            android.net.Uri r0 = android.net.Uri.fromFile(r4)
            r3.putExtra(r6, r0)
            goto L_0x068d
        L_0x0686:
            android.net.Uri r0 = android.net.Uri.fromFile(r4)
            r3.putExtra(r6, r0)
        L_0x068d:
            android.app.Activity r0 = r19.getParentActivity()     // Catch:{ all -> 0x0987 }
            java.lang.String r2 = "ShareFile"
            r4 = 2131627427(0x7f0e0da3, float:1.8882118E38)
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r2, r4)     // Catch:{ all -> 0x0987 }
            android.content.Intent r2 = android.content.Intent.createChooser(r3, r2)     // Catch:{ all -> 0x0987 }
            r0.startActivityForResult(r2, r1)     // Catch:{ all -> 0x0987 }
            goto L_0x0987
        L_0x06a3:
            org.telegram.messenger.MessageObject r0 = r9.selectedObject
            org.telegram.tgnet.TLRPC$Message r0 = r0.messageOwner
            java.lang.String r0 = r0.attachPath
            boolean r0 = android.text.TextUtils.isEmpty(r0)
            if (r0 != 0) goto L_0x06c1
            java.io.File r0 = new java.io.File
            org.telegram.messenger.MessageObject r1 = r9.selectedObject
            org.telegram.tgnet.TLRPC$Message r1 = r1.messageOwner
            java.lang.String r1 = r1.attachPath
            r0.<init>(r1)
            boolean r1 = r0.exists()
            if (r1 == 0) goto L_0x06c1
            goto L_0x06c2
        L_0x06c1:
            r0 = r10
        L_0x06c2:
            if (r0 != 0) goto L_0x06d3
            org.telegram.messenger.MessageObject r1 = r9.selectedObject
            org.telegram.tgnet.TLRPC$Message r1 = r1.messageOwner
            java.io.File r1 = org.telegram.messenger.FileLoader.getPathToMessage(r1)
            boolean r3 = r1.exists()
            if (r3 == 0) goto L_0x06d3
            r0 = r1
        L_0x06d3:
            if (r0 == 0) goto L_0x0987
            java.lang.String r1 = r0.getName()
            java.lang.String r1 = r1.toLowerCase()
            java.lang.String r3 = "attheme"
            boolean r1 = r1.endsWith(r3)
            r3 = 2131626507(0x7f0e0a0b, float:1.8880252E38)
            java.lang.String r4 = "OK"
            r5 = 2131624282(0x7f0e015a, float:1.887574E38)
            java.lang.String r6 = "AppName"
            if (r1 == 0) goto L_0x0741
            org.telegram.messenger.MessageObject r1 = r9.selectedObject
            java.lang.String r1 = r1.getDocumentName()
            org.telegram.ui.ActionBar.Theme$ThemeInfo r0 = org.telegram.ui.ActionBar.Theme.applyThemeFile(r0, r1, r10, r2)
            if (r0 == 0) goto L_0x0705
            org.telegram.ui.ThemePreviewActivity r1 = new org.telegram.ui.ThemePreviewActivity
            r1.<init>(r0)
            r9.presentFragment(r1)
            goto L_0x0987
        L_0x0705:
            r0 = -1
            r9.scrollToPositionOnRecreate = r0
            android.app.Activity r0 = r19.getParentActivity()
            if (r0 != 0) goto L_0x0715
            r9.selectedObject = r10
            r9.selectedObjectGroup = r10
            r9.selectedObjectToEditCaption = r10
            return
        L_0x0715:
            org.telegram.ui.ActionBar.AlertDialog$Builder r0 = new org.telegram.ui.ActionBar.AlertDialog$Builder
            android.app.Activity r1 = r19.getParentActivity()
            r0.<init>((android.content.Context) r1)
            java.lang.String r1 = org.telegram.messenger.LocaleController.getString(r6, r5)
            r0.setTitle(r1)
            r1 = 2131625818(0x7f0e075a, float:1.8878855E38)
            java.lang.String r2 = "IncorrectTheme"
            java.lang.String r1 = org.telegram.messenger.LocaleController.getString(r2, r1)
            r0.setMessage(r1)
            java.lang.String r1 = org.telegram.messenger.LocaleController.getString(r4, r3)
            r0.setPositiveButton(r1, r10)
            org.telegram.ui.ActionBar.AlertDialog r0 = r0.create()
            r9.showDialog(r0)
            goto L_0x0987
        L_0x0741:
            org.telegram.messenger.LocaleController r1 = org.telegram.messenger.LocaleController.getInstance()
            int r2 = r9.currentAccount
            boolean r0 = r1.applyLanguageFile(r0, r2)
            if (r0 == 0) goto L_0x0757
            org.telegram.ui.LanguageSelectActivity r0 = new org.telegram.ui.LanguageSelectActivity
            r0.<init>()
            r9.presentFragment(r0)
            goto L_0x0987
        L_0x0757:
            android.app.Activity r0 = r19.getParentActivity()
            if (r0 != 0) goto L_0x0764
            r9.selectedObject = r10
            r9.selectedObjectGroup = r10
            r9.selectedObjectToEditCaption = r10
            return
        L_0x0764:
            org.telegram.ui.ActionBar.AlertDialog$Builder r0 = new org.telegram.ui.ActionBar.AlertDialog$Builder
            android.app.Activity r1 = r19.getParentActivity()
            r0.<init>((android.content.Context) r1)
            java.lang.String r1 = org.telegram.messenger.LocaleController.getString(r6, r5)
            r0.setTitle(r1)
            r1 = 2131625817(0x7f0e0759, float:1.8878853E38)
            java.lang.String r2 = "IncorrectLocalization"
            java.lang.String r1 = org.telegram.messenger.LocaleController.getString(r2, r1)
            r0.setMessage(r1)
            java.lang.String r1 = org.telegram.messenger.LocaleController.getString(r4, r3)
            r0.setPositiveButton(r1, r10)
            org.telegram.ui.ActionBar.AlertDialog r0 = r0.create()
            r9.showDialog(r0)
            goto L_0x0987
        L_0x0790:
            int r0 = android.os.Build.VERSION.SDK_INT
            if (r0 < r13) goto L_0x07b0
            android.app.Activity r0 = r19.getParentActivity()
            int r0 = r0.checkSelfPermission(r14)
            if (r0 == 0) goto L_0x07b0
            android.app.Activity r0 = r19.getParentActivity()
            java.lang.String[] r1 = new java.lang.String[r2]
            r1[r3] = r14
            r0.requestPermissions(r1, r12)
            r9.selectedObject = r10
            r9.selectedObjectGroup = r10
            r9.selectedObjectToEditCaption = r10
            return
        L_0x07b0:
            org.telegram.messenger.MessageObject$GroupedMessages r0 = r9.selectedObjectGroup
            if (r0 == 0) goto L_0x07f0
            java.util.ArrayList<org.telegram.messenger.MessageObject> r0 = r0.messages
            int r0 = r0.size()
            r1 = 1
        L_0x07bb:
            if (r3 >= r0) goto L_0x07d7
            org.telegram.messenger.MessageObject$GroupedMessages r4 = r9.selectedObjectGroup
            java.util.ArrayList<org.telegram.messenger.MessageObject> r4 = r4.messages
            java.lang.Object r4 = r4.get(r3)
            org.telegram.messenger.MessageObject r4 = (org.telegram.messenger.MessageObject) r4
            r9.saveMessageToGallery(r4)
            boolean r5 = r4.isPhoto()
            r2 = r2 & r5
            boolean r4 = r4.isVideo()
            r1 = r1 & r4
            int r3 = r3 + 1
            goto L_0x07bb
        L_0x07d7:
            if (r2 == 0) goto L_0x07dc
            org.telegram.ui.Components.BulletinFactory$FileType r1 = org.telegram.ui.Components.BulletinFactory.FileType.PHOTOS
            goto L_0x07e3
        L_0x07dc:
            if (r1 == 0) goto L_0x07e1
            org.telegram.ui.Components.BulletinFactory$FileType r1 = org.telegram.ui.Components.BulletinFactory.FileType.VIDEOS
            goto L_0x07e3
        L_0x07e1:
            org.telegram.ui.Components.BulletinFactory$FileType r1 = org.telegram.ui.Components.BulletinFactory.FileType.MEDIA
        L_0x07e3:
            org.telegram.ui.Components.BulletinFactory r2 = org.telegram.ui.Components.BulletinFactory.of((org.telegram.ui.ActionBar.BaseFragment) r19)
            org.telegram.ui.Components.Bulletin r0 = r2.createDownloadBulletin(r1, r0)
            r0.show()
            goto L_0x0987
        L_0x07f0:
            org.telegram.messenger.MessageObject r0 = r9.selectedObject
            r9.saveMessageToGallery(r0)
            android.app.Activity r0 = r19.getParentActivity()
            if (r0 == 0) goto L_0x0987
            org.telegram.messenger.MessageObject r0 = r9.selectedObject
            boolean r0 = r0.isVideo()
            org.telegram.ui.Components.Bulletin r0 = org.telegram.ui.Components.BulletinFactory.createSaveToGalleryBulletin(r9, r0)
            r0.show()
            goto L_0x0987
        L_0x080a:
            org.telegram.messenger.MessageObject r0 = r9.selectedObject
            boolean r0 = r0.isDice()
            if (r0 == 0) goto L_0x081c
            org.telegram.messenger.MessageObject r0 = r9.selectedObject
            java.lang.String r0 = r0.getDiceEmoji()
            org.telegram.messenger.AndroidUtilities.addToClipboard(r0)
            goto L_0x0833
        L_0x081c:
            org.telegram.messenger.MessageObject r0 = r9.selectedObject
            org.telegram.messenger.MessageObject$GroupedMessages r1 = r9.selectedObjectGroup
            java.lang.CharSequence r0 = r9.getMessageCaption(r0, r1)
            if (r0 == 0) goto L_0x082a
            org.telegram.messenger.AndroidUtilities.addToClipboard(r0)
            goto L_0x0833
        L_0x082a:
            org.telegram.messenger.MessageObject r0 = r9.selectedObject
            java.lang.String r0 = r9.getMessageContent(r0, r3, r3)
            org.telegram.messenger.AndroidUtilities.addToClipboard(r0)
        L_0x0833:
            org.telegram.ui.Components.UndoView r0 = r9.undoView
            r1 = 0
            r3 = 52
            r0.showWithAction((long) r1, (int) r3, (java.lang.Runnable) r10)
            goto L_0x0987
        L_0x083e:
            org.telegram.messenger.MessageObject r0 = r9.selectedObject
            r9.forwardingMessage = r0
            org.telegram.messenger.MessageObject$GroupedMessages r0 = r9.selectedObjectGroup
            r9.forwardingMessageGroup = r0
            android.os.Bundle r0 = new android.os.Bundle
            r0.<init>()
            java.lang.String r1 = "onlySelect"
            r0.putBoolean(r1, r2)
            java.lang.String r1 = "dialogsType"
            r0.putInt(r1, r8)
            org.telegram.messenger.MessageObject$GroupedMessages r1 = r9.forwardingMessageGroup
            if (r1 != 0) goto L_0x085b
            r1 = 1
            goto L_0x0861
        L_0x085b:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r1 = r1.messages
            int r1 = r1.size()
        L_0x0861:
            java.lang.String r4 = "messagesCount"
            r0.putInt(r4, r1)
            org.telegram.messenger.MessageObject r1 = r9.forwardingMessage
            boolean r1 = r1.isPoll()
            if (r1 == 0) goto L_0x0878
            org.telegram.messenger.MessageObject r1 = r9.forwardingMessage
            boolean r1 = r1.isPublicPoll()
            if (r1 == 0) goto L_0x0879
            r2 = 2
            goto L_0x0879
        L_0x0878:
            r2 = 0
        L_0x0879:
            java.lang.String r1 = "hasPoll"
            r0.putInt(r1, r2)
            org.telegram.messenger.MessageObject r1 = r9.forwardingMessage
            boolean r1 = r1.isInvoice()
            java.lang.String r2 = "hasInvoice"
            r0.putBoolean(r2, r1)
            org.telegram.ui.DialogsActivity r1 = new org.telegram.ui.DialogsActivity
            r1.<init>(r0)
            r1.setDelegate(r9)
            r9.presentFragment(r1)
            goto L_0x0987
        L_0x0896:
            android.app.Activity r0 = r19.getParentActivity()
            if (r0 != 0) goto L_0x08a3
            r9.selectedObject = r10
            r9.selectedObjectToEditCaption = r10
            r9.selectedObjectGroup = r10
            return
        L_0x08a3:
            org.telegram.messenger.MessageObject r0 = r9.selectedObject
            org.telegram.messenger.MessageObject$GroupedMessages r1 = r9.selectedObjectGroup
            r9.createDeleteMessagesAlert(r0, r1)
            goto L_0x0987
        L_0x08ac:
            org.telegram.messenger.MessageObject$GroupedMessages r0 = r9.selectedObjectGroup
            if (r0 == 0) goto L_0x08de
            r0 = 0
        L_0x08b1:
            org.telegram.messenger.MessageObject$GroupedMessages r1 = r9.selectedObjectGroup
            java.util.ArrayList<org.telegram.messenger.MessageObject> r1 = r1.messages
            int r1 = r1.size()
            if (r0 >= r1) goto L_0x08d3
            org.telegram.messenger.SendMessagesHelper r1 = r19.getSendMessagesHelper()
            org.telegram.messenger.MessageObject$GroupedMessages r4 = r9.selectedObjectGroup
            java.util.ArrayList<org.telegram.messenger.MessageObject> r4 = r4.messages
            java.lang.Object r4 = r4.get(r0)
            org.telegram.messenger.MessageObject r4 = (org.telegram.messenger.MessageObject) r4
            boolean r1 = r1.retrySendMessage(r4, r3)
            if (r1 != 0) goto L_0x08d0
            r2 = 0
        L_0x08d0:
            int r0 = r0 + 1
            goto L_0x08b1
        L_0x08d3:
            if (r2 == 0) goto L_0x0987
            int r0 = r9.chatMode
            if (r0 != 0) goto L_0x0987
            r19.moveScrollToLastMessage()
            goto L_0x0987
        L_0x08de:
            org.telegram.messenger.SendMessagesHelper r0 = r19.getSendMessagesHelper()
            org.telegram.messenger.MessageObject r1 = r9.selectedObject
            boolean r0 = r0.retrySendMessage(r1, r3)
            if (r0 == 0) goto L_0x0987
            r19.updateVisibleRows()
            int r0 = r9.chatMode
            if (r0 != 0) goto L_0x0987
            r19.moveScrollToLastMessage()
            goto L_0x0987
        L_0x08f6:
            org.telegram.ui.Components.ChatActivityEnterView r0 = r9.chatActivityEnterView
            android.view.View r0 = r0.getSendButton()
            boolean r0 = r9.checkSlowMode(r0)
            if (r0 != 0) goto L_0x096f
            org.telegram.messenger.MediaController r0 = r19.getMediaController()
            org.telegram.messenger.MessageObject r1 = r9.selectedObject
            boolean r0 = r0.isPlayingMessage(r1)
            if (r0 == 0) goto L_0x0915
            org.telegram.messenger.MediaController r0 = r19.getMediaController()
            r0.cleanupPlayer(r2, r2)
        L_0x0915:
            org.telegram.tgnet.TLRPC$TL_messages_sendScheduledMessages r0 = new org.telegram.tgnet.TLRPC$TL_messages_sendScheduledMessages
            r0.<init>()
            int r1 = r9.currentAccount
            org.telegram.messenger.MessagesController r1 = org.telegram.messenger.MessagesController.getInstance(r1)
            long r4 = r9.dialog_id
            int r2 = (int) r4
            org.telegram.tgnet.TLRPC$InputPeer r1 = r1.getInputPeer((int) r2)
            r0.peer = r1
            org.telegram.messenger.MessageObject$GroupedMessages r1 = r9.selectedObjectGroup
            if (r1 == 0) goto L_0x0951
        L_0x092d:
            org.telegram.messenger.MessageObject$GroupedMessages r1 = r9.selectedObjectGroup
            java.util.ArrayList<org.telegram.messenger.MessageObject> r1 = r1.messages
            int r1 = r1.size()
            if (r3 >= r1) goto L_0x0960
            java.util.ArrayList<java.lang.Integer> r1 = r0.id
            org.telegram.messenger.MessageObject$GroupedMessages r2 = r9.selectedObjectGroup
            java.util.ArrayList<org.telegram.messenger.MessageObject> r2 = r2.messages
            java.lang.Object r2 = r2.get(r3)
            org.telegram.messenger.MessageObject r2 = (org.telegram.messenger.MessageObject) r2
            int r2 = r2.getId()
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r1.add(r2)
            int r3 = r3 + 1
            goto L_0x092d
        L_0x0951:
            java.util.ArrayList<java.lang.Integer> r1 = r0.id
            org.telegram.messenger.MessageObject r2 = r9.selectedObject
            int r2 = r2.getId()
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r1.add(r2)
        L_0x0960:
            int r1 = r9.currentAccount
            org.telegram.tgnet.ConnectionsManager r1 = org.telegram.tgnet.ConnectionsManager.getInstance(r1)
            org.telegram.ui.-$$Lambda$ChatActivity$EG06tYbmWZG7IOF3XDMHu1sIi48 r2 = new org.telegram.ui.-$$Lambda$ChatActivity$EG06tYbmWZG7IOF3XDMHu1sIi48
            r2.<init>(r0)
            r1.sendRequest(r0, r2)
            goto L_0x0987
        L_0x096f:
            org.telegram.messenger.MessageObject r0 = r9.selectedObject
            org.telegram.messenger.MessageObject$GroupedMessages r1 = r9.selectedObjectGroup
            android.app.Activity r2 = r19.getParentActivity()
            long r3 = r9.dialog_id
            org.telegram.tgnet.TLRPC$Message r5 = r0.messageOwner
            int r5 = r5.date
            long r5 = (long) r5
            org.telegram.ui.-$$Lambda$ChatActivity$R232nuWZbFcLJBcnaPw0X4bI8AQ r7 = new org.telegram.ui.-$$Lambda$ChatActivity$R232nuWZbFcLJBcnaPw0X4bI8AQ
            r7.<init>(r1, r0)
            r8 = 0
            org.telegram.ui.Components.AlertsCreator.createScheduleDatePickerDialog(r2, r3, r5, r7, r8)
        L_0x0987:
            r9.selectedObject = r10
            r9.selectedObjectGroup = r10
            r9.selectedObjectToEditCaption = r10
        L_0x098d:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.processSelectedOption(int):void");
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$processSelectedOption$114 */
    public /* synthetic */ void lambda$processSelectedOption$114$ChatActivity(boolean z, int i) {
        if (getParentActivity() != null && this.fragmentView != null && i > 0) {
            BulletinFactory.of((BaseFragment) this).createDownloadBulletin(z ? BulletinFactory.FileType.AUDIOS : BulletinFactory.FileType.UNKNOWNS, i).show();
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$processSelectedOption$115 */
    public /* synthetic */ void lambda$processSelectedOption$115$ChatActivity(boolean z, boolean z2, boolean z3) {
        BulletinFactory.FileType fileType;
        if (getParentActivity() != null) {
            if (z) {
                fileType = BulletinFactory.FileType.PHOTO_TO_DOWNLOADS;
            } else if (z2) {
                fileType = BulletinFactory.FileType.VIDEO_TO_DOWNLOADS;
            } else if (z3) {
                fileType = BulletinFactory.FileType.GIF;
            } else {
                fileType = BulletinFactory.FileType.UNKNOWN;
            }
            BulletinFactory.of((BaseFragment) this).createDownloadBulletin(fileType).show();
        }
    }

    static /* synthetic */ void lambda$processSelectedOption$116(boolean[] zArr, View view) {
        zArr[1] = !zArr[1];
        ((CheckBoxCell) view).setChecked(zArr[1], true);
    }

    static /* synthetic */ void lambda$processSelectedOption$117(boolean[] zArr, View view) {
        zArr[0] = !zArr[0];
        ((CheckBoxCell) view).setChecked(zArr[0], true);
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$processSelectedOption$118 */
    public /* synthetic */ void lambda$processSelectedOption$118$ChatActivity(int i, boolean[] zArr, DialogInterface dialogInterface, int i2) {
        getMessagesController().pinMessage(this.currentChat, this.currentUser, i, false, !zArr[1], zArr[0]);
        BulletinFactory.createPinMessageBulletin(this).show();
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$processSelectedOption$120 */
    public /* synthetic */ void lambda$processSelectedOption$120$ChatActivity(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
        AndroidUtilities.runOnUIThread(new Runnable(tLObject) {
            public final /* synthetic */ TLObject f$1;

            {
                this.f$1 = r2;
            }

            public final void run() {
                ChatActivity.this.lambda$null$119$ChatActivity(this.f$1);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$119 */
    public /* synthetic */ void lambda$null$119$ChatActivity(TLObject tLObject) {
        if (tLObject != null) {
            TLRPC$TL_exportedMessageLink tLRPC$TL_exportedMessageLink = (TLRPC$TL_exportedMessageLink) tLObject;
            try {
                ((ClipboardManager) ApplicationLoader.applicationContext.getSystemService("clipboard")).setPrimaryClip(ClipData.newPlainText("label", tLRPC$TL_exportedMessageLink.link));
                if (BulletinFactory.canShowBulletin(this)) {
                    BulletinFactory.of((BaseFragment) this).createCopyLinkBulletin(!isThreadChat() && tLRPC$TL_exportedMessageLink.link.contains("/c/")).show();
                }
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            }
        }
    }

    static /* synthetic */ void lambda$processSelectedOption$121(AlertDialog[] alertDialogArr) {
        try {
            alertDialogArr[0].dismiss();
        } catch (Throwable unused) {
        }
        alertDialogArr[0] = null;
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$processSelectedOption$123 */
    public /* synthetic */ void lambda$processSelectedOption$123$ChatActivity(AlertDialog[] alertDialogArr, int i) {
        if (alertDialogArr[0] != null) {
            alertDialogArr[0].setOnCancelListener(new DialogInterface.OnCancelListener(i) {
                public final /* synthetic */ int f$1;

                {
                    this.f$1 = r2;
                }

                public final void onCancel(DialogInterface dialogInterface) {
                    ChatActivity.this.lambda$null$122$ChatActivity(this.f$1, dialogInterface);
                }
            });
            showDialog(alertDialogArr[0]);
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$122 */
    public /* synthetic */ void lambda$null$122$ChatActivity(int i, DialogInterface dialogInterface) {
        getConnectionsManager().cancelRequest(i, true);
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$processSelectedOption$129 */
    public /* synthetic */ void lambda$processSelectedOption$129$ChatActivity(MessageObject messageObject, DialogInterface dialogInterface, int i) {
        AlertDialog[] alertDialogArr = {new AlertDialog(getParentActivity(), 3)};
        TLRPC$TL_messages_editMessage tLRPC$TL_messages_editMessage = new TLRPC$TL_messages_editMessage();
        TLRPC$TL_inputMediaPoll tLRPC$TL_inputMediaPoll = new TLRPC$TL_inputMediaPoll();
        TLRPC$TL_poll tLRPC$TL_poll = new TLRPC$TL_poll();
        tLRPC$TL_inputMediaPoll.poll = tLRPC$TL_poll;
        TLRPC$Poll tLRPC$Poll = ((TLRPC$TL_messageMediaPoll) messageObject.messageOwner.media).poll;
        tLRPC$TL_poll.id = tLRPC$Poll.id;
        tLRPC$TL_poll.question = tLRPC$Poll.question;
        tLRPC$TL_poll.answers = tLRPC$Poll.answers;
        tLRPC$TL_poll.closed = true;
        tLRPC$TL_messages_editMessage.media = tLRPC$TL_inputMediaPoll;
        tLRPC$TL_messages_editMessage.peer = getMessagesController().getInputPeer((int) this.dialog_id);
        tLRPC$TL_messages_editMessage.id = messageObject.getId();
        tLRPC$TL_messages_editMessage.flags |= 16384;
        AndroidUtilities.runOnUIThread(new Runnable(alertDialogArr, getConnectionsManager().sendRequest(tLRPC$TL_messages_editMessage, new RequestDelegate(alertDialogArr, tLRPC$TL_messages_editMessage) {
            public final /* synthetic */ AlertDialog[] f$1;
            public final /* synthetic */ TLRPC$TL_messages_editMessage f$2;

            {
                this.f$1 = r2;
                this.f$2 = r3;
            }

            public final void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                ChatActivity.this.lambda$null$126$ChatActivity(this.f$1, this.f$2, tLObject, tLRPC$TL_error);
            }
        })) {
            public final /* synthetic */ AlertDialog[] f$1;
            public final /* synthetic */ int f$2;

            {
                this.f$1 = r2;
                this.f$2 = r3;
            }

            public final void run() {
                ChatActivity.this.lambda$null$128$ChatActivity(this.f$1, this.f$2);
            }
        }, 500);
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$126 */
    public /* synthetic */ void lambda$null$126$ChatActivity(AlertDialog[] alertDialogArr, TLRPC$TL_messages_editMessage tLRPC$TL_messages_editMessage, TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
        AndroidUtilities.runOnUIThread(new Runnable(alertDialogArr) {
            public final /* synthetic */ AlertDialog[] f$0;

            {
                this.f$0 = r1;
            }

            public final void run() {
                ChatActivity.lambda$null$124(this.f$0);
            }
        });
        if (tLRPC$TL_error == null) {
            getMessagesController().processUpdates((TLRPC$Updates) tLObject, false);
        } else {
            AndroidUtilities.runOnUIThread(new Runnable(tLRPC$TL_error, tLRPC$TL_messages_editMessage) {
                public final /* synthetic */ TLRPC$TL_error f$1;
                public final /* synthetic */ TLRPC$TL_messages_editMessage f$2;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                }

                public final void run() {
                    ChatActivity.this.lambda$null$125$ChatActivity(this.f$1, this.f$2);
                }
            });
        }
    }

    static /* synthetic */ void lambda$null$124(AlertDialog[] alertDialogArr) {
        try {
            alertDialogArr[0].dismiss();
        } catch (Throwable unused) {
        }
        alertDialogArr[0] = null;
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$125 */
    public /* synthetic */ void lambda$null$125$ChatActivity(TLRPC$TL_error tLRPC$TL_error, TLRPC$TL_messages_editMessage tLRPC$TL_messages_editMessage) {
        AlertsCreator.processError(this.currentAccount, tLRPC$TL_error, this, tLRPC$TL_messages_editMessage, new Object[0]);
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$128 */
    public /* synthetic */ void lambda$null$128$ChatActivity(AlertDialog[] alertDialogArr, int i) {
        if (alertDialogArr[0] != null) {
            alertDialogArr[0].setOnCancelListener(new DialogInterface.OnCancelListener(i) {
                public final /* synthetic */ int f$1;

                {
                    this.f$1 = r2;
                }

                public final void onCancel(DialogInterface dialogInterface) {
                    ChatActivity.this.lambda$null$127$ChatActivity(this.f$1, dialogInterface);
                }
            });
            showDialog(alertDialogArr[0]);
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$127 */
    public /* synthetic */ void lambda$null$127$ChatActivity(int i, DialogInterface dialogInterface) {
        getConnectionsManager().cancelRequest(i, true);
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$processSelectedOption$132 */
    public /* synthetic */ void lambda$processSelectedOption$132$ChatActivity(TLRPC$TL_messages_sendScheduledMessages tLRPC$TL_messages_sendScheduledMessages, TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
        if (tLRPC$TL_error == null) {
            MessagesController.getInstance(this.currentAccount).processUpdates((TLRPC$Updates) tLObject, false);
            AndroidUtilities.runOnUIThread(new Runnable(tLRPC$TL_messages_sendScheduledMessages) {
                public final /* synthetic */ TLRPC$TL_messages_sendScheduledMessages f$1;

                {
                    this.f$1 = r2;
                }

                public final void run() {
                    ChatActivity.this.lambda$null$130$ChatActivity(this.f$1);
                }
            });
        } else if (tLRPC$TL_error.text != null) {
            AndroidUtilities.runOnUIThread(new Runnable(tLRPC$TL_error) {
                public final /* synthetic */ TLRPC$TL_error f$1;

                {
                    this.f$1 = r2;
                }

                public final void run() {
                    ChatActivity.this.lambda$null$131$ChatActivity(this.f$1);
                }
            });
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$130 */
    public /* synthetic */ void lambda$null$130$ChatActivity(TLRPC$TL_messages_sendScheduledMessages tLRPC$TL_messages_sendScheduledMessages) {
        NotificationCenter.getInstance(this.currentAccount).postNotificationName(NotificationCenter.messagesDeleted, tLRPC$TL_messages_sendScheduledMessages.id, Integer.valueOf((int) (-this.dialog_id)), Boolean.TRUE, Long.valueOf(this.dialog_id));
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$131 */
    public /* synthetic */ void lambda$null$131$ChatActivity(TLRPC$TL_error tLRPC$TL_error) {
        if (tLRPC$TL_error.text.startsWith("SLOWMODE_WAIT_")) {
            AlertsCreator.showSimpleToast(this, LocaleController.getString("SlowmodeSendError", NUM));
        } else if (tLRPC$TL_error.text.equals("CHAT_SEND_MEDIA_FORBIDDEN")) {
            AlertsCreator.showSimpleToast(this, LocaleController.getString("AttachMediaRestrictedForever", NUM));
        } else {
            AlertsCreator.showSimpleToast(this, tLRPC$TL_error.text);
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$processSelectedOption$133 */
    public /* synthetic */ void lambda$processSelectedOption$133$ChatActivity(MessageObject.GroupedMessages groupedMessages, MessageObject messageObject, boolean z, int i) {
        if (groupedMessages == null || groupedMessages.messages.isEmpty()) {
            SendMessagesHelper.getInstance(this.currentAccount).editMessage(messageObject, (String) null, false, this, (ArrayList<TLRPC$MessageEntity>) null, i);
        } else {
            SendMessagesHelper.getInstance(this.currentAccount).editMessage(groupedMessages.messages.get(0), (String) null, false, this, (ArrayList<TLRPC$MessageEntity>) null, i);
        }
    }

    public void didSelectDialogs(DialogsActivity dialogsActivity, ArrayList<Long> arrayList, CharSequence charSequence, boolean z) {
        ArrayList<Long> arrayList2 = arrayList;
        if (this.forwardingMessage != null || this.selectedMessagesIds[0].size() != 0 || this.selectedMessagesIds[1].size() != 0) {
            ArrayList arrayList3 = new ArrayList();
            MessageObject messageObject = this.forwardingMessage;
            if (messageObject != null) {
                MessageObject.GroupedMessages groupedMessages = this.forwardingMessageGroup;
                if (groupedMessages != null) {
                    arrayList3.addAll(groupedMessages.messages);
                } else {
                    arrayList3.add(messageObject);
                }
                this.forwardingMessage = null;
                this.forwardingMessageGroup = null;
            } else {
                for (int i = 1; i >= 0; i--) {
                    ArrayList arrayList4 = new ArrayList();
                    for (int i2 = 0; i2 < this.selectedMessagesIds[i].size(); i2++) {
                        arrayList4.add(Integer.valueOf(this.selectedMessagesIds[i].keyAt(i2)));
                    }
                    Collections.sort(arrayList4);
                    for (int i3 = 0; i3 < arrayList4.size(); i3++) {
                        MessageObject messageObject2 = this.selectedMessagesIds[i].get(((Integer) arrayList4.get(i3)).intValue());
                        if (messageObject2 != null) {
                            arrayList3.add(messageObject2);
                        }
                    }
                    this.selectedMessagesCanCopyIds[i].clear();
                    this.selectedMessagesCanStarIds[i].clear();
                    this.selectedMessagesIds[i].clear();
                }
                hideActionMode();
                updatePinnedMessageView(true);
                updateVisibleRows();
            }
            if (arrayList.size() > 1 || arrayList2.get(0).longValue() == ((long) getUserConfig().getClientUserId()) || charSequence != null) {
                DialogsActivity dialogsActivity2 = dialogsActivity;
                hideFieldPanel(false);
                for (int i4 = 0; i4 < arrayList.size(); i4++) {
                    long longValue = arrayList2.get(i4).longValue();
                    if (charSequence != null) {
                        getSendMessagesHelper().sendMessage(charSequence.toString(), longValue, (MessageObject) null, (MessageObject) null, (TLRPC$WebPage) null, true, (ArrayList<TLRPC$MessageEntity>) null, (TLRPC$ReplyMarkup) null, (HashMap<String, String>) null, true, 0);
                    }
                    getSendMessagesHelper().sendMessage(arrayList3, longValue, true, 0);
                }
                dialogsActivity.finishFragment();
                if (arrayList.size() == 1) {
                    this.undoView.showWithAction(arrayList2.get(0).longValue(), 53, (Object) Integer.valueOf(arrayList3.size()));
                } else {
                    this.undoView.showWithAction(0, 53, Integer.valueOf(arrayList3.size()), Integer.valueOf(arrayList.size()), (Runnable) null, (Runnable) null);
                }
            } else {
                long longValue2 = arrayList2.get(0).longValue();
                if (longValue2 != this.dialog_id || this.chatMode == 2) {
                    int i5 = (int) longValue2;
                    int i6 = (int) (longValue2 >> 32);
                    Bundle bundle = new Bundle();
                    bundle.putBoolean("scrollToTopOnResume", this.scrollToTopOnResume);
                    if (i5 == 0) {
                        bundle.putInt("enc_id", i6);
                    } else if (i5 > 0) {
                        bundle.putInt("user_id", i5);
                    } else {
                        bundle.putInt("chat_id", -i5);
                    }
                    if (i5 == 0) {
                        DialogsActivity dialogsActivity3 = dialogsActivity;
                    } else if (!getMessagesController().checkCanOpenChat(bundle, dialogsActivity)) {
                        return;
                    }
                    ChatActivity chatActivity = new ChatActivity(bundle);
                    if (presentFragment(chatActivity, true)) {
                        chatActivity.showFieldPanelForForward(true, arrayList3);
                        if (!AndroidUtilities.isTablet()) {
                            removeSelfFromStack();
                            return;
                        }
                        return;
                    }
                    dialogsActivity.finishFragment();
                    return;
                }
                dialogsActivity.finishFragment();
                moveScrollToLastMessage();
                showFieldPanelForForward(true, arrayList3);
                if (AndroidUtilities.isTablet()) {
                    hideActionMode();
                    updatePinnedMessageView(true);
                }
                updateVisibleRows();
            }
        }
    }

    public boolean checkRecordLocked(boolean z) {
        ChatActivityEnterView chatActivityEnterView2 = this.chatActivityEnterView;
        if (chatActivityEnterView2 == null || !chatActivityEnterView2.isRecordLocked()) {
            return false;
        }
        AlertDialog.Builder builder = new AlertDialog.Builder((Context) getParentActivity());
        if (this.chatActivityEnterView.isInVideoMode()) {
            builder.setTitle(LocaleController.getString("DiscardVideoMessageTitle", NUM));
            builder.setMessage(LocaleController.getString("DiscardVideoMessageDescription", NUM));
        } else {
            builder.setTitle(LocaleController.getString("DiscardVoiceMessageTitle", NUM));
            builder.setMessage(LocaleController.getString("DiscardVoiceMessageDescription", NUM));
        }
        builder.setPositiveButton(LocaleController.getString("DiscardVoiceMessageAction", NUM), new DialogInterface.OnClickListener(z) {
            public final /* synthetic */ boolean f$1;

            {
                this.f$1 = r2;
            }

            public final void onClick(DialogInterface dialogInterface, int i) {
                ChatActivity.this.lambda$checkRecordLocked$134$ChatActivity(this.f$1, dialogInterface, i);
            }
        });
        builder.setNegativeButton(LocaleController.getString("Continue", NUM), (DialogInterface.OnClickListener) null);
        showDialog(builder.create());
        return true;
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$checkRecordLocked$134 */
    public /* synthetic */ void lambda$checkRecordLocked$134$ChatActivity(boolean z, DialogInterface dialogInterface, int i) {
        ChatActivityEnterView chatActivityEnterView2 = this.chatActivityEnterView;
        if (chatActivityEnterView2 == null) {
            return;
        }
        if (z) {
            finishFragment();
        } else {
            chatActivityEnterView2.cancelRecordingAudioVideo();
        }
    }

    public boolean onBackPressed() {
        if (this.messagesSearchListView.getTag() != null) {
            showMessagesSearchListView(false);
            return false;
        }
        ActionBarPopupWindow actionBarPopupWindow = this.scrimPopupWindow;
        if (actionBarPopupWindow != null) {
            actionBarPopupWindow.dismiss();
            return false;
        } else if (checkRecordLocked(false)) {
            return false;
        } else {
            if (this.textSelectionHelper.isSelectionMode()) {
                this.textSelectionHelper.clear();
                return false;
            }
            ActionBar actionBar = this.actionBar;
            if (actionBar == null || !actionBar.isActionModeShowed()) {
                ChatActivityEnterView chatActivityEnterView2 = this.chatActivityEnterView;
                if (chatActivityEnterView2 == null || !chatActivityEnterView2.isPopupShowing()) {
                    return true;
                }
                this.chatActivityEnterView.hidePopup(true);
                return false;
            }
            clearSelectionMode();
            return false;
        }
    }

    /* access modifiers changed from: private */
    public void clearSelectionMode() {
        for (int i = 1; i >= 0; i--) {
            this.selectedMessagesIds[i].clear();
            this.selectedMessagesCanCopyIds[i].clear();
            this.selectedMessagesCanStarIds[i].clear();
        }
        hideActionMode();
        updatePinnedMessageView(true);
        updateVisibleRows();
    }

    public void onListItemAniamtorTick() {
        invalidateMessagesVisiblePart();
        if (this.scrimView != null) {
            this.fragmentView.invalidate();
        }
    }

    public void setThreadMessages(ArrayList<MessageObject> arrayList, TLRPC$Chat tLRPC$Chat, int i, int i2, int i3) {
        this.threadMessageObjects = arrayList;
        boolean z = true;
        MessageObject messageObject = arrayList.get(arrayList.size() - 1);
        this.threadMessageObject = messageObject;
        this.replyingMessageObject = messageObject;
        this.threadMaxInboxReadId = i2;
        this.threadMaxOutboxReadId = i3;
        this.replyMaxReadId = Math.max(1, i2);
        this.threadMessageId = this.threadMessageObject.getId();
        this.replyOriginalMessageId = i;
        this.replyOriginalChat = tLRPC$Chat;
        TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader = this.replyingMessageObject.messageOwner.fwd_from;
        if (tLRPC$MessageFwdHeader == null || tLRPC$MessageFwdHeader.channel_post == 0) {
            z = false;
        }
        this.isComments = z;
    }

    public void setHighlightMessageId(int i) {
        this.highlightMessageId = i;
    }

    public boolean isThreadChat() {
        return this.threadMessageObject != null;
    }

    public boolean isReplyChatComment() {
        return this.threadMessageObject != null && this.isComments;
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:106:? A[RETURN, SYNTHETIC] */
    /* JADX WARNING: Removed duplicated region for block: B:20:0x0066  */
    /* JADX WARNING: Removed duplicated region for block: B:23:0x006d  */
    /* JADX WARNING: Removed duplicated region for block: B:24:0x0070  */
    /* JADX WARNING: Removed duplicated region for block: B:27:0x0074  */
    /* JADX WARNING: Removed duplicated region for block: B:95:0x0187  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public void updateVisibleRows() {
        /*
            r16 = this;
            r0 = r16
            org.telegram.ui.Components.RecyclerListView r1 = r0.chatListView
            if (r1 != 0) goto L_0x0007
            return
        L_0x0007:
            boolean r2 = r0.wasManualScroll
            r3 = -1
            r4 = 0
            if (r2 != 0) goto L_0x005a
            org.telegram.messenger.MessageObject r2 = r0.unreadMessageObject
            if (r2 == 0) goto L_0x005a
            int r1 = r1.getChildCount()
            r2 = 0
        L_0x0016:
            if (r2 >= r1) goto L_0x005a
            org.telegram.ui.Components.RecyclerListView r5 = r0.chatListView
            android.view.View r5 = r5.getChildAt(r2)
            boolean r6 = r5 instanceof org.telegram.ui.Cells.ChatMessageCell
            if (r6 == 0) goto L_0x0057
            r6 = r5
            org.telegram.ui.Cells.ChatMessageCell r6 = (org.telegram.ui.Cells.ChatMessageCell) r6
            org.telegram.messenger.MessageObject r6 = r6.getMessageObject()
            org.telegram.messenger.MessageObject r7 = r0.unreadMessageObject
            if (r6 != r7) goto L_0x0057
            java.util.ArrayList<org.telegram.messenger.MessageObject> r1 = r0.messages
            int r1 = r1.indexOf(r7)
            if (r1 < 0) goto L_0x005a
            org.telegram.ui.ChatActivity$ChatActivityAdapter r1 = r0.chatAdapter
            int r1 = r1.messagesStartRow
            java.util.ArrayList<org.telegram.messenger.MessageObject> r2 = r0.messages
            org.telegram.messenger.MessageObject r6 = r0.unreadMessageObject
            int r2 = r2.indexOf(r6)
            int r1 = r1 + r2
            org.telegram.ui.Components.RecyclerListView r2 = r0.chatListView
            int r2 = r2.getMeasuredHeight()
            int r5 = r5.getBottom()
            int r2 = r2 - r5
            org.telegram.ui.Components.RecyclerListView r5 = r0.chatListView
            int r5 = r5.getPaddingBottom()
            int r2 = r2 - r5
            goto L_0x005c
        L_0x0057:
            int r2 = r2 + 1
            goto L_0x0016
        L_0x005a:
            r1 = -1
            r2 = 0
        L_0x005c:
            org.telegram.ui.Components.RecyclerListView r5 = r0.chatListView
            int r5 = r5.getChildCount()
            org.telegram.ui.Components.ChatActivityEnterView r6 = r0.chatActivityEnterView
            if (r6 == 0) goto L_0x0069
            r6.getEditingMessageObject()
        L_0x0069:
            org.telegram.tgnet.TLRPC$ChatFull r6 = r0.chatInfo
            if (r6 == 0) goto L_0x0070
            int r6 = r6.linked_chat_id
            goto L_0x0071
        L_0x0070:
            r6 = 0
        L_0x0071:
            r7 = 0
        L_0x0072:
            if (r7 >= r5) goto L_0x0185
            org.telegram.ui.Components.RecyclerListView r8 = r0.chatListView
            android.view.View r8 = r8.getChildAt(r7)
            boolean r9 = r8 instanceof org.telegram.ui.Cells.ChatMessageCell
            if (r9 == 0) goto L_0x0174
            org.telegram.ui.Cells.ChatMessageCell r8 = (org.telegram.ui.Cells.ChatMessageCell) r8
            org.telegram.messenger.MessageObject r9 = r8.getMessageObject()
            org.telegram.ui.ActionBar.ActionBar r10 = r0.actionBar
            boolean r10 = r10.isActionModeShowed()
            r11 = 1
            if (r10 != 0) goto L_0x009e
            int r10 = r0.reportType
            if (r10 < 0) goto L_0x0092
            goto L_0x009e
        L_0x0092:
            r8.setDrawSelectionBackground(r4)
            r8.setCheckBoxVisible(r4, r11)
            r8.setChecked(r4, r4, r11)
            r10 = 0
            r12 = 0
            goto L_0x00d7
        L_0x009e:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r10 = r0.threadMessageObjects
            if (r10 == 0) goto L_0x00ab
            boolean r10 = r10.contains(r9)
            if (r10 != 0) goto L_0x00a9
            goto L_0x00ab
        L_0x00a9:
            r10 = 0
            goto L_0x00ac
        L_0x00ab:
            r10 = 1
        L_0x00ac:
            r8.setCheckBoxVisible(r10, r11)
            long r12 = r9.getDialogId()
            long r14 = r0.dialog_id
            int r10 = (r12 > r14 ? 1 : (r12 == r14 ? 0 : -1))
            if (r10 != 0) goto L_0x00bb
            r10 = 0
            goto L_0x00bc
        L_0x00bb:
            r10 = 1
        L_0x00bc:
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r12 = r0.selectedMessagesIds
            r12 = r12[r10]
            int r13 = r9.getId()
            int r12 = r12.indexOfKey(r13)
            if (r12 < 0) goto L_0x00cf
            r0.setCellSelectionBackground(r9, r8, r10, r11)
            r10 = 1
            goto L_0x00d6
        L_0x00cf:
            r8.setDrawSelectionBackground(r4)
            r8.setChecked(r4, r4, r11)
            r10 = 0
        L_0x00d6:
            r12 = 1
        L_0x00d7:
            org.telegram.messenger.MessageObject r13 = r8.getMessageObject()
            boolean r13 = r13.deleted
            if (r13 == 0) goto L_0x00e3
            int r13 = r8.linkedChatId
            if (r13 == r6) goto L_0x0106
        L_0x00e3:
            r8.setIsUpdating(r11)
            org.telegram.tgnet.TLRPC$ChatFull r13 = r0.chatInfo
            if (r13 == 0) goto L_0x00ed
            int r13 = r13.linked_chat_id
            goto L_0x00ee
        L_0x00ed:
            r13 = 0
        L_0x00ee:
            r8.linkedChatId = r13
            org.telegram.messenger.MessageObject r13 = r8.getMessageObject()
            org.telegram.messenger.MessageObject$GroupedMessages r14 = r8.getCurrentMessagesGroup()
            boolean r15 = r8.isPinnedBottom()
            boolean r11 = r8.isPinnedTop()
            r8.setMessageObject(r13, r14, r15, r11)
            r8.setIsUpdating(r4)
        L_0x0106:
            android.view.View r11 = r0.scrimView
            if (r8 == r11) goto L_0x0116
            r11 = r12 ^ 1
            if (r12 == 0) goto L_0x0112
            if (r10 == 0) goto L_0x0112
            r10 = 1
            goto L_0x0113
        L_0x0112:
            r10 = 0
        L_0x0113:
            r8.setCheckPressed(r11, r10)
        L_0x0116:
            int r10 = r0.highlightMessageId
            r11 = 2147483647(0x7fffffff, float:NaN)
            if (r10 == r11) goto L_0x0129
            if (r9 == 0) goto L_0x0129
            int r10 = r9.getId()
            int r12 = r0.highlightMessageId
            if (r10 != r12) goto L_0x0129
            r10 = 1
            goto L_0x012a
        L_0x0129:
            r10 = 0
        L_0x012a:
            r8.setHighlighted(r10)
            int r10 = r0.highlightMessageId
            if (r10 == r11) goto L_0x0134
            r16.startMessageUnselect()
        L_0x0134:
            android.widget.FrameLayout r10 = r0.searchContainer
            if (r10 == 0) goto L_0x016f
            int r10 = r10.getVisibility()
            if (r10 != 0) goto L_0x016f
            org.telegram.messenger.MediaDataController r10 = r16.getMediaDataController()
            int r11 = r9.getId()
            long r12 = r9.getDialogId()
            long r14 = r0.mergeDialogId
            int r9 = (r12 > r14 ? 1 : (r12 == r14 ? 0 : -1))
            if (r9 != 0) goto L_0x0152
            r9 = 1
            goto L_0x0153
        L_0x0152:
            r9 = 0
        L_0x0153:
            boolean r9 = r10.isMessageFound(r11, r9)
            if (r9 == 0) goto L_0x016f
            org.telegram.messenger.MediaDataController r9 = r16.getMediaDataController()
            java.lang.String r9 = r9.getLastSearchQuery()
            if (r9 == 0) goto L_0x016f
            org.telegram.messenger.MediaDataController r9 = r16.getMediaDataController()
            java.lang.String r9 = r9.getLastSearchQuery()
            r8.setHighlightedText(r9)
            goto L_0x0181
        L_0x016f:
            r9 = 0
            r8.setHighlightedText(r9)
            goto L_0x0181
        L_0x0174:
            boolean r9 = r8 instanceof org.telegram.ui.Cells.ChatActionCell
            if (r9 == 0) goto L_0x0181
            org.telegram.ui.Cells.ChatActionCell r8 = (org.telegram.ui.Cells.ChatActionCell) r8
            org.telegram.messenger.MessageObject r9 = r8.getMessageObject()
            r8.setMessageObject(r9)
        L_0x0181:
            int r7 = r7 + 1
            goto L_0x0072
        L_0x0185:
            if (r1 == r3) goto L_0x018c
            androidx.recyclerview.widget.GridLayoutManagerFixed r3 = r0.chatLayoutManager
            r3.scrollToPositionWithOffset(r1, r2)
        L_0x018c:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.updateVisibleRows():void");
    }

    /* access modifiers changed from: private */
    public void checkEditTimer() {
        MessageObject editingMessageObject2;
        ChatActivityEnterView chatActivityEnterView2 = this.chatActivityEnterView;
        if (chatActivityEnterView2 != null && (editingMessageObject2 = chatActivityEnterView2.getEditingMessageObject()) != null && !editingMessageObject2.scheduled) {
            TLRPC$User tLRPC$User = this.currentUser;
            if (tLRPC$User == null || !tLRPC$User.self) {
                int abs = editingMessageObject2.canEditMessageAnytime(this.currentChat) ? 360 : (getMessagesController().maxEditTime + 300) - Math.abs(getConnectionsManager().getCurrentTime() - editingMessageObject2.messageOwner.date);
                if (abs > 0) {
                    if (abs <= 300) {
                        this.replyObjectTextView.setText(LocaleController.formatString("TimeToEdit", NUM, AndroidUtilities.formatShortDuration(abs)));
                    }
                    AndroidUtilities.runOnUIThread(new Runnable() {
                        public final void run() {
                            ChatActivity.this.checkEditTimer();
                        }
                    }, 1000);
                    return;
                }
                this.chatActivityEnterView.onEditTimeExpired();
                this.replyObjectTextView.setText(LocaleController.formatString("TimeToEditExpired", NUM, new Object[0]));
            }
        }
    }

    /* access modifiers changed from: private */
    public ArrayList<MessageObject> createVoiceMessagesPlaylist(MessageObject messageObject, boolean z) {
        ArrayList<MessageObject> arrayList = new ArrayList<>();
        arrayList.add(messageObject);
        int id = messageObject.getId();
        messageObject.getDialogId();
        if (id != 0) {
            for (int size = this.messages.size() - 1; size >= 0; size--) {
                MessageObject messageObject2 = this.messages.get(size);
                if ((messageObject2.getDialogId() != this.mergeDialogId || messageObject.getDialogId() == this.mergeDialogId) && (((this.currentEncryptedChat == null && messageObject2.getId() > id) || (this.currentEncryptedChat != null && messageObject2.getId() < id)) && ((messageObject2.isVoice() || messageObject2.isRoundVideo()) && (!z || (messageObject2.isContentUnread() && !messageObject2.isOut()))))) {
                    arrayList.add(messageObject2);
                }
            }
        }
        return arrayList;
    }

    /* access modifiers changed from: private */
    public void alertUserOpenError(MessageObject messageObject) {
        if (getParentActivity() != null) {
            AlertDialog.Builder builder = new AlertDialog.Builder((Context) getParentActivity());
            builder.setTitle(LocaleController.getString("AppName", NUM));
            builder.setPositiveButton(LocaleController.getString("OK", NUM), (DialogInterface.OnClickListener) null);
            if (messageObject.type == 3) {
                builder.setMessage(LocaleController.getString("NoPlayerInstalled", NUM));
            } else {
                builder.setMessage(LocaleController.formatString("NoHandleAppInstalled", NUM, messageObject.getDocument().mime_type));
            }
            showDialog(builder.create());
        }
    }

    /* access modifiers changed from: private */
    public void openSearchWithText(String str) {
        ActionBarMenuItem actionBarMenuItem;
        if (!this.actionBar.isSearchFieldVisible()) {
            AndroidUtilities.updateViewVisibilityAnimated(this.avatarContainer, false, 0.95f, true);
            ActionBarMenuItem actionBarMenuItem2 = this.headerItem;
            if (actionBarMenuItem2 != null) {
                actionBarMenuItem2.setVisibility(8);
            }
            ActionBarMenuItem actionBarMenuItem3 = this.attachItem;
            if (actionBarMenuItem3 != null) {
                actionBarMenuItem3.setVisibility(8);
            }
            ActionBarMenuItem actionBarMenuItem4 = this.editTextItem;
            if (actionBarMenuItem4 != null) {
                actionBarMenuItem4.setVisibility(8);
            }
            if (this.threadMessageId == 0 && (actionBarMenuItem = this.searchItem) != null) {
                actionBarMenuItem.setVisibility(0);
            }
            this.searchItemVisible = true;
            updateSearchButtons(0, 0, -1);
            updateBottomOverlay();
        }
        if (this.threadMessageId == 0 && !UserObject.isReplyUser(this.currentUser)) {
            boolean z = str == null;
            this.openSearchKeyboard = z;
            ActionBarMenuItem actionBarMenuItem5 = this.searchItem;
            if (actionBarMenuItem5 != null) {
                actionBarMenuItem5.openSearch(z);
            }
        }
        if (str != null) {
            ActionBarMenuItem actionBarMenuItem6 = this.searchItem;
            if (actionBarMenuItem6 != null) {
                actionBarMenuItem6.setSearchFieldText(str, false);
            }
            getMediaDataController().searchMessagesInChat(str, this.dialog_id, this.mergeDialogId, this.classGuid, 0, this.threadMessageId, this.searchingUserMessages, this.searchingChatMessages);
        }
        updatePinnedMessageView(true);
    }

    public void didSelectLocation(TLRPC$MessageMedia tLRPC$MessageMedia, int i, boolean z, int i2) {
        getSendMessagesHelper().sendMessage(tLRPC$MessageMedia, this.dialog_id, this.replyingMessageObject, getThreadMessage(), (TLRPC$ReplyMarkup) null, (HashMap<String, String>) null, z, i2);
        if (this.chatMode == 0) {
            moveScrollToLastMessage();
        }
        if (i == 0 || i == 1) {
            afterMessageSend();
        }
        if (this.paused) {
            this.scrollToTopOnResume = true;
        }
    }

    public boolean isEditingMessageMedia() {
        ChatAttachAlert chatAttachAlert2 = this.chatAttachAlert;
        return (chatAttachAlert2 == null || chatAttachAlert2.getEditingMessageObject() == null) ? false : true;
    }

    public boolean isSecretChat() {
        return this.currentEncryptedChat != null;
    }

    /* JADX WARNING: Code restructure failed: missing block: B:2:0x0004, code lost:
        r0 = r1.bottomOverlayChat;
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public boolean canScheduleMessage() {
        /*
            r1 = this;
            org.telegram.tgnet.TLRPC$EncryptedChat r0 = r1.currentEncryptedChat
            if (r0 != 0) goto L_0x0016
            android.widget.FrameLayout r0 = r1.bottomOverlayChat
            if (r0 == 0) goto L_0x000e
            int r0 = r0.getVisibility()
            if (r0 == 0) goto L_0x0016
        L_0x000e:
            boolean r0 = r1.isThreadChat()
            if (r0 != 0) goto L_0x0016
            r0 = 1
            goto L_0x0017
        L_0x0016:
            r0 = 0
        L_0x0017:
            return r0
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.canScheduleMessage():boolean");
    }

    public boolean isInScheduleMode() {
        return this.chatMode == 1;
    }

    public int getChatMode() {
        return this.chatMode;
    }

    public MessageObject getThreadMessage() {
        return this.threadMessageObject;
    }

    public MessageObject getReplyMessage() {
        return this.replyingMessageObject;
    }

    public int getThreadId() {
        return this.threadMessageId;
    }

    public long getInlineReturn() {
        return this.inlineReturn;
    }

    public TLRPC$User getCurrentUser() {
        return this.currentUser;
    }

    public TLRPC$Chat getCurrentChat() {
        return this.currentChat;
    }

    public TLRPC$EncryptedChat getCurrentEncryptedChat() {
        return this.currentEncryptedChat;
    }

    public TLRPC$ChatFull getCurrentChatInfo() {
        return this.chatInfo;
    }

    public ChatObject.Call getGroupCall() {
        ChatObject.Call call;
        if (this.chatMode != 0 || (call = this.groupCall) == null || !(call.call instanceof TLRPC$TL_groupCall)) {
            return null;
        }
        return call;
    }

    public TLRPC$UserFull getCurrentUserInfo() {
        return this.userInfo;
    }

    public void sendAudio(ArrayList<MessageObject> arrayList, CharSequence charSequence, boolean z, int i) {
        String str = null;
        fillEditingMediaWithCaption(charSequence, (ArrayList<TLRPC$MessageEntity>) null);
        AccountInstance accountInstance = getAccountInstance();
        if (charSequence != null) {
            str = charSequence.toString();
        }
        SendMessagesHelper.prepareSendingAudioDocuments(accountInstance, arrayList, str, this.dialog_id, this.replyingMessageObject, getThreadMessage(), this.editingMessageObject, z, i);
        afterMessageSend();
    }

    public void sendContact(TLRPC$User tLRPC$User, boolean z, int i) {
        getSendMessagesHelper().sendMessage(tLRPC$User, this.dialog_id, this.replyingMessageObject, getThreadMessage(), (TLRPC$ReplyMarkup) null, (HashMap<String, String>) null, z, i);
        afterMessageSend();
    }

    public void sendPoll(TLRPC$TL_messageMediaPoll tLRPC$TL_messageMediaPoll, HashMap<String, String> hashMap, boolean z, int i) {
        getSendMessagesHelper().sendMessage(tLRPC$TL_messageMediaPoll, this.dialog_id, this.replyingMessageObject, getThreadMessage(), (TLRPC$ReplyMarkup) null, hashMap, z, i);
        afterMessageSend();
    }

    public void sendMedia(MediaController.PhotoEntry photoEntry, VideoEditedInfo videoEditedInfo, boolean z, int i) {
        MediaController.PhotoEntry photoEntry2 = photoEntry;
        if (photoEntry2 != null) {
            fillEditingMediaWithCaption(photoEntry2.caption, photoEntry2.entities);
            if (photoEntry2.isVideo) {
                if (videoEditedInfo != null) {
                    SendMessagesHelper.prepareSendingVideo(getAccountInstance(), photoEntry2.path, videoEditedInfo, this.dialog_id, this.replyingMessageObject, getThreadMessage(), photoEntry2.caption, photoEntry2.entities, photoEntry2.ttl, this.editingMessageObject, z, i);
                } else {
                    SendMessagesHelper.prepareSendingVideo(getAccountInstance(), photoEntry2.path, (VideoEditedInfo) null, this.dialog_id, this.replyingMessageObject, getThreadMessage(), photoEntry2.caption, photoEntry2.entities, photoEntry2.ttl, this.editingMessageObject, z, i);
                }
                afterMessageSend();
            } else if (photoEntry2.imagePath != null) {
                SendMessagesHelper.prepareSendingPhoto(getAccountInstance(), photoEntry2.imagePath, photoEntry2.thumbPath, (Uri) null, this.dialog_id, this.replyingMessageObject, getThreadMessage(), photoEntry2.caption, photoEntry2.entities, photoEntry2.stickers, (InputContentInfoCompat) null, photoEntry2.ttl, this.editingMessageObject, videoEditedInfo, z, i);
                afterMessageSend();
            } else if (photoEntry2.path != null) {
                SendMessagesHelper.prepareSendingPhoto(getAccountInstance(), photoEntry2.path, photoEntry2.thumbPath, (Uri) null, this.dialog_id, this.replyingMessageObject, getThreadMessage(), photoEntry2.caption, photoEntry2.entities, photoEntry2.stickers, (InputContentInfoCompat) null, photoEntry2.ttl, this.editingMessageObject, videoEditedInfo, z, i);
                afterMessageSend();
            }
        }
    }

    public void showOpenGameAlert(TLRPC$TL_game tLRPC$TL_game, MessageObject messageObject, String str, boolean z, int i) {
        String str2;
        TLRPC$User user = getMessagesController().getUser(Integer.valueOf(i));
        String str3 = "";
        if (z) {
            AlertDialog.Builder builder = new AlertDialog.Builder((Context) getParentActivity());
            builder.setTitle(LocaleController.getString("AppName", NUM));
            if (user != null) {
                str3 = ContactsController.formatName(user.first_name, user.last_name);
            }
            builder.setMessage(LocaleController.formatString("BotPermissionGameAlert", NUM, str3));
            builder.setPositiveButton(LocaleController.getString("OK", NUM), new DialogInterface.OnClickListener(tLRPC$TL_game, messageObject, str, i) {
                public final /* synthetic */ TLRPC$TL_game f$1;
                public final /* synthetic */ MessageObject f$2;
                public final /* synthetic */ String f$3;
                public final /* synthetic */ int f$4;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                    this.f$3 = r4;
                    this.f$4 = r5;
                }

                public final void onClick(DialogInterface dialogInterface, int i) {
                    ChatActivity.this.lambda$showOpenGameAlert$135$ChatActivity(this.f$1, this.f$2, this.f$3, this.f$4, dialogInterface, i);
                }
            });
            builder.setNegativeButton(LocaleController.getString("Cancel", NUM), (DialogInterface.OnClickListener) null);
            showDialog(builder.create());
        } else if (Build.VERSION.SDK_INT < 21 || AndroidUtilities.isTablet() || !WebviewActivity.supportWebview()) {
            Activity parentActivity = getParentActivity();
            String str4 = tLRPC$TL_game.short_name;
            if (!(user == null || (str2 = user.username) == null)) {
                str3 = str2;
            }
            WebviewActivity.openGameInBrowser(str, messageObject, parentActivity, str4, str3);
        } else {
            ArrayList<BaseFragment> arrayList = this.parentLayout.fragmentsStack;
            if (arrayList.get(arrayList.size() - 1) == this) {
                if (user != null && !TextUtils.isEmpty(user.username)) {
                    str3 = user.username;
                }
                presentFragment(new WebviewActivity(str, str3, tLRPC$TL_game.title, tLRPC$TL_game.short_name, messageObject));
            }
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$showOpenGameAlert$135 */
    public /* synthetic */ void lambda$showOpenGameAlert$135$ChatActivity(TLRPC$TL_game tLRPC$TL_game, MessageObject messageObject, String str, int i, DialogInterface dialogInterface, int i2) {
        showOpenGameAlert(tLRPC$TL_game, messageObject, str, false, i);
        SharedPreferences.Editor edit = MessagesController.getNotificationsSettings(this.currentAccount).edit();
        edit.putBoolean("askgame_" + i, false).commit();
    }

    /* JADX WARNING: Code restructure failed: missing block: B:27:0x0060, code lost:
        if (r7 != r6.get(r6.size() - 1).id) goto L_0x0064;
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private void processLoadedDiscussionMessage(boolean r20, org.telegram.tgnet.TLRPC$TL_messages_discussionMessage r21, boolean r22, org.telegram.tgnet.TLRPC$messages_Messages r23, int r24, org.telegram.messenger.MessageObject r25, java.lang.Runnable r26, org.telegram.tgnet.TLRPC$TL_messages_getDiscussionMessage r27, org.telegram.tgnet.TLRPC$Chat r28, int r29, org.telegram.messenger.MessageObject r30) {
        /*
            r19 = this;
            r9 = r19
            r0 = r21
            r1 = r23
            r5 = r24
            r10 = r25
            r2 = r29
            r3 = r30
            r11 = 0
            if (r20 != 0) goto L_0x0013
            if (r0 == 0) goto L_0x016c
        L_0x0013:
            if (r20 != 0) goto L_0x016c
            if (r22 != 0) goto L_0x001b
            if (r1 != 0) goto L_0x001b
            goto L_0x016c
        L_0x001b:
            r12 = 1
            if (r1 == 0) goto L_0x006e
            r4 = 0
            if (r5 == r12) goto L_0x0028
            if (r5 == 0) goto L_0x0028
            int r6 = r0.read_inbox_max_id
            if (r5 == r6) goto L_0x0028
            goto L_0x0064
        L_0x0028:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r6 = r1.messages
            boolean r6 = r6.isEmpty()
            if (r6 != 0) goto L_0x0063
            if (r0 == 0) goto L_0x0063
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r6 = r0.messages
            boolean r6 = r6.isEmpty()
            if (r6 != 0) goto L_0x0063
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r6 = r1.messages
            java.lang.Object r6 = r6.get(r11)
            org.telegram.tgnet.TLRPC$Message r6 = (org.telegram.tgnet.TLRPC$Message) r6
            if (r6 == 0) goto L_0x0050
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r6 = r6.reply_to
            if (r6 == 0) goto L_0x0050
            int r7 = r6.reply_to_top_id
            if (r7 == 0) goto L_0x004d
            goto L_0x0051
        L_0x004d:
            int r7 = r6.reply_to_msg_id
            goto L_0x0051
        L_0x0050:
            r7 = 0
        L_0x0051:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r6 = r0.messages
            int r8 = r6.size()
            int r8 = r8 - r12
            java.lang.Object r6 = r6.get(r8)
            org.telegram.tgnet.TLRPC$Message r6 = (org.telegram.tgnet.TLRPC$Message) r6
            int r6 = r6.id
            if (r7 == r6) goto L_0x0063
            goto L_0x0064
        L_0x0063:
            r4 = r1
        L_0x0064:
            boolean r1 = org.telegram.messenger.BuildVars.LOGS_ENABLED
            if (r1 == 0) goto L_0x006f
            java.lang.String r1 = "processLoadedDiscussionMessage reset history"
            org.telegram.messenger.FileLog.d(r1)
            goto L_0x006f
        L_0x006e:
            r4 = r1
        L_0x006f:
            java.util.ArrayList r8 = new java.util.ArrayList
            r8.<init>()
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r1 = r0.messages
            int r1 = r1.size()
            r6 = 0
        L_0x007b:
            if (r6 >= r1) goto L_0x0099
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r7 = r0.messages
            java.lang.Object r7 = r7.get(r6)
            org.telegram.tgnet.TLRPC$Message r7 = (org.telegram.tgnet.TLRPC$Message) r7
            boolean r13 = r7 instanceof org.telegram.tgnet.TLRPC$TL_messageEmpty
            if (r13 == 0) goto L_0x008a
            goto L_0x0096
        L_0x008a:
            r7.isThreadMessage = r12
            org.telegram.messenger.MessageObject r13 = new org.telegram.messenger.MessageObject
            int r14 = org.telegram.messenger.UserConfig.selectedAccount
            r13.<init>(r14, r7, r12, r12)
            r8.add(r13)
        L_0x0096:
            int r6 = r6 + 1
            goto L_0x007b
        L_0x0099:
            boolean r1 = r8.isEmpty()
            if (r1 != 0) goto L_0x013d
            android.os.Bundle r1 = new android.os.Bundle
            r1.<init>()
            java.lang.Object r6 = r8.get(r11)
            org.telegram.messenger.MessageObject r6 = (org.telegram.messenger.MessageObject) r6
            long r6 = r6.getDialogId()
            long r13 = -r6
            int r14 = (int) r13
            java.lang.String r13 = "chat_id"
            r1.putInt(r13, r14)
            int r13 = r0.read_inbox_max_id
            int r13 = java.lang.Math.max(r12, r13)
            java.lang.String r14 = "message_id"
            r1.putInt(r14, r13)
            if (r4 == 0) goto L_0x00c4
            r13 = 1
            goto L_0x00c5
        L_0x00c4:
            r13 = 0
        L_0x00c5:
            java.lang.String r14 = "historyPreloaded"
            r1.putBoolean(r14, r13)
            org.telegram.ui.ChatActivity r15 = new org.telegram.ui.ChatActivity
            r15.<init>(r1)
            r1 = r27
            int r1 = r1.msg_id
            int r14 = r0.read_inbox_max_id
            int r0 = r0.read_outbox_max_id
            r13 = r15
            r17 = r14
            r14 = r8
            r11 = r15
            r15 = r28
            r16 = r1
            r18 = r0
            r13.setThreadMessages(r14, r15, r16, r17, r18)
            if (r2 == 0) goto L_0x00e9
            r11.highlightMessageId = r2
        L_0x00e9:
            if (r3 == 0) goto L_0x00fd
            org.telegram.tgnet.TLRPC$Message r0 = r3.messageOwner
            org.telegram.tgnet.TLRPC$TL_messageReplies r0 = r0.replies
            if (r0 == 0) goto L_0x00fd
            org.telegram.messenger.MessageObject r1 = r11.threadMessageObject
            org.telegram.tgnet.TLRPC$Message r1 = r1.messageOwner
            org.telegram.tgnet.TLRPC$TL_messageReplies r1 = r1.replies
            if (r1 == 0) goto L_0x00fd
            int r1 = r1.replies
            r0.replies = r1
        L_0x00fd:
            r9.presentFragment(r11)
            if (r4 == 0) goto L_0x013e
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r0 = r4.messages
            boolean r0 = r0.isEmpty()
            if (r0 != 0) goto L_0x0128
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r0 = r4.messages
            int r0 = r0.size()
            int r0 = r0 - r12
        L_0x0111:
            if (r0 < 0) goto L_0x0128
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r1 = r4.messages
            java.lang.Object r1 = r1.get(r0)
            org.telegram.tgnet.TLRPC$Message r1 = (org.telegram.tgnet.TLRPC$Message) r1
            int r2 = r1.id
            if (r2 <= r5) goto L_0x0125
            boolean r1 = r1.out
            if (r1 != 0) goto L_0x0125
            r13 = r2
            goto L_0x0129
        L_0x0125:
            int r0 = r0 + -1
            goto L_0x0111
        L_0x0128:
            r13 = 0
        L_0x0129:
            org.telegram.messenger.DispatchQueue r14 = org.telegram.messenger.Utilities.stageQueue
            org.telegram.ui.-$$Lambda$ChatActivity$6Zff1CiyrrIW6EiL5sZAQSuNTrE r15 = new org.telegram.ui.-$$Lambda$ChatActivity$6Zff1CiyrrIW6EiL5sZAQSuNTrE
            r0 = r15
            r1 = r19
            r2 = r4
            r3 = r6
            r5 = r24
            r6 = r11
            r7 = r13
            r0.<init>(r2, r3, r5, r6, r7, r8)
            r14.postRunnable(r15)
            goto L_0x013e
        L_0x013d:
            r12 = 0
        L_0x013e:
            org.telegram.messenger.AndroidUtilities.cancelRunOnUIThread(r26)
            r0 = 0
            r9.commentLoadingMessageId = r0
            org.telegram.ui.Components.RecyclerListView r0 = r9.chatListView
            r0.invalidateViews()
            if (r12 != 0) goto L_0x016b
            if (r10 == 0) goto L_0x0151
            r9.openOriginalReplyChat(r10)
            goto L_0x016b
        L_0x0151:
            android.app.Activity r0 = r19.getParentActivity()
            if (r0 == 0) goto L_0x016b
            org.telegram.ui.Components.BulletinFactory r0 = org.telegram.ui.Components.BulletinFactory.of((org.telegram.ui.ActionBar.BaseFragment) r19)
            r1 = 2131624748(0x7f0e032c, float:1.8876684E38)
            java.lang.String r2 = "ChannelPostDeleted"
            java.lang.String r1 = org.telegram.messenger.LocaleController.getString(r2, r1)
            org.telegram.ui.Components.Bulletin r0 = r0.createErrorBulletin(r1)
            r0.show()
        L_0x016b:
            return
        L_0x016c:
            r0 = 0
            r9.commentLoadingMessageId = r0
            org.telegram.ui.Components.RecyclerListView r0 = r9.chatListView
            r0.invalidateViews()
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.processLoadedDiscussionMessage(boolean, org.telegram.tgnet.TLRPC$TL_messages_discussionMessage, boolean, org.telegram.tgnet.TLRPC$messages_Messages, int, org.telegram.messenger.MessageObject, java.lang.Runnable, org.telegram.tgnet.TLRPC$TL_messages_getDiscussionMessage, org.telegram.tgnet.TLRPC$Chat, int, org.telegram.messenger.MessageObject):void");
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$processLoadedDiscussionMessage$136 */
    public /* synthetic */ void lambda$processLoadedDiscussionMessage$136$ChatActivity(TLRPC$messages_Messages tLRPC$messages_Messages, long j, int i, ChatActivity chatActivity, int i2, ArrayList arrayList) {
        getMessagesController().processLoadedMessages(tLRPC$messages_Messages, tLRPC$messages_Messages.messages.size(), j, 0, 30, i, 0, false, chatActivity.getClassGuid(), i2, 0, 0, 0, 2, true, false, 0, ((MessageObject) arrayList.get(arrayList.size() - 1)).getId(), 1, false, 0, true);
    }

    /* access modifiers changed from: private */
    public void openDiscussionMessageChat(int i, MessageObject messageObject, int i2, int i3, int i4, int i5, MessageObject messageObject2) {
        int i6 = i2;
        int i7 = i4;
        TLRPC$Chat chat = getMessagesController().getChat(Integer.valueOf(i));
        TLRPC$TL_messages_getDiscussionMessage tLRPC$TL_messages_getDiscussionMessage = new TLRPC$TL_messages_getDiscussionMessage();
        tLRPC$TL_messages_getDiscussionMessage.peer = MessagesController.getInputPeer(chat);
        tLRPC$TL_messages_getDiscussionMessage.msg_id = i6;
        if (BuildVars.LOGS_ENABLED) {
            FileLog.d("getDiscussionMessage chat = " + chat.id + " msg_id = " + i6);
        }
        this.commentLoadingMessageId = 0;
        this.savedDiscussionMessage = null;
        this.savedNoDiscussion = false;
        this.savedNoHistory = false;
        this.savedHistory = null;
        RecyclerListView recyclerListView = this.chatListView;
        if (recyclerListView != null) {
            recyclerListView.invalidateViews();
        }
        if (this.commentMessagesRequestId != -1) {
            getConnectionsManager().cancelRequest(this.commentMessagesRequestId, false);
        }
        if (this.commentRequestId != -1) {
            getConnectionsManager().cancelRequest(this.commentRequestId, false);
        }
        $$Lambda$ChatActivity$6SRDtFJwkBItIord_gMrHPMEEU r15 = new Runnable(messageObject2, i6) {
            public final /* synthetic */ MessageObject f$1;
            public final /* synthetic */ int f$2;

            {
                this.f$1 = r2;
                this.f$2 = r3;
            }

            public final void run() {
                ChatActivity.this.lambda$openDiscussionMessageChat$137$ChatActivity(this.f$1, this.f$2);
            }
        };
        if (i7 < 0 || i3 == 0) {
            this.savedNoHistory = true;
        } else {
            TLRPC$Chat chat2 = getMessagesController().getChat(Integer.valueOf(i3));
            if (chat2 != null) {
                if (BuildVars.LOGS_ENABLED) {
                    FileLog.d("load replies for " + chat2.id + " msg_id = " + i7);
                }
                TLRPC$TL_messages_getReplies tLRPC$TL_messages_getReplies = new TLRPC$TL_messages_getReplies();
                tLRPC$TL_messages_getReplies.peer = MessagesController.getInputPeer(chat2);
                tLRPC$TL_messages_getReplies.msg_id = i7;
                tLRPC$TL_messages_getReplies.offset_date = 0;
                tLRPC$TL_messages_getReplies.add_offset = -20;
                tLRPC$TL_messages_getReplies.limit = 30;
                tLRPC$TL_messages_getReplies.offset_id = i7;
                int i8 = this.commentMessagesLoadingGuid + 1;
                this.commentMessagesLoadingGuid = i8;
                $$Lambda$ChatActivity$n_j6nK2_AxKB5iLQGEaJwyurY3Q r16 = r0;
                ConnectionsManager connectionsManager = getConnectionsManager();
                $$Lambda$ChatActivity$n_j6nK2_AxKB5iLQGEaJwyurY3Q r0 = new RequestDelegate(i8, 30, r15, i4, messageObject2, tLRPC$TL_messages_getDiscussionMessage, chat, i5, messageObject) {
                    public final /* synthetic */ int f$1;
                    public final /* synthetic */ int f$2;
                    public final /* synthetic */ Runnable f$3;
                    public final /* synthetic */ int f$4;
                    public final /* synthetic */ MessageObject f$5;
                    public final /* synthetic */ TLRPC$TL_messages_getDiscussionMessage f$6;
                    public final /* synthetic */ TLRPC$Chat f$7;
                    public final /* synthetic */ int f$8;
                    public final /* synthetic */ MessageObject f$9;

                    {
                        this.f$1 = r2;
                        this.f$2 = r3;
                        this.f$3 = r4;
                        this.f$4 = r5;
                        this.f$5 = r6;
                        this.f$6 = r7;
                        this.f$7 = r8;
                        this.f$8 = r9;
                        this.f$9 = r10;
                    }

                    public final void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                        ChatActivity.this.lambda$openDiscussionMessageChat$140$ChatActivity(this.f$1, this.f$2, this.f$3, this.f$4, this.f$5, this.f$6, this.f$7, this.f$8, this.f$9, tLObject, tLRPC$TL_error);
                    }
                };
                this.commentMessagesRequestId = connectionsManager.sendRequest(tLRPC$TL_messages_getReplies, r16);
                getConnectionsManager().bindRequestToGuid(this.commentMessagesRequestId, this.classGuid);
            } else {
                this.savedNoHistory = true;
            }
        }
        int i9 = this.commentLoadingGuid + 1;
        this.commentLoadingGuid = i9;
        ConnectionsManager connectionsManager2 = getConnectionsManager();
        $$Lambda$ChatActivity$U8iTOPQt5M0e2a9VYJNbn7OV80 r12 = r0;
        $$Lambda$ChatActivity$U8iTOPQt5M0e2a9VYJNbn7OV80 r02 = new RequestDelegate(i9, i4, messageObject2, r15, tLRPC$TL_messages_getDiscussionMessage, chat, i5, messageObject) {
            public final /* synthetic */ int f$1;
            public final /* synthetic */ int f$2;
            public final /* synthetic */ MessageObject f$3;
            public final /* synthetic */ Runnable f$4;
            public final /* synthetic */ TLRPC$TL_messages_getDiscussionMessage f$5;
            public final /* synthetic */ TLRPC$Chat f$6;
            public final /* synthetic */ int f$7;
            public final /* synthetic */ MessageObject f$8;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
                this.f$4 = r5;
                this.f$5 = r6;
                this.f$6 = r7;
                this.f$7 = r8;
                this.f$8 = r9;
            }

            public final void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                ChatActivity.this.lambda$openDiscussionMessageChat$143$ChatActivity(this.f$1, this.f$2, this.f$3, this.f$4, this.f$5, this.f$6, this.f$7, this.f$8, tLObject, tLRPC$TL_error);
            }
        };
        this.commentRequestId = connectionsManager2.sendRequest(tLRPC$TL_messages_getDiscussionMessage, r12);
        getConnectionsManager().bindRequestToGuid(this.commentRequestId, this.classGuid);
        AndroidUtilities.runOnUIThread(r15, 500);
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$openDiscussionMessageChat$137 */
    public /* synthetic */ void lambda$openDiscussionMessageChat$137$ChatActivity(MessageObject messageObject, int i) {
        if (messageObject != null) {
            i = messageObject.getId();
        }
        this.commentLoadingMessageId = i;
        RecyclerListView recyclerListView = this.chatListView;
        if (recyclerListView != null) {
            recyclerListView.invalidateViews();
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$openDiscussionMessageChat$140 */
    public /* synthetic */ void lambda$openDiscussionMessageChat$140$ChatActivity(int i, int i2, Runnable runnable, int i3, MessageObject messageObject, TLRPC$TL_messages_getDiscussionMessage tLRPC$TL_messages_getDiscussionMessage, TLRPC$Chat tLRPC$Chat, int i4, MessageObject messageObject2, TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
        AndroidUtilities.runOnUIThread(new Runnable(new Runnable(i, tLObject, i2, tLRPC$TL_error, runnable, i3, messageObject, tLRPC$TL_messages_getDiscussionMessage, tLRPC$Chat, i4, messageObject2) {
            public final /* synthetic */ int f$1;
            public final /* synthetic */ int f$10;
            public final /* synthetic */ MessageObject f$11;
            public final /* synthetic */ TLObject f$2;
            public final /* synthetic */ int f$3;
            public final /* synthetic */ TLRPC$TL_error f$4;
            public final /* synthetic */ Runnable f$5;
            public final /* synthetic */ int f$6;
            public final /* synthetic */ MessageObject f$7;
            public final /* synthetic */ TLRPC$TL_messages_getDiscussionMessage f$8;
            public final /* synthetic */ TLRPC$Chat f$9;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
                this.f$4 = r5;
                this.f$5 = r6;
                this.f$6 = r7;
                this.f$7 = r8;
                this.f$8 = r9;
                this.f$9 = r10;
                this.f$10 = r11;
                this.f$11 = r12;
            }

            public final void run() {
                ChatActivity.this.lambda$null$138$ChatActivity(this.f$1, this.f$2, this.f$3, this.f$4, this.f$5, this.f$6, this.f$7, this.f$8, this.f$9, this.f$10, this.f$11);
            }
        }) {
            public final /* synthetic */ Runnable f$1;

            {
                this.f$1 = r2;
            }

            public final void run() {
                ChatActivity.this.lambda$null$139$ChatActivity(this.f$1);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$138 */
    public /* synthetic */ void lambda$null$138$ChatActivity(int i, TLObject tLObject, int i2, TLRPC$TL_error tLRPC$TL_error, Runnable runnable, int i3, MessageObject messageObject, TLRPC$TL_messages_getDiscussionMessage tLRPC$TL_messages_getDiscussionMessage, TLRPC$Chat tLRPC$Chat, int i4, MessageObject messageObject2) {
        if (i == this.commentMessagesLoadingGuid) {
            this.commentMessagesRequestId = -1;
            if (tLObject != null) {
                TLRPC$messages_Messages tLRPC$messages_Messages = (TLRPC$messages_Messages) tLObject;
                this.savedHistory = tLRPC$messages_Messages;
                if (tLRPC$messages_Messages.messages.size() > i2) {
                    this.savedHistory.messages.remove(0);
                }
            } else if ("CHANNEL_PRIVATE".equals(tLRPC$TL_error.text)) {
                if (getParentActivity() != null) {
                    AlertDialog.Builder builder = new AlertDialog.Builder((Context) getParentActivity());
                    builder.setTitle(LocaleController.getString("AppName", NUM));
                    builder.setMessage(LocaleController.getString("JoinByPeekChannelText", NUM));
                    builder.setPositiveButton(LocaleController.getString("OK", NUM), (DialogInterface.OnClickListener) null);
                    builder.create();
                    showDialog(builder.create());
                }
                AndroidUtilities.cancelRunOnUIThread(runnable);
                this.commentLoadingMessageId = 0;
                this.chatListView.invalidateViews();
                return;
            } else {
                this.savedNoHistory = true;
            }
            processLoadedDiscussionMessage(this.savedNoDiscussion, this.savedDiscussionMessage, this.savedNoHistory, this.savedHistory, i3, messageObject, runnable, tLRPC$TL_messages_getDiscussionMessage, tLRPC$Chat, i4, messageObject2);
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$openDiscussionMessageChat$143 */
    public /* synthetic */ void lambda$openDiscussionMessageChat$143$ChatActivity(int i, int i2, MessageObject messageObject, Runnable runnable, TLRPC$TL_messages_getDiscussionMessage tLRPC$TL_messages_getDiscussionMessage, TLRPC$Chat tLRPC$Chat, int i3, MessageObject messageObject2, TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
        AndroidUtilities.runOnUIThread(new Runnable(new Runnable(i, tLObject, i2, messageObject, runnable, tLRPC$TL_messages_getDiscussionMessage, tLRPC$Chat, i3, messageObject2) {
            public final /* synthetic */ int f$1;
            public final /* synthetic */ TLObject f$2;
            public final /* synthetic */ int f$3;
            public final /* synthetic */ MessageObject f$4;
            public final /* synthetic */ Runnable f$5;
            public final /* synthetic */ TLRPC$TL_messages_getDiscussionMessage f$6;
            public final /* synthetic */ TLRPC$Chat f$7;
            public final /* synthetic */ int f$8;
            public final /* synthetic */ MessageObject f$9;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
                this.f$4 = r5;
                this.f$5 = r6;
                this.f$6 = r7;
                this.f$7 = r8;
                this.f$8 = r9;
                this.f$9 = r10;
            }

            public final void run() {
                ChatActivity.this.lambda$null$141$ChatActivity(this.f$1, this.f$2, this.f$3, this.f$4, this.f$5, this.f$6, this.f$7, this.f$8, this.f$9);
            }
        }) {
            public final /* synthetic */ Runnable f$1;

            {
                this.f$1 = r2;
            }

            public final void run() {
                ChatActivity.this.lambda$null$142$ChatActivity(this.f$1);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$141 */
    public /* synthetic */ void lambda$null$141$ChatActivity(int i, TLObject tLObject, int i2, MessageObject messageObject, Runnable runnable, TLRPC$TL_messages_getDiscussionMessage tLRPC$TL_messages_getDiscussionMessage, TLRPC$Chat tLRPC$Chat, int i3, MessageObject messageObject2) {
        TLObject tLObject2 = tLObject;
        if (i == this.commentLoadingGuid) {
            this.commentRequestId = -1;
            if (tLObject2 instanceof TLRPC$TL_messages_discussionMessage) {
                this.savedDiscussionMessage = (TLRPC$TL_messages_discussionMessage) tLObject2;
                getMessagesController().putUsers(this.savedDiscussionMessage.users, false);
                getMessagesController().putChats(this.savedDiscussionMessage.chats, false);
            } else {
                this.savedNoDiscussion = true;
            }
            processLoadedDiscussionMessage(this.savedNoDiscussion, this.savedDiscussionMessage, this.savedNoHistory, this.savedHistory, i2, messageObject, runnable, tLRPC$TL_messages_getDiscussionMessage, tLRPC$Chat, i3, messageObject2);
        }
    }

    /* access modifiers changed from: private */
    public void openOriginalReplyChat(MessageObject messageObject) {
        if (UserObject.isUserSelf(this.currentUser)) {
            TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader = messageObject.messageOwner.fwd_from;
            if (tLRPC$MessageFwdHeader.saved_from_peer.user_id == this.currentUser.id) {
                scrollToMessageId(tLRPC$MessageFwdHeader.saved_from_msg_id, messageObject.getId(), true, 0, true, 0);
                return;
            }
        }
        Bundle bundle = new Bundle();
        TLRPC$Peer tLRPC$Peer = messageObject.messageOwner.fwd_from.saved_from_peer;
        int i = tLRPC$Peer.channel_id;
        if (i != 0) {
            bundle.putInt("chat_id", i);
        } else {
            int i2 = tLRPC$Peer.chat_id;
            if (i2 != 0) {
                bundle.putInt("chat_id", i2);
            } else {
                int i3 = tLRPC$Peer.user_id;
                if (i3 != 0) {
                    bundle.putInt("user_id", i3);
                }
            }
        }
        bundle.putInt("message_id", messageObject.messageOwner.fwd_from.saved_from_msg_id);
        if (getMessagesController().checkCanOpenChat(bundle, this)) {
            presentFragment(new ChatActivity(bundle));
        }
    }

    public void showRequestUrlAlert(TLRPC$TL_urlAuthResultRequest tLRPC$TL_urlAuthResultRequest, TLRPC$TL_messages_requestUrlAuth tLRPC$TL_messages_requestUrlAuth, String str, boolean z) {
        TLRPC$TL_urlAuthResultRequest tLRPC$TL_urlAuthResultRequest2 = tLRPC$TL_urlAuthResultRequest;
        String str2 = str;
        if (getParentActivity() != null) {
            AlertDialog.Builder builder = new AlertDialog.Builder((Context) getParentActivity());
            builder.setTitle(LocaleController.getString("OpenUrlTitle", NUM));
            String string = LocaleController.getString("OpenUrlAlert2", NUM);
            int indexOf = string.indexOf("%");
            SpannableStringBuilder spannableStringBuilder = new SpannableStringBuilder(String.format(string, new Object[]{str2}));
            if (indexOf >= 0) {
                spannableStringBuilder.setSpan(new URLSpan(str2), indexOf, str.length() + indexOf, 33);
            }
            builder.setMessage(spannableStringBuilder);
            builder.setMessageTextViewClickable(false);
            builder.setNegativeButton(LocaleController.getString("Cancel", NUM), (DialogInterface.OnClickListener) null);
            CheckBoxCell[] checkBoxCellArr = new CheckBoxCell[2];
            LinearLayout linearLayout = new LinearLayout(getParentActivity());
            linearLayout.setOrientation(1);
            TLRPC$User currentUser2 = getUserConfig().getCurrentUser();
            int i = 0;
            while (true) {
                if (i < (tLRPC$TL_urlAuthResultRequest2.request_write_access ? 2 : 1)) {
                    checkBoxCellArr[i] = new CheckBoxCell(getParentActivity(), 5);
                    checkBoxCellArr[i].setBackgroundDrawable(Theme.getSelectorDrawable(false));
                    checkBoxCellArr[i].setMultiline(true);
                    checkBoxCellArr[i].setTag(Integer.valueOf(i));
                    if (i == 0) {
                        SpannableStringBuilder replaceTags = AndroidUtilities.replaceTags(LocaleController.formatString("OpenUrlOption1", NUM, tLRPC$TL_urlAuthResultRequest2.domain, ContactsController.formatName(currentUser2.first_name, currentUser2.last_name)));
                        int indexOf2 = TextUtils.indexOf(replaceTags, tLRPC$TL_urlAuthResultRequest2.domain);
                        if (indexOf2 >= 0) {
                            replaceTags.setSpan(new URLSpan(""), indexOf2, tLRPC$TL_urlAuthResultRequest2.domain.length() + indexOf2, 33);
                        }
                        checkBoxCellArr[i].setText(replaceTags, "", true, false);
                    } else {
                        checkBoxCellArr[i].setText(AndroidUtilities.replaceTags(LocaleController.formatString("OpenUrlOption2", NUM, UserObject.getFirstName(tLRPC$TL_urlAuthResultRequest2.bot))), "", true, false);
                    }
                    checkBoxCellArr[i].setPadding(LocaleController.isRTL ? AndroidUtilities.dp(16.0f) : AndroidUtilities.dp(8.0f), 0, LocaleController.isRTL ? AndroidUtilities.dp(8.0f) : AndroidUtilities.dp(16.0f), 0);
                    linearLayout.addView(checkBoxCellArr[i], LayoutHelper.createLinear(-1, -2));
                    checkBoxCellArr[i].setOnClickListener(new View.OnClickListener(checkBoxCellArr) {
                        public final /* synthetic */ CheckBoxCell[] f$0;

                        {
                            this.f$0 = r1;
                        }

                        public final void onClick(View view) {
                            ChatActivity.lambda$showRequestUrlAlert$144(this.f$0, view);
                        }
                    });
                    i++;
                } else {
                    builder.setCustomViewOffset(12);
                    builder.setView(linearLayout);
                    builder.setPositiveButton(LocaleController.getString("Open", NUM), new DialogInterface.OnClickListener(checkBoxCellArr, str, tLRPC$TL_messages_requestUrlAuth, tLRPC$TL_urlAuthResultRequest, z) {
                        public final /* synthetic */ CheckBoxCell[] f$1;
                        public final /* synthetic */ String f$2;
                        public final /* synthetic */ TLRPC$TL_messages_requestUrlAuth f$3;
                        public final /* synthetic */ TLRPC$TL_urlAuthResultRequest f$4;
                        public final /* synthetic */ boolean f$5;

                        {
                            this.f$1 = r2;
                            this.f$2 = r3;
                            this.f$3 = r4;
                            this.f$4 = r5;
                            this.f$5 = r6;
                        }

                        public final void onClick(DialogInterface dialogInterface, int i) {
                            ChatActivity.this.lambda$showRequestUrlAlert$149$ChatActivity(this.f$1, this.f$2, this.f$3, this.f$4, this.f$5, dialogInterface, i);
                        }
                    });
                    showDialog(builder.create());
                    return;
                }
            }
        }
    }

    static /* synthetic */ void lambda$showRequestUrlAlert$144(CheckBoxCell[] checkBoxCellArr, View view) {
        if (view.isEnabled()) {
            Integer num = (Integer) view.getTag();
            checkBoxCellArr[num.intValue()].setChecked(!checkBoxCellArr[num.intValue()].isChecked(), true);
            if (num.intValue() == 0 && checkBoxCellArr[1] != null) {
                if (checkBoxCellArr[num.intValue()].isChecked()) {
                    checkBoxCellArr[1].setEnabled(true);
                    return;
                }
                checkBoxCellArr[1].setChecked(false, true);
                checkBoxCellArr[1].setEnabled(false);
            }
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$showRequestUrlAlert$149 */
    public /* synthetic */ void lambda$showRequestUrlAlert$149$ChatActivity(CheckBoxCell[] checkBoxCellArr, String str, TLRPC$TL_messages_requestUrlAuth tLRPC$TL_messages_requestUrlAuth, TLRPC$TL_urlAuthResultRequest tLRPC$TL_urlAuthResultRequest, boolean z, DialogInterface dialogInterface, int i) {
        if (!checkBoxCellArr[0].isChecked()) {
            Browser.openUrl((Context) getParentActivity(), str, false);
            return;
        }
        AlertDialog[] alertDialogArr = {new AlertDialog(getParentActivity(), 3)};
        TLRPC$TL_messages_acceptUrlAuth tLRPC$TL_messages_acceptUrlAuth = new TLRPC$TL_messages_acceptUrlAuth();
        String str2 = tLRPC$TL_messages_requestUrlAuth.url;
        if (str2 != null) {
            tLRPC$TL_messages_acceptUrlAuth.url = str2;
            tLRPC$TL_messages_acceptUrlAuth.flags |= 4;
        } else {
            tLRPC$TL_messages_acceptUrlAuth.button_id = tLRPC$TL_messages_requestUrlAuth.button_id;
            tLRPC$TL_messages_acceptUrlAuth.msg_id = tLRPC$TL_messages_requestUrlAuth.msg_id;
            tLRPC$TL_messages_acceptUrlAuth.peer = tLRPC$TL_messages_requestUrlAuth.peer;
            tLRPC$TL_messages_acceptUrlAuth.flags |= 2;
        }
        if (tLRPC$TL_urlAuthResultRequest.request_write_access) {
            tLRPC$TL_messages_acceptUrlAuth.write_allowed = checkBoxCellArr[1].isChecked();
        }
        try {
            alertDialogArr[0].dismiss();
        } catch (Throwable unused) {
        }
        alertDialogArr[0] = null;
        AndroidUtilities.runOnUIThread(new Runnable(alertDialogArr, getConnectionsManager().sendRequest(tLRPC$TL_messages_acceptUrlAuth, new RequestDelegate(str, tLRPC$TL_messages_requestUrlAuth, z) {
            public final /* synthetic */ String f$1;
            public final /* synthetic */ TLRPC$TL_messages_requestUrlAuth f$2;
            public final /* synthetic */ boolean f$3;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
            }

            public final void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                ChatActivity.this.lambda$null$146$ChatActivity(this.f$1, this.f$2, this.f$3, tLObject, tLRPC$TL_error);
            }
        })) {
            public final /* synthetic */ AlertDialog[] f$1;
            public final /* synthetic */ int f$2;

            {
                this.f$1 = r2;
                this.f$2 = r3;
            }

            public final void run() {
                ChatActivity.this.lambda$null$148$ChatActivity(this.f$1, this.f$2);
            }
        }, 500);
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$146 */
    public /* synthetic */ void lambda$null$146$ChatActivity(String str, TLRPC$TL_messages_requestUrlAuth tLRPC$TL_messages_requestUrlAuth, boolean z, TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
        AndroidUtilities.runOnUIThread(new Runnable(tLObject, str, tLRPC$TL_messages_requestUrlAuth, z) {
            public final /* synthetic */ TLObject f$1;
            public final /* synthetic */ String f$2;
            public final /* synthetic */ TLRPC$TL_messages_requestUrlAuth f$3;
            public final /* synthetic */ boolean f$4;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
                this.f$4 = r5;
            }

            public final void run() {
                ChatActivity.this.lambda$null$145$ChatActivity(this.f$1, this.f$2, this.f$3, this.f$4);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$145 */
    public /* synthetic */ void lambda$null$145$ChatActivity(TLObject tLObject, String str, TLRPC$TL_messages_requestUrlAuth tLRPC$TL_messages_requestUrlAuth, boolean z) {
        if (tLObject instanceof TLRPC$TL_urlAuthResultAccepted) {
            Browser.openUrl((Context) getParentActivity(), ((TLRPC$TL_urlAuthResultAccepted) tLObject).url, false);
        } else if (tLObject instanceof TLRPC$TL_urlAuthResultDefault) {
            Browser.openUrl((Context) getParentActivity(), str, false);
        } else {
            String str2 = tLRPC$TL_messages_requestUrlAuth.url;
            if (str2 != null) {
                AlertsCreator.showOpenUrlAlert(this, str2, false, z);
            }
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$148 */
    public /* synthetic */ void lambda$null$148$ChatActivity(AlertDialog[] alertDialogArr, int i) {
        if (alertDialogArr[0] != null) {
            alertDialogArr[0].setOnCancelListener(new DialogInterface.OnCancelListener(i) {
                public final /* synthetic */ int f$1;

                {
                    this.f$1 = r2;
                }

                public final void onCancel(DialogInterface dialogInterface) {
                    ChatActivity.this.lambda$null$147$ChatActivity(this.f$1, dialogInterface);
                }
            });
            showDialog(alertDialogArr[0]);
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$147 */
    public /* synthetic */ void lambda$null$147$ChatActivity(int i, DialogInterface dialogInterface) {
        getConnectionsManager().cancelRequest(i, true);
    }

    private void removeMessageObject(MessageObject messageObject) {
        int indexOf = this.messages.indexOf(messageObject);
        if (indexOf != -1) {
            this.messages.remove(indexOf);
            ChatActivityAdapter chatActivityAdapter = this.chatAdapter;
            if (chatActivityAdapter != null) {
                chatActivityAdapter.notifyItemRemoved(chatActivityAdapter.messagesStartRow + indexOf);
            }
        }
    }

    public void openVCard(TLRPC$User tLRPC$User, String str, String str2, String str3) {
        try {
            File sharingDirectory = AndroidUtilities.getSharingDirectory();
            sharingDirectory.mkdirs();
            File file = new File(sharingDirectory, "vcard.vcf");
            BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(file));
            bufferedWriter.write(str);
            bufferedWriter.close();
            showDialog(new PhonebookShareAlert(this, (ContactsController.Contact) null, tLRPC$User, (Uri) null, file, str2, str3));
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    /* access modifiers changed from: private */
    public void setCellSelectionBackground(MessageObject messageObject, ChatMessageCell chatMessageCell, int i, boolean z) {
        boolean z2;
        MessageObject.GroupedMessages validGroupedMessage = getValidGroupedMessage(messageObject);
        boolean z3 = false;
        if (validGroupedMessage != null) {
            int i2 = 0;
            while (true) {
                if (i2 >= validGroupedMessage.messages.size()) {
                    z2 = false;
                    break;
                } else if (this.selectedMessagesIds[i].indexOfKey(validGroupedMessage.messages.get(i2).getId()) < 0) {
                    z2 = true;
                    break;
                } else {
                    i2++;
                }
            }
            if (!z2) {
                validGroupedMessage = null;
            }
        }
        chatMessageCell.setDrawSelectionBackground(validGroupedMessage == null);
        if (validGroupedMessage == null) {
            z3 = true;
        }
        chatMessageCell.setChecked(true, z3, z);
    }

    private void openClickableLink(String str) {
        TLRPC$User tLRPC$User;
        if (str.startsWith("@")) {
            String lowerCase = str.substring(1).toLowerCase();
            TLRPC$Chat tLRPC$Chat = this.currentChat;
            if ((tLRPC$Chat == null || TextUtils.isEmpty(tLRPC$Chat.username) || !lowerCase.equals(this.currentChat.username.toLowerCase())) && ((tLRPC$User = this.currentUser) == null || TextUtils.isEmpty(tLRPC$User.username) || !lowerCase.equals(this.currentUser.username.toLowerCase()))) {
                MessagesController.getInstance(this.currentAccount).openByUserName(lowerCase, this, 0);
                return;
            }
            Bundle bundle = new Bundle();
            TLRPC$Chat tLRPC$Chat2 = this.currentChat;
            if (tLRPC$Chat2 != null) {
                bundle.putInt("chat_id", tLRPC$Chat2.id);
            } else {
                TLRPC$User tLRPC$User2 = this.currentUser;
                if (tLRPC$User2 != null) {
                    bundle.putInt("user_id", tLRPC$User2.id);
                    if (this.currentEncryptedChat != null) {
                        bundle.putLong("dialog_id", this.dialog_id);
                    }
                }
            }
            ProfileActivity profileActivity = new ProfileActivity(bundle, this.avatarContainer.getSharedMediaPreloader());
            profileActivity.setPlayProfileAnimation(1);
            profileActivity.setChatInfo(this.chatInfo);
            profileActivity.setUserInfo(this.userInfo);
            presentFragment(profileActivity);
        } else if (!str.startsWith("#") && !str.startsWith("$")) {
            processExternalUrl(0, str, false);
        } else if (ChatObject.isChannel(this.currentChat)) {
            int i = this.chatMode;
            if (i == 1 || i == 2) {
                this.chatActivityDelegate.openSearch(str);
                finishFragment();
                return;
            }
            openSearchWithText(str);
        } else {
            DialogsActivity dialogsActivity = new DialogsActivity((Bundle) null);
            dialogsActivity.setSearchString(str);
            presentFragment(dialogsActivity);
        }
    }

    /* access modifiers changed from: private */
    public void processExternalUrl(int i, String str, boolean z) {
        boolean z2;
        boolean z3 = false;
        boolean z4 = true;
        try {
            Uri parse = Uri.parse(str);
            String lowerCase = parse.getHost() != null ? parse.getHost().toLowerCase() : "";
            if ((this.currentEncryptedChat == null || getMessagesController().secretWebpagePreview == 1) && getMessagesController().authDomains.contains(lowerCase)) {
                SendMessagesHelper sendMessagesHelper = getSendMessagesHelper();
                if (i != 0) {
                    if (i != 2) {
                        z2 = false;
                        sendMessagesHelper.requestUrlAuth(str, this, z2);
                        return;
                    }
                }
                z2 = true;
                sendMessagesHelper.requestUrlAuth(str, this, z2);
                return;
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
        if (z || AndroidUtilities.shouldShowUrlInAlert(str)) {
            if (i == 0 || i == 2) {
                AlertsCreator.showOpenUrlAlert(this, str, true, true, true);
            } else if (i == 1) {
                AlertsCreator.showOpenUrlAlert(this, str, true, true, false);
            }
        } else if (i == 0) {
            Browser.openUrl((Context) getParentActivity(), str);
        } else if (i == 1) {
            Activity parentActivity = getParentActivity();
            if (this.inlineReturn != 0) {
                z4 = false;
            }
            Browser.openUrl((Context) parentActivity, str, z4, false);
        } else if (i == 2) {
            Activity parentActivity2 = getParentActivity();
            if (this.inlineReturn == 0) {
                z3 = true;
            }
            Browser.openUrl((Context) parentActivity2, str, z3);
        }
    }

    /* access modifiers changed from: private */
    public void didPressMessageUrl(CharacterStyle characterStyle, boolean z, MessageObject messageObject, ChatMessageCell chatMessageCell) {
        TLRPC$WebPage tLRPC$WebPage;
        MessageObject messageObject2;
        MessageObject messageObject3;
        TLRPC$WebPage tLRPC$WebPage2;
        MessageObject messageObject4;
        MessageObject messageObject5;
        CharacterStyle characterStyle2 = characterStyle;
        boolean z2 = z;
        MessageObject messageObject6 = messageObject;
        if (characterStyle2 != null && getParentActivity() != null) {
            int i = 0;
            if (characterStyle2 instanceof URLSpanMono) {
                ((URLSpanMono) characterStyle2).copyToClipboard();
                Toast.makeText(getParentActivity(), LocaleController.getString("TextCopied", NUM), 0).show();
                return;
            }
            ChatMessageCell chatMessageCell2 = null;
            if (characterStyle2 instanceof URLSpanUserMention) {
                TLRPC$User user = getMessagesController().getUser(Utilities.parseInt(((URLSpanUserMention) characterStyle2).getURL()));
                if (user != null) {
                    MessagesController.openChatOrProfileWith(user, (TLRPC$Chat) null, this, 0, false);
                    return;
                }
                return;
            }
            boolean z3 = true;
            if (characterStyle2 instanceof URLSpanNoUnderline) {
                String url = ((URLSpanNoUnderline) characterStyle2).getURL();
                if (messageObject6 == null || !url.startsWith("/")) {
                    if (messageObject6 != null && url.startsWith("video")) {
                        int intValue = Utilities.parseInt(url).intValue();
                        if (messageObject.isYouTubeVideo()) {
                            tLRPC$WebPage2 = messageObject6.messageOwner.media.webpage;
                        } else {
                            MessageObject messageObject7 = messageObject6.replyMessageObject;
                            tLRPC$WebPage2 = (messageObject7 == null || !messageObject7.isYouTubeVideo()) ? null : messageObject6.replyMessageObject.messageOwner.media.webpage;
                        }
                        if (tLRPC$WebPage2 != null) {
                            EmbedBottomSheet.show(getParentActivity(), tLRPC$WebPage2.site_name, tLRPC$WebPage2.title, tLRPC$WebPage2.url, tLRPC$WebPage2.embed_url, tLRPC$WebPage2.embed_width, tLRPC$WebPage2.embed_height, intValue, isKeyboardVisible());
                            return;
                        }
                        if (messageObject.isVideo() || (messageObject5 = messageObject6.replyMessageObject) == null) {
                            chatMessageCell2 = chatMessageCell;
                            messageObject4 = messageObject6;
                        } else {
                            SparseArray<MessageObject>[] sparseArrayArr = this.messagesDict;
                            if (messageObject5.getDialogId() != this.dialog_id) {
                                i = 1;
                            }
                            messageObject4 = sparseArrayArr[i].get(messageObject6.replyMessageObject.getId());
                            if (messageObject4 == null) {
                                messageObject4 = messageObject6.replyMessageObject;
                            }
                        }
                        messageObject4.forceSeekTo = ((float) intValue) / ((float) messageObject4.getDuration());
                        openPhotoViewerForMessage(chatMessageCell2, messageObject4);
                    } else if (messageObject6 != null && url.startsWith("audio")) {
                        int intValue2 = Utilities.parseInt(url).intValue();
                        if (messageObject.isMusic() || (messageObject3 = messageObject6.replyMessageObject) == null) {
                            messageObject2 = messageObject6;
                        } else {
                            SparseArray<MessageObject>[] sparseArrayArr2 = this.messagesDict;
                            if (messageObject3.getDialogId() != this.dialog_id) {
                                i = 1;
                            }
                            messageObject2 = sparseArrayArr2[i].get(messageObject6.replyMessageObject.getId());
                        }
                        float f = (float) intValue2;
                        float duration = f / ((float) messageObject2.getDuration());
                        MediaController mediaController = getMediaController();
                        if (mediaController.isPlayingMessage(messageObject2)) {
                            messageObject2.audioProgress = duration;
                            mediaController.seekToProgress(messageObject2, duration);
                            if (mediaController.isMessagePaused()) {
                                mediaController.playMessage(messageObject2);
                                return;
                            }
                            return;
                        }
                        messageObject2.forceSeekTo = f / ((float) messageObject2.getDuration());
                        mediaController.playMessage(messageObject2);
                    } else if (url.startsWith("card:")) {
                        String substring = url.substring(5);
                        AlertDialog[] alertDialogArr = {new AlertDialog(getParentActivity(), 3)};
                        TLRPC$TL_payments_getBankCardData tLRPC$TL_payments_getBankCardData = new TLRPC$TL_payments_getBankCardData();
                        tLRPC$TL_payments_getBankCardData.number = substring;
                        AndroidUtilities.runOnUIThread(new Runnable(alertDialogArr, getConnectionsManager().sendRequest(tLRPC$TL_payments_getBankCardData, new RequestDelegate(alertDialogArr, substring) {
                            public final /* synthetic */ AlertDialog[] f$1;
                            public final /* synthetic */ String f$2;

                            {
                                this.f$1 = r2;
                                this.f$2 = r3;
                            }

                            public final void run(TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                                ChatActivity.this.lambda$didPressMessageUrl$152$ChatActivity(this.f$1, this.f$2, tLObject, tLRPC$TL_error);
                            }
                        }, (QuickAckDelegate) null, (WriteToSocketDelegate) null, 0, getMessagesController().webFileDatacenterId, 1, true)) {
                            public final /* synthetic */ AlertDialog[] f$1;
                            public final /* synthetic */ int f$2;

                            {
                                this.f$1 = r2;
                                this.f$2 = r3;
                            }

                            public final void run() {
                                ChatActivity.this.lambda$didPressMessageUrl$154$ChatActivity(this.f$1, this.f$2);
                            }
                        }, 500);
                    } else if (z2) {
                        BottomSheet.Builder builder = new BottomSheet.Builder(getParentActivity());
                        builder.setTitle(url);
                        builder.setItems(new CharSequence[]{LocaleController.getString("Open", NUM), LocaleController.getString("Copy", NUM)}, new DialogInterface.OnClickListener(url) {
                            public final /* synthetic */ String f$1;

                            {
                                this.f$1 = r2;
                            }

                            public final void onClick(DialogInterface dialogInterface, int i) {
                                ChatActivity.this.lambda$didPressMessageUrl$155$ChatActivity(this.f$1, dialogInterface, i);
                            }
                        });
                        showDialog(builder.create());
                    } else {
                        openClickableLink(url);
                    }
                } else if (URLSpanBotCommand.enabled) {
                    ChatActivityEnterView chatActivityEnterView2 = this.chatActivityEnterView;
                    TLRPC$Chat tLRPC$Chat = this.currentChat;
                    if (tLRPC$Chat == null || !tLRPC$Chat.megagroup) {
                        z3 = false;
                    }
                    chatActivityEnterView2.setCommand(messageObject6, url, z2, z3);
                    if (!z2 && this.chatActivityEnterView.getFieldText() == null) {
                        hideFieldPanel(false);
                    }
                }
            } else {
                String url2 = ((URLSpan) characterStyle2).getURL();
                if (z2) {
                    BottomSheet.Builder builder2 = new BottomSheet.Builder(getParentActivity());
                    builder2.setTitle(url2);
                    builder2.setItems(new CharSequence[]{LocaleController.getString("Open", NUM), LocaleController.getString("Copy", NUM)}, new DialogInterface.OnClickListener(url2) {
                        public final /* synthetic */ String f$1;

                        {
                            this.f$1 = r2;
                        }

                        public final void onClick(DialogInterface dialogInterface, int i) {
                            ChatActivity.this.lambda$didPressMessageUrl$156$ChatActivity(this.f$1, dialogInterface, i);
                        }
                    });
                    showDialog(builder2.create());
                    return;
                }
                boolean z4 = characterStyle2 instanceof URLSpanReplacement;
                if ((!z4 || (url2 != null && url2.startsWith("mailto:"))) && !AndroidUtilities.shouldShowUrlInAlert(url2)) {
                    if (messageObject6 != null) {
                        TLRPC$MessageMedia tLRPC$MessageMedia = messageObject6.messageOwner.media;
                        if (!(!(tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaWebPage) || (tLRPC$WebPage = tLRPC$MessageMedia.webpage) == null || tLRPC$WebPage.cached_page == null)) {
                            String lowerCase = url2.toLowerCase();
                            String lowerCase2 = messageObject6.messageOwner.media.webpage.url.toLowerCase();
                            if ((lowerCase.contains("telegram.org/blog") || Browser.isTelegraphUrl(lowerCase, false) || lowerCase.contains("t.me/iv")) && (lowerCase.contains(lowerCase2) || lowerCase2.contains(lowerCase))) {
                                ArticleViewer.getInstance().setParentActivity(getParentActivity(), this);
                                ArticleViewer.getInstance().open(messageObject6);
                                return;
                            }
                        }
                    }
                    if (messageObject6 != null) {
                        i = messageObject.getId();
                    }
                    if (!openLinkInternally(url2, i)) {
                        z3 = z4;
                    } else {
                        return;
                    }
                } else {
                    if (messageObject6 != null) {
                        i = messageObject.getId();
                    }
                    if (openLinkInternally(url2, i)) {
                        return;
                    }
                }
                processExternalUrl(2, url2, z3);
            }
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$didPressMessageUrl$152 */
    public /* synthetic */ void lambda$didPressMessageUrl$152$ChatActivity(AlertDialog[] alertDialogArr, String str, TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
        AndroidUtilities.runOnUIThread(new Runnable(alertDialogArr, tLObject, str) {
            public final /* synthetic */ AlertDialog[] f$1;
            public final /* synthetic */ TLObject f$2;
            public final /* synthetic */ String f$3;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
            }

            public final void run() {
                ChatActivity.this.lambda$null$151$ChatActivity(this.f$1, this.f$2, this.f$3);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$151 */
    public /* synthetic */ void lambda$null$151$ChatActivity(AlertDialog[] alertDialogArr, TLObject tLObject, String str) {
        try {
            alertDialogArr[0].dismiss();
        } catch (Throwable unused) {
        }
        alertDialogArr[0] = null;
        if ((tLObject instanceof TLRPC$TL_payments_bankCardData) && getParentActivity() != null) {
            TLRPC$TL_payments_bankCardData tLRPC$TL_payments_bankCardData = (TLRPC$TL_payments_bankCardData) tLObject;
            BottomSheet.Builder builder = new BottomSheet.Builder(getParentActivity());
            ArrayList arrayList = new ArrayList();
            int size = tLRPC$TL_payments_bankCardData.open_urls.size();
            for (int i = 0; i < size; i++) {
                arrayList.add(tLRPC$TL_payments_bankCardData.open_urls.get(i).name);
            }
            arrayList.add(LocaleController.getString("CopyCardNumber", NUM));
            builder.setTitle(tLRPC$TL_payments_bankCardData.title);
            builder.setItems((CharSequence[]) arrayList.toArray(new CharSequence[0]), new DialogInterface.OnClickListener(tLRPC$TL_payments_bankCardData, str) {
                public final /* synthetic */ TLRPC$TL_payments_bankCardData f$1;
                public final /* synthetic */ String f$2;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                }

                public final void onClick(DialogInterface dialogInterface, int i) {
                    ChatActivity.this.lambda$null$150$ChatActivity(this.f$1, this.f$2, dialogInterface, i);
                }
            });
            showDialog(builder.create());
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$150 */
    public /* synthetic */ void lambda$null$150$ChatActivity(TLRPC$TL_payments_bankCardData tLRPC$TL_payments_bankCardData, String str, DialogInterface dialogInterface, int i) {
        if (i < tLRPC$TL_payments_bankCardData.open_urls.size()) {
            Browser.openUrl((Context) getParentActivity(), tLRPC$TL_payments_bankCardData.open_urls.get(i).url, this.inlineReturn == 0, false);
            return;
        }
        AndroidUtilities.addToClipboard(str);
        Toast.makeText(ApplicationLoader.applicationContext, LocaleController.getString("CardNumberCopied", NUM), 0).show();
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$didPressMessageUrl$154 */
    public /* synthetic */ void lambda$didPressMessageUrl$154$ChatActivity(AlertDialog[] alertDialogArr, int i) {
        if (alertDialogArr[0] != null) {
            alertDialogArr[0].setOnCancelListener(new DialogInterface.OnCancelListener(i) {
                public final /* synthetic */ int f$1;

                {
                    this.f$1 = r2;
                }

                public final void onCancel(DialogInterface dialogInterface) {
                    ChatActivity.this.lambda$null$153$ChatActivity(this.f$1, dialogInterface);
                }
            });
            showDialog(alertDialogArr[0]);
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$153 */
    public /* synthetic */ void lambda$null$153$ChatActivity(int i, DialogInterface dialogInterface) {
        getConnectionsManager().cancelRequest(i, true);
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$didPressMessageUrl$155 */
    public /* synthetic */ void lambda$didPressMessageUrl$155$ChatActivity(String str, DialogInterface dialogInterface, int i) {
        if (i == 0) {
            openClickableLink(str);
        } else if (i == 1) {
            AndroidUtilities.addToClipboard(str);
            if (str.startsWith("@")) {
                this.undoView.showWithAction(0, 56, (Runnable) null);
            } else if (str.startsWith("#") || str.startsWith("$")) {
                this.undoView.showWithAction(0, 57, (Runnable) null);
            } else {
                this.undoView.showWithAction(0, 59, (Runnable) null);
            }
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$didPressMessageUrl$156 */
    public /* synthetic */ void lambda$didPressMessageUrl$156$ChatActivity(String str, DialogInterface dialogInterface, int i) {
        boolean z = false;
        if (i == 0) {
            processExternalUrl(1, str, false);
        } else if (i == 1) {
            if (str.startsWith("mailto:")) {
                str = str.substring(7);
            } else if (str.startsWith("tel:")) {
                str = str.substring(4);
                z = true;
            }
            AndroidUtilities.addToClipboard(str);
            if (z) {
                this.undoView.showWithAction(0, 60, (Runnable) null);
            } else {
                this.undoView.showWithAction(0, 59, (Runnable) null);
            }
        }
    }

    /* access modifiers changed from: package-private */
    public void openPhotoViewerForMessage(ChatMessageCell chatMessageCell, MessageObject messageObject) {
        ChatMessageCell chatMessageCell2;
        AnimatedFileDrawable animation;
        Bitmap animatedBitmap;
        MessageObject messageObject2 = messageObject;
        if (chatMessageCell == null) {
            int childCount = this.chatListView.getChildCount();
            int i = 0;
            while (true) {
                if (i >= childCount) {
                    break;
                }
                View childAt = this.chatListView.getChildAt(i);
                if (childAt instanceof ChatMessageCell) {
                    chatMessageCell2 = (ChatMessageCell) childAt;
                    if (chatMessageCell2.getMessageObject().equals(messageObject2)) {
                        break;
                    }
                }
                i++;
            }
        }
        chatMessageCell2 = chatMessageCell;
        if (messageObject.isVideo()) {
            sendSecretMessageRead(messageObject2, true);
        }
        PhotoViewer.getInstance().setParentActivity(getParentActivity());
        MessageObject playingMessageObject = MediaController.getInstance().getPlayingMessageObject();
        if (!(chatMessageCell2 == null || playingMessageObject == null || !playingMessageObject.isVideo())) {
            getFileLoader().setLoadingVideoForPlayer(playingMessageObject.getDocument(), false);
            if (!(!playingMessageObject.equals(messageObject2) || (animation = chatMessageCell2.getPhotoImage().getAnimation()) == null || this.videoTextureView == null || this.videoPlayerContainer.getTag() == null || (animatedBitmap = animation.getAnimatedBitmap()) == null)) {
                try {
                    Bitmap bitmap = this.videoTextureView.getBitmap(animatedBitmap.getWidth(), animatedBitmap.getHeight());
                    new Canvas(animatedBitmap).drawBitmap(bitmap, 0.0f, 0.0f, (Paint) null);
                    bitmap.recycle();
                } catch (Throwable th) {
                    FileLog.e(th);
                }
            }
            MediaController.getInstance().cleanupPlayer(true, true, false, playingMessageObject.equals(messageObject2));
        }
        if (this.chatMode != 1 || (!messageObject.isVideo() && messageObject2.type != 1)) {
            PhotoViewer instance = PhotoViewer.getInstance();
            int i2 = messageObject2.type;
            long j = 0;
            long j2 = i2 != 0 ? this.dialog_id : 0;
            if (i2 != 0) {
                j = this.mergeDialogId;
            }
            instance.openPhoto(messageObject, this, j2, j, this.photoViewerProvider);
        } else {
            PhotoViewer.getInstance().setParentChatActivity(this);
            ArrayList arrayList = new ArrayList();
            int size = this.messages.size();
            for (int i3 = 0; i3 < size; i3++) {
                MessageObject messageObject3 = this.messages.get(i3);
                if (messageObject3.isVideo() || messageObject3.type == 1) {
                    arrayList.add(0, messageObject3);
                }
            }
            PhotoViewer.getInstance().openPhoto((ArrayList<MessageObject>) arrayList, arrayList.indexOf(messageObject2), this.dialog_id, 0, this.photoViewerProvider);
        }
        hideHints(false);
        MediaController.getInstance().resetGoingToShowMessageObject();
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Code restructure failed: missing block: B:7:0x0015, code lost:
        r1 = r2.scrimPopupWindow;
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public void updateMessageListAccessibilityVisibility() {
        /*
            r2 = this;
            org.telegram.tgnet.TLRPC$EncryptedChat r0 = r2.currentEncryptedChat
            if (r0 == 0) goto L_0x0005
            return
        L_0x0005:
            int r0 = android.os.Build.VERSION.SDK_INT
            r1 = 19
            if (r0 < r1) goto L_0x0026
            org.telegram.ui.Components.RecyclerListView r0 = r2.chatListView
            android.widget.FrameLayout r1 = r2.mentionContainer
            int r1 = r1.getVisibility()
            if (r1 == 0) goto L_0x0022
            org.telegram.ui.ActionBar.ActionBarPopupWindow r1 = r2.scrimPopupWindow
            if (r1 == 0) goto L_0x0020
            boolean r1 = r1.isShowing()
            if (r1 == 0) goto L_0x0020
            goto L_0x0022
        L_0x0020:
            r1 = 0
            goto L_0x0023
        L_0x0022:
            r1 = 4
        L_0x0023:
            r0.setImportantForAccessibility(r1)
        L_0x0026:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.updateMessageListAccessibilityVisibility():void");
    }

    public boolean canBeginSlide() {
        return this.swipeBackEnabled && this.chatActivityEnterView.swipeToBackEnabled();
    }

    public boolean isSwipeBackEnabled(MotionEvent motionEvent) {
        return this.swipeBackEnabled;
    }

    public class ChatActivityAdapter extends RecyclerAnimationScrollHelper.AnimatableAdapter {
        /* access modifiers changed from: private */
        public int botInfoRow = -5;
        /* access modifiers changed from: private */
        public boolean isBot;
        /* access modifiers changed from: private */
        public int loadingDownRow = -5;
        /* access modifiers changed from: private */
        public int loadingUpRow = -5;
        /* access modifiers changed from: private */
        public Context mContext;
        /* access modifiers changed from: private */
        public int messagesEndRow;
        /* access modifiers changed from: private */
        public int messagesStartRow;
        private int rowCount;

        public boolean isEnabled(RecyclerView.ViewHolder viewHolder) {
            return false;
        }

        public ChatActivityAdapter(Context context) {
            this.mContext = context;
            TLRPC$User tLRPC$User = ChatActivity.this.currentUser;
            this.isBot = tLRPC$User != null && tLRPC$User.bot;
            setHasStableIds(true);
        }

        public void updateRowsSafe() {
            int i = this.rowCount;
            int i2 = this.botInfoRow;
            int i3 = this.loadingUpRow;
            int i4 = this.loadingDownRow;
            int i5 = this.messagesStartRow;
            int i6 = this.messagesEndRow;
            updateRowsInternal();
            if (i != this.rowCount || i2 != this.botInfoRow || i3 != this.loadingUpRow || i4 != this.loadingDownRow || i5 != this.messagesStartRow || i6 != this.messagesEndRow) {
                notifyDataSetChanged(false);
            }
        }

        /* access modifiers changed from: private */
        public void updateRowsInternal() {
            TLRPC$User tLRPC$User;
            this.rowCount = 0;
            if (!ChatActivity.this.messages.isEmpty()) {
                if (!ChatActivity.this.forwardEndReached[0] || (ChatActivity.this.mergeDialogId != 0 && !ChatActivity.this.forwardEndReached[1])) {
                    int i = this.rowCount;
                    this.rowCount = i + 1;
                    this.loadingDownRow = i;
                } else {
                    this.loadingDownRow = -5;
                }
                int i2 = this.rowCount;
                this.messagesStartRow = i2;
                int size = i2 + ChatActivity.this.messages.size();
                this.rowCount = size;
                this.messagesEndRow = size;
                ChatActivity chatActivity = ChatActivity.this;
                TLRPC$User tLRPC$User2 = chatActivity.currentUser;
                if (tLRPC$User2 == null || !tLRPC$User2.bot || chatActivity.chatMode != 0 || (((ChatActivity.this.botInfo.size() <= 0 || ((TLRPC$BotInfo) ChatActivity.this.botInfo.get(ChatActivity.this.currentUser.id)).description == null) && !UserObject.isReplyUser(ChatActivity.this.currentUser)) || !ChatActivity.this.endReached[0])) {
                    this.botInfoRow = -5;
                } else {
                    int i3 = this.rowCount;
                    this.rowCount = i3 + 1;
                    this.botInfoRow = i3;
                }
                if (!ChatActivity.this.endReached[0] || (ChatActivity.this.mergeDialogId != 0 && !ChatActivity.this.endReached[1])) {
                    int i4 = this.rowCount;
                    this.rowCount = i4 + 1;
                    this.loadingUpRow = i4;
                    return;
                }
                this.loadingUpRow = -5;
                return;
            }
            this.loadingUpRow = -5;
            this.loadingDownRow = -5;
            this.messagesStartRow = -5;
            this.messagesEndRow = -5;
            if (UserObject.isReplyUser(ChatActivity.this.currentUser) || ((tLRPC$User = ChatActivity.this.currentUser) != null && tLRPC$User.bot && !MessagesController.isSupportUser(tLRPC$User) && ChatActivity.this.chatMode == 0)) {
                int i5 = this.rowCount;
                this.rowCount = i5 + 1;
                this.botInfoRow = i5;
                return;
            }
            this.botInfoRow = -5;
        }

        public int getItemCount() {
            if (ChatActivity.this.clearingHistory) {
                return 0;
            }
            return this.rowCount;
        }

        public long getItemId(int i) {
            int i2 = this.messagesStartRow;
            if (i >= i2 && i < this.messagesEndRow) {
                return (long) ChatActivity.this.messages.get(i - i2).stableId;
            }
            if (i == this.botInfoRow) {
                return 1;
            }
            if (i == this.loadingUpRow) {
                return 2;
            }
            return i == this.loadingDownRow ? 3 : 4;
        }

        /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v1, resolved type: org.telegram.ui.Cells.ChatMessageCell} */
        /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v2, resolved type: org.telegram.ui.Cells.ChatMessageCell} */
        /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v4, resolved type: org.telegram.ui.Cells.BotHelpCell} */
        /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v10, resolved type: org.telegram.ui.Cells.ChatMessageCell} */
        /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v16, resolved type: org.telegram.ui.Cells.ChatLoadingCell} */
        /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v17, resolved type: org.telegram.ui.Cells.ChatLoadingCell} */
        /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v18, resolved type: org.telegram.ui.Cells.ChatUnreadCell} */
        /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v19, resolved type: org.telegram.ui.ChatActivity$ChatActivityAdapter$2} */
        /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v20, resolved type: org.telegram.ui.Cells.ChatMessageCell} */
        /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v21, resolved type: org.telegram.ui.Cells.ChatMessageCell} */
        /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v22, resolved type: org.telegram.ui.Cells.ChatMessageCell} */
        /* JADX WARNING: Multi-variable type inference failed */
        /* Code decompiled incorrectly, please refer to instructions dump. */
        public androidx.recyclerview.widget.RecyclerView.ViewHolder onCreateViewHolder(android.view.ViewGroup r3, int r4) {
            /*
                r2 = this;
                r3 = 1
                if (r4 != 0) goto L_0x0042
                org.telegram.ui.ChatActivity r4 = org.telegram.ui.ChatActivity.this
                java.util.ArrayList r4 = r4.chatMessageCellsCache
                boolean r4 = r4.isEmpty()
                if (r4 != 0) goto L_0x0026
                org.telegram.ui.ChatActivity r4 = org.telegram.ui.ChatActivity.this
                java.util.ArrayList r4 = r4.chatMessageCellsCache
                r0 = 0
                java.lang.Object r4 = r4.get(r0)
                android.view.View r4 = (android.view.View) r4
                org.telegram.ui.ChatActivity r1 = org.telegram.ui.ChatActivity.this
                java.util.ArrayList r1 = r1.chatMessageCellsCache
                r1.remove(r0)
                goto L_0x002d
            L_0x0026:
                org.telegram.ui.Cells.ChatMessageCell r4 = new org.telegram.ui.Cells.ChatMessageCell
                android.content.Context r0 = r2.mContext
                r4.<init>(r0)
            L_0x002d:
                r0 = r4
                org.telegram.ui.Cells.ChatMessageCell r0 = (org.telegram.ui.Cells.ChatMessageCell) r0
                org.telegram.ui.ChatActivity$ChatActivityAdapter$1 r1 = new org.telegram.ui.ChatActivity$ChatActivityAdapter$1
                r1.<init>()
                r0.setDelegate(r1)
                org.telegram.ui.ChatActivity r1 = org.telegram.ui.ChatActivity.this
                org.telegram.tgnet.TLRPC$EncryptedChat r1 = r1.currentEncryptedChat
                if (r1 != 0) goto L_0x007e
                r0.setAllowAssistant(r3)
                goto L_0x007e
            L_0x0042:
                if (r4 != r3) goto L_0x0054
                org.telegram.ui.ChatActivity$ChatActivityAdapter$2 r4 = new org.telegram.ui.ChatActivity$ChatActivityAdapter$2
                android.content.Context r3 = r2.mContext
                r4.<init>(r2, r3)
                org.telegram.ui.ChatActivity$ChatActivityAdapter$3 r3 = new org.telegram.ui.ChatActivity$ChatActivityAdapter$3
                r3.<init>()
                r4.setDelegate(r3)
                goto L_0x007e
            L_0x0054:
                r3 = 2
                if (r4 != r3) goto L_0x005f
                org.telegram.ui.Cells.ChatUnreadCell r4 = new org.telegram.ui.Cells.ChatUnreadCell
                android.content.Context r3 = r2.mContext
                r4.<init>(r3)
                goto L_0x007e
            L_0x005f:
                r3 = 3
                if (r4 != r3) goto L_0x0072
                org.telegram.ui.Cells.BotHelpCell r4 = new org.telegram.ui.Cells.BotHelpCell
                android.content.Context r3 = r2.mContext
                r4.<init>(r3)
                org.telegram.ui.-$$Lambda$ChatActivity$ChatActivityAdapter$N39hl90o7gVBYNU5s2z9r-eoDYY r3 = new org.telegram.ui.-$$Lambda$ChatActivity$ChatActivityAdapter$N39hl90o7gVBYNU5s2z9r-eoDYY
                r3.<init>()
                r4.setDelegate(r3)
                goto L_0x007e
            L_0x0072:
                r3 = 4
                if (r4 != r3) goto L_0x007d
                org.telegram.ui.Cells.ChatLoadingCell r4 = new org.telegram.ui.Cells.ChatLoadingCell
                android.content.Context r3 = r2.mContext
                r4.<init>(r3)
                goto L_0x007e
            L_0x007d:
                r4 = 0
            L_0x007e:
                androidx.recyclerview.widget.RecyclerView$LayoutParams r3 = new androidx.recyclerview.widget.RecyclerView$LayoutParams
                r0 = -1
                r1 = -2
                r3.<init>((int) r0, (int) r1)
                r4.setLayoutParams(r3)
                org.telegram.ui.Components.RecyclerListView$Holder r3 = new org.telegram.ui.Components.RecyclerListView$Holder
                r3.<init>(r4)
                return r3
            */
            throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.ChatActivityAdapter.onCreateViewHolder(android.view.ViewGroup, int):androidx.recyclerview.widget.RecyclerView$ViewHolder");
        }

        /* access modifiers changed from: private */
        /* renamed from: lambda$onCreateViewHolder$0 */
        public /* synthetic */ void lambda$onCreateViewHolder$0$ChatActivity$ChatActivityAdapter(String str) {
            if (str.startsWith("@")) {
                ChatActivity.this.getMessagesController().openByUserName(str.substring(1), ChatActivity.this, 0);
            } else if (str.startsWith("#") || str.startsWith("$")) {
                DialogsActivity dialogsActivity = new DialogsActivity((Bundle) null);
                dialogsActivity.setSearchString(str);
                ChatActivity.this.presentFragment(dialogsActivity);
            } else if (str.startsWith("/")) {
                ChatActivity.this.chatActivityEnterView.setCommand((MessageObject) null, str, false, false);
                if (ChatActivity.this.chatActivityEnterView.getFieldText() == null) {
                    ChatActivity.this.hideFieldPanel(false);
                }
            } else {
                ChatActivity.this.processExternalUrl(0, str, false);
            }
        }

        /* JADX WARNING: Code restructure failed: missing block: B:120:0x023f, code lost:
            if (r0.this$0.currentChat.megagroup != false) goto L_0x02bf;
         */
        /* JADX WARNING: Code restructure failed: missing block: B:130:0x026a, code lost:
            if (r2.getSenderId() == r3.getSenderId()) goto L_0x026c;
         */
        /* JADX WARNING: Code restructure failed: missing block: B:148:0x02bc, code lost:
            if (org.telegram.messenger.MessageObject.getPeerId(r2) == org.telegram.messenger.MessageObject.getPeerId(r3.messageOwner.fwd_from.from_id)) goto L_0x026c;
         */
        /* JADX WARNING: Code restructure failed: missing block: B:192:0x0365, code lost:
            if (r2.getSenderId() == r3.getSenderId()) goto L_0x0367;
         */
        /* JADX WARNING: Code restructure failed: missing block: B:210:0x03b7, code lost:
            if (org.telegram.messenger.MessageObject.getPeerId(r2) == org.telegram.messenger.MessageObject.getPeerId(r3.messageOwner.fwd_from.from_id)) goto L_0x0367;
         */
        /* JADX WARNING: Removed duplicated region for block: B:103:0x020e  */
        /* JADX WARNING: Removed duplicated region for block: B:104:0x0210  */
        /* JADX WARNING: Removed duplicated region for block: B:106:0x0213  */
        /* JADX WARNING: Removed duplicated region for block: B:152:0x02c6  */
        /* JADX WARNING: Removed duplicated region for block: B:223:0x03e1  */
        /* JADX WARNING: Removed duplicated region for block: B:225:0x03e4  */
        /* JADX WARNING: Removed duplicated region for block: B:233:0x040b  */
        /* JADX WARNING: Removed duplicated region for block: B:236:0x041d  */
        /* JADX WARNING: Removed duplicated region for block: B:248:0x0476  */
        /* JADX WARNING: Removed duplicated region for block: B:270:? A[RETURN, SYNTHETIC] */
        /* JADX WARNING: Removed duplicated region for block: B:69:0x0142  */
        /* JADX WARNING: Removed duplicated region for block: B:70:0x0145  */
        /* JADX WARNING: Removed duplicated region for block: B:73:0x015b  */
        /* JADX WARNING: Removed duplicated region for block: B:74:0x015d  */
        /* JADX WARNING: Removed duplicated region for block: B:77:0x0162  */
        /* JADX WARNING: Removed duplicated region for block: B:91:0x01c1  */
        /* Code decompiled incorrectly, please refer to instructions dump. */
        public void onBindViewHolder(androidx.recyclerview.widget.RecyclerView.ViewHolder r17, int r18) {
            /*
                r16 = this;
                r0 = r16
                r1 = r17
                r2 = r18
                int r3 = r0.botInfoRow
                r4 = 1
                r5 = 0
                if (r2 != r3) goto L_0x004f
                android.view.View r1 = r1.itemView
                org.telegram.ui.Cells.BotHelpCell r1 = (org.telegram.ui.Cells.BotHelpCell) r1
                org.telegram.ui.ChatActivity r2 = org.telegram.ui.ChatActivity.this
                org.telegram.tgnet.TLRPC$User r2 = r2.currentUser
                boolean r2 = org.telegram.messenger.UserObject.isReplyUser((org.telegram.tgnet.TLRPC$User) r2)
                if (r2 == 0) goto L_0x0028
                r2 = 2131627140(0x7f0e0CLASSNAME, float:1.8881536E38)
                java.lang.String r3 = "RepliesChatInfo"
                java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r3, r2)
                r1.setText(r5, r2)
                goto L_0x04dd
            L_0x0028:
                org.telegram.ui.ChatActivity r2 = org.telegram.ui.ChatActivity.this
                android.util.SparseArray r2 = r2.botInfo
                int r2 = r2.size()
                if (r2 == 0) goto L_0x0049
                org.telegram.ui.ChatActivity r2 = org.telegram.ui.ChatActivity.this
                android.util.SparseArray r2 = r2.botInfo
                org.telegram.ui.ChatActivity r3 = org.telegram.ui.ChatActivity.this
                org.telegram.tgnet.TLRPC$User r3 = r3.currentUser
                int r3 = r3.id
                java.lang.Object r2 = r2.get(r3)
                org.telegram.tgnet.TLRPC$BotInfo r2 = (org.telegram.tgnet.TLRPC$BotInfo) r2
                java.lang.String r2 = r2.description
                goto L_0x004a
            L_0x0049:
                r2 = 0
            L_0x004a:
                r1.setText(r4, r2)
                goto L_0x04dd
            L_0x004f:
                int r3 = r0.loadingDownRow
                if (r2 == r3) goto L_0x04ca
                int r3 = r0.loadingUpRow
                if (r2 != r3) goto L_0x0059
                goto L_0x04ca
            L_0x0059:
                int r3 = r0.messagesStartRow
                if (r2 < r3) goto L_0x04dd
                int r6 = r0.messagesEndRow
                if (r2 >= r6) goto L_0x04dd
                org.telegram.ui.ChatActivity r6 = org.telegram.ui.ChatActivity.this
                java.util.ArrayList<org.telegram.messenger.MessageObject> r6 = r6.messages
                int r3 = r2 - r3
                java.lang.Object r3 = r6.get(r3)
                org.telegram.messenger.MessageObject r3 = (org.telegram.messenger.MessageObject) r3
                android.view.View r6 = r1.itemView
                boolean r7 = r6 instanceof org.telegram.ui.Cells.ChatMessageCell
                if (r7 == 0) goto L_0x049b
                org.telegram.ui.Cells.ChatMessageCell r6 = (org.telegram.ui.Cells.ChatMessageCell) r6
                org.telegram.ui.ChatActivity r7 = org.telegram.ui.ChatActivity.this
                org.telegram.messenger.MessageObject$GroupedMessages r7 = r7.getValidGroupedMessage(r3)
                org.telegram.ui.ChatActivity r8 = org.telegram.ui.ChatActivity.this
                org.telegram.tgnet.TLRPC$Chat r9 = r8.currentChat
                if (r9 != 0) goto L_0x0096
                org.telegram.tgnet.TLRPC$User r8 = r8.currentUser
                boolean r8 = org.telegram.messenger.UserObject.isUserSelf(r8)
                if (r8 != 0) goto L_0x0096
                org.telegram.ui.ChatActivity r8 = org.telegram.ui.ChatActivity.this
                org.telegram.tgnet.TLRPC$User r8 = r8.currentUser
                boolean r8 = org.telegram.messenger.UserObject.isReplyUser((org.telegram.tgnet.TLRPC$User) r8)
                if (r8 == 0) goto L_0x0094
                goto L_0x0096
            L_0x0094:
                r8 = 0
                goto L_0x0097
            L_0x0096:
                r8 = 1
            L_0x0097:
                r6.isChat = r8
                org.telegram.ui.ChatActivity r8 = org.telegram.ui.ChatActivity.this
                org.telegram.tgnet.TLRPC$User r9 = r8.currentUser
                if (r9 == 0) goto L_0x00a5
                boolean r9 = r9.bot
                if (r9 == 0) goto L_0x00a5
                r9 = 1
                goto L_0x00a6
            L_0x00a5:
                r9 = 0
            L_0x00a6:
                r6.isBot = r9
                org.telegram.tgnet.TLRPC$Chat r8 = r8.currentChat
                boolean r8 = org.telegram.messenger.ChatObject.isChannel(r8)
                if (r8 == 0) goto L_0x00ba
                org.telegram.ui.ChatActivity r8 = org.telegram.ui.ChatActivity.this
                org.telegram.tgnet.TLRPC$Chat r8 = r8.currentChat
                boolean r8 = r8.megagroup
                if (r8 == 0) goto L_0x00ba
                r8 = 1
                goto L_0x00bb
            L_0x00ba:
                r8 = 0
            L_0x00bb:
                r6.isMegagroup = r8
                org.telegram.ui.ChatActivity r8 = org.telegram.ui.ChatActivity.this
                int r8 = r8.threadMessageId
                if (r8 == 0) goto L_0x00c7
                r8 = 1
                goto L_0x00c8
            L_0x00c7:
                r8 = 0
            L_0x00c8:
                r6.isThreadChat = r8
                org.telegram.ui.ChatActivity r8 = org.telegram.ui.ChatActivity.this
                int r8 = r8.chatMode
                if (r8 == r4) goto L_0x00ea
                org.telegram.ui.ChatActivity r8 = org.telegram.ui.ChatActivity.this
                org.telegram.tgnet.TLRPC$Chat r8 = r8.currentChat
                boolean r8 = org.telegram.messenger.ChatObject.isChannel(r8)
                if (r8 == 0) goto L_0x00ea
                org.telegram.ui.ChatActivity r8 = org.telegram.ui.ChatActivity.this
                org.telegram.tgnet.TLRPC$Chat r8 = r8.currentChat
                boolean r9 = r8.has_link
                if (r9 == 0) goto L_0x00ea
                boolean r8 = r8.megagroup
                if (r8 != 0) goto L_0x00ea
                r8 = 1
                goto L_0x00eb
            L_0x00ea:
                r8 = 0
            L_0x00eb:
                r6.hasDiscussion = r8
                org.telegram.ui.ChatActivity r8 = org.telegram.ui.ChatActivity.this
                int r8 = r8.chatMode
                if (r8 != 0) goto L_0x0131
                org.telegram.ui.ChatActivity r8 = org.telegram.ui.ChatActivity.this
                java.util.HashMap r8 = r8.pinnedMessageObjects
                int r9 = r3.getId()
                java.lang.Integer r9 = java.lang.Integer.valueOf(r9)
                boolean r8 = r8.containsKey(r9)
                if (r8 != 0) goto L_0x012f
                if (r7 == 0) goto L_0x0131
                java.util.ArrayList<org.telegram.messenger.MessageObject> r8 = r7.messages
                boolean r8 = r8.isEmpty()
                if (r8 != 0) goto L_0x0131
                org.telegram.ui.ChatActivity r8 = org.telegram.ui.ChatActivity.this
                java.util.HashMap r8 = r8.pinnedMessageObjects
                java.util.ArrayList<org.telegram.messenger.MessageObject> r9 = r7.messages
                java.lang.Object r9 = r9.get(r5)
                org.telegram.messenger.MessageObject r9 = (org.telegram.messenger.MessageObject) r9
                int r9 = r9.getId()
                java.lang.Integer r9 = java.lang.Integer.valueOf(r9)
                boolean r8 = r8.containsKey(r9)
                if (r8 == 0) goto L_0x0131
            L_0x012f:
                r8 = 1
                goto L_0x0132
            L_0x0131:
                r8 = 0
            L_0x0132:
                r6.isPinned = r8
                org.telegram.ui.ChatActivity r8 = org.telegram.ui.ChatActivity.this
                int r8 = r8.chatMode
                if (r8 == r4) goto L_0x0145
                org.telegram.ui.ChatActivity r8 = org.telegram.ui.ChatActivity.this
                org.telegram.tgnet.TLRPC$ChatFull r8 = r8.chatInfo
                if (r8 == 0) goto L_0x0145
                int r8 = r8.linked_chat_id
                goto L_0x0146
            L_0x0145:
                r8 = 0
            L_0x0146:
                r6.linkedChatId = r8
                org.telegram.ui.ChatActivity r8 = org.telegram.ui.ChatActivity.this
                org.telegram.tgnet.TLRPC$User r8 = r8.currentUser
                boolean r8 = org.telegram.messenger.UserObject.isReplyUser((org.telegram.tgnet.TLRPC$User) r8)
                r6.isRepliesChat = r8
                org.telegram.ui.ChatActivity r8 = org.telegram.ui.ChatActivity.this
                int r8 = r8.chatMode
                r9 = 2
                if (r8 != r9) goto L_0x015d
                r8 = 1
                goto L_0x015e
            L_0x015d:
                r8 = 0
            L_0x015e:
                r6.isPinnedChat = r8
                if (r7 == 0) goto L_0x01c1
                java.util.HashMap<org.telegram.messenger.MessageObject, org.telegram.messenger.MessageObject$GroupedMessagePosition> r8 = r7.positions
                java.lang.Object r8 = r8.get(r3)
                org.telegram.messenger.MessageObject$GroupedMessagePosition r8 = (org.telegram.messenger.MessageObject.GroupedMessagePosition) r8
                r9 = -100
                if (r8 == 0) goto L_0x01be
                boolean r10 = r7.isDocuments
                if (r10 == 0) goto L_0x0189
                java.util.ArrayList<org.telegram.messenger.MessageObject$GroupedMessagePosition> r9 = r7.posArray
                int r9 = r9.indexOf(r8)
                int r9 = r9 + r2
                int r9 = r9 + r4
                java.util.ArrayList<org.telegram.messenger.MessageObject$GroupedMessagePosition> r10 = r7.posArray
                int r10 = r10.size()
                int r2 = r2 - r10
                java.util.ArrayList<org.telegram.messenger.MessageObject$GroupedMessagePosition> r10 = r7.posArray
                int r8 = r10.indexOf(r8)
                int r2 = r2 + r8
                goto L_0x01c6
            L_0x0189:
                int r10 = r8.flags
                r10 = r10 & 4
                if (r10 == 0) goto L_0x019a
                java.util.ArrayList<org.telegram.messenger.MessageObject$GroupedMessagePosition> r10 = r7.posArray
                int r10 = r10.indexOf(r8)
                int r10 = r10 + r2
                int r10 = r10 + r4
                r11 = 0
                r12 = 0
                goto L_0x019e
            L_0x019a:
                r10 = -100
                r11 = 1
                r12 = 1
            L_0x019e:
                int r13 = r8.flags
                r13 = r13 & 8
                if (r13 == 0) goto L_0x01b8
                java.util.ArrayList<org.telegram.messenger.MessageObject$GroupedMessagePosition> r9 = r7.posArray
                int r9 = r9.size()
                int r2 = r2 - r9
                java.util.ArrayList<org.telegram.messenger.MessageObject$GroupedMessagePosition> r9 = r7.posArray
                int r8 = r9.indexOf(r8)
                int r9 = r2 + r8
                r2 = r9
                r9 = r10
                r8 = 0
                r10 = 0
                goto L_0x01ca
            L_0x01b8:
                r9 = r10
                r2 = -100
                r8 = 1
                r10 = 1
                goto L_0x01ca
            L_0x01be:
                r2 = -100
                goto L_0x01c6
            L_0x01c1:
                int r8 = r2 + -1
                int r9 = r2 + 1
                r2 = r8
            L_0x01c6:
                r8 = 0
                r10 = 0
                r11 = 0
                r12 = 0
            L_0x01ca:
                int r13 = r0.getItemViewType(r2)
                int r14 = r0.getItemViewType(r9)
                boolean r15 = r3.hasReactions()
                r4 = 300(0x12c, float:4.2E-43)
                if (r15 != 0) goto L_0x02c0
                org.telegram.tgnet.TLRPC$Message r15 = r3.messageOwner
                org.telegram.tgnet.TLRPC$ReplyMarkup r15 = r15.reply_markup
                boolean r15 = r15 instanceof org.telegram.tgnet.TLRPC$TL_replyInlineMarkup
                if (r15 != 0) goto L_0x02c0
                int r15 = r17.getItemViewType()
                if (r13 != r15) goto L_0x02c0
                org.telegram.ui.ChatActivity r10 = org.telegram.ui.ChatActivity.this
                java.util.ArrayList<org.telegram.messenger.MessageObject> r10 = r10.messages
                int r13 = r0.messagesStartRow
                int r2 = r2 - r13
                java.lang.Object r2 = r10.get(r2)
                org.telegram.messenger.MessageObject r2 = (org.telegram.messenger.MessageObject) r2
                boolean r10 = r2.isOutOwner()
                boolean r13 = r3.isOutOwner()
                if (r10 != r13) goto L_0x0210
                org.telegram.tgnet.TLRPC$Message r10 = r2.messageOwner
                int r10 = r10.date
                org.telegram.tgnet.TLRPC$Message r13 = r3.messageOwner
                int r13 = r13.date
                int r10 = r10 - r13
                int r10 = java.lang.Math.abs(r10)
                if (r10 > r4) goto L_0x0210
                r10 = 1
                goto L_0x0211
            L_0x0210:
                r10 = 0
            L_0x0211:
                if (r10 == 0) goto L_0x02c0
                boolean r13 = r3.isImportedForward()
                if (r13 != 0) goto L_0x026e
                boolean r13 = r2.isImportedForward()
                if (r13 == 0) goto L_0x0220
                goto L_0x026e
            L_0x0220:
                org.telegram.ui.ChatActivity r13 = org.telegram.ui.ChatActivity.this
                org.telegram.tgnet.TLRPC$Chat r15 = r13.currentChat
                if (r15 == 0) goto L_0x0243
                int r2 = r2.getFromChatId()
                int r10 = r3.getFromChatId()
                if (r2 != r10) goto L_0x0232
                r10 = 1
                goto L_0x0233
            L_0x0232:
                r10 = 0
            L_0x0233:
                if (r8 != 0) goto L_0x02c0
                if (r10 == 0) goto L_0x02c0
                if (r2 >= 0) goto L_0x02c0
                org.telegram.ui.ChatActivity r2 = org.telegram.ui.ChatActivity.this
                org.telegram.tgnet.TLRPC$Chat r2 = r2.currentChat
                boolean r2 = r2.megagroup
                if (r2 == 0) goto L_0x02c0
                goto L_0x02bf
            L_0x0243:
                org.telegram.tgnet.TLRPC$User r13 = r13.currentUser
                boolean r13 = org.telegram.messenger.UserObject.isUserSelf(r13)
                if (r13 != 0) goto L_0x0255
                org.telegram.ui.ChatActivity r13 = org.telegram.ui.ChatActivity.this
                org.telegram.tgnet.TLRPC$User r13 = r13.currentUser
                boolean r13 = org.telegram.messenger.UserObject.isReplyUser((org.telegram.tgnet.TLRPC$User) r13)
                if (r13 == 0) goto L_0x02c0
            L_0x0255:
                boolean r10 = r3.isPrivateForward()
                if (r10 != 0) goto L_0x02bf
                boolean r10 = r2.isPrivateForward()
                if (r10 == 0) goto L_0x0262
                goto L_0x02bf
            L_0x0262:
                int r2 = r2.getSenderId()
                int r10 = r3.getSenderId()
                if (r2 != r10) goto L_0x02bf
            L_0x026c:
                r10 = 1
                goto L_0x02c0
            L_0x026e:
                boolean r10 = r3.isImportedForward()
                if (r10 == 0) goto L_0x02bf
                boolean r10 = r2.isImportedForward()
                if (r10 == 0) goto L_0x02bf
                org.telegram.tgnet.TLRPC$Message r10 = r2.messageOwner
                org.telegram.tgnet.TLRPC$MessageFwdHeader r10 = r10.fwd_from
                int r10 = r10.date
                org.telegram.tgnet.TLRPC$Message r13 = r3.messageOwner
                org.telegram.tgnet.TLRPC$MessageFwdHeader r13 = r13.fwd_from
                int r13 = r13.date
                int r10 = r10 - r13
                int r10 = java.lang.Math.abs(r10)
                if (r10 > r4) goto L_0x02bf
                org.telegram.tgnet.TLRPC$Message r2 = r2.messageOwner
                org.telegram.tgnet.TLRPC$MessageFwdHeader r2 = r2.fwd_from
                java.lang.String r10 = r2.from_name
                if (r10 == 0) goto L_0x02a2
                org.telegram.tgnet.TLRPC$Message r13 = r3.messageOwner
                org.telegram.tgnet.TLRPC$MessageFwdHeader r13 = r13.fwd_from
                java.lang.String r13 = r13.from_name
                if (r13 == 0) goto L_0x02a2
                boolean r10 = r10.equals(r13)
                goto L_0x02c0
            L_0x02a2:
                org.telegram.tgnet.TLRPC$Peer r2 = r2.from_id
                if (r2 == 0) goto L_0x02bf
                org.telegram.tgnet.TLRPC$Message r10 = r3.messageOwner
                org.telegram.tgnet.TLRPC$MessageFwdHeader r10 = r10.fwd_from
                org.telegram.tgnet.TLRPC$Peer r10 = r10.from_id
                if (r10 == 0) goto L_0x02bf
                int r2 = org.telegram.messenger.MessageObject.getPeerId(r2)
                org.telegram.tgnet.TLRPC$Message r10 = r3.messageOwner
                org.telegram.tgnet.TLRPC$MessageFwdHeader r10 = r10.fwd_from
                org.telegram.tgnet.TLRPC$Peer r10 = r10.from_id
                int r10 = org.telegram.messenger.MessageObject.getPeerId(r10)
                if (r2 != r10) goto L_0x02bf
                goto L_0x026c
            L_0x02bf:
                r10 = 0
            L_0x02c0:
                int r2 = r17.getItemViewType()
                if (r14 != r2) goto L_0x03bb
                org.telegram.ui.ChatActivity r2 = org.telegram.ui.ChatActivity.this
                java.util.ArrayList<org.telegram.messenger.MessageObject> r2 = r2.messages
                int r11 = r0.messagesStartRow
                int r9 = r9 - r11
                java.lang.Object r2 = r2.get(r9)
                org.telegram.messenger.MessageObject r2 = (org.telegram.messenger.MessageObject) r2
                boolean r9 = r2.hasReactions()
                if (r9 != 0) goto L_0x02fc
                org.telegram.tgnet.TLRPC$Message r9 = r2.messageOwner
                org.telegram.tgnet.TLRPC$ReplyMarkup r9 = r9.reply_markup
                boolean r9 = r9 instanceof org.telegram.tgnet.TLRPC$TL_replyInlineMarkup
                if (r9 != 0) goto L_0x02fc
                boolean r9 = r2.isOutOwner()
                boolean r11 = r3.isOutOwner()
                if (r9 != r11) goto L_0x02fc
                org.telegram.tgnet.TLRPC$Message r9 = r2.messageOwner
                int r9 = r9.date
                org.telegram.tgnet.TLRPC$Message r11 = r3.messageOwner
                int r11 = r11.date
                int r9 = r9 - r11
                int r9 = java.lang.Math.abs(r9)
                if (r9 > r4) goto L_0x02fc
                r11 = 1
                goto L_0x02fd
            L_0x02fc:
                r11 = 0
            L_0x02fd:
                if (r11 == 0) goto L_0x03bb
                boolean r9 = r3.isImportedForward()
                if (r9 != 0) goto L_0x0369
                boolean r9 = r2.isImportedForward()
                if (r9 == 0) goto L_0x030c
                goto L_0x0369
            L_0x030c:
                org.telegram.ui.ChatActivity r4 = org.telegram.ui.ChatActivity.this
                org.telegram.tgnet.TLRPC$Chat r9 = r4.currentChat
                if (r9 == 0) goto L_0x033e
                int r4 = r2.getFromChatId()
                int r9 = r3.getFromChatId()
                if (r4 != r9) goto L_0x032a
                boolean r9 = r3.isImportedForward()
                if (r9 != 0) goto L_0x032a
                boolean r2 = r2.isImportedForward()
                if (r2 != 0) goto L_0x032a
                r2 = 1
                goto L_0x032b
            L_0x032a:
                r2 = 0
            L_0x032b:
                if (r12 != 0) goto L_0x033b
                if (r2 == 0) goto L_0x033b
                if (r4 >= 0) goto L_0x033b
                org.telegram.ui.ChatActivity r4 = org.telegram.ui.ChatActivity.this
                org.telegram.tgnet.TLRPC$Chat r4 = r4.currentChat
                boolean r4 = r4.megagroup
                if (r4 == 0) goto L_0x033b
                goto L_0x03ba
            L_0x033b:
                r11 = r2
                goto L_0x03bb
            L_0x033e:
                org.telegram.tgnet.TLRPC$User r4 = r4.currentUser
                boolean r4 = org.telegram.messenger.UserObject.isUserSelf(r4)
                if (r4 != 0) goto L_0x0350
                org.telegram.ui.ChatActivity r4 = org.telegram.ui.ChatActivity.this
                org.telegram.tgnet.TLRPC$User r4 = r4.currentUser
                boolean r4 = org.telegram.messenger.UserObject.isReplyUser((org.telegram.tgnet.TLRPC$User) r4)
                if (r4 == 0) goto L_0x03bb
            L_0x0350:
                boolean r4 = r3.isPrivateForward()
                if (r4 != 0) goto L_0x03ba
                boolean r4 = r2.isPrivateForward()
                if (r4 == 0) goto L_0x035d
                goto L_0x03ba
            L_0x035d:
                int r2 = r2.getSenderId()
                int r4 = r3.getSenderId()
                if (r2 != r4) goto L_0x03ba
            L_0x0367:
                r11 = 1
                goto L_0x03bb
            L_0x0369:
                boolean r9 = r3.isImportedForward()
                if (r9 == 0) goto L_0x03ba
                boolean r9 = r2.isImportedForward()
                if (r9 == 0) goto L_0x03ba
                org.telegram.tgnet.TLRPC$Message r9 = r3.messageOwner
                org.telegram.tgnet.TLRPC$MessageFwdHeader r9 = r9.fwd_from
                int r9 = r9.date
                org.telegram.tgnet.TLRPC$Message r11 = r2.messageOwner
                org.telegram.tgnet.TLRPC$MessageFwdHeader r11 = r11.fwd_from
                int r11 = r11.date
                int r9 = r9 - r11
                int r9 = java.lang.Math.abs(r9)
                if (r9 > r4) goto L_0x03ba
                org.telegram.tgnet.TLRPC$Message r2 = r2.messageOwner
                org.telegram.tgnet.TLRPC$MessageFwdHeader r2 = r2.fwd_from
                java.lang.String r4 = r2.from_name
                if (r4 == 0) goto L_0x039d
                org.telegram.tgnet.TLRPC$Message r9 = r3.messageOwner
                org.telegram.tgnet.TLRPC$MessageFwdHeader r9 = r9.fwd_from
                java.lang.String r9 = r9.from_name
                if (r9 == 0) goto L_0x039d
                boolean r11 = r4.equals(r9)
                goto L_0x03bb
            L_0x039d:
                org.telegram.tgnet.TLRPC$Peer r2 = r2.from_id
                if (r2 == 0) goto L_0x03ba
                org.telegram.tgnet.TLRPC$Message r4 = r3.messageOwner
                org.telegram.tgnet.TLRPC$MessageFwdHeader r4 = r4.fwd_from
                org.telegram.tgnet.TLRPC$Peer r4 = r4.from_id
                if (r4 == 0) goto L_0x03ba
                int r2 = org.telegram.messenger.MessageObject.getPeerId(r2)
                org.telegram.tgnet.TLRPC$Message r4 = r3.messageOwner
                org.telegram.tgnet.TLRPC$MessageFwdHeader r4 = r4.fwd_from
                org.telegram.tgnet.TLRPC$Peer r4 = r4.from_id
                int r4 = org.telegram.messenger.MessageObject.getPeerId(r4)
                if (r2 != r4) goto L_0x03ba
                goto L_0x0367
            L_0x03ba:
                r11 = 0
            L_0x03bb:
                org.telegram.ui.ChatActivity r2 = org.telegram.ui.ChatActivity.this
                org.telegram.tgnet.TLRPC$Chat r2 = r2.currentChat
                boolean r2 = org.telegram.messenger.ChatObject.isChannel(r2)
                if (r2 == 0) goto L_0x03e5
                org.telegram.ui.ChatActivity r2 = org.telegram.ui.ChatActivity.this
                org.telegram.tgnet.TLRPC$Chat r2 = r2.currentChat
                boolean r2 = r2.megagroup
                if (r2 == 0) goto L_0x03e5
                int r2 = r3.getFromChatId()
                if (r2 > 0) goto L_0x03e5
                org.telegram.tgnet.TLRPC$Message r2 = r3.messageOwner
                org.telegram.tgnet.TLRPC$MessageFwdHeader r2 = r2.fwd_from
                if (r2 == 0) goto L_0x03e5
                org.telegram.tgnet.TLRPC$Peer r2 = r2.saved_from_peer
                boolean r2 = r2 instanceof org.telegram.tgnet.TLRPC$TL_peerChannel
                if (r2 == 0) goto L_0x03e5
                if (r12 != 0) goto L_0x03e2
                r11 = 0
            L_0x03e2:
                if (r8 != 0) goto L_0x03e5
                r10 = 0
            L_0x03e5:
                r6.setMessageObject(r3, r7, r10, r11)
                org.telegram.ui.ChatActivity r2 = org.telegram.ui.ChatActivity.this
                int r2 = r2.highlightMessageId
                r4 = 2147483647(0x7fffffff, float:NaN)
                if (r2 == r4) goto L_0x0400
                int r2 = r3.getId()
                org.telegram.ui.ChatActivity r7 = org.telegram.ui.ChatActivity.this
                int r7 = r7.highlightMessageId
                if (r2 != r7) goto L_0x0400
                r5 = 1
            L_0x0400:
                r6.setHighlighted(r5)
                org.telegram.ui.ChatActivity r2 = org.telegram.ui.ChatActivity.this
                int r2 = r2.highlightMessageId
                if (r2 == r4) goto L_0x0410
                org.telegram.ui.ChatActivity r2 = org.telegram.ui.ChatActivity.this
                r2.startMessageUnselect()
            L_0x0410:
                org.telegram.ui.ChatActivity r2 = org.telegram.ui.ChatActivity.this
                java.util.ArrayList r2 = r2.animatingMessageObjects
                int r2 = r2.indexOf(r3)
                r4 = -1
                if (r2 == r4) goto L_0x045a
                org.telegram.ui.ChatActivity r4 = org.telegram.ui.ChatActivity.this
                java.util.ArrayList r4 = r4.animatingMessageObjects
                r4.remove(r2)
                int r2 = r3.type
                r4 = 5
                if (r2 != r4) goto L_0x0444
                org.telegram.ui.ChatActivity r2 = org.telegram.ui.ChatActivity.this
                org.telegram.ui.Components.InstantCameraView r2 = r2.instantCameraView
                android.view.TextureView r2 = r2.getTextureView()
                if (r2 == 0) goto L_0x045a
                android.view.ViewTreeObserver r2 = r6.getViewTreeObserver()
                org.telegram.ui.ChatActivity$ChatActivityAdapter$4 r4 = new org.telegram.ui.ChatActivity$ChatActivityAdapter$4
                r4.<init>(r6)
                r2.addOnPreDrawListener(r4)
                goto L_0x045a
            L_0x0444:
                org.telegram.ui.ChatActivity r2 = org.telegram.ui.ChatActivity.this
                org.telegram.ui.Components.ChatActivityEnterView r2 = r2.chatActivityEnterView
                boolean r2 = r2.canShowVoiceMessageTransition()
                if (r2 == 0) goto L_0x045a
                android.view.ViewTreeObserver r2 = r6.getViewTreeObserver()
                org.telegram.ui.ChatActivity$ChatActivityAdapter$5 r4 = new org.telegram.ui.ChatActivity$ChatActivityAdapter$5
                r4.<init>(r6)
                r2.addOnPreDrawListener(r4)
            L_0x045a:
                org.telegram.ui.ChatActivity r2 = org.telegram.ui.ChatActivity.this
                java.util.HashMap r2 = r2.animatingDocuments
                boolean r2 = r2.isEmpty()
                if (r2 != 0) goto L_0x04dd
                org.telegram.ui.ChatActivity r2 = org.telegram.ui.ChatActivity.this
                java.util.HashMap r2 = r2.animatingDocuments
                org.telegram.tgnet.TLRPC$Document r4 = r3.getDocument()
                boolean r2 = r2.containsKey(r4)
                if (r2 == 0) goto L_0x04dd
                org.telegram.ui.ChatActivity r2 = org.telegram.ui.ChatActivity.this
                java.util.HashMap r2 = r2.animatingDocuments
                org.telegram.tgnet.TLRPC$Document r3 = r3.getDocument()
                r2.remove(r3)
                org.telegram.ui.ChatActivity r2 = org.telegram.ui.ChatActivity.this
                androidx.recyclerview.widget.ChatListItemAnimator r2 = r2.chatListItemAnimator
                if (r2 == 0) goto L_0x04dd
                org.telegram.ui.ChatActivity r2 = org.telegram.ui.ChatActivity.this
                androidx.recyclerview.widget.ChatListItemAnimator r2 = r2.chatListItemAnimator
                org.telegram.ui.ChatActivity r3 = org.telegram.ui.ChatActivity.this
                org.telegram.ui.Components.ChatGreetingsView r3 = r3.greetingsViewContainer
                r2.onGreetingStickerTransition(r1, r3)
                goto L_0x04dd
            L_0x049b:
                boolean r1 = r6 instanceof org.telegram.ui.Cells.ChatActionCell
                if (r1 == 0) goto L_0x04aa
                org.telegram.ui.Cells.ChatActionCell r6 = (org.telegram.ui.Cells.ChatActionCell) r6
                r6.setMessageObject(r3)
                r1 = 1065353216(0x3var_, float:1.0)
                r6.setAlpha(r1)
                goto L_0x04dd
            L_0x04aa:
                boolean r1 = r6 instanceof org.telegram.ui.Cells.ChatUnreadCell
                if (r1 == 0) goto L_0x04dd
                org.telegram.ui.Cells.ChatUnreadCell r6 = (org.telegram.ui.Cells.ChatUnreadCell) r6
                r1 = 2131627817(0x7f0e0var_, float:1.888291E38)
                java.lang.String r2 = "UnreadMessages"
                java.lang.String r1 = org.telegram.messenger.LocaleController.getString(r2, r1)
                r6.setText(r1)
                org.telegram.ui.ChatActivity r1 = org.telegram.ui.ChatActivity.this
                int r1 = r1.createUnreadMessageAfterId
                if (r1 == 0) goto L_0x04dd
                org.telegram.ui.ChatActivity r1 = org.telegram.ui.ChatActivity.this
                int unused = r1.createUnreadMessageAfterId = r5
                goto L_0x04dd
            L_0x04ca:
                android.view.View r1 = r1.itemView
                org.telegram.ui.Cells.ChatLoadingCell r1 = (org.telegram.ui.Cells.ChatLoadingCell) r1
                org.telegram.ui.ChatActivity r2 = org.telegram.ui.ChatActivity.this
                int r2 = r2.loadsCount
                r3 = 1
                if (r2 <= r3) goto L_0x04d9
                r4 = 1
                goto L_0x04da
            L_0x04d9:
                r4 = 0
            L_0x04da:
                r1.setProgressVisible(r4)
            L_0x04dd:
                return
            */
            throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.ChatActivityAdapter.onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder, int):void");
        }

        public int getItemViewType(int i) {
            int i2 = this.messagesStartRow;
            if (i < i2 || i >= this.messagesEndRow) {
                return i == this.botInfoRow ? 3 : 4;
            }
            return ChatActivity.this.messages.get(i - i2).contentType;
        }

        /* JADX WARNING: Removed duplicated region for block: B:61:0x0165  */
        /* JADX WARNING: Removed duplicated region for block: B:62:0x0167  */
        /* JADX WARNING: Removed duplicated region for block: B:65:0x0173  */
        /* Code decompiled incorrectly, please refer to instructions dump. */
        public void onViewAttachedToWindow(androidx.recyclerview.widget.RecyclerView.ViewHolder r11) {
            /*
                r10 = this;
                android.view.View r0 = r11.itemView
                boolean r1 = r0 instanceof org.telegram.ui.Cells.ChatMessageCell
                r2 = 1
                r3 = 0
                if (r1 == 0) goto L_0x0178
                org.telegram.ui.Cells.ChatMessageCell r0 = (org.telegram.ui.Cells.ChatMessageCell) r0
                org.telegram.messenger.MessageObject r1 = r0.getMessageObject()
                r4 = -1
                r0.showHintButton(r2, r3, r4)
                org.telegram.ui.ChatActivity r4 = org.telegram.ui.ChatActivity.this
                org.telegram.messenger.MessageObject r4 = r4.hintMessageObject
                if (r4 == 0) goto L_0x002f
                org.telegram.ui.ChatActivity r4 = org.telegram.ui.ChatActivity.this
                org.telegram.messenger.MessageObject r4 = r4.hintMessageObject
                boolean r4 = r4.equals(r1)
                if (r4 == 0) goto L_0x002f
                org.telegram.ui.ChatActivity r4 = org.telegram.ui.ChatActivity.this
                int r4 = r4.hintMessageType
                r0.showHintButton(r3, r3, r4)
            L_0x002f:
                boolean r4 = r1.isAnimatedEmoji()
                if (r4 == 0) goto L_0x0063
                java.lang.String r4 = r1.getStickerEmoji()
                if (r4 == 0) goto L_0x0063
                org.telegram.ui.ChatActivity r5 = org.telegram.ui.ChatActivity.this
                org.telegram.messenger.MessagesController r5 = r5.getMessagesController()
                java.util.HashMap<java.lang.String, org.telegram.messenger.MessagesController$EmojiSound> r5 = r5.emojiSounds
                java.lang.String r6 = "️"
                java.lang.String r7 = ""
                java.lang.String r6 = r4.replace(r6, r7)
                java.lang.Object r5 = r5.get(r6)
                org.telegram.messenger.MessagesController$EmojiSound r5 = (org.telegram.messenger.MessagesController.EmojiSound) r5
                if (r5 == 0) goto L_0x0063
                org.telegram.ui.ChatActivity r6 = org.telegram.ui.ChatActivity.this
                org.telegram.messenger.MediaController r6 = r6.getMediaController()
                org.telegram.ui.ChatActivity r7 = org.telegram.ui.ChatActivity.this
                org.telegram.messenger.AccountInstance r7 = r7.getAccountInstance()
                r6.playEmojiSound(r7, r4, r5, r2)
            L_0x0063:
                org.telegram.ui.ChatActivity r4 = org.telegram.ui.ChatActivity.this
                org.telegram.ui.ActionBar.ActionBar r4 = r4.actionBar
                boolean r4 = r4.isActionModeShowed()
                if (r4 != 0) goto L_0x0084
                org.telegram.ui.ChatActivity r4 = org.telegram.ui.ChatActivity.this
                int r4 = r4.reportType
                if (r4 < 0) goto L_0x0078
                goto L_0x0084
            L_0x0078:
                r0.setDrawSelectionBackground(r3)
                r0.setChecked(r3, r3, r3)
                r0.setCheckBoxVisible(r3, r3)
                r4 = 0
                r5 = 0
                goto L_0x00d1
            L_0x0084:
                org.telegram.ui.ChatActivity r4 = org.telegram.ui.ChatActivity.this
                java.util.ArrayList r4 = r4.threadMessageObjects
                if (r4 == 0) goto L_0x009b
                org.telegram.ui.ChatActivity r4 = org.telegram.ui.ChatActivity.this
                java.util.ArrayList r4 = r4.threadMessageObjects
                boolean r4 = r4.contains(r1)
                if (r4 != 0) goto L_0x0099
                goto L_0x009b
            L_0x0099:
                r4 = 0
                goto L_0x009c
            L_0x009b:
                r4 = 1
            L_0x009c:
                r0.setCheckBoxVisible(r4, r3)
                long r4 = r1.getDialogId()
                org.telegram.ui.ChatActivity r6 = org.telegram.ui.ChatActivity.this
                long r6 = r6.dialog_id
                int r8 = (r4 > r6 ? 1 : (r4 == r6 ? 0 : -1))
                if (r8 != 0) goto L_0x00af
                r4 = 0
                goto L_0x00b0
            L_0x00af:
                r4 = 1
            L_0x00b0:
                org.telegram.ui.ChatActivity r5 = org.telegram.ui.ChatActivity.this
                android.util.SparseArray[] r5 = r5.selectedMessagesIds
                r5 = r5[r4]
                int r6 = r1.getId()
                int r5 = r5.indexOfKey(r6)
                if (r5 < 0) goto L_0x00c9
                org.telegram.ui.ChatActivity r5 = org.telegram.ui.ChatActivity.this
                r5.setCellSelectionBackground(r1, r0, r4, r3)
                r4 = 1
                goto L_0x00d0
            L_0x00c9:
                r0.setDrawSelectionBackground(r3)
                r0.setChecked(r3, r3, r3)
                r4 = 0
            L_0x00d0:
                r5 = 1
            L_0x00d1:
                r6 = r5 ^ 1
                if (r5 == 0) goto L_0x00d9
                if (r4 == 0) goto L_0x00d9
                r4 = 1
                goto L_0x00da
            L_0x00d9:
                r4 = 0
            L_0x00da:
                r0.setCheckPressed(r6, r4)
                org.telegram.ui.ChatActivity r4 = org.telegram.ui.ChatActivity.this
                android.widget.FrameLayout r4 = r4.searchContainer
                if (r4 == 0) goto L_0x012c
                org.telegram.ui.ChatActivity r4 = org.telegram.ui.ChatActivity.this
                android.widget.FrameLayout r4 = r4.searchContainer
                int r4 = r4.getVisibility()
                if (r4 != 0) goto L_0x012c
                org.telegram.ui.ChatActivity r4 = org.telegram.ui.ChatActivity.this
                org.telegram.messenger.MediaDataController r4 = r4.getMediaDataController()
                int r5 = r1.getId()
                long r6 = r1.getDialogId()
                org.telegram.ui.ChatActivity r1 = org.telegram.ui.ChatActivity.this
                long r8 = r1.mergeDialogId
                int r1 = (r6 > r8 ? 1 : (r6 == r8 ? 0 : -1))
                if (r1 != 0) goto L_0x010b
                r1 = 1
                goto L_0x010c
            L_0x010b:
                r1 = 0
            L_0x010c:
                boolean r1 = r4.isMessageFound(r5, r1)
                if (r1 == 0) goto L_0x012c
                org.telegram.ui.ChatActivity r1 = org.telegram.ui.ChatActivity.this
                org.telegram.messenger.MediaDataController r1 = r1.getMediaDataController()
                java.lang.String r1 = r1.getLastSearchQuery()
                if (r1 == 0) goto L_0x012c
                org.telegram.ui.ChatActivity r1 = org.telegram.ui.ChatActivity.this
                org.telegram.messenger.MediaDataController r1 = r1.getMediaDataController()
                java.lang.String r1 = r1.getLastSearchQuery()
                r0.setHighlightedText(r1)
                goto L_0x0130
            L_0x012c:
                r1 = 0
                r0.setHighlightedText(r1)
            L_0x0130:
                android.view.ViewTreeObserver r1 = r0.getViewTreeObserver()
                org.telegram.ui.ChatActivity$ChatActivityAdapter$6 r4 = new org.telegram.ui.ChatActivity$ChatActivityAdapter$6
                r4.<init>(r0)
                r1.addOnPreDrawListener(r4)
                org.telegram.ui.ChatActivity r1 = org.telegram.ui.ChatActivity.this
                boolean r1 = r1.inPreviewMode
                if (r1 == 0) goto L_0x014a
                boolean r1 = r0.isHighlighted()
                if (r1 != 0) goto L_0x0178
            L_0x014a:
                org.telegram.ui.ChatActivity r1 = org.telegram.ui.ChatActivity.this
                int r1 = r1.highlightMessageId
                r4 = 2147483647(0x7fffffff, float:NaN)
                if (r1 == r4) goto L_0x0167
                org.telegram.messenger.MessageObject r1 = r0.getMessageObject()
                int r1 = r1.getId()
                org.telegram.ui.ChatActivity r5 = org.telegram.ui.ChatActivity.this
                int r5 = r5.highlightMessageId
                if (r1 != r5) goto L_0x0167
                r1 = 1
                goto L_0x0168
            L_0x0167:
                r1 = 0
            L_0x0168:
                r0.setHighlighted(r1)
                org.telegram.ui.ChatActivity r0 = org.telegram.ui.ChatActivity.this
                int r0 = r0.highlightMessageId
                if (r0 == r4) goto L_0x0178
                org.telegram.ui.ChatActivity r0 = org.telegram.ui.ChatActivity.this
                r0.startMessageUnselect()
            L_0x0178:
                int r0 = r11.getAdapterPosition()
                int r1 = r10.messagesStartRow
                if (r0 < r1) goto L_0x0230
                int r4 = r10.messagesEndRow
                if (r0 >= r4) goto L_0x0230
                org.telegram.ui.ChatActivity r4 = org.telegram.ui.ChatActivity.this
                java.util.ArrayList<org.telegram.messenger.MessageObject> r4 = r4.messages
                int r0 = r0 - r1
                java.lang.Object r0 = r4.get(r0)
                org.telegram.messenger.MessageObject r0 = (org.telegram.messenger.MessageObject) r0
                android.view.View r11 = r11.itemView
                if (r0 == 0) goto L_0x0230
                org.telegram.tgnet.TLRPC$Message r1 = r0.messageOwner
                if (r1 == 0) goto L_0x0230
                boolean r4 = r1.media_unread
                if (r4 == 0) goto L_0x0230
                boolean r1 = r1.mentioned
                if (r1 == 0) goto L_0x0230
                org.telegram.ui.ChatActivity r1 = org.telegram.ui.ChatActivity.this
                boolean r1 = r1.inPreviewMode
                if (r1 != 0) goto L_0x021b
                org.telegram.ui.ChatActivity r1 = org.telegram.ui.ChatActivity.this
                int r1 = r1.chatMode
                if (r1 != 0) goto L_0x021b
                boolean r1 = r0.isVoice()
                if (r1 != 0) goto L_0x021b
                boolean r1 = r0.isRoundVideo()
                if (r1 != 0) goto L_0x021b
                org.telegram.ui.ChatActivity r1 = org.telegram.ui.ChatActivity.this
                org.telegram.ui.ChatActivity.access$20710(r1)
                org.telegram.ui.ChatActivity r1 = org.telegram.ui.ChatActivity.this
                int r1 = r1.newMentionsCount
                if (r1 > 0) goto L_0x01d8
                org.telegram.ui.ChatActivity r1 = org.telegram.ui.ChatActivity.this
                int unused = r1.newMentionsCount = r3
                org.telegram.ui.ChatActivity r1 = org.telegram.ui.ChatActivity.this
                boolean unused = r1.hasAllMentionsLocal = r2
                org.telegram.ui.ChatActivity r1 = org.telegram.ui.ChatActivity.this
                r1.showMentionDownButton(r3, r2)
                goto L_0x01f5
            L_0x01d8:
                org.telegram.ui.ChatActivity r1 = org.telegram.ui.ChatActivity.this
                org.telegram.ui.ActionBar.SimpleTextView r1 = r1.mentiondownButtonCounter
                java.lang.Object[] r4 = new java.lang.Object[r2]
                org.telegram.ui.ChatActivity r5 = org.telegram.ui.ChatActivity.this
                int r5 = r5.newMentionsCount
                java.lang.Integer r5 = java.lang.Integer.valueOf(r5)
                r4[r3] = r5
                java.lang.String r5 = "%d"
                java.lang.String r4 = java.lang.String.format(r5, r4)
                r1.setText(r4)
            L_0x01f5:
                org.telegram.ui.ChatActivity r1 = org.telegram.ui.ChatActivity.this
                org.telegram.messenger.MessagesController r1 = r1.getMessagesController()
                int r4 = r0.getId()
                org.telegram.ui.ChatActivity r5 = org.telegram.ui.ChatActivity.this
                org.telegram.tgnet.TLRPC$Chat r5 = r5.currentChat
                boolean r5 = org.telegram.messenger.ChatObject.isChannel(r5)
                if (r5 == 0) goto L_0x020f
                org.telegram.ui.ChatActivity r3 = org.telegram.ui.ChatActivity.this
                org.telegram.tgnet.TLRPC$Chat r3 = r3.currentChat
                int r3 = r3.id
            L_0x020f:
                org.telegram.ui.ChatActivity r5 = org.telegram.ui.ChatActivity.this
                long r5 = r5.dialog_id
                r1.markMentionMessageAsRead(r4, r3, r5)
                r0.setContentIsRead()
            L_0x021b:
                boolean r0 = r11 instanceof org.telegram.ui.Cells.ChatMessageCell
                if (r0 == 0) goto L_0x0230
                org.telegram.ui.Cells.ChatMessageCell r11 = (org.telegram.ui.Cells.ChatMessageCell) r11
                org.telegram.ui.ChatActivity r0 = org.telegram.ui.ChatActivity.this
                boolean r0 = r0.inPreviewMode
                if (r0 == 0) goto L_0x022d
                r11.setHighlighted(r2)
                goto L_0x0230
            L_0x022d:
                r11.setHighlightedAnimated()
            L_0x0230:
                return
            */
            throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.ChatActivityAdapter.onViewAttachedToWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder):void");
        }

        public void updateRowAtPosition(int i) {
            int i2;
            if (ChatActivity.this.chatLayoutManager != null) {
                int i3 = 0;
                if (!ChatActivity.this.wasManualScroll && ChatActivity.this.unreadMessageObject != null) {
                    int childCount = ChatActivity.this.chatListView.getChildCount();
                    int i4 = 0;
                    while (true) {
                        if (i4 >= childCount) {
                            break;
                        }
                        View childAt = ChatActivity.this.chatListView.getChildAt(i4);
                        if (!(childAt instanceof ChatMessageCell) || ((ChatMessageCell) childAt).getMessageObject() != ChatActivity.this.unreadMessageObject) {
                            i4++;
                        } else {
                            ChatActivity chatActivity = ChatActivity.this;
                            if (chatActivity.messages.indexOf(chatActivity.unreadMessageObject) >= 0) {
                                int i5 = this.messagesStartRow;
                                ChatActivity chatActivity2 = ChatActivity.this;
                                i2 = i5 + chatActivity2.messages.indexOf(chatActivity2.unreadMessageObject);
                                i3 = (ChatActivity.this.chatListView.getMeasuredHeight() - childAt.getBottom()) - ChatActivity.this.chatListView.getPaddingBottom();
                            }
                        }
                    }
                }
                i2 = -1;
                notifyItemChanged(i);
                if (i2 != -1) {
                    ChatActivity.this.chatLayoutManager.scrollToPositionWithOffset(i2, i3);
                }
            }
        }

        public void invalidateRowWithMessageObject(MessageObject messageObject) {
            int childCount = ChatActivity.this.chatListView.getChildCount();
            for (int i = 0; i < childCount; i++) {
                View childAt = ChatActivity.this.chatListView.getChildAt(i);
                if (childAt instanceof ChatMessageCell) {
                    ChatMessageCell chatMessageCell = (ChatMessageCell) childAt;
                    if (chatMessageCell.getMessageObject() == messageObject) {
                        chatMessageCell.invalidate();
                        return;
                    }
                }
            }
        }

        public View updateRowWithMessageObject(MessageObject messageObject, boolean z) {
            if (z) {
                int childCount = ChatActivity.this.chatListView.getChildCount();
                for (int i = 0; i < childCount; i++) {
                    View childAt = ChatActivity.this.chatListView.getChildAt(i);
                    if (childAt instanceof ChatMessageCell) {
                        ChatMessageCell chatMessageCell = (ChatMessageCell) childAt;
                        if (chatMessageCell.getMessageObject() == messageObject && !chatMessageCell.isAdminLayoutChanged()) {
                            chatMessageCell.setMessageObject(messageObject, chatMessageCell.getCurrentMessagesGroup(), chatMessageCell.isPinnedBottom(), chatMessageCell.isPinnedTop());
                            return chatMessageCell;
                        }
                    }
                }
            }
            int indexOf = ChatActivity.this.messages.indexOf(messageObject);
            if (indexOf == -1) {
                return null;
            }
            updateRowAtPosition(indexOf + this.messagesStartRow);
            return null;
        }

        public void notifyDataSetChanged(boolean z) {
            if (BuildVars.LOGS_ENABLED) {
                FileLog.d("notify data set changed");
            }
            if (!z || !ChatActivity.this.fragmentOpened || !BuildVars.DEBUG_VERSION) {
                ChatActivity.this.chatListView.setItemAnimator((RecyclerView.ItemAnimator) null);
            } else if (ChatActivity.this.chatListView.getItemAnimator() != ChatActivity.this.chatListItemAnimator) {
                ChatActivity.this.chatListView.setItemAnimator(ChatActivity.this.chatListItemAnimator);
            }
            updateRowsInternal();
            try {
                super.notifyDataSetChanged();
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            }
        }

        public void notifyDataSetChanged() {
            notifyDataSetChanged(false);
        }

        public void notifyItemChanged(int i) {
            if (BuildVars.LOGS_ENABLED) {
                FileLog.d("notify item changed " + i);
            }
            if (!ChatActivity.this.fragmentBeginToShow) {
                ChatActivity.this.chatListView.setItemAnimator((RecyclerView.ItemAnimator) null);
            } else if (ChatActivity.this.chatListView.getItemAnimator() != ChatActivity.this.chatListItemAnimator) {
                ChatActivity.this.chatListView.setItemAnimator(ChatActivity.this.chatListItemAnimator);
            }
            updateRowsInternal();
            try {
                super.notifyItemChanged(i);
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            }
        }

        public void notifyItemRangeChanged(int i, int i2) {
            if (BuildVars.LOGS_ENABLED) {
                FileLog.d("notify item range changed " + i + ":" + i2);
            }
            if (!ChatActivity.this.fragmentBeginToShow) {
                ChatActivity.this.chatListView.setItemAnimator((RecyclerView.ItemAnimator) null);
            } else if (ChatActivity.this.chatListView.getItemAnimator() != ChatActivity.this.chatListItemAnimator) {
                ChatActivity.this.chatListView.setItemAnimator(ChatActivity.this.chatListItemAnimator);
            }
            updateRowsInternal();
            try {
                super.notifyItemRangeChanged(i, i2);
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            }
        }

        public void notifyItemInserted(int i) {
            if (BuildVars.LOGS_ENABLED) {
                FileLog.d("notify item inserted " + i);
            }
            if (!ChatActivity.this.fragmentBeginToShow) {
                ChatActivity.this.chatListView.setItemAnimator((RecyclerView.ItemAnimator) null);
            } else if (ChatActivity.this.chatListView.getItemAnimator() != ChatActivity.this.chatListItemAnimator) {
                ChatActivity.this.chatListView.setItemAnimator(ChatActivity.this.chatListItemAnimator);
            }
            updateRowsInternal();
            try {
                super.notifyItemInserted(i);
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            }
        }

        public void notifyItemMoved(int i, int i2) {
            if (BuildVars.LOGS_ENABLED) {
                FileLog.d("notify item moved" + i + ":" + i2);
            }
            if (!ChatActivity.this.fragmentBeginToShow) {
                ChatActivity.this.chatListView.setItemAnimator((RecyclerView.ItemAnimator) null);
            } else if (ChatActivity.this.chatListView.getItemAnimator() != ChatActivity.this.chatListItemAnimator) {
                ChatActivity.this.chatListView.setItemAnimator(ChatActivity.this.chatListItemAnimator);
            }
            updateRowsInternal();
            try {
                super.notifyItemMoved(i, i2);
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            }
        }

        public void notifyItemRangeInserted(int i, int i2) {
            int i3;
            int i4;
            if (BuildVars.LOGS_ENABLED) {
                FileLog.d("notify item range inserted" + i + ":" + i2);
            }
            if (!ChatActivity.this.fragmentBeginToShow) {
                ChatActivity.this.chatListView.setItemAnimator((RecyclerView.ItemAnimator) null);
            } else if (ChatActivity.this.chatListView.getItemAnimator() != ChatActivity.this.chatListItemAnimator) {
                ChatActivity.this.chatListView.setItemAnimator(ChatActivity.this.chatListItemAnimator);
            }
            updateRowsInternal();
            if (i == 1 && i2 > 0 && (i3 = i + i2) >= (i4 = this.messagesStartRow) && i3 < this.messagesEndRow) {
                MessageObject messageObject = ChatActivity.this.messages.get(i3 - i4);
                MessageObject messageObject2 = ChatActivity.this.messages.get((i3 - this.messagesStartRow) - 1);
                if ((ChatActivity.this.currentChat != null && messageObject.getFromChatId() == messageObject2.getFromChatId()) || (ChatActivity.this.currentUser != null && messageObject.isOutOwner() == messageObject2.isOutOwner())) {
                    notifyItemChanged(i);
                }
            }
            try {
                super.notifyItemRangeInserted(i, i2);
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            }
        }

        public void notifyItemRemoved(int i) {
            if (BuildVars.LOGS_ENABLED) {
                FileLog.d("notify item removed " + i);
            }
            if (!ChatActivity.this.fragmentBeginToShow) {
                ChatActivity.this.chatListView.setItemAnimator((RecyclerView.ItemAnimator) null);
            } else if (ChatActivity.this.chatListView.getItemAnimator() != ChatActivity.this.chatListItemAnimator) {
                ChatActivity.this.chatListView.setItemAnimator(ChatActivity.this.chatListItemAnimator);
            }
            updateRowsInternal();
            try {
                super.notifyItemRemoved(i);
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            }
        }

        public void notifyItemRangeRemoved(int i, int i2) {
            if (BuildVars.LOGS_ENABLED) {
                FileLog.d("notify item range removed" + i + ":" + i2);
            }
            if (!ChatActivity.this.fragmentBeginToShow) {
                ChatActivity.this.chatListView.setItemAnimator((RecyclerView.ItemAnimator) null);
            } else if (ChatActivity.this.chatListView.getItemAnimator() != ChatActivity.this.chatListItemAnimator) {
                ChatActivity.this.chatListView.setItemAnimator(ChatActivity.this.chatListItemAnimator);
            }
            updateRowsInternal();
            try {
                super.notifyItemRangeRemoved(i, i2);
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            }
        }
    }

    /* renamed from: org.telegram.ui.ChatActivity$98  reason: invalid class name */
    static /* synthetic */ class AnonymousClass98 {
        static final /* synthetic */ int[] $SwitchMap$org$telegram$ui$AvatarPreviewer$MenuItem;

        /* JADX WARNING: Can't wrap try/catch for region: R(12:0|1|2|3|4|5|6|7|8|9|10|12) */
        /* JADX WARNING: Code restructure failed: missing block: B:13:?, code lost:
            return;
         */
        /* JADX WARNING: Failed to process nested try/catch */
        /* JADX WARNING: Missing exception handler attribute for start block: B:3:0x0012 */
        /* JADX WARNING: Missing exception handler attribute for start block: B:5:0x001d */
        /* JADX WARNING: Missing exception handler attribute for start block: B:7:0x0028 */
        /* JADX WARNING: Missing exception handler attribute for start block: B:9:0x0033 */
        static {
            /*
                org.telegram.ui.AvatarPreviewer$MenuItem[] r0 = org.telegram.ui.AvatarPreviewer.MenuItem.values()
                int r0 = r0.length
                int[] r0 = new int[r0]
                $SwitchMap$org$telegram$ui$AvatarPreviewer$MenuItem = r0
                org.telegram.ui.AvatarPreviewer$MenuItem r1 = org.telegram.ui.AvatarPreviewer.MenuItem.OPEN_PROFILE     // Catch:{ NoSuchFieldError -> 0x0012 }
                int r1 = r1.ordinal()     // Catch:{ NoSuchFieldError -> 0x0012 }
                r2 = 1
                r0[r1] = r2     // Catch:{ NoSuchFieldError -> 0x0012 }
            L_0x0012:
                int[] r0 = $SwitchMap$org$telegram$ui$AvatarPreviewer$MenuItem     // Catch:{ NoSuchFieldError -> 0x001d }
                org.telegram.ui.AvatarPreviewer$MenuItem r1 = org.telegram.ui.AvatarPreviewer.MenuItem.OPEN_GROUP     // Catch:{ NoSuchFieldError -> 0x001d }
                int r1 = r1.ordinal()     // Catch:{ NoSuchFieldError -> 0x001d }
                r2 = 2
                r0[r1] = r2     // Catch:{ NoSuchFieldError -> 0x001d }
            L_0x001d:
                int[] r0 = $SwitchMap$org$telegram$ui$AvatarPreviewer$MenuItem     // Catch:{ NoSuchFieldError -> 0x0028 }
                org.telegram.ui.AvatarPreviewer$MenuItem r1 = org.telegram.ui.AvatarPreviewer.MenuItem.OPEN_CHANNEL     // Catch:{ NoSuchFieldError -> 0x0028 }
                int r1 = r1.ordinal()     // Catch:{ NoSuchFieldError -> 0x0028 }
                r2 = 3
                r0[r1] = r2     // Catch:{ NoSuchFieldError -> 0x0028 }
            L_0x0028:
                int[] r0 = $SwitchMap$org$telegram$ui$AvatarPreviewer$MenuItem     // Catch:{ NoSuchFieldError -> 0x0033 }
                org.telegram.ui.AvatarPreviewer$MenuItem r1 = org.telegram.ui.AvatarPreviewer.MenuItem.SEND_MESSAGE     // Catch:{ NoSuchFieldError -> 0x0033 }
                int r1 = r1.ordinal()     // Catch:{ NoSuchFieldError -> 0x0033 }
                r2 = 4
                r0[r1] = r2     // Catch:{ NoSuchFieldError -> 0x0033 }
            L_0x0033:
                int[] r0 = $SwitchMap$org$telegram$ui$AvatarPreviewer$MenuItem     // Catch:{ NoSuchFieldError -> 0x003e }
                org.telegram.ui.AvatarPreviewer$MenuItem r1 = org.telegram.ui.AvatarPreviewer.MenuItem.MENTION     // Catch:{ NoSuchFieldError -> 0x003e }
                int r1 = r1.ordinal()     // Catch:{ NoSuchFieldError -> 0x003e }
                r2 = 5
                r0[r1] = r2     // Catch:{ NoSuchFieldError -> 0x003e }
            L_0x003e:
                return
            */
            throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.AnonymousClass98.<clinit>():void");
        }
    }

    /* access modifiers changed from: private */
    public boolean openLinkInternally(String str, int i) {
        String str2 = str;
        if (!(this.currentChat == null || str2 == null)) {
            if (str.startsWith("tg:privatepost") || str.startsWith("tg://privatepost")) {
                Uri parse = Uri.parse(str.replace("tg:privatepost", "tg://telegram.org").replace("tg://privatepost", "tg://telegram.org"));
                int intValue = Utilities.parseInt(parse.getQueryParameter("post")).intValue();
                int intValue2 = Utilities.parseInt(parse.getQueryParameter("channel")).intValue();
                int intValue3 = Utilities.parseInt(parse.getQueryParameter("thread")).intValue();
                int i2 = this.currentChat.id;
                if (intValue2 == i2 && intValue != 0) {
                    if (intValue3 != 0) {
                        openDiscussionMessageChat(i2, (MessageObject) null, intValue3, 0, -1, 0, (MessageObject) null);
                    } else {
                        this.showScrollToMessageError = true;
                        if (this.chatMode == 2) {
                            this.chatActivityDelegate.openReplyMessage(intValue);
                            finishFragment();
                        } else {
                            scrollToMessageId(intValue, i, true, 0, false, 0);
                        }
                    }
                    return true;
                }
            } else {
                String str3 = this.currentChat.username;
                if (str3 != null) {
                    String lowerCase = str3.toLowerCase();
                    if (publicMsgUrlPattern == null) {
                        publicMsgUrlPattern = Pattern.compile("(https://)?t.me/([0-9a-zA-Z_]+)/([0-9]+)");
                        voiceChatUrlPattern = Pattern.compile("(https://)?t.me/([0-9a-zA-Z_]+)\\?(voicechat+)");
                    }
                    Matcher matcher = publicMsgUrlPattern.matcher(str);
                    if (matcher.find(2) && matcher.find(3) && lowerCase.equals(matcher.group(2).toLowerCase())) {
                        Uri parse2 = Uri.parse(str);
                        int intValue4 = Utilities.parseInt(parse2.getQueryParameter("thread")).intValue();
                        int intValue5 = Utilities.parseInt(parse2.getQueryParameter("comment")).intValue();
                        if (intValue4 != 0 || intValue5 != 0) {
                            return false;
                        }
                        int parseInt = Integer.parseInt(matcher.group(3));
                        this.showScrollToMessageError = true;
                        if (this.chatMode == 2) {
                            this.chatActivityDelegate.openReplyMessage(parseInt);
                            finishFragment();
                        } else {
                            scrollToMessageId(parseInt, i, true, 0, false, 0);
                        }
                        return true;
                    } else if (str.startsWith("tg:resolve") || str.startsWith("tg://resolve")) {
                        Uri parse3 = Uri.parse(str.replace("tg:resolve", "tg://telegram.org").replace("tg://resolve", "tg://telegram.org"));
                        String lowerCase2 = parse3.getQueryParameter("domain").toLowerCase();
                        int intValue6 = Utilities.parseInt(parse3.getQueryParameter("post")).intValue();
                        int intValue7 = Utilities.parseInt(parse3.getQueryParameter("thread")).intValue();
                        int intValue8 = Utilities.parseInt(parse3.getQueryParameter("comment")).intValue();
                        if (!lowerCase.equals(lowerCase2) || intValue6 == 0 || intValue7 != 0 || intValue8 != 0) {
                            return false;
                        }
                        if (this.chatMode == 2) {
                            this.chatActivityDelegate.openReplyMessage(intValue6);
                            finishFragment();
                        } else {
                            scrollToMessageId(intValue6, i, true, 0, false, 0);
                        }
                        return true;
                    } else {
                        Matcher matcher2 = voiceChatUrlPattern.matcher(str);
                        try {
                            if (matcher2.find(2) && matcher2.find(3) && lowerCase.equals(matcher2.group(2).toLowerCase())) {
                                String queryParameter = Uri.parse(str).getQueryParameter("voicechat");
                                if (!TextUtils.isEmpty(queryParameter)) {
                                    this.voiceChatHash = queryParameter;
                                    checkGroupCallJoin(true);
                                    return true;
                                }
                            }
                        } catch (Exception e) {
                            FileLog.e((Throwable) e);
                        }
                    }
                } else {
                    if (privateMsgUrlPattern == null) {
                        privateMsgUrlPattern = Pattern.compile("(https://)?t.me/c/([0-9]+)/([0-9]+)");
                    }
                    Matcher matcher3 = privateMsgUrlPattern.matcher(str);
                    if (matcher3.find(2) && matcher3.find(3)) {
                        int parseInt2 = Integer.parseInt(matcher3.group(2));
                        int parseInt3 = Integer.parseInt(matcher3.group(3));
                        if (parseInt2 == this.currentChat.id && parseInt3 != 0) {
                            Uri parse4 = Uri.parse(str);
                            int intValue9 = Utilities.parseInt(parse4.getQueryParameter("thread")).intValue();
                            int intValue10 = Utilities.parseInt(parse4.getQueryParameter("comment")).intValue();
                            if (intValue9 != 0 || intValue10 != 0) {
                                return false;
                            }
                            this.showScrollToMessageError = true;
                            if (this.chatMode == 2) {
                                this.chatActivityDelegate.openReplyMessage(parseInt3);
                                finishFragment();
                            } else {
                                scrollToMessageId(parseInt3, i, true, 0, false, 0);
                            }
                            return true;
                        }
                    }
                }
            }
        }
        return false;
    }

    public void setPreloadedSticker(TLRPC$Document tLRPC$Document, boolean z) {
        this.preloadedGreetingsSticker = tLRPC$Document;
        this.forceHistoryEmpty = z;
    }

    public class ChatScrollCallback extends RecyclerAnimationScrollHelper.AnimationCallback {
        /* access modifiers changed from: private */
        public boolean lastBottom;
        /* access modifiers changed from: private */
        public int lastItemOffset;
        /* access modifiers changed from: private */
        public int lastPadding;
        /* access modifiers changed from: private */
        public MessageObject scrollTo;

        public ChatScrollCallback() {
        }

        public void onStartAnimation() {
            super.onStartAnimation();
            ChatActivity chatActivity = ChatActivity.this;
            int unused = chatActivity.scrollCallbackAnimationIndex = chatActivity.getNotificationCenter().setAnimationInProgress(ChatActivity.this.scrollCallbackAnimationIndex, ChatActivity.allowedNotificationsDuringChatListAnimations);
            if (ChatActivity.this.pinchToZoomHelper.isInOverlayMode()) {
                ChatActivity.this.pinchToZoomHelper.finishZoom();
            }
        }

        public void onEndAnimation() {
            int i = 1;
            if (this.scrollTo != null) {
                ChatActivity.this.chatAdapter.updateRowsSafe();
                int access$17600 = ChatActivity.this.chatAdapter.messagesStartRow + ChatActivity.this.messages.indexOf(this.scrollTo);
                if (access$17600 >= 0) {
                    ChatActivity.this.chatLayoutManager.scrollToPositionWithOffset(access$17600, (int) (((float) (this.lastItemOffset + this.lastPadding)) - ChatActivity.this.chatListViewPaddingTop), this.lastBottom);
                }
            } else {
                ChatActivity.this.chatAdapter.updateRowsSafe();
                ChatActivity.this.chatLayoutManager.scrollToPositionWithOffset(0, 0, true);
            }
            this.scrollTo = null;
            boolean unused = ChatActivity.this.checkTextureViewPosition = true;
            RecyclerView.OnScrollListener onScrollListener = ChatActivity.this.chatListView.getOnScrollListener();
            RecyclerListView access$7500 = ChatActivity.this.chatListView;
            if (ChatActivity.this.chatScrollHelper.getScrollDirection() != 0) {
                i = -1;
            }
            onScrollListener.onScrolled(access$7500, 0, i);
            ChatActivity.this.updateVisibleRows();
            AndroidUtilities.runOnUIThread(new Runnable() {
                public final void run() {
                    ChatActivity.ChatScrollCallback.this.lambda$onEndAnimation$0$ChatActivity$ChatScrollCallback();
                }
            });
        }

        /* access modifiers changed from: private */
        /* renamed from: lambda$onEndAnimation$0 */
        public /* synthetic */ void lambda$onEndAnimation$0$ChatActivity$ChatScrollCallback() {
            ChatActivity.this.getNotificationCenter().onAnimationFinish(ChatActivity.this.scrollCallbackAnimationIndex);
        }

        public void recycleView(View view) {
            if (view instanceof ChatMessageCell) {
                ChatActivity.this.chatMessageCellsCache.add((ChatMessageCell) view);
            }
        }
    }

    public static boolean isClickableLink(String str) {
        return str.startsWith("https://") || str.startsWith("@") || str.startsWith("#") || str.startsWith("$");
    }

    public ArrayList<ThemeDescription> getThemeDescriptions() {
        TrendingStickersAlert trendingStickersAlert;
        $$Lambda$ChatActivity$863zurfR5_Z5_h_r36mEI0_c r10 = new ThemeDescription.ThemeDescriptionDelegate() {
            public final void didSetColor() {
                ChatActivity.this.lambda$getThemeDescriptions$157$ChatActivity();
            }
        };
        ArrayList<ThemeDescription> arrayList = new ArrayList<>();
        arrayList.add(new ThemeDescription(this.fragmentView, 0, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_wallpaper"));
        arrayList.add(new ThemeDescription(this.fragmentView, 0, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_wallpaper_gradient_to"));
        arrayList.add(new ThemeDescription(this.messagesSearchListView, ThemeDescription.FLAG_BACKGROUND, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "windowBackgroundWhite"));
        if (this.reportType < 0) {
            arrayList.add(new ThemeDescription(this.actionBar, ThemeDescription.FLAG_BACKGROUND, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "actionBarDefault"));
            arrayList.add(new ThemeDescription(this.actionBar, ThemeDescription.FLAG_AB_ITEMSCOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "actionBarDefaultIcon"));
            arrayList.add(new ThemeDescription(this.actionBar, ThemeDescription.FLAG_AB_SELECTORCOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "actionBarDefaultSelector"));
        } else {
            arrayList.add(new ThemeDescription(this.actionBar, ThemeDescription.FLAG_BACKGROUND, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "actionBarActionModeDefault"));
            arrayList.add(new ThemeDescription(this.actionBar, ThemeDescription.FLAG_AB_ITEMSCOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "actionBarActionModeDefaultIcon"));
            arrayList.add(new ThemeDescription(this.actionBar, ThemeDescription.FLAG_AB_SELECTORCOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "actionBarActionModeDefaultSelector"));
            arrayList.add(new ThemeDescription(this.actionBar, ThemeDescription.FLAG_AB_TITLECOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "actionBarActionModeDefaultIcon"));
            arrayList.add(new ThemeDescription(this.actionBar, ThemeDescription.FLAG_AB_SUBTITLECOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "actionBarActionModeDefaultIcon"));
        }
        $$Lambda$ChatActivity$863zurfR5_Z5_h_r36mEI0_c r7 = r10;
        arrayList.add(new ThemeDescription(this.actionBar, ThemeDescription.FLAG_AB_SUBMENUBACKGROUND, (Class[]) null, (Paint) null, (Drawable[]) null, r7, "actionBarDefaultSubmenuBackground"));
        arrayList.add(new ThemeDescription(this.actionBar, ThemeDescription.FLAG_AB_SUBMENUITEM, (Class[]) null, (Paint) null, (Drawable[]) null, r7, "actionBarDefaultSubmenuItem"));
        arrayList.add(new ThemeDescription(this.actionBar, ThemeDescription.FLAG_IMAGECOLOR | ThemeDescription.FLAG_AB_SUBMENUITEM, (Class[]) null, (Paint) null, (Drawable[]) null, r7, "actionBarDefaultSubmenuItemIcon"));
        arrayList.add(new ThemeDescription(this.chatListView, ThemeDescription.FLAG_LISTGLOWCOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "actionBarDefault"));
        ChatAvatarContainer chatAvatarContainer = this.avatarContainer;
        arrayList.add(new ThemeDescription(chatAvatarContainer != null ? chatAvatarContainer.getTitleTextView() : null, ThemeDescription.FLAG_TEXTCOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "actionBarDefaultTitle"));
        ChatAvatarContainer chatAvatarContainer2 = this.avatarContainer;
        arrayList.add(new ThemeDescription(chatAvatarContainer2 != null ? chatAvatarContainer2.getTitleTextView() : null, ThemeDescription.FLAG_IMAGECOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "actionBarDefaultSubtitle"));
        ChatAvatarContainer chatAvatarContainer3 = this.avatarContainer;
        arrayList.add(new ThemeDescription((View) chatAvatarContainer3 != null ? chatAvatarContainer3.getSubtitleTextView() : null, ThemeDescription.FLAG_TEXTCOLOR | ThemeDescription.FLAG_CHECKTAG, (Class[]) null, new Paint[]{Theme.chat_statusPaint, Theme.chat_statusRecordPaint}, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_status", (Object) null));
        ChatAvatarContainer chatAvatarContainer4 = this.avatarContainer;
        arrayList.add(new ThemeDescription((View) chatAvatarContainer4 != null ? chatAvatarContainer4.getSubtitleTextView() : null, ThemeDescription.FLAG_TEXTCOLOR | ThemeDescription.FLAG_CHECKTAG, (Class[]) null, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "actionBarDefaultSubtitle", (Object) null));
        arrayList.add(new ThemeDescription(this.actionBar, ThemeDescription.FLAG_AB_SELECTORCOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "actionBarDefaultSelector"));
        arrayList.add(new ThemeDescription(this.actionBar, ThemeDescription.FLAG_AB_SEARCH, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "actionBarDefaultSearch"));
        arrayList.add(new ThemeDescription(this.actionBar, ThemeDescription.FLAG_AB_SEARCHPLACEHOLDER, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "actionBarDefaultSearchPlaceholder"));
        arrayList.add(new ThemeDescription(this.actionBar, ThemeDescription.FLAG_AB_SEARCHPLACEHOLDER, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "actionBarDefaultSearchPlaceholder"));
        arrayList.add(new ThemeDescription(this.actionBar, ThemeDescription.FLAG_AB_AM_ITEMSCOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "actionBarActionModeDefaultIcon"));
        arrayList.add(new ThemeDescription(this.actionBar, ThemeDescription.FLAG_AB_AM_BACKGROUND, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "actionBarActionModeDefault"));
        arrayList.add(new ThemeDescription(this.actionBar, ThemeDescription.FLAG_AB_AM_TOPBACKGROUND, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "actionBarActionModeDefaultTop"));
        arrayList.add(new ThemeDescription(this.actionBar, ThemeDescription.FLAG_AB_AM_SELECTORCOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "actionBarActionModeDefaultSelector"));
        arrayList.add(new ThemeDescription(this.selectedMessagesCountTextView, ThemeDescription.FLAG_TEXTCOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "actionBarActionModeDefaultIcon"));
        ChatAvatarContainer chatAvatarContainer5 = this.avatarContainer;
        arrayList.add(new ThemeDescription(chatAvatarContainer5 != null ? chatAvatarContainer5.getTitleTextView() : null, 0, (Class[]) null, (Paint) null, new Drawable[]{Theme.chat_muteIconDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_muteIcon"));
        ChatAvatarContainer chatAvatarContainer6 = this.avatarContainer;
        arrayList.add(new ThemeDescription(chatAvatarContainer6 != null ? chatAvatarContainer6.getTitleTextView() : null, 0, (Class[]) null, (Paint) null, new Drawable[]{Theme.chat_lockIconDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_lockIcon"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, Theme.avatarDrawables, (ThemeDescription.ThemeDescriptionDelegate) null, "avatar_text"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "avatar_backgroundRed"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "avatar_backgroundOrange"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "avatar_backgroundViolet"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "avatar_backgroundGreen"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "avatar_backgroundCyan"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "avatar_backgroundBlue"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "avatar_backgroundPink"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "avatar_nameInMessageRed"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "avatar_nameInMessageOrange"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "avatar_nameInMessageViolet"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "avatar_nameInMessageGreen"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "avatar_nameInMessageCyan"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "avatar_nameInMessageBlue"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "avatar_nameInMessagePink"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class, BotHelpCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgInDrawable, Theme.chat_msgInMediaDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inBubble"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgInSelectedDrawable, Theme.chat_msgInMediaSelectedDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inBubbleSelected"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, Theme.chat_msgInDrawable.getShadowDrawables(), (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inBubbleShadow"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, Theme.chat_msgInMediaDrawable.getShadowDrawables(), (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inBubbleShadow"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, Theme.chat_msgOutDrawable.getShadowDrawables(), (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outBubbleShadow"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, Theme.chat_msgOutMediaDrawable.getShadowDrawables(), (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outBubbleShadow"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgOutDrawable, Theme.chat_msgOutMediaDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outBubble"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgOutDrawable, Theme.chat_msgOutMediaDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outBubbleGradient"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgOutSelectedDrawable, Theme.chat_msgOutMediaSelectedDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outBubbleSelected"));
        Theme.MessageDrawable messageDrawable = Theme.chat_msgOutSelectedDrawable;
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{messageDrawable, messageDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outBubbleGradientSelectedOverlay"));
        arrayList.add(new ThemeDescription(this.chatListView, ThemeDescription.FLAG_TEXTCOLOR, new Class[]{ChatActionCell.class}, Theme.chat_actionTextPaint, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_serviceText"));
        arrayList.add(new ThemeDescription(this.chatListView, ThemeDescription.FLAG_LINKCOLOR, new Class[]{ChatActionCell.class}, Theme.chat_actionTextPaint, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_serviceLink"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_botCardDrawalbe, Theme.chat_shareIconDrawable, Theme.chat_replyIconDrawable, Theme.chat_botInlineDrawable, Theme.chat_botLinkDrawalbe, Theme.chat_goIconDrawable, Theme.chat_commentStickerDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_serviceIcon"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class, ChatActionCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_serviceBackground"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class, ChatActionCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_serviceBackgroundSelected"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class, BotHelpCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_messageTextIn"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_messageTextOut"));
        arrayList.add(new ThemeDescription((View) this.chatListView, ThemeDescription.FLAG_LINKCOLOR, new Class[]{ChatMessageCell.class, BotHelpCell.class}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_messageLinkIn", (Object) null));
        arrayList.add(new ThemeDescription((View) this.chatListView, ThemeDescription.FLAG_LINKCOLOR, new Class[]{ChatMessageCell.class}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_messageLinkOut", (Object) null));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgNoSoundDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_mediaTimeText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgOutCheckDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outSentCheck"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgOutCheckSelectedDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outSentCheckSelected"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgOutCheckReadDrawable, Theme.chat_msgOutHalfCheckDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outSentCheckRead"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgOutCheckReadSelectedDrawable, Theme.chat_msgOutHalfCheckSelectedDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outSentCheckReadSelected"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgOutClockDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outSentClock"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgOutSelectedClockDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outSentClockSelected"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgInClockDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inSentClock"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgInSelectedClockDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inSentClockSelected"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgMediaCheckDrawable, Theme.chat_msgMediaHalfCheckDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_mediaSentCheck"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgStickerHalfCheckDrawable, Theme.chat_msgStickerCheckDrawable, Theme.chat_msgStickerClockDrawable, Theme.chat_msgStickerViewsDrawable, Theme.chat_msgStickerRepliesDrawable, Theme.chat_msgStickerPinnedDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_serviceText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgMediaClockDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_mediaSentClock"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgOutViewsDrawable, Theme.chat_msgOutRepliesDrawable, Theme.chat_msgOutPinnedDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outViews"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgOutViewsSelectedDrawable, Theme.chat_msgOutRepliesSelectedDrawable, Theme.chat_msgOutPinnedSelectedDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outViewsSelected"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgInViewsDrawable, Theme.chat_msgInRepliesDrawable, Theme.chat_msgInPinnedDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inViews"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgInViewsSelectedDrawable, Theme.chat_msgInRepliesSelectedDrawable, Theme.chat_msgInPinnedSelectedDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inViewsSelected"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgMediaViewsDrawable, Theme.chat_msgMediaRepliesDrawable, Theme.chat_msgMediaPinnedDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_mediaViews"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgOutMenuDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outMenu"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgOutMenuSelectedDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outMenuSelected"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgInMenuDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inMenu"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgInMenuSelectedDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inMenuSelected"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgMediaMenuDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_mediaMenu"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgOutInstantDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outInstant"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgInInstantDrawable, Theme.chat_commentDrawable, Theme.chat_commentArrowDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inInstant"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, Theme.chat_msgOutCallDrawable, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outInstant"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, Theme.chat_msgOutCallSelectedDrawable, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outInstantSelected"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, Theme.chat_msgInCallDrawable, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inInstant"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, Theme.chat_msgInCallSelectedDrawable, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inInstantSelected"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgCallUpGreenDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outUpCall"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgCallDownRedDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inUpCall"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgCallDownGreenDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inDownCall"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, Theme.chat_msgErrorPaint, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_sentError"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgErrorDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_sentErrorIcon"));
        $$Lambda$ChatActivity$863zurfR5_Z5_h_r36mEI0_c r72 = r10;
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, r72, "chat_selectedBackground"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, Theme.chat_durationPaint, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_previewDurationText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, Theme.chat_gamePaint, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_previewGameText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inPreviewInstantText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outPreviewInstantText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inPreviewInstantSelectedText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outPreviewInstantSelectedText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, Theme.chat_deleteProgressPaint, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_secretTimeText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_stickerNameText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, Theme.chat_botButtonPaint, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_botButtonText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, Theme.chat_botProgressPaint, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_botProgress"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, Theme.chat_timeBackgroundPaint, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_mediaTimeBackground"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inForwardedNameText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outForwardedNameText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inPsaNameText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outPsaNameText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inViaBotNameText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outViaBotNameText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_stickerViaBotNameText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inReplyLine"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outReplyLine"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_stickerReplyLine"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inReplyNameText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outReplyNameText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_stickerReplyNameText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inReplyMessageText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outReplyMessageText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inReplyMediaMessageText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outReplyMediaMessageText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inReplyMediaMessageSelectedText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outReplyMediaMessageSelectedText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_stickerReplyMessageText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inPreviewLine"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outPreviewLine"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inSiteNameText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outSiteNameText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inContactNameText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outContactNameText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inContactPhoneText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inContactPhoneSelectedText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outContactPhoneText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outContactPhoneSelectedText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_mediaProgress"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inAudioProgress"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outAudioProgress"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inAudioSelectedProgress"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outAudioSelectedProgress"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_mediaTimeText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inTimeText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outTimeText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inTimeSelectedText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_adminText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_adminSelectedText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outAdminText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outAdminSelectedText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outTimeSelectedText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inAudioPerfomerText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inAudioPerfomerSelectedText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outAudioPerfomerText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outAudioPerfomerSelectedText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inAudioTitleText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outAudioTitleText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inAudioDurationText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outAudioDurationText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inAudioDurationSelectedText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outAudioDurationSelectedText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inAudioSeekbar"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outAudioSeekbar"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inAudioSeekbarSelected"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outAudioSeekbarSelected"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inAudioSeekbarFill"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inAudioCacheSeekbar"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outAudioSeekbarFill"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outAudioCacheSeekbar"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inVoiceSeekbar"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outVoiceSeekbar"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inVoiceSeekbarSelected"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outVoiceSeekbarSelected"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inVoiceSeekbarFill"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outVoiceSeekbarFill"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inFileProgress"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outFileProgress"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inFileProgressSelected"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outFileProgressSelected"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inFileNameText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outFileNameText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inFileInfoText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outFileInfoText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inFileInfoSelectedText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outFileInfoSelectedText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inFileBackground"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outFileBackground"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inFileBackgroundSelected"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outFileBackgroundSelected"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inVenueInfoText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outVenueInfoText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inVenueInfoSelectedText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outVenueInfoSelectedText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_mediaInfoText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, Theme.chat_urlPaint, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_linkSelectBackground"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, Theme.chat_textSearchSelectionPaint, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_textSelectBackground"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outLoader"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outMediaIcon"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outLoaderSelected"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outMediaIconSelected"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inLoader"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inMediaIcon"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inLoaderSelected"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inMediaIconSelected"));
        Drawable[][] drawableArr = Theme.chat_photoStatesDrawables;
        arrayList.add(new ThemeDescription(this.chatListView, ThemeDescription.FLAG_BACKGROUNDFILTER, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{drawableArr[0][0], drawableArr[1][0], drawableArr[2][0], drawableArr[3][0]}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_mediaLoaderPhoto"));
        Drawable[][] drawableArr2 = Theme.chat_photoStatesDrawables;
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{drawableArr2[0][0], drawableArr2[1][0], drawableArr2[2][0], drawableArr2[3][0]}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_mediaLoaderPhotoIcon"));
        Drawable[][] drawableArr3 = Theme.chat_photoStatesDrawables;
        arrayList.add(new ThemeDescription(this.chatListView, ThemeDescription.FLAG_BACKGROUNDFILTER, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{drawableArr3[0][1], drawableArr3[1][1], drawableArr3[2][1], drawableArr3[3][1]}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_mediaLoaderPhotoSelected"));
        Drawable[][] drawableArr4 = Theme.chat_photoStatesDrawables;
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{drawableArr4[0][1], drawableArr4[1][1], drawableArr4[2][1], drawableArr4[3][1]}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_mediaLoaderPhotoIconSelected"));
        Drawable[][] drawableArr5 = Theme.chat_photoStatesDrawables;
        arrayList.add(new ThemeDescription(this.chatListView, ThemeDescription.FLAG_BACKGROUNDFILTER, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{drawableArr5[7][0], drawableArr5[8][0]}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outLoaderPhoto"));
        Drawable[][] drawableArr6 = Theme.chat_photoStatesDrawables;
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{drawableArr6[7][0], drawableArr6[8][0]}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outLoaderPhotoIcon"));
        Drawable[][] drawableArr7 = Theme.chat_photoStatesDrawables;
        arrayList.add(new ThemeDescription(this.chatListView, ThemeDescription.FLAG_BACKGROUNDFILTER, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{drawableArr7[7][1], drawableArr7[8][1]}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outLoaderPhotoSelected"));
        Drawable[][] drawableArr8 = Theme.chat_photoStatesDrawables;
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{drawableArr8[7][1], drawableArr8[8][1]}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outLoaderPhotoIconSelected"));
        Drawable[][] drawableArr9 = Theme.chat_photoStatesDrawables;
        arrayList.add(new ThemeDescription(this.chatListView, ThemeDescription.FLAG_BACKGROUNDFILTER, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{drawableArr9[10][0], drawableArr9[11][0]}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inLoaderPhoto"));
        Drawable[][] drawableArr10 = Theme.chat_photoStatesDrawables;
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{drawableArr10[10][0], drawableArr10[11][0]}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inLoaderPhotoIcon"));
        Drawable[][] drawableArr11 = Theme.chat_photoStatesDrawables;
        arrayList.add(new ThemeDescription(this.chatListView, ThemeDescription.FLAG_BACKGROUNDFILTER, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{drawableArr11[10][1], drawableArr11[11][1]}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inLoaderPhotoSelected"));
        Drawable[][] drawableArr12 = Theme.chat_photoStatesDrawables;
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{drawableArr12[10][1], drawableArr12[11][1]}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inLoaderPhotoIconSelected"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_photoStatesDrawables[9][0]}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outFileIcon"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_photoStatesDrawables[9][1]}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outFileSelectedIcon"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_photoStatesDrawables[12][0]}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inFileIcon"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_photoStatesDrawables[12][1]}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inFileSelectedIcon"));
        arrayList.add(new ThemeDescription(this.chatListView, ThemeDescription.FLAG_BACKGROUNDFILTER, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_contactDrawable[0]}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inContactBackground"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_contactDrawable[0]}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inContactIcon"));
        arrayList.add(new ThemeDescription(this.chatListView, ThemeDescription.FLAG_BACKGROUNDFILTER, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_contactDrawable[1]}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outContactBackground"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_contactDrawable[1]}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outContactIcon"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inLocationBackground"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_locationDrawable[0]}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inLocationIcon"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outLocationBackground"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_locationDrawable[1]}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outLocationIcon"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inPollCorrectAnswer"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outPollCorrectAnswer"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inPollWrongAnswer"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outPollWrongAnswer"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_pollHintDrawable[0]}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inPreviewInstantText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_pollHintDrawable[1]}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outPreviewInstantText"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_psaHelpDrawable[0]}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inViews"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_psaHelpDrawable[1]}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outViews"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_shareBackground"));
        arrayList.add(new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_shareBackgroundSelected"));
        arrayList.add(new ThemeDescription(this.messagesSearchListView, 0, new Class[]{DialogCell.class}, (Paint) null, Theme.avatarDrawables, (ThemeDescription.ThemeDescriptionDelegate) null, "avatar_text"));
        arrayList.add(new ThemeDescription(this.messagesSearchListView, 0, new Class[]{DialogCell.class}, Theme.dialogs_countPaint, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chats_unreadCounter"));
        TextPaint[] textPaintArr = Theme.dialogs_namePaint;
        arrayList.add(new ThemeDescription((View) this.messagesSearchListView, 0, new Class[]{DialogCell.class}, (String[]) null, new Paint[]{textPaintArr[0], textPaintArr[1], Theme.dialogs_searchNamePaint}, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chats_name"));
        TextPaint[] textPaintArr2 = Theme.dialogs_nameEncryptedPaint;
        arrayList.add(new ThemeDescription((View) this.messagesSearchListView, 0, new Class[]{DialogCell.class}, (String[]) null, new Paint[]{textPaintArr2[0], textPaintArr2[1], Theme.dialogs_searchNameEncryptedPaint}, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chats_secretName"));
        arrayList.add(new ThemeDescription(this.messagesSearchListView, 0, new Class[]{DialogCell.class}, (Paint) null, new Drawable[]{Theme.dialogs_lockDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, "chats_secretIcon"));
        arrayList.add(new ThemeDescription(this.messagesSearchListView, 0, new Class[]{DialogCell.class}, (Paint) null, new Drawable[]{Theme.dialogs_groupDrawable, Theme.dialogs_broadcastDrawable, Theme.dialogs_botDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, "chats_nameIcon"));
        arrayList.add(new ThemeDescription(this.messagesSearchListView, 0, new Class[]{DialogCell.class}, (Paint) null, new Drawable[]{Theme.dialogs_scamDrawable, Theme.dialogs_fakeDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, "chats_draft"));
        arrayList.add(new ThemeDescription(this.messagesSearchListView, 0, new Class[]{DialogCell.class}, Theme.dialogs_messagePaint[1], (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chats_message_threeLines"));
        arrayList.add(new ThemeDescription(this.messagesSearchListView, 0, new Class[]{DialogCell.class}, Theme.dialogs_messageNamePaint, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chats_nameMessage_threeLines"));
        arrayList.add(new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, r72, "chats_nameMessage"));
        arrayList.add(new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, r72, "chats_attachMessage"));
        arrayList.add(new ThemeDescription((View) this.messagesSearchListView, 0, new Class[]{DialogCell.class}, (String[]) null, (Paint[]) Theme.dialogs_messagePrintingPaint, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chats_actionMessage"));
        arrayList.add(new ThemeDescription(this.messagesSearchListView, 0, new Class[]{DialogCell.class}, Theme.dialogs_timePaint, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chats_date"));
        arrayList.add(new ThemeDescription(this.messagesSearchListView, 0, new Class[]{DialogCell.class}, (Paint) null, new Drawable[]{Theme.dialogs_checkDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, "chats_sentCheck"));
        arrayList.add(new ThemeDescription(this.messagesSearchListView, 0, new Class[]{DialogCell.class}, (Paint) null, new Drawable[]{Theme.dialogs_checkReadDrawable, Theme.dialogs_halfCheckDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, "chats_sentReadCheck"));
        arrayList.add(new ThemeDescription(this.mentionContainer, 0, (Class[]) null, Theme.chat_composeBackgroundPaint, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_messagePanelBackground"));
        arrayList.add(new ThemeDescription(this.mentionContainer, 0, (Class[]) null, (Paint) null, new Drawable[]{Theme.chat_composeShadowDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_messagePanelShadow"));
        arrayList.add(new ThemeDescription(this.searchContainer, 0, (Class[]) null, Theme.chat_composeBackgroundPaint, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_messagePanelBackground"));
        arrayList.add(new ThemeDescription(this.searchContainer, 0, (Class[]) null, (Paint) null, new Drawable[]{Theme.chat_composeShadowDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_messagePanelShadow"));
        arrayList.add(new ThemeDescription(this.bottomOverlay, 0, (Class[]) null, Theme.chat_composeBackgroundPaint, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_messagePanelBackground"));
        arrayList.add(new ThemeDescription(this.bottomOverlay, 0, (Class[]) null, (Paint) null, new Drawable[]{Theme.chat_composeShadowDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_messagePanelShadow"));
        arrayList.add(new ThemeDescription(this.bottomOverlayChat, 0, (Class[]) null, Theme.chat_composeBackgroundPaint, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_messagePanelBackground"));
        arrayList.add(new ThemeDescription(this.bottomOverlayChat, 0, (Class[]) null, (Paint) null, new Drawable[]{Theme.chat_composeShadowDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_messagePanelShadow"));
        arrayList.add(new ThemeDescription(this.bottomMessagesActionContainer, 0, (Class[]) null, Theme.chat_composeBackgroundPaint, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_messagePanelBackground"));
        arrayList.add(new ThemeDescription(this.bottomMessagesActionContainer, 0, (Class[]) null, (Paint) null, new Drawable[]{Theme.chat_composeShadowDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_messagePanelShadow"));
        arrayList.add(new ThemeDescription(this.chatActivityEnterView, 0, (Class[]) null, Theme.chat_composeBackgroundPaint, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_messagePanelBackground"));
        arrayList.add(new ThemeDescription(this.chatActivityEnterView, 0, (Class[]) null, (Paint) null, new Drawable[]{Theme.chat_composeShadowDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_messagePanelShadow"));
        arrayList.add(new ThemeDescription((View) this.chatActivityEnterView, ThemeDescription.FLAG_TEXTCOLOR, new Class[]{ChatActivityEnterView.class}, new String[]{"messageEditText"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_messagePanelText"));
        arrayList.add(new ThemeDescription((View) this.chatActivityEnterView, ThemeDescription.FLAG_CURSORCOLOR, new Class[]{ChatActivityEnterView.class}, new String[]{"messageEditText"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_messagePanelCursor"));
        arrayList.add(new ThemeDescription((View) this.chatActivityEnterView, ThemeDescription.FLAG_HINTTEXTCOLOR, new Class[]{ChatActivityEnterView.class}, new String[]{"messageEditText"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_messagePanelHint"));
        arrayList.add(new ThemeDescription((View) this.chatActivityEnterView, ThemeDescription.FLAG_IMAGECOLOR, new Class[]{ChatActivityEnterView.class}, new String[]{"sendButton"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_messagePanelSend"));
        arrayList.add(new ThemeDescription(this.chatActivityEnterView, ThemeDescription.FLAG_USEBACKGROUNDDRAWABLE | ThemeDescription.FLAG_DRAWABLESELECTEDSTATE, new Class[]{ChatActivityEnterView.class}, new String[]{"sendButton"}, (Paint[]) null, (Drawable[]) null, 24, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_messagePanelSend"));
        arrayList.add(new ThemeDescription((View) this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"emojiButton1"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_messagePanelIcons"));
        arrayList.add(new ThemeDescription((View) this.chatActivityEnterView, ThemeDescription.FLAG_USEBACKGROUNDDRAWABLE | ThemeDescription.FLAG_DRAWABLESELECTEDSTATE, new Class[]{ChatActivityEnterView.class}, new String[]{"emojiButton1"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "listSelectorSDK21"));
        arrayList.add(new ThemeDescription((View) this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"emojiButton2"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_messagePanelIcons"));
        arrayList.add(new ThemeDescription((View) this.chatActivityEnterView, ThemeDescription.FLAG_USEBACKGROUNDDRAWABLE | ThemeDescription.FLAG_DRAWABLESELECTEDSTATE, new Class[]{ChatActivityEnterView.class}, new String[]{"emojiButton2"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "listSelectorSDK21"));
        arrayList.add(new ThemeDescription((View) this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"botButton"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_messagePanelIcons"));
        arrayList.add(new ThemeDescription((View) this.chatActivityEnterView, ThemeDescription.FLAG_USEBACKGROUNDDRAWABLE | ThemeDescription.FLAG_DRAWABLESELECTEDSTATE, new Class[]{ChatActivityEnterView.class}, new String[]{"botButton"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "listSelectorSDK21"));
        arrayList.add(new ThemeDescription((View) this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"notifyButton"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_messagePanelIcons"));
        arrayList.add(new ThemeDescription((View) this.chatActivityEnterView, ThemeDescription.FLAG_IMAGECOLOR | ThemeDescription.FLAG_BACKGROUNDFILTER, new Class[]{ChatActivityEnterView.class}, new String[]{"scheduledButton"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_messagePanelIcons"));
        arrayList.add(new ThemeDescription((View) this.chatActivityEnterView, ThemeDescription.FLAG_IMAGECOLOR, new Class[]{ChatActivityEnterView.class}, new String[]{"scheduledButton"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_recordedVoiceDot"));
        arrayList.add(new ThemeDescription((View) this.chatActivityEnterView, ThemeDescription.FLAG_USEBACKGROUNDDRAWABLE | ThemeDescription.FLAG_DRAWABLESELECTEDSTATE, new Class[]{ChatActivityEnterView.class}, new String[]{"scheduledButton"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "listSelectorSDK21"));
        arrayList.add(new ThemeDescription((View) this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"attachButton"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_messagePanelIcons"));
        arrayList.add(new ThemeDescription((View) this.chatActivityEnterView, ThemeDescription.FLAG_USEBACKGROUNDDRAWABLE | ThemeDescription.FLAG_DRAWABLESELECTEDSTATE, new Class[]{ChatActivityEnterView.class}, new String[]{"attachButton"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "listSelectorSDK21"));
        arrayList.add(new ThemeDescription((View) this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"audioSendButton"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_messagePanelIcons"));
        arrayList.add(new ThemeDescription((View) this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"videoSendButton"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_messagePanelIcons"));
        arrayList.add(new ThemeDescription((View) this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"notifyButton"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_messagePanelVideoFrame"));
        arrayList.add(new ThemeDescription((View) this.chatActivityEnterView, ThemeDescription.FLAG_USEBACKGROUNDDRAWABLE | ThemeDescription.FLAG_DRAWABLESELECTEDSTATE, new Class[]{ChatActivityEnterView.class}, new String[]{"notifyButton"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "listSelectorSDK21"));
        arrayList.add(new ThemeDescription((View) this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"videoTimelineView"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_messagePanelSend"));
        arrayList.add(new ThemeDescription((View) this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"micDrawable"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_messagePanelVoicePressed"));
        arrayList.add(new ThemeDescription((View) this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"cameraDrawable"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_messagePanelVoicePressed"));
        arrayList.add(new ThemeDescription((View) this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"sendDrawable"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_messagePanelVoicePressed"));
        arrayList.add(new ThemeDescription(this.chatActivityEnterView, 0, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "key_chat_messagePanelVoiceLock"));
        arrayList.add(new ThemeDescription(this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "key_chat_messagePanelVoiceLockBackground"));
        arrayList.add(new ThemeDescription((View) this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"lockShadowDrawable"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "key_chat_messagePanelVoiceLockShadow"));
        arrayList.add(new ThemeDescription((View) this.chatActivityEnterView, ThemeDescription.FLAG_USEBACKGROUNDDRAWABLE | ThemeDescription.FLAG_DRAWABLESELECTEDSTATE, new Class[]{ChatActivityEnterView.class}, new String[]{"recordDeleteImageView"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "listSelectorSDK21"));
        arrayList.add(new ThemeDescription((View) this.chatActivityEnterView, ThemeDescription.FLAG_BACKGROUNDFILTER, new Class[]{ChatActivityEnterView.class}, new String[]{"recordedAudioBackground"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_recordedVoiceBackground"));
        arrayList.add(new ThemeDescription(this.chatActivityEnterView, 0, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_recordTime"));
        arrayList.add(new ThemeDescription(this.chatActivityEnterView, 0, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_recordVoiceCancel"));
        arrayList.add(new ThemeDescription((View) this.chatActivityEnterView, ThemeDescription.FLAG_TEXTCOLOR, new Class[]{ChatActivityEnterView.class}, new String[]{"recordedAudioTimeTextView"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_messagePanelVoiceDuration"));
        arrayList.add(new ThemeDescription(this.chatActivityEnterView, 0, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_recordVoiceCancel"));
        arrayList.add(new ThemeDescription((View) this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"doneButtonProgress"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "contextProgressInner1"));
        arrayList.add(new ThemeDescription((View) this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"doneButtonProgress"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "contextProgressOuter1"));
        arrayList.add(new ThemeDescription((View) this.chatActivityEnterView, ThemeDescription.FLAG_IMAGECOLOR, new Class[]{ChatActivityEnterView.class}, new String[]{"cancelBotButton"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_messagePanelCancelInlineBot"));
        arrayList.add(new ThemeDescription((View) this.chatActivityEnterView, ThemeDescription.FLAG_USEBACKGROUNDDRAWABLE | ThemeDescription.FLAG_DRAWABLESELECTEDSTATE, new Class[]{ChatActivityEnterView.class}, new String[]{"cancelBotButton"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "listSelectorSDK21"));
        arrayList.add(new ThemeDescription((View) this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"redDotPaint"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_recordedVoiceDot"));
        arrayList.add(new ThemeDescription((View) this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"paint"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_messagePanelVoiceBackground"));
        arrayList.add(new ThemeDescription((View) this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"seekBarWaveform"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_recordedVoiceProgress"));
        arrayList.add(new ThemeDescription((View) this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"seekBarWaveform"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_recordedVoiceProgressInner"));
        arrayList.add(new ThemeDescription((View) this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"dotPaint"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_emojiPanelNewTrending"));
        ThemeDescription themeDescription = r1;
        ThemeDescription themeDescription2 = new ThemeDescription((View) this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, (String[]) null, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) r10, "chat_recordedVoicePlayPause");
        arrayList.add(themeDescription);
        ChatActivityEnterView chatActivityEnterView2 = this.chatActivityEnterView;
        arrayList.add(new ThemeDescription((View) chatActivityEnterView2 != null ? chatActivityEnterView2.getEmojiView() : null, 0, new Class[]{EmojiView.class}, (String[]) null, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) r10, "chat_emojiPanelBackground"));
        ChatActivityEnterView chatActivityEnterView3 = this.chatActivityEnterView;
        arrayList.add(new ThemeDescription((View) chatActivityEnterView3 != null ? chatActivityEnterView3.getEmojiView() : null, 0, new Class[]{EmojiView.class}, (String[]) null, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) r10, "chat_emojiPanelShadowLine"));
        ChatActivityEnterView chatActivityEnterView4 = this.chatActivityEnterView;
        arrayList.add(new ThemeDescription((View) chatActivityEnterView4 != null ? chatActivityEnterView4.getEmojiView() : null, 0, new Class[]{EmojiView.class}, (String[]) null, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) r10, "chat_emojiPanelEmptyText"));
        ChatActivityEnterView chatActivityEnterView5 = this.chatActivityEnterView;
        arrayList.add(new ThemeDescription((View) chatActivityEnterView5 != null ? chatActivityEnterView5.getEmojiView() : null, 0, new Class[]{EmojiView.class}, (String[]) null, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) r10, "chat_emojiPanelIcon"));
        ChatActivityEnterView chatActivityEnterView6 = this.chatActivityEnterView;
        arrayList.add(new ThemeDescription((View) chatActivityEnterView6 != null ? chatActivityEnterView6.getEmojiView() : null, 0, new Class[]{EmojiView.class}, (String[]) null, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) r10, "chat_emojiPanelIconSelected"));
        ChatActivityEnterView chatActivityEnterView7 = this.chatActivityEnterView;
        arrayList.add(new ThemeDescription((View) chatActivityEnterView7 != null ? chatActivityEnterView7.getEmojiView() : null, 0, new Class[]{EmojiView.class}, (String[]) null, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) r10, "chat_emojiPanelStickerPackSelector"));
        ChatActivityEnterView chatActivityEnterView8 = this.chatActivityEnterView;
        arrayList.add(new ThemeDescription((View) chatActivityEnterView8 != null ? chatActivityEnterView8.getEmojiView() : null, 0, new Class[]{EmojiView.class}, (String[]) null, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) r10, "chat_emojiPanelBackspace"));
        ChatActivityEnterView chatActivityEnterView9 = this.chatActivityEnterView;
        arrayList.add(new ThemeDescription((View) chatActivityEnterView9 != null ? chatActivityEnterView9.getEmojiView() : null, 0, new Class[]{EmojiView.class}, (String[]) null, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) r10, "chat_emojiPanelTrendingTitle"));
        ChatActivityEnterView chatActivityEnterView10 = this.chatActivityEnterView;
        arrayList.add(new ThemeDescription((View) chatActivityEnterView10 != null ? chatActivityEnterView10.getEmojiView() : null, 0, new Class[]{EmojiView.class}, (String[]) null, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) r10, "chat_emojiPanelTrendingDescription"));
        ChatActivityEnterView chatActivityEnterView11 = this.chatActivityEnterView;
        arrayList.add(new ThemeDescription((View) chatActivityEnterView11 != null ? chatActivityEnterView11.getEmojiView() : null, 0, new Class[]{EmojiView.class}, (String[]) null, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) r10, "chat_emojiPanelBadgeText"));
        ChatActivityEnterView chatActivityEnterView12 = this.chatActivityEnterView;
        arrayList.add(new ThemeDescription((View) chatActivityEnterView12 != null ? chatActivityEnterView12.getEmojiView() : null, 0, new Class[]{EmojiView.class}, (String[]) null, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) r10, "chat_emojiPanelBadgeBackground"));
        ChatActivityEnterView chatActivityEnterView13 = this.chatActivityEnterView;
        arrayList.add(new ThemeDescription((View) chatActivityEnterView13 != null ? chatActivityEnterView13.getEmojiView() : null, 0, new Class[]{EmojiView.class}, (String[]) null, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) r10, "chat_emojiBottomPanelIcon"));
        ChatActivityEnterView chatActivityEnterView14 = this.chatActivityEnterView;
        arrayList.add(new ThemeDescription((View) chatActivityEnterView14 != null ? chatActivityEnterView14.getEmojiView() : null, 0, new Class[]{EmojiView.class}, (String[]) null, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) r10, "chat_emojiSearchIcon"));
        ChatActivityEnterView chatActivityEnterView15 = this.chatActivityEnterView;
        arrayList.add(new ThemeDescription((View) chatActivityEnterView15 != null ? chatActivityEnterView15.getEmojiView() : null, 0, new Class[]{EmojiView.class}, (String[]) null, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) r10, "chat_emojiPanelStickerSetNameHighlight"));
        ChatActivityEnterView chatActivityEnterView16 = this.chatActivityEnterView;
        arrayList.add(new ThemeDescription((View) chatActivityEnterView16 != null ? chatActivityEnterView16.getEmojiView() : null, 0, new Class[]{EmojiView.class}, (String[]) null, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) r10, "chat_emojiPanelStickerPackSelectorLine"));
        ChatActivityEnterView chatActivityEnterView17 = this.chatActivityEnterView;
        if (!(chatActivityEnterView17 == null || (trendingStickersAlert = chatActivityEnterView17.getTrendingStickersAlert()) == null)) {
            arrayList.addAll(trendingStickersAlert.getThemeDescriptions());
        }
        int i = 0;
        while (i < 2) {
            UndoView undoView2 = i == 0 ? this.undoView : this.topUndoView;
            arrayList.add(new ThemeDescription(undoView2, ThemeDescription.FLAG_BACKGROUNDFILTER, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "undo_background"));
            arrayList.add(new ThemeDescription((View) undoView2, 0, new Class[]{UndoView.class}, new String[]{"undoImageView"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "undo_cancelColor"));
            arrayList.add(new ThemeDescription((View) undoView2, 0, new Class[]{UndoView.class}, new String[]{"undoTextView"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "undo_cancelColor"));
            arrayList.add(new ThemeDescription((View) undoView2, 0, new Class[]{UndoView.class}, new String[]{"infoTextView"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "undo_infoColor"));
            arrayList.add(new ThemeDescription((View) undoView2, 0, new Class[]{UndoView.class}, new String[]{"subinfoTextView"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "undo_infoColor"));
            arrayList.add(new ThemeDescription((View) undoView2, ThemeDescription.FLAG_LINKCOLOR, new Class[]{UndoView.class}, new String[]{"subinfoTextView"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "undo_cancelColor"));
            arrayList.add(new ThemeDescription((View) undoView2, 0, new Class[]{UndoView.class}, new String[]{"textPaint"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "undo_infoColor"));
            arrayList.add(new ThemeDescription((View) undoView2, 0, new Class[]{UndoView.class}, new String[]{"progressPaint"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "undo_infoColor"));
            arrayList.add(new ThemeDescription((View) undoView2, ThemeDescription.FLAG_IMAGECOLOR, new Class[]{UndoView.class}, new String[]{"leftImageView"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "undo_infoColor"));
            i++;
        }
        arrayList.add(new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_botKeyboardButtonText"));
        arrayList.add(new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_botKeyboardButtonBackground"));
        arrayList.add(new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_botKeyboardButtonBackgroundPressed"));
        arrayList.add(new ThemeDescription(this.fragmentView, ThemeDescription.FLAG_BACKGROUND | ThemeDescription.FLAG_CHECKTAG, new Class[]{FragmentContextView.class}, new String[]{"frameLayout"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "inappPlayerBackground"));
        arrayList.add(new ThemeDescription(this.fragmentView, ThemeDescription.FLAG_IMAGECOLOR, new Class[]{FragmentContextView.class}, new String[]{"playButton"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "inappPlayerPlayPause"));
        arrayList.add(new ThemeDescription(this.fragmentView, ThemeDescription.FLAG_TEXTCOLOR | ThemeDescription.FLAG_CHECKTAG, new Class[]{FragmentContextView.class}, new String[]{"titleTextView"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "inappPlayerTitle"));
        arrayList.add(new ThemeDescription(this.fragmentView, ThemeDescription.FLAG_TEXTCOLOR | ThemeDescription.FLAG_CHECKTAG, new Class[]{FragmentContextView.class}, new String[]{"titleTextView"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "inappPlayerPerformer"));
        arrayList.add(new ThemeDescription(this.fragmentView, ThemeDescription.FLAG_TEXTCOLOR | ThemeDescription.FLAG_FASTSCROLL, new Class[]{FragmentContextView.class}, new String[]{"subtitleTextView"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "inappPlayerClose"));
        arrayList.add(new ThemeDescription(this.fragmentView, ThemeDescription.FLAG_IMAGECOLOR, new Class[]{FragmentContextView.class}, new String[]{"closeButton"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "inappPlayerClose"));
        arrayList.add(new ThemeDescription(this.fragmentView, ThemeDescription.FLAG_BACKGROUND | ThemeDescription.FLAG_CHECKTAG, new Class[]{FragmentContextView.class}, new String[]{"frameLayout"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "returnToCallBackground"));
        arrayList.add(new ThemeDescription(this.fragmentView, ThemeDescription.FLAG_TEXTCOLOR | ThemeDescription.FLAG_CHECKTAG, new Class[]{FragmentContextView.class}, new String[]{"titleTextView"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "returnToCallText"));
        $$Lambda$ChatActivity$863zurfR5_Z5_h_r36mEI0_c r73 = r10;
        arrayList.add(new ThemeDescription(this.pinnedLineView, 0, (Class[]) null, (Paint) null, (Drawable[]) null, r73, "chat_topPanelLine"));
        arrayList.add(new ThemeDescription(this.pinnedLineView, 0, (Class[]) null, (Paint) null, (Drawable[]) null, r73, "windowBackgroundWhite"));
        arrayList.add(new ThemeDescription(this.pinnedCounterTextView, ThemeDescription.FLAG_TEXTCOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_topPanelTitle"));
        for (int i2 = 0; i2 < 2; i2++) {
            arrayList.add(new ThemeDescription(this.pinnedNameTextView[i2], ThemeDescription.FLAG_TEXTCOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_topPanelTitle"));
            arrayList.add(new ThemeDescription(this.pinnedMessageTextView[i2], ThemeDescription.FLAG_TEXTCOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_topPanelMessage"));
        }
        arrayList.add(new ThemeDescription(this.alertNameTextView, ThemeDescription.FLAG_TEXTCOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_topPanelTitle"));
        arrayList.add(new ThemeDescription(this.alertTextView, ThemeDescription.FLAG_TEXTCOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_topPanelMessage"));
        arrayList.add(new ThemeDescription(this.closePinned, ThemeDescription.FLAG_IMAGECOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_topPanelClose"));
        arrayList.add(new ThemeDescription(this.pinnedListButton, ThemeDescription.FLAG_IMAGECOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_topPanelTitle"));
        arrayList.add(new ThemeDescription(this.closeReportSpam, ThemeDescription.FLAG_IMAGECOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_topPanelClose"));
        arrayList.add(new ThemeDescription(this.topChatPanelView, ThemeDescription.FLAG_BACKGROUNDFILTER, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_topPanelBackground"));
        arrayList.add(new ThemeDescription(this.alertView, ThemeDescription.FLAG_BACKGROUNDFILTER, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_topPanelBackground"));
        arrayList.add(new ThemeDescription(this.pinnedMessageView, ThemeDescription.FLAG_BACKGROUNDFILTER, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_topPanelBackground"));
        arrayList.add(new ThemeDescription(this.addToContactsButton, ThemeDescription.FLAG_TEXTCOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_addContact"));
        arrayList.add(new ThemeDescription(this.reportSpamButton, ThemeDescription.FLAG_TEXTCOLOR | ThemeDescription.FLAG_CHECKTAG, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_reportSpam"));
        arrayList.add(new ThemeDescription(this.reportSpamButton, ThemeDescription.FLAG_TEXTCOLOR | ThemeDescription.FLAG_CHECKTAG, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_addContact"));
        arrayList.add(new ThemeDescription(this.replyLineView, ThemeDescription.FLAG_BACKGROUND, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_replyPanelLine"));
        arrayList.add(new ThemeDescription(this.replyNameTextView, ThemeDescription.FLAG_TEXTCOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_replyPanelName"));
        arrayList.add(new ThemeDescription(this.replyObjectTextView, ThemeDescription.FLAG_TEXTCOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_replyPanelMessage"));
        arrayList.add(new ThemeDescription(this.replyIconImageView, ThemeDescription.FLAG_IMAGECOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_replyPanelIcons"));
        arrayList.add(new ThemeDescription(this.replyCloseImageView, ThemeDescription.FLAG_IMAGECOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_replyPanelClose"));
        $$Lambda$ChatActivity$863zurfR5_Z5_h_r36mEI0_c r74 = r10;
        arrayList.add(new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, r74, "chat_replyPanelName"));
        arrayList.add(new ThemeDescription(this.searchUpButton, ThemeDescription.FLAG_IMAGECOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_searchPanelIcons"));
        arrayList.add(new ThemeDescription(this.searchUpButton, ThemeDescription.FLAG_BACKGROUNDFILTER | ThemeDescription.FLAG_DRAWABLESELECTEDSTATE, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "actionBarActionModeDefaultSelector"));
        arrayList.add(new ThemeDescription(this.searchDownButton, ThemeDescription.FLAG_IMAGECOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_searchPanelIcons"));
        arrayList.add(new ThemeDescription(this.searchDownButton, ThemeDescription.FLAG_BACKGROUNDFILTER | ThemeDescription.FLAG_DRAWABLESELECTEDSTATE, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "actionBarActionModeDefaultSelector"));
        arrayList.add(new ThemeDescription(this.searchCalendarButton, ThemeDescription.FLAG_IMAGECOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_searchPanelIcons"));
        arrayList.add(new ThemeDescription(this.searchCalendarButton, ThemeDescription.FLAG_BACKGROUNDFILTER | ThemeDescription.FLAG_DRAWABLESELECTEDSTATE, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "actionBarActionModeDefaultSelector"));
        arrayList.add(new ThemeDescription(this.searchUserButton, ThemeDescription.FLAG_IMAGECOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_searchPanelIcons"));
        arrayList.add(new ThemeDescription(this.searchUserButton, ThemeDescription.FLAG_BACKGROUNDFILTER | ThemeDescription.FLAG_DRAWABLESELECTEDSTATE, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "actionBarActionModeDefaultSelector"));
        arrayList.add(new ThemeDescription(this.searchCountText, ThemeDescription.FLAG_TEXTCOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_searchPanelText"));
        arrayList.add(new ThemeDescription(this.searchAsListTogglerView, ThemeDescription.FLAG_BACKGROUNDFILTER | ThemeDescription.FLAG_DRAWABLESELECTEDSTATE, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "actionBarActionModeDefaultSelector"));
        arrayList.add(new ThemeDescription(this.replyButton, ThemeDescription.FLAG_TEXTCOLOR | ThemeDescription.FLAG_IMAGECOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "actionBarActionModeDefaultIcon"));
        arrayList.add(new ThemeDescription(this.replyButton, ThemeDescription.FLAG_BACKGROUNDFILTER | ThemeDescription.FLAG_DRAWABLESELECTEDSTATE, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "actionBarActionModeDefaultSelector"));
        arrayList.add(new ThemeDescription(this.forwardButton, ThemeDescription.FLAG_TEXTCOLOR | ThemeDescription.FLAG_IMAGECOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "actionBarActionModeDefaultIcon"));
        arrayList.add(new ThemeDescription(this.forwardButton, ThemeDescription.FLAG_BACKGROUNDFILTER | ThemeDescription.FLAG_DRAWABLESELECTEDSTATE, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "actionBarActionModeDefaultSelector"));
        arrayList.add(new ThemeDescription(this.bottomOverlayText, ThemeDescription.FLAG_TEXTCOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_secretChatStatusText"));
        arrayList.add(new ThemeDescription(this.bottomOverlayChatText, 0, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_fieldOverlayText"));
        arrayList.add(new ThemeDescription(this.bottomOverlayChatText, 0, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_goDownButtonCounterBackground"));
        arrayList.add(new ThemeDescription(this.bottomOverlayChatText, 0, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_messagePanelBackground"));
        arrayList.add(new ThemeDescription(this.bottomOverlayProgress, 0, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_fieldOverlayText"));
        arrayList.add(new ThemeDescription(this.bottomOverlayImage, ThemeDescription.FLAG_IMAGECOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_fieldOverlayText"));
        arrayList.add(new ThemeDescription(this.bigEmptyView, ThemeDescription.FLAG_TEXTCOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_serviceText"));
        arrayList.add(new ThemeDescription(this.emptyView, ThemeDescription.FLAG_TEXTCOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_serviceText"));
        arrayList.add(new ThemeDescription(this.progressBar, ThemeDescription.FLAG_PROGRESSBAR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_serviceText"));
        arrayList.add(new ThemeDescription(this.stickersPanelArrow, ThemeDescription.FLAG_IMAGECOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_stickersHintPanel"));
        arrayList.add(new ThemeDescription(this.stickersListView, ThemeDescription.FLAG_BACKGROUNDFILTER, new Class[]{StickerCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_stickersHintPanel"));
        arrayList.add(new ThemeDescription((View) this.chatListView, ThemeDescription.FLAG_USEBACKGROUNDDRAWABLE, new Class[]{ChatUnreadCell.class}, new String[]{"backgroundLayout"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_unreadMessagesStartBackground"));
        arrayList.add(new ThemeDescription((View) this.chatListView, ThemeDescription.FLAG_IMAGECOLOR, new Class[]{ChatUnreadCell.class}, new String[]{"imageView"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_unreadMessagesStartArrowIcon"));
        arrayList.add(new ThemeDescription((View) this.chatListView, ThemeDescription.FLAG_TEXTCOLOR, new Class[]{ChatUnreadCell.class}, new String[]{"textView"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_unreadMessagesStartText"));
        arrayList.add(new ThemeDescription(this.progressView2, ThemeDescription.FLAG_SERVICEBACKGROUND, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_serviceBackground"));
        arrayList.add(new ThemeDescription(this.emptyView, ThemeDescription.FLAG_SERVICEBACKGROUND, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_serviceBackground"));
        arrayList.add(new ThemeDescription(this.bigEmptyView, ThemeDescription.FLAG_SERVICEBACKGROUND, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_serviceBackground"));
        arrayList.add(new ThemeDescription((View) this.chatListView, ThemeDescription.FLAG_SERVICEBACKGROUND, new Class[]{ChatLoadingCell.class}, new String[]{"textView"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_serviceBackground"));
        arrayList.add(new ThemeDescription((View) this.chatListView, ThemeDescription.FLAG_PROGRESSBAR, new Class[]{ChatLoadingCell.class}, new String[]{"textView"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_serviceText"));
        arrayList.add(new ThemeDescription((View) this.mentionListView, ThemeDescription.FLAG_TEXTCOLOR, new Class[]{BotSwitchCell.class}, new String[]{"textView"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_botSwitchToInlineText"));
        arrayList.add(new ThemeDescription((View) this.mentionListView, ThemeDescription.FLAG_TEXTCOLOR, new Class[]{MentionCell.class}, new String[]{"nameTextView"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "windowBackgroundWhiteBlackText"));
        arrayList.add(new ThemeDescription((View) this.mentionListView, ThemeDescription.FLAG_TEXTCOLOR, new Class[]{MentionCell.class}, new String[]{"usernameTextView"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "windowBackgroundWhiteGrayText3"));
        arrayList.add(new ThemeDescription(this.mentionListView, 0, new Class[]{ContextLinkCell.class}, (Paint) null, new Drawable[]{Theme.chat_inlineResultFile, Theme.chat_inlineResultAudio, Theme.chat_inlineResultLocation}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inlineResultIcon"));
        arrayList.add(new ThemeDescription(this.mentionListView, 0, new Class[]{ContextLinkCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "windowBackgroundWhiteGrayText2"));
        arrayList.add(new ThemeDescription(this.mentionListView, 0, new Class[]{ContextLinkCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "windowBackgroundWhiteLinkText"));
        arrayList.add(new ThemeDescription(this.mentionListView, 0, new Class[]{ContextLinkCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "windowBackgroundWhiteBlackText"));
        arrayList.add(new ThemeDescription(this.mentionListView, 0, new Class[]{ContextLinkCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inAudioProgress"));
        arrayList.add(new ThemeDescription(this.mentionListView, 0, new Class[]{ContextLinkCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inAudioSelectedProgress"));
        arrayList.add(new ThemeDescription(this.mentionListView, 0, new Class[]{ContextLinkCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "divider"));
        arrayList.add(new ThemeDescription(this.gifHintTextView, ThemeDescription.FLAG_BACKGROUNDFILTER, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_gifSaveHintBackground"));
        arrayList.add(new ThemeDescription(this.gifHintTextView, ThemeDescription.FLAG_TEXTCOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_gifSaveHintText"));
        arrayList.add(new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, r74, "chat_attachMediaBanBackground"));
        arrayList.add(new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, r74, "chat_attachMediaBanText"));
        arrayList.add(new ThemeDescription((View) this.noSoundHintView, ThemeDescription.FLAG_TEXTCOLOR, new Class[]{HintView.class}, new String[]{"textView"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_gifSaveHintText"));
        arrayList.add(new ThemeDescription((View) this.noSoundHintView, ThemeDescription.FLAG_IMAGECOLOR, new Class[]{HintView.class}, new String[]{"imageView"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_gifSaveHintText"));
        arrayList.add(new ThemeDescription((View) this.noSoundHintView, ThemeDescription.FLAG_TEXTCOLOR, new Class[]{HintView.class}, new String[]{"arrowImageView"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_gifSaveHintBackground"));
        arrayList.add(new ThemeDescription((View) this.forwardHintView, ThemeDescription.FLAG_TEXTCOLOR, new Class[]{HintView.class}, new String[]{"textView"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_gifSaveHintText"));
        arrayList.add(new ThemeDescription((View) this.forwardHintView, ThemeDescription.FLAG_TEXTCOLOR, new Class[]{HintView.class}, new String[]{"arrowImageView"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_gifSaveHintBackground"));
        arrayList.add(new ThemeDescription(this.pagedownButtonCounter, ThemeDescription.FLAG_BACKGROUNDFILTER, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_goDownButtonCounterBackground"));
        arrayList.add(new ThemeDescription(this.pagedownButtonCounter, ThemeDescription.FLAG_TEXTCOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_goDownButtonCounter"));
        arrayList.add(new ThemeDescription(this.pagedownButtonImage, ThemeDescription.FLAG_BACKGROUNDFILTER, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_goDownButton"));
        arrayList.add(new ThemeDescription(this.pagedownButtonImage, ThemeDescription.FLAG_BACKGROUNDFILTER | ThemeDescription.FLAG_DRAWABLESELECTEDSTATE, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_goDownButtonShadow"));
        arrayList.add(new ThemeDescription(this.pagedownButtonImage, ThemeDescription.FLAG_IMAGECOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_goDownButtonIcon"));
        arrayList.add(new ThemeDescription(this.mentiondownButtonCounter, ThemeDescription.FLAG_BACKGROUNDFILTER, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_goDownButtonCounterBackground"));
        arrayList.add(new ThemeDescription(this.mentiondownButtonCounter, ThemeDescription.FLAG_TEXTCOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_goDownButtonCounter"));
        arrayList.add(new ThemeDescription(this.mentiondownButtonImage, ThemeDescription.FLAG_BACKGROUNDFILTER, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_goDownButton"));
        arrayList.add(new ThemeDescription(this.mentiondownButtonImage, ThemeDescription.FLAG_BACKGROUNDFILTER | ThemeDescription.FLAG_DRAWABLESELECTEDSTATE, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_goDownButtonShadow"));
        arrayList.add(new ThemeDescription(this.mentiondownButtonImage, ThemeDescription.FLAG_IMAGECOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_goDownButtonIcon"));
        ChatAvatarContainer chatAvatarContainer7 = this.avatarContainer;
        arrayList.add(new ThemeDescription(chatAvatarContainer7 != null ? chatAvatarContainer7.getTimeItem() : null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_secretTimerBackground"));
        ChatAvatarContainer chatAvatarContainer8 = this.avatarContainer;
        arrayList.add(new ThemeDescription(chatAvatarContainer8 != null ? chatAvatarContainer8.getTimeItem() : null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_secretTimerText"));
        $$Lambda$ChatActivity$863zurfR5_Z5_h_r36mEI0_c r75 = r10;
        arrayList.add(new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, r75, "chat_attachGalleryIcon"));
        arrayList.add(new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, r75, "chat_attachGalleryBackground"));
        arrayList.add(new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, r75, "chat_attachGalleryText"));
        arrayList.add(new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, r75, "chat_attachAudioIcon"));
        arrayList.add(new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, r75, "chat_attachAudioBackground"));
        arrayList.add(new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, r75, "chat_attachAudioText"));
        arrayList.add(new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, r75, "chat_attachFileIcon"));
        arrayList.add(new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, r75, "chat_attachFileBackground"));
        arrayList.add(new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, r75, "chat_attachFileText"));
        arrayList.add(new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, r75, "chat_attachContactIcon"));
        arrayList.add(new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, r75, "chat_attachContactBackground"));
        arrayList.add(new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, r75, "chat_attachContactText"));
        arrayList.add(new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, r75, "chat_attachLocationIcon"));
        arrayList.add(new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, r75, "chat_attachLocationBackground"));
        arrayList.add(new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, r75, "chat_attachLocationText"));
        arrayList.add(new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, r75, "chat_attachPollIcon"));
        arrayList.add(new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, r75, "chat_attachPollBackground"));
        arrayList.add(new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, r75, "chat_attachPollText"));
        arrayList.add(new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, new Drawable[]{Theme.chat_attachEmptyDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_attachEmptyImage"));
        arrayList.add(new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, r75, "chat_attachPhotoBackground"));
        arrayList.add(new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, r75, "dialogBackground"));
        arrayList.add(new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, r75, "dialogBackgroundGray"));
        arrayList.add(new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, r75, "dialogTextGray2"));
        arrayList.add(new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, r75, "dialogScrollGlow"));
        arrayList.add(new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, r75, "dialogGrayLine"));
        arrayList.add(new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, r75, "dialogCameraIcon"));
        arrayList.add(new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, r75, "dialogButtonSelector"));
        arrayList.add(new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "windowBackgroundWhiteLinkSelection"));
        arrayList.add(new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "windowBackgroundWhiteInputField"));
        arrayList.add(new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_outTextSelectionHighlight"));
        arrayList.add(new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_inTextSelectionHighlight"));
        arrayList.add(new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "chat_TextSelectionCursor"));
        arrayList.add(new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "voipgroup_overlayGreen1"));
        arrayList.add(new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "voipgroup_overlayGreen2"));
        arrayList.add(new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "voipgroup_overlayBlue1"));
        arrayList.add(new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "voipgroup_overlayBlue2"));
        arrayList.add(new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "voipgroup_topPanelGreen1"));
        arrayList.add(new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "voipgroup_topPanelGreen2"));
        arrayList.add(new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "voipgroup_topPanelBlue1"));
        arrayList.add(new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "voipgroup_topPanelBlue2"));
        arrayList.add(new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "voipgroup_topPanelGray"));
        arrayList.add(new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "voipgroup_overlayAlertGradientMuted"));
        arrayList.add(new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "voipgroup_overlayAlertGradientMuted2"));
        arrayList.add(new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "voipgroup_overlayAlertGradientUnmuted"));
        arrayList.add(new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "voipgroup_overlayAlertGradientUnmuted2"));
        arrayList.add(new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "voipgroup_mutedByAdminGradient"));
        arrayList.add(new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "voipgroup_mutedByAdminGradient2"));
        arrayList.add(new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "voipgroup_mutedByAdminGradient3"));
        arrayList.add(new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "voipgroup_overlayAlertMutedByAdmin"));
        arrayList.add(new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, "kvoipgroup_overlayAlertMutedByAdmin2"));
        return arrayList;
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$getThemeDescriptions$157 */
    public /* synthetic */ void lambda$getThemeDescriptions$157$ChatActivity() {
        updateVisibleRows();
        ChatActivityEnterView chatActivityEnterView2 = this.chatActivityEnterView;
        if (chatActivityEnterView2 != null) {
            chatActivityEnterView2.updateColors();
        }
        Theme.refreshAttachButtonsColors();
        ChatAttachAlert chatAttachAlert2 = this.chatAttachAlert;
        if (chatAttachAlert2 != null) {
            chatAttachAlert2.checkColors();
        }
        RecyclerListView recyclerListView = this.chatListView;
        int i = 0;
        if (recyclerListView != null) {
            int childCount = recyclerListView.getChildCount();
            for (int i2 = 0; i2 < childCount; i2++) {
                View childAt = this.chatListView.getChildAt(i2);
                if (childAt instanceof ChatMessageCell) {
                    ((ChatMessageCell) childAt).createSelectorDrawable(0);
                }
            }
        }
        RecyclerListView recyclerListView2 = this.messagesSearchListView;
        if (recyclerListView2 != null) {
            int childCount2 = recyclerListView2.getChildCount();
            for (int i3 = 0; i3 < childCount2; i3++) {
                View childAt2 = this.messagesSearchListView.getChildAt(i3);
                if (childAt2 instanceof DialogCell) {
                    ((DialogCell) childAt2).update(0);
                }
            }
        }
        if (this.scrimPopupWindowItems != null) {
            while (true) {
                ActionBarMenuSubItem[] actionBarMenuSubItemArr = this.scrimPopupWindowItems;
                if (i >= actionBarMenuSubItemArr.length) {
                    break;
                }
                actionBarMenuSubItemArr[i].setColors(Theme.getColor("actionBarDefaultSubmenuItem"), Theme.getColor("actionBarDefaultSubmenuItemIcon"));
                this.scrimPopupWindowItems[i].setSelectorColor(Theme.getColor("dialogButtonSelector"));
                i++;
            }
        }
        ActionBarPopupWindow actionBarPopupWindow = this.scrimPopupWindow;
        if (actionBarPopupWindow != null) {
            View contentView2 = actionBarPopupWindow.getContentView();
            contentView2.setBackgroundColor(Theme.getColor("actionBarDefaultSubmenuBackground"));
            contentView2.invalidate();
        }
        InstantCameraView instantCameraView2 = this.instantCameraView;
        if (instantCameraView2 != null) {
            instantCameraView2.invalidateBlur();
        }
        PinnedLineView pinnedLineView2 = this.pinnedLineView;
        if (pinnedLineView2 != null) {
            pinnedLineView2.updateColors();
        }
        ChatActivityEnterTopView chatActivityEnterTopView2 = this.chatActivityEnterTopView;
        if (chatActivityEnterTopView2 != null && chatActivityEnterTopView2.getEditView() != null) {
            this.chatActivityEnterTopView.getEditView().updateColors();
        }
    }
}
