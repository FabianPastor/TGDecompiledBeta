package org.telegram.ui;

import android.animation.Animator;
import android.animation.AnimatorListenerAdapter;
import android.animation.AnimatorSet;
import android.animation.ObjectAnimator;
import android.annotation.TargetApi;
import android.app.Activity;
import android.app.DatePickerDialog;
import android.app.DatePickerDialog.OnDateSetListener;
import android.app.Dialog;
import android.content.ClipData;
import android.content.ClipData.Item;
import android.content.ClipboardManager;
import android.content.ContentResolver;
import android.content.Context;
import android.content.DialogInterface;
import android.content.DialogInterface.OnClickListener;
import android.content.DialogInterface.OnShowListener;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.content.res.Configuration;
import android.content.res.Resources;
import android.database.Cursor;
import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.graphics.Outline;
import android.graphics.Paint;
import android.graphics.Path;
import android.graphics.Path.Direction;
import android.graphics.Point;
import android.graphics.PorterDuff.Mode;
import android.graphics.PorterDuffColorFilter;
import android.graphics.PorterDuffXfermode;
import android.graphics.drawable.Drawable;
import android.media.ThumbnailUtils;
import android.net.Uri;
import android.os.Build.VERSION;
import android.os.Bundle;
import android.provider.ContactsContract.Contacts;
import android.support.v4.content.FileProvider;
import android.text.Spannable;
import android.text.SpannableString;
import android.text.SpannableStringBuilder;
import android.text.TextPaint;
import android.text.TextUtils;
import android.text.TextUtils.TruncateAt;
import android.text.style.CharacterStyle;
import android.text.style.ClickableSpan;
import android.text.style.ForegroundColorSpan;
import android.text.style.URLSpan;
import android.util.LongSparseArray;
import android.util.SparseArray;
import android.util.SparseBooleanArray;
import android.util.SparseIntArray;
import android.view.Menu;
import android.view.MotionEvent;
import android.view.TextureView;
import android.view.View;
import android.view.View.MeasureSpec;
import android.view.View.OnClickListener;
import android.view.View.OnLongClickListener;
import android.view.View.OnTouchListener;
import android.view.ViewGroup;
import android.view.ViewGroup.LayoutParams;
import android.view.ViewOutlineProvider;
import android.view.ViewParent;
import android.view.ViewTreeObserver;
import android.view.ViewTreeObserver.OnPreDrawListener;
import android.view.animation.DecelerateInterpolator;
import android.widget.DatePicker;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.FrameLayout.LayoutParams;
import android.widget.ImageView;
import android.widget.ImageView.ScaleType;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.Toast;
import java.io.File;
import java.net.URLDecoder;
import java.security.SecureRandom;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collection;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.CountDownLatch;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import org.telegram.PhoneFormat.PhoneFormat;
import org.telegram.messenger.AndroidUtilities;
import org.telegram.messenger.ApplicationLoader;
import org.telegram.messenger.BuildVars;
import org.telegram.messenger.ChatObject;
import org.telegram.messenger.ContactsController;
import org.telegram.messenger.DataQuery;
import org.telegram.messenger.DispatchQueue;
import org.telegram.messenger.DownloadController;
import org.telegram.messenger.Emoji;
import org.telegram.messenger.EmojiSuggestion;
import org.telegram.messenger.FileLoader;
import org.telegram.messenger.FileLog;
import org.telegram.messenger.ImageReceiver;
import org.telegram.messenger.ImageReceiver.BitmapHolder;
import org.telegram.messenger.LocaleController;
import org.telegram.messenger.MediaController;
import org.telegram.messenger.MediaController.PhotoEntry;
import org.telegram.messenger.MessageObject;
import org.telegram.messenger.MessageObject.GroupedMessagePosition;
import org.telegram.messenger.MessageObject.GroupedMessages;
import org.telegram.messenger.MessagesController;
import org.telegram.messenger.MessagesStorage;
import org.telegram.messenger.MessagesStorage.IntCallback;
import org.telegram.messenger.NotificationCenter;
import org.telegram.messenger.NotificationCenter.NotificationCenterDelegate;
import org.telegram.messenger.NotificationsController;
import org.telegram.messenger.SendMessagesHelper;
import org.telegram.messenger.SendMessagesHelper.SendingMediaInfo;
import org.telegram.messenger.SharedConfig;
import org.telegram.messenger.UserConfig;
import org.telegram.messenger.UserObject;
import org.telegram.messenger.Utilities;
import org.telegram.messenger.VideoEditedInfo;
import org.telegram.messenger.browser.Browser;
import org.telegram.messenger.exoplayer2.ui.AspectRatioFrameLayout;
import org.telegram.messenger.support.SparseLongArray;
import org.telegram.messenger.support.widget.GridLayoutManager.SpanSizeLookup;
import org.telegram.messenger.support.widget.GridLayoutManagerFixed;
import org.telegram.messenger.support.widget.LinearLayoutManager;
import org.telegram.messenger.support.widget.LinearSmoothScrollerMiddle;
import org.telegram.messenger.support.widget.RecyclerView;
import org.telegram.messenger.support.widget.RecyclerView.Adapter;
import org.telegram.messenger.support.widget.RecyclerView.ItemDecoration;
import org.telegram.messenger.support.widget.RecyclerView.LayoutManager;
import org.telegram.messenger.support.widget.RecyclerView.LayoutParams;
import org.telegram.messenger.support.widget.RecyclerView.OnScrollListener;
import org.telegram.messenger.support.widget.RecyclerView.State;
import org.telegram.messenger.support.widget.RecyclerView.ViewHolder;
import org.telegram.tgnet.ConnectionsManager;
import org.telegram.tgnet.RequestDelegate;
import org.telegram.tgnet.TLObject;
import org.telegram.tgnet.TLRPC.BotInfo;
import org.telegram.tgnet.TLRPC.BotInlineResult;
import org.telegram.tgnet.TLRPC.Chat;
import org.telegram.tgnet.TLRPC.ChatFull;
import org.telegram.tgnet.TLRPC.ChatParticipant;
import org.telegram.tgnet.TLRPC.ChatParticipants;
import org.telegram.tgnet.TLRPC.Document;
import org.telegram.tgnet.TLRPC.DocumentAttribute;
import org.telegram.tgnet.TLRPC.DraftMessage;
import org.telegram.tgnet.TLRPC.EncryptedChat;
import org.telegram.tgnet.TLRPC.FileLocation;
import org.telegram.tgnet.TLRPC.InputStickerSet;
import org.telegram.tgnet.TLRPC.InputUser;
import org.telegram.tgnet.TLRPC.KeyboardButton;
import org.telegram.tgnet.TLRPC.Message;
import org.telegram.tgnet.TLRPC.MessageAction;
import org.telegram.tgnet.TLRPC.MessageEntity;
import org.telegram.tgnet.TLRPC.MessageFwdHeader;
import org.telegram.tgnet.TLRPC.MessageMedia;
import org.telegram.tgnet.TLRPC.Peer;
import org.telegram.tgnet.TLRPC.PhotoSize;
import org.telegram.tgnet.TLRPC.ReplyMarkup;
import org.telegram.tgnet.TLRPC.TL_botCommand;
import org.telegram.tgnet.TLRPC.TL_channelAdminRights;
import org.telegram.tgnet.TLRPC.TL_channelBannedRights;
import org.telegram.tgnet.TLRPC.TL_channelForbidden;
import org.telegram.tgnet.TLRPC.TL_channelFull;
import org.telegram.tgnet.TLRPC.TL_channelParticipantAdmin;
import org.telegram.tgnet.TLRPC.TL_channelParticipantCreator;
import org.telegram.tgnet.TLRPC.TL_channels_channelParticipant;
import org.telegram.tgnet.TLRPC.TL_channels_exportMessageLink;
import org.telegram.tgnet.TLRPC.TL_channels_getParticipant;
import org.telegram.tgnet.TLRPC.TL_channels_reportSpam;
import org.telegram.tgnet.TLRPC.TL_chatForbidden;
import org.telegram.tgnet.TLRPC.TL_chatFull;
import org.telegram.tgnet.TLRPC.TL_chatParticipantsForbidden;
import org.telegram.tgnet.TLRPC.TL_decryptedMessageActionSetMessageTTL;
import org.telegram.tgnet.TLRPC.TL_dialog;
import org.telegram.tgnet.TLRPC.TL_document;
import org.telegram.tgnet.TLRPC.TL_documentAttributeImageSize;
import org.telegram.tgnet.TLRPC.TL_documentAttributeVideo;
import org.telegram.tgnet.TLRPC.TL_documentEmpty;
import org.telegram.tgnet.TLRPC.TL_encryptedChat;
import org.telegram.tgnet.TLRPC.TL_encryptedChatDiscarded;
import org.telegram.tgnet.TLRPC.TL_encryptedChatRequested;
import org.telegram.tgnet.TLRPC.TL_encryptedChatWaiting;
import org.telegram.tgnet.TLRPC.TL_error;
import org.telegram.tgnet.TLRPC.TL_exportedMessageLink;
import org.telegram.tgnet.TLRPC.TL_fileLocationUnavailable;
import org.telegram.tgnet.TLRPC.TL_game;
import org.telegram.tgnet.TLRPC.TL_inlineBotSwitchPM;
import org.telegram.tgnet.TLRPC.TL_inputMessageEntityMentionName;
import org.telegram.tgnet.TLRPC.TL_inputStickerSetID;
import org.telegram.tgnet.TLRPC.TL_inputStickerSetShortName;
import org.telegram.tgnet.TLRPC.TL_keyboardButtonBuy;
import org.telegram.tgnet.TLRPC.TL_keyboardButtonCallback;
import org.telegram.tgnet.TLRPC.TL_keyboardButtonGame;
import org.telegram.tgnet.TLRPC.TL_keyboardButtonRow;
import org.telegram.tgnet.TLRPC.TL_keyboardButtonSwitchInline;
import org.telegram.tgnet.TLRPC.TL_keyboardButtonUrl;
import org.telegram.tgnet.TLRPC.TL_message;
import org.telegram.tgnet.TLRPC.TL_messageActionChatAddUser;
import org.telegram.tgnet.TLRPC.TL_messageActionChatDeleteUser;
import org.telegram.tgnet.TLRPC.TL_messageActionChatMigrateTo;
import org.telegram.tgnet.TLRPC.TL_messageActionEmpty;
import org.telegram.tgnet.TLRPC.TL_messageActionGameScore;
import org.telegram.tgnet.TLRPC.TL_messageActionPaymentSent;
import org.telegram.tgnet.TLRPC.TL_messageActionPhoneCall;
import org.telegram.tgnet.TLRPC.TL_messageActionPinMessage;
import org.telegram.tgnet.TLRPC.TL_messageEncryptedAction;
import org.telegram.tgnet.TLRPC.TL_messageEntityBold;
import org.telegram.tgnet.TLRPC.TL_messageEntityCode;
import org.telegram.tgnet.TLRPC.TL_messageEntityItalic;
import org.telegram.tgnet.TLRPC.TL_messageEntityMentionName;
import org.telegram.tgnet.TLRPC.TL_messageEntityPre;
import org.telegram.tgnet.TLRPC.TL_messageMediaGame;
import org.telegram.tgnet.TLRPC.TL_messageMediaPhoto;
import org.telegram.tgnet.TLRPC.TL_messageMediaWebPage;
import org.telegram.tgnet.TLRPC.TL_messages_getMessageEditData;
import org.telegram.tgnet.TLRPC.TL_messages_getUnreadMentions;
import org.telegram.tgnet.TLRPC.TL_messages_getWebPagePreview;
import org.telegram.tgnet.TLRPC.TL_messages_readMentions;
import org.telegram.tgnet.TLRPC.TL_peerNotifySettings;
import org.telegram.tgnet.TLRPC.TL_phoneCallDiscardReasonBusy;
import org.telegram.tgnet.TLRPC.TL_phoneCallDiscardReasonMissed;
import org.telegram.tgnet.TLRPC.TL_photoEmpty;
import org.telegram.tgnet.TLRPC.TL_photoSizeEmpty;
import org.telegram.tgnet.TLRPC.TL_replyInlineMarkup;
import org.telegram.tgnet.TLRPC.TL_replyKeyboardForceReply;
import org.telegram.tgnet.TLRPC.TL_user;
import org.telegram.tgnet.TLRPC.TL_userFull;
import org.telegram.tgnet.TLRPC.TL_webPage;
import org.telegram.tgnet.TLRPC.TL_webPageEmpty;
import org.telegram.tgnet.TLRPC.TL_webPagePending;
import org.telegram.tgnet.TLRPC.TL_webPageUrlPending;
import org.telegram.tgnet.TLRPC.User;
import org.telegram.tgnet.TLRPC.WebDocument;
import org.telegram.tgnet.TLRPC.WebPage;
import org.telegram.tgnet.TLRPC.messages_Messages;
import org.telegram.ui.ActionBar.ActionBar;
import org.telegram.ui.ActionBar.ActionBar.ActionBarMenuOnItemClick;
import org.telegram.ui.ActionBar.ActionBarLayout;
import org.telegram.ui.ActionBar.ActionBarMenu;
import org.telegram.ui.ActionBar.ActionBarMenuItem;
import org.telegram.ui.ActionBar.ActionBarMenuItem.ActionBarMenuItemSearchListener;
import org.telegram.ui.ActionBar.AlertDialog;
import org.telegram.ui.ActionBar.AlertDialog.Builder;
import org.telegram.ui.ActionBar.BackDrawable;
import org.telegram.ui.ActionBar.BaseFragment;
import org.telegram.ui.ActionBar.BottomSheet.Builder;
import org.telegram.ui.ActionBar.SimpleTextView;
import org.telegram.ui.ActionBar.Theme;
import org.telegram.ui.ActionBar.Theme.ThemeInfo;
import org.telegram.ui.ActionBar.ThemeDescription.ThemeDescriptionDelegate;
import org.telegram.ui.Adapters.MentionsAdapter;
import org.telegram.ui.Adapters.MentionsAdapter.MentionsAdapterDelegate;
import org.telegram.ui.Adapters.StickersAdapter;
import org.telegram.ui.Adapters.StickersAdapter.StickersAdapterDelegate;
import org.telegram.ui.Cells.BotHelpCell;
import org.telegram.ui.Cells.BotHelpCell.BotHelpCellDelegate;
import org.telegram.ui.Cells.ChatActionCell;
import org.telegram.ui.Cells.ChatActionCell.ChatActionCellDelegate;
import org.telegram.ui.Cells.ChatLoadingCell;
import org.telegram.ui.Cells.ChatMessageCell;
import org.telegram.ui.Cells.ChatMessageCell.ChatMessageCellDelegate;
import org.telegram.ui.Cells.ChatUnreadCell;
import org.telegram.ui.Cells.CheckBoxCell;
import org.telegram.ui.Cells.ContextLinkCell;
import org.telegram.ui.Components.AlertsCreator;
import org.telegram.ui.Components.BackupImageView;
import org.telegram.ui.Components.ChatActivityEnterView;
import org.telegram.ui.Components.ChatActivityEnterView.ChatActivityEnterViewDelegate;
import org.telegram.ui.Components.ChatAttachAlert;
import org.telegram.ui.Components.ChatAttachAlert.ChatAttachViewDelegate;
import org.telegram.ui.Components.ChatAvatarContainer;
import org.telegram.ui.Components.ChatBigEmptyView;
import org.telegram.ui.Components.CombinedDrawable;
import org.telegram.ui.Components.CorrectlyMeasuringTextView;
import org.telegram.ui.Components.EditTextBoldCursor;
import org.telegram.ui.Components.EmbedBottomSheet;
import org.telegram.ui.Components.EmojiView;
import org.telegram.ui.Components.ExtendedGridLayoutManager;
import org.telegram.ui.Components.FragmentContextView;
import org.telegram.ui.Components.InstantCameraView;
import org.telegram.ui.Components.LayoutHelper;
import org.telegram.ui.Components.NumberTextView;
import org.telegram.ui.Components.PipRoundVideoView;
import org.telegram.ui.Components.RadialProgressView;
import org.telegram.ui.Components.RecyclerListView;
import org.telegram.ui.Components.RecyclerListView.Holder;
import org.telegram.ui.Components.RecyclerListView.OnItemClickListener;
import org.telegram.ui.Components.RecyclerListView.OnItemClickListenerExtended;
import org.telegram.ui.Components.RecyclerListView.OnItemLongClickListener;
import org.telegram.ui.Components.RecyclerListView.OnItemLongClickListenerExtended;
import org.telegram.ui.Components.ShareAlert;
import org.telegram.ui.Components.Size;
import org.telegram.ui.Components.SizeNotifierFrameLayout;
import org.telegram.ui.Components.StickersAlert;
import org.telegram.ui.Components.StickersAlert.StickersAlertDelegate;
import org.telegram.ui.Components.TypefaceSpan;
import org.telegram.ui.Components.URLSpanBotCommand;
import org.telegram.ui.Components.URLSpanMono;
import org.telegram.ui.Components.URLSpanNoUnderline;
import org.telegram.ui.Components.URLSpanReplacement;
import org.telegram.ui.Components.URLSpanUserMention;
import org.telegram.ui.Components.voip.VoIPHelper;

public class ChatActivity
  extends BaseFragment
  implements NotificationCenter.NotificationCenterDelegate, DialogsActivity.DialogsActivityDelegate, LocationActivity.LocationActivityDelegate
{
  private static final int add_shortcut = 24;
  private static final int attach_audio = 3;
  private static final int attach_contact = 5;
  private static final int attach_document = 4;
  private static final int attach_gallery = 1;
  private static final int attach_location = 6;
  private static final int attach_photo = 0;
  private static final int attach_video = 2;
  private static final int bot_help = 30;
  private static final int bot_settings = 31;
  private static final int call = 32;
  private static final int chat_enc_timer = 13;
  private static final int chat_menu_attach = 14;
  private static final int clear_history = 15;
  private static final int copy = 10;
  private static final int delete = 12;
  private static final int delete_chat = 16;
  private static final int edit = 23;
  private static final int forward = 11;
  private static final int id_chat_compose_panel = 1000;
  private static final int mute = 18;
  private static final int reply = 19;
  private static final int report = 21;
  private static final int search = 40;
  private static final int share_contact = 17;
  private static final int star = 22;
  private SimpleTextView actionModeSubTextView;
  private SimpleTextView actionModeTextView;
  private FrameLayout actionModeTitleContainer;
  private ArrayList<View> actionModeViews = new ArrayList();
  private TextView addContactItem;
  private TextView addToContactsButton;
  private TextView alertNameTextView;
  private TextView alertTextView;
  private FrameLayout alertView;
  private AnimatorSet alertViewAnimator;
  private boolean allowContextBotPanel;
  private boolean allowContextBotPanelSecond = true;
  private boolean allowStickersPanel;
  private ArrayList<MessageObject> animatingMessageObjects = new ArrayList();
  private Paint aspectPaint;
  private Path aspectPath;
  private AspectRatioFrameLayout aspectRatioFrameLayout;
  private ActionBarMenuItem attachItem;
  private ChatAvatarContainer avatarContainer;
  private ChatBigEmptyView bigEmptyView;
  private MessageObject botButtons;
  private PhotoViewer.PhotoViewerProvider botContextProvider = new PhotoViewer.EmptyPhotoViewerProvider()
  {
    public PhotoViewer.PlaceProviderObject getPlaceForPhoto(MessageObject paramAnonymousMessageObject, TLRPC.FileLocation paramAnonymousFileLocation, int paramAnonymousInt)
    {
      paramAnonymousFileLocation = null;
      int i = 0;
      paramAnonymousMessageObject = paramAnonymousFileLocation;
      if (paramAnonymousInt >= 0)
      {
        if (paramAnonymousInt >= ChatActivity.this.botContextResults.size()) {
          paramAnonymousMessageObject = paramAnonymousFileLocation;
        }
      }
      else {
        return paramAnonymousMessageObject;
      }
      int j = ChatActivity.this.mentionListView.getChildCount();
      Object localObject = ChatActivity.this.botContextResults.get(paramAnonymousInt);
      for (paramAnonymousInt = 0;; paramAnonymousInt++)
      {
        paramAnonymousMessageObject = paramAnonymousFileLocation;
        if (paramAnonymousInt >= j) {
          break;
        }
        int[] arrayOfInt = null;
        View localView = ChatActivity.this.mentionListView.getChildAt(paramAnonymousInt);
        paramAnonymousMessageObject = arrayOfInt;
        if ((localView instanceof ContextLinkCell))
        {
          ContextLinkCell localContextLinkCell = (ContextLinkCell)localView;
          paramAnonymousMessageObject = arrayOfInt;
          if (localContextLinkCell.getResult() == localObject) {
            paramAnonymousMessageObject = localContextLinkCell.getPhotoImage();
          }
        }
        if (paramAnonymousMessageObject != null)
        {
          arrayOfInt = new int[2];
          localView.getLocationInWindow(arrayOfInt);
          paramAnonymousFileLocation = new PhotoViewer.PlaceProviderObject();
          paramAnonymousFileLocation.viewX = arrayOfInt[0];
          j = arrayOfInt[1];
          if (Build.VERSION.SDK_INT >= 21) {}
          for (paramAnonymousInt = i;; paramAnonymousInt = AndroidUtilities.statusBarHeight)
          {
            paramAnonymousFileLocation.viewY = (j - paramAnonymousInt);
            paramAnonymousFileLocation.parentView = ChatActivity.this.mentionListView;
            paramAnonymousFileLocation.imageReceiver = paramAnonymousMessageObject;
            paramAnonymousFileLocation.thumb = paramAnonymousMessageObject.getBitmapSafe();
            paramAnonymousFileLocation.radius = paramAnonymousMessageObject.getRoundRadius();
            paramAnonymousMessageObject = paramAnonymousFileLocation;
            break;
          }
        }
      }
    }
    
    public void sendButtonPressed(int paramAnonymousInt, VideoEditedInfo paramAnonymousVideoEditedInfo)
    {
      if ((paramAnonymousInt < 0) || (paramAnonymousInt >= ChatActivity.this.botContextResults.size())) {}
      for (;;)
      {
        return;
        ChatActivity.this.sendBotInlineResult((TLRPC.BotInlineResult)ChatActivity.this.botContextResults.get(paramAnonymousInt));
      }
    }
  };
  private ArrayList<Object> botContextResults;
  private SparseArray<TLRPC.BotInfo> botInfo = new SparseArray();
  private MessageObject botReplyButtons;
  private String botUser;
  private int botsCount;
  private FrameLayout bottomOverlay;
  private FrameLayout bottomOverlayChat;
  private TextView bottomOverlayChatText;
  private TextView bottomOverlayText;
  private boolean[] cacheEndReached = new boolean[2];
  private int canEditMessagesCount;
  private int cantDeleteMessagesCount;
  protected ChatActivityEnterView chatActivityEnterView;
  private ChatActivityAdapter chatAdapter;
  private ChatAttachAlert chatAttachAlert;
  private long chatEnterTime;
  private GridLayoutManagerFixed chatLayoutManager;
  private long chatLeaveTime;
  private RecyclerListView chatListView;
  private boolean chatListViewIgnoreLayout;
  private ArrayList<ChatMessageCell> chatMessageCellsCache = new ArrayList();
  private boolean checkTextureViewPosition;
  private Dialog closeChatDialog;
  private ImageView closePinned;
  private ImageView closeReportSpam;
  private SizeNotifierFrameLayout contentView;
  private int createUnreadMessageAfterId;
  private boolean createUnreadMessageAfterIdLoading;
  protected TLRPC.Chat currentChat;
  protected TLRPC.EncryptedChat currentEncryptedChat;
  private boolean currentFloatingDateOnScreen;
  private boolean currentFloatingTopIsNotMessage;
  private String currentPicturePath;
  protected TLRPC.User currentUser;
  private long dialog_id;
  private ChatMessageCell drawLaterRoundProgressCell;
  private int editingMessageObjectReqId;
  private View emojiButtonRed;
  private TextView emptyView;
  private FrameLayout emptyViewContainer;
  private boolean[] endReached = new boolean[2];
  private boolean first = true;
  private boolean firstLoading = true;
  private boolean firstUnreadSent = false;
  private int first_unread_id;
  private boolean fixPaddingsInLayout;
  private AnimatorSet floatingDateAnimation;
  private ChatActionCell floatingDateView;
  private boolean forceScrollToTop;
  private boolean[] forwardEndReached = { 1, 1 };
  private MessageObject forwardingMessage;
  private MessageObject.GroupedMessages forwardingMessageGroup;
  private ArrayList<MessageObject> forwardingMessages;
  private ArrayList<CharSequence> foundUrls;
  private TLRPC.WebPage foundWebPage;
  private FragmentContextView fragmentContextView;
  private FragmentContextView fragmentLocationContextView;
  private TextView gifHintTextView;
  private boolean globalIgnoreLayout;
  private LongSparseArray<MessageObject.GroupedMessages> groupedMessagesMap = new LongSparseArray();
  private boolean hasAllMentionsLocal;
  private boolean hasBotsCommands;
  private boolean hasUnfavedSelected;
  private ActionBarMenuItem headerItem;
  private Runnable hideAlertViewRunnable;
  private int highlightMessageId = Integer.MAX_VALUE;
  private boolean ignoreAttachOnPause;
  protected TLRPC.ChatFull info;
  private long inlineReturn;
  private InstantCameraView instantCameraView;
  private boolean isBroadcast;
  private int lastLoadIndex;
  private int last_message_id = 0;
  private int linkSearchRequestId;
  private boolean loading;
  private boolean loadingForward;
  private boolean loadingFromOldPosition;
  private int loadingPinnedMessage;
  private int loadsCount;
  private int[] maxDate = { Integer.MIN_VALUE, Integer.MIN_VALUE };
  private int[] maxMessageId = { Integer.MAX_VALUE, Integer.MAX_VALUE };
  private TextView mediaBanTooltip;
  private FrameLayout mentionContainer;
  private ExtendedGridLayoutManager mentionGridLayoutManager;
  private LinearLayoutManager mentionLayoutManager;
  private AnimatorSet mentionListAnimation;
  private RecyclerListView mentionListView;
  private boolean mentionListViewIgnoreLayout;
  private boolean mentionListViewIsScrolling;
  private int mentionListViewLastViewPosition;
  private int mentionListViewLastViewTop;
  private int mentionListViewScrollOffsetY;
  private FrameLayout mentiondownButton;
  private ObjectAnimator mentiondownButtonAnimation;
  private TextView mentiondownButtonCounter;
  private ImageView mentiondownButtonImage;
  private MentionsAdapter mentionsAdapter;
  private RecyclerListView.OnItemClickListener mentionsOnItemClickListener;
  private long mergeDialogId;
  protected ArrayList<MessageObject> messages = new ArrayList();
  private HashMap<String, ArrayList<MessageObject>> messagesByDays = new HashMap();
  private SparseArray<MessageObject>[] messagesDict = { new SparseArray(), new SparseArray() };
  private int[] minDate = new int[2];
  private int[] minMessageId = { Integer.MIN_VALUE, Integer.MIN_VALUE };
  private TextView muteItem;
  private MessageObject needAnimateToMessage;
  private boolean needSelectFromMessageId;
  private int newMentionsCount;
  private int newUnreadMessageCount;
  RecyclerListView.OnItemClickListenerExtended onItemClickListener = new RecyclerListView.OnItemClickListenerExtended()
  {
    public void onItemClick(View paramAnonymousView, int paramAnonymousInt, float paramAnonymousFloat1, float paramAnonymousFloat2)
    {
      ChatActivity.access$602(ChatActivity.this, true);
      boolean bool;
      if (ChatActivity.this.actionBar.isActionModeShowed())
      {
        bool = false;
        if ((paramAnonymousView instanceof ChatMessageCell))
        {
          if (!((ChatMessageCell)paramAnonymousView).isInsideBackground(paramAnonymousFloat1, paramAnonymousFloat2)) {
            bool = true;
          }
        }
        else {
          ChatActivity.this.processRowSelect(paramAnonymousView, bool);
        }
      }
      for (;;)
      {
        return;
        bool = false;
        break;
        ChatActivity.this.createMenu(paramAnonymousView, true, false);
      }
    }
  };
  RecyclerListView.OnItemLongClickListenerExtended onItemLongClickListener = new RecyclerListView.OnItemLongClickListenerExtended()
  {
    public boolean onItemClick(View paramAnonymousView, int paramAnonymousInt, float paramAnonymousFloat1, float paramAnonymousFloat2)
    {
      ChatActivity.access$602(ChatActivity.this, true);
      if (!ChatActivity.this.actionBar.isActionModeShowed())
      {
        ChatActivity.this.createMenu(paramAnonymousView, false, true);
        return true;
      }
      boolean bool = false;
      if ((paramAnonymousView instanceof ChatMessageCell)) {
        if (((ChatMessageCell)paramAnonymousView).isInsideBackground(paramAnonymousFloat1, paramAnonymousFloat2)) {
          break label73;
        }
      }
      label73:
      for (bool = true;; bool = false)
      {
        ChatActivity.this.processRowSelect(paramAnonymousView, bool);
        break;
      }
    }
  };
  private boolean openAnimationEnded;
  private boolean openSearchKeyboard;
  private View overlayView;
  private FrameLayout pagedownButton;
  private AnimatorSet pagedownButtonAnimation;
  private TextView pagedownButtonCounter;
  private ImageView pagedownButtonImage;
  private boolean pagedownButtonShowedByScroll;
  private boolean paused = true;
  private boolean pausedOnLastMessage;
  private String pendingLinkSearchString;
  private Runnable pendingWebPageTimeoutRunnable;
  private PhotoViewer.PhotoViewerProvider photoViewerProvider = new PhotoViewer.EmptyPhotoViewerProvider()
  {
    public PhotoViewer.PlaceProviderObject getPlaceForPhoto(MessageObject paramAnonymousMessageObject, TLRPC.FileLocation paramAnonymousFileLocation, int paramAnonymousInt)
    {
      int i = ChatActivity.this.chatListView.getChildCount();
      paramAnonymousInt = 0;
      Object localObject1;
      View localView;
      Object localObject2;
      Object localObject3;
      MessageObject localMessageObject;
      label98:
      int j;
      if (paramAnonymousInt < i)
      {
        localObject1 = null;
        localView = ChatActivity.this.chatListView.getChildAt(paramAnonymousInt);
        if ((localView instanceof ChatMessageCell))
        {
          localObject2 = localObject1;
          if (paramAnonymousMessageObject != null)
          {
            localObject3 = (ChatMessageCell)localView;
            localMessageObject = ((ChatMessageCell)localObject3).getMessageObject();
            localObject2 = localObject1;
            if (localMessageObject != null)
            {
              localObject2 = localObject1;
              if (localMessageObject.getId() == paramAnonymousMessageObject.getId()) {
                localObject2 = ((ChatMessageCell)localObject3).getPhotoImage();
              }
            }
          }
          if (localObject2 == null) {
            break label456;
          }
          paramAnonymousMessageObject = new int[2];
          localView.getLocationInWindow(paramAnonymousMessageObject);
          paramAnonymousFileLocation = new PhotoViewer.PlaceProviderObject();
          paramAnonymousFileLocation.viewX = paramAnonymousMessageObject[0];
          j = paramAnonymousMessageObject[1];
          if (Build.VERSION.SDK_INT < 21) {
            break label449;
          }
          paramAnonymousInt = 0;
          label143:
          paramAnonymousFileLocation.viewY = (j - paramAnonymousInt);
          paramAnonymousFileLocation.parentView = ChatActivity.this.chatListView;
          paramAnonymousFileLocation.imageReceiver = ((ImageReceiver)localObject2);
          paramAnonymousFileLocation.thumb = ((ImageReceiver)localObject2).getBitmapSafe();
          paramAnonymousFileLocation.radius = ((ImageReceiver)localObject2).getRoundRadius();
          if (((localView instanceof ChatActionCell)) && (ChatActivity.this.currentChat != null)) {
            paramAnonymousFileLocation.dialogId = (-ChatActivity.this.currentChat.id);
          }
          if ((ChatActivity.this.pinnedMessageView == null) || (ChatActivity.this.pinnedMessageView.getTag() != null))
          {
            paramAnonymousMessageObject = paramAnonymousFileLocation;
            if (ChatActivity.this.reportSpamView != null)
            {
              paramAnonymousMessageObject = paramAnonymousFileLocation;
              if (ChatActivity.this.reportSpamView.getTag() != null) {}
            }
          }
          else
          {
            paramAnonymousFileLocation.clipTopAddition = AndroidUtilities.dp(48.0F);
          }
        }
      }
      for (paramAnonymousMessageObject = paramAnonymousFileLocation;; paramAnonymousMessageObject = null)
      {
        return paramAnonymousMessageObject;
        localObject2 = localObject1;
        if (!(localView instanceof ChatActionCell)) {
          break label98;
        }
        localObject3 = (ChatActionCell)localView;
        localMessageObject = ((ChatActionCell)localObject3).getMessageObject();
        localObject2 = localObject1;
        if (localMessageObject == null) {
          break label98;
        }
        if (paramAnonymousMessageObject != null)
        {
          localObject2 = localObject1;
          if (localMessageObject.getId() != paramAnonymousMessageObject.getId()) {
            break label98;
          }
          localObject2 = ((ChatActionCell)localObject3).getPhotoImage();
          break label98;
        }
        localObject2 = localObject1;
        if (paramAnonymousFileLocation == null) {
          break label98;
        }
        localObject2 = localObject1;
        if (localMessageObject.photoThumbs == null) {
          break label98;
        }
        for (j = 0;; j++)
        {
          localObject2 = localObject1;
          if (j >= localMessageObject.photoThumbs.size()) {
            break;
          }
          localObject2 = (TLRPC.PhotoSize)localMessageObject.photoThumbs.get(j);
          if ((((TLRPC.PhotoSize)localObject2).location.volume_id == paramAnonymousFileLocation.volume_id) && (((TLRPC.PhotoSize)localObject2).location.local_id == paramAnonymousFileLocation.local_id))
          {
            localObject2 = ((ChatActionCell)localObject3).getPhotoImage();
            break;
          }
        }
        label449:
        paramAnonymousInt = AndroidUtilities.statusBarHeight;
        break label143;
        label456:
        paramAnonymousInt++;
        break;
      }
    }
  };
  private TLRPC.FileLocation pinnedImageLocation;
  private View pinnedLineView;
  private BackupImageView pinnedMessageImageView;
  private SimpleTextView pinnedMessageNameTextView;
  private MessageObject pinnedMessageObject;
  private SimpleTextView pinnedMessageTextView;
  private FrameLayout pinnedMessageView;
  private AnimatorSet pinnedMessageViewAnimator;
  private RadialProgressView progressBar;
  private FrameLayout progressView;
  private View progressView2;
  private AnimatorSet replyButtonAnimation;
  private ImageView replyCloseImageView;
  private ImageView replyIconImageView;
  private TLRPC.FileLocation replyImageLocation;
  private BackupImageView replyImageView;
  private View replyLineView;
  private SimpleTextView replyNameTextView;
  private SimpleTextView replyObjectTextView;
  private MessageObject replyingMessageObject;
  private TextView reportSpamButton;
  private FrameLayout reportSpamContainer;
  private LinearLayout reportSpamView;
  private AnimatorSet reportSpamViewAnimator;
  private int returnToLoadIndex;
  private int returnToMessageId;
  private FrameLayout roundVideoContainer;
  private AnimatorSet runningAnimation;
  private MessageObject scrollToMessage;
  private int scrollToMessagePosition = 55536;
  private int scrollToOffsetOnRecreate = 0;
  private int scrollToPositionOnRecreate = -1;
  private boolean scrollToTopOnResume;
  private boolean scrollToTopUnReadOnResume;
  private boolean scrollingFloatingDate;
  private ImageView searchCalendarButton;
  private FrameLayout searchContainer;
  private SimpleTextView searchCountText;
  private ImageView searchDownButton;
  private ActionBarMenuItem searchItem;
  private ImageView searchUpButton;
  private ImageView searchUserButton;
  private boolean searchingForUser;
  private TLRPC.User searchingUserMessages;
  private SparseArray<MessageObject>[] selectedMessagesCanCopyIds = { new SparseArray(), new SparseArray() };
  private SparseArray<MessageObject>[] selectedMessagesCanStarIds = { new SparseArray(), new SparseArray() };
  private NumberTextView selectedMessagesCountTextView;
  private SparseArray<MessageObject>[] selectedMessagesIds = { new SparseArray(), new SparseArray() };
  private MessageObject selectedObject;
  private MessageObject.GroupedMessages selectedObjectGroup;
  private int startLoadFromMessageId;
  private int startLoadFromMessageOffset = Integer.MAX_VALUE;
  private boolean startReplyOnTextChange;
  private String startVideoEdit;
  private StickersAdapter stickersAdapter;
  private RecyclerListView stickersListView;
  private RecyclerListView.OnItemClickListener stickersOnItemClickListener;
  private FrameLayout stickersPanel;
  private ImageView stickersPanelArrow;
  private View timeItem2;
  private int topViewWasVisible;
  private MessageObject unreadMessageObject;
  private boolean userBlocked = false;
  private TextureView videoTextureView;
  private AnimatorSet voiceHintAnimation;
  private Runnable voiceHintHideRunnable;
  private TextView voiceHintTextView;
  private Runnable waitingForCharaterEnterRunnable;
  private ArrayList<Integer> waitingForLoad = new ArrayList();
  private boolean waitingForReplyMessageLoad;
  private boolean wasManualScroll;
  private boolean wasPaused;
  
  public ChatActivity(Bundle paramBundle)
  {
    super(paramBundle);
  }
  
  private void addToSelectedMessages(MessageObject paramMessageObject, boolean paramBoolean)
  {
    addToSelectedMessages(paramMessageObject, paramBoolean, true);
  }
  
  private void addToSelectedMessages(MessageObject paramMessageObject, boolean paramBoolean1, boolean paramBoolean2)
  {
    int i;
    int j;
    int k;
    final int m;
    final Object localObject1;
    if (paramMessageObject != null)
    {
      if (paramMessageObject.getDialogId() == this.dialog_id) {
        i = 0;
      }
      while ((paramBoolean1) && (paramMessageObject.getGroupId() != 0L))
      {
        j = 0;
        paramMessageObject = (MessageObject.GroupedMessages)this.groupedMessagesMap.get(paramMessageObject.getGroupId());
        if (paramMessageObject == null) {
          break label456;
        }
        k = 0;
        m = 0;
        for (;;)
        {
          if (m < paramMessageObject.messages.size())
          {
            localObject1 = (MessageObject)paramMessageObject.messages.get(m);
            if (this.selectedMessagesIds[i].indexOfKey(((MessageObject)localObject1).getId()) < 0)
            {
              j = 1;
              k = m;
            }
            m++;
            continue;
            i = 1;
            break;
          }
        }
        m = 0;
        if (m >= paramMessageObject.messages.size()) {
          break label456;
        }
        localObject1 = (MessageObject)paramMessageObject.messages.get(m);
        if (j != 0)
        {
          if (this.selectedMessagesIds[i].indexOfKey(((MessageObject)localObject1).getId()) < 0) {
            if (m != k) {
              break label198;
            }
          }
          label198:
          for (paramBoolean1 = true;; paramBoolean1 = false)
          {
            addToSelectedMessages((MessageObject)localObject1, false, paramBoolean1);
            m++;
            break;
          }
        }
        if (m == paramMessageObject.messages.size() - 1) {}
        for (paramBoolean1 = true;; paramBoolean1 = false)
        {
          addToSelectedMessages((MessageObject)localObject1, false, paramBoolean1);
          break;
        }
      }
      if (this.selectedMessagesIds[i].indexOfKey(paramMessageObject.getId()) < 0) {
        break label457;
      }
      this.selectedMessagesIds[i].remove(paramMessageObject.getId());
      if ((paramMessageObject.type == 0) || (paramMessageObject.caption != null)) {
        this.selectedMessagesCanCopyIds[i].remove(paramMessageObject.getId());
      }
      if (paramMessageObject.isSticker()) {
        this.selectedMessagesCanStarIds[i].remove(paramMessageObject.getId());
      }
      if ((paramMessageObject.canEditMessage(this.currentChat)) && (paramMessageObject.getGroupId() != 0L))
      {
        localObject1 = (MessageObject.GroupedMessages)this.groupedMessagesMap.get(paramMessageObject.getGroupId());
        if ((localObject1 != null) && (((MessageObject.GroupedMessages)localObject1).messages.size() > 1)) {
          this.canEditMessagesCount -= 1;
        }
      }
      if (!paramMessageObject.canDeleteMessage(this.currentChat)) {
        this.cantDeleteMessagesCount -= 1;
      }
    }
    if ((paramBoolean2) && (this.actionBar.isActionModeShowed()))
    {
      i = this.selectedMessagesIds[0].size() + this.selectedMessagesIds[1].size();
      if (i != 0) {
        break label634;
      }
      this.actionBar.hideActionMode();
      updatePinnedMessageView(true);
      this.startReplyOnTextChange = false;
    }
    label456:
    label457:
    label634:
    ActionBarMenuItem localActionBarMenuItem;
    label727:
    label774:
    int n;
    int i1;
    label817:
    label863:
    label878:
    label887:
    label961:
    label1089:
    label1120:
    label1137:
    do
    {
      do
      {
        return;
        if (this.selectedMessagesIds[0].size() + this.selectedMessagesIds[1].size() >= 100) {
          break label1450;
        }
        this.selectedMessagesIds[i].put(paramMessageObject.getId(), paramMessageObject);
        if ((paramMessageObject.type == 0) || (paramMessageObject.caption != null)) {
          this.selectedMessagesCanCopyIds[i].put(paramMessageObject.getId(), paramMessageObject);
        }
        if (paramMessageObject.isSticker()) {
          this.selectedMessagesCanStarIds[i].put(paramMessageObject.getId(), paramMessageObject);
        }
        if ((paramMessageObject.canEditMessage(this.currentChat)) && (paramMessageObject.getGroupId() != 0L))
        {
          localObject1 = (MessageObject.GroupedMessages)this.groupedMessagesMap.get(paramMessageObject.getGroupId());
          if ((localObject1 != null) && (((MessageObject.GroupedMessages)localObject1).messages.size() > 1)) {
            this.canEditMessagesCount += 1;
          }
        }
        if (paramMessageObject.canDeleteMessage(this.currentChat)) {
          break;
        }
        this.cantDeleteMessagesCount += 1;
        break;
        Object localObject2 = this.actionBar.createActionMode().getItem(10);
        paramMessageObject = this.actionBar.createActionMode().getItem(22);
        localActionBarMenuItem = this.actionBar.createActionMode().getItem(23);
        localObject1 = this.actionBar.createActionMode().getItem(19);
        k = ((ActionBarMenuItem)localObject2).getVisibility();
        j = paramMessageObject.getVisibility();
        if (this.selectedMessagesCanCopyIds[0].size() + this.selectedMessagesCanCopyIds[1].size() == 0) {
          break label1207;
        }
        m = 0;
        ((ActionBarMenuItem)localObject2).setVisibility(m);
        if ((!DataQuery.getInstance(this.currentAccount).canAddStickerToFavorites()) || (this.selectedMessagesCanStarIds[0].size() + this.selectedMessagesCanStarIds[1].size() != i)) {
          break label1214;
        }
        m = 0;
        paramMessageObject.setVisibility(m);
        n = ((ActionBarMenuItem)localObject2).getVisibility();
        i1 = paramMessageObject.getVisibility();
        localObject2 = this.actionBar.createActionMode().getItem(12);
        if (this.cantDeleteMessagesCount != 0) {
          break label1221;
        }
        m = 0;
        ((ActionBarMenuItem)localObject2).setVisibility(m);
        if (localActionBarMenuItem != null)
        {
          if ((this.canEditMessagesCount != 1) || (this.selectedMessagesIds[0].size() + this.selectedMessagesIds[1].size() != 1)) {
            break label1228;
          }
          m = 0;
          localActionBarMenuItem.setVisibility(m);
        }
        this.hasUnfavedSelected = false;
        m = 0;
        if (m < 2)
        {
          i = 0;
          if (i < this.selectedMessagesCanStarIds[m].size())
          {
            localObject2 = (MessageObject)this.selectedMessagesCanStarIds[m].valueAt(i);
            if (DataQuery.getInstance(this.currentAccount).isStickerInFavorites(((MessageObject)localObject2).getDocument())) {
              break label1235;
            }
            this.hasUnfavedSelected = true;
          }
          if (!this.hasUnfavedSelected) {
            break label1241;
          }
        }
        if (!this.hasUnfavedSelected) {
          break label1247;
        }
        m = NUM;
        paramMessageObject.setIcon(m);
      } while (localObject1 == null);
      i = 1;
      if (((this.currentEncryptedChat == null) || (AndroidUtilities.getPeerLayerVersion(this.currentEncryptedChat.layer) >= 46)) && (!this.isBroadcast) && ((this.bottomOverlayChat == null) || (this.bottomOverlayChat.getVisibility() != 0)))
      {
        m = i;
        if (this.currentChat == null) {
          break label1089;
        }
        if ((!ChatObject.isNotInChat(this.currentChat)) && ((!ChatObject.isChannel(this.currentChat)) || (ChatObject.canPost(this.currentChat)) || (this.currentChat.megagroup)))
        {
          m = i;
          if (ChatObject.canSendMessages(this.currentChat)) {
            break label1089;
          }
        }
      }
      m = 0;
      if ((m == 0) || (this.selectedMessagesIds[0].size() + this.selectedMessagesIds[1].size() != 1)) {
        break label1255;
      }
      m = 0;
      if ((m != 0) || (this.chatActivityEnterView.hasText())) {
        break label1262;
      }
      paramBoolean1 = true;
      this.startReplyOnTextChange = paramBoolean1;
    } while (((ActionBarMenuItem)localObject1).getVisibility() == m);
    if (this.replyButtonAnimation != null) {
      this.replyButtonAnimation.cancel();
    }
    if ((k != n) || (j != i1))
    {
      if (m == 0)
      {
        ((ActionBarMenuItem)localObject1).setAlpha(1.0F);
        ((ActionBarMenuItem)localObject1).setScaleX(1.0F);
      }
      for (;;)
      {
        ((ActionBarMenuItem)localObject1).setVisibility(m);
        break;
        label1207:
        m = 8;
        break label727;
        label1214:
        m = 8;
        break label774;
        label1221:
        m = 8;
        break label817;
        label1228:
        m = 8;
        break label863;
        label1235:
        i++;
        break label887;
        label1241:
        m++;
        break label878;
        label1247:
        m = NUM;
        break label961;
        label1255:
        m = 8;
        break label1120;
        label1262:
        paramBoolean1 = false;
        break label1137;
        ((ActionBarMenuItem)localObject1).setAlpha(0.0F);
        ((ActionBarMenuItem)localObject1).setScaleX(0.0F);
      }
    }
    this.replyButtonAnimation = new AnimatorSet();
    ((ActionBarMenuItem)localObject1).setPivotX(AndroidUtilities.dp(54.0F));
    localActionBarMenuItem.setPivotX(AndroidUtilities.dp(54.0F));
    if (m == 0)
    {
      ((ActionBarMenuItem)localObject1).setVisibility(m);
      this.replyButtonAnimation.playTogether(new Animator[] { ObjectAnimator.ofFloat(localObject1, "alpha", new float[] { 1.0F }), ObjectAnimator.ofFloat(localObject1, "scaleX", new float[] { 1.0F }), ObjectAnimator.ofFloat(localActionBarMenuItem, "alpha", new float[] { 1.0F }), ObjectAnimator.ofFloat(localActionBarMenuItem, "scaleX", new float[] { 1.0F }) });
    }
    for (;;)
    {
      this.replyButtonAnimation.setDuration(100L);
      this.replyButtonAnimation.addListener(new AnimatorListenerAdapter()
      {
        public void onAnimationCancel(Animator paramAnonymousAnimator)
        {
          if ((ChatActivity.this.replyButtonAnimation != null) && (ChatActivity.this.replyButtonAnimation.equals(paramAnonymousAnimator))) {
            ChatActivity.access$24402(ChatActivity.this, null);
          }
        }
        
        public void onAnimationEnd(Animator paramAnonymousAnimator)
        {
          if ((ChatActivity.this.replyButtonAnimation != null) && (ChatActivity.this.replyButtonAnimation.equals(paramAnonymousAnimator)) && (m == 8)) {
            localObject1.setVisibility(8);
          }
        }
      });
      this.replyButtonAnimation.start();
      break;
      label1450:
      break;
      this.replyButtonAnimation.playTogether(new Animator[] { ObjectAnimator.ofFloat(localObject1, "alpha", new float[] { 0.0F }), ObjectAnimator.ofFloat(localObject1, "scaleX", new float[] { 0.0F }), ObjectAnimator.ofFloat(localActionBarMenuItem, "alpha", new float[] { 0.0F }), ObjectAnimator.ofFloat(localActionBarMenuItem, "scaleX", new float[] { 0.0F }) });
    }
  }
  
  private void alertUserOpenError(MessageObject paramMessageObject)
  {
    if (getParentActivity() == null) {
      return;
    }
    AlertDialog.Builder localBuilder = new AlertDialog.Builder(getParentActivity());
    localBuilder.setTitle(LocaleController.getString("AppName", NUM));
    localBuilder.setPositiveButton(LocaleController.getString("OK", NUM), null);
    if (paramMessageObject.type == 3) {
      localBuilder.setMessage(LocaleController.getString("NoPlayerInstalled", NUM));
    }
    for (;;)
    {
      showDialog(localBuilder.create());
      break;
      localBuilder.setMessage(LocaleController.formatString("NoHandleAppInstalled", NUM, new Object[] { paramMessageObject.getDocument().mime_type }));
    }
  }
  
  private void applyDraftMaybe(boolean paramBoolean)
  {
    if (this.chatActivityEnterView == null) {}
    label78:
    label125:
    label188:
    label323:
    label328:
    label341:
    label574:
    label629:
    label682:
    label691:
    label719:
    for (;;)
    {
      return;
      TLRPC.DraftMessage localDraftMessage = DataQuery.getInstance(this.currentAccount).getDraft(this.dialog_id);
      TLRPC.Message localMessage;
      Object localObject;
      int i;
      int j;
      TLRPC.MessageEntity localMessageEntity;
      int k;
      if ((localDraftMessage != null) && (localDraftMessage.reply_to_msg_id != 0))
      {
        localMessage = DataQuery.getInstance(this.currentAccount).getDraftMessage(this.dialog_id);
        if (this.chatActivityEnterView.getFieldText() != null) {
          break label691;
        }
        if (localDraftMessage == null) {
          break label629;
        }
        localObject = this.chatActivityEnterView;
        if (localDraftMessage.no_webpage) {
          break label323;
        }
        paramBoolean = true;
        ((ChatActivityEnterView)localObject).setWebPage(null, paramBoolean);
        if (localDraftMessage.entities.isEmpty()) {
          break label682;
        }
        localObject = SpannableStringBuilder.valueOf(localDraftMessage.message);
        DataQuery.getInstance(this.currentAccount);
        DataQuery.sortEntities(localDraftMessage.entities);
        i = 0;
        j = 0;
        if (j >= localDraftMessage.entities.size()) {
          break label574;
        }
        localMessageEntity = (TLRPC.MessageEntity)localDraftMessage.entities.get(j);
        if ((!(localMessageEntity instanceof TLRPC.TL_inputMessageEntityMentionName)) && (!(localMessageEntity instanceof TLRPC.TL_messageEntityMentionName))) {
          break label341;
        }
        if (!(localMessageEntity instanceof TLRPC.TL_inputMessageEntityMentionName)) {
          break label328;
        }
        k = ((TLRPC.TL_inputMessageEntityMentionName)localMessageEntity).user_id.user_id;
        if ((localMessageEntity.offset + i + localMessageEntity.length < ((SpannableStringBuilder)localObject).length()) && (((SpannableStringBuilder)localObject).charAt(localMessageEntity.offset + i + localMessageEntity.length) == ' ')) {
          localMessageEntity.length += 1;
        }
        ((SpannableStringBuilder)localObject).setSpan(new URLSpanUserMention("" + k, 1), localMessageEntity.offset + i, localMessageEntity.offset + i + localMessageEntity.length, 33);
        k = i;
      }
      for (;;)
      {
        j++;
        i = k;
        break label125;
        localMessage = null;
        break;
        paramBoolean = false;
        break label78;
        k = ((TLRPC.TL_messageEntityMentionName)localMessageEntity).user_id;
        break label188;
        if ((localMessageEntity instanceof TLRPC.TL_messageEntityCode))
        {
          ((SpannableStringBuilder)localObject).insert(localMessageEntity.offset + localMessageEntity.length + i, "`");
          ((SpannableStringBuilder)localObject).insert(localMessageEntity.offset + i, "`");
          k = i + 2;
        }
        else if ((localMessageEntity instanceof TLRPC.TL_messageEntityPre))
        {
          ((SpannableStringBuilder)localObject).insert(localMessageEntity.offset + localMessageEntity.length + i, "```");
          ((SpannableStringBuilder)localObject).insert(localMessageEntity.offset + i, "```");
          k = i + 6;
        }
        else if ((localMessageEntity instanceof TLRPC.TL_messageEntityBold))
        {
          ((SpannableStringBuilder)localObject).setSpan(new TypefaceSpan(AndroidUtilities.getTypeface("fonts/rmedium.ttf")), localMessageEntity.offset + i, localMessageEntity.offset + localMessageEntity.length + i, 33);
          k = i;
        }
        else
        {
          k = i;
          if ((localMessageEntity instanceof TLRPC.TL_messageEntityItalic))
          {
            ((SpannableStringBuilder)localObject).setSpan(new TypefaceSpan(AndroidUtilities.getTypeface("fonts/ritalic.ttf")), localMessageEntity.offset + i, localMessageEntity.offset + localMessageEntity.length + i, 33);
            k = i;
          }
        }
      }
      this.chatActivityEnterView.setFieldText((CharSequence)localObject);
      if (getArguments().getBoolean("hasUrl", false))
      {
        this.chatActivityEnterView.setSelection(localDraftMessage.message.indexOf('\n') + 1);
        AndroidUtilities.runOnUIThread(new Runnable()
        {
          public void run()
          {
            if (ChatActivity.this.chatActivityEnterView != null)
            {
              ChatActivity.this.chatActivityEnterView.setFieldFocused(true);
              ChatActivity.this.chatActivityEnterView.openKeyboard();
            }
          }
        }, 700L);
      }
      for (;;)
      {
        if ((this.replyingMessageObject != null) || (localMessage == null)) {
          break label719;
        }
        this.replyingMessageObject = new MessageObject(this.currentAccount, localMessage, MessagesController.getInstance(this.currentAccount).getUsers(), false);
        showReplyPanel(true, this.replyingMessageObject, null, null, false);
        break;
        localObject = localDraftMessage.message;
        break label574;
        if ((paramBoolean) && (localDraftMessage == null))
        {
          this.chatActivityEnterView.setFieldText("");
          showReplyPanel(false, null, null, null, false);
        }
      }
    }
  }
  
  private void checkActionBarMenu()
  {
    if (((this.currentEncryptedChat != null) && (!(this.currentEncryptedChat instanceof TLRPC.TL_encryptedChat))) || ((this.currentChat != null) && (ChatObject.isNotInChat(this.currentChat))) || ((this.currentUser != null) && (UserObject.isDeleted(this.currentUser))))
    {
      if (this.timeItem2 != null) {
        this.timeItem2.setVisibility(8);
      }
      if (this.avatarContainer != null) {
        this.avatarContainer.hideTimeItem();
      }
    }
    for (;;)
    {
      if ((this.avatarContainer != null) && (this.currentEncryptedChat != null)) {
        this.avatarContainer.setTime(this.currentEncryptedChat.ttl);
      }
      checkAndUpdateAvatar();
      return;
      if (this.timeItem2 != null) {
        this.timeItem2.setVisibility(0);
      }
      if (this.avatarContainer != null) {
        this.avatarContainer.showTimeItem();
      }
    }
  }
  
  private void checkAndUpdateAvatar()
  {
    Object localObject;
    if (this.currentUser != null)
    {
      localObject = MessagesController.getInstance(this.currentAccount).getUser(Integer.valueOf(this.currentUser.id));
      if (localObject != null) {}
    }
    label93:
    for (;;)
    {
      return;
      this.currentUser = ((TLRPC.User)localObject);
      for (;;)
      {
        if (this.avatarContainer == null) {
          break label93;
        }
        this.avatarContainer.checkAndUpdateAvatar();
        break;
        if (this.currentChat != null)
        {
          localObject = MessagesController.getInstance(this.currentAccount).getChat(Integer.valueOf(this.currentChat.id));
          if (localObject == null) {
            break;
          }
          this.currentChat = ((TLRPC.Chat)localObject);
        }
      }
    }
  }
  
  private void checkBotCommands()
  {
    boolean bool = true;
    URLSpanBotCommand.enabled = false;
    if ((this.currentUser != null) && (this.currentUser.bot)) {
      URLSpanBotCommand.enabled = true;
    }
    label115:
    do
    {
      for (;;)
      {
        return;
        if (!(this.info instanceof TLRPC.TL_chatFull)) {
          break;
        }
        for (int i = 0;; i++)
        {
          if (i >= this.info.participants.participants.size()) {
            break label115;
          }
          Object localObject = (TLRPC.ChatParticipant)this.info.participants.participants.get(i);
          localObject = MessagesController.getInstance(this.currentAccount).getUser(Integer.valueOf(((TLRPC.ChatParticipant)localObject).user_id));
          if ((localObject != null) && (((TLRPC.User)localObject).bot))
          {
            URLSpanBotCommand.enabled = true;
            break;
          }
        }
      }
    } while (!(this.info instanceof TLRPC.TL_channelFull));
    if ((!this.info.bot_info.isEmpty()) && (this.currentChat != null) && (this.currentChat.megagroup)) {}
    for (;;)
    {
      URLSpanBotCommand.enabled = bool;
      break;
      bool = false;
    }
  }
  
  private void checkBotKeyboard()
  {
    if ((this.chatActivityEnterView == null) || (this.botButtons == null) || (this.userBlocked)) {}
    for (;;)
    {
      return;
      if ((this.botButtons.messageOwner.reply_markup instanceof TLRPC.TL_replyKeyboardForceReply))
      {
        if ((MessagesController.getMainSettings(this.currentAccount).getInt("answered_" + this.dialog_id, 0) != this.botButtons.getId()) && ((this.replyingMessageObject == null) || (this.chatActivityEnterView.getFieldText() == null)))
        {
          this.botReplyButtons = this.botButtons;
          this.chatActivityEnterView.setButtons(this.botButtons);
          showReplyPanel(true, this.botButtons, null, null, false);
        }
      }
      else
      {
        if ((this.replyingMessageObject != null) && (this.botReplyButtons == this.replyingMessageObject))
        {
          this.botReplyButtons = null;
          showReplyPanel(false, null, null, null, false);
        }
        this.chatActivityEnterView.setButtons(this.botButtons);
      }
    }
  }
  
  private void checkContextBotPanel()
  {
    if ((this.allowStickersPanel) && (this.mentionsAdapter != null) && (this.mentionsAdapter.isBotContext()))
    {
      if ((this.allowContextBotPanel) || (this.allowContextBotPanelSecond)) {
        break label159;
      }
      if ((this.mentionContainer.getVisibility() == 0) && (this.mentionContainer.getTag() == null))
      {
        if (this.mentionListAnimation != null) {
          this.mentionListAnimation.cancel();
        }
        this.mentionContainer.setTag(Integer.valueOf(1));
        this.mentionListAnimation = new AnimatorSet();
        this.mentionListAnimation.playTogether(new Animator[] { ObjectAnimator.ofFloat(this.mentionContainer, "alpha", new float[] { 0.0F }) });
        this.mentionListAnimation.addListener(new AnimatorListenerAdapter()
        {
          public void onAnimationCancel(Animator paramAnonymousAnimator)
          {
            if ((ChatActivity.this.mentionListAnimation != null) && (ChatActivity.this.mentionListAnimation.equals(paramAnonymousAnimator))) {
              ChatActivity.access$16502(ChatActivity.this, null);
            }
          }
          
          public void onAnimationEnd(Animator paramAnonymousAnimator)
          {
            if ((ChatActivity.this.mentionListAnimation != null) && (ChatActivity.this.mentionListAnimation.equals(paramAnonymousAnimator)))
            {
              ChatActivity.this.mentionContainer.setVisibility(4);
              ChatActivity.access$16502(ChatActivity.this, null);
            }
          }
        });
        this.mentionListAnimation.setDuration(200L);
        this.mentionListAnimation.start();
      }
    }
    for (;;)
    {
      return;
      label159:
      if ((this.mentionContainer.getVisibility() == 4) || (this.mentionContainer.getTag() != null))
      {
        if (this.mentionListAnimation != null) {
          this.mentionListAnimation.cancel();
        }
        this.mentionContainer.setTag(null);
        this.mentionContainer.setVisibility(0);
        this.mentionListAnimation = new AnimatorSet();
        this.mentionListAnimation.playTogether(new Animator[] { ObjectAnimator.ofFloat(this.mentionContainer, "alpha", new float[] { 0.0F, 1.0F }) });
        this.mentionListAnimation.addListener(new AnimatorListenerAdapter()
        {
          public void onAnimationCancel(Animator paramAnonymousAnimator)
          {
            if ((ChatActivity.this.mentionListAnimation != null) && (ChatActivity.this.mentionListAnimation.equals(paramAnonymousAnimator))) {
              ChatActivity.access$16502(ChatActivity.this, null);
            }
          }
          
          public void onAnimationEnd(Animator paramAnonymousAnimator)
          {
            if ((ChatActivity.this.mentionListAnimation != null) && (ChatActivity.this.mentionListAnimation.equals(paramAnonymousAnimator))) {
              ChatActivity.access$16502(ChatActivity.this, null);
            }
          }
        });
        this.mentionListAnimation.setDuration(200L);
        this.mentionListAnimation.start();
      }
    }
  }
  
  private void checkEditTimer()
  {
    if (this.chatActivityEnterView == null) {}
    for (;;)
    {
      return;
      MessageObject localMessageObject = this.chatActivityEnterView.getEditingMessageObject();
      if (localMessageObject != null) {
        if ((this.currentUser != null) && (this.currentUser.self))
        {
          if (this.actionModeSubTextView.getVisibility() != 8) {
            this.actionModeSubTextView.setVisibility(8);
          }
        }
        else
        {
          int i;
          if (localMessageObject.canEditMessageAnytime(this.currentChat))
          {
            i = 360;
            label76:
            if (i <= 0) {
              break label239;
            }
            if (i <= 300) {
              break label165;
            }
            if (this.actionModeSubTextView.getVisibility() != 8) {
              this.actionModeSubTextView.setVisibility(8);
            }
          }
          for (;;)
          {
            AndroidUtilities.runOnUIThread(new Runnable()
            {
              public void run()
              {
                ChatActivity.this.checkEditTimer();
              }
            }, 1000L);
            break;
            i = MessagesController.getInstance(this.currentAccount).maxEditTime + 300 - Math.abs(ConnectionsManager.getInstance(this.currentAccount).getCurrentTime() - localMessageObject.messageOwner.date);
            break label76;
            label165:
            if (this.actionModeSubTextView.getVisibility() != 0) {
              this.actionModeSubTextView.setVisibility(0);
            }
            this.actionModeSubTextView.setText(LocaleController.formatString("TimeToEdit", NUM, new Object[] { String.format("%d:%02d", new Object[] { Integer.valueOf(i / 60), Integer.valueOf(i % 60) }) }));
          }
          label239:
          this.chatActivityEnterView.onEditTimeExpired();
          this.actionModeSubTextView.setText(LocaleController.formatString("TimeToEditExpired", NUM, new Object[0]));
        }
      }
    }
  }
  
  private void checkListViewPaddings()
  {
    if ((!this.wasManualScroll) && (this.unreadMessageObject != null)) {
      if (this.messages.indexOf(this.unreadMessageObject) >= 0)
      {
        this.fixPaddingsInLayout = true;
        if (this.fragmentView != null) {
          this.fragmentView.requestLayout();
        }
      }
    }
    for (;;)
    {
      return;
      AndroidUtilities.runOnUIThread(new Runnable()
      {
        public void run()
        {
          ChatActivity.this.checkListViewPaddingsInternal();
        }
      });
    }
  }
  
  private void checkListViewPaddingsInternal()
  {
    if (this.chatLayoutManager == null) {}
    for (;;)
    {
      return;
      int i;
      int j;
      int k;
      int m;
      int n;
      for (;;)
      {
        try
        {
          i = this.chatLayoutManager.findFirstVisibleItemPosition();
          j = -1;
          k = i;
          m = j;
          if (!this.wasManualScroll)
          {
            k = i;
            m = j;
            if (this.unreadMessageObject != null)
            {
              n = this.messages.indexOf(this.unreadMessageObject);
              k = i;
              m = j;
              if (n >= 0)
              {
                m = n + this.chatAdapter.messagesStartRow;
                k = -1;
              }
            }
          }
          j = 0;
          if (k != -1)
          {
            localObject = this.chatLayoutManager.findViewByPosition(k);
            if (localObject != null) {
              break label246;
            }
            j = 0;
          }
          if ((this.chatListView.getPaddingTop() == AndroidUtilities.dp(52.0F)) || (((this.pinnedMessageView == null) || (this.pinnedMessageView.getTag() != null)) && ((this.reportSpamView == null) || (this.reportSpamView.getTag() != null)))) {
            break label271;
          }
          this.chatListView.setPadding(0, AndroidUtilities.dp(52.0F), 0, AndroidUtilities.dp(3.0F));
          Object localObject = (FrameLayout.LayoutParams)this.floatingDateView.getLayoutParams();
          ((FrameLayout.LayoutParams)localObject).topMargin = AndroidUtilities.dp(52.0F);
          this.floatingDateView.setLayoutParams((ViewGroup.LayoutParams)localObject);
          this.chatListView.setTopGlowOffset(AndroidUtilities.dp(48.0F));
          if (k == -1) {
            break label390;
          }
          this.chatLayoutManager.scrollToPositionWithOffset(k, j);
        }
        catch (Exception localException)
        {
          FileLog.e(localException);
        }
        break;
        label246:
        j = this.chatListView.getMeasuredHeight() - localException.getBottom() - this.chatListView.getPaddingBottom();
        continue;
        label271:
        if ((this.chatListView.getPaddingTop() != AndroidUtilities.dp(4.0F)) && ((this.pinnedMessageView == null) || (this.pinnedMessageView.getTag() != null)) && ((this.reportSpamView == null) || (this.reportSpamView.getTag() != null)))
        {
          this.chatListView.setPadding(0, AndroidUtilities.dp(4.0F), 0, AndroidUtilities.dp(3.0F));
          FrameLayout.LayoutParams localLayoutParams = (FrameLayout.LayoutParams)this.floatingDateView.getLayoutParams();
          localLayoutParams.topMargin = AndroidUtilities.dp(4.0F);
          this.floatingDateView.setLayoutParams(localLayoutParams);
          this.chatListView.setTopGlowOffset(0);
        }
        else
        {
          k = -1;
        }
      }
      label390:
      if (m != -1)
      {
        k = this.chatListView.getMeasuredHeight();
        n = this.chatListView.getPaddingBottom();
        i = this.chatListView.getPaddingTop();
        j = AndroidUtilities.dp(29.0F);
        this.chatLayoutManager.scrollToPositionWithOffset(m, k - n - i - j);
      }
    }
  }
  
  private void checkRaiseSensors()
  {
    if ((this.chatActivityEnterView != null) && (this.chatActivityEnterView.isStickersExpanded())) {
      MediaController.getInstance().setAllowStartRecord(false);
    }
    for (;;)
    {
      return;
      if ((ChatObject.isChannel(this.currentChat)) && (this.currentChat.banned_rights != null) && (this.currentChat.banned_rights.send_media)) {
        MediaController.getInstance().setAllowStartRecord(false);
      } else if ((!ApplicationLoader.mainInterfacePaused) && ((this.bottomOverlayChat == null) || (this.bottomOverlayChat.getVisibility() != 0)) && ((this.bottomOverlay == null) || (this.bottomOverlay.getVisibility() != 0)) && ((this.searchContainer == null) || (this.searchContainer.getVisibility() != 0))) {
        MediaController.getInstance().setAllowStartRecord(true);
      } else {
        MediaController.getInstance().setAllowStartRecord(false);
      }
    }
  }
  
  private void checkScrollForLoad(boolean paramBoolean)
  {
    if ((this.chatLayoutManager == null) || (this.paused)) {}
    for (;;)
    {
      return;
      int i = this.chatLayoutManager.findFirstVisibleItemPosition();
      int j;
      label30:
      int k;
      int m;
      label58:
      MessagesController localMessagesController;
      long l;
      int n;
      label149:
      int i1;
      boolean bool;
      if (i == -1)
      {
        j = 0;
        if ((j <= 0) && (this.currentEncryptedChat == null)) {
          break label360;
        }
        k = this.chatAdapter.getItemCount();
        if (!paramBoolean) {
          break label362;
        }
        m = 25;
        if ((k - i - j <= m) && (!this.loading))
        {
          if (this.endReached[0] != 0) {
            break label466;
          }
          this.loading = true;
          this.waitingForLoad.add(Integer.valueOf(this.lastLoadIndex));
          if (this.messagesByDays.size() == 0) {
            break label373;
          }
          localMessagesController = MessagesController.getInstance(this.currentAccount);
          l = this.dialog_id;
          n = this.maxMessageId[0];
          if (this.cacheEndReached[0] != 0) {
            break label368;
          }
          paramBoolean = true;
          m = this.minDate[0];
          i1 = this.classGuid;
          bool = ChatObject.isChannel(this.currentChat);
          k = this.lastLoadIndex;
          this.lastLoadIndex = (k + 1);
          localMessagesController.loadMessages(l, 50, n, 0, paramBoolean, m, i1, 0, 0, bool, k);
        }
      }
      for (;;)
      {
        label209:
        if ((j > 0) && (!this.loadingForward) && (i <= 10))
        {
          if ((this.mergeDialogId == 0L) || (this.forwardEndReached[1] != 0)) {
            break label606;
          }
          this.waitingForLoad.add(Integer.valueOf(this.lastLoadIndex));
          localMessagesController = MessagesController.getInstance(this.currentAccount);
          l = this.mergeDialogId;
          m = this.minMessageId[1];
          i = this.maxDate[1];
          j = this.classGuid;
          paramBoolean = ChatObject.isChannel(this.currentChat);
          k = this.lastLoadIndex;
          this.lastLoadIndex = (k + 1);
          localMessagesController.loadMessages(l, 50, m, 0, true, i, j, 1, 0, paramBoolean, k);
          this.loadingForward = true;
          break;
          j = Math.abs(this.chatLayoutManager.findLastVisibleItemPosition() - i) + 1;
          break label30;
          label360:
          break;
          label362:
          m = 5;
          break label58;
          label368:
          paramBoolean = false;
          break label149;
          label373:
          localMessagesController = MessagesController.getInstance(this.currentAccount);
          l = this.dialog_id;
          if (this.cacheEndReached[0] == 0) {}
          for (paramBoolean = true;; paramBoolean = false)
          {
            i1 = this.minDate[0];
            k = this.classGuid;
            bool = ChatObject.isChannel(this.currentChat);
            m = this.lastLoadIndex;
            this.lastLoadIndex = (m + 1);
            localMessagesController.loadMessages(l, 50, 0, 0, paramBoolean, i1, k, 0, 0, bool, m);
            break;
          }
          label466:
          if ((this.mergeDialogId != 0L) && (this.endReached[1] == 0))
          {
            this.loading = true;
            this.waitingForLoad.add(Integer.valueOf(this.lastLoadIndex));
            localMessagesController = MessagesController.getInstance(this.currentAccount);
            l = this.mergeDialogId;
            k = this.maxMessageId[1];
            if (this.cacheEndReached[1] != 0) {
              break label601;
            }
          }
        }
      }
      label601:
      for (paramBoolean = true;; paramBoolean = false)
      {
        i1 = this.minDate[1];
        n = this.classGuid;
        bool = ChatObject.isChannel(this.currentChat);
        m = this.lastLoadIndex;
        this.lastLoadIndex = (m + 1);
        localMessagesController.loadMessages(l, 50, k, 0, paramBoolean, i1, n, 0, 0, bool, m);
        break label209;
        break;
      }
      label606:
      if (this.forwardEndReached[0] == 0)
      {
        this.waitingForLoad.add(Integer.valueOf(this.lastLoadIndex));
        localMessagesController = MessagesController.getInstance(this.currentAccount);
        l = this.dialog_id;
        j = this.minMessageId[0];
        i = this.maxDate[0];
        k = this.classGuid;
        paramBoolean = ChatObject.isChannel(this.currentChat);
        m = this.lastLoadIndex;
        this.lastLoadIndex = (m + 1);
        localMessagesController.loadMessages(l, 50, j, 0, true, i, k, 1, 0, paramBoolean, m);
        this.loadingForward = true;
      }
    }
  }
  
  private void clearChatData()
  {
    this.messages.clear();
    this.messagesByDays.clear();
    this.waitingForLoad.clear();
    this.groupedMessagesMap.clear();
    FrameLayout localFrameLayout = this.progressView;
    int i;
    if (this.chatAdapter.botInfoRow == -1)
    {
      i = 0;
      localFrameLayout.setVisibility(i);
      this.chatListView.setEmptyView(null);
      i = 0;
      label61:
      if (i >= 2) {
        break label169;
      }
      this.messagesDict[i].clear();
      if (this.currentEncryptedChat != null) {
        break label148;
      }
      this.maxMessageId[i] = Integer.MAX_VALUE;
      this.minMessageId[i] = Integer.MIN_VALUE;
    }
    for (;;)
    {
      this.maxDate[i] = Integer.MIN_VALUE;
      this.minDate[i] = 0;
      this.endReached[i] = false;
      this.cacheEndReached[i] = false;
      this.forwardEndReached[i] = true;
      i++;
      break label61;
      i = 4;
      break;
      label148:
      this.maxMessageId[i] = Integer.MIN_VALUE;
      this.minMessageId[i] = Integer.MAX_VALUE;
    }
    label169:
    this.first = true;
    this.firstLoading = true;
    this.loading = true;
    this.loadingForward = false;
    this.waitingForReplyMessageLoad = false;
    this.startLoadFromMessageId = 0;
    this.last_message_id = 0;
    this.unreadMessageObject = null;
    this.createUnreadMessageAfterId = 0;
    this.createUnreadMessageAfterIdLoading = false;
    this.needSelectFromMessageId = false;
    this.chatAdapter.notifyDataSetChanged();
  }
  
  private void createChatAttachView()
  {
    if (getParentActivity() == null) {}
    for (;;)
    {
      return;
      if (this.chatAttachAlert == null)
      {
        this.chatAttachAlert = new ChatAttachAlert(getParentActivity(), this);
        this.chatAttachAlert.setDelegate(new ChatAttachAlert.ChatAttachViewDelegate()
        {
          public void didPressedButton(int paramAnonymousInt)
          {
            if ((ChatActivity.this.getParentActivity() == null) || (ChatActivity.this.chatAttachAlert == null)) {}
            for (;;)
            {
              return;
              if ((paramAnonymousInt == 8) || (paramAnonymousInt == 7) || ((paramAnonymousInt == 4) && (!ChatActivity.this.chatAttachAlert.getSelectedPhotos().isEmpty())))
              {
                if (paramAnonymousInt != 8) {
                  ChatActivity.this.chatAttachAlert.dismiss();
                }
                HashMap localHashMap = ChatActivity.this.chatAttachAlert.getSelectedPhotos();
                ArrayList localArrayList1 = ChatActivity.this.chatAttachAlert.getSelectedPhotosOrder();
                if (!localHashMap.isEmpty())
                {
                  ArrayList localArrayList2 = new ArrayList();
                  int i = 0;
                  if (i < localArrayList1.size())
                  {
                    MediaController.PhotoEntry localPhotoEntry = (MediaController.PhotoEntry)localHashMap.get(localArrayList1.get(i));
                    SendMessagesHelper.SendingMediaInfo localSendingMediaInfo = new SendMessagesHelper.SendingMediaInfo();
                    if (localPhotoEntry.imagePath != null)
                    {
                      localSendingMediaInfo.path = localPhotoEntry.imagePath;
                      label162:
                      localSendingMediaInfo.isVideo = localPhotoEntry.isVideo;
                      if (localPhotoEntry.caption == null) {
                        break label301;
                      }
                      localObject = localPhotoEntry.caption.toString();
                      label192:
                      localSendingMediaInfo.caption = ((String)localObject);
                      localSendingMediaInfo.entities = localPhotoEntry.entities;
                      if (localPhotoEntry.stickers.isEmpty()) {
                        break label307;
                      }
                    }
                    label301:
                    label307:
                    for (localObject = new ArrayList(localPhotoEntry.stickers);; localObject = null)
                    {
                      localSendingMediaInfo.masks = ((ArrayList)localObject);
                      localSendingMediaInfo.ttl = localPhotoEntry.ttl;
                      localSendingMediaInfo.videoEditedInfo = localPhotoEntry.editedInfo;
                      localArrayList2.add(localSendingMediaInfo);
                      localPhotoEntry.reset();
                      i++;
                      break;
                      if (localPhotoEntry.path == null) {
                        break label162;
                      }
                      localSendingMediaInfo.path = localPhotoEntry.path;
                      break label162;
                      localObject = null;
                      break label192;
                    }
                  }
                  long l = ChatActivity.this.dialog_id;
                  Object localObject = ChatActivity.this.replyingMessageObject;
                  if (paramAnonymousInt == 4) {}
                  for (boolean bool = true;; bool = false)
                  {
                    SendMessagesHelper.prepareSendingMedia(localArrayList2, l, (MessageObject)localObject, null, bool, SharedConfig.groupPhotosEnabled);
                    ChatActivity.this.showReplyPanel(false, null, null, null, false);
                    DataQuery.getInstance(ChatActivity.this.currentAccount).cleanDraft(ChatActivity.this.dialog_id, true);
                    break;
                  }
                }
              }
              else
              {
                if (ChatActivity.this.chatAttachAlert != null) {
                  ChatActivity.this.chatAttachAlert.dismissWithButtonClick(paramAnonymousInt);
                }
                ChatActivity.this.processSelectedAttach(paramAnonymousInt);
              }
            }
          }
          
          public void didSelectBot(TLRPC.User paramAnonymousUser)
          {
            if ((ChatActivity.this.chatActivityEnterView == null) || (TextUtils.isEmpty(paramAnonymousUser.username))) {}
            for (;;)
            {
              return;
              ChatActivity.this.chatActivityEnterView.setFieldText("@" + paramAnonymousUser.username + " ");
              ChatActivity.this.chatActivityEnterView.openKeyboard();
            }
          }
          
          public View getRevealView()
          {
            return ChatActivity.this.chatActivityEnterView.getAttachButton();
          }
          
          public void onCameraOpened()
          {
            ChatActivity.this.chatActivityEnterView.closeKeyboard();
          }
        });
      }
    }
  }
  
  private void createDeleteMessagesAlert(MessageObject paramMessageObject, MessageObject.GroupedMessages paramGroupedMessages)
  {
    createDeleteMessagesAlert(paramMessageObject, paramGroupedMessages, 1);
  }
  
  private void createDeleteMessagesAlert(final MessageObject paramMessageObject, final MessageObject.GroupedMessages paramGroupedMessages, final int paramInt)
  {
    if (getParentActivity() == null) {
      return;
    }
    AlertDialog.Builder localBuilder = new AlertDialog.Builder(getParentActivity());
    label34:
    final boolean[] arrayOfBoolean1;
    final boolean[] arrayOfBoolean2;
    Object localObject2;
    label121:
    int k;
    label140:
    int m;
    boolean bool;
    int n;
    if (paramGroupedMessages != null)
    {
      i = paramGroupedMessages.messages.size();
      localBuilder.setMessage(LocaleController.formatString("AreYouSureDeleteMessages", NUM, new Object[] { LocaleController.formatPluralString("messages", i) }));
      localBuilder.setTitle(LocaleController.getString("Message", NUM));
      arrayOfBoolean1 = new boolean[3];
      arrayOfBoolean2 = new boolean[1];
      localObject1 = null;
      localObject2 = null;
      localObject3 = null;
      if ((this.currentUser == null) || (!MessagesController.getInstance(this.currentAccount).canRevokePmInbox)) {
        break label500;
      }
      j = 1;
      if (this.currentUser == null) {
        break label506;
      }
      k = MessagesController.getInstance(this.currentAccount).revokeTimePmLimit;
      if ((this.currentChat == null) || (!this.currentChat.megagroup)) {
        break label1427;
      }
      m = 0;
      bool = ChatObject.canBlockUsers(this.currentChat);
      n = ConnectionsManager.getInstance(this.currentAccount).getCurrentTime();
      if (paramMessageObject == null) {
        break label527;
      }
      if ((paramMessageObject.messageOwner.action != null) && (!(paramMessageObject.messageOwner.action instanceof TLRPC.TL_messageActionEmpty)))
      {
        localObject1 = localObject3;
        if (!(paramMessageObject.messageOwner.action instanceof TLRPC.TL_messageActionChatDeleteUser)) {}
      }
      else
      {
        localObject1 = MessagesController.getInstance(this.currentAccount).getUser(Integer.valueOf(paramMessageObject.messageOwner.from_id));
      }
      if ((paramMessageObject.isSendError()) || (paramMessageObject.getDialogId() != this.mergeDialogId) || ((paramMessageObject.messageOwner.action != null) && (!(paramMessageObject.messageOwner.action instanceof TLRPC.TL_messageActionEmpty))) || (!paramMessageObject.isOut()) || (n - paramMessageObject.messageOwner.date > k)) {
        break label521;
      }
    }
    label500:
    label506:
    label521:
    for (int i = 1;; i = 0)
    {
      if ((localObject1 == null) || (((TLRPC.User)localObject1).id == UserConfig.getInstance(this.currentAccount).getClientUserId()) || (paramInt == 2)) {
        break label1214;
      }
      if ((paramInt != 1) || (this.currentChat.creator)) {
        break label872;
      }
      localObject3 = new AlertDialog[1];
      localObject3[0] = new AlertDialog(getParentActivity(), 1);
      localObject2 = new TLRPC.TL_channels_getParticipant();
      ((TLRPC.TL_channels_getParticipant)localObject2).channel = MessagesController.getInputChannel(this.currentChat);
      ((TLRPC.TL_channels_getParticipant)localObject2).user_id = MessagesController.getInstance(this.currentAccount).getInputUser((TLRPC.User)localObject1);
      paramInt = ConnectionsManager.getInstance(this.currentAccount).sendRequest((TLObject)localObject2, new RequestDelegate()
      {
        public void run(final TLObject paramAnonymousTLObject, TLRPC.TL_error paramAnonymousTL_error)
        {
          AndroidUtilities.runOnUIThread(new Runnable()
          {
            public void run()
            {
              try
              {
                ChatActivity.97.this.val$progressDialog[0].dismiss();
                ChatActivity.97.this.val$progressDialog[0] = null;
                int i = 2;
                int j = i;
                if (paramAnonymousTLObject != null)
                {
                  TLRPC.TL_channels_channelParticipant localTL_channels_channelParticipant = (TLRPC.TL_channels_channelParticipant)paramAnonymousTLObject;
                  j = i;
                  if (!(localTL_channels_channelParticipant.participant instanceof TLRPC.TL_channelParticipantAdmin))
                  {
                    j = i;
                    if (!(localTL_channels_channelParticipant.participant instanceof TLRPC.TL_channelParticipantCreator)) {
                      j = 0;
                    }
                  }
                }
                ChatActivity.this.createDeleteMessagesAlert(ChatActivity.97.this.val$finalSelectedObject, ChatActivity.97.this.val$finalSelectedGroup, j);
                return;
              }
              catch (Throwable localThrowable)
              {
                for (;;) {}
              }
            }
          });
        }
      });
      if (paramInt == 0) {
        break;
      }
      AndroidUtilities.runOnUIThread(new Runnable()
      {
        public void run()
        {
          if (localObject3[0] == null) {}
          for (;;)
          {
            return;
            localObject3[0].setMessage(LocaleController.getString("Loading", NUM));
            localObject3[0].setCanceledOnTouchOutside(false);
            localObject3[0].setCancelable(false);
            localObject3[0].setButton(-2, LocaleController.getString("Cancel", NUM), new DialogInterface.OnClickListener()
            {
              public void onClick(DialogInterface paramAnonymous2DialogInterface, int paramAnonymous2Int)
              {
                ConnectionsManager.getInstance(ChatActivity.this.currentAccount).cancelRequest(ChatActivity.98.this.val$reqId, true);
                try
                {
                  paramAnonymous2DialogInterface.dismiss();
                  return;
                }
                catch (Exception paramAnonymous2DialogInterface)
                {
                  for (;;)
                  {
                    FileLog.e(paramAnonymous2DialogInterface);
                  }
                }
              }
            });
            ChatActivity.this.showDialog(localObject3[0]);
          }
        }
      }, 1000L);
      break;
      if (paramMessageObject != null)
      {
        i = 1;
        break label34;
      }
      i = this.selectedMessagesIds[0].size() + this.selectedMessagesIds[1].size();
      break label34;
      j = 0;
      break label121;
      k = MessagesController.getInstance(this.currentAccount).revokeTimeLimit;
      break label140;
    }
    label527:
    i = -1;
    int j = 1;
    label533:
    int i1 = i;
    label549:
    int i2;
    if (j >= 0)
    {
      i1 = 0;
      k = i;
      i = k;
      if (i1 < this.selectedMessagesIds[j].size())
      {
        localObject2 = (MessageObject)this.selectedMessagesIds[j].valueAt(i1);
        i = k;
        if (k == -1) {
          i = ((MessageObject)localObject2).messageOwner.from_id;
        }
        if ((i < 0) || (i != ((MessageObject)localObject2).messageOwner.from_id)) {
          i = -2;
        }
      }
      else
      {
        if (i != -2) {
          break label777;
        }
        i1 = i;
      }
    }
    else
    {
      i2 = 0;
      k = 1;
      i = m;
      m = k;
    }
    int i3;
    for (;;)
    {
      k = i;
      if (m >= 0)
      {
        i3 = 0;
        for (k = i;; k = i)
        {
          j = i2;
          i = k;
          if (i3 >= this.selectedMessagesIds[m].size()) {
            break label789;
          }
          localObject2 = (MessageObject)this.selectedMessagesIds[m].valueAt(i3);
          if (m != 1) {
            break label832;
          }
          if ((!((MessageObject)localObject2).isOut()) || (((MessageObject)localObject2).messageOwner.action != null)) {
            break;
          }
          i = k;
          if (n - ((MessageObject)localObject2).messageOwner.date <= 172800) {
            i = 1;
          }
          label757:
          i3++;
        }
        i1++;
        k = i;
        break label549;
        label777:
        j--;
        break label533;
        i = 0;
      }
      for (j = 1;; j = 1)
      {
        label789:
        if (j == 0) {
          break label862;
        }
        k = i;
        i = k;
        if (i1 == -1) {
          break;
        }
        localObject1 = MessagesController.getInstance(this.currentAccount).getUser(Integer.valueOf(i1));
        i = k;
        break;
        label832:
        i = k;
        if (m != 0) {
          break label757;
        }
        i = k;
        if (((MessageObject)localObject2).isOut()) {
          break label757;
        }
        i = 0;
      }
      label862:
      m--;
      i2 = j;
    }
    label872:
    final Object localObject3 = new FrameLayout(getParentActivity());
    i = 0;
    paramInt = 0;
    while (paramInt < 3) {
      if ((!bool) && (paramInt == 0))
      {
        paramInt++;
      }
      else
      {
        localObject2 = new CheckBoxCell(getParentActivity(), 1);
        ((CheckBoxCell)localObject2).setBackgroundDrawable(Theme.getSelectorDrawable(false));
        ((CheckBoxCell)localObject2).setTag(Integer.valueOf(paramInt));
        if (paramInt == 0)
        {
          ((CheckBoxCell)localObject2).setText(LocaleController.getString("DeleteBanUser", NUM), "", false, false);
          label965:
          if (!LocaleController.isRTL) {
            break label1124;
          }
          k = AndroidUtilities.dp(16.0F);
          label979:
          if (!LocaleController.isRTL) {
            break label1135;
          }
        }
        label1124:
        label1135:
        for (j = AndroidUtilities.dp(8.0F);; j = AndroidUtilities.dp(16.0F))
        {
          ((CheckBoxCell)localObject2).setPadding(k, 0, j, 0);
          ((FrameLayout)localObject3).addView((View)localObject2, LayoutHelper.createFrame(-1, 48.0F, 51, 0.0F, i * 48, 0.0F, 0.0F));
          ((CheckBoxCell)localObject2).setOnClickListener(new View.OnClickListener()
          {
            public void onClick(View paramAnonymousView)
            {
              if (!paramAnonymousView.isEnabled()) {
                return;
              }
              CheckBoxCell localCheckBoxCell = (CheckBoxCell)paramAnonymousView;
              paramAnonymousView = (Integer)localCheckBoxCell.getTag();
              boolean[] arrayOfBoolean = arrayOfBoolean1;
              int i = paramAnonymousView.intValue();
              if (arrayOfBoolean1[paramAnonymousView.intValue()] == 0) {}
              for (int j = 1;; j = 0)
              {
                arrayOfBoolean[i] = j;
                localCheckBoxCell.setChecked(arrayOfBoolean1[paramAnonymousView.intValue()], true);
                break;
              }
            }
          });
          i++;
          break;
          if (paramInt == 1)
          {
            ((CheckBoxCell)localObject2).setText(LocaleController.getString("DeleteReportSpam", NUM), "", false, false);
            break label965;
          }
          if (paramInt != 2) {
            break label965;
          }
          ((CheckBoxCell)localObject2).setText(LocaleController.formatString("DeleteAllFrom", NUM, new Object[] { ContactsController.formatName(((TLRPC.User)localObject1).first_name, ((TLRPC.User)localObject1).last_name) }), "", false, false);
          break label965;
          k = AndroidUtilities.dp(8.0F);
          break label979;
        }
      }
    }
    localBuilder.setView((View)localObject3);
    label1214:
    label1281:
    label1294:
    label1400:
    label1410:
    label1427:
    label1613:
    do
    {
      do
      {
        do
        {
          for (;;)
          {
            localBuilder.setPositiveButton(LocaleController.getString("OK", NUM), new DialogInterface.OnClickListener()
            {
              public void onClick(DialogInterface paramAnonymousDialogInterface, int paramAnonymousInt)
              {
                paramAnonymousDialogInterface = null;
                Object localObject1;
                Object localObject2;
                if (paramMessageObject != null)
                {
                  localObject1 = new ArrayList();
                  paramAnonymousDialogInterface = null;
                  localObject2 = null;
                  if (paramGroupedMessages != null)
                  {
                    paramAnonymousInt = 0;
                    for (paramAnonymousDialogInterface = (DialogInterface)localObject2;; paramAnonymousDialogInterface = (DialogInterface)localObject2)
                    {
                      localObject2 = paramAnonymousDialogInterface;
                      if (paramAnonymousInt >= paramGroupedMessages.messages.size()) {
                        break;
                      }
                      MessageObject localMessageObject = (MessageObject)paramGroupedMessages.messages.get(paramAnonymousInt);
                      ((ArrayList)localObject1).add(Integer.valueOf(localMessageObject.getId()));
                      localObject2 = paramAnonymousDialogInterface;
                      if (ChatActivity.this.currentEncryptedChat != null)
                      {
                        localObject2 = paramAnonymousDialogInterface;
                        if (localMessageObject.messageOwner.random_id != 0L)
                        {
                          localObject2 = paramAnonymousDialogInterface;
                          if (localMessageObject.type != 10)
                          {
                            localObject2 = paramAnonymousDialogInterface;
                            if (paramAnonymousDialogInterface == null) {
                              localObject2 = new ArrayList();
                            }
                            ((ArrayList)localObject2).add(Long.valueOf(localMessageObject.messageOwner.random_id));
                          }
                        }
                      }
                      paramAnonymousInt++;
                    }
                  }
                  ((ArrayList)localObject1).add(Integer.valueOf(paramMessageObject.getId()));
                  localObject2 = paramAnonymousDialogInterface;
                  if (ChatActivity.this.currentEncryptedChat != null)
                  {
                    localObject2 = paramAnonymousDialogInterface;
                    if (paramMessageObject.messageOwner.random_id != 0L)
                    {
                      localObject2 = paramAnonymousDialogInterface;
                      if (paramMessageObject.type != 10)
                      {
                        localObject2 = new ArrayList();
                        ((ArrayList)localObject2).add(Long.valueOf(paramMessageObject.messageOwner.random_id));
                      }
                    }
                  }
                  MessagesController.getInstance(ChatActivity.this.currentAccount).deleteMessages((ArrayList)localObject1, (ArrayList)localObject2, ChatActivity.this.currentEncryptedChat, paramMessageObject.messageOwner.to_id.channel_id, arrayOfBoolean2[0]);
                  paramAnonymousDialogInterface = (DialogInterface)localObject1;
                }
                for (;;)
                {
                  if (localObject1 != null)
                  {
                    if (arrayOfBoolean1[0] != 0) {
                      MessagesController.getInstance(ChatActivity.this.currentAccount).deleteUserFromChat(ChatActivity.this.currentChat.id, localObject1, ChatActivity.this.info);
                    }
                    if (arrayOfBoolean1[1] != 0)
                    {
                      localObject2 = new TLRPC.TL_channels_reportSpam();
                      ((TLRPC.TL_channels_reportSpam)localObject2).channel = MessagesController.getInputChannel(ChatActivity.this.currentChat);
                      ((TLRPC.TL_channels_reportSpam)localObject2).user_id = MessagesController.getInstance(ChatActivity.this.currentAccount).getInputUser(localObject1);
                      ((TLRPC.TL_channels_reportSpam)localObject2).id = paramAnonymousDialogInterface;
                      ConnectionsManager.getInstance(ChatActivity.this.currentAccount).sendRequest((TLObject)localObject2, new RequestDelegate()
                      {
                        public void run(TLObject paramAnonymous2TLObject, TLRPC.TL_error paramAnonymous2TL_error) {}
                      });
                    }
                    if (arrayOfBoolean1[2] != 0) {
                      MessagesController.getInstance(ChatActivity.this.currentAccount).deleteUserChannelHistory(ChatActivity.this.currentChat, localObject1, 0);
                    }
                  }
                  return;
                  paramAnonymousInt = 1;
                  while (paramAnonymousInt >= 0)
                  {
                    localObject2 = new ArrayList();
                    for (int i = 0; i < ChatActivity.this.selectedMessagesIds[paramAnonymousInt].size(); i++) {
                      ((ArrayList)localObject2).add(Integer.valueOf(ChatActivity.this.selectedMessagesIds[paramAnonymousInt].keyAt(i)));
                    }
                    paramAnonymousDialogInterface = null;
                    int j = 0;
                    i = j;
                    if (!((ArrayList)localObject2).isEmpty())
                    {
                      localObject1 = (MessageObject)ChatActivity.this.selectedMessagesIds[paramAnonymousInt].get(((Integer)((ArrayList)localObject2).get(0)).intValue());
                      i = j;
                      if (0 == 0)
                      {
                        i = j;
                        if (((MessageObject)localObject1).messageOwner.to_id.channel_id != 0) {
                          i = ((MessageObject)localObject1).messageOwner.to_id.channel_id;
                        }
                      }
                    }
                    if (ChatActivity.this.currentEncryptedChat != null)
                    {
                      localObject1 = new ArrayList();
                      for (j = 0;; j++)
                      {
                        paramAnonymousDialogInterface = (DialogInterface)localObject1;
                        if (j >= ChatActivity.this.selectedMessagesIds[paramAnonymousInt].size()) {
                          break;
                        }
                        paramAnonymousDialogInterface = (MessageObject)ChatActivity.this.selectedMessagesIds[paramAnonymousInt].valueAt(j);
                        if ((paramAnonymousDialogInterface.messageOwner.random_id != 0L) && (paramAnonymousDialogInterface.type != 10)) {
                          ((ArrayList)localObject1).add(Long.valueOf(paramAnonymousDialogInterface.messageOwner.random_id));
                        }
                      }
                    }
                    MessagesController.getInstance(ChatActivity.this.currentAccount).deleteMessages((ArrayList)localObject2, paramAnonymousDialogInterface, ChatActivity.this.currentEncryptedChat, i, arrayOfBoolean2[0]);
                    paramAnonymousInt--;
                    paramAnonymousDialogInterface = (DialogInterface)localObject2;
                  }
                  ChatActivity.this.actionBar.hideActionMode();
                  ChatActivity.this.updatePinnedMessageView(true);
                }
              }
            });
            localBuilder.setNegativeButton(LocaleController.getString("Cancel", NUM), null);
            showDialog(localBuilder.create());
            break;
            if (i != 0)
            {
              localObject3 = new FrameLayout(getParentActivity());
              localObject2 = new CheckBoxCell(getParentActivity(), 1);
              ((CheckBoxCell)localObject2).setBackgroundDrawable(Theme.getSelectorDrawable(false));
              if (this.currentChat != null)
              {
                ((CheckBoxCell)localObject2).setText(LocaleController.getString("DeleteForAll", NUM), "", false, false);
                if (!LocaleController.isRTL) {
                  break label1400;
                }
                paramInt = AndroidUtilities.dp(16.0F);
                if (!LocaleController.isRTL) {
                  break label1410;
                }
              }
              for (i = AndroidUtilities.dp(8.0F);; i = AndroidUtilities.dp(16.0F))
              {
                ((CheckBoxCell)localObject2).setPadding(paramInt, 0, i, 0);
                ((FrameLayout)localObject3).addView((View)localObject2, LayoutHelper.createFrame(-1, 48.0F, 51, 0.0F, 0.0F, 0.0F, 0.0F));
                ((CheckBoxCell)localObject2).setOnClickListener(new View.OnClickListener()
                {
                  public void onClick(View paramAnonymousView)
                  {
                    paramAnonymousView = (CheckBoxCell)paramAnonymousView;
                    boolean[] arrayOfBoolean = arrayOfBoolean2;
                    if (arrayOfBoolean2[0] == 0) {}
                    for (int i = 1;; i = 0)
                    {
                      arrayOfBoolean[0] = i;
                      paramAnonymousView.setChecked(arrayOfBoolean2[0], true);
                      return;
                    }
                  }
                });
                localBuilder.setView((View)localObject3);
                break;
                ((CheckBoxCell)localObject2).setText(LocaleController.formatString("DeleteForUser", NUM, new Object[] { UserObject.getFirstName(this.currentUser) }), "", false, false);
                break label1281;
                paramInt = AndroidUtilities.dp(8.0F);
                break label1294;
              }
            }
            localObject1 = null;
          }
          localObject1 = localObject2;
        } while (ChatObject.isChannel(this.currentChat));
        localObject1 = localObject2;
      } while (this.currentEncryptedChat != null);
      i = 0;
      paramInt = 0;
      n = ConnectionsManager.getInstance(this.currentAccount).getCurrentTime();
      if (((this.currentUser != null) && (this.currentUser.id != UserConfig.getInstance(this.currentAccount).getClientUserId()) && (!this.currentUser.bot)) || (this.currentChat != null))
      {
        if (paramMessageObject == null) {
          break label1775;
        }
        if ((paramMessageObject.isSendError()) || ((paramMessageObject.messageOwner.action != null) && (!(paramMessageObject.messageOwner.action instanceof TLRPC.TL_messageActionEmpty))) || ((!paramMessageObject.isOut()) && (j == 0) && ((this.currentChat == null) || ((!this.currentChat.creator) && ((!this.currentChat.admin) || (!this.currentChat.admins_enabled))))) || (n - paramMessageObject.messageOwner.date > k)) {
          break label1770;
        }
        paramInt = 1;
      }
      localObject1 = localObject2;
    } while (paramInt == 0);
    final Object localObject1 = new FrameLayout(getParentActivity());
    localObject3 = new CheckBoxCell(getParentActivity(), 1);
    ((CheckBoxCell)localObject3).setBackgroundDrawable(Theme.getSelectorDrawable(false));
    if (this.currentChat != null)
    {
      ((CheckBoxCell)localObject3).setText(LocaleController.getString("DeleteForAll", NUM), "", false, false);
      label1683:
      if (!LocaleController.isRTL) {
        break label1999;
      }
      paramInt = AndroidUtilities.dp(16.0F);
      label1696:
      if (!LocaleController.isRTL) {
        break label2009;
      }
    }
    label1770:
    label1775:
    label1939:
    label1999:
    label2009:
    for (i = AndroidUtilities.dp(8.0F);; i = AndroidUtilities.dp(16.0F))
    {
      ((CheckBoxCell)localObject3).setPadding(paramInt, 0, i, 0);
      ((FrameLayout)localObject1).addView((View)localObject3, LayoutHelper.createFrame(-1, 48.0F, 51, 0.0F, 0.0F, 0.0F, 0.0F));
      ((CheckBoxCell)localObject3).setOnClickListener(new View.OnClickListener()
      {
        public void onClick(View paramAnonymousView)
        {
          paramAnonymousView = (CheckBoxCell)paramAnonymousView;
          boolean[] arrayOfBoolean = arrayOfBoolean2;
          if (arrayOfBoolean2[0] == 0) {}
          for (int i = 1;; i = 0)
          {
            arrayOfBoolean[0] = i;
            paramAnonymousView.setChecked(arrayOfBoolean2[0], true);
            return;
          }
        }
      });
      localBuilder.setView((View)localObject1);
      localObject1 = localObject2;
      break;
      paramInt = 0;
      break label1613;
      m = 0;
      i1 = 1;
      for (;;)
      {
        paramInt = i;
        if (i1 < 0) {
          break;
        }
        i3 = 0;
        paramInt = i;
        i2 = m;
        i = paramInt;
        if (i3 < this.selectedMessagesIds[i1].size())
        {
          localObject1 = (MessageObject)this.selectedMessagesIds[i1].valueAt(i3);
          if (((MessageObject)localObject1).messageOwner.action != null) {
            i = paramInt;
          }
          for (;;)
          {
            i3++;
            paramInt = i;
            break;
            if ((!((MessageObject)localObject1).isOut()) && (j == 0) && ((this.currentChat == null) || ((!this.currentChat.creator) && ((!this.currentChat.admin) || (!this.currentChat.admins_enabled))))) {
              break label1939;
            }
            i = paramInt;
            if (paramInt == 0)
            {
              i = paramInt;
              if (n - ((MessageObject)localObject1).messageOwner.date <= k) {
                i = 1;
              }
            }
          }
          i2 = 1;
          i = 0;
        }
        paramInt = i;
        if (i2 != 0) {
          break;
        }
        i1--;
        m = i2;
      }
      ((CheckBoxCell)localObject3).setText(LocaleController.formatString("DeleteForUser", NUM, new Object[] { UserObject.getFirstName(this.currentUser) }), "", false, false);
      break label1683;
      paramInt = AndroidUtilities.dp(8.0F);
      break label1696;
    }
  }
  
  private void createMenu(View paramView, boolean paramBoolean1, boolean paramBoolean2)
  {
    createMenu(paramView, paramBoolean1, paramBoolean2, true);
  }
  
  private void createMenu(View paramView, boolean paramBoolean1, boolean paramBoolean2, boolean paramBoolean3)
  {
    if (this.actionBar.isActionModeShowed()) {}
    for (;;)
    {
      return;
      MessageObject localMessageObject = null;
      if ((paramView instanceof ChatMessageCell)) {
        localMessageObject = ((ChatMessageCell)paramView).getMessageObject();
      }
      int i;
      for (;;)
      {
        if (localMessageObject == null) {
          break label104;
        }
        i = getMessageType(localMessageObject);
        if ((!paramBoolean1) || (!(localMessageObject.messageOwner.action instanceof TLRPC.TL_messageActionPinMessage))) {
          break label106;
        }
        scrollToMessageId(localMessageObject.messageOwner.reply_to_msg_id, localMessageObject.messageOwner.id, true, 0, false);
        break;
        if ((paramView instanceof ChatActionCell)) {
          localMessageObject = ((ChatActionCell)paramView).getMessageObject();
        }
      }
      label104:
      continue;
      label106:
      this.selectedObject = null;
      this.selectedObjectGroup = null;
      this.forwardingMessage = null;
      this.forwardingMessageGroup = null;
      for (int j = 1; j >= 0; j--)
      {
        this.selectedMessagesCanCopyIds[j].clear();
        this.selectedMessagesCanStarIds[j].clear();
        this.selectedMessagesIds[j].clear();
      }
      this.cantDeleteMessagesCount = 0;
      this.canEditMessagesCount = 0;
      this.actionBar.hideActionMode();
      updatePinnedMessageView(true);
      label204:
      label332:
      int m;
      label436:
      int n;
      label478:
      int i1;
      label634:
      Object localObject1;
      ArrayList localArrayList;
      if (paramBoolean3)
      {
        paramView = getValidGroupedMessage(localMessageObject);
        int k = 1;
        if ((localMessageObject.getDialogId() == this.mergeDialogId) || (localMessageObject.getId() <= 0) || (!ChatObject.isChannel(this.currentChat)) || ((!this.currentChat.creator) && ((this.currentChat.admin_rights == null) || (((!this.currentChat.megagroup) || (!this.currentChat.admin_rights.pin_messages)) && ((this.currentChat.megagroup) || (!this.currentChat.admin_rights.edit_messages))))) || ((localMessageObject.messageOwner.action != null) && (!(localMessageObject.messageOwner.action instanceof TLRPC.TL_messageActionEmpty)))) {
          break label849;
        }
        j = 1;
        if ((localMessageObject.getDialogId() == this.mergeDialogId) || (this.info == null) || (this.info.pinned_msg_id != localMessageObject.getId()) || ((!this.currentChat.creator) && ((this.currentChat.admin_rights == null) || (((!this.currentChat.megagroup) || (!this.currentChat.admin_rights.pin_messages)) && ((this.currentChat.megagroup) || (!this.currentChat.admin_rights.edit_messages)))))) {
          break label855;
        }
        m = 1;
        if ((paramView != null) || (!localMessageObject.canEditMessage(this.currentChat)) || (this.chatActivityEnterView.hasAudioToSend()) || (localMessageObject.getDialogId() == this.mergeDialogId)) {
          break label861;
        }
        n = 1;
        if (((this.currentEncryptedChat == null) || (AndroidUtilities.getPeerLayerVersion(this.currentEncryptedChat.layer) >= 46)) && ((i != 1) || ((localMessageObject.getDialogId() != this.mergeDialogId) && (!localMessageObject.needDrawBluredPreview()))) && ((this.currentEncryptedChat != null) || (localMessageObject.getId() >= 0)) && ((this.bottomOverlayChat == null) || (this.bottomOverlayChat.getVisibility() != 0)) && (!this.isBroadcast))
        {
          i1 = k;
          if (this.currentChat == null) {
            break label634;
          }
          if ((!ChatObject.isNotInChat(this.currentChat)) && ((!ChatObject.isChannel(this.currentChat)) || (ChatObject.canPost(this.currentChat)) || (this.currentChat.megagroup)))
          {
            i1 = k;
            if (ChatObject.canSendMessages(this.currentChat)) {
              break label634;
            }
          }
        }
        i1 = 0;
        if ((!paramBoolean1) && (i >= 2) && (i != 20) && (!localMessageObject.needDrawBluredPreview()) && (!localMessageObject.isLiveLocation())) {
          break label3532;
        }
        if (i < 0) {
          continue;
        }
        this.selectedObject = localMessageObject;
        this.selectedObjectGroup = paramView;
        if (getParentActivity() == null) {
          continue;
        }
        localObject1 = new AlertDialog.Builder(getParentActivity());
        localArrayList = new ArrayList();
        localObject2 = new ArrayList();
        if (i != 0) {
          break label867;
        }
        localArrayList.add(LocaleController.getString("Retry", NUM));
        ((ArrayList)localObject2).add(Integer.valueOf(0));
        localArrayList.add(LocaleController.getString("Delete", NUM));
        ((ArrayList)localObject2).add(Integer.valueOf(1));
      }
      for (;;)
      {
        label776:
        if (!((ArrayList)localObject2).isEmpty())
        {
          ((AlertDialog.Builder)localObject1).setItems((CharSequence[])localArrayList.toArray(new CharSequence[localArrayList.size()]), new DialogInterface.OnClickListener()
          {
            public void onClick(DialogInterface paramAnonymousDialogInterface, int paramAnonymousInt)
            {
              if ((ChatActivity.this.selectedObject == null) || (paramAnonymousInt < 0) || (paramAnonymousInt >= localObject2.size())) {}
              for (;;)
              {
                return;
                ChatActivity.this.processSelectedOption(((Integer)localObject2.get(paramAnonymousInt)).intValue());
              }
            }
          });
          ((AlertDialog.Builder)localObject1).setTitle(LocaleController.getString("Message", NUM));
          showDialog(((AlertDialog.Builder)localObject1).create());
          break;
          paramView = null;
          break label204;
          label849:
          j = 0;
          break label332;
          label855:
          m = 0;
          break label436;
          label861:
          n = 0;
          break label478;
          label867:
          if (i == 1)
          {
            if ((this.currentChat != null) && (!this.isBroadcast))
            {
              if (i1 != 0)
              {
                localArrayList.add(LocaleController.getString("Reply", NUM));
                ((ArrayList)localObject2).add(Integer.valueOf(8));
              }
              if (m != 0)
              {
                localArrayList.add(LocaleController.getString("UnpinMessage", NUM));
                ((ArrayList)localObject2).add(Integer.valueOf(14));
              }
              for (;;)
              {
                if (n != 0)
                {
                  localArrayList.add(LocaleController.getString("Edit", NUM));
                  ((ArrayList)localObject2).add(Integer.valueOf(12));
                }
                if ((this.selectedObject.contentType == 0) && (this.selectedObject.getId() > 0) && (!this.selectedObject.isOut()) && ((ChatObject.isChannel(this.currentChat)) || ((this.currentUser != null) && (this.currentUser.bot))))
                {
                  localArrayList.add(LocaleController.getString("ReportChat", NUM));
                  ((ArrayList)localObject2).add(Integer.valueOf(23));
                }
                if (!localMessageObject.canDeleteMessage(this.currentChat)) {
                  break;
                }
                localArrayList.add(LocaleController.getString("Delete", NUM));
                ((ArrayList)localObject2).add(Integer.valueOf(1));
                break;
                if (j != 0)
                {
                  localArrayList.add(LocaleController.getString("PinMessage", NUM));
                  ((ArrayList)localObject2).add(Integer.valueOf(13));
                }
              }
            }
            TLRPC.TL_messageActionPhoneCall localTL_messageActionPhoneCall;
            if ((localMessageObject.messageOwner.action != null) && ((localMessageObject.messageOwner.action instanceof TLRPC.TL_messageActionPhoneCall)))
            {
              localTL_messageActionPhoneCall = (TLRPC.TL_messageActionPhoneCall)localMessageObject.messageOwner.action;
              if (((!(localTL_messageActionPhoneCall.reason instanceof TLRPC.TL_phoneCallDiscardReasonMissed)) && (!(localTL_messageActionPhoneCall.reason instanceof TLRPC.TL_phoneCallDiscardReasonBusy))) || (localMessageObject.isOutOwner())) {
                break label1352;
              }
            }
            label1352:
            for (paramView = LocaleController.getString("CallBack", NUM);; paramView = LocaleController.getString("CallAgain", NUM))
            {
              localArrayList.add(paramView);
              ((ArrayList)localObject2).add(Integer.valueOf(18));
              if (VoIPHelper.canRateCall(localTL_messageActionPhoneCall))
              {
                localArrayList.add(LocaleController.getString("CallMessageReportProblem", NUM));
                ((ArrayList)localObject2).add(Integer.valueOf(19));
              }
              if ((paramBoolean1) && (this.selectedObject.getId() > 0) && (i1 != 0))
              {
                localArrayList.add(LocaleController.getString("Reply", NUM));
                ((ArrayList)localObject2).add(Integer.valueOf(8));
              }
              if (!localMessageObject.canDeleteMessage(this.currentChat)) {
                break;
              }
              localArrayList.add(LocaleController.getString("Delete", NUM));
              ((ArrayList)localObject2).add(Integer.valueOf(1));
              break;
            }
          }
          if (i == 20)
          {
            localArrayList.add(LocaleController.getString("Retry", NUM));
            ((ArrayList)localObject2).add(Integer.valueOf(0));
            localArrayList.add(LocaleController.getString("Copy", NUM));
            ((ArrayList)localObject2).add(Integer.valueOf(3));
            localArrayList.add(LocaleController.getString("Delete", NUM));
            ((ArrayList)localObject2).add(Integer.valueOf(1));
          }
          else
          {
            if (this.currentEncryptedChat == null)
            {
              if (i1 != 0)
              {
                localArrayList.add(LocaleController.getString("Reply", NUM));
                ((ArrayList)localObject2).add(Integer.valueOf(8));
              }
              if ((this.selectedObject.type == 0) || (this.selectedObject.caption != null))
              {
                localArrayList.add(LocaleController.getString("Copy", NUM));
                ((ArrayList)localObject2).add(Integer.valueOf(3));
              }
              if ((ChatObject.isChannel(this.currentChat)) && (this.currentChat.megagroup) && (!TextUtils.isEmpty(this.currentChat.username)) && (ChatObject.hasAdminRights(this.currentChat)))
              {
                localArrayList.add(LocaleController.getString("CopyLink", NUM));
                ((ArrayList)localObject2).add(Integer.valueOf(22));
              }
              if (i == 3)
              {
                if (((this.selectedObject.messageOwner.media instanceof TLRPC.TL_messageMediaWebPage)) && (MessageObject.isNewGifDocument(this.selectedObject.messageOwner.media.webpage.document)))
                {
                  localArrayList.add(LocaleController.getString("SaveToGIFs", NUM));
                  ((ArrayList)localObject2).add(Integer.valueOf(11));
                }
                label1672:
                if ((!this.selectedObject.needDrawBluredPreview()) && (!this.selectedObject.isLiveLocation()))
                {
                  localArrayList.add(LocaleController.getString("Forward", NUM));
                  ((ArrayList)localObject2).add(Integer.valueOf(2));
                }
                if (m == 0) {
                  break label2876;
                }
                localArrayList.add(LocaleController.getString("UnpinMessage", NUM));
                ((ArrayList)localObject2).add(Integer.valueOf(14));
              }
              for (;;)
              {
                if (n != 0)
                {
                  localArrayList.add(LocaleController.getString("Edit", NUM));
                  ((ArrayList)localObject2).add(Integer.valueOf(12));
                }
                if ((this.selectedObject.contentType == 0) && (this.selectedObject.getId() > 0) && (!this.selectedObject.isOut()) && ((ChatObject.isChannel(this.currentChat)) || ((this.currentUser != null) && (this.currentUser.bot))))
                {
                  localArrayList.add(LocaleController.getString("ReportChat", NUM));
                  ((ArrayList)localObject2).add(Integer.valueOf(23));
                }
                if (!localMessageObject.canDeleteMessage(this.currentChat)) {
                  break;
                }
                localArrayList.add(LocaleController.getString("Delete", NUM));
                ((ArrayList)localObject2).add(Integer.valueOf(1));
                break;
                if (i == 4)
                {
                  if (this.selectedObject.isVideo())
                  {
                    if (this.selectedObject.needDrawBluredPreview()) {
                      break label1672;
                    }
                    localArrayList.add(LocaleController.getString("SaveToGallery", NUM));
                    ((ArrayList)localObject2).add(Integer.valueOf(4));
                    localArrayList.add(LocaleController.getString("ShareFile", NUM));
                    ((ArrayList)localObject2).add(Integer.valueOf(6));
                    break label1672;
                  }
                  if (this.selectedObject.isMusic())
                  {
                    localArrayList.add(LocaleController.getString("SaveToMusic", NUM));
                    ((ArrayList)localObject2).add(Integer.valueOf(10));
                    localArrayList.add(LocaleController.getString("ShareFile", NUM));
                    ((ArrayList)localObject2).add(Integer.valueOf(6));
                    break label1672;
                  }
                  if (this.selectedObject.getDocument() != null)
                  {
                    if (MessageObject.isNewGifDocument(this.selectedObject.getDocument()))
                    {
                      localArrayList.add(LocaleController.getString("SaveToGIFs", NUM));
                      ((ArrayList)localObject2).add(Integer.valueOf(11));
                    }
                    localArrayList.add(LocaleController.getString("SaveToDownloads", NUM));
                    ((ArrayList)localObject2).add(Integer.valueOf(10));
                    localArrayList.add(LocaleController.getString("ShareFile", NUM));
                    ((ArrayList)localObject2).add(Integer.valueOf(6));
                    break label1672;
                  }
                  if (this.selectedObject.needDrawBluredPreview()) {
                    break label1672;
                  }
                  localArrayList.add(LocaleController.getString("SaveToGallery", NUM));
                  ((ArrayList)localObject2).add(Integer.valueOf(4));
                  break label1672;
                }
                if (i == 5)
                {
                  localArrayList.add(LocaleController.getString("ApplyLocalizationFile", NUM));
                  ((ArrayList)localObject2).add(Integer.valueOf(5));
                  localArrayList.add(LocaleController.getString("SaveToDownloads", NUM));
                  ((ArrayList)localObject2).add(Integer.valueOf(10));
                  localArrayList.add(LocaleController.getString("ShareFile", NUM));
                  ((ArrayList)localObject2).add(Integer.valueOf(6));
                  break label1672;
                }
                if (i == 10)
                {
                  localArrayList.add(LocaleController.getString("ApplyThemeFile", NUM));
                  ((ArrayList)localObject2).add(Integer.valueOf(5));
                  localArrayList.add(LocaleController.getString("SaveToDownloads", NUM));
                  ((ArrayList)localObject2).add(Integer.valueOf(10));
                  localArrayList.add(LocaleController.getString("ShareFile", NUM));
                  ((ArrayList)localObject2).add(Integer.valueOf(6));
                  break label1672;
                }
                if (i == 6)
                {
                  localArrayList.add(LocaleController.getString("SaveToGallery", NUM));
                  ((ArrayList)localObject2).add(Integer.valueOf(7));
                  localArrayList.add(LocaleController.getString("SaveToDownloads", NUM));
                  ((ArrayList)localObject2).add(Integer.valueOf(10));
                  localArrayList.add(LocaleController.getString("ShareFile", NUM));
                  ((ArrayList)localObject2).add(Integer.valueOf(6));
                  break label1672;
                }
                if (i == 7)
                {
                  if (this.selectedObject.isMask())
                  {
                    localArrayList.add(LocaleController.getString("AddToMasks", NUM));
                    ((ArrayList)localObject2).add(Integer.valueOf(9));
                    break label1672;
                  }
                  localArrayList.add(LocaleController.getString("AddToStickers", NUM));
                  ((ArrayList)localObject2).add(Integer.valueOf(9));
                  if (!DataQuery.getInstance(this.currentAccount).isStickerInFavorites(this.selectedObject.getDocument()))
                  {
                    if (!DataQuery.getInstance(this.currentAccount).canAddStickerToFavorites()) {
                      break label1672;
                    }
                    localArrayList.add(LocaleController.getString("AddToFavorites", NUM));
                    ((ArrayList)localObject2).add(Integer.valueOf(20));
                    break label1672;
                  }
                  localArrayList.add(LocaleController.getString("DeleteFromFavorites", NUM));
                  ((ArrayList)localObject2).add(Integer.valueOf(21));
                  break label1672;
                }
                if (i == 8)
                {
                  paramView = MessagesController.getInstance(this.currentAccount).getUser(Integer.valueOf(this.selectedObject.messageOwner.media.user_id));
                  if ((paramView != null) && (paramView.id != UserConfig.getInstance(this.currentAccount).getClientUserId()) && (ContactsController.getInstance(this.currentAccount).contactsDict.get(Integer.valueOf(paramView.id)) == null))
                  {
                    localArrayList.add(LocaleController.getString("AddContactTitle", NUM));
                    ((ArrayList)localObject2).add(Integer.valueOf(15));
                  }
                  if (TextUtils.isEmpty(this.selectedObject.messageOwner.media.phone_number)) {
                    break label1672;
                  }
                  localArrayList.add(LocaleController.getString("Copy", NUM));
                  ((ArrayList)localObject2).add(Integer.valueOf(16));
                  localArrayList.add(LocaleController.getString("Call", NUM));
                  ((ArrayList)localObject2).add(Integer.valueOf(17));
                  break label1672;
                }
                if (i != 9) {
                  break label1672;
                }
                if (!DataQuery.getInstance(this.currentAccount).isStickerInFavorites(this.selectedObject.getDocument()))
                {
                  localArrayList.add(LocaleController.getString("AddToFavorites", NUM));
                  ((ArrayList)localObject2).add(Integer.valueOf(20));
                  break label1672;
                }
                localArrayList.add(LocaleController.getString("DeleteFromFavorites", NUM));
                ((ArrayList)localObject2).add(Integer.valueOf(21));
                break label1672;
                label2876:
                if (j != 0)
                {
                  localArrayList.add(LocaleController.getString("PinMessage", NUM));
                  ((ArrayList)localObject2).add(Integer.valueOf(13));
                }
              }
            }
            if (i1 != 0)
            {
              localArrayList.add(LocaleController.getString("Reply", NUM));
              ((ArrayList)localObject2).add(Integer.valueOf(8));
            }
            if ((this.selectedObject.type == 0) || (this.selectedObject.caption != null))
            {
              localArrayList.add(LocaleController.getString("Copy", NUM));
              ((ArrayList)localObject2).add(Integer.valueOf(3));
            }
            if (i != 4) {
              break label3249;
            }
            if (!this.selectedObject.isVideo()) {
              break label3081;
            }
            localArrayList.add(LocaleController.getString("SaveToGallery", NUM));
            ((ArrayList)localObject2).add(Integer.valueOf(4));
            localArrayList.add(LocaleController.getString("ShareFile", NUM));
            ((ArrayList)localObject2).add(Integer.valueOf(6));
          }
        }
      }
      for (;;)
      {
        localArrayList.add(LocaleController.getString("Delete", NUM));
        ((ArrayList)localObject2).add(Integer.valueOf(1));
        break label776;
        break;
        label3081:
        if (this.selectedObject.isMusic())
        {
          localArrayList.add(LocaleController.getString("SaveToMusic", NUM));
          ((ArrayList)localObject2).add(Integer.valueOf(10));
          localArrayList.add(LocaleController.getString("ShareFile", NUM));
          ((ArrayList)localObject2).add(Integer.valueOf(6));
        }
        else if ((!this.selectedObject.isVideo()) && (this.selectedObject.getDocument() != null))
        {
          localArrayList.add(LocaleController.getString("SaveToDownloads", NUM));
          ((ArrayList)localObject2).add(Integer.valueOf(10));
          localArrayList.add(LocaleController.getString("ShareFile", NUM));
          ((ArrayList)localObject2).add(Integer.valueOf(6));
        }
        else
        {
          localArrayList.add(LocaleController.getString("SaveToGallery", NUM));
          ((ArrayList)localObject2).add(Integer.valueOf(4));
          continue;
          label3249:
          if (i == 5)
          {
            localArrayList.add(LocaleController.getString("ApplyLocalizationFile", NUM));
            ((ArrayList)localObject2).add(Integer.valueOf(5));
          }
          else if (i == 10)
          {
            localArrayList.add(LocaleController.getString("ApplyThemeFile", NUM));
            ((ArrayList)localObject2).add(Integer.valueOf(5));
          }
          else if (i == 7)
          {
            localArrayList.add(LocaleController.getString("AddToStickers", NUM));
            ((ArrayList)localObject2).add(Integer.valueOf(9));
          }
          else if (i == 8)
          {
            paramView = MessagesController.getInstance(this.currentAccount).getUser(Integer.valueOf(this.selectedObject.messageOwner.media.user_id));
            if ((paramView != null) && (paramView.id != UserConfig.getInstance(this.currentAccount).getClientUserId()) && (ContactsController.getInstance(this.currentAccount).contactsDict.get(Integer.valueOf(paramView.id)) == null))
            {
              localArrayList.add(LocaleController.getString("AddContactTitle", NUM));
              ((ArrayList)localObject2).add(Integer.valueOf(15));
            }
            if (!TextUtils.isEmpty(this.selectedObject.messageOwner.media.phone_number))
            {
              localArrayList.add(LocaleController.getString("Copy", NUM));
              ((ArrayList)localObject2).add(Integer.valueOf(16));
              localArrayList.add(LocaleController.getString("Call", NUM));
              ((ArrayList)localObject2).add(Integer.valueOf(17));
            }
          }
        }
      }
      label3532:
      final Object localObject2 = this.actionBar.createActionMode();
      paramView = ((ActionBarMenu)localObject2).getItem(11);
      if (paramView != null) {
        paramView.setVisibility(0);
      }
      paramView = ((ActionBarMenu)localObject2).getItem(12);
      if (paramView != null) {
        paramView.setVisibility(0);
      }
      this.actionBar.showActionMode();
      updatePinnedMessageView(true);
      paramView = new AnimatorSet();
      localObject2 = new ArrayList();
      for (j = 0; j < this.actionModeViews.size(); j++)
      {
        localObject1 = (View)this.actionModeViews.get(j);
        ((View)localObject1).setPivotY(ActionBar.getCurrentActionBarHeight() / 2);
        AndroidUtilities.clearDrawableAnimation((View)localObject1);
        ((ArrayList)localObject2).add(ObjectAnimator.ofFloat(localObject1, "scaleY", new float[] { 0.1F, 1.0F }));
      }
      paramView.playTogether((Collection)localObject2);
      paramView.setDuration(250L);
      paramView.start();
      addToSelectedMessages(localMessageObject, paramBoolean2);
      this.selectedMessagesCountTextView.setNumber(this.selectedMessagesIds[0].size() + this.selectedMessagesIds[1].size(), false);
      updateVisibleRows();
    }
  }
  
  private TextureView createTextureView(boolean paramBoolean)
  {
    Object localObject;
    if (this.parentLayout == null)
    {
      localObject = null;
      return (TextureView)localObject;
    }
    if (this.roundVideoContainer == null)
    {
      if (Build.VERSION.SDK_INT < 21) {
        break label257;
      }
      this.roundVideoContainer = new FrameLayout(getParentActivity())
      {
        public void setTranslationY(float paramAnonymousFloat)
        {
          super.setTranslationY(paramAnonymousFloat);
          ChatActivity.this.contentView.invalidate();
        }
      };
      this.roundVideoContainer.setOutlineProvider(new ViewOutlineProvider()
      {
        @TargetApi(21)
        public void getOutline(View paramAnonymousView, Outline paramAnonymousOutline)
        {
          paramAnonymousOutline.setOval(0, 0, AndroidUtilities.roundMessageSize, AndroidUtilities.roundMessageSize);
        }
      });
      this.roundVideoContainer.setClipToOutline(true);
    }
    for (;;)
    {
      this.roundVideoContainer.setWillNotDraw(false);
      this.roundVideoContainer.setVisibility(4);
      this.aspectRatioFrameLayout = new AspectRatioFrameLayout(getParentActivity());
      this.aspectRatioFrameLayout.setBackgroundColor(0);
      if (paramBoolean) {
        this.roundVideoContainer.addView(this.aspectRatioFrameLayout, LayoutHelper.createFrame(-1, -1.0F));
      }
      this.videoTextureView = new TextureView(getParentActivity());
      this.videoTextureView.setOpaque(false);
      this.aspectRatioFrameLayout.addView(this.videoTextureView, LayoutHelper.createFrame(-1, -1.0F));
      ViewGroup localViewGroup = (ViewGroup)this.roundVideoContainer.getParent();
      localObject = localViewGroup;
      if (localViewGroup != null)
      {
        localObject = localViewGroup;
        if (localViewGroup != this.contentView)
        {
          localViewGroup.removeView(this.roundVideoContainer);
          localObject = null;
        }
      }
      if (localObject == null) {
        this.contentView.addView(this.roundVideoContainer, 1, new FrameLayout.LayoutParams(AndroidUtilities.roundMessageSize, AndroidUtilities.roundMessageSize));
      }
      this.roundVideoContainer.setVisibility(4);
      this.aspectRatioFrameLayout.setDrawingReady(false);
      localObject = this.videoTextureView;
      break;
      label257:
      this.roundVideoContainer = new FrameLayout(getParentActivity())
      {
        protected void dispatchDraw(Canvas paramAnonymousCanvas)
        {
          super.dispatchDraw(paramAnonymousCanvas);
          paramAnonymousCanvas.drawPath(ChatActivity.this.aspectPath, ChatActivity.this.aspectPaint);
        }
        
        protected void onSizeChanged(int paramAnonymousInt1, int paramAnonymousInt2, int paramAnonymousInt3, int paramAnonymousInt4)
        {
          super.onSizeChanged(paramAnonymousInt1, paramAnonymousInt2, paramAnonymousInt3, paramAnonymousInt4);
          ChatActivity.this.aspectPath.reset();
          ChatActivity.this.aspectPath.addCircle(paramAnonymousInt1 / 2, paramAnonymousInt2 / 2, paramAnonymousInt1 / 2, Path.Direction.CW);
          ChatActivity.this.aspectPath.toggleInverseFillType();
        }
        
        public void setTranslationY(float paramAnonymousFloat)
        {
          super.setTranslationY(paramAnonymousFloat);
          ChatActivity.this.contentView.invalidate();
        }
        
        public void setVisibility(int paramAnonymousInt)
        {
          super.setVisibility(paramAnonymousInt);
          if (paramAnonymousInt == 0) {
            setLayerType(2, null);
          }
        }
      };
      this.aspectPath = new Path();
      this.aspectPaint = new Paint(1);
      this.aspectPaint.setColor(-16777216);
      this.aspectPaint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.CLEAR));
    }
  }
  
  private ArrayList<MessageObject> createVoiceMessagesPlaylist(MessageObject paramMessageObject, boolean paramBoolean)
  {
    ArrayList localArrayList = new ArrayList();
    localArrayList.add(paramMessageObject);
    int i = paramMessageObject.getId();
    paramMessageObject.getDialogId();
    if (i != 0)
    {
      int j = this.messages.size() - 1;
      if (j >= 0)
      {
        MessageObject localMessageObject = (MessageObject)this.messages.get(j);
        if ((localMessageObject.getDialogId() == this.mergeDialogId) && (paramMessageObject.getDialogId() != this.mergeDialogId)) {}
        for (;;)
        {
          j--;
          break;
          if (((this.currentEncryptedChat == null) && (localMessageObject.getId() > i)) || ((this.currentEncryptedChat != null) && (localMessageObject.getId() < i) && ((localMessageObject.isVoice()) || (localMessageObject.isRoundVideo())) && ((!paramBoolean) || ((localMessageObject.isContentUnread()) && (!localMessageObject.isOut()))))) {
            localArrayList.add(localMessageObject);
          }
        }
      }
    }
    return localArrayList;
  }
  
  private void destroyTextureView()
  {
    if ((this.roundVideoContainer == null) || (this.roundVideoContainer.getParent() == null)) {}
    for (;;)
    {
      return;
      this.contentView.removeView(this.roundVideoContainer);
      this.aspectRatioFrameLayout.setDrawingReady(false);
      this.roundVideoContainer.setVisibility(4);
      if (Build.VERSION.SDK_INT < 21) {
        this.roundVideoContainer.setLayerType(0, null);
      }
    }
  }
  
  private void fixLayout()
  {
    if (this.avatarContainer != null) {
      this.avatarContainer.getViewTreeObserver().addOnPreDrawListener(new ViewTreeObserver.OnPreDrawListener()
      {
        public boolean onPreDraw()
        {
          if (ChatActivity.this.avatarContainer != null) {
            ChatActivity.this.avatarContainer.getViewTreeObserver().removeOnPreDrawListener(this);
          }
          return ChatActivity.this.fixLayoutInternal();
        }
      });
    }
  }
  
  private boolean fixLayoutInternal()
  {
    if ((!AndroidUtilities.isTablet()) && (ApplicationLoader.applicationContext.getResources().getConfiguration().orientation == 2)) {
      this.selectedMessagesCountTextView.setTextSize(18);
    }
    Object localObject2;
    for (;;)
    {
      Object localObject1 = null;
      int i = this.chatListView.getChildCount();
      int j = 0;
      while (j < i)
      {
        localObject2 = this.chatListView.getChildAt(j);
        Object localObject3 = localObject1;
        if ((localObject2 instanceof ChatMessageCell))
        {
          MessageObject.GroupedMessages localGroupedMessages = ((ChatMessageCell)localObject2).getCurrentMessagesGroup();
          localObject3 = localObject1;
          if (localGroupedMessages != null)
          {
            localObject3 = localObject1;
            if (localGroupedMessages.hasSibling)
            {
              localObject2 = localObject1;
              if (localObject1 == null) {
                localObject2 = new HashMap();
              }
              localObject3 = localObject2;
              if (!((HashMap)localObject2).containsKey(Long.valueOf(localGroupedMessages.groupId)))
              {
                ((HashMap)localObject2).put(Long.valueOf(localGroupedMessages.groupId), localGroupedMessages);
                localObject1 = (MessageObject)localGroupedMessages.messages.get(localGroupedMessages.messages.size() - 1);
                int k = this.messages.indexOf(localObject1);
                localObject3 = localObject2;
                if (k >= 0)
                {
                  this.chatAdapter.notifyItemRangeChanged(this.chatAdapter.messagesStartRow + k, localGroupedMessages.messages.size());
                  localObject3 = localObject2;
                }
              }
            }
          }
        }
        j++;
        localObject1 = localObject3;
      }
      this.selectedMessagesCountTextView.setTextSize(20);
    }
    if (AndroidUtilities.isTablet()) {
      if ((AndroidUtilities.isSmallTablet()) && (ApplicationLoader.applicationContext.getResources().getConfiguration().orientation == 1))
      {
        this.actionBar.setBackButtonDrawable(new BackDrawable(false));
        if ((this.fragmentContextView != null) && (this.fragmentContextView.getParent() == null)) {
          ((ViewGroup)this.fragmentView).addView(this.fragmentContextView, LayoutHelper.createFrame(-1, 39.0F, 51, 0.0F, -36.0F, 0.0F, 0.0F));
        }
      }
    }
    for (boolean bool = false;; bool = true)
    {
      return bool;
      localObject2 = this.actionBar;
      if ((this.parentLayout == null) || (this.parentLayout.fragmentsStack.isEmpty()) || (this.parentLayout.fragmentsStack.get(0) == this) || (this.parentLayout.fragmentsStack.size() == 1)) {}
      for (bool = true;; bool = false)
      {
        ((ActionBar)localObject2).setBackButtonDrawable(new BackDrawable(bool));
        if ((this.fragmentContextView == null) || (this.fragmentContextView.getParent() == null)) {
          break;
        }
        this.fragmentView.setPadding(0, 0, 0, 0);
        ((ViewGroup)this.fragmentView).removeView(this.fragmentContextView);
        break;
      }
    }
  }
  
  private void forwardMessages(ArrayList<MessageObject> paramArrayList, boolean paramBoolean)
  {
    if ((paramArrayList == null) || (paramArrayList.isEmpty())) {}
    for (;;)
    {
      return;
      if (!paramBoolean)
      {
        AlertsCreator.showSendMediaAlert(SendMessagesHelper.getInstance(this.currentAccount).sendMessage(paramArrayList, this.dialog_id), this);
      }
      else
      {
        Iterator localIterator = paramArrayList.iterator();
        while (localIterator.hasNext())
        {
          paramArrayList = (MessageObject)localIterator.next();
          SendMessagesHelper.getInstance(this.currentAccount).processForwardFromMyName(paramArrayList, this.dialog_id);
        }
      }
    }
  }
  
  private String getMessageContent(MessageObject paramMessageObject, int paramInt, boolean paramBoolean)
  {
    String str1 = "";
    String str2 = str1;
    Object localObject;
    if (paramBoolean)
    {
      str2 = str1;
      if (paramInt != paramMessageObject.messageOwner.from_id)
      {
        if (paramMessageObject.messageOwner.from_id <= 0) {
          break label148;
        }
        localObject = MessagesController.getInstance(this.currentAccount).getUser(Integer.valueOf(paramMessageObject.messageOwner.from_id));
        str2 = str1;
        if (localObject != null) {
          str2 = ContactsController.formatName(((TLRPC.User)localObject).first_name, ((TLRPC.User)localObject).last_name) + ":\n";
        }
      }
    }
    if ((paramMessageObject.type == 0) && (paramMessageObject.messageOwner.message != null)) {
      paramMessageObject = str2 + paramMessageObject.messageOwner.message;
    }
    for (;;)
    {
      return paramMessageObject;
      label148:
      str2 = str1;
      if (paramMessageObject.messageOwner.from_id >= 0) {
        break;
      }
      localObject = MessagesController.getInstance(this.currentAccount).getChat(Integer.valueOf(-paramMessageObject.messageOwner.from_id));
      str2 = str1;
      if (localObject == null) {
        break;
      }
      str2 = ((TLRPC.Chat)localObject).title + ":\n";
      break;
      if ((paramMessageObject.messageOwner.media != null) && (paramMessageObject.messageOwner.message != null)) {
        paramMessageObject = str2 + paramMessageObject.messageOwner.message;
      } else {
        paramMessageObject = str2 + paramMessageObject.messageText;
      }
    }
  }
  
  private int getMessageType(MessageObject paramMessageObject)
  {
    int i = 0;
    int j;
    if (paramMessageObject == null) {
      j = -1;
    }
    for (;;)
    {
      return j;
      String str;
      if (this.currentEncryptedChat == null)
      {
        if ((this.isBroadcast) && (paramMessageObject.getId() <= 0) && (paramMessageObject.isSendError())) {
          j = 1;
        }
        for (;;)
        {
          if (((!this.isBroadcast) && (paramMessageObject.getId() <= 0) && (paramMessageObject.isOut())) || (j != 0))
          {
            if (paramMessageObject.isSendError())
            {
              j = i;
              if (!paramMessageObject.isMediaEmpty()) {
                break;
              }
              j = 20;
              break;
              j = 0;
              continue;
            }
            j = -1;
            break;
          }
        }
        if (paramMessageObject.type == 6)
        {
          j = -1;
        }
        else if ((paramMessageObject.type == 10) || (paramMessageObject.type == 11) || (paramMessageObject.type == 16))
        {
          if (paramMessageObject.getId() == 0) {
            j = -1;
          } else {
            j = 1;
          }
        }
        else if (paramMessageObject.isVoice())
        {
          j = 2;
        }
        else if (paramMessageObject.isSticker())
        {
          paramMessageObject = paramMessageObject.getInputStickerSet();
          if ((paramMessageObject instanceof TLRPC.TL_inputStickerSetID))
          {
            if (!DataQuery.getInstance(this.currentAccount).isStickerPackInstalled(paramMessageObject.id)) {
              j = 7;
            }
          }
          else if (((paramMessageObject instanceof TLRPC.TL_inputStickerSetShortName)) && (!DataQuery.getInstance(this.currentAccount).isStickerPackInstalled(paramMessageObject.short_name)))
          {
            j = 7;
            continue;
          }
          j = 9;
        }
        else
        {
          if (((!paramMessageObject.isRoundVideo()) || ((paramMessageObject.isRoundVideo()) && (BuildVars.DEBUG_VERSION))) && (((paramMessageObject.messageOwner.media instanceof TLRPC.TL_messageMediaPhoto)) || (paramMessageObject.getDocument() != null) || (paramMessageObject.isMusic()) || (paramMessageObject.isVideo())))
          {
            i = 0;
            j = i;
            if (!TextUtils.isEmpty(paramMessageObject.messageOwner.attachPath))
            {
              j = i;
              if (new File(paramMessageObject.messageOwner.attachPath).exists()) {
                j = 1;
              }
            }
            i = j;
            if (j == 0)
            {
              i = j;
              if (FileLoader.getPathToMessage(paramMessageObject.messageOwner).exists()) {
                i = 1;
              }
            }
            if (i != 0)
            {
              if (paramMessageObject.getDocument() != null)
              {
                str = paramMessageObject.getDocument().mime_type;
                if (str != null)
                {
                  if (paramMessageObject.getDocumentName().toLowerCase().endsWith("attheme"))
                  {
                    j = 10;
                    continue;
                  }
                  if (str.endsWith("/xml"))
                  {
                    j = 5;
                    continue;
                  }
                  if ((str.endsWith("/png")) || (str.endsWith("/jpg")) || (str.endsWith("/jpeg")))
                  {
                    j = 6;
                    continue;
                  }
                }
              }
              j = 4;
            }
          }
          else
          {
            if (paramMessageObject.type == 12)
            {
              j = 8;
              continue;
            }
            if (paramMessageObject.isMediaEmpty())
            {
              j = 3;
              continue;
            }
          }
          j = 2;
        }
      }
      else if (paramMessageObject.isSending())
      {
        j = -1;
      }
      else if (paramMessageObject.type == 6)
      {
        j = -1;
      }
      else if (paramMessageObject.isSendError())
      {
        j = i;
        if (paramMessageObject.isMediaEmpty()) {
          j = 20;
        }
      }
      else if ((paramMessageObject.type == 10) || (paramMessageObject.type == 11))
      {
        if ((paramMessageObject.getId() == 0) || (paramMessageObject.isSending())) {
          j = -1;
        } else {
          j = 1;
        }
      }
      else if (paramMessageObject.isVoice())
      {
        j = 2;
      }
      else
      {
        if (paramMessageObject.isSticker())
        {
          paramMessageObject = paramMessageObject.getInputStickerSet();
          if (((paramMessageObject instanceof TLRPC.TL_inputStickerSetShortName)) && (!DataQuery.getInstance(this.currentAccount).isStickerPackInstalled(paramMessageObject.short_name))) {
            j = 7;
          }
        }
        else if ((!paramMessageObject.isRoundVideo()) && (((paramMessageObject.messageOwner.media instanceof TLRPC.TL_messageMediaPhoto)) || (paramMessageObject.getDocument() != null) || (paramMessageObject.isMusic()) || (paramMessageObject.isVideo())))
        {
          i = 0;
          j = i;
          if (!TextUtils.isEmpty(paramMessageObject.messageOwner.attachPath))
          {
            j = i;
            if (new File(paramMessageObject.messageOwner.attachPath).exists()) {
              j = 1;
            }
          }
          i = j;
          if (j == 0)
          {
            i = j;
            if (FileLoader.getPathToMessage(paramMessageObject.messageOwner).exists()) {
              i = 1;
            }
          }
          if (i != 0)
          {
            if (paramMessageObject.getDocument() != null)
            {
              str = paramMessageObject.getDocument().mime_type;
              if ((str != null) && (str.endsWith("text/xml")))
              {
                j = 5;
                continue;
              }
            }
            if (paramMessageObject.messageOwner.ttl <= 0) {
              j = 4;
            }
          }
        }
        else
        {
          if (paramMessageObject.type == 12)
          {
            j = 8;
            continue;
          }
          if (paramMessageObject.isMediaEmpty())
          {
            j = 3;
            continue;
          }
        }
        j = 2;
      }
    }
  }
  
  private int getScrollOffsetForMessage(MessageObject paramMessageObject)
  {
    int i = Integer.MAX_VALUE;
    MessageObject.GroupedMessages localGroupedMessages = getValidGroupedMessage(paramMessageObject);
    float f1;
    float f2;
    float f3;
    float f4;
    if (localGroupedMessages != null)
    {
      MessageObject.GroupedMessagePosition localGroupedMessagePosition1 = (MessageObject.GroupedMessagePosition)localGroupedMessages.positions.get(paramMessageObject);
      f1 = Math.max(AndroidUtilities.displaySize.x, AndroidUtilities.displaySize.y) * 0.5F;
      label83:
      MessageObject.GroupedMessagePosition localGroupedMessagePosition2;
      float f5;
      float f6;
      if (localGroupedMessagePosition1.siblingHeights != null)
      {
        f2 = localGroupedMessagePosition1.siblingHeights[0];
        f3 = 0.0F;
        f4 = 0.0F;
        SparseBooleanArray localSparseBooleanArray = new SparseBooleanArray();
        i = 0;
        if (i >= localGroupedMessages.posArray.size()) {
          break label242;
        }
        localGroupedMessagePosition2 = (MessageObject.GroupedMessagePosition)localGroupedMessages.posArray.get(i);
        f5 = f4;
        f6 = f3;
        if (localSparseBooleanArray.indexOfKey(localGroupedMessagePosition2.minY) < 0)
        {
          f5 = f4;
          f6 = f3;
          if (localGroupedMessagePosition2.siblingHeights == null)
          {
            localSparseBooleanArray.put(localGroupedMessagePosition2.minY, true);
            if (localGroupedMessagePosition2.minY >= localGroupedMessagePosition1.minY) {
              break label212;
            }
            f5 = f4 - localGroupedMessagePosition2.ph;
          }
        }
      }
      for (;;)
      {
        f6 = f3 + localGroupedMessagePosition2.ph;
        i++;
        f4 = f5;
        f3 = f6;
        break label83;
        f2 = localGroupedMessagePosition1.ph;
        break;
        label212:
        f5 = f4;
        if (localGroupedMessagePosition2.minY > localGroupedMessagePosition1.minY) {
          f5 = f4 + localGroupedMessagePosition2.ph;
        }
      }
      label242:
      if (Math.abs(f3 - f2) >= 0.02F) {
        break label323;
      }
    }
    label323:
    for (i = (int)(this.chatListView.getMeasuredHeight() - f3 * f1) / 2 - this.chatListView.getPaddingTop() - AndroidUtilities.dp(7.0F);; i = (int)(this.chatListView.getMeasuredHeight() - (f2 + f4) * f1) / 2 - this.chatListView.getPaddingTop() - AndroidUtilities.dp(7.0F))
    {
      int j = i;
      if (i == Integer.MAX_VALUE) {
        j = (this.chatListView.getMeasuredHeight() - paramMessageObject.getApproximateHeight()) / 2;
      }
      return Math.max(0, j);
    }
  }
  
  private MessageObject.GroupedMessages getValidGroupedMessage(MessageObject paramMessageObject)
  {
    Object localObject = null;
    if (paramMessageObject.getGroupId() != 0L)
    {
      MessageObject.GroupedMessages localGroupedMessages = (MessageObject.GroupedMessages)this.groupedMessagesMap.get(paramMessageObject.getGroupId());
      localObject = localGroupedMessages;
      if (localGroupedMessages != null) {
        if (localGroupedMessages.messages.size() > 1)
        {
          localObject = localGroupedMessages;
          if (localGroupedMessages.positions.get(paramMessageObject) != null) {}
        }
        else
        {
          localObject = null;
        }
      }
    }
    return (MessageObject.GroupedMessages)localObject;
  }
  
  private void hideFloatingDateView(boolean paramBoolean)
  {
    if ((this.floatingDateView.getTag() != null) && (!this.currentFloatingDateOnScreen) && ((!this.scrollingFloatingDate) || (this.currentFloatingTopIsNotMessage)))
    {
      this.floatingDateView.setTag(null);
      if (!paramBoolean) {
        break label129;
      }
      this.floatingDateAnimation = new AnimatorSet();
      this.floatingDateAnimation.setDuration(150L);
      this.floatingDateAnimation.playTogether(new Animator[] { ObjectAnimator.ofFloat(this.floatingDateView, "alpha", new float[] { 0.0F }) });
      this.floatingDateAnimation.addListener(new AnimatorListenerAdapter()
      {
        public void onAnimationEnd(Animator paramAnonymousAnimator)
        {
          if (paramAnonymousAnimator.equals(ChatActivity.this.floatingDateAnimation)) {
            ChatActivity.access$12602(ChatActivity.this, null);
          }
        }
      });
      this.floatingDateAnimation.setStartDelay(500L);
      this.floatingDateAnimation.start();
    }
    for (;;)
    {
      return;
      label129:
      if (this.floatingDateAnimation != null)
      {
        this.floatingDateAnimation.cancel();
        this.floatingDateAnimation = null;
      }
      this.floatingDateView.setAlpha(0.0F);
    }
  }
  
  private void hidePinnedMessageView(boolean paramBoolean)
  {
    if (this.pinnedMessageView.getTag() == null)
    {
      this.pinnedMessageView.setTag(Integer.valueOf(1));
      if (this.pinnedMessageViewAnimator != null)
      {
        this.pinnedMessageViewAnimator.cancel();
        this.pinnedMessageViewAnimator = null;
      }
      if (!paramBoolean) {
        break label127;
      }
      this.pinnedMessageViewAnimator = new AnimatorSet();
      this.pinnedMessageViewAnimator.playTogether(new Animator[] { ObjectAnimator.ofFloat(this.pinnedMessageView, "translationY", new float[] { -AndroidUtilities.dp(50.0F) }) });
      this.pinnedMessageViewAnimator.setDuration(200L);
      this.pinnedMessageViewAnimator.addListener(new AnimatorListenerAdapter()
      {
        public void onAnimationCancel(Animator paramAnonymousAnimator)
        {
          if ((ChatActivity.this.pinnedMessageViewAnimator != null) && (ChatActivity.this.pinnedMessageViewAnimator.equals(paramAnonymousAnimator))) {
            ChatActivity.access$26002(ChatActivity.this, null);
          }
        }
        
        public void onAnimationEnd(Animator paramAnonymousAnimator)
        {
          if ((ChatActivity.this.pinnedMessageViewAnimator != null) && (ChatActivity.this.pinnedMessageViewAnimator.equals(paramAnonymousAnimator)))
          {
            ChatActivity.this.pinnedMessageView.setVisibility(8);
            ChatActivity.access$26002(ChatActivity.this, null);
          }
        }
      });
      this.pinnedMessageViewAnimator.start();
    }
    for (;;)
    {
      return;
      label127:
      this.pinnedMessageView.setTranslationY(-AndroidUtilities.dp(50.0F));
      this.pinnedMessageView.setVisibility(8);
    }
  }
  
  private void hideVoiceHint()
  {
    this.voiceHintAnimation = new AnimatorSet();
    this.voiceHintAnimation.playTogether(new Animator[] { ObjectAnimator.ofFloat(this.voiceHintTextView, "alpha", new float[] { 0.0F }) });
    this.voiceHintAnimation.addListener(new AnimatorListenerAdapter()
    {
      public void onAnimationCancel(Animator paramAnonymousAnimator)
      {
        if (paramAnonymousAnimator.equals(ChatActivity.this.voiceHintAnimation))
        {
          ChatActivity.access$23002(ChatActivity.this, null);
          ChatActivity.access$23002(ChatActivity.this, null);
        }
      }
      
      public void onAnimationEnd(Animator paramAnonymousAnimator)
      {
        if (paramAnonymousAnimator.equals(ChatActivity.this.voiceHintAnimation))
        {
          ChatActivity.access$22902(ChatActivity.this, null);
          ChatActivity.access$23002(ChatActivity.this, null);
          if (ChatActivity.this.voiceHintTextView != null) {
            ChatActivity.this.voiceHintTextView.setVisibility(8);
          }
        }
      }
    });
    this.voiceHintAnimation.setDuration(300L);
    this.voiceHintAnimation.start();
  }
  
  private void initStickers()
  {
    if ((this.chatActivityEnterView == null) || (getParentActivity() == null) || (this.stickersAdapter != null) || ((this.currentEncryptedChat != null) && (AndroidUtilities.getPeerLayerVersion(this.currentEncryptedChat.layer) < 23))) {}
    for (;;)
    {
      return;
      if (this.stickersAdapter != null) {
        this.stickersAdapter.onDestroy();
      }
      this.stickersListView.setPadding(AndroidUtilities.dp(18.0F), 0, AndroidUtilities.dp(18.0F), 0);
      Object localObject1 = this.stickersListView;
      Object localObject2 = new StickersAdapter(getParentActivity(), new StickersAdapter.StickersAdapterDelegate()
      {
        public void needChangePanelVisibility(final boolean paramAnonymousBoolean)
        {
          float f1 = 1.0F;
          if (((paramAnonymousBoolean) && (ChatActivity.this.stickersPanel.getVisibility() == 0)) || ((!paramAnonymousBoolean) && (ChatActivity.this.stickersPanel.getVisibility() == 8))) {}
          for (;;)
          {
            return;
            Object localObject;
            int i;
            label75:
            FrameLayout localFrameLayout;
            float f2;
            if (paramAnonymousBoolean)
            {
              ChatActivity.this.stickersListView.scrollToPosition(0);
              localObject = ChatActivity.this.stickersPanel;
              if (ChatActivity.this.allowStickersPanel)
              {
                i = 0;
                ((FrameLayout)localObject).setVisibility(i);
              }
            }
            else
            {
              if (ChatActivity.this.runningAnimation != null)
              {
                ChatActivity.this.runningAnimation.cancel();
                ChatActivity.access$22502(ChatActivity.this, null);
              }
              if (ChatActivity.this.stickersPanel.getVisibility() == 4) {
                break label260;
              }
              ChatActivity.access$22502(ChatActivity.this, new AnimatorSet());
              localObject = ChatActivity.this.runningAnimation;
              localFrameLayout = ChatActivity.this.stickersPanel;
              if (!paramAnonymousBoolean) {
                break label249;
              }
              f2 = 0.0F;
              label163:
              if (!paramAnonymousBoolean) {
                break label255;
              }
            }
            for (;;)
            {
              ((AnimatorSet)localObject).playTogether(new Animator[] { ObjectAnimator.ofFloat(localFrameLayout, "alpha", new float[] { f2, f1 }) });
              ChatActivity.this.runningAnimation.setDuration(150L);
              ChatActivity.this.runningAnimation.addListener(new AnimatorListenerAdapter()
              {
                public void onAnimationCancel(Animator paramAnonymous2Animator)
                {
                  if ((ChatActivity.this.runningAnimation != null) && (ChatActivity.this.runningAnimation.equals(paramAnonymous2Animator))) {
                    ChatActivity.access$22502(ChatActivity.this, null);
                  }
                }
                
                public void onAnimationEnd(Animator paramAnonymous2Animator)
                {
                  if ((ChatActivity.this.runningAnimation != null) && (ChatActivity.this.runningAnimation.equals(paramAnonymous2Animator)))
                  {
                    if (!paramAnonymousBoolean)
                    {
                      ChatActivity.this.stickersAdapter.clearStickers();
                      ChatActivity.this.stickersPanel.setVisibility(8);
                      if (StickerPreviewViewer.getInstance().isVisible()) {
                        StickerPreviewViewer.getInstance().close();
                      }
                      StickerPreviewViewer.getInstance().reset();
                    }
                    ChatActivity.access$22502(ChatActivity.this, null);
                  }
                }
              });
              ChatActivity.this.runningAnimation.start();
              break;
              i = 4;
              break label75;
              label249:
              f2 = 1.0F;
              break label163;
              label255:
              f1 = 0.0F;
            }
            label260:
            if (!paramAnonymousBoolean) {
              ChatActivity.this.stickersPanel.setVisibility(8);
            }
          }
        }
      });
      this.stickersAdapter = ((StickersAdapter)localObject2);
      ((RecyclerListView)localObject1).setAdapter((RecyclerView.Adapter)localObject2);
      localObject2 = this.stickersListView;
      localObject1 = new RecyclerListView.OnItemClickListener()
      {
        public void onItemClick(View paramAnonymousView, int paramAnonymousInt)
        {
          paramAnonymousView = ChatActivity.this.stickersAdapter.getItem(paramAnonymousInt);
          if ((paramAnonymousView instanceof TLRPC.TL_document))
          {
            SendMessagesHelper.getInstance(ChatActivity.this.currentAccount).sendSticker(paramAnonymousView, ChatActivity.this.dialog_id, ChatActivity.this.replyingMessageObject);
            ChatActivity.this.showReplyPanel(false, null, null, null, false);
            ChatActivity.this.chatActivityEnterView.addStickerToRecent(paramAnonymousView);
          }
          ChatActivity.this.chatActivityEnterView.setFieldText("");
        }
      };
      this.stickersOnItemClickListener = ((RecyclerListView.OnItemClickListener)localObject1);
      ((RecyclerListView)localObject2).setOnItemClickListener((RecyclerListView.OnItemClickListener)localObject1);
    }
  }
  
  private void jumpToDate(int paramInt)
  {
    if (this.messages.isEmpty()) {}
    for (;;)
    {
      return;
      MessageObject localMessageObject = (MessageObject)this.messages.get(0);
      Object localObject = (MessageObject)this.messages.get(this.messages.size() - 1);
      int i;
      if ((localMessageObject.messageOwner.date >= paramInt) && (((MessageObject)localObject).messageOwner.date <= paramInt)) {
        for (i = this.messages.size() - 1;; i--)
        {
          if (i < 0) {
            break label154;
          }
          localObject = (MessageObject)this.messages.get(i);
          if ((((MessageObject)localObject).messageOwner.date >= paramInt) && (((MessageObject)localObject).getId() != 0))
          {
            i = ((MessageObject)localObject).getId();
            if (((MessageObject)localObject).getDialogId() == this.mergeDialogId) {}
            for (paramInt = 1;; paramInt = 0)
            {
              scrollToMessageId(i, 0, false, paramInt, false);
              break;
            }
          }
        }
      } else {
        label154:
        if ((int)this.dialog_id != 0)
        {
          clearChatData();
          this.waitingForLoad.add(Integer.valueOf(this.lastLoadIndex));
          localObject = MessagesController.getInstance(this.currentAccount);
          long l = this.dialog_id;
          int j = this.classGuid;
          boolean bool = ChatObject.isChannel(this.currentChat);
          i = this.lastLoadIndex;
          this.lastLoadIndex = (i + 1);
          ((MessagesController)localObject).loadMessages(l, 30, 0, paramInt, true, 0, j, 4, 0, bool, i);
          this.floatingDateView.setAlpha(0.0F);
          this.floatingDateView.setTag(null);
        }
      }
    }
  }
  
  private void mentionListViewUpdateLayout()
  {
    if (this.mentionListView.getChildCount() <= 0)
    {
      this.mentionListViewScrollOffsetY = 0;
      this.mentionListViewLastViewPosition = -1;
    }
    label80:
    label187:
    label196:
    label218:
    label318:
    label321:
    for (;;)
    {
      return;
      Object localObject1 = this.mentionListView.getChildAt(this.mentionListView.getChildCount() - 1);
      Object localObject2 = (RecyclerListView.Holder)this.mentionListView.findContainingViewHolder((View)localObject1);
      int i;
      if (this.mentionLayoutManager.getReverseLayout())
      {
        if (localObject2 != null)
        {
          this.mentionListViewLastViewPosition = ((RecyclerListView.Holder)localObject2).getAdapterPosition();
          this.mentionListViewLastViewTop = ((View)localObject1).getBottom();
          localObject2 = this.mentionListView.getChildAt(0);
          localObject1 = (RecyclerListView.Holder)this.mentionListView.findContainingViewHolder((View)localObject2);
          if ((((View)localObject2).getBottom() >= this.mentionListView.getMeasuredHeight()) || (localObject1 == null) || (((RecyclerListView.Holder)localObject1).getAdapterPosition() != 0)) {
            break label187;
          }
        }
        for (i = ((View)localObject2).getBottom();; i = this.mentionListView.getMeasuredHeight())
        {
          if (this.mentionListViewScrollOffsetY == i) {
            break label196;
          }
          localObject2 = this.mentionListView;
          this.mentionListViewScrollOffsetY = i;
          ((RecyclerListView)localObject2).setBottomGlowOffset(i);
          this.mentionListView.setTopGlowOffset(0);
          this.mentionListView.invalidate();
          this.mentionContainer.invalidate();
          break;
          this.mentionListViewLastViewPosition = -1;
          break label80;
        }
      }
      else
      {
        if (localObject2 != null)
        {
          this.mentionListViewLastViewPosition = ((RecyclerListView.Holder)localObject2).getAdapterPosition();
          this.mentionListViewLastViewTop = ((View)localObject1).getTop();
          localObject1 = this.mentionListView.getChildAt(0);
          localObject2 = (RecyclerListView.Holder)this.mentionListView.findContainingViewHolder((View)localObject1);
          if ((((View)localObject1).getTop() <= 0) || (localObject2 == null) || (((RecyclerListView.Holder)localObject2).getAdapterPosition() != 0)) {
            break label318;
          }
        }
        for (i = ((View)localObject1).getTop();; i = 0)
        {
          if (this.mentionListViewScrollOffsetY == i) {
            break label321;
          }
          localObject2 = this.mentionListView;
          this.mentionListViewScrollOffsetY = i;
          ((RecyclerListView)localObject2).setTopGlowOffset(i);
          this.mentionListView.setBottomGlowOffset(0);
          this.mentionListView.invalidate();
          this.mentionContainer.invalidate();
          break;
          this.mentionListViewLastViewPosition = -1;
          break label218;
        }
      }
    }
  }
  
  private void moveScrollToLastMessage()
  {
    if ((this.chatListView != null) && (!this.messages.isEmpty())) {
      this.chatLayoutManager.scrollToPositionWithOffset(0, 0);
    }
  }
  
  private void openAttachMenu()
  {
    if (getParentActivity() == null) {}
    for (;;)
    {
      return;
      createChatAttachView();
      this.chatAttachAlert.loadGalleryPhotos();
      if ((Build.VERSION.SDK_INT == 21) || (Build.VERSION.SDK_INT == 22)) {
        this.chatActivityEnterView.closeKeyboard();
      }
      this.chatAttachAlert.init();
      showDialog(this.chatAttachAlert);
    }
  }
  
  private void openSearchWithText(String paramString)
  {
    if (!this.actionBar.isSearchFieldVisible())
    {
      this.avatarContainer.setVisibility(8);
      this.headerItem.setVisibility(8);
      this.attachItem.setVisibility(8);
      this.searchItem.setVisibility(0);
      updateSearchButtons(0, 0, -1);
      updateBottomOverlay();
    }
    if (paramString == null) {}
    for (boolean bool = true;; bool = false)
    {
      this.openSearchKeyboard = bool;
      this.searchItem.openSearch(this.openSearchKeyboard);
      if (paramString != null)
      {
        this.searchItem.getSearchField().setText(paramString);
        this.searchItem.getSearchField().setSelection(this.searchItem.getSearchField().length());
        DataQuery.getInstance(this.currentAccount).searchMessagesInChat(paramString, this.dialog_id, this.mergeDialogId, this.classGuid, 0, this.searchingUserMessages);
      }
      updatePinnedMessageView(true);
      return;
    }
  }
  
  private void processRowSelect(View paramView, boolean paramBoolean)
  {
    MessageObject localMessageObject = null;
    if ((paramView instanceof ChatMessageCell)) {
      localMessageObject = ((ChatMessageCell)paramView).getMessageObject();
    }
    label71:
    for (;;)
    {
      int i = getMessageType(localMessageObject);
      if ((i < 2) || (i == 20)) {}
      for (;;)
      {
        return;
        if (!(paramView instanceof ChatActionCell)) {
          break label71;
        }
        localMessageObject = ((ChatActionCell)paramView).getMessageObject();
        break;
        addToSelectedMessages(localMessageObject, paramBoolean);
        updateActionModeTitle();
        updateVisibleRows();
      }
    }
  }
  
  private void processSelectedAttach(int paramInt)
  {
    int i = 1;
    if (paramInt == 0) {
      if ((Build.VERSION.SDK_INT >= 23) && (getParentActivity().checkSelfPermission("android.permission.CAMERA") != 0)) {
        getParentActivity().requestPermissions(new String[] { "android.permission.CAMERA" }, 19);
      }
    }
    for (;;)
    {
      return;
      Intent localIntent;
      for (;;)
      {
        try
        {
          localIntent = new android/content/Intent;
          localIntent.<init>("android.media.action.IMAGE_CAPTURE");
          File localFile = AndroidUtilities.generatePicturePath();
          if (localFile != null)
          {
            if (Build.VERSION.SDK_INT < 24) {
              break label136;
            }
            localIntent.putExtra("output", FileProvider.getUriForFile(getParentActivity(), "org.telegram.messenger.beta.provider", localFile));
            localIntent.addFlags(2);
            localIntent.addFlags(1);
            this.currentPicturePath = localFile.getAbsolutePath();
          }
          startActivityForResult(localIntent, 0);
        }
        catch (Exception localException1)
        {
          FileLog.e(localException1);
        }
        break;
        label136:
        localIntent.putExtra("output", Uri.fromFile(localException1));
      }
      Object localObject1;
      if (paramInt == 1)
      {
        if ((Build.VERSION.SDK_INT >= 23) && (getParentActivity().checkSelfPermission("android.permission.READ_EXTERNAL_STORAGE") != 0))
        {
          getParentActivity().requestPermissions(new String[] { "android.permission.READ_EXTERNAL_STORAGE" }, 4);
        }
        else
        {
          if ((this.currentEncryptedChat == null) || (AndroidUtilities.getPeerLayerVersion(this.currentEncryptedChat.layer) >= 46)) {}
          for (boolean bool = true;; bool = false)
          {
            localObject1 = new PhotoAlbumPickerActivity(false, bool, true, this);
            ((PhotoAlbumPickerActivity)localObject1).setDelegate(new PhotoAlbumPickerActivity.PhotoAlbumPickerActivityDelegate()
            {
              public void didSelectPhotos(ArrayList<SendMessagesHelper.SendingMediaInfo> paramAnonymousArrayList)
              {
                SendMessagesHelper.prepareSendingMedia(paramAnonymousArrayList, ChatActivity.this.dialog_id, ChatActivity.this.replyingMessageObject, null, false, SharedConfig.groupPhotosEnabled);
                ChatActivity.this.showReplyPanel(false, null, null, null, false);
                DataQuery.getInstance(ChatActivity.this.currentAccount).cleanDraft(ChatActivity.this.dialog_id, true);
              }
              
              public void startPhotoSelectActivity()
              {
                try
                {
                  Intent localIntent1 = new android/content/Intent;
                  localIntent1.<init>();
                  localIntent1.setType("video/*");
                  localIntent1.setAction("android.intent.action.GET_CONTENT");
                  localIntent1.putExtra("android.intent.extra.sizeLimit", 1610612736L);
                  Intent localIntent2 = new android/content/Intent;
                  localIntent2.<init>("android.intent.action.PICK");
                  localIntent2.setType("image/*");
                  localIntent2 = Intent.createChooser(localIntent2, null);
                  localIntent2.putExtra("android.intent.extra.INITIAL_INTENTS", new Intent[] { localIntent1 });
                  ChatActivity.this.startActivityForResult(localIntent2, 1);
                  return;
                }
                catch (Exception localException)
                {
                  for (;;)
                  {
                    FileLog.e(localException);
                  }
                }
              }
            });
            presentFragment((BaseFragment)localObject1);
            break;
          }
        }
      }
      else if (paramInt == 2)
      {
        if ((Build.VERSION.SDK_INT >= 23) && (getParentActivity().checkSelfPermission("android.permission.CAMERA") != 0)) {
          getParentActivity().requestPermissions(new String[] { "android.permission.CAMERA" }, 20);
        } else {
          for (;;)
          {
            try
            {
              localIntent = new android/content/Intent;
              localIntent.<init>("android.media.action.VIDEO_CAPTURE");
              localObject1 = AndroidUtilities.generateVideoPath();
              if (localObject1 != null)
              {
                if (Build.VERSION.SDK_INT < 24) {
                  break label415;
                }
                localIntent.putExtra("output", FileProvider.getUriForFile(getParentActivity(), "org.telegram.messenger.beta.provider", (File)localObject1));
                localIntent.addFlags(2);
                localIntent.addFlags(1);
                localIntent.putExtra("android.intent.extra.sizeLimit", 1610612736L);
                this.currentPicturePath = ((File)localObject1).getAbsolutePath();
              }
              startActivityForResult(localIntent, 2);
            }
            catch (Exception localException2)
            {
              FileLog.e(localException2);
            }
            break;
            label415:
            if (Build.VERSION.SDK_INT >= 18) {
              localIntent.putExtra("output", Uri.fromFile(localException2));
            }
          }
        }
      }
      else
      {
        Object localObject2;
        if (paramInt == 6)
        {
          if (AndroidUtilities.isGoogleMapsInstalled(this))
          {
            if (this.currentEncryptedChat == null) {}
            for (paramInt = i;; paramInt = 0)
            {
              localObject2 = new LocationActivity(paramInt);
              ((LocationActivity)localObject2).setDialogId(this.dialog_id);
              ((LocationActivity)localObject2).setDelegate(this);
              presentFragment((BaseFragment)localObject2);
              break;
            }
          }
        }
        else if (paramInt == 4)
        {
          if ((Build.VERSION.SDK_INT >= 23) && (getParentActivity().checkSelfPermission("android.permission.READ_EXTERNAL_STORAGE") != 0))
          {
            getParentActivity().requestPermissions(new String[] { "android.permission.READ_EXTERNAL_STORAGE" }, 4);
          }
          else
          {
            localObject2 = new DocumentSelectActivity();
            ((DocumentSelectActivity)localObject2).setDelegate(new DocumentSelectActivity.DocumentSelectActivityDelegate()
            {
              public void didSelectFiles(DocumentSelectActivity paramAnonymousDocumentSelectActivity, ArrayList<String> paramAnonymousArrayList)
              {
                paramAnonymousDocumentSelectActivity.finishFragment();
                SendMessagesHelper.prepareSendingDocuments(paramAnonymousArrayList, paramAnonymousArrayList, null, null, ChatActivity.this.dialog_id, ChatActivity.this.replyingMessageObject, null);
                ChatActivity.this.showReplyPanel(false, null, null, null, false);
                DataQuery.getInstance(ChatActivity.this.currentAccount).cleanDraft(ChatActivity.this.dialog_id, true);
              }
              
              public void startDocumentSelectActivity()
              {
                try
                {
                  Intent localIntent = new android/content/Intent;
                  localIntent.<init>("android.intent.action.GET_CONTENT");
                  if (Build.VERSION.SDK_INT >= 18) {
                    localIntent.putExtra("android.intent.extra.ALLOW_MULTIPLE", true);
                  }
                  localIntent.setType("*/*");
                  ChatActivity.this.startActivityForResult(localIntent, 21);
                  return;
                }
                catch (Exception localException)
                {
                  for (;;)
                  {
                    FileLog.e(localException);
                  }
                }
              }
            });
            presentFragment((BaseFragment)localObject2);
          }
        }
        else if (paramInt == 3)
        {
          if ((Build.VERSION.SDK_INT >= 23) && (getParentActivity().checkSelfPermission("android.permission.READ_EXTERNAL_STORAGE") != 0))
          {
            getParentActivity().requestPermissions(new String[] { "android.permission.READ_EXTERNAL_STORAGE" }, 4);
          }
          else
          {
            localObject2 = new AudioSelectActivity();
            ((AudioSelectActivity)localObject2).setDelegate(new AudioSelectActivity.AudioSelectActivityDelegate()
            {
              public void didSelectAudio(ArrayList<MessageObject> paramAnonymousArrayList)
              {
                SendMessagesHelper.prepareSendingAudioDocuments(paramAnonymousArrayList, ChatActivity.this.dialog_id, ChatActivity.this.replyingMessageObject);
                ChatActivity.this.showReplyPanel(false, null, null, null, false);
                DataQuery.getInstance(ChatActivity.this.currentAccount).cleanDraft(ChatActivity.this.dialog_id, true);
              }
            });
            presentFragment((BaseFragment)localObject2);
          }
        }
        else if (paramInt == 5) {
          if ((Build.VERSION.SDK_INT >= 23) && (getParentActivity().checkSelfPermission("android.permission.READ_CONTACTS") != 0)) {
            getParentActivity().requestPermissions(new String[] { "android.permission.READ_CONTACTS" }, 5);
          } else {
            try
            {
              localObject2 = new android/content/Intent;
              ((Intent)localObject2).<init>("android.intent.action.PICK", ContactsContract.Contacts.CONTENT_URI);
              ((Intent)localObject2).setType("vnd.android.cursor.dir/phone_v2");
              startActivityForResult((Intent)localObject2, 31);
            }
            catch (Exception localException3)
            {
              FileLog.e(localException3);
            }
          }
        }
      }
    }
  }
  
  private void processSelectedOption(int paramInt)
  {
    if ((this.selectedObject == null) || (getParentActivity() == null)) {
      return;
    }
    switch (paramInt)
    {
    }
    for (;;)
    {
      this.selectedObject = null;
      this.selectedObjectGroup = null;
      break;
      int i;
      if (this.selectedObjectGroup != null)
      {
        i = 1;
        for (paramInt = 0; paramInt < this.selectedObjectGroup.messages.size(); paramInt++) {
          if (!SendMessagesHelper.getInstance(this.currentAccount).retrySendMessage((MessageObject)this.selectedObjectGroup.messages.get(paramInt), false)) {
            i = 0;
          }
        }
        if (i != 0) {
          moveScrollToLastMessage();
        }
      }
      else if (SendMessagesHelper.getInstance(this.currentAccount).retrySendMessage(this.selectedObject, false))
      {
        updateVisibleRows();
        moveScrollToLastMessage();
        continue;
        if (getParentActivity() == null)
        {
          this.selectedObject = null;
          this.selectedObjectGroup = null;
          break;
        }
        createDeleteMessagesAlert(this.selectedObject, this.selectedObjectGroup);
        continue;
        this.forwardingMessage = this.selectedObject;
        this.forwardingMessageGroup = this.selectedObjectGroup;
        final Object localObject1 = new Bundle();
        ((Bundle)localObject1).putBoolean("onlySelect", true);
        ((Bundle)localObject1).putInt("dialogsType", 3);
        localObject1 = new DialogsActivity((Bundle)localObject1);
        ((DialogsActivity)localObject1).setDelegate(this);
        presentFragment((BaseFragment)localObject1);
        continue;
        AndroidUtilities.addToClipboard(getMessageContent(this.selectedObject, 0, false));
        continue;
        if ((Build.VERSION.SDK_INT >= 23) && (getParentActivity().checkSelfPermission("android.permission.WRITE_EXTERNAL_STORAGE") != 0))
        {
          getParentActivity().requestPermissions(new String[] { "android.permission.WRITE_EXTERNAL_STORAGE" }, 4);
          this.selectedObject = null;
          this.selectedObjectGroup = null;
          break;
        }
        if (this.selectedObjectGroup != null) {
          for (paramInt = 0; paramInt < this.selectedObjectGroup.messages.size(); paramInt++) {
            saveMessageToGallery((MessageObject)this.selectedObjectGroup.messages.get(paramInt));
          }
        }
        saveMessageToGallery(this.selectedObject);
        continue;
        File localFile = null;
        localObject1 = localFile;
        if (!TextUtils.isEmpty(this.selectedObject.messageOwner.attachPath))
        {
          localObject3 = new File(this.selectedObject.messageOwner.attachPath);
          localObject1 = localFile;
          if (((File)localObject3).exists()) {
            localObject1 = localObject3;
          }
        }
        Object localObject3 = localObject1;
        if (localObject1 == null)
        {
          localFile = FileLoader.getPathToMessage(this.selectedObject.messageOwner);
          localObject3 = localObject1;
          if (localFile.exists()) {
            localObject3 = localFile;
          }
        }
        if (localObject3 != null)
        {
          if (((File)localObject3).getName().toLowerCase().endsWith("attheme"))
          {
            if (this.chatLayoutManager != null)
            {
              paramInt = this.chatLayoutManager.findFirstVisibleItemPosition();
              if (paramInt == 0) {
                break label691;
              }
              this.scrollToPositionOnRecreate = paramInt;
              localObject1 = (RecyclerListView.Holder)this.chatListView.findViewHolderForAdapterPosition(this.scrollToPositionOnRecreate);
              if (localObject1 == null) {
                break label683;
              }
              this.scrollToOffsetOnRecreate = (this.chatListView.getMeasuredHeight() - ((RecyclerListView.Holder)localObject1).itemView.getBottom() - this.chatListView.getPaddingBottom());
            }
            for (;;)
            {
              localObject1 = Theme.applyThemeFile((File)localObject3, this.selectedObject.getDocumentName(), true);
              if (localObject1 == null) {
                break label699;
              }
              presentFragment(new ThemePreviewActivity((File)localObject3, (Theme.ThemeInfo)localObject1));
              break;
              label683:
              this.scrollToPositionOnRecreate = -1;
              continue;
              label691:
              this.scrollToPositionOnRecreate = -1;
            }
            label699:
            this.scrollToPositionOnRecreate = -1;
            if (getParentActivity() == null)
            {
              this.selectedObject = null;
              this.selectedObjectGroup = null;
              break;
            }
            localObject1 = new AlertDialog.Builder(getParentActivity());
            ((AlertDialog.Builder)localObject1).setTitle(LocaleController.getString("AppName", NUM));
            ((AlertDialog.Builder)localObject1).setMessage(LocaleController.getString("IncorrectTheme", NUM));
            ((AlertDialog.Builder)localObject1).setPositiveButton(LocaleController.getString("OK", NUM), null);
            showDialog(((AlertDialog.Builder)localObject1).create());
            continue;
          }
          if (LocaleController.getInstance().applyLanguageFile((File)localObject3, this.currentAccount))
          {
            presentFragment(new LanguageSelectActivity());
          }
          else
          {
            if (getParentActivity() == null)
            {
              this.selectedObject = null;
              this.selectedObjectGroup = null;
              break;
            }
            localObject1 = new AlertDialog.Builder(getParentActivity());
            ((AlertDialog.Builder)localObject1).setTitle(LocaleController.getString("AppName", NUM));
            ((AlertDialog.Builder)localObject1).setMessage(LocaleController.getString("IncorrectLocalization", NUM));
            ((AlertDialog.Builder)localObject1).setPositiveButton(LocaleController.getString("OK", NUM), null);
            showDialog(((AlertDialog.Builder)localObject1).create());
            continue;
            localObject3 = this.selectedObject.messageOwner.attachPath;
            localObject1 = localObject3;
            if (localObject3 != null)
            {
              localObject1 = localObject3;
              if (((String)localObject3).length() > 0)
              {
                localObject1 = localObject3;
                if (!new File((String)localObject3).exists()) {
                  localObject1 = null;
                }
              }
            }
            if (localObject1 != null)
            {
              localObject3 = localObject1;
              if (((String)localObject1).length() != 0) {}
            }
            else
            {
              localObject3 = FileLoader.getPathToMessage(this.selectedObject.messageOwner).toString();
            }
            localObject1 = new Intent("android.intent.action.SEND");
            ((Intent)localObject1).setType(this.selectedObject.getDocument().mime_type);
            localObject3 = new File((String)localObject3);
            if (Build.VERSION.SDK_INT >= 24) {}
            for (;;)
            {
              try
              {
                ((Intent)localObject1).putExtra("android.intent.extra.STREAM", FileProvider.getUriForFile(getParentActivity(), "org.telegram.messenger.beta.provider", (File)localObject3));
                ((Intent)localObject1).setFlags(1);
                getParentActivity().startActivityForResult(Intent.createChooser((Intent)localObject1, LocaleController.getString("ShareFile", NUM)), 500);
              }
              catch (Exception localException2)
              {
                ((Intent)localObject1).putExtra("android.intent.extra.STREAM", Uri.fromFile((File)localObject3));
                continue;
              }
              ((Intent)localObject1).putExtra("android.intent.extra.STREAM", Uri.fromFile((File)localObject3));
            }
            localObject3 = this.selectedObject.messageOwner.attachPath;
            localObject1 = localObject3;
            if (localObject3 != null)
            {
              localObject1 = localObject3;
              if (((String)localObject3).length() > 0)
              {
                localObject1 = localObject3;
                if (!new File((String)localObject3).exists()) {
                  localObject1 = null;
                }
              }
            }
            if (localObject1 != null)
            {
              localObject3 = localObject1;
              if (((String)localObject1).length() != 0) {}
            }
            else
            {
              localObject3 = FileLoader.getPathToMessage(this.selectedObject.messageOwner).toString();
            }
            if ((Build.VERSION.SDK_INT >= 23) && (getParentActivity().checkSelfPermission("android.permission.WRITE_EXTERNAL_STORAGE") != 0))
            {
              getParentActivity().requestPermissions(new String[] { "android.permission.WRITE_EXTERNAL_STORAGE" }, 4);
              this.selectedObject = null;
              this.selectedObjectGroup = null;
              break;
            }
            MediaController.saveFile((String)localObject3, getParentActivity(), 0, null, null);
            continue;
            showReplyPanel(true, this.selectedObject, null, null, false);
            continue;
            localObject3 = getParentActivity();
            Object localObject2 = this.selectedObject.getInputStickerSet();
            if ((this.bottomOverlayChat.getVisibility() != 0) && (ChatObject.canSendStickers(this.currentChat))) {}
            for (localObject1 = this.chatActivityEnterView;; localObject1 = null)
            {
              showDialog(new StickersAlert((Context)localObject3, this, (TLRPC.InputStickerSet)localObject2, null, (StickersAlert.StickersAlertDelegate)localObject1));
              break;
            }
            if ((Build.VERSION.SDK_INT >= 23) && (getParentActivity().checkSelfPermission("android.permission.WRITE_EXTERNAL_STORAGE") != 0))
            {
              getParentActivity().requestPermissions(new String[] { "android.permission.WRITE_EXTERNAL_STORAGE" }, 4);
              this.selectedObject = null;
              this.selectedObjectGroup = null;
              break;
            }
            localObject1 = FileLoader.getDocumentFileName(this.selectedObject.getDocument());
            localObject3 = localObject1;
            if (TextUtils.isEmpty((CharSequence)localObject1)) {
              localObject3 = this.selectedObject.getFileName();
            }
            localObject2 = this.selectedObject.messageOwner.attachPath;
            localObject1 = localObject2;
            if (localObject2 != null)
            {
              localObject1 = localObject2;
              if (((String)localObject2).length() > 0)
              {
                localObject1 = localObject2;
                if (!new File((String)localObject2).exists()) {
                  localObject1 = null;
                }
              }
            }
            if (localObject1 != null)
            {
              localObject2 = localObject1;
              if (((String)localObject1).length() != 0) {}
            }
            else
            {
              localObject2 = FileLoader.getPathToMessage(this.selectedObject.messageOwner).toString();
            }
            Object localObject4 = getParentActivity();
            if (this.selectedObject.isMusic())
            {
              paramInt = 3;
              label1528:
              if (this.selectedObject.getDocument() == null) {
                break label1568;
              }
            }
            label1568:
            for (localObject1 = this.selectedObject.getDocument().mime_type;; localObject1 = "")
            {
              MediaController.saveFile((String)localObject2, (Context)localObject4, paramInt, (String)localObject3, (String)localObject1);
              break;
              paramInt = 2;
              break label1528;
            }
            localObject1 = this.selectedObject.getDocument();
            MessagesController.getInstance(this.currentAccount).saveGif((TLRPC.Document)localObject1);
            showGifHint();
            this.chatActivityEnterView.addRecentGif((TLRPC.Document)localObject1);
            continue;
            startEditingMessageObject(this.selectedObject);
            this.selectedObject = null;
            this.selectedObjectGroup = null;
            continue;
            final int j = this.selectedObject.getId();
            localObject3 = new AlertDialog.Builder(getParentActivity());
            if ((ChatObject.isChannel(this.currentChat)) && (this.currentChat.megagroup))
            {
              ((AlertDialog.Builder)localObject3).setMessage(LocaleController.getString("PinMessageAlert", NUM));
              localObject1 = new boolean[1];
              localObject1[0] = 1;
              localObject4 = new FrameLayout(getParentActivity());
              localObject2 = new CheckBoxCell(getParentActivity(), 1);
              ((CheckBoxCell)localObject2).setBackgroundDrawable(Theme.getSelectorDrawable(false));
              ((CheckBoxCell)localObject2).setText(LocaleController.getString("PinNotify", NUM), "", true, false);
              if (LocaleController.isRTL)
              {
                paramInt = AndroidUtilities.dp(8.0F);
                label1763:
                if (!LocaleController.isRTL) {
                  break label1901;
                }
                i = 0;
                label1771:
                ((CheckBoxCell)localObject2).setPadding(paramInt, 0, i, 0);
                ((FrameLayout)localObject4).addView((View)localObject2, LayoutHelper.createFrame(-1, 48.0F, 51, 8.0F, 0.0F, 8.0F, 0.0F));
                ((CheckBoxCell)localObject2).setOnClickListener(new View.OnClickListener()
                {
                  public void onClick(View paramAnonymousView)
                  {
                    CheckBoxCell localCheckBoxCell = (CheckBoxCell)paramAnonymousView;
                    paramAnonymousView = localObject1;
                    if (localObject1[0] == 0) {}
                    for (int i = 1;; i = 0)
                    {
                      paramAnonymousView[0] = i;
                      localCheckBoxCell.setChecked(localObject1[0], true);
                      return;
                    }
                  }
                });
                ((AlertDialog.Builder)localObject3).setView((View)localObject4);
              }
            }
            for (;;)
            {
              ((AlertDialog.Builder)localObject3).setPositiveButton(LocaleController.getString("OK", NUM), new DialogInterface.OnClickListener()
              {
                public void onClick(DialogInterface paramAnonymousDialogInterface, int paramAnonymousInt)
                {
                  MessagesController.getInstance(ChatActivity.this.currentAccount).pinChannelMessage(ChatActivity.this.currentChat, j, localObject1[0]);
                }
              });
              ((AlertDialog.Builder)localObject3).setTitle(LocaleController.getString("AppName", NUM));
              ((AlertDialog.Builder)localObject3).setNegativeButton(LocaleController.getString("Cancel", NUM), null);
              showDialog(((AlertDialog.Builder)localObject3).create());
              break;
              paramInt = 0;
              break label1763;
              label1901:
              i = AndroidUtilities.dp(8.0F);
              break label1771;
              ((AlertDialog.Builder)localObject3).setMessage(LocaleController.getString("PinMessageAlertChannel", NUM));
              localObject1 = new boolean[1];
              localObject1[0] = 0;
            }
            localObject1 = new AlertDialog.Builder(getParentActivity());
            ((AlertDialog.Builder)localObject1).setMessage(LocaleController.getString("UnpinMessageAlert", NUM));
            ((AlertDialog.Builder)localObject1).setPositiveButton(LocaleController.getString("OK", NUM), new DialogInterface.OnClickListener()
            {
              public void onClick(DialogInterface paramAnonymousDialogInterface, int paramAnonymousInt)
              {
                MessagesController.getInstance(ChatActivity.this.currentAccount).pinChannelMessage(ChatActivity.this.currentChat, 0, false);
              }
            });
            ((AlertDialog.Builder)localObject1).setTitle(LocaleController.getString("AppName", NUM));
            ((AlertDialog.Builder)localObject1).setNegativeButton(LocaleController.getString("Cancel", NUM), null);
            showDialog(((AlertDialog.Builder)localObject1).create());
            continue;
            localObject1 = new Bundle();
            ((Bundle)localObject1).putInt("user_id", this.selectedObject.messageOwner.media.user_id);
            ((Bundle)localObject1).putString("phone", this.selectedObject.messageOwner.media.phone_number);
            ((Bundle)localObject1).putBoolean("addContact", true);
            presentFragment(new ContactAddActivity((Bundle)localObject1));
            continue;
            AndroidUtilities.addToClipboard(this.selectedObject.messageOwner.media.phone_number);
            continue;
            try
            {
              localObject1 = new android/content/Intent;
              localObject3 = new java/lang/StringBuilder;
              ((StringBuilder)localObject3).<init>();
              ((Intent)localObject1).<init>("android.intent.action.DIAL", Uri.parse("tel:" + this.selectedObject.messageOwner.media.phone_number));
              ((Intent)localObject1).addFlags(268435456);
              getParentActivity().startActivityForResult((Intent)localObject1, 500);
            }
            catch (Exception localException1)
            {
              FileLog.e(localException1);
            }
            continue;
            if (this.currentUser != null)
            {
              VoIPHelper.startCall(this.currentUser, getParentActivity(), MessagesController.getInstance(this.currentAccount).getUserFull(this.currentUser.id));
              continue;
              VoIPHelper.showRateAlert(getParentActivity(), (TLRPC.TL_messageActionPhoneCall)this.selectedObject.messageOwner.action);
              continue;
              DataQuery.getInstance(this.currentAccount).addRecentSticker(2, this.selectedObject.getDocument(), (int)(System.currentTimeMillis() / 1000L), false);
              continue;
              DataQuery.getInstance(this.currentAccount).addRecentSticker(2, this.selectedObject.getDocument(), (int)(System.currentTimeMillis() / 1000L), true);
              continue;
              TLRPC.TL_channels_exportMessageLink localTL_channels_exportMessageLink = new TLRPC.TL_channels_exportMessageLink();
              localTL_channels_exportMessageLink.id = this.selectedObject.getId();
              localTL_channels_exportMessageLink.channel = MessagesController.getInputChannel(this.currentChat);
              ConnectionsManager.getInstance(this.currentAccount).sendRequest(localTL_channels_exportMessageLink, new RequestDelegate()
              {
                public void run(final TLObject paramAnonymousTLObject, TLRPC.TL_error paramAnonymousTL_error)
                {
                  AndroidUtilities.runOnUIThread(new Runnable()
                  {
                    public void run()
                    {
                      TLRPC.TL_exportedMessageLink localTL_exportedMessageLink;
                      if (paramAnonymousTLObject != null) {
                        localTL_exportedMessageLink = (TLRPC.TL_exportedMessageLink)paramAnonymousTLObject;
                      }
                      try
                      {
                        ((ClipboardManager)ApplicationLoader.applicationContext.getSystemService("clipboard")).setPrimaryClip(ClipData.newPlainText("label", localTL_exportedMessageLink.link));
                        Toast.makeText(ApplicationLoader.applicationContext, LocaleController.getString("LinkCopied", NUM), 0).show();
                        return;
                      }
                      catch (Exception localException)
                      {
                        for (;;)
                        {
                          FileLog.e(localException);
                        }
                      }
                    }
                  });
                }
              });
              continue;
              showDialog(AlertsCreator.createReportAlert(getParentActivity(), this.dialog_id, this.selectedObject.getId(), this));
            }
          }
        }
      }
    }
  }
  
  private void removeMessageObject(MessageObject paramMessageObject)
  {
    int i = this.messages.indexOf(paramMessageObject);
    if (i == -1) {}
    for (;;)
    {
      return;
      this.messages.remove(i);
      if (this.chatAdapter != null) {
        this.chatAdapter.notifyItemRemoved(this.chatAdapter.messagesStartRow + i);
      }
    }
  }
  
  private void removeUnreadPlane(boolean paramBoolean)
  {
    if (this.unreadMessageObject != null)
    {
      if (paramBoolean)
      {
        boolean[] arrayOfBoolean = this.forwardEndReached;
        this.forwardEndReached[1] = true;
        arrayOfBoolean[0] = true;
        this.first_unread_id = 0;
        this.last_message_id = 0;
      }
      this.createUnreadMessageAfterId = 0;
      this.createUnreadMessageAfterIdLoading = false;
      removeMessageObject(this.unreadMessageObject);
      this.unreadMessageObject = null;
    }
  }
  
  private void saveMessageToGallery(MessageObject paramMessageObject)
  {
    Object localObject1 = paramMessageObject.messageOwner.attachPath;
    Object localObject2 = localObject1;
    if (!TextUtils.isEmpty((CharSequence)localObject1))
    {
      localObject2 = localObject1;
      if (!new File((String)localObject1).exists()) {
        localObject2 = null;
      }
    }
    localObject1 = localObject2;
    if (TextUtils.isEmpty((CharSequence)localObject2)) {
      localObject1 = FileLoader.getPathToMessage(paramMessageObject.messageOwner).toString();
    }
    localObject2 = getParentActivity();
    if (paramMessageObject.isVideo()) {}
    for (int i = 1;; i = 0)
    {
      MediaController.saveFile((String)localObject1, (Context)localObject2, i, null, null);
      return;
    }
  }
  
  private void scrollToLastMessage(boolean paramBoolean)
  {
    if ((this.forwardEndReached[0] != 0) && (this.first_unread_id == 0) && (this.startLoadFromMessageId == 0)) {
      if ((paramBoolean) && (this.chatLayoutManager.findFirstCompletelyVisibleItemPosition() == 0))
      {
        showPagedownButton(false, true);
        this.highlightMessageId = Integer.MAX_VALUE;
        updateVisibleRows();
      }
    }
    for (;;)
    {
      return;
      this.chatLayoutManager.scrollToPositionWithOffset(0, 0);
      continue;
      clearChatData();
      this.waitingForLoad.add(Integer.valueOf(this.lastLoadIndex));
      MessagesController localMessagesController = MessagesController.getInstance(this.currentAccount);
      long l = this.dialog_id;
      int i = this.classGuid;
      paramBoolean = ChatObject.isChannel(this.currentChat);
      int j = this.lastLoadIndex;
      this.lastLoadIndex = (j + 1);
      localMessagesController.loadMessages(l, 30, 0, 0, true, 0, i, 0, 0, paramBoolean, j);
    }
  }
  
  private void searchLinks(final CharSequence paramCharSequence, final boolean paramBoolean)
  {
    if ((this.currentEncryptedChat != null) && ((MessagesController.getInstance(this.currentAccount).secretWebpagePreview == 0) || (AndroidUtilities.getPeerLayerVersion(this.currentEncryptedChat.layer) < 46))) {
      return;
    }
    int i;
    int k;
    if ((paramBoolean) && (this.foundWebPage != null)) {
      if (this.foundWebPage.url != null)
      {
        i = TextUtils.indexOf(paramCharSequence, this.foundWebPage.url);
        j = 0;
        k = 0;
        if (i != -1) {
          break label265;
        }
        if (this.foundWebPage.display_url != null)
        {
          i = TextUtils.indexOf(paramCharSequence, this.foundWebPage.display_url);
          if ((i == -1) || (this.foundWebPage.display_url.length() + i != paramCharSequence.length())) {
            break label253;
          }
          k = 1;
          label131:
          if ((i == -1) || (k != 0)) {
            break label259;
          }
        }
      }
    }
    label161:
    label253:
    label259:
    for (int j = paramCharSequence.charAt(this.foundWebPage.display_url.length() + i);; j = 0)
    {
      if ((i != -1) && ((k != 0) || (j == 32) || (j == 44) || (j == 46) || (j == 33) || (j == 47))) {
        break label315;
      }
      this.pendingLinkSearchString = null;
      showReplyPanel(false, null, null, this.foundWebPage, false);
      final MessagesController localMessagesController = MessagesController.getInstance(this.currentAccount);
      Utilities.searchQueue.postRunnable(new Runnable()
      {
        public void run()
        {
          if (ChatActivity.this.linkSearchRequestId != 0)
          {
            ConnectionsManager.getInstance(ChatActivity.this.currentAccount).cancelRequest(ChatActivity.this.linkSearchRequestId, true);
            ChatActivity.access$23502(ChatActivity.this, 0);
          }
          for (;;)
          {
            try
            {
              localObject1 = AndroidUtilities.WEB_URL.matcher(paramCharSequence);
              localObject2 = null;
            }
            catch (Exception localException1)
            {
              Object localObject2;
              int i;
              int j;
              FileLog.e(localException1);
              Object localObject3 = paramCharSequence.toString().toLowerCase();
              if ((paramCharSequence.length() < 13) || ((!((String)localObject3).contains("http://")) && (!((String)localObject3).contains("https://"))))
              {
                AndroidUtilities.runOnUIThread(new Runnable()
                {
                  public void run()
                  {
                    if (ChatActivity.this.foundWebPage != null)
                    {
                      ChatActivity.this.showReplyPanel(false, null, null, ChatActivity.this.foundWebPage, false);
                      ChatActivity.access$19502(ChatActivity.this, null);
                    }
                  }
                });
                continue;
              }
              localObject3 = paramCharSequence;
              continue;
              final Object localObject1 = new TLRPC.TL_messages_getWebPagePreview();
              if ((localObject3 instanceof String))
              {
                ((TLRPC.TL_messages_getWebPagePreview)localObject1).message = ((String)localObject3);
                ChatActivity.access$23502(ChatActivity.this, ConnectionsManager.getInstance(ChatActivity.this.currentAccount).sendRequest((TLObject)localObject1, new RequestDelegate()
                {
                  public void run(final TLObject paramAnonymous2TLObject, final TLRPC.TL_error paramAnonymous2TL_error)
                  {
                    AndroidUtilities.runOnUIThread(new Runnable()
                    {
                      public void run()
                      {
                        ChatActivity.access$23502(ChatActivity.this, 0);
                        if (paramAnonymous2TL_error == null)
                        {
                          if (!(paramAnonymous2TLObject instanceof TLRPC.TL_messageMediaWebPage)) {
                            break label293;
                          }
                          ChatActivity.access$19502(ChatActivity.this, ((TLRPC.TL_messageMediaWebPage)paramAnonymous2TLObject).webpage);
                          if ((!(ChatActivity.this.foundWebPage instanceof TLRPC.TL_webPage)) && (!(ChatActivity.this.foundWebPage instanceof TLRPC.TL_webPagePending))) {
                            break label229;
                          }
                          if ((ChatActivity.this.foundWebPage instanceof TLRPC.TL_webPagePending)) {
                            ChatActivity.access$23902(ChatActivity.this, ChatActivity.76.4.this.val$req.message);
                          }
                          if ((ChatActivity.this.currentEncryptedChat != null) && ((ChatActivity.this.foundWebPage instanceof TLRPC.TL_webPagePending))) {
                            ChatActivity.this.foundWebPage.url = ChatActivity.76.4.this.val$req.message;
                          }
                          ChatActivity.this.showReplyPanel(true, null, null, ChatActivity.this.foundWebPage, false);
                        }
                        for (;;)
                        {
                          return;
                          label229:
                          if (ChatActivity.this.foundWebPage != null)
                          {
                            ChatActivity.this.showReplyPanel(false, null, null, ChatActivity.this.foundWebPage, false);
                            ChatActivity.access$19502(ChatActivity.this, null);
                            continue;
                            label293:
                            if (ChatActivity.this.foundWebPage != null)
                            {
                              ChatActivity.this.showReplyPanel(false, null, null, ChatActivity.this.foundWebPage, false);
                              ChatActivity.access$19502(ChatActivity.this, null);
                            }
                          }
                        }
                      }
                    });
                  }
                }));
                ConnectionsManager.getInstance(ChatActivity.this.currentAccount).bindRequestToGuid(ChatActivity.this.linkSearchRequestId, ChatActivity.this.classGuid);
                continue;
              }
              ((TLRPC.TL_messages_getWebPagePreview)localObject1).message = ((CharSequence)localObject3).toString();
              continue;
            }
            try
            {
              if (!((Matcher)localObject1).find()) {
                continue;
              }
              if ((((Matcher)localObject1).start() > 0) && (paramCharSequence.charAt(((Matcher)localObject1).start() - 1) == '@')) {
                continue;
              }
              if (localObject2 != null) {
                break label456;
              }
              localObject2 = new java/util/ArrayList;
              ((ArrayList)localObject2).<init>();
            }
            catch (Exception localException2)
            {
              continue;
              continue;
            }
            ((ArrayList)localObject2).add(paramCharSequence.subSequence(((Matcher)localObject1).start(), ((Matcher)localObject1).end()));
          }
          if ((localObject2 != null) && (ChatActivity.this.foundUrls != null) && (((ArrayList)localObject2).size() == ChatActivity.this.foundUrls.size()))
          {
            i = 1;
            for (j = 0; j < ((ArrayList)localObject2).size(); j++) {
              if (!TextUtils.equals((CharSequence)((ArrayList)localObject2).get(j), (CharSequence)ChatActivity.this.foundUrls.get(j))) {
                i = 0;
              }
            }
            if (i == 0) {}
          }
          for (;;)
          {
            return;
            ChatActivity.access$23702(ChatActivity.this, (ArrayList)localObject2);
            if (localObject2 == null)
            {
              localObject2 = new org/telegram/ui/ChatActivity$76$1;
              ((1)localObject2).<init>(this);
              AndroidUtilities.runOnUIThread((Runnable)localObject2);
            }
            else
            {
              localObject2 = TextUtils.join(" ", (Iterable)localObject2);
              if ((ChatActivity.this.currentEncryptedChat == null) || (localMessagesController.secretWebpagePreview != 2)) {
                break;
              }
              AndroidUtilities.runOnUIThread(new Runnable()
              {
                public void run()
                {
                  AlertDialog.Builder localBuilder = new AlertDialog.Builder(ChatActivity.this.getParentActivity());
                  localBuilder.setTitle(LocaleController.getString("AppName", NUM));
                  localBuilder.setPositiveButton(LocaleController.getString("OK", NUM), new DialogInterface.OnClickListener()
                  {
                    public void onClick(DialogInterface paramAnonymous3DialogInterface, int paramAnonymous3Int)
                    {
                      ChatActivity.76.this.val$messagesController.secretWebpagePreview = 1;
                      MessagesController.getGlobalMainSettings().edit().putInt("secretWebpage2", MessagesController.getInstance(ChatActivity.this.currentAccount).secretWebpagePreview).commit();
                      ChatActivity.access$23702(ChatActivity.this, null);
                      ChatActivity.this.searchLinks(ChatActivity.76.this.val$charSequence, ChatActivity.76.this.val$force);
                    }
                  });
                  localBuilder.setNegativeButton(LocaleController.getString("Cancel", NUM), null);
                  localBuilder.setMessage(LocaleController.getString("SecretLinkPreviewAlert", NUM));
                  ChatActivity.this.showDialog(localBuilder.create());
                  ChatActivity.76.this.val$messagesController.secretWebpagePreview = 0;
                  MessagesController.getGlobalMainSettings().edit().putInt("secretWebpage2", ChatActivity.76.this.val$messagesController.secretWebpagePreview).commit();
                }
              });
            }
          }
        }
      });
      break;
      k = 0;
      break label131;
    }
    label265:
    if (this.foundWebPage.url.length() + i == paramCharSequence.length())
    {
      k = 1;
      label289:
      if (k != 0) {
        break label323;
      }
    }
    label315:
    label323:
    for (j = paramCharSequence.charAt(this.foundWebPage.url.length() + i);; j = 0)
    {
      break label161;
      break;
      k = 0;
      break label289;
    }
  }
  
  private void sendBotInlineResult(TLRPC.BotInlineResult paramBotInlineResult)
  {
    int i = this.mentionsAdapter.getContextBotId();
    HashMap localHashMap = new HashMap();
    localHashMap.put("id", paramBotInlineResult.id);
    localHashMap.put("query_id", "" + paramBotInlineResult.query_id);
    localHashMap.put("bot", "" + i);
    localHashMap.put("bot_name", this.mentionsAdapter.getContextBotName());
    SendMessagesHelper.prepareSendingBotContextResult(paramBotInlineResult, localHashMap, this.dialog_id, this.replyingMessageObject);
    this.chatActivityEnterView.setFieldText("");
    showReplyPanel(false, null, null, null, false);
    DataQuery.getInstance(this.currentAccount).increaseInlineRaiting(i);
  }
  
  private boolean sendSecretMessageRead(MessageObject paramMessageObject)
  {
    int i = 0;
    boolean bool1 = false;
    boolean bool2 = bool1;
    if (paramMessageObject != null)
    {
      bool2 = bool1;
      if (!paramMessageObject.isOut())
      {
        bool2 = bool1;
        if (paramMessageObject.isSecretMedia())
        {
          bool2 = bool1;
          if (paramMessageObject.messageOwner.destroyTime == 0)
          {
            if (paramMessageObject.messageOwner.ttl > 0) {
              break label60;
            }
            bool2 = bool1;
          }
        }
      }
    }
    return bool2;
    label60:
    if (this.currentEncryptedChat != null) {
      MessagesController.getInstance(this.currentAccount).markMessageAsRead(this.dialog_id, paramMessageObject.messageOwner.random_id, paramMessageObject.messageOwner.ttl);
    }
    for (;;)
    {
      paramMessageObject.messageOwner.destroyTime = (paramMessageObject.messageOwner.ttl + ConnectionsManager.getInstance(this.currentAccount).getCurrentTime());
      bool2 = true;
      break;
      MessagesController localMessagesController = MessagesController.getInstance(this.currentAccount);
      int j = paramMessageObject.getId();
      if (ChatObject.isChannel(this.currentChat)) {
        i = this.currentChat.id;
      }
      localMessagesController.markMessageAsRead(j, i, paramMessageObject.messageOwner.ttl);
    }
  }
  
  private void sendUriAsDocument(Uri paramUri)
  {
    if (paramUri == null) {}
    Object localObject1;
    for (;;)
    {
      return;
      localObject1 = paramUri.toString();
      Uri localUri1 = paramUri;
      if (((String)localObject1).contains("com.google.android.apps.photos.contentprovider")) {}
      try
      {
        localObject1 = localObject1.split("/1/")[1];
        int i = ((String)localObject1).indexOf("/ACTUAL");
        localUri1 = paramUri;
        if (i != -1) {
          localUri1 = Uri.parse(URLDecoder.decode(((String)localObject1).substring(0, i), "UTF-8"));
        }
      }
      catch (Exception localException)
      {
        Object localObject2;
        for (;;)
        {
          FileLog.e(localException);
          Uri localUri2 = paramUri;
        }
        SendMessagesHelper.prepareSendingDocument((String)localObject1, (String)localObject2, null, null, this.dialog_id, this.replyingMessageObject, null);
      }
      paramUri = AndroidUtilities.getPath(localUri1);
      localObject2 = paramUri;
      localObject1 = paramUri;
      if (paramUri == null)
      {
        localObject2 = localUri1.toString();
        localObject1 = MediaController.copyFileToCache(localUri1, "file");
      }
      if (localObject1 == null) {
        showAttachmentError();
      }
    }
  }
  
  private void setCellSelectionBackground(MessageObject paramMessageObject, ChatMessageCell paramChatMessageCell, int paramInt)
  {
    MessageObject.GroupedMessages localGroupedMessages = getValidGroupedMessage(paramMessageObject);
    paramMessageObject = localGroupedMessages;
    int j;
    if (localGroupedMessages != null)
    {
      int i = 0;
      j = 0;
      int k = i;
      if (j < localGroupedMessages.messages.size())
      {
        if (this.selectedMessagesIds[paramInt].indexOfKey(((MessageObject)localGroupedMessages.messages.get(j)).getId()) >= 0) {
          break label94;
        }
        k = 1;
      }
      paramMessageObject = localGroupedMessages;
      if (k == 0) {
        paramMessageObject = null;
      }
    }
    if (paramMessageObject == null) {
      paramChatMessageCell.setBackgroundColor(Theme.getColor("chat_selectedBackground"));
    }
    for (;;)
    {
      return;
      label94:
      j++;
      break;
      paramChatMessageCell.setBackground(null);
    }
  }
  
  private void showAttachmentError()
  {
    if (getParentActivity() == null) {}
    for (;;)
    {
      return;
      Toast.makeText(getParentActivity(), LocaleController.getString("UnsupportedAttachment", NUM), 0).show();
    }
  }
  
  private void showGifHint()
  {
    Object localObject = MessagesController.getGlobalMainSettings();
    if (((SharedPreferences)localObject).getBoolean("gifhint", false)) {}
    for (;;)
    {
      return;
      ((SharedPreferences)localObject).edit().putBoolean("gifhint", true).commit();
      if ((getParentActivity() != null) && (this.fragmentView != null) && (this.gifHintTextView == null)) {
        if (!this.allowContextBotPanelSecond)
        {
          if (this.chatActivityEnterView != null) {
            this.chatActivityEnterView.setOpenGifsTabFirst();
          }
        }
        else
        {
          localObject = (SizeNotifierFrameLayout)this.fragmentView;
          int i = ((SizeNotifierFrameLayout)localObject).indexOfChild(this.chatActivityEnterView);
          if (i != -1)
          {
            this.chatActivityEnterView.setOpenGifsTabFirst();
            this.emojiButtonRed = new View(getParentActivity());
            this.emojiButtonRed.setBackgroundResource(NUM);
            ((SizeNotifierFrameLayout)localObject).addView(this.emojiButtonRed, i + 1, LayoutHelper.createFrame(10, 10.0F, 83, 30.0F, 0.0F, 0.0F, 27.0F));
            this.gifHintTextView = new TextView(getParentActivity());
            this.gifHintTextView.setBackgroundDrawable(Theme.createRoundRectDrawable(AndroidUtilities.dp(3.0F), Theme.getColor("chat_gifSaveHintBackground")));
            this.gifHintTextView.setTextColor(Theme.getColor("chat_gifSaveHintText"));
            this.gifHintTextView.setTextSize(1, 14.0F);
            this.gifHintTextView.setPadding(AndroidUtilities.dp(8.0F), AndroidUtilities.dp(7.0F), AndroidUtilities.dp(8.0F), AndroidUtilities.dp(7.0F));
            this.gifHintTextView.setText(LocaleController.getString("TapHereGifs", NUM));
            this.gifHintTextView.setGravity(16);
            ((SizeNotifierFrameLayout)localObject).addView(this.gifHintTextView, i + 1, LayoutHelper.createFrame(-2, -2.0F, 83, 5.0F, 0.0F, 5.0F, 3.0F));
            localObject = new AnimatorSet();
            ((AnimatorSet)localObject).playTogether(new Animator[] { ObjectAnimator.ofFloat(this.gifHintTextView, "alpha", new float[] { 0.0F, 1.0F }), ObjectAnimator.ofFloat(this.emojiButtonRed, "alpha", new float[] { 0.0F, 1.0F }) });
            ((AnimatorSet)localObject).addListener(new AnimatorListenerAdapter()
            {
              public void onAnimationEnd(Animator paramAnonymousAnimator)
              {
                AndroidUtilities.runOnUIThread(new Runnable()
                {
                  public void run()
                  {
                    if (ChatActivity.this.gifHintTextView == null) {}
                    for (;;)
                    {
                      return;
                      AnimatorSet localAnimatorSet = new AnimatorSet();
                      localAnimatorSet.playTogether(new Animator[] { ObjectAnimator.ofFloat(ChatActivity.this.gifHintTextView, "alpha", new float[] { 0.0F }) });
                      localAnimatorSet.addListener(new AnimatorListenerAdapter()
                      {
                        public void onAnimationEnd(Animator paramAnonymous3Animator)
                        {
                          if (ChatActivity.this.gifHintTextView != null) {
                            ChatActivity.this.gifHintTextView.setVisibility(8);
                          }
                        }
                      });
                      localAnimatorSet.setDuration(300L);
                      localAnimatorSet.start();
                    }
                  }
                }, 2000L);
              }
            });
            ((AnimatorSet)localObject).setDuration(300L);
            ((AnimatorSet)localObject).start();
          }
        }
      }
    }
  }
  
  private void showMediaBannedHint()
  {
    if ((getParentActivity() == null) || (this.currentChat == null) || (this.currentChat.banned_rights == null) || (this.fragmentView == null) || ((this.mediaBanTooltip != null) && (this.mediaBanTooltip.getVisibility() == 0))) {}
    Object localObject;
    int i;
    do
    {
      return;
      localObject = (SizeNotifierFrameLayout)this.fragmentView;
      i = ((SizeNotifierFrameLayout)localObject).indexOfChild(this.chatActivityEnterView);
    } while (i == -1);
    if (this.mediaBanTooltip == null)
    {
      this.mediaBanTooltip = new CorrectlyMeasuringTextView(getParentActivity());
      this.mediaBanTooltip.setBackgroundDrawable(Theme.createRoundRectDrawable(AndroidUtilities.dp(3.0F), Theme.getColor("chat_gifSaveHintBackground")));
      this.mediaBanTooltip.setTextColor(Theme.getColor("chat_gifSaveHintText"));
      this.mediaBanTooltip.setPadding(AndroidUtilities.dp(8.0F), AndroidUtilities.dp(7.0F), AndroidUtilities.dp(8.0F), AndroidUtilities.dp(7.0F));
      this.mediaBanTooltip.setGravity(16);
      this.mediaBanTooltip.setTextSize(1, 14.0F);
      ((SizeNotifierFrameLayout)localObject).addView(this.mediaBanTooltip, i + 1, LayoutHelper.createFrame(-2, -2.0F, 85, 30.0F, 0.0F, 5.0F, 3.0F));
    }
    if (AndroidUtilities.isBannedForever(this.currentChat.banned_rights.until_date)) {
      this.mediaBanTooltip.setText(LocaleController.getString("AttachMediaRestrictedForever", NUM));
    }
    for (;;)
    {
      this.mediaBanTooltip.setVisibility(0);
      localObject = new AnimatorSet();
      ((AnimatorSet)localObject).playTogether(new Animator[] { ObjectAnimator.ofFloat(this.mediaBanTooltip, "alpha", new float[] { 0.0F, 1.0F }) });
      ((AnimatorSet)localObject).addListener(new AnimatorListenerAdapter()
      {
        public void onAnimationEnd(Animator paramAnonymousAnimator)
        {
          AndroidUtilities.runOnUIThread(new Runnable()
          {
            public void run()
            {
              if (ChatActivity.this.mediaBanTooltip == null) {}
              for (;;)
              {
                return;
                AnimatorSet localAnimatorSet = new AnimatorSet();
                localAnimatorSet.playTogether(new Animator[] { ObjectAnimator.ofFloat(ChatActivity.this.mediaBanTooltip, "alpha", new float[] { 0.0F }) });
                localAnimatorSet.addListener(new AnimatorListenerAdapter()
                {
                  public void onAnimationEnd(Animator paramAnonymous3Animator)
                  {
                    if (ChatActivity.this.mediaBanTooltip != null) {
                      ChatActivity.this.mediaBanTooltip.setVisibility(8);
                    }
                  }
                });
                localAnimatorSet.setDuration(300L);
                localAnimatorSet.start();
              }
            }
          }, 5000L);
        }
      });
      ((AnimatorSet)localObject).setDuration(300L);
      ((AnimatorSet)localObject).start();
      break;
      this.mediaBanTooltip.setText(LocaleController.formatString("AttachMediaRestricted", NUM, new Object[] { LocaleController.formatDateForBan(this.currentChat.banned_rights.until_date) }));
    }
  }
  
  private void showMentiondownButton(boolean paramBoolean1, boolean paramBoolean2)
  {
    if (this.mentiondownButton == null) {}
    for (;;)
    {
      return;
      if (paramBoolean1)
      {
        if (this.mentiondownButton.getTag() == null)
        {
          if (this.mentiondownButtonAnimation != null)
          {
            this.mentiondownButtonAnimation.cancel();
            this.mentiondownButtonAnimation = null;
          }
          if (paramBoolean2)
          {
            this.mentiondownButton.setVisibility(0);
            this.mentiondownButton.setTag(Integer.valueOf(1));
            if (this.pagedownButton.getVisibility() == 0) {
              this.mentiondownButton.setTranslationY(-AndroidUtilities.dp(72.0F));
            }
            for (this.mentiondownButtonAnimation = ObjectAnimator.ofFloat(this.mentiondownButton, "alpha", new float[] { 0.0F, 1.0F }).setDuration(200L);; this.mentiondownButtonAnimation = ObjectAnimator.ofFloat(this.mentiondownButton, "translationY", new float[] { 0.0F }).setDuration(200L))
            {
              this.mentiondownButtonAnimation.start();
              break;
              if (this.mentiondownButton.getTranslationY() == 0.0F) {
                this.mentiondownButton.setTranslationY(AndroidUtilities.dp(100.0F));
              }
            }
          }
          this.mentiondownButton.setVisibility(0);
        }
      }
      else
      {
        this.returnToMessageId = 0;
        if (this.mentiondownButton.getTag() != null)
        {
          this.mentiondownButton.setTag(null);
          if (this.mentiondownButtonAnimation != null)
          {
            this.mentiondownButtonAnimation.cancel();
            this.mentiondownButtonAnimation = null;
          }
          if (paramBoolean2)
          {
            if (this.pagedownButton.getVisibility() == 0) {}
            for (this.mentiondownButtonAnimation = ObjectAnimator.ofFloat(this.mentiondownButton, "alpha", new float[] { 1.0F, 0.0F }).setDuration(200L);; this.mentiondownButtonAnimation = ObjectAnimator.ofFloat(this.mentiondownButton, "translationY", new float[] { AndroidUtilities.dp(100.0F) }).setDuration(200L))
            {
              this.mentiondownButtonAnimation.addListener(new AnimatorListenerAdapter()
              {
                public void onAnimationEnd(Animator paramAnonymousAnimator)
                {
                  ChatActivity.this.mentiondownButtonCounter.setVisibility(4);
                  ChatActivity.this.mentiondownButton.setVisibility(4);
                }
              });
              this.mentiondownButtonAnimation.start();
              break;
            }
          }
          this.mentiondownButton.setVisibility(4);
        }
      }
    }
  }
  
  private void showPagedownButton(boolean paramBoolean1, boolean paramBoolean2)
  {
    if (this.pagedownButton == null) {}
    for (;;)
    {
      return;
      if (paramBoolean1)
      {
        this.pagedownButtonShowedByScroll = false;
        if (this.pagedownButton.getTag() == null)
        {
          if (this.pagedownButtonAnimation != null)
          {
            this.pagedownButtonAnimation.cancel();
            this.pagedownButtonAnimation = null;
          }
          if (paramBoolean2)
          {
            if (this.pagedownButton.getTranslationY() == 0.0F) {
              this.pagedownButton.setTranslationY(AndroidUtilities.dp(100.0F));
            }
            this.pagedownButton.setVisibility(0);
            this.pagedownButton.setTag(Integer.valueOf(1));
            this.pagedownButtonAnimation = new AnimatorSet();
            if (this.mentiondownButton.getVisibility() == 0) {
              this.pagedownButtonAnimation.playTogether(new Animator[] { ObjectAnimator.ofFloat(this.pagedownButton, "translationY", new float[] { 0.0F }), ObjectAnimator.ofFloat(this.mentiondownButton, "translationY", new float[] { -AndroidUtilities.dp(72.0F) }) });
            }
            for (;;)
            {
              this.pagedownButtonAnimation.setDuration(200L);
              this.pagedownButtonAnimation.start();
              break;
              this.pagedownButtonAnimation.playTogether(new Animator[] { ObjectAnimator.ofFloat(this.pagedownButton, "translationY", new float[] { 0.0F }) });
            }
          }
          this.pagedownButton.setVisibility(0);
        }
      }
      else
      {
        this.returnToMessageId = 0;
        this.newUnreadMessageCount = 0;
        if (this.pagedownButton.getTag() != null)
        {
          this.pagedownButton.setTag(null);
          if (this.pagedownButtonAnimation != null)
          {
            this.pagedownButtonAnimation.cancel();
            this.pagedownButtonAnimation = null;
          }
          if (paramBoolean2)
          {
            this.pagedownButtonAnimation = new AnimatorSet();
            if (this.mentiondownButton.getVisibility() == 0) {
              this.pagedownButtonAnimation.playTogether(new Animator[] { ObjectAnimator.ofFloat(this.pagedownButton, "translationY", new float[] { AndroidUtilities.dp(100.0F) }), ObjectAnimator.ofFloat(this.mentiondownButton, "translationY", new float[] { 0.0F }) });
            }
            for (;;)
            {
              this.pagedownButtonAnimation.setDuration(200L);
              this.pagedownButtonAnimation.addListener(new AnimatorListenerAdapter()
              {
                public void onAnimationEnd(Animator paramAnonymousAnimator)
                {
                  ChatActivity.this.pagedownButtonCounter.setVisibility(4);
                  ChatActivity.this.pagedownButton.setVisibility(4);
                }
              });
              this.pagedownButtonAnimation.start();
              break;
              this.pagedownButtonAnimation.playTogether(new Animator[] { ObjectAnimator.ofFloat(this.pagedownButton, "translationY", new float[] { AndroidUtilities.dp(100.0F) }) });
            }
          }
          this.pagedownButton.setVisibility(4);
        }
      }
    }
  }
  
  private void showVoiceHint(boolean paramBoolean1, boolean paramBoolean2)
  {
    if ((getParentActivity() == null) || (this.fragmentView == null) || ((paramBoolean1) && (this.voiceHintTextView == null))) {}
    for (;;)
    {
      return;
      Object localObject;
      if (this.voiceHintTextView == null)
      {
        localObject = (SizeNotifierFrameLayout)this.fragmentView;
        int i = ((SizeNotifierFrameLayout)localObject).indexOfChild(this.chatActivityEnterView);
        if (i != -1)
        {
          this.voiceHintTextView = new TextView(getParentActivity());
          this.voiceHintTextView.setBackgroundDrawable(Theme.createRoundRectDrawable(AndroidUtilities.dp(3.0F), Theme.getColor("chat_gifSaveHintBackground")));
          this.voiceHintTextView.setTextColor(Theme.getColor("chat_gifSaveHintText"));
          this.voiceHintTextView.setTextSize(1, 14.0F);
          this.voiceHintTextView.setPadding(AndroidUtilities.dp(8.0F), AndroidUtilities.dp(7.0F), AndroidUtilities.dp(8.0F), AndroidUtilities.dp(7.0F));
          this.voiceHintTextView.setGravity(16);
          this.voiceHintTextView.setAlpha(0.0F);
          ((SizeNotifierFrameLayout)localObject).addView(this.voiceHintTextView, i + 1, LayoutHelper.createFrame(-2, -2.0F, 85, 5.0F, 0.0F, 5.0F, 3.0F));
        }
      }
      else if (paramBoolean1)
      {
        if (this.voiceHintAnimation != null)
        {
          this.voiceHintAnimation.cancel();
          this.voiceHintAnimation = null;
        }
        AndroidUtilities.cancelRunOnUIThread(this.voiceHintHideRunnable);
        this.voiceHintHideRunnable = null;
        hideVoiceHint();
      }
      else
      {
        TextView localTextView = this.voiceHintTextView;
        if (paramBoolean2)
        {
          localObject = LocaleController.getString("HoldToVideo", NUM);
          label260:
          localTextView.setText((CharSequence)localObject);
          if (this.voiceHintHideRunnable == null) {
            break label422;
          }
          if (this.voiceHintAnimation == null) {
            break label391;
          }
          this.voiceHintAnimation.cancel();
          this.voiceHintAnimation = null;
        }
        label391:
        label422:
        while (this.voiceHintAnimation == null)
        {
          this.voiceHintTextView.setVisibility(0);
          this.voiceHintAnimation = new AnimatorSet();
          this.voiceHintAnimation.playTogether(new Animator[] { ObjectAnimator.ofFloat(this.voiceHintTextView, "alpha", new float[] { 1.0F }) });
          this.voiceHintAnimation.addListener(new AnimatorListenerAdapter()
          {
            public void onAnimationCancel(Animator paramAnonymousAnimator)
            {
              if (paramAnonymousAnimator.equals(ChatActivity.this.voiceHintAnimation)) {
                ChatActivity.access$22902(ChatActivity.this, null);
              }
            }
            
            public void onAnimationEnd(Animator paramAnonymousAnimator)
            {
              if (paramAnonymousAnimator.equals(ChatActivity.this.voiceHintAnimation))
              {
                ChatActivity.access$22902(ChatActivity.this, null);
                AndroidUtilities.runOnUIThread(ChatActivity.access$23002(ChatActivity.this, new Runnable()
                {
                  public void run()
                  {
                    ChatActivity.this.hideVoiceHint();
                  }
                }), 2000L);
              }
            }
          });
          this.voiceHintAnimation.setDuration(300L);
          this.voiceHintAnimation.start();
          break;
          localObject = LocaleController.getString("HoldToAudio", NUM);
          break label260;
          AndroidUtilities.cancelRunOnUIThread(this.voiceHintHideRunnable);
          localObject = new Runnable()
          {
            public void run()
            {
              ChatActivity.this.hideVoiceHint();
            }
          };
          this.voiceHintHideRunnable = ((Runnable)localObject);
          AndroidUtilities.runOnUIThread((Runnable)localObject, 2000L);
          break;
        }
      }
    }
  }
  
  private void startEditingMessageObject(MessageObject paramMessageObject)
  {
    if ((paramMessageObject == null) || (getParentActivity() == null)) {
      return;
    }
    if ((this.searchItem != null) && (this.actionBar.isSearchFieldVisible()))
    {
      this.actionBar.closeSearchField();
      this.chatActivityEnterView.setFieldFocused();
    }
    this.mentionsAdapter.setNeedBotContext(false);
    this.chatListView.setOnItemLongClickListener((RecyclerListView.OnItemLongClickListenerExtended)null);
    this.chatListView.setOnItemClickListener((RecyclerListView.OnItemClickListenerExtended)null);
    this.chatListView.setClickable(false);
    this.chatListView.setLongClickable(false);
    Object localObject = this.chatActivityEnterView;
    if (!paramMessageObject.isMediaEmpty()) {}
    for (boolean bool = true;; bool = false)
    {
      ((ChatActivityEnterView)localObject).setEditingMessageObject(paramMessageObject, bool);
      updateBottomOverlay();
      this.actionModeTitleContainer.setVisibility(0);
      this.selectedMessagesCountTextView.setVisibility(8);
      checkEditTimer();
      this.chatActivityEnterView.setAllowStickersAndGifs(false, false);
      localObject = this.actionBar.createActionMode();
      ((ActionBarMenu)localObject).getItem(19).setVisibility(8);
      ((ActionBarMenu)localObject).getItem(10).setVisibility(8);
      if (((ActionBarMenu)localObject).getItem(11) != null) {
        ((ActionBarMenu)localObject).getItem(11).setVisibility(8);
      }
      ((ActionBarMenu)localObject).getItem(12).setVisibility(8);
      ((ActionBarMenu)localObject).getItem(23).setVisibility(8);
      ((ActionBarMenu)localObject).getItem(22).setVisibility(8);
      this.actionBar.showActionMode();
      updatePinnedMessageView(true);
      updateVisibleRows();
      localObject = new TLRPC.TL_messages_getMessageEditData();
      ((TLRPC.TL_messages_getMessageEditData)localObject).peer = MessagesController.getInstance(this.currentAccount).getInputPeer((int)this.dialog_id);
      ((TLRPC.TL_messages_getMessageEditData)localObject).id = paramMessageObject.getId();
      this.editingMessageObjectReqId = ConnectionsManager.getInstance(this.currentAccount).sendRequest((TLObject)localObject, new RequestDelegate()
      {
        public void run(final TLObject paramAnonymousTLObject, TLRPC.TL_error paramAnonymousTL_error)
        {
          AndroidUtilities.runOnUIThread(new Runnable()
          {
            public void run()
            {
              ChatActivity.access$18602(ChatActivity.this, 0);
              if (paramAnonymousTLObject == null)
              {
                AlertDialog.Builder localBuilder = new AlertDialog.Builder(ChatActivity.this.getParentActivity());
                localBuilder.setTitle(LocaleController.getString("AppName", NUM));
                localBuilder.setMessage(LocaleController.getString("EditMessageError", NUM));
                localBuilder.setPositiveButton(LocaleController.getString("OK", NUM), null);
                ChatActivity.this.showDialog(localBuilder.create());
                if (ChatActivity.this.chatActivityEnterView != null) {
                  ChatActivity.this.chatActivityEnterView.setEditingMessageObject(null, false);
                }
              }
              for (;;)
              {
                return;
                if (ChatActivity.this.chatActivityEnterView != null) {
                  ChatActivity.this.chatActivityEnterView.showEditDoneProgress(false, true);
                }
              }
            }
          });
        }
      });
      break;
    }
  }
  
  private void toggleMute(boolean paramBoolean)
  {
    Object localObject;
    if (!MessagesController.getInstance(this.currentAccount).isDialogMuted(this.dialog_id)) {
      if (paramBoolean)
      {
        localObject = MessagesController.getNotificationsSettings(this.currentAccount).edit();
        ((SharedPreferences.Editor)localObject).putInt("notify2_" + this.dialog_id, 2);
        MessagesStorage.getInstance(this.currentAccount).setDialogFlags(this.dialog_id, 1L);
        ((SharedPreferences.Editor)localObject).commit();
        localObject = (TLRPC.TL_dialog)MessagesController.getInstance(this.currentAccount).dialogs_dict.get(this.dialog_id);
        if (localObject != null)
        {
          ((TLRPC.TL_dialog)localObject).notify_settings = new TLRPC.TL_peerNotifySettings();
          ((TLRPC.TL_dialog)localObject).notify_settings.mute_until = Integer.MAX_VALUE;
        }
        NotificationsController.getInstance(this.currentAccount).updateServerNotificationsSettings(this.dialog_id);
        NotificationsController.getInstance(this.currentAccount).removeNotificationsForDialog(this.dialog_id);
      }
    }
    for (;;)
    {
      return;
      showDialog(AlertsCreator.createMuteAlert(getParentActivity(), this.dialog_id));
      continue;
      localObject = MessagesController.getNotificationsSettings(this.currentAccount).edit();
      ((SharedPreferences.Editor)localObject).putInt("notify2_" + this.dialog_id, 0);
      MessagesStorage.getInstance(this.currentAccount).setDialogFlags(this.dialog_id, 0L);
      ((SharedPreferences.Editor)localObject).commit();
      localObject = (TLRPC.TL_dialog)MessagesController.getInstance(this.currentAccount).dialogs_dict.get(this.dialog_id);
      if (localObject != null) {
        ((TLRPC.TL_dialog)localObject).notify_settings = new TLRPC.TL_peerNotifySettings();
      }
      NotificationsController.getInstance(this.currentAccount).updateServerNotificationsSettings(this.dialog_id);
    }
  }
  
  private void updateActionModeTitle()
  {
    if (!this.actionBar.isActionModeShowed()) {}
    for (;;)
    {
      return;
      if ((this.selectedMessagesIds[0].size() != 0) || (this.selectedMessagesIds[1].size() != 0)) {
        this.selectedMessagesCountTextView.setNumber(this.selectedMessagesIds[0].size() + this.selectedMessagesIds[1].size(), true);
      }
    }
  }
  
  private void updateBotButtons()
  {
    if ((this.headerItem == null) || (this.currentUser == null) || (this.currentEncryptedChat != null) || (!this.currentUser.bot)) {}
    for (;;)
    {
      return;
      int i = 0;
      int j = 0;
      int k = 0;
      int m = 0;
      if (this.botInfo.size() != 0)
      {
        int n = 0;
        i = j;
        k = m;
        if (n < this.botInfo.size())
        {
          TLRPC.BotInfo localBotInfo = (TLRPC.BotInfo)this.botInfo.valueAt(n);
          int i1 = 0;
          for (;;)
          {
            k = j;
            i = m;
            TLRPC.TL_botCommand localTL_botCommand;
            if (i1 < localBotInfo.commands.size())
            {
              localTL_botCommand = (TLRPC.TL_botCommand)localBotInfo.commands.get(i1);
              if (!localTL_botCommand.command.toLowerCase().equals("help")) {
                break label163;
              }
              k = 1;
            }
            for (;;)
            {
              if ((m == 0) || (k == 0)) {
                break label190;
              }
              i = m;
              n++;
              j = k;
              m = i;
              break;
              label163:
              k = j;
              if (localTL_botCommand.command.toLowerCase().equals("settings"))
              {
                m = 1;
                k = j;
              }
            }
            label190:
            i1++;
            j = k;
          }
        }
      }
      if (i != 0) {
        this.headerItem.showSubItem(30);
      }
      for (;;)
      {
        if (k == 0) {
          break label239;
        }
        this.headerItem.showSubItem(31);
        break;
        this.headerItem.hideSubItem(30);
      }
      label239:
      this.headerItem.hideSubItem(31);
    }
  }
  
  private void updateBottomOverlay()
  {
    if (this.bottomOverlayChatText == null) {
      return;
    }
    if (this.currentChat != null) {
      if ((ChatObject.isChannel(this.currentChat)) && (!(this.currentChat instanceof TLRPC.TL_channelForbidden))) {
        if (ChatObject.isNotInChat(this.currentChat))
        {
          this.bottomOverlayChatText.setText(LocaleController.getString("ChannelJoin", NUM));
          label61:
          if ((this.searchItem == null) || (this.searchItem.getVisibility() != 0)) {
            break label420;
          }
          this.searchContainer.setVisibility(0);
          this.bottomOverlayChat.setVisibility(4);
          this.chatActivityEnterView.setFieldFocused(false);
          this.chatActivityEnterView.setVisibility(4);
          if (!this.chatActivityEnterView.isTopViewVisible()) {
            break label412;
          }
          this.topViewWasVisible = 1;
          this.chatActivityEnterView.hideTopView(false);
        }
      }
    }
    for (;;)
    {
      checkRaiseSensors();
      break;
      if (!MessagesController.getInstance(this.currentAccount).isDialogMuted(this.dialog_id))
      {
        this.bottomOverlayChatText.setText(LocaleController.getString("ChannelMute", NUM));
        break label61;
      }
      this.bottomOverlayChatText.setText(LocaleController.getString("ChannelUnmute", NUM));
      break label61;
      this.bottomOverlayChatText.setText(LocaleController.getString("DeleteThisGroup", NUM));
      break label61;
      if (this.userBlocked)
      {
        if (this.currentUser.bot) {
          this.bottomOverlayChatText.setText(LocaleController.getString("BotUnblock", NUM));
        }
        for (;;)
        {
          if (this.botButtons == null) {
            break label330;
          }
          this.botButtons = null;
          if (this.chatActivityEnterView == null) {
            break;
          }
          if ((this.replyingMessageObject != null) && (this.botReplyButtons == this.replyingMessageObject))
          {
            this.botReplyButtons = null;
            showReplyPanel(false, null, null, null, false);
          }
          this.chatActivityEnterView.setButtons(this.botButtons, false);
          break;
          this.bottomOverlayChatText.setText(LocaleController.getString("Unblock", NUM));
        }
        label330:
        break label61;
      }
      if ((this.botUser != null) && (this.currentUser.bot))
      {
        this.bottomOverlayChatText.setText(LocaleController.getString("BotStart", NUM));
        this.chatActivityEnterView.hidePopup(false);
        if (getParentActivity() == null) {
          break label61;
        }
        AndroidUtilities.hideKeyboard(getParentActivity().getCurrentFocus());
        break label61;
      }
      this.bottomOverlayChatText.setText(LocaleController.getString("DeleteThisChat", NUM));
      break label61;
      label412:
      this.topViewWasVisible = 2;
    }
    label420:
    this.searchContainer.setVisibility(4);
    if (((this.currentChat != null) && ((ChatObject.isNotInChat(this.currentChat)) || (!ChatObject.canWriteToChat(this.currentChat)))) || ((this.currentUser != null) && ((UserObject.isDeleted(this.currentUser)) || (this.userBlocked)))) {
      if (this.chatActivityEnterView.isEditingMessage())
      {
        this.chatActivityEnterView.setVisibility(0);
        this.bottomOverlayChat.setVisibility(4);
        this.chatActivityEnterView.setFieldFocused();
        AndroidUtilities.runOnUIThread(new Runnable()
        {
          public void run()
          {
            ChatActivity.this.chatActivityEnterView.openKeyboard();
          }
        }, 100L);
        label526:
        if (this.muteItem != null) {
          this.muteItem.setVisibility(8);
        }
        this.attachItem.setVisibility(8);
        this.headerItem.setVisibility(0);
      }
    }
    label559:
    label669:
    label686:
    for (;;)
    {
      if (this.topViewWasVisible == 1)
      {
        this.chatActivityEnterView.showTopView(false, false);
        this.topViewWasVisible = 0;
        break;
        this.bottomOverlayChat.setVisibility(0);
        this.chatActivityEnterView.setFieldFocused(false);
        this.chatActivityEnterView.setVisibility(4);
        this.chatActivityEnterView.closeKeyboard();
        break label526;
        if ((this.botUser == null) || (!this.currentUser.bot)) {
          break label669;
        }
        this.bottomOverlayChat.setVisibility(0);
        this.chatActivityEnterView.setVisibility(4);
      }
      for (;;)
      {
        if (this.muteItem == null) {
          break label686;
        }
        this.muteItem.setVisibility(0);
        break label559;
        break;
        this.chatActivityEnterView.setVisibility(0);
        this.bottomOverlayChat.setVisibility(4);
      }
    }
  }
  
  private void updateContactStatus()
  {
    if (this.addContactItem == null) {
      return;
    }
    if (this.currentUser == null) {
      this.addContactItem.setVisibility(8);
    }
    for (;;)
    {
      checkListViewPaddings();
      break;
      TLRPC.User localUser = MessagesController.getInstance(this.currentAccount).getUser(Integer.valueOf(this.currentUser.id));
      if (localUser != null) {
        this.currentUser = localUser;
      }
      if (((this.currentEncryptedChat != null) && (!(this.currentEncryptedChat instanceof TLRPC.TL_encryptedChat))) || (MessagesController.isSupportId(this.currentUser.id)) || (UserObject.isDeleted(this.currentUser)) || (ContactsController.getInstance(this.currentAccount).isLoadingContacts()) || ((!TextUtils.isEmpty(this.currentUser.phone)) && (ContactsController.getInstance(this.currentAccount).contactsDict.get(Integer.valueOf(this.currentUser.id)) != null) && ((ContactsController.getInstance(this.currentAccount).contactsDict.size() != 0) || (!ContactsController.getInstance(this.currentAccount).isLoadingContacts()))))
      {
        this.addContactItem.setVisibility(8);
      }
      else
      {
        this.addContactItem.setVisibility(0);
        if (!TextUtils.isEmpty(this.currentUser.phone))
        {
          this.addContactItem.setText(LocaleController.getString("AddToContacts", NUM));
          this.reportSpamButton.setPadding(AndroidUtilities.dp(4.0F), 0, AndroidUtilities.dp(50.0F), 0);
          this.addToContactsButton.setVisibility(0);
          this.reportSpamContainer.setLayoutParams(LayoutHelper.createLinear(-1, -1, 0.5F, 51, 0, 0, 0, AndroidUtilities.dp(1.0F)));
        }
        else
        {
          this.addContactItem.setText(LocaleController.getString("ShareMyContactInfo", NUM));
          this.addToContactsButton.setVisibility(8);
          this.reportSpamButton.setPadding(AndroidUtilities.dp(50.0F), 0, AndroidUtilities.dp(50.0F), 0);
          this.reportSpamContainer.setLayoutParams(LayoutHelper.createLinear(-1, -1, 1.0F, 51, 0, 0, 0, AndroidUtilities.dp(1.0F)));
        }
      }
    }
  }
  
  private void updateInformationForScreenshotDetector()
  {
    if (this.currentUser == null) {}
    for (;;)
    {
      return;
      Object localObject;
      MessageObject localMessageObject;
      if (this.currentEncryptedChat != null)
      {
        localObject = new ArrayList();
        if (this.chatListView != null)
        {
          int i = this.chatListView.getChildCount();
          for (int j = 0; j < i; j++)
          {
            View localView = this.chatListView.getChildAt(j);
            localMessageObject = null;
            if ((localView instanceof ChatMessageCell)) {
              localMessageObject = ((ChatMessageCell)localView).getMessageObject();
            }
            if ((localMessageObject != null) && (localMessageObject.getId() < 0) && (localMessageObject.messageOwner.random_id != 0L)) {
              ((ArrayList)localObject).add(Long.valueOf(localMessageObject.messageOwner.random_id));
            }
          }
        }
        MediaController.getInstance().setLastVisibleMessageIds(this.currentAccount, this.chatEnterTime, this.chatLeaveTime, this.currentUser, this.currentEncryptedChat, (ArrayList)localObject, 0);
      }
      else
      {
        localObject = SecretMediaViewer.getInstance();
        localMessageObject = ((SecretMediaViewer)localObject).getCurrentMessageObject();
        if ((localMessageObject != null) && (!localMessageObject.isOut())) {
          MediaController.getInstance().setLastVisibleMessageIds(this.currentAccount, ((SecretMediaViewer)localObject).getOpenTime(), ((SecretMediaViewer)localObject).getCloseTime(), this.currentUser, null, null, localMessageObject.getId());
        }
      }
    }
  }
  
  private void updateMessagesVisisblePart()
  {
    if (this.chatListView == null) {}
    for (;;)
    {
      return;
      int i = this.chatListView.getChildCount();
      int j;
      int m;
      int n;
      Object localObject1;
      Object localObject2;
      Object localObject3;
      int i1;
      int i2;
      int i3;
      int i4;
      int i5;
      label81:
      Object localObject4;
      Object localObject5;
      Object localObject6;
      int i6;
      int i7;
      label137:
      int i8;
      int i9;
      Object localObject7;
      if (this.chatActivityEnterView.isTopViewVisible())
      {
        j = AndroidUtilities.dp(48.0F);
        int k = this.chatListView.getMeasuredHeight();
        m = Integer.MAX_VALUE;
        n = Integer.MAX_VALUE;
        localObject1 = null;
        localObject2 = null;
        localObject3 = null;
        i1 = 0;
        i2 = Integer.MIN_VALUE;
        i3 = Integer.MAX_VALUE;
        i4 = Integer.MIN_VALUE;
        i5 = 0;
        if (i5 >= i) {
          break label716;
        }
        localObject4 = this.chatListView.getChildAt(i5);
        localObject5 = null;
        if (!(localObject4 instanceof ChatMessageCell)) {
          break label501;
        }
        localObject6 = (ChatMessageCell)localObject4;
        i6 = ((ChatMessageCell)localObject6).getTop();
        ((ChatMessageCell)localObject6).getBottom();
        if (i6 < 0) {
          break label493;
        }
        i7 = 0;
        i8 = ((ChatMessageCell)localObject6).getMeasuredHeight();
        i9 = i8;
        if (i8 > k) {
          i9 = i7 + k;
        }
        ((ChatMessageCell)localObject6).setVisiblePart(i7, i9 - i7);
        localObject7 = ((ChatMessageCell)localObject6).getMessageObject();
        i7 = i1;
        localObject5 = localObject7;
        if (this.roundVideoContainer != null)
        {
          i7 = i1;
          localObject5 = localObject7;
          if (((MessageObject)localObject7).isRoundVideo())
          {
            i7 = i1;
            localObject5 = localObject7;
            if (MediaController.getInstance().isPlayingMessage((MessageObject)localObject7))
            {
              localObject5 = ((ChatMessageCell)localObject6).getPhotoImage();
              this.roundVideoContainer.setTranslationX(((ImageReceiver)localObject5).getImageX() + ((ChatMessageCell)localObject6).getTranslationX());
              this.roundVideoContainer.setTranslationY(this.fragmentView.getPaddingTop() + i6 + ((ImageReceiver)localObject5).getImageY() - j);
              this.fragmentView.invalidate();
              this.roundVideoContainer.invalidate();
              i7 = 1;
              localObject5 = localObject7;
            }
          }
        }
        label302:
        i1 = i2;
        i8 = i3;
        i9 = i4;
        if (localObject5 != null)
        {
          i1 = i2;
          i8 = i3;
          i9 = i4;
          if (!((MessageObject)localObject5).isOut())
          {
            i1 = i2;
            i8 = i3;
            i9 = i4;
            if (((MessageObject)localObject5).isUnread())
            {
              i9 = ((MessageObject)localObject5).getId();
              i1 = i2;
              if (i9 > 0) {
                i1 = Math.max(i2, ((MessageObject)localObject5).getId());
              }
              i2 = i3;
              if (i9 < 0) {
                i2 = Math.min(i3, ((MessageObject)localObject5).getId());
              }
              i9 = Math.max(i4, ((MessageObject)localObject5).messageOwner.date);
              i8 = i2;
            }
          }
        }
        if (((View)localObject4).getBottom() > this.chatListView.getPaddingTop()) {
          break label530;
        }
        i6 = n;
        localObject7 = localObject1;
        localObject6 = localObject2;
      }
      for (;;)
      {
        i5++;
        i2 = i1;
        i3 = i8;
        i4 = i9;
        i1 = i7;
        localObject2 = localObject6;
        localObject1 = localObject7;
        n = i6;
        break label81;
        j = 0;
        break;
        label493:
        i7 = -i6;
        break label137;
        label501:
        i7 = i1;
        if (!(localObject4 instanceof ChatActionCell)) {
          break label302;
        }
        localObject5 = ((ChatActionCell)localObject4).getMessageObject();
        i7 = i1;
        break label302;
        label530:
        i2 = ((View)localObject4).getBottom();
        localObject5 = localObject2;
        localObject2 = localObject3;
        i3 = m;
        if (i2 < m)
        {
          i3 = i2;
          if (((localObject4 instanceof ChatMessageCell)) || ((localObject4 instanceof ChatActionCell))) {
            localObject3 = localObject4;
          }
          localObject5 = localObject4;
          localObject2 = localObject3;
        }
        localObject6 = localObject5;
        localObject7 = localObject1;
        localObject3 = localObject2;
        i6 = n;
        m = i3;
        if ((localObject4 instanceof ChatActionCell))
        {
          localObject6 = localObject5;
          localObject7 = localObject1;
          localObject3 = localObject2;
          i6 = n;
          m = i3;
          if (((ChatActionCell)localObject4).getMessageObject().isDateObject)
          {
            if (((View)localObject4).getAlpha() != 1.0F) {
              ((View)localObject4).setAlpha(1.0F);
            }
            localObject6 = localObject5;
            localObject7 = localObject1;
            localObject3 = localObject2;
            i6 = n;
            m = i3;
            if (i2 < n)
            {
              localObject6 = localObject5;
              localObject7 = localObject4;
              localObject3 = localObject2;
              i6 = i2;
              m = i3;
            }
          }
        }
      }
      label716:
      if (this.roundVideoContainer != null)
      {
        if (i1 != 0) {
          break label1159;
        }
        this.roundVideoContainer.setTranslationY(-AndroidUtilities.roundMessageSize - 100);
        this.fragmentView.invalidate();
        localObject4 = MediaController.getInstance().getPlayingMessageObject();
        if ((localObject4 != null) && (((MessageObject)localObject4).isRoundVideo()) && (((MessageObject)localObject4).eventId == 0L) && (this.checkTextureViewPosition)) {
          MediaController.getInstance().setCurrentRoundVisible(false);
        }
      }
      if (localObject3 != null)
      {
        if ((localObject3 instanceof ChatMessageCell))
        {
          localObject3 = ((ChatMessageCell)localObject3).getMessageObject();
          label818:
          this.floatingDateView.setCustomDate(((MessageObject)localObject3).messageOwner.date);
        }
      }
      else
      {
        this.currentFloatingDateOnScreen = false;
        if (((localObject2 instanceof ChatMessageCell)) || ((localObject2 instanceof ChatActionCell))) {
          break label1182;
        }
        bool = true;
        label857:
        this.currentFloatingTopIsNotMessage = bool;
        if (localObject1 == null) {
          break label1289;
        }
        if ((((View)localObject1).getTop() <= this.chatListView.getPaddingTop()) && (!this.currentFloatingTopIsNotMessage)) {
          break label1194;
        }
        if (((View)localObject1).getAlpha() != 1.0F) {
          ((View)localObject1).setAlpha(1.0F);
        }
        if (this.currentFloatingTopIsNotMessage) {
          break label1188;
        }
        bool = true;
        label916:
        hideFloatingDateView(bool);
        label922:
        m = ((View)localObject1).getBottom() - this.chatListView.getPaddingTop();
        if ((m <= this.floatingDateView.getMeasuredHeight()) || (m >= this.floatingDateView.getMeasuredHeight() * 2)) {
          break label1278;
        }
        this.floatingDateView.setTranslationY(-this.floatingDateView.getMeasuredHeight() * 2 + m);
      }
      for (;;)
      {
        if (this.firstLoading) {
          break label1303;
        }
        if ((i2 == Integer.MIN_VALUE) && (i3 == Integer.MAX_VALUE)) {
          break label1504;
        }
        i1 = 0;
        for (j = 0; j < this.messages.size(); j++)
        {
          localObject3 = (MessageObject)this.messages.get(j);
          n = ((MessageObject)localObject3).getId();
          m = i1;
          if (i2 != Integer.MIN_VALUE)
          {
            m = i1;
            if (n > 0)
            {
              m = i1;
              if (n <= i2)
              {
                m = i1;
                if (((MessageObject)localObject3).isUnread())
                {
                  ((MessageObject)localObject3).setIsRead();
                  m = i1 + 1;
                }
              }
            }
          }
          i1 = m;
          if (i3 != Integer.MAX_VALUE)
          {
            i1 = m;
            if (n < 0)
            {
              i1 = m;
              if (n >= i3)
              {
                i1 = m;
                if (((MessageObject)localObject3).isUnread())
                {
                  ((MessageObject)localObject3).setIsRead();
                  i1 = m + 1;
                }
              }
            }
          }
        }
        label1159:
        MediaController.getInstance().setCurrentRoundVisible(true);
        break;
        localObject3 = ((ChatActionCell)localObject3).getMessageObject();
        break label818;
        label1182:
        bool = false;
        break label857;
        label1188:
        bool = false;
        break label916;
        label1194:
        if (((View)localObject1).getAlpha() != 0.0F) {
          ((View)localObject1).setAlpha(0.0F);
        }
        if (this.floatingDateAnimation != null)
        {
          this.floatingDateAnimation.cancel();
          this.floatingDateAnimation = null;
        }
        if (this.floatingDateView.getTag() == null) {
          this.floatingDateView.setTag(Integer.valueOf(1));
        }
        if (this.floatingDateView.getAlpha() != 1.0F) {
          this.floatingDateView.setAlpha(1.0F);
        }
        this.currentFloatingDateOnScreen = true;
        break label922;
        label1278:
        this.floatingDateView.setTranslationY(0.0F);
        continue;
        label1289:
        hideFloatingDateView(true);
        this.floatingDateView.setTranslationY(0.0F);
      }
      label1303:
      continue;
      label1332:
      label1385:
      long l;
      if ((i2 == this.minMessageId[0]) || (i3 == this.minMessageId[0]))
      {
        this.newUnreadMessageCount = 0;
        this.pagedownButtonCounter.setText(String.format("%d", new Object[] { Integer.valueOf(this.newUnreadMessageCount) }));
        if (this.newUnreadMessageCount > 0) {
          break label1477;
        }
        if (this.pagedownButtonCounter.getVisibility() != 4) {
          this.pagedownButtonCounter.setVisibility(4);
        }
        localObject3 = MessagesController.getInstance(this.currentAccount);
        l = this.dialog_id;
        if ((i2 != this.minMessageId[0]) && (i3 != this.minMessageId[0])) {
          break label1498;
        }
      }
      label1477:
      label1498:
      for (boolean bool = true;; bool = false)
      {
        ((MessagesController)localObject3).markDialogAsRead(l, i2, i3, i4, false, i1, bool);
        this.firstUnreadSent = true;
        break;
        this.newUnreadMessageCount -= i1;
        if (this.newUnreadMessageCount >= 0) {
          break label1332;
        }
        this.newUnreadMessageCount = 0;
        break label1332;
        if (this.pagedownButtonCounter.getVisibility() == 0) {
          break label1385;
        }
        this.pagedownButtonCounter.setVisibility(0);
        break label1385;
      }
      label1504:
      if (!this.firstUnreadSent)
      {
        this.newUnreadMessageCount = 0;
        this.pagedownButtonCounter.setText(String.format("%d", new Object[] { Integer.valueOf(this.newUnreadMessageCount) }));
        if (this.pagedownButtonCounter.getVisibility() != 4) {
          this.pagedownButtonCounter.setVisibility(4);
        }
        if (this.chatLayoutManager.findFirstVisibleItemPosition() == 0)
        {
          MessagesController.getInstance(this.currentAccount).markDialogAsRead(this.dialog_id, this.minMessageId[0], this.minMessageId[0], this.maxDate[0], false, 0, true);
          this.firstUnreadSent = true;
        }
      }
    }
  }
  
  private void updatePinnedMessageView(boolean paramBoolean)
  {
    if (this.pinnedMessageView == null) {
      return;
    }
    if (this.info != null)
    {
      if ((this.pinnedMessageObject != null) && (this.info.pinned_msg_id != this.pinnedMessageObject.getId())) {
        this.pinnedMessageObject = null;
      }
      if ((this.info.pinned_msg_id != 0) && (this.pinnedMessageObject == null)) {
        this.pinnedMessageObject = ((MessageObject)this.messagesDict[0].get(this.info.pinned_msg_id));
      }
    }
    Object localObject1 = MessagesController.getNotificationsSettings(this.currentAccount);
    if ((this.info == null) || (this.info.pinned_msg_id == 0) || (this.info.pinned_msg_id == ((SharedPreferences)localObject1).getInt("pin_" + this.dialog_id, 0)) || ((this.actionBar != null) && ((this.actionBar.isActionModeShowed()) || (this.actionBar.isSearchFieldVisible())))) {
      hidePinnedMessageView(paramBoolean);
    }
    for (;;)
    {
      checkListViewPaddings();
      break;
      if (this.pinnedMessageObject != null)
      {
        if (this.pinnedMessageView.getTag() != null)
        {
          this.pinnedMessageView.setTag(null);
          if (this.pinnedMessageViewAnimator != null)
          {
            this.pinnedMessageViewAnimator.cancel();
            this.pinnedMessageViewAnimator = null;
          }
          if (!paramBoolean) {
            break label545;
          }
          this.pinnedMessageView.setVisibility(0);
          this.pinnedMessageViewAnimator = new AnimatorSet();
          this.pinnedMessageViewAnimator.playTogether(new Animator[] { ObjectAnimator.ofFloat(this.pinnedMessageView, "translationY", new float[] { 0.0F }) });
          this.pinnedMessageViewAnimator.setDuration(200L);
          this.pinnedMessageViewAnimator.addListener(new AnimatorListenerAdapter()
          {
            public void onAnimationCancel(Animator paramAnonymousAnimator)
            {
              if ((ChatActivity.this.pinnedMessageViewAnimator != null) && (ChatActivity.this.pinnedMessageViewAnimator.equals(paramAnonymousAnimator))) {
                ChatActivity.access$26002(ChatActivity.this, null);
              }
            }
            
            public void onAnimationEnd(Animator paramAnonymousAnimator)
            {
              if ((ChatActivity.this.pinnedMessageViewAnimator != null) && (ChatActivity.this.pinnedMessageViewAnimator.equals(paramAnonymousAnimator))) {
                ChatActivity.access$26002(ChatActivity.this, null);
              }
            }
          });
          this.pinnedMessageViewAnimator.start();
        }
        FrameLayout.LayoutParams localLayoutParams1;
        FrameLayout.LayoutParams localLayoutParams2;
        Object localObject2;
        int i;
        for (;;)
        {
          localLayoutParams1 = (FrameLayout.LayoutParams)this.pinnedMessageNameTextView.getLayoutParams();
          localLayoutParams2 = (FrameLayout.LayoutParams)this.pinnedMessageTextView.getLayoutParams();
          localObject2 = FileLoader.getClosestPhotoSizeWithSize(this.pinnedMessageObject.photoThumbs2, AndroidUtilities.dp(50.0F));
          localObject1 = localObject2;
          if (localObject2 == null) {
            localObject1 = FileLoader.getClosestPhotoSizeWithSize(this.pinnedMessageObject.photoThumbs, AndroidUtilities.dp(50.0F));
          }
          if ((localObject1 != null) && (!(localObject1 instanceof TLRPC.TL_photoSizeEmpty)) && (!(((TLRPC.PhotoSize)localObject1).location instanceof TLRPC.TL_fileLocationUnavailable)) && (this.pinnedMessageObject.type != 13)) {
            break label564;
          }
          this.pinnedMessageImageView.setImageBitmap(null);
          this.pinnedImageLocation = null;
          this.pinnedMessageImageView.setVisibility(4);
          i = AndroidUtilities.dp(18.0F);
          localLayoutParams2.leftMargin = i;
          localLayoutParams1.leftMargin = i;
          this.pinnedMessageNameTextView.setLayoutParams(localLayoutParams1);
          this.pinnedMessageTextView.setLayoutParams(localLayoutParams2);
          this.pinnedMessageNameTextView.setText(LocaleController.getString("PinnedMessage", NUM));
          if (this.pinnedMessageObject.type != 14) {
            break label656;
          }
          this.pinnedMessageTextView.setText(String.format("%s - %s", new Object[] { this.pinnedMessageObject.getMusicAuthor(), this.pinnedMessageObject.getMusicTitle() }));
          break;
          label545:
          this.pinnedMessageView.setTranslationY(0.0F);
          this.pinnedMessageView.setVisibility(0);
        }
        label564:
        if (this.pinnedMessageObject.isRoundVideo()) {
          this.pinnedMessageImageView.setRoundRadius(AndroidUtilities.dp(16.0F));
        }
        for (;;)
        {
          this.pinnedImageLocation = ((TLRPC.PhotoSize)localObject1).location;
          this.pinnedMessageImageView.setImage(this.pinnedImageLocation, "50_50", (Drawable)null);
          this.pinnedMessageImageView.setVisibility(0);
          i = AndroidUtilities.dp(55.0F);
          localLayoutParams2.leftMargin = i;
          localLayoutParams1.leftMargin = i;
          break;
          this.pinnedMessageImageView.setRoundRadius(0);
        }
        label656:
        if ((this.pinnedMessageObject.messageOwner.media instanceof TLRPC.TL_messageMediaGame))
        {
          this.pinnedMessageTextView.setText(Emoji.replaceEmoji(this.pinnedMessageObject.messageOwner.media.game.title, this.pinnedMessageTextView.getPaint().getFontMetricsInt(), AndroidUtilities.dp(14.0F), false));
        }
        else if (this.pinnedMessageObject.messageText != null)
        {
          localObject2 = this.pinnedMessageObject.messageText.toString();
          localObject1 = localObject2;
          if (((String)localObject2).length() > 150) {
            localObject1 = ((String)localObject2).substring(0, 150);
          }
          localObject1 = ((String)localObject1).replace('\n', ' ');
          this.pinnedMessageTextView.setText(Emoji.replaceEmoji((CharSequence)localObject1, this.pinnedMessageTextView.getPaint().getFontMetricsInt(), AndroidUtilities.dp(14.0F), false));
        }
      }
      else
      {
        this.pinnedImageLocation = null;
        hidePinnedMessageView(paramBoolean);
        if (this.loadingPinnedMessage != this.info.pinned_msg_id)
        {
          this.loadingPinnedMessage = this.info.pinned_msg_id;
          DataQuery.getInstance(this.currentAccount).loadPinnedMessage(this.currentChat.id, this.info.pinned_msg_id, true);
        }
      }
    }
  }
  
  private void updateSearchButtons(int paramInt1, int paramInt2, int paramInt3)
  {
    float f1 = 1.0F;
    boolean bool;
    label47:
    float f2;
    if (this.searchUpButton != null)
    {
      ImageView localImageView = this.searchUpButton;
      if ((paramInt1 & 0x1) == 0) {
        break label122;
      }
      bool = true;
      localImageView.setEnabled(bool);
      localImageView = this.searchDownButton;
      if ((paramInt1 & 0x2) == 0) {
        break label128;
      }
      bool = true;
      localImageView.setEnabled(bool);
      localImageView = this.searchUpButton;
      if (!this.searchUpButton.isEnabled()) {
        break label134;
      }
      f2 = 1.0F;
      label73:
      localImageView.setAlpha(f2);
      localImageView = this.searchDownButton;
      if (!this.searchDownButton.isEnabled()) {
        break label142;
      }
      f2 = f1;
      label100:
      localImageView.setAlpha(f2);
      if (paramInt3 >= 0) {
        break label150;
      }
      this.searchCountText.setText("");
    }
    for (;;)
    {
      return;
      label122:
      bool = false;
      break;
      label128:
      bool = false;
      break label47;
      label134:
      f2 = 0.5F;
      break label73;
      label142:
      f2 = 0.5F;
      break label100;
      label150:
      if (paramInt3 == 0) {
        this.searchCountText.setText(LocaleController.getString("NoResult", NUM));
      } else {
        this.searchCountText.setText(LocaleController.formatString("Of", NUM, new Object[] { Integer.valueOf(paramInt2 + 1), Integer.valueOf(paramInt3) }));
      }
    }
  }
  
  private void updateSecretStatus()
  {
    if (this.bottomOverlay == null) {}
    int i;
    int j;
    for (;;)
    {
      return;
      i = 0;
      if ((ChatObject.isChannel(this.currentChat)) && (this.currentChat.banned_rights != null) && (this.currentChat.banned_rights.send_messages))
      {
        if (AndroidUtilities.isBannedForever(this.currentChat.banned_rights.until_date)) {
          this.bottomOverlayText.setText(LocaleController.getString("SendMessageRestrictedForever", NUM));
        }
        for (;;)
        {
          this.bottomOverlay.setVisibility(0);
          if (this.mentionListAnimation != null)
          {
            this.mentionListAnimation.cancel();
            this.mentionListAnimation = null;
          }
          this.mentionContainer.setVisibility(8);
          this.mentionContainer.setTag(null);
          j = 1;
          label121:
          if (j == 0) {
            break label263;
          }
          this.chatActivityEnterView.hidePopup(false);
          if (getParentActivity() == null) {
            break;
          }
          AndroidUtilities.hideKeyboard(getParentActivity().getCurrentFocus());
          break;
          this.bottomOverlayText.setText(LocaleController.formatString("SendMessageRestricted", NUM, new Object[] { LocaleController.formatDateForBan(this.currentChat.banned_rights.until_date) }));
        }
      }
      if ((this.currentEncryptedChat != null) && (this.bigEmptyView != null)) {
        break;
      }
      this.bottomOverlay.setVisibility(4);
    }
    if ((this.currentEncryptedChat instanceof TLRPC.TL_encryptedChatRequested))
    {
      this.bottomOverlayText.setText(LocaleController.getString("EncryptionProcessing", NUM));
      this.bottomOverlay.setVisibility(0);
      j = 1;
    }
    for (;;)
    {
      checkRaiseSensors();
      checkActionBarMenu();
      break label121;
      label263:
      break;
      if ((this.currentEncryptedChat instanceof TLRPC.TL_encryptedChatWaiting))
      {
        this.bottomOverlayText.setText(AndroidUtilities.replaceTags(LocaleController.formatString("AwaitingEncryption", NUM, new Object[] { "<b>" + this.currentUser.first_name + "</b>" })));
        this.bottomOverlay.setVisibility(0);
        j = 1;
      }
      else if ((this.currentEncryptedChat instanceof TLRPC.TL_encryptedChatDiscarded))
      {
        this.bottomOverlayText.setText(LocaleController.getString("EncryptionRejected", NUM));
        this.bottomOverlay.setVisibility(0);
        this.chatActivityEnterView.setFieldText("");
        DataQuery.getInstance(this.currentAccount).cleanDraft(this.dialog_id, false);
        j = 1;
      }
      else
      {
        j = i;
        if ((this.currentEncryptedChat instanceof TLRPC.TL_encryptedChat))
        {
          this.bottomOverlay.setVisibility(4);
          j = i;
        }
      }
    }
  }
  
  private void updateSpamView()
  {
    if (this.reportSpamView == null)
    {
      if (BuildVars.LOGS_ENABLED) {
        FileLog.d("no spam view found");
      }
      return;
    }
    SharedPreferences localSharedPreferences = MessagesController.getNotificationsSettings(this.currentAccount);
    int i;
    label96:
    int j;
    if (this.currentEncryptedChat != null) {
      if ((this.currentEncryptedChat.admin_id != UserConfig.getInstance(this.currentAccount).getClientUserId()) && (!ContactsController.getInstance(this.currentAccount).isLoadingContacts()) && (ContactsController.getInstance(this.currentAccount).contactsDict.get(Integer.valueOf(this.currentUser.id)) == null))
      {
        i = 1;
        j = i;
        if (i != 0)
        {
          j = i;
          if (localSharedPreferences.getInt("spam3_" + this.dialog_id, 0) == 1) {
            j = 0;
          }
        }
        if (j != 0) {
          break label329;
        }
        if (this.reportSpamView.getTag() == null)
        {
          if (BuildVars.LOGS_ENABLED) {
            FileLog.d("hide spam button");
          }
          this.reportSpamView.setTag(Integer.valueOf(1));
          if (this.reportSpamViewAnimator != null) {
            this.reportSpamViewAnimator.cancel();
          }
          this.reportSpamViewAnimator = new AnimatorSet();
          this.reportSpamViewAnimator.playTogether(new Animator[] { ObjectAnimator.ofFloat(this.reportSpamView, "translationY", new float[] { -AndroidUtilities.dp(50.0F) }) });
          this.reportSpamViewAnimator.setDuration(200L);
          this.reportSpamViewAnimator.addListener(new AnimatorListenerAdapter()
          {
            public void onAnimationCancel(Animator paramAnonymousAnimator)
            {
              if ((ChatActivity.this.reportSpamViewAnimator != null) && (ChatActivity.this.reportSpamViewAnimator.equals(paramAnonymousAnimator))) {
                ChatActivity.access$26102(ChatActivity.this, null);
              }
            }
            
            public void onAnimationEnd(Animator paramAnonymousAnimator)
            {
              if ((ChatActivity.this.reportSpamViewAnimator != null) && (ChatActivity.this.reportSpamViewAnimator.equals(paramAnonymousAnimator)))
              {
                ChatActivity.this.reportSpamView.setVisibility(8);
                ChatActivity.access$26102(ChatActivity.this, null);
              }
            }
          });
          this.reportSpamViewAnimator.start();
        }
      }
    }
    for (;;)
    {
      checkListViewPaddings();
      break;
      i = 0;
      break label96;
      if (localSharedPreferences.getInt("spam3_" + this.dialog_id, 0) == 2) {}
      for (j = 1;; j = 0) {
        break;
      }
      label329:
      if (this.reportSpamView.getTag() != null)
      {
        if (BuildVars.LOGS_ENABLED) {
          FileLog.d("show spam button");
        }
        this.reportSpamView.setTag(null);
        this.reportSpamView.setVisibility(0);
        if (this.reportSpamViewAnimator != null) {
          this.reportSpamViewAnimator.cancel();
        }
        this.reportSpamViewAnimator = new AnimatorSet();
        this.reportSpamViewAnimator.playTogether(new Animator[] { ObjectAnimator.ofFloat(this.reportSpamView, "translationY", new float[] { 0.0F }) });
        this.reportSpamViewAnimator.setDuration(200L);
        this.reportSpamViewAnimator.addListener(new AnimatorListenerAdapter()
        {
          public void onAnimationCancel(Animator paramAnonymousAnimator)
          {
            if ((ChatActivity.this.reportSpamViewAnimator != null) && (ChatActivity.this.reportSpamViewAnimator.equals(paramAnonymousAnimator))) {
              ChatActivity.access$26102(ChatActivity.this, null);
            }
          }
          
          public void onAnimationEnd(Animator paramAnonymousAnimator)
          {
            if ((ChatActivity.this.reportSpamViewAnimator != null) && (ChatActivity.this.reportSpamViewAnimator.equals(paramAnonymousAnimator))) {
              ChatActivity.access$26102(ChatActivity.this, null);
            }
          }
        });
        this.reportSpamViewAnimator.start();
      }
    }
  }
  
  private void updateTextureViewPosition()
  {
    if (this.fragmentView == null) {}
    for (;;)
    {
      return;
      int i = 0;
      int j = this.chatListView.getChildCount();
      int k;
      if (this.chatActivityEnterView.isTopViewVisible()) {
        k = AndroidUtilities.dp(48.0F);
      }
      label35:
      Object localObject1;
      for (int m = 0;; m++)
      {
        int n = i;
        if (m < j)
        {
          localObject1 = this.chatListView.getChildAt(m);
          if ((localObject1 instanceof ChatMessageCell))
          {
            localObject1 = (ChatMessageCell)localObject1;
            Object localObject2 = ((ChatMessageCell)localObject1).getMessageObject();
            if ((this.roundVideoContainer != null) && (((MessageObject)localObject2).isRoundVideo()) && (MediaController.getInstance().isPlayingMessage((MessageObject)localObject2)))
            {
              localObject2 = ((ChatMessageCell)localObject1).getPhotoImage();
              this.roundVideoContainer.setTranslationX(((ImageReceiver)localObject2).getImageX() + ((ChatMessageCell)localObject1).getTranslationX());
              this.roundVideoContainer.setTranslationY(this.fragmentView.getPaddingTop() + ((ChatMessageCell)localObject1).getTop() + ((ImageReceiver)localObject2).getImageY() - k);
              this.fragmentView.invalidate();
              this.roundVideoContainer.invalidate();
              n = 1;
            }
          }
        }
        else
        {
          if (this.roundVideoContainer == null) {
            break;
          }
          localObject1 = MediaController.getInstance().getPlayingMessageObject();
          if ((localObject1 == null) || (((MessageObject)localObject1).eventId != 0L)) {
            break;
          }
          if (n != 0) {
            break label298;
          }
          this.roundVideoContainer.setTranslationY(-AndroidUtilities.roundMessageSize - 100);
          this.fragmentView.invalidate();
          if ((localObject1 == null) || (!((MessageObject)localObject1).isRoundVideo())) {
            break;
          }
          if ((!this.checkTextureViewPosition) && (PipRoundVideoView.getInstance() == null)) {
            break label282;
          }
          MediaController.getInstance().setCurrentRoundVisible(false);
          break;
          k = 0;
          break label35;
        }
      }
      label282:
      scrollToMessageId(((MessageObject)localObject1).getId(), 0, false, 0, true);
      continue;
      label298:
      MediaController.getInstance().setCurrentRoundVisible(true);
      scrollToMessageId(((MessageObject)localObject1).getId(), 0, false, 0, true);
    }
  }
  
  private void updateTitle()
  {
    if (this.avatarContainer == null) {}
    for (;;)
    {
      return;
      if (this.currentChat != null) {
        this.avatarContainer.setTitle(this.currentChat.title);
      } else if (this.currentUser != null) {
        if (this.currentUser.self) {
          this.avatarContainer.setTitle(LocaleController.getString("SavedMessages", NUM));
        } else if ((!MessagesController.isSupportId(this.currentUser.id)) && (ContactsController.getInstance(this.currentAccount).contactsDict.get(Integer.valueOf(this.currentUser.id)) == null) && ((ContactsController.getInstance(this.currentAccount).contactsDict.size() != 0) || (!ContactsController.getInstance(this.currentAccount).isLoadingContacts())))
        {
          if (!TextUtils.isEmpty(this.currentUser.phone)) {
            this.avatarContainer.setTitle(PhoneFormat.getInstance().format("+" + this.currentUser.phone));
          } else {
            this.avatarContainer.setTitle(UserObject.getUserName(this.currentUser));
          }
        }
        else {
          this.avatarContainer.setTitle(UserObject.getUserName(this.currentUser));
        }
      }
    }
  }
  
  private void updateTitleIcons()
  {
    Drawable localDrawable1 = null;
    if (this.avatarContainer == null) {}
    for (;;)
    {
      return;
      if (MessagesController.getInstance(this.currentAccount).isDialogMuted(this.dialog_id)) {}
      for (Drawable localDrawable2 = Theme.chat_muteIconDrawable;; localDrawable2 = null)
      {
        ChatAvatarContainer localChatAvatarContainer = this.avatarContainer;
        if (this.currentEncryptedChat != null) {
          localDrawable1 = Theme.chat_lockIconDrawable;
        }
        localChatAvatarContainer.setTitleIcons(localDrawable1, localDrawable2);
        if (this.muteItem == null) {
          break;
        }
        if (localDrawable2 == null) {
          break label88;
        }
        this.muteItem.setText(LocaleController.getString("UnmuteNotifications", NUM));
        break;
      }
      label88:
      this.muteItem.setText(LocaleController.getString("MuteNotifications", NUM));
    }
  }
  
  private void updateVisibleRows()
  {
    if (this.chatListView == null) {}
    for (;;)
    {
      return;
      int i = -1;
      int j = i;
      int k;
      if (!this.wasManualScroll)
      {
        j = i;
        if (this.unreadMessageObject != null)
        {
          j = i;
          if (this.chatListView.getMeasuredHeight() != 0)
          {
            k = this.messages.indexOf(this.unreadMessageObject);
            j = i;
            if (k >= 0) {
              j = this.chatAdapter.messagesStartRow + k;
            }
          }
        }
      }
      int m = this.chatListView.getChildCount();
      MessageObject localMessageObject;
      label95:
      Object localObject1;
      ChatMessageCell localChatMessageCell;
      Object localObject2;
      int n;
      int i1;
      label166:
      label201:
      label204:
      boolean bool1;
      label237:
      boolean bool2;
      if (this.chatActivityEnterView != null)
      {
        localMessageObject = this.chatActivityEnterView.getEditingMessageObject();
        k = 0;
        if (k >= m) {
          break label485;
        }
        localObject1 = this.chatListView.getChildAt(k);
        if (!(localObject1 instanceof ChatMessageCell)) {
          break label457;
        }
        localChatMessageCell = (ChatMessageCell)localObject1;
        localObject2 = localChatMessageCell.getMessageObject();
        n = 0;
        i = 0;
        i1 = 0;
        if (!this.actionBar.isActionModeShowed()) {
          break label411;
        }
        if (((MessageObject)localObject2).getDialogId() != this.dialog_id) {
          break label394;
        }
        i = 0;
        if ((localObject2 != localMessageObject) && (this.selectedMessagesIds[i].indexOfKey(((MessageObject)localObject2).getId()) < 0)) {
          break label399;
        }
        setCellSelectionBackground((MessageObject)localObject2, localChatMessageCell, i);
        i = 1;
        i1 = 1;
        localChatMessageCell.setMessageObject(localChatMessageCell.getMessageObject(), localChatMessageCell.getCurrentMessagesGroup(), localChatMessageCell.isPinnedBottom(), localChatMessageCell.isPinnedTop());
        if (i1 != 0) {
          break label424;
        }
        bool1 = true;
        if ((i1 == 0) || (i == 0)) {
          break label430;
        }
        bool2 = true;
        label249:
        localChatMessageCell.setCheckPressed(bool1, bool2);
        if ((this.highlightMessageId == Integer.MAX_VALUE) || (localObject2 == null) || (((MessageObject)localObject2).getId() != this.highlightMessageId)) {
          break label436;
        }
        bool1 = true;
        label288:
        localChatMessageCell.setHighlighted(bool1);
        if ((this.searchContainer == null) || (this.searchContainer.getVisibility() != 0)) {
          break label448;
        }
        localObject1 = DataQuery.getInstance(this.currentAccount);
        i = ((MessageObject)localObject2).getId();
        if (((MessageObject)localObject2).getDialogId() != this.mergeDialogId) {
          break label442;
        }
        bool1 = true;
        label343:
        if ((!((DataQuery)localObject1).isMessageFound(i, bool1)) || (DataQuery.getInstance(this.currentAccount).getLastSearchQuery() == null)) {
          break label448;
        }
        localChatMessageCell.setHighlightedText(DataQuery.getInstance(this.currentAccount).getLastSearchQuery());
      }
      for (;;)
      {
        k++;
        break label95;
        localMessageObject = null;
        break;
        label394:
        i = 1;
        break label166;
        label399:
        ((View)localObject1).setBackgroundDrawable(null);
        i = i1;
        break label201;
        label411:
        ((View)localObject1).setBackgroundDrawable(null);
        i1 = n;
        break label204;
        label424:
        bool1 = false;
        break label237;
        label430:
        bool2 = false;
        break label249;
        label436:
        bool1 = false;
        break label288;
        label442:
        bool1 = false;
        break label343;
        label448:
        localChatMessageCell.setHighlightedText(null);
        continue;
        label457:
        if ((localObject1 instanceof ChatActionCell))
        {
          localObject2 = (ChatActionCell)localObject1;
          ((ChatActionCell)localObject2).setMessageObject(((ChatActionCell)localObject2).getMessageObject());
        }
      }
      label485:
      this.chatListView.invalidate();
      if (j != -1)
      {
        k = this.chatListView.getMeasuredHeight();
        i1 = this.chatListView.getPaddingBottom();
        i = this.chatListView.getPaddingTop();
        n = AndroidUtilities.dp(29.0F);
        this.chatLayoutManager.scrollToPositionWithOffset(j, k - i1 - i - n);
      }
    }
  }
  
  public boolean allowGroupPhotos()
  {
    if ((this.currentEncryptedChat == null) || (AndroidUtilities.getPeerLayerVersion(this.currentEncryptedChat.layer) >= 73)) {}
    for (boolean bool = true;; bool = false) {
      return bool;
    }
  }
  
  public boolean checkRecordLocked()
  {
    AlertDialog.Builder localBuilder;
    if ((this.chatActivityEnterView != null) && (this.chatActivityEnterView.isRecordLocked()))
    {
      localBuilder = new AlertDialog.Builder(getParentActivity());
      if (this.chatActivityEnterView.isInVideoMode())
      {
        localBuilder.setTitle(LocaleController.getString("DiscardVideoMessageTitle", NUM));
        localBuilder.setMessage(LocaleController.getString("DiscardVideoMessageDescription", NUM));
        localBuilder.setPositiveButton(LocaleController.getString("DiscardVoiceMessageAction", NUM), new DialogInterface.OnClickListener()
        {
          public void onClick(DialogInterface paramAnonymousDialogInterface, int paramAnonymousInt)
          {
            if (ChatActivity.this.chatActivityEnterView != null) {
              ChatActivity.this.chatActivityEnterView.cancelRecordingAudioVideo();
            }
          }
        });
        localBuilder.setNegativeButton(LocaleController.getString("Cancel", NUM), null);
        showDialog(localBuilder.create());
      }
    }
    for (boolean bool = true;; bool = false)
    {
      return bool;
      localBuilder.setTitle(LocaleController.getString("DiscardVoiceMessageTitle", NUM));
      localBuilder.setMessage(LocaleController.getString("DiscardVoiceMessageDescription", NUM));
      break;
    }
  }
  
  public View createView(Context paramContext)
  {
    if (this.chatMessageCellsCache.isEmpty()) {
      for (i = 0; i < 8; i++) {
        this.chatMessageCellsCache.add(new ChatMessageCell(paramContext));
      }
    }
    for (int i = 1; i >= 0; i--)
    {
      this.selectedMessagesIds[i].clear();
      this.selectedMessagesCanCopyIds[i].clear();
      this.selectedMessagesCanStarIds[i].clear();
    }
    this.cantDeleteMessagesCount = 0;
    this.canEditMessagesCount = 0;
    this.roundVideoContainer = null;
    this.hasOwnBackground = true;
    if (this.chatAttachAlert != null) {}
    try
    {
      if (this.chatAttachAlert.isShowing()) {
        this.chatAttachAlert.dismiss();
      }
      this.chatAttachAlert.onDestroy();
      this.chatAttachAlert = null;
      Theme.createChatResources(paramContext, false);
      this.actionBar.setAddToContainer(false);
      this.actionBar.setBackButtonDrawable(new BackDrawable(false));
      this.actionBar.setActionBarMenuOnItemClick(new ActionBar.ActionBarMenuOnItemClick()
      {
        public void onItemClick(final int paramAnonymousInt)
        {
          if (paramAnonymousInt == -1) {
            if (ChatActivity.this.actionBar.isActionModeShowed())
            {
              for (paramAnonymousInt = 1; paramAnonymousInt >= 0; paramAnonymousInt--)
              {
                ChatActivity.this.selectedMessagesIds[paramAnonymousInt].clear();
                ChatActivity.this.selectedMessagesCanCopyIds[paramAnonymousInt].clear();
                ChatActivity.this.selectedMessagesCanStarIds[paramAnonymousInt].clear();
              }
              ChatActivity.access$1502(ChatActivity.this, 0);
              ChatActivity.access$1602(ChatActivity.this, 0);
              if (ChatActivity.this.chatActivityEnterView.isEditingMessage())
              {
                ChatActivity.this.chatActivityEnterView.setEditingMessageObject(null, false);
                ChatActivity.this.updateVisibleRows();
              }
            }
          }
          for (;;)
          {
            return;
            ChatActivity.this.actionBar.hideActionMode();
            ChatActivity.this.updatePinnedMessageView(true);
            break;
            ChatActivity.this.finishFragment();
            continue;
            Object localObject1;
            int i;
            int j;
            Object localObject3;
            if (paramAnonymousInt == 10)
            {
              localObject1 = "";
              i = 0;
              for (paramAnonymousInt = 1; paramAnonymousInt >= 0; paramAnonymousInt--)
              {
                ArrayList localArrayList = new ArrayList();
                for (j = 0; j < ChatActivity.this.selectedMessagesCanCopyIds[paramAnonymousInt].size(); j++) {
                  localArrayList.add(Integer.valueOf(ChatActivity.this.selectedMessagesCanCopyIds[paramAnonymousInt].keyAt(j)));
                }
                if (ChatActivity.this.currentEncryptedChat == null) {
                  Collections.sort(localArrayList);
                }
                for (;;)
                {
                  for (j = 0; j < localArrayList.size(); j++)
                  {
                    localObject3 = (Integer)localArrayList.get(j);
                    MessageObject localMessageObject = (MessageObject)ChatActivity.this.selectedMessagesCanCopyIds[paramAnonymousInt].get(((Integer)localObject3).intValue());
                    localObject3 = localObject1;
                    if (((String)localObject1).length() != 0) {
                      localObject3 = (String)localObject1 + "\n\n";
                    }
                    localObject1 = (String)localObject3 + ChatActivity.this.getMessageContent(localMessageObject, i, true);
                    i = localMessageObject.messageOwner.from_id;
                  }
                  Collections.sort(localArrayList, Collections.reverseOrder());
                }
              }
              if (((String)localObject1).length() != 0) {
                AndroidUtilities.addToClipboard((CharSequence)localObject1);
              }
              for (paramAnonymousInt = 1; paramAnonymousInt >= 0; paramAnonymousInt--)
              {
                ChatActivity.this.selectedMessagesIds[paramAnonymousInt].clear();
                ChatActivity.this.selectedMessagesCanCopyIds[paramAnonymousInt].clear();
                ChatActivity.this.selectedMessagesCanStarIds[paramAnonymousInt].clear();
              }
              ChatActivity.access$1502(ChatActivity.this, 0);
              ChatActivity.access$1602(ChatActivity.this, 0);
              ChatActivity.this.actionBar.hideActionMode();
              ChatActivity.this.updatePinnedMessageView(true);
              ChatActivity.this.updateVisibleRows();
            }
            else if (paramAnonymousInt == 12)
            {
              if (ChatActivity.this.getParentActivity() != null) {
                ChatActivity.this.createDeleteMessagesAlert(null, null);
              }
            }
            else if (paramAnonymousInt == 11)
            {
              localObject1 = new Bundle();
              ((Bundle)localObject1).putBoolean("onlySelect", true);
              ((Bundle)localObject1).putInt("dialogsType", 3);
              localObject1 = new DialogsActivity((Bundle)localObject1);
              ((DialogsActivity)localObject1).setDelegate(ChatActivity.this);
              ChatActivity.this.presentFragment((BaseFragment)localObject1);
            }
            else if (paramAnonymousInt == 13)
            {
              if (ChatActivity.this.getParentActivity() != null) {
                ChatActivity.this.showDialog(AlertsCreator.createTTLAlert(ChatActivity.this.getParentActivity(), ChatActivity.this.currentEncryptedChat).create());
              }
            }
            else
            {
              final boolean bool;
              if ((paramAnonymousInt == 15) || (paramAnonymousInt == 16))
              {
                if (ChatActivity.this.getParentActivity() != null)
                {
                  if (((int)ChatActivity.this.dialog_id < 0) && ((int)(ChatActivity.this.dialog_id >> 32) != 1))
                  {
                    bool = true;
                    label666:
                    localObject1 = new AlertDialog.Builder(ChatActivity.this.getParentActivity());
                    ((AlertDialog.Builder)localObject1).setTitle(LocaleController.getString("AppName", NUM));
                    if (paramAnonymousInt != 15) {
                      break label772;
                    }
                    ((AlertDialog.Builder)localObject1).setMessage(LocaleController.getString("AreYouSureClearHistory", NUM));
                  }
                  for (;;)
                  {
                    ((AlertDialog.Builder)localObject1).setPositiveButton(LocaleController.getString("OK", NUM), new DialogInterface.OnClickListener()
                    {
                      public void onClick(DialogInterface paramAnonymous2DialogInterface, int paramAnonymous2Int)
                      {
                        if (paramAnonymousInt != 15) {
                          if (bool) {
                            if (ChatObject.isNotInChat(ChatActivity.this.currentChat))
                            {
                              MessagesController.getInstance(ChatActivity.this.currentAccount).deleteDialog(ChatActivity.this.dialog_id, 0);
                              ChatActivity.this.finishFragment();
                            }
                          }
                        }
                        for (;;)
                        {
                          return;
                          MessagesController.getInstance(ChatActivity.this.currentAccount).deleteUserFromChat((int)-ChatActivity.this.dialog_id, MessagesController.getInstance(ChatActivity.this.currentAccount).getUser(Integer.valueOf(UserConfig.getInstance(ChatActivity.this.currentAccount).getClientUserId())), null);
                          break;
                          MessagesController.getInstance(ChatActivity.this.currentAccount).deleteDialog(ChatActivity.this.dialog_id, 0);
                          break;
                          if ((ChatObject.isChannel(ChatActivity.this.currentChat)) && (ChatActivity.this.info != null) && (ChatActivity.this.info.pinned_msg_id != 0))
                          {
                            MessagesController.getNotificationsSettings(ChatActivity.this.currentAccount).edit().putInt("pin_" + ChatActivity.this.dialog_id, ChatActivity.this.info.pinned_msg_id).commit();
                            ChatActivity.this.updatePinnedMessageView(true);
                          }
                          MessagesController.getInstance(ChatActivity.this.currentAccount).deleteDialog(ChatActivity.this.dialog_id, 1);
                        }
                      }
                    });
                    ((AlertDialog.Builder)localObject1).setNegativeButton(LocaleController.getString("Cancel", NUM), null);
                    ChatActivity.this.showDialog(((AlertDialog.Builder)localObject1).create());
                    break;
                    bool = false;
                    break label666;
                    label772:
                    if (bool) {
                      ((AlertDialog.Builder)localObject1).setMessage(LocaleController.getString("AreYouSureDeleteAndExit", NUM));
                    } else {
                      ((AlertDialog.Builder)localObject1).setMessage(LocaleController.getString("AreYouSureDeleteThisChat", NUM));
                    }
                  }
                }
              }
              else if (paramAnonymousInt == 17)
              {
                if ((ChatActivity.this.currentUser != null) && (ChatActivity.this.getParentActivity() != null)) {
                  if ((ChatActivity.this.currentUser.phone != null) && (ChatActivity.this.currentUser.phone.length() != 0))
                  {
                    localObject1 = new Bundle();
                    ((Bundle)localObject1).putInt("user_id", ChatActivity.this.currentUser.id);
                    ((Bundle)localObject1).putBoolean("addContact", true);
                    ChatActivity.this.presentFragment(new ContactAddActivity((Bundle)localObject1));
                  }
                  else
                  {
                    ChatActivity.this.shareMyContact(ChatActivity.this.replyingMessageObject);
                  }
                }
              }
              else if (paramAnonymousInt == 18)
              {
                ChatActivity.this.toggleMute(false);
              }
              else if (paramAnonymousInt == 24)
              {
                try
                {
                  DataQuery.getInstance(ChatActivity.this.currentAccount).installShortcut(ChatActivity.this.currentUser.id);
                }
                catch (Exception localException)
                {
                  FileLog.e(localException);
                }
              }
              else if (paramAnonymousInt == 21)
              {
                ChatActivity.this.showDialog(AlertsCreator.createReportAlert(ChatActivity.this.getParentActivity(), ChatActivity.this.dialog_id, 0, ChatActivity.this));
              }
              else
              {
                Object localObject2;
                if (paramAnonymousInt == 19)
                {
                  localObject2 = null;
                  paramAnonymousInt = 1;
                  while (paramAnonymousInt >= 0)
                  {
                    localObject3 = localObject2;
                    if (localObject2 == null)
                    {
                      localObject3 = localObject2;
                      if (ChatActivity.this.selectedMessagesIds[paramAnonymousInt].size() == 1)
                      {
                        localObject2 = new ArrayList();
                        for (i = 0; i < ChatActivity.this.selectedMessagesIds[paramAnonymousInt].size(); i++) {
                          ((ArrayList)localObject2).add(Integer.valueOf(ChatActivity.this.selectedMessagesIds[paramAnonymousInt].keyAt(i)));
                        }
                        localObject3 = (MessageObject)ChatActivity.this.messagesDict[paramAnonymousInt].get(((Integer)((ArrayList)localObject2).get(0)).intValue());
                      }
                    }
                    ChatActivity.this.selectedMessagesIds[paramAnonymousInt].clear();
                    ChatActivity.this.selectedMessagesCanCopyIds[paramAnonymousInt].clear();
                    ChatActivity.this.selectedMessagesCanStarIds[paramAnonymousInt].clear();
                    paramAnonymousInt--;
                    localObject2 = localObject3;
                  }
                  if ((localObject2 != null) && ((((MessageObject)localObject2).messageOwner.id > 0) || ((((MessageObject)localObject2).messageOwner.id < 0) && (ChatActivity.this.currentEncryptedChat != null)))) {
                    ChatActivity.this.showReplyPanel(true, (MessageObject)localObject2, null, null, false);
                  }
                  ChatActivity.access$1502(ChatActivity.this, 0);
                  ChatActivity.access$1602(ChatActivity.this, 0);
                  ChatActivity.this.actionBar.hideActionMode();
                  ChatActivity.this.updatePinnedMessageView(true);
                  ChatActivity.this.updateVisibleRows();
                }
                else if (paramAnonymousInt == 22)
                {
                  for (paramAnonymousInt = 0; paramAnonymousInt < 2; paramAnonymousInt++)
                  {
                    i = 0;
                    if (i < ChatActivity.this.selectedMessagesCanStarIds[paramAnonymousInt].size())
                    {
                      localObject3 = (MessageObject)ChatActivity.this.selectedMessagesCanStarIds[paramAnonymousInt].valueAt(i);
                      localObject2 = DataQuery.getInstance(ChatActivity.this.currentAccount);
                      localObject3 = ((MessageObject)localObject3).getDocument();
                      j = (int)(System.currentTimeMillis() / 1000L);
                      if (!ChatActivity.this.hasUnfavedSelected) {}
                      for (bool = true;; bool = false)
                      {
                        ((DataQuery)localObject2).addRecentSticker(2, (TLRPC.Document)localObject3, j, bool);
                        i++;
                        break;
                      }
                    }
                  }
                  for (paramAnonymousInt = 1; paramAnonymousInt >= 0; paramAnonymousInt--)
                  {
                    ChatActivity.this.selectedMessagesIds[paramAnonymousInt].clear();
                    ChatActivity.this.selectedMessagesCanCopyIds[paramAnonymousInt].clear();
                    ChatActivity.this.selectedMessagesCanStarIds[paramAnonymousInt].clear();
                  }
                  ChatActivity.access$1502(ChatActivity.this, 0);
                  ChatActivity.access$1602(ChatActivity.this, 0);
                  ChatActivity.this.actionBar.hideActionMode();
                  ChatActivity.this.updatePinnedMessageView(true);
                  ChatActivity.this.updateVisibleRows();
                }
                else if (paramAnonymousInt == 23)
                {
                  localObject3 = null;
                  paramAnonymousInt = 1;
                  while (paramAnonymousInt >= 0)
                  {
                    localObject2 = localObject3;
                    if (localObject3 == null)
                    {
                      localObject2 = localObject3;
                      if (ChatActivity.this.selectedMessagesIds[paramAnonymousInt].size() == 1)
                      {
                        localObject2 = new ArrayList();
                        for (i = 0; i < ChatActivity.this.selectedMessagesIds[paramAnonymousInt].size(); i++) {
                          ((ArrayList)localObject2).add(Integer.valueOf(ChatActivity.this.selectedMessagesIds[paramAnonymousInt].keyAt(i)));
                        }
                        localObject2 = (MessageObject)ChatActivity.this.messagesDict[paramAnonymousInt].get(((Integer)((ArrayList)localObject2).get(0)).intValue());
                      }
                    }
                    ChatActivity.this.selectedMessagesIds[paramAnonymousInt].clear();
                    ChatActivity.this.selectedMessagesCanCopyIds[paramAnonymousInt].clear();
                    ChatActivity.this.selectedMessagesCanStarIds[paramAnonymousInt].clear();
                    paramAnonymousInt--;
                    localObject3 = localObject2;
                  }
                  ChatActivity.access$3902(ChatActivity.this, false);
                  ChatActivity.this.startEditingMessageObject((MessageObject)localObject3);
                  ChatActivity.access$1502(ChatActivity.this, 0);
                  ChatActivity.access$1602(ChatActivity.this, 0);
                  ChatActivity.this.updatePinnedMessageView(true);
                  ChatActivity.this.updateVisibleRows();
                }
                else if (paramAnonymousInt == 14)
                {
                  ChatActivity.this.openAttachMenu();
                }
                else if (paramAnonymousInt == 30)
                {
                  SendMessagesHelper.getInstance(ChatActivity.this.currentAccount).sendMessage("/help", ChatActivity.this.dialog_id, null, null, false, null, null, null);
                }
                else if (paramAnonymousInt == 31)
                {
                  SendMessagesHelper.getInstance(ChatActivity.this.currentAccount).sendMessage("/settings", ChatActivity.this.dialog_id, null, null, false, null, null, null);
                }
                else if (paramAnonymousInt == 40)
                {
                  ChatActivity.this.openSearchWithText(null);
                }
                else if ((paramAnonymousInt == 32) && (ChatActivity.this.currentUser != null) && (ChatActivity.this.getParentActivity() != null))
                {
                  VoIPHelper.startCall(ChatActivity.this.currentUser, ChatActivity.this.getParentActivity(), MessagesController.getInstance(ChatActivity.this.currentAccount).getUserFull(ChatActivity.this.currentUser.id));
                }
              }
            }
          }
        }
      });
      boolean bool1;
      Object localObject1;
      label498:
      label750:
      label781:
      label1349:
      label1391:
      label1430:
      label1469:
      label1493:
      label1685:
      label2984:
      label3917:
      label3953:
      label3977:
      label5011:
      boolean bool2;
      if (this.currentEncryptedChat != null)
      {
        bool1 = true;
        this.avatarContainer = new ChatAvatarContainer(paramContext, this, bool1);
        this.actionBar.addView(this.avatarContainer, 0, LayoutHelper.createFrame(-2, -1.0F, 51, 56.0F, 0.0F, 40.0F, 0.0F));
        if ((this.currentChat != null) && (!ChatObject.isChannel(this.currentChat)))
        {
          i = this.currentChat.participants_count;
          if (this.info != null) {
            i = this.info.participants.participants.size();
          }
          if ((i == 0) || (this.currentChat.deactivated) || (this.currentChat.left) || ((this.currentChat instanceof TLRPC.TL_chatForbidden)) || ((this.info != null) && ((this.info.participants instanceof TLRPC.TL_chatParticipantsForbidden)))) {
            this.avatarContainer.setEnabled(false);
          }
        }
        localObject1 = this.actionBar.createMenu();
        if ((this.currentEncryptedChat == null) && (!this.isBroadcast))
        {
          this.searchItem = ((ActionBarMenu)localObject1).addItem(0, NUM).setIsSearchField(true).setActionBarMenuItemSearchListener(new ActionBarMenuItem.ActionBarMenuItemSearchListener()
          {
            boolean searchWas;
            
            public void onCaptionCleared()
            {
              if (ChatActivity.this.searchingUserMessages != null) {
                ChatActivity.this.searchUserButton.callOnClick();
              }
              for (;;)
              {
                return;
                if (ChatActivity.this.searchingForUser)
                {
                  ChatActivity.this.mentionsAdapter.searchUsernameOrHashtag(null, 0, null, false);
                  ChatActivity.access$4802(ChatActivity.this, false);
                }
                ChatActivity.this.searchItem.getSearchField().setHint(LocaleController.getString("Search", NUM));
                ChatActivity.this.searchCalendarButton.setVisibility(0);
                ChatActivity.this.searchUserButton.setVisibility(0);
                ChatActivity.access$5102(ChatActivity.this, null);
              }
            }
            
            public void onSearchCollapse()
            {
              ChatActivity.this.searchCalendarButton.setVisibility(0);
              if (ChatActivity.this.searchUserButton != null) {
                ChatActivity.this.searchUserButton.setVisibility(0);
              }
              if (ChatActivity.this.searchingForUser)
              {
                ChatActivity.this.mentionsAdapter.searchUsernameOrHashtag(null, 0, null, false);
                ChatActivity.access$4802(ChatActivity.this, false);
              }
              ChatActivity.this.mentionLayoutManager.setReverseLayout(false);
              ChatActivity.this.mentionsAdapter.setSearchingMentions(false);
              ChatActivity.access$5102(ChatActivity.this, null);
              ChatActivity.this.searchItem.getSearchField().setHint(LocaleController.getString("Search", NUM));
              ChatActivity.this.searchItem.setSearchFieldCaption(null);
              ChatActivity.this.avatarContainer.setVisibility(0);
              if (ChatActivity.this.chatActivityEnterView.hasText())
              {
                if (ChatActivity.this.headerItem != null) {
                  ChatActivity.this.headerItem.setVisibility(8);
                }
                if (ChatActivity.this.attachItem != null) {
                  ChatActivity.this.attachItem.setVisibility(0);
                }
              }
              for (;;)
              {
                ChatActivity.this.searchItem.setVisibility(8);
                ChatActivity.access$5602(ChatActivity.this, Integer.MAX_VALUE);
                ChatActivity.this.updateVisibleRows();
                if (this.searchWas) {
                  ChatActivity.this.scrollToLastMessage(false);
                }
                ChatActivity.this.updateBottomOverlay();
                ChatActivity.this.updatePinnedMessageView(true);
                return;
                if (ChatActivity.this.headerItem != null) {
                  ChatActivity.this.headerItem.setVisibility(0);
                }
                if (ChatActivity.this.attachItem != null) {
                  ChatActivity.this.attachItem.setVisibility(8);
                }
              }
            }
            
            public void onSearchExpand()
            {
              if (!ChatActivity.this.openSearchKeyboard) {}
              for (;;)
              {
                return;
                AndroidUtilities.runOnUIThread(new Runnable()
                {
                  public void run()
                  {
                    ChatActivity.10.this.searchWas = false;
                    ChatActivity.this.searchItem.getSearchField().requestFocus();
                    AndroidUtilities.showKeyboard(ChatActivity.this.searchItem.getSearchField());
                  }
                }, 300L);
              }
            }
            
            public void onSearchPressed(EditText paramAnonymousEditText)
            {
              this.searchWas = true;
              ChatActivity.this.updateSearchButtons(0, 0, -1);
              DataQuery.getInstance(ChatActivity.this.currentAccount).searchMessagesInChat(paramAnonymousEditText.getText().toString(), ChatActivity.this.dialog_id, ChatActivity.this.mergeDialogId, ChatActivity.this.classGuid, 0, ChatActivity.this.searchingUserMessages);
            }
            
            public void onTextChanged(EditText paramAnonymousEditText)
            {
              if (ChatActivity.this.searchingForUser) {
                ChatActivity.this.mentionsAdapter.searchUsernameOrHashtag("@" + paramAnonymousEditText.getText().toString(), 0, ChatActivity.this.messages, true);
              }
              for (;;)
              {
                return;
                if ((!ChatActivity.this.searchingForUser) && (ChatActivity.this.searchingUserMessages == null) && (ChatActivity.this.searchUserButton != null) && (TextUtils.equals(paramAnonymousEditText.getText(), LocaleController.getString("SearchFrom", NUM)))) {
                  ChatActivity.this.searchUserButton.callOnClick();
                }
              }
            }
          });
          this.searchItem.getSearchField().setHint(LocaleController.getString("Search", NUM));
          this.searchItem.setVisibility(8);
        }
        this.headerItem = ((ActionBarMenu)localObject1).addItem(0, NUM);
        if (this.currentUser != null)
        {
          this.headerItem.addSubItem(32, LocaleController.getString("Call", NUM));
          localObject2 = MessagesController.getInstance(this.currentAccount).getUserFull(this.currentUser.id);
          if ((localObject2 == null) || (!((TLRPC.TL_userFull)localObject2).phone_calls_available)) {
            break label6818;
          }
          this.headerItem.showSubItem(32);
        }
        if (this.searchItem != null) {
          this.headerItem.addSubItem(40, LocaleController.getString("Search", NUM));
        }
        if ((ChatObject.isChannel(this.currentChat)) && (!this.currentChat.creator) && ((!this.currentChat.megagroup) || ((this.currentChat.username != null) && (this.currentChat.username.length() > 0)))) {
          this.headerItem.addSubItem(21, LocaleController.getString("ReportChat", NUM));
        }
        if (this.currentUser != null) {
          this.addContactItem = this.headerItem.addSubItem(17, "");
        }
        if (this.currentEncryptedChat != null) {
          this.timeItem2 = this.headerItem.addSubItem(13, LocaleController.getString("SetTimer", NUM));
        }
        if ((!ChatObject.isChannel(this.currentChat)) || ((this.currentChat != null) && (this.currentChat.megagroup) && (TextUtils.isEmpty(this.currentChat.username)))) {
          this.headerItem.addSubItem(15, LocaleController.getString("ClearHistory", NUM));
        }
        if (!ChatObject.isChannel(this.currentChat))
        {
          if ((this.currentChat == null) || (this.isBroadcast)) {
            break label6830;
          }
          this.headerItem.addSubItem(16, LocaleController.getString("DeleteAndExit", NUM));
        }
        if ((this.currentUser != null) && (this.currentUser.self)) {
          break label6852;
        }
        this.muteItem = this.headerItem.addSubItem(18, null);
        if ((this.currentUser != null) && (this.currentEncryptedChat == null) && (this.currentUser.bot))
        {
          this.headerItem.addSubItem(31, LocaleController.getString("BotSettings", NUM));
          this.headerItem.addSubItem(30, LocaleController.getString("BotHelp", NUM));
          updateBotButtons();
        }
        updateTitle();
        this.avatarContainer.updateOnlineCount();
        this.avatarContainer.updateSubtitle();
        updateTitleIcons();
        this.attachItem = ((ActionBarMenu)localObject1).addItem(14, NUM).setOverrideMenuClick(true).setAllowCloseAnimation(false);
        this.attachItem.setVisibility(8);
        this.actionModeViews.clear();
        localObject1 = this.actionBar.createActionMode();
        this.selectedMessagesCountTextView = new NumberTextView(((ActionBarMenu)localObject1).getContext());
        this.selectedMessagesCountTextView.setTextSize(18);
        this.selectedMessagesCountTextView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
        this.selectedMessagesCountTextView.setTextColor(Theme.getColor("actionBarActionModeDefaultIcon"));
        ((ActionBarMenu)localObject1).addView(this.selectedMessagesCountTextView, LayoutHelper.createLinear(0, -1, 1.0F, 65, 0, 0, 0));
        this.selectedMessagesCountTextView.setOnTouchListener(new View.OnTouchListener()
        {
          public boolean onTouch(View paramAnonymousView, MotionEvent paramAnonymousMotionEvent)
          {
            return true;
          }
        });
        this.actionModeTitleContainer = new FrameLayout(paramContext)
        {
          protected void onLayout(boolean paramAnonymousBoolean, int paramAnonymousInt1, int paramAnonymousInt2, int paramAnonymousInt3, int paramAnonymousInt4)
          {
            paramAnonymousInt2 = paramAnonymousInt4 - paramAnonymousInt2;
            float f;
            if (ChatActivity.this.actionModeSubTextView.getVisibility() != 8)
            {
              paramAnonymousInt1 = (paramAnonymousInt2 / 2 - ChatActivity.this.actionModeTextView.getTextHeight()) / 2;
              if ((!AndroidUtilities.isTablet()) && (getResources().getConfiguration().orientation == 2))
              {
                f = 2.0F;
                paramAnonymousInt1 += AndroidUtilities.dp(f);
              }
            }
            for (;;)
            {
              ChatActivity.this.actionModeTextView.layout(0, paramAnonymousInt1, ChatActivity.this.actionModeTextView.getMeasuredWidth(), ChatActivity.this.actionModeTextView.getTextHeight() + paramAnonymousInt1);
              if (ChatActivity.this.actionModeSubTextView.getVisibility() != 8)
              {
                paramAnonymousInt1 = paramAnonymousInt2 / 2;
                paramAnonymousInt2 = (paramAnonymousInt2 / 2 - ChatActivity.this.actionModeSubTextView.getTextHeight()) / 2;
                if ((!AndroidUtilities.isTablet()) && (getResources().getConfiguration().orientation == 2)) {}
                paramAnonymousInt1 = paramAnonymousInt1 + paramAnonymousInt2 - AndroidUtilities.dp(1.0F);
                ChatActivity.this.actionModeSubTextView.layout(0, paramAnonymousInt1, ChatActivity.this.actionModeSubTextView.getMeasuredWidth(), ChatActivity.this.actionModeSubTextView.getTextHeight() + paramAnonymousInt1);
              }
              return;
              f = 3.0F;
              break;
              paramAnonymousInt1 = (paramAnonymousInt2 - ChatActivity.this.actionModeTextView.getTextHeight()) / 2;
            }
          }
          
          protected void onMeasure(int paramAnonymousInt1, int paramAnonymousInt2)
          {
            int i = View.MeasureSpec.getSize(paramAnonymousInt1);
            setMeasuredDimension(i, View.MeasureSpec.getSize(paramAnonymousInt2));
            SimpleTextView localSimpleTextView = ChatActivity.this.actionModeTextView;
            if ((!AndroidUtilities.isTablet()) && (getResources().getConfiguration().orientation == 2))
            {
              paramAnonymousInt1 = 18;
              localSimpleTextView.setTextSize(paramAnonymousInt1);
              ChatActivity.this.actionModeTextView.measure(View.MeasureSpec.makeMeasureSpec(i, Integer.MIN_VALUE), View.MeasureSpec.makeMeasureSpec(AndroidUtilities.dp(24.0F), Integer.MIN_VALUE));
              if (ChatActivity.this.actionModeSubTextView.getVisibility() != 8)
              {
                localSimpleTextView = ChatActivity.this.actionModeSubTextView;
                if ((AndroidUtilities.isTablet()) || (getResources().getConfiguration().orientation != 2)) {
                  break label164;
                }
              }
            }
            label164:
            for (paramAnonymousInt1 = 14;; paramAnonymousInt1 = 16)
            {
              localSimpleTextView.setTextSize(paramAnonymousInt1);
              ChatActivity.this.actionModeSubTextView.measure(View.MeasureSpec.makeMeasureSpec(i, Integer.MIN_VALUE), View.MeasureSpec.makeMeasureSpec(AndroidUtilities.dp(20.0F), Integer.MIN_VALUE));
              return;
              paramAnonymousInt1 = 20;
              break;
            }
          }
        };
        ((ActionBarMenu)localObject1).addView(this.actionModeTitleContainer, LayoutHelper.createLinear(0, -1, 1.0F, 65, 0, 0, 0));
        this.actionModeTitleContainer.setOnTouchListener(new View.OnTouchListener()
        {
          public boolean onTouch(View paramAnonymousView, MotionEvent paramAnonymousMotionEvent)
          {
            return true;
          }
        });
        this.actionModeTitleContainer.setVisibility(8);
        this.actionModeTextView = new SimpleTextView(paramContext);
        this.actionModeTextView.setTextSize(18);
        this.actionModeTextView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
        this.actionModeTextView.setTextColor(Theme.getColor("actionBarActionModeDefaultIcon"));
        this.actionModeTextView.setText(LocaleController.getString("Edit", NUM));
        this.actionModeTitleContainer.addView(this.actionModeTextView, LayoutHelper.createFrame(-1, -1.0F));
        this.actionModeSubTextView = new SimpleTextView(paramContext);
        this.actionModeSubTextView.setGravity(3);
        this.actionModeSubTextView.setTextColor(Theme.getColor("actionBarActionModeDefaultIcon"));
        this.actionModeTitleContainer.addView(this.actionModeSubTextView, LayoutHelper.createFrame(-1, -1.0F));
        if (this.currentEncryptedChat != null) {
          break label6884;
        }
        this.actionModeViews.add(((ActionBarMenu)localObject1).addItemWithWidth(23, NUM, AndroidUtilities.dp(54.0F)));
        if (!this.isBroadcast) {
          this.actionModeViews.add(((ActionBarMenu)localObject1).addItemWithWidth(19, NUM, AndroidUtilities.dp(54.0F)));
        }
        this.actionModeViews.add(((ActionBarMenu)localObject1).addItemWithWidth(22, NUM, AndroidUtilities.dp(54.0F)));
        this.actionModeViews.add(((ActionBarMenu)localObject1).addItemWithWidth(10, NUM, AndroidUtilities.dp(54.0F)));
        this.actionModeViews.add(((ActionBarMenu)localObject1).addItemWithWidth(11, NUM, AndroidUtilities.dp(54.0F)));
        this.actionModeViews.add(((ActionBarMenu)localObject1).addItemWithWidth(12, NUM, AndroidUtilities.dp(54.0F)));
        final Object localObject2 = ((ActionBarMenu)localObject1).getItem(23);
        if ((this.canEditMessagesCount != 1) || (this.selectedMessagesIds[0].size() + this.selectedMessagesIds[1].size() != 1)) {
          break label7007;
        }
        i = 0;
        ((ActionBarMenuItem)localObject2).setVisibility(i);
        localObject2 = ((ActionBarMenu)localObject1).getItem(10);
        if (this.selectedMessagesCanCopyIds[0].size() + this.selectedMessagesCanCopyIds[1].size() == 0) {
          break label7013;
        }
        i = 0;
        ((ActionBarMenuItem)localObject2).setVisibility(i);
        localObject2 = ((ActionBarMenu)localObject1).getItem(22);
        if (this.selectedMessagesCanStarIds[0].size() + this.selectedMessagesCanStarIds[1].size() == 0) {
          break label7019;
        }
        i = 0;
        ((ActionBarMenuItem)localObject2).setVisibility(i);
        localObject1 = ((ActionBarMenu)localObject1).getItem(12);
        if (this.cantDeleteMessagesCount != 0) {
          break label7025;
        }
        i = 0;
        ((ActionBarMenuItem)localObject1).setVisibility(i);
        checkActionBarMenu();
        this.fragmentView = new SizeNotifierFrameLayout(paramContext)
        {
          int inputFieldHeight = 0;
          
          protected boolean drawChild(Canvas paramAnonymousCanvas, View paramAnonymousView, long paramAnonymousLong)
          {
            MessageObject localMessageObject = MediaController.getInstance().getPlayingMessageObject();
            boolean bool1;
            if ((localMessageObject != null) && (localMessageObject.eventId == 0L) && (localMessageObject.isRoundVideo()))
            {
              i = 1;
              if ((i == 0) || (paramAnonymousView != ChatActivity.this.roundVideoContainer)) {
                break label238;
              }
              if (localMessageObject.type != 5) {
                break label232;
              }
              if ((Theme.chat_roundVideoShadow != null) && (ChatActivity.this.aspectRatioFrameLayout.isDrawingReady()))
              {
                int j = (int)paramAnonymousView.getX() - AndroidUtilities.dp(3.0F);
                i = (int)paramAnonymousView.getY() - AndroidUtilities.dp(2.0F);
                Theme.chat_roundVideoShadow.setAlpha(255);
                Theme.chat_roundVideoShadow.setBounds(j, i, AndroidUtilities.roundMessageSize + j + AndroidUtilities.dp(6.0F), AndroidUtilities.roundMessageSize + i + AndroidUtilities.dp(6.0F));
                Theme.chat_roundVideoShadow.draw(paramAnonymousCanvas);
              }
              bool1 = super.drawChild(paramAnonymousCanvas, paramAnonymousView, paramAnonymousLong);
              label162:
              if ((paramAnonymousView == ChatActivity.this.actionBar) && (ChatActivity.this.parentLayout != null))
              {
                paramAnonymousView = ChatActivity.this.parentLayout;
                if (ChatActivity.this.actionBar.getVisibility() != 0) {
                  break label389;
                }
              }
            }
            label232:
            label238:
            label389:
            for (int i = ChatActivity.this.actionBar.getMeasuredHeight();; i = 0)
            {
              paramAnonymousView.drawHeaderShadow(paramAnonymousCanvas, i);
              return bool1;
              i = 0;
              break;
              bool1 = false;
              break label162;
              boolean bool2 = super.drawChild(paramAnonymousCanvas, paramAnonymousView, paramAnonymousLong);
              bool1 = bool2;
              if (i == 0) {
                break label162;
              }
              bool1 = bool2;
              if (paramAnonymousView != ChatActivity.this.chatListView) {
                break label162;
              }
              bool1 = bool2;
              if (localMessageObject.type == 5) {
                break label162;
              }
              bool1 = bool2;
              if (ChatActivity.this.roundVideoContainer == null) {
                break label162;
              }
              super.drawChild(paramAnonymousCanvas, ChatActivity.this.roundVideoContainer, paramAnonymousLong);
              bool1 = bool2;
              if (ChatActivity.this.drawLaterRoundProgressCell == null) {
                break label162;
              }
              paramAnonymousCanvas.save();
              paramAnonymousCanvas.translate(ChatActivity.this.drawLaterRoundProgressCell.getX(), ChatActivity.this.drawLaterRoundProgressCell.getTop() + ChatActivity.this.chatListView.getTop());
              ChatActivity.this.drawLaterRoundProgressCell.drawRoundProgress(paramAnonymousCanvas);
              paramAnonymousCanvas.restore();
              bool1 = bool2;
              break label162;
            }
          }
          
          protected boolean isActionBarVisible()
          {
            if (ChatActivity.this.actionBar.getVisibility() == 0) {}
            for (boolean bool = true;; bool = false) {
              return bool;
            }
          }
          
          protected void onAttachedToWindow()
          {
            super.onAttachedToWindow();
            MessageObject localMessageObject = MediaController.getInstance().getPlayingMessageObject();
            if ((localMessageObject != null) && (localMessageObject.isRoundVideo()) && (localMessageObject.eventId == 0L) && (localMessageObject.getDialogId() == ChatActivity.this.dialog_id)) {
              MediaController.getInstance().setTextureView(ChatActivity.this.createTextureView(false), ChatActivity.this.aspectRatioFrameLayout, ChatActivity.this.roundVideoContainer, true);
            }
          }
          
          protected void onLayout(boolean paramAnonymousBoolean, int paramAnonymousInt1, int paramAnonymousInt2, int paramAnonymousInt3, int paramAnonymousInt4)
          {
            int i = getChildCount();
            if ((getKeyboardHeight() <= AndroidUtilities.dp(20.0F)) && (!AndroidUtilities.isInMultiwindow)) {}
            View localView;
            for (int j = ChatActivity.this.chatActivityEnterView.getEmojiPadding();; j = 0)
            {
              setBottomClip(j);
              for (int k = 0;; k++)
              {
                if (k >= i) {
                  break label800;
                }
                localView = getChildAt(k);
                if (localView.getVisibility() != 8) {
                  break;
                }
              }
            }
            FrameLayout.LayoutParams localLayoutParams = (FrameLayout.LayoutParams)localView.getLayoutParams();
            int m = localView.getMeasuredWidth();
            int n = localView.getMeasuredHeight();
            int i1 = localLayoutParams.gravity;
            int i2 = i1;
            if (i1 == -1) {
              i2 = 51;
            }
            int i3;
            switch (i2 & 0x7 & 0x7)
            {
            default: 
              i3 = localLayoutParams.leftMargin;
              label167:
              switch (i2 & 0x70)
              {
              default: 
                i1 = localLayoutParams.topMargin;
                label215:
                if (localView == ChatActivity.this.mentionContainer) {
                  i2 = i1 - (ChatActivity.this.chatActivityEnterView.getMeasuredHeight() - AndroidUtilities.dp(2.0F));
                }
                break;
              }
              break;
            }
            for (;;)
            {
              localView.layout(i3, i2, i3 + m, i2 + n);
              break;
              i3 = (paramAnonymousInt3 - paramAnonymousInt1 - m) / 2 + localLayoutParams.leftMargin - localLayoutParams.rightMargin;
              break label167;
              i3 = paramAnonymousInt3 - m - localLayoutParams.rightMargin;
              break label167;
              i2 = localLayoutParams.topMargin + getPaddingTop();
              i1 = i2;
              if (localView == ChatActivity.this.actionBar) {
                break label215;
              }
              i1 = i2;
              if (ChatActivity.this.actionBar.getVisibility() != 0) {
                break label215;
              }
              i1 = i2 + ChatActivity.this.actionBar.getMeasuredHeight();
              break label215;
              i1 = (paramAnonymousInt4 - j - paramAnonymousInt2 - n) / 2 + localLayoutParams.topMargin - localLayoutParams.bottomMargin;
              break label215;
              i1 = paramAnonymousInt4 - j - paramAnonymousInt2 - n - localLayoutParams.bottomMargin;
              break label215;
              if (localView == ChatActivity.this.pagedownButton)
              {
                i2 = i1 - ChatActivity.this.chatActivityEnterView.getMeasuredHeight();
              }
              else if (localView == ChatActivity.this.mentiondownButton)
              {
                i2 = i1 - ChatActivity.this.chatActivityEnterView.getMeasuredHeight();
              }
              else
              {
                if (localView == ChatActivity.this.emptyViewContainer)
                {
                  int i4 = this.inputFieldHeight / 2;
                  if (ChatActivity.this.actionBar.getVisibility() == 0) {}
                  for (i2 = ChatActivity.this.actionBar.getMeasuredHeight() / 2;; i2 = 0)
                  {
                    i2 = i1 - (i4 - i2);
                    break;
                  }
                }
                if (ChatActivity.this.chatActivityEnterView.isPopupView(localView))
                {
                  if (AndroidUtilities.isInMultiwindow) {
                    i2 = ChatActivity.this.chatActivityEnterView.getTop() - localView.getMeasuredHeight() + AndroidUtilities.dp(1.0F);
                  } else {
                    i2 = ChatActivity.this.chatActivityEnterView.getBottom();
                  }
                }
                else if ((localView == ChatActivity.this.gifHintTextView) || (localView == ChatActivity.this.voiceHintTextView) || (localView == ChatActivity.this.mediaBanTooltip))
                {
                  i2 = i1 - this.inputFieldHeight;
                }
                else if ((localView == ChatActivity.this.chatListView) || (localView == ChatActivity.this.progressView))
                {
                  i2 = i1;
                  if (ChatActivity.this.chatActivityEnterView.isTopViewVisible()) {
                    i2 = i1 - AndroidUtilities.dp(48.0F);
                  }
                }
                else if (localView == ChatActivity.this.actionBar)
                {
                  i2 = i1 - getPaddingTop();
                }
                else if (localView == ChatActivity.this.roundVideoContainer)
                {
                  i2 = ChatActivity.this.actionBar.getMeasuredHeight();
                }
                else if (localView != ChatActivity.this.instantCameraView)
                {
                  i2 = i1;
                  if (localView != ChatActivity.this.overlayView) {}
                }
                else
                {
                  i2 = 0;
                }
              }
            }
            label800:
            ChatActivity.this.updateMessagesVisisblePart();
            notifyHeightChanged();
          }
          
          protected void onMeasure(int paramAnonymousInt1, int paramAnonymousInt2)
          {
            int i = View.MeasureSpec.getSize(paramAnonymousInt1);
            int j = View.MeasureSpec.getSize(paramAnonymousInt2);
            setMeasuredDimension(i, j);
            int k = j - getPaddingTop();
            measureChildWithMargins(ChatActivity.this.actionBar, paramAnonymousInt1, 0, paramAnonymousInt2, 0);
            int m = ChatActivity.this.actionBar.getMeasuredHeight();
            int n = k;
            if (ChatActivity.this.actionBar.getVisibility() == 0) {
              n = k - m;
            }
            int i1 = j;
            k = n;
            if (getKeyboardHeight() <= AndroidUtilities.dp(20.0F))
            {
              i1 = j;
              k = n;
              if (!AndroidUtilities.isInMultiwindow)
              {
                k = n - ChatActivity.this.chatActivityEnterView.getEmojiPadding();
                i1 = j - ChatActivity.this.chatActivityEnterView.getEmojiPadding();
              }
            }
            int i2 = getChildCount();
            measureChildWithMargins(ChatActivity.this.chatActivityEnterView, paramAnonymousInt1, 0, paramAnonymousInt2, 0);
            this.inputFieldHeight = ChatActivity.this.chatActivityEnterView.getMeasuredHeight();
            n = 0;
            if (n < i2)
            {
              View localView = getChildAt(n);
              if ((localView == null) || (localView.getVisibility() == 8) || (localView == ChatActivity.this.chatActivityEnterView) || (localView == ChatActivity.this.actionBar)) {}
              for (;;)
              {
                n++;
                break;
                int i4;
                int i5;
                if ((localView == ChatActivity.this.chatListView) || (localView == ChatActivity.this.progressView))
                {
                  int i3 = View.MeasureSpec.makeMeasureSpec(i, NUM);
                  i4 = AndroidUtilities.dp(10.0F);
                  i5 = this.inputFieldHeight;
                  if (ChatActivity.this.chatActivityEnterView.isTopViewVisible()) {}
                  for (j = 48;; j = 0)
                  {
                    localView.measure(i3, View.MeasureSpec.makeMeasureSpec(Math.max(i4, AndroidUtilities.dp(j + 2) + (k - i5)), NUM));
                    break;
                  }
                }
                if ((localView == ChatActivity.this.instantCameraView) || (localView == ChatActivity.this.overlayView))
                {
                  localView.measure(View.MeasureSpec.makeMeasureSpec(i, NUM), View.MeasureSpec.makeMeasureSpec(i1 - this.inputFieldHeight + AndroidUtilities.dp(3.0F), NUM));
                }
                else if (localView == ChatActivity.this.emptyViewContainer)
                {
                  localView.measure(View.MeasureSpec.makeMeasureSpec(i, NUM), View.MeasureSpec.makeMeasureSpec(k, NUM));
                }
                else if (ChatActivity.this.chatActivityEnterView.isPopupView(localView))
                {
                  if (AndroidUtilities.isInMultiwindow)
                  {
                    if (AndroidUtilities.isTablet()) {
                      localView.measure(View.MeasureSpec.makeMeasureSpec(i, NUM), View.MeasureSpec.makeMeasureSpec(Math.min(AndroidUtilities.dp(320.0F), k - this.inputFieldHeight + m - AndroidUtilities.statusBarHeight + getPaddingTop()), NUM));
                    } else {
                      localView.measure(View.MeasureSpec.makeMeasureSpec(i, NUM), View.MeasureSpec.makeMeasureSpec(k - this.inputFieldHeight + m - AndroidUtilities.statusBarHeight + getPaddingTop(), NUM));
                    }
                  }
                  else
                  {
                    j = localView.getLayoutParams().height;
                    localView.measure(View.MeasureSpec.makeMeasureSpec(i, NUM), View.MeasureSpec.makeMeasureSpec(localView.getLayoutParams().height, NUM));
                  }
                }
                else if (localView == ChatActivity.this.mentionContainer)
                {
                  FrameLayout.LayoutParams localLayoutParams = (FrameLayout.LayoutParams)ChatActivity.this.mentionContainer.getLayoutParams();
                  if (ChatActivity.this.mentionsAdapter.isBannedInline())
                  {
                    localView.measure(View.MeasureSpec.makeMeasureSpec(i, NUM), View.MeasureSpec.makeMeasureSpec(k, Integer.MIN_VALUE));
                  }
                  else
                  {
                    ChatActivity.access$8502(ChatActivity.this, true);
                    if ((ChatActivity.this.mentionsAdapter.isBotContext()) && (ChatActivity.this.mentionsAdapter.isMediaLayout()))
                    {
                      i4 = ChatActivity.this.mentionGridLayoutManager.getRowsCount(i) * 102;
                      j = i4;
                      if (ChatActivity.this.mentionsAdapter.isBotContext())
                      {
                        j = i4;
                        if (ChatActivity.this.mentionsAdapter.getBotContextSwitch() != null) {
                          j = i4 + 34;
                        }
                      }
                      i5 = ChatActivity.this.chatActivityEnterView.getMeasuredHeight();
                      if (j != 0)
                      {
                        i4 = AndroidUtilities.dp(2.0F);
                        label771:
                        i4 = k - i5 + i4;
                        j = Math.max(0, i4 - AndroidUtilities.dp(Math.min(j, 122.399994F)));
                        if (!ChatActivity.this.mentionLayoutManager.getReverseLayout()) {
                          break label888;
                        }
                        ChatActivity.this.mentionListView.setPadding(0, 0, 0, j);
                        j = i4;
                      }
                    }
                    for (;;)
                    {
                      localLayoutParams.height = j;
                      localLayoutParams.topMargin = 0;
                      ChatActivity.access$8502(ChatActivity.this, false);
                      localView.measure(View.MeasureSpec.makeMeasureSpec(i, NUM), View.MeasureSpec.makeMeasureSpec(localLayoutParams.height, NUM));
                      break;
                      i4 = 0;
                      break label771;
                      label888:
                      ChatActivity.this.mentionListView.setPadding(0, j, 0, 0);
                      j = i4;
                      continue;
                      i5 = ChatActivity.this.mentionsAdapter.getItemCount();
                      i4 = 0;
                      if (ChatActivity.this.mentionsAdapter.isBotContext())
                      {
                        j = i5;
                        if (ChatActivity.this.mentionsAdapter.getBotContextSwitch() != null)
                        {
                          i4 = 0 + 36;
                          j = i5 - 1;
                        }
                        j = i4 + j * 68;
                        label977:
                        i5 = ChatActivity.this.chatActivityEnterView.getMeasuredHeight();
                        if (j == 0) {
                          break label1078;
                        }
                      }
                      label1078:
                      for (i4 = AndroidUtilities.dp(2.0F);; i4 = 0)
                      {
                        i4 = k - i5 + i4;
                        j = Math.max(0, i4 - AndroidUtilities.dp(Math.min(j, 122.399994F)));
                        if (!ChatActivity.this.mentionLayoutManager.getReverseLayout()) {
                          break label1084;
                        }
                        ChatActivity.this.mentionListView.setPadding(0, 0, 0, j);
                        j = i4;
                        break;
                        j = 0 + i5 * 36;
                        break label977;
                      }
                      label1084:
                      ChatActivity.this.mentionListView.setPadding(0, j, 0, 0);
                      j = i4;
                    }
                  }
                }
                else
                {
                  measureChildWithMargins(localView, paramAnonymousInt1, 0, paramAnonymousInt2, 0);
                }
              }
            }
            if (ChatActivity.this.fixPaddingsInLayout)
            {
              ChatActivity.access$8802(ChatActivity.this, true);
              ChatActivity.this.checkListViewPaddingsInternal();
              ChatActivity.access$8702(ChatActivity.this, false);
              ChatActivity.access$8802(ChatActivity.this, false);
            }
            if (ChatActivity.this.scrollToPositionOnRecreate != -1)
            {
              AndroidUtilities.runOnUIThread(new Runnable()
              {
                public void run()
                {
                  ChatActivity.this.chatLayoutManager.scrollToPositionWithOffset(this.val$scrollTo, ChatActivity.this.scrollToOffsetOnRecreate);
                }
              });
              ChatActivity.access$8802(ChatActivity.this, true);
              ChatActivity.access$9002(ChatActivity.this, -1);
              ChatActivity.access$8802(ChatActivity.this, false);
            }
          }
          
          public void requestLayout()
          {
            if (ChatActivity.this.globalIgnoreLayout) {}
            for (;;)
            {
              return;
              super.requestLayout();
            }
          }
        };
        this.contentView = ((SizeNotifierFrameLayout)this.fragmentView);
        this.contentView.setBackgroundImage(Theme.getCachedWallpaper());
        this.emptyViewContainer = new FrameLayout(paramContext);
        this.emptyViewContainer.setVisibility(4);
        this.contentView.addView(this.emptyViewContainer, LayoutHelper.createFrame(-1, -2, 17));
        this.emptyViewContainer.setOnTouchListener(new View.OnTouchListener()
        {
          public boolean onTouch(View paramAnonymousView, MotionEvent paramAnonymousMotionEvent)
          {
            return true;
          }
        });
        if (this.currentEncryptedChat != null) {
          break label7262;
        }
        if ((this.currentUser == null) || (!this.currentUser.self)) {
          break label7031;
        }
        this.bigEmptyView = new ChatBigEmptyView(paramContext, false);
        this.emptyViewContainer.addView(this.bigEmptyView, new FrameLayout.LayoutParams(-2, -2, 17));
        if (this.chatActivityEnterView == null) {
          break label7391;
        }
        this.chatActivityEnterView.onDestroy();
        if (this.chatActivityEnterView.isEditingMessage()) {
          break label7385;
        }
        localObject1 = this.chatActivityEnterView.getFieldText();
        if (this.mentionsAdapter != null) {
          this.mentionsAdapter.onDestroy();
        }
        this.chatListView = new RecyclerListView(paramContext)
        {
          ArrayList<ChatMessageCell> drawCaptionAfter = new ArrayList();
          ArrayList<ChatMessageCell> drawNamesAfter = new ArrayList();
          ArrayList<ChatMessageCell> drawTimeAfter = new ArrayList();
          private float endedTrackingX;
          private long lastReplyButtonAnimationTime;
          private long lastTrackingAnimationTime;
          private boolean maybeStartTracking;
          private float replyButtonProgress;
          private boolean slideAnimationInProgress;
          private ChatMessageCell slidingView;
          private boolean startedTracking;
          private int startedTrackingPointerId;
          private int startedTrackingX;
          private int startedTrackingY;
          private float trackAnimationProgress;
          private boolean wasTrackingVibrate;
          
          private void drawReplyButton(Canvas paramAnonymousCanvas)
          {
            if (this.slidingView == null) {
              return;
            }
            float f1 = this.slidingView.getTranslationX();
            long l1 = System.currentTimeMillis();
            long l2 = Math.min(17L, l1 - this.lastReplyButtonAnimationTime);
            this.lastReplyButtonAnimationTime = l1;
            if (f1 <= -AndroidUtilities.dp(50.0F))
            {
              i = 1;
              label54:
              if (i == 0) {
                break label359;
              }
              if (this.replyButtonProgress < 1.0F)
              {
                this.replyButtonProgress += (float)l2 / 180.0F;
                if (this.replyButtonProgress <= 1.0F) {
                  break label352;
                }
                this.replyButtonProgress = 1.0F;
              }
              label97:
              if (i == 0) {
                break label427;
              }
              if (this.replyButtonProgress > 0.8F) {
                break label407;
              }
              f1 = 1.2F * (this.replyButtonProgress / 0.8F);
            }
            label123:
            for (int i = (int)Math.min(255.0F, 255.0F * (this.replyButtonProgress / 0.8F));; i = (int)Math.min(255.0F, 255.0F * this.replyButtonProgress))
            {
              Theme.chat_shareDrawable.setAlpha(i);
              Theme.chat_replyIconDrawable.setAlpha(i);
              float f2 = getMeasuredWidth() + this.slidingView.getTranslationX() / 2.0F;
              float f3 = this.slidingView.getTop() + this.slidingView.getMeasuredHeight() / 2;
              Theme.chat_shareDrawable.setColorFilter(Theme.colorFilter);
              Theme.chat_shareDrawable.setBounds((int)(f2 - AndroidUtilities.dp(16.0F) * f1), (int)(f3 - AndroidUtilities.dp(16.0F) * f1), (int)(AndroidUtilities.dp(16.0F) * f1 + f2), (int)(AndroidUtilities.dp(16.0F) * f1 + f3));
              Theme.chat_shareDrawable.draw(paramAnonymousCanvas);
              Theme.chat_replyIconDrawable.setBounds((int)(f2 - AndroidUtilities.dp(10.0F) * f1), (int)(f3 - AndroidUtilities.dp(8.0F) * f1), (int)(AndroidUtilities.dp(10.0F) * f1 + f2), (int)(AndroidUtilities.dp(6.0F) * f1 + f3));
              Theme.chat_replyIconDrawable.draw(paramAnonymousCanvas);
              Theme.chat_shareDrawable.setAlpha(255);
              Theme.chat_replyIconDrawable.setAlpha(255);
              break;
              i = 0;
              break label54;
              label352:
              invalidate();
              break label97;
              label359:
              if (this.replyButtonProgress <= 0.0F) {
                break label97;
              }
              this.replyButtonProgress -= (float)l2 / 180.0F;
              if (this.replyButtonProgress < 0.0F)
              {
                this.replyButtonProgress = 0.0F;
                break label97;
              }
              invalidate();
              break label97;
              label407:
              f1 = 1.2F - 0.2F * ((this.replyButtonProgress - 0.8F) / 0.2F);
              break label123;
              label427:
              f1 = this.replyButtonProgress;
            }
          }
          
          private void processTouchEvent(MotionEvent paramAnonymousMotionEvent)
          {
            Object localObject;
            if ((paramAnonymousMotionEvent.getAction() == 0) && (!this.startedTracking) && (!this.maybeStartTracking))
            {
              localObject = getPressedChildView();
              if ((localObject instanceof ChatMessageCell))
              {
                this.slidingView = ((ChatMessageCell)localObject);
                localObject = this.slidingView.getMessageObject();
                if (((ChatActivity.this.currentEncryptedChat == null) || (AndroidUtilities.getPeerLayerVersion(ChatActivity.this.currentEncryptedChat.layer) >= 46)) && ((ChatActivity.this.getMessageType((MessageObject)localObject) != 1) || ((((MessageObject)localObject).getDialogId() != ChatActivity.this.mergeDialogId) && (!((MessageObject)localObject).needDrawBluredPreview()))) && ((ChatActivity.this.currentEncryptedChat != null) || (((MessageObject)localObject).getId() >= 0)) && ((ChatActivity.this.bottomOverlayChat == null) || (ChatActivity.this.bottomOverlayChat.getVisibility() != 0)) && (!ChatActivity.this.isBroadcast) && ((ChatActivity.this.currentChat == null) || ((!ChatObject.isNotInChat(ChatActivity.this.currentChat)) && ((!ChatObject.isChannel(ChatActivity.this.currentChat)) || (ChatObject.canPost(ChatActivity.this.currentChat)) || (ChatActivity.this.currentChat.megagroup)) && (ChatObject.canSendMessages(ChatActivity.this.currentChat))))) {
                  break label242;
                }
                this.slidingView = null;
              }
            }
            for (;;)
            {
              return;
              label242:
              this.startedTrackingPointerId = paramAnonymousMotionEvent.getPointerId(0);
              this.maybeStartTracking = true;
              this.startedTrackingX = ((int)paramAnonymousMotionEvent.getX());
              this.startedTrackingY = ((int)paramAnonymousMotionEvent.getY());
              continue;
              int i;
              if ((this.slidingView != null) && (paramAnonymousMotionEvent.getAction() == 2) && (paramAnonymousMotionEvent.getPointerId(0) == this.startedTrackingPointerId))
              {
                i = Math.max(AndroidUtilities.dp(-80.0F), Math.min(0, (int)(paramAnonymousMotionEvent.getX() - this.startedTrackingX)));
                int j = Math.abs((int)paramAnonymousMotionEvent.getY() - this.startedTrackingY);
                if ((getScrollState() == 0) && (this.maybeStartTracking) && (!this.startedTracking) && (i <= -AndroidUtilities.getPixelsInCM(0.4F, true)) && (Math.abs(i) / 3 > j))
                {
                  localObject = MotionEvent.obtain(0L, 0L, 3, 0.0F, 0.0F, 0);
                  this.slidingView.onTouchEvent((MotionEvent)localObject);
                  super.onInterceptTouchEvent((MotionEvent)localObject);
                  ((MotionEvent)localObject).recycle();
                  ChatActivity.this.chatLayoutManager.setCanScrollVertically(false);
                  this.maybeStartTracking = false;
                  this.startedTracking = true;
                  this.startedTrackingX = ((int)paramAnonymousMotionEvent.getX());
                  if (getParent() == null) {
                    continue;
                  }
                  getParent().requestDisallowInterceptTouchEvent(true);
                  continue;
                }
                if (!this.startedTracking) {
                  continue;
                }
                if ((Math.abs(i) >= AndroidUtilities.dp(50.0F)) && (this.wasTrackingVibrate)) {}
              }
              try
              {
                performHapticFeedback(3, 2);
                for (this.wasTrackingVibrate = true;; this.wasTrackingVibrate = false)
                {
                  this.slidingView.setTranslationX(i);
                  if (this.slidingView.getMessageObject().isRoundVideo()) {
                    ChatActivity.this.updateTextureViewPosition();
                  }
                  setGroupTranslationX(this.slidingView, i);
                  invalidate();
                  break;
                }
                if ((this.slidingView == null) || (paramAnonymousMotionEvent.getPointerId(0) != this.startedTrackingPointerId) || ((paramAnonymousMotionEvent.getAction() != 3) && (paramAnonymousMotionEvent.getAction() != 1) && (paramAnonymousMotionEvent.getAction() != 6))) {
                  continue;
                }
                if (Math.abs(this.slidingView.getTranslationX()) >= AndroidUtilities.dp(50.0F)) {
                  ChatActivity.this.showReplyPanel(true, this.slidingView.getMessageObject(), null, null, false);
                }
                this.endedTrackingX = this.slidingView.getTranslationX();
                this.lastTrackingAnimationTime = System.currentTimeMillis();
                this.trackAnimationProgress = 0.0F;
                invalidate();
                this.maybeStartTracking = false;
                this.startedTracking = false;
                ChatActivity.this.chatLayoutManager.setCanScrollVertically(true);
              }
              catch (Exception paramAnonymousMotionEvent)
              {
                for (;;) {}
              }
            }
          }
          
          private void setGroupTranslationX(ChatMessageCell paramAnonymousChatMessageCell, float paramAnonymousFloat)
          {
            paramAnonymousChatMessageCell = paramAnonymousChatMessageCell.getCurrentMessagesGroup();
            if (paramAnonymousChatMessageCell == null) {}
            for (;;)
            {
              return;
              int i = getChildCount();
              int j = 0;
              if (j < i)
              {
                Object localObject = getChildAt(j);
                if ((localObject == this) || (!(localObject instanceof ChatMessageCell))) {}
                for (;;)
                {
                  j++;
                  break;
                  localObject = (ChatMessageCell)localObject;
                  if (((ChatMessageCell)localObject).getCurrentMessagesGroup() == paramAnonymousChatMessageCell)
                  {
                    ((ChatMessageCell)localObject).setTranslationX(paramAnonymousFloat);
                    ((ChatMessageCell)localObject).invalidate();
                  }
                }
              }
              invalidate();
            }
          }
          
          protected void dispatchDraw(Canvas paramAnonymousCanvas)
          {
            ChatActivity.access$6902(ChatActivity.this, null);
            super.dispatchDraw(paramAnonymousCanvas);
          }
          
          public boolean drawChild(Canvas paramAnonymousCanvas, View paramAnonymousView, long paramAnonymousLong)
          {
            int i = 0;
            int j = 0;
            int k = 0;
            int m = 0;
            Object localObject1;
            Object localObject2;
            Object localObject3;
            if ((paramAnonymousView instanceof ChatMessageCell))
            {
              localObject1 = (ChatMessageCell)paramAnonymousView;
              localObject2 = ((ChatMessageCell)localObject1).getCurrentPosition();
              localObject3 = ((ChatMessageCell)localObject1).getCurrentMessagesGroup();
              n = m;
              i1 = j;
              if (localObject2 != null)
              {
                if ((((MessageObject.GroupedMessagePosition)localObject2).pw == ((MessageObject.GroupedMessagePosition)localObject2).spanSize) || (((MessageObject.GroupedMessagePosition)localObject2).spanSize != 1000) || (((MessageObject.GroupedMessagePosition)localObject2).siblingHeights != null) || (!((MessageObject.GroupedMessages)localObject3).hasSibling)) {
                  break label330;
                }
                i1 = ((ChatMessageCell)localObject1).getBackgroundDrawableLeft();
                n = m;
              }
              k = n;
              i = i1;
              if (((ChatMessageCell)localObject1).needDelayRoundProgressDraw())
              {
                ChatActivity.access$6902(ChatActivity.this, (ChatMessageCell)localObject1);
                i = i1;
                k = n;
              }
            }
            label180:
            boolean bool1;
            if (i != 0)
            {
              paramAnonymousCanvas.save();
              paramAnonymousCanvas.clipRect(i + paramAnonymousView.getTranslationX(), paramAnonymousView.getTop(), paramAnonymousView.getRight() + paramAnonymousView.getTranslationX(), paramAnonymousView.getBottom());
              bool1 = super.drawChild(paramAnonymousCanvas, paramAnonymousView, paramAnonymousLong);
              if ((i != 0) || (k != 0)) {
                paramAnonymousCanvas.restore();
              }
              k = 0;
              i = getChildCount();
            }
            for (int n = 0;; n++)
            {
              i1 = k;
              if (n < i)
              {
                if (getChildAt(n) == paramAnonymousView) {
                  i1 = n;
                }
              }
              else
              {
                if (i1 != i - 1) {
                  break label659;
                }
                k = this.drawTimeAfter.size();
                if (k <= 0) {
                  break label448;
                }
                for (n = 0; n < k; n++)
                {
                  localObject2 = (ChatMessageCell)this.drawTimeAfter.get(n);
                  paramAnonymousCanvas.save();
                  paramAnonymousCanvas.translate(((ChatMessageCell)localObject2).getLeft() + ((ChatMessageCell)localObject2).getTranslationX(), ((ChatMessageCell)localObject2).getTop());
                  ((ChatMessageCell)localObject2).drawTimeLayout(paramAnonymousCanvas);
                  paramAnonymousCanvas.restore();
                }
                label330:
                n = m;
                i1 = j;
                if (((MessageObject.GroupedMessagePosition)localObject2).siblingHeights == null) {
                  break;
                }
                i1 = paramAnonymousView.getBottom();
                if (((ChatMessageCell)localObject1).isPinnedBottom()) {}
                for (n = 1;; n = 0)
                {
                  n = i1 - AndroidUtilities.dp(n + 1);
                  i1 = j;
                  break;
                }
                if (k == 0) {
                  break label180;
                }
                paramAnonymousCanvas.save();
                paramAnonymousCanvas.clipRect(paramAnonymousView.getLeft() + paramAnonymousView.getTranslationX(), paramAnonymousView.getTop(), paramAnonymousView.getRight() + paramAnonymousView.getTranslationX(), k);
                break label180;
              }
            }
            this.drawTimeAfter.clear();
            label448:
            k = this.drawNamesAfter.size();
            if (k > 0)
            {
              for (n = 0; n < k; n++)
              {
                localObject2 = (ChatMessageCell)this.drawNamesAfter.get(n);
                paramAnonymousCanvas.save();
                paramAnonymousCanvas.translate(((ChatMessageCell)localObject2).getLeft() + ((ChatMessageCell)localObject2).getTranslationX(), ((ChatMessageCell)localObject2).getTop());
                ((ChatMessageCell)localObject2).drawNamesLayout(paramAnonymousCanvas);
                paramAnonymousCanvas.restore();
              }
              this.drawNamesAfter.clear();
            }
            k = this.drawCaptionAfter.size();
            boolean bool2;
            if (k > 0)
            {
              n = 0;
              while (n < k)
              {
                localObject2 = (ChatMessageCell)this.drawCaptionAfter.get(n);
                if (((ChatMessageCell)localObject2).getCurrentPosition() == null)
                {
                  n++;
                }
                else
                {
                  paramAnonymousCanvas.save();
                  paramAnonymousCanvas.translate(((ChatMessageCell)localObject2).getLeft() + ((ChatMessageCell)localObject2).getTranslationX(), ((ChatMessageCell)localObject2).getTop());
                  if ((((ChatMessageCell)localObject2).getCurrentPosition().flags & 0x1) == 0) {}
                  for (bool2 = true;; bool2 = false)
                  {
                    ((ChatMessageCell)localObject2).drawCaptionLayout(paramAnonymousCanvas, bool2);
                    paramAnonymousCanvas.restore();
                    break;
                  }
                }
              }
              this.drawCaptionAfter.clear();
            }
            label659:
            label852:
            label864:
            Object localObject4;
            if ((paramAnonymousView instanceof ChatMessageCell))
            {
              localObject2 = (ChatMessageCell)paramAnonymousView;
              localObject1 = ((ChatMessageCell)localObject2).getCurrentPosition();
              if (localObject1 != null)
              {
                if ((((MessageObject.GroupedMessagePosition)localObject1).last) || ((((MessageObject.GroupedMessagePosition)localObject1).minX == 0) && (((MessageObject.GroupedMessagePosition)localObject1).minY == 0)))
                {
                  if (i1 != i - 1) {
                    break label1198;
                  }
                  paramAnonymousCanvas.save();
                  paramAnonymousCanvas.translate(((ChatMessageCell)localObject2).getLeft() + ((ChatMessageCell)localObject2).getTranslationX(), ((ChatMessageCell)localObject2).getTop());
                  if (((MessageObject.GroupedMessagePosition)localObject1).last) {
                    ((ChatMessageCell)localObject2).drawTimeLayout(paramAnonymousCanvas);
                  }
                  if ((((MessageObject.GroupedMessagePosition)localObject1).minX == 0) && (((MessageObject.GroupedMessagePosition)localObject1).minY == 0)) {
                    ((ChatMessageCell)localObject2).drawNamesLayout(paramAnonymousCanvas);
                  }
                  paramAnonymousCanvas.restore();
                }
                if (i1 != i - 1) {
                  break label1259;
                }
                paramAnonymousCanvas.save();
                paramAnonymousCanvas.translate(((ChatMessageCell)localObject2).getLeft() + ((ChatMessageCell)localObject2).getTranslationX(), ((ChatMessageCell)localObject2).getTop());
                if ((((ChatMessageCell)localObject2).hasCaptionLayout()) && ((((MessageObject.GroupedMessagePosition)localObject1).flags & 0x8) != 0))
                {
                  if ((((MessageObject.GroupedMessagePosition)localObject1).flags & 0x1) != 0) {
                    break label1253;
                  }
                  bool2 = true;
                  ((ChatMessageCell)localObject2).drawCaptionLayout(paramAnonymousCanvas, bool2);
                }
                paramAnonymousCanvas.restore();
              }
              localObject4 = ((ChatMessageCell)localObject2).getMessageObject();
              if ((ChatActivity.this.roundVideoContainer != null) && (((MessageObject)localObject4).isRoundVideo()) && (MediaController.getInstance().isPlayingMessage((MessageObject)localObject4)))
              {
                localObject3 = ((ChatMessageCell)localObject2).getPhotoImage();
                if (!ChatActivity.this.chatActivityEnterView.isTopViewVisible()) {
                  break label1291;
                }
                n = AndroidUtilities.dp(48.0F);
                label928:
                f1 = ((ImageReceiver)localObject3).getImageX() + ((ChatMessageCell)localObject2).getTranslationX();
                f2 = ChatActivity.this.fragmentView.getPaddingTop() + ((ChatMessageCell)localObject2).getTop() + ((ImageReceiver)localObject3).getImageY() - n;
                if ((ChatActivity.this.roundVideoContainer.getTranslationX() != f1) || (ChatActivity.this.roundVideoContainer.getTranslationY() != f2))
                {
                  ChatActivity.this.roundVideoContainer.setTranslationX(f1);
                  ChatActivity.this.roundVideoContainer.setTranslationY(f2);
                  ChatActivity.this.fragmentView.invalidate();
                  ChatActivity.this.roundVideoContainer.invalidate();
                }
              }
              localObject3 = ((ChatMessageCell)localObject2).getAvatarImage();
              if (localObject3 != null)
              {
                localObject4 = ChatActivity.this.getValidGroupedMessage((MessageObject)localObject4);
                i = paramAnonymousView.getTop();
                if (!((ChatMessageCell)localObject2).isPinnedBottom()) {
                  break label1363;
                }
                RecyclerView.ViewHolder localViewHolder = ChatActivity.this.chatListView.getChildViewHolder(paramAnonymousView);
                if (localViewHolder == null) {
                  break label1363;
                }
                n = localViewHolder.getAdapterPosition();
                if ((localObject4 == null) || (localObject1 == null)) {
                  break label1354;
                }
                j = ((MessageObject.GroupedMessages)localObject4).posArray.indexOf(localObject1);
                m = ((MessageObject.GroupedMessages)localObject4).posArray.size();
                if ((((MessageObject.GroupedMessagePosition)localObject1).flags & 0x8) == 0) {
                  break label1297;
                }
                i1 = n - m + j;
              }
            }
            for (;;)
            {
              if (ChatActivity.this.chatListView.findViewHolderForAdapterPosition(i1) == null) {
                break label1363;
              }
              ((ImageReceiver)localObject3).setImageY(-AndroidUtilities.dp(1000.0F));
              ((ImageReceiver)localObject3).draw(paramAnonymousCanvas);
              return bool1;
              label1198:
              if (((MessageObject.GroupedMessagePosition)localObject1).last) {
                this.drawTimeAfter.add(localObject2);
              }
              if ((((MessageObject.GroupedMessagePosition)localObject1).minX != 0) || (((MessageObject.GroupedMessagePosition)localObject1).minY != 0) || (!((ChatMessageCell)localObject2).hasNameLayout())) {
                break;
              }
              this.drawNamesAfter.add(localObject2);
              break;
              label1253:
              bool2 = false;
              break label852;
              label1259:
              if ((!((ChatMessageCell)localObject2).hasCaptionLayout()) || ((((MessageObject.GroupedMessagePosition)localObject1).flags & 0x8) == 0)) {
                break label864;
              }
              this.drawCaptionAfter.add(localObject2);
              break label864;
              label1291:
              n = 0;
              break label928;
              label1297:
              n--;
              for (k = j + 1;; k++)
              {
                i1 = n;
                if (j >= m) {
                  break;
                }
                i1 = n;
                if (((MessageObject.GroupedMessagePosition)((MessageObject.GroupedMessages)localObject4).posArray.get(k)).minY > ((MessageObject.GroupedMessagePosition)localObject1).maxY) {
                  break;
                }
                n--;
              }
              label1354:
              i1 = n - 1;
            }
            label1363:
            float f1 = ((ChatMessageCell)localObject2).getTranslationX();
            int i1 = paramAnonymousView.getTop() + ((ChatMessageCell)localObject2).getLayoutHeight();
            k = ChatActivity.this.chatListView.getMeasuredHeight() - ChatActivity.this.chatListView.getPaddingBottom();
            n = i1;
            if (i1 > k) {
              n = k;
            }
            k = i;
            float f2 = f1;
            if (((ChatMessageCell)localObject2).isPinnedTop())
            {
              paramAnonymousView = ChatActivity.this.chatListView.getChildViewHolder(paramAnonymousView);
              k = i;
              f2 = f1;
              if (paramAnonymousView != null)
              {
                k = 0;
                i1 = i;
                if (k < 20) {
                  break label1565;
                }
                f2 = f1;
                k = i1;
              }
            }
            label1482:
            label1565:
            int i2;
            do
            {
              i1 = n;
              if (n - AndroidUtilities.dp(48.0F) < k) {
                i1 = k + AndroidUtilities.dp(48.0F);
              }
              if (f2 != 0.0F)
              {
                paramAnonymousCanvas.save();
                paramAnonymousCanvas.translate(f2, 0.0F);
              }
              ((ImageReceiver)localObject3).setImageY(i1 - AndroidUtilities.dp(44.0F));
              ((ImageReceiver)localObject3).draw(paramAnonymousCanvas);
              if (f2 == 0.0F) {
                break;
              }
              paramAnonymousCanvas.restore();
              break;
              m = k + 1;
              i = paramAnonymousView.getAdapterPosition();
              if ((localObject4 == null) || (localObject1 == null)) {
                break label1833;
              }
              i2 = ((MessageObject.GroupedMessages)localObject4).posArray.indexOf(localObject1);
              k = i1;
              f2 = f1;
            } while (i2 < 0);
            ((MessageObject.GroupedMessages)localObject4).posArray.size();
            if ((((MessageObject.GroupedMessagePosition)localObject1).flags & 0x4) != 0) {
              i = i + i2 + 1;
            }
            for (;;)
            {
              localObject2 = ChatActivity.this.chatListView.findViewHolderForAdapterPosition(i);
              k = i1;
              f2 = f1;
              if (localObject2 == null) {
                break label1482;
              }
              i = ((RecyclerView.ViewHolder)localObject2).itemView.getTop();
              float f3 = f1;
              if (n - AndroidUtilities.dp(48.0F) < ((RecyclerView.ViewHolder)localObject2).itemView.getBottom()) {
                f3 = Math.min(((RecyclerView.ViewHolder)localObject2).itemView.getTranslationX(), f1);
              }
              k = i;
              f2 = f3;
              if (!(((RecyclerView.ViewHolder)localObject2).itemView instanceof ChatMessageCell)) {
                break label1482;
              }
              paramAnonymousView = (View)localObject2;
              i1 = i;
              k = m;
              f1 = f3;
              if (((ChatMessageCell)((RecyclerView.ViewHolder)localObject2).itemView).isPinnedTop()) {
                break;
              }
              k = i;
              f2 = f3;
              break label1482;
              k = i + 1;
              for (j = i2 - 1;; j--)
              {
                i = k;
                if (i2 < 0) {
                  break;
                }
                i = k;
                if (((MessageObject.GroupedMessagePosition)((MessageObject.GroupedMessages)localObject4).posArray.get(j)).maxY < ((MessageObject.GroupedMessagePosition)localObject1).minY) {
                  break;
                }
                k++;
              }
              label1833:
              i++;
            }
          }
          
          protected void onChildPressed(View paramAnonymousView, boolean paramAnonymousBoolean)
          {
            super.onChildPressed(paramAnonymousView, paramAnonymousBoolean);
            if ((paramAnonymousView instanceof ChatMessageCell))
            {
              MessageObject.GroupedMessages localGroupedMessages = ((ChatMessageCell)paramAnonymousView).getCurrentMessagesGroup();
              if (localGroupedMessages != null)
              {
                int i = getChildCount();
                int j = 0;
                if (j < i)
                {
                  View localView = getChildAt(j);
                  if ((localView == paramAnonymousView) || (!(localView instanceof ChatMessageCell))) {}
                  for (;;)
                  {
                    j++;
                    break;
                    ChatMessageCell localChatMessageCell = (ChatMessageCell)localView;
                    if (((ChatMessageCell)localView).getCurrentMessagesGroup() == localGroupedMessages) {
                      localChatMessageCell.setPressed(paramAnonymousBoolean);
                    }
                  }
                }
              }
            }
          }
          
          public void onDraw(Canvas paramAnonymousCanvas)
          {
            super.onDraw(paramAnonymousCanvas);
            if (this.slidingView != null)
            {
              float f = this.slidingView.getTranslationX();
              if ((!this.maybeStartTracking) && (!this.startedTracking) && (this.endedTrackingX != 0.0F) && (f != 0.0F))
              {
                long l1 = System.currentTimeMillis();
                long l2 = this.lastTrackingAnimationTime;
                this.trackAnimationProgress += (float)(l1 - l2) / 180.0F;
                if (this.trackAnimationProgress > 1.0F) {
                  this.trackAnimationProgress = 1.0F;
                }
                this.lastTrackingAnimationTime = l1;
                f = this.endedTrackingX * (1.0F - AndroidUtilities.decelerateInterpolator.getInterpolation(this.trackAnimationProgress));
                if (f == 0.0F) {
                  this.endedTrackingX = 0.0F;
                }
                setGroupTranslationX(this.slidingView, f);
                this.slidingView.setTranslationX(f);
                if (this.slidingView.getMessageObject().isRoundVideo()) {
                  ChatActivity.this.updateTextureViewPosition();
                }
                invalidate();
              }
              drawReplyButton(paramAnonymousCanvas);
            }
          }
          
          public boolean onInterceptTouchEvent(MotionEvent paramAnonymousMotionEvent)
          {
            boolean bool = super.onInterceptTouchEvent(paramAnonymousMotionEvent);
            if (ChatActivity.this.actionBar.isActionModeShowed()) {}
            for (;;)
            {
              return bool;
              processTouchEvent(paramAnonymousMotionEvent);
            }
          }
          
          protected void onLayout(boolean paramAnonymousBoolean, int paramAnonymousInt1, int paramAnonymousInt2, int paramAnonymousInt3, int paramAnonymousInt4)
          {
            super.onLayout(paramAnonymousBoolean, paramAnonymousInt1, paramAnonymousInt2, paramAnonymousInt3, paramAnonymousInt4);
            ChatActivity.access$10602(ChatActivity.this, false);
            int i;
            if (ChatActivity.ChatActivityAdapter.access$10800(ChatActivity.this.chatAdapter)) {
              i = getChildCount();
            }
            for (int j = 0;; j++)
            {
              if (j < i)
              {
                View localView = getChildAt(j);
                if (!(localView instanceof BotHelpCell)) {
                  continue;
                }
                paramAnonymousInt2 = (paramAnonymousInt4 - paramAnonymousInt2) / 2 - localView.getMeasuredHeight() / 2;
                if (localView.getTop() > paramAnonymousInt2) {
                  localView.layout(0, paramAnonymousInt2, paramAnonymousInt3 - paramAnonymousInt1, localView.getMeasuredHeight() + paramAnonymousInt2);
                }
              }
              return;
            }
          }
          
          public boolean onTouchEvent(MotionEvent paramAnonymousMotionEvent)
          {
            boolean bool = super.onTouchEvent(paramAnonymousMotionEvent);
            if (ChatActivity.this.actionBar.isActionModeShowed()) {
              return bool;
            }
            processTouchEvent(paramAnonymousMotionEvent);
            if ((this.startedTracking) || (bool)) {}
            for (bool = true;; bool = false) {
              break;
            }
          }
          
          public void requestDisallowInterceptTouchEvent(boolean paramAnonymousBoolean)
          {
            super.requestDisallowInterceptTouchEvent(paramAnonymousBoolean);
            if (this.slidingView != null)
            {
              this.endedTrackingX = this.slidingView.getTranslationX();
              this.lastTrackingAnimationTime = System.currentTimeMillis();
              this.trackAnimationProgress = 0.0F;
              invalidate();
              this.maybeStartTracking = false;
              this.startedTracking = false;
              ChatActivity.this.chatLayoutManager.setCanScrollVertically(true);
            }
          }
          
          public void requestLayout()
          {
            if ((ChatActivity.this.chatListViewIgnoreLayout) || (ChatActivity.this.globalIgnoreLayout)) {}
            for (;;)
            {
              return;
              super.requestLayout();
            }
          }
        };
        this.chatListView.setTag(Integer.valueOf(1));
        this.chatListView.setVerticalScrollBarEnabled(true);
        localObject2 = this.chatListView;
        Object localObject3 = new ChatActivityAdapter(paramContext);
        this.chatAdapter = ((ChatActivityAdapter)localObject3);
        ((RecyclerListView)localObject2).setAdapter((RecyclerView.Adapter)localObject3);
        this.chatListView.setClipToPadding(false);
        this.chatListView.setPadding(0, AndroidUtilities.dp(4.0F), 0, AndroidUtilities.dp(3.0F));
        this.chatListView.setItemAnimator(null);
        this.chatListView.setLayoutAnimation(null);
        this.chatLayoutManager = new GridLayoutManagerFixed(paramContext, 1000, 1, true)
        {
          protected boolean hasSiblingChild(int paramAnonymousInt)
          {
            boolean bool1 = false;
            boolean bool2 = bool1;
            Object localObject;
            MessageObject.GroupedMessages localGroupedMessages;
            MessageObject.GroupedMessagePosition localGroupedMessagePosition;
            if (paramAnonymousInt >= ChatActivity.ChatActivityAdapter.access$11900(ChatActivity.this.chatAdapter))
            {
              bool2 = bool1;
              if (paramAnonymousInt < ChatActivity.ChatActivityAdapter.access$12000(ChatActivity.this.chatAdapter))
              {
                paramAnonymousInt -= ChatActivity.ChatActivityAdapter.access$11900(ChatActivity.this.chatAdapter);
                bool2 = bool1;
                if (paramAnonymousInt >= 0)
                {
                  bool2 = bool1;
                  if (paramAnonymousInt < ChatActivity.this.messages.size())
                  {
                    localObject = (MessageObject)ChatActivity.this.messages.get(paramAnonymousInt);
                    localGroupedMessages = ChatActivity.this.getValidGroupedMessage((MessageObject)localObject);
                    bool2 = bool1;
                    if (localGroupedMessages != null)
                    {
                      localGroupedMessagePosition = (MessageObject.GroupedMessagePosition)localGroupedMessages.positions.get(localObject);
                      bool2 = bool1;
                      if (localGroupedMessagePosition.minX != localGroupedMessagePosition.maxX)
                      {
                        bool2 = bool1;
                        if (localGroupedMessagePosition.minY == localGroupedMessagePosition.maxY)
                        {
                          if (localGroupedMessagePosition.minY != 0) {
                            break label160;
                          }
                          bool2 = bool1;
                        }
                      }
                    }
                  }
                }
              }
            }
            for (;;)
            {
              return bool2;
              label160:
              int i = localGroupedMessages.posArray.size();
              paramAnonymousInt = 0;
              bool2 = bool1;
              if (paramAnonymousInt < i)
              {
                localObject = (MessageObject.GroupedMessagePosition)localGroupedMessages.posArray.get(paramAnonymousInt);
                if (localObject == localGroupedMessagePosition) {}
                while ((((MessageObject.GroupedMessagePosition)localObject).minY > localGroupedMessagePosition.minY) || (((MessageObject.GroupedMessagePosition)localObject).maxY < localGroupedMessagePosition.minY))
                {
                  paramAnonymousInt++;
                  break;
                }
                bool2 = true;
              }
            }
          }
          
          public boolean shouldLayoutChildFromOpositeSide(View paramAnonymousView)
          {
            boolean bool1 = false;
            boolean bool2 = bool1;
            if ((paramAnonymousView instanceof ChatMessageCell))
            {
              bool2 = bool1;
              if (!((ChatMessageCell)paramAnonymousView).getMessageObject().isOutOwner()) {
                bool2 = true;
              }
            }
            return bool2;
          }
          
          public void smoothScrollToPosition(RecyclerView paramAnonymousRecyclerView, RecyclerView.State paramAnonymousState, int paramAnonymousInt)
          {
            paramAnonymousRecyclerView = new LinearSmoothScrollerMiddle(paramAnonymousRecyclerView.getContext());
            paramAnonymousRecyclerView.setTargetPosition(paramAnonymousInt);
            startSmoothScroll(paramAnonymousRecyclerView);
          }
          
          public boolean supportsPredictiveItemAnimations()
          {
            return false;
          }
        };
        this.chatLayoutManager.setSpanSizeLookup(new GridLayoutManager.SpanSizeLookup()
        {
          public int getSpanSize(int paramAnonymousInt)
          {
            MessageObject localMessageObject;
            MessageObject.GroupedMessages localGroupedMessages;
            if ((paramAnonymousInt >= ChatActivity.ChatActivityAdapter.access$11900(ChatActivity.this.chatAdapter)) && (paramAnonymousInt < ChatActivity.ChatActivityAdapter.access$12000(ChatActivity.this.chatAdapter)))
            {
              paramAnonymousInt -= ChatActivity.ChatActivityAdapter.access$11900(ChatActivity.this.chatAdapter);
              if ((paramAnonymousInt >= 0) && (paramAnonymousInt < ChatActivity.this.messages.size()))
              {
                localMessageObject = (MessageObject)ChatActivity.this.messages.get(paramAnonymousInt);
                localGroupedMessages = ChatActivity.this.getValidGroupedMessage(localMessageObject);
                if (localGroupedMessages == null) {}
              }
            }
            for (paramAnonymousInt = ((MessageObject.GroupedMessagePosition)localGroupedMessages.positions.get(localMessageObject)).spanSize;; paramAnonymousInt = 1000) {
              return paramAnonymousInt;
            }
          }
        });
        this.chatListView.setLayoutManager(this.chatLayoutManager);
        this.chatListView.addItemDecoration(new RecyclerView.ItemDecoration()
        {
          public void getItemOffsets(android.graphics.Rect paramAnonymousRect, View paramAnonymousView, RecyclerView paramAnonymousRecyclerView, RecyclerView.State paramAnonymousState)
          {
            paramAnonymousRect.bottom = 0;
            if ((paramAnonymousView instanceof ChatMessageCell))
            {
              paramAnonymousState = (ChatMessageCell)paramAnonymousView;
              paramAnonymousRecyclerView = paramAnonymousState.getCurrentMessagesGroup();
              if (paramAnonymousRecyclerView != null)
              {
                paramAnonymousView = paramAnonymousState.getCurrentPosition();
                if ((paramAnonymousView != null) && (paramAnonymousView.siblingHeights != null))
                {
                  float f = Math.max(AndroidUtilities.displaySize.x, AndroidUtilities.displaySize.y) * 0.5F;
                  int i = paramAnonymousState.getCaptionHeight();
                  for (int j = 0; j < paramAnonymousView.siblingHeights.length; j++) {
                    i += (int)Math.ceil(paramAnonymousView.siblingHeights[j] * f);
                  }
                  int k = i + (paramAnonymousView.maxY - paramAnonymousView.minY) * AndroidUtilities.dp2(11.0F);
                  int m = paramAnonymousRecyclerView.posArray.size();
                  j = 0;
                  i = k;
                  if (j < m)
                  {
                    paramAnonymousState = (MessageObject.GroupedMessagePosition)paramAnonymousRecyclerView.posArray.get(j);
                    if ((paramAnonymousState.minY != paramAnonymousView.minY) || ((paramAnonymousState.minX == paramAnonymousView.minX) && (paramAnonymousState.maxX == paramAnonymousView.maxX) && (paramAnonymousState.minY == paramAnonymousView.minY) && (paramAnonymousState.maxY == paramAnonymousView.maxY))) {}
                    while (paramAnonymousState.minY != paramAnonymousView.minY)
                    {
                      j++;
                      break;
                    }
                    i = k - ((int)Math.ceil(paramAnonymousState.ph * f) - AndroidUtilities.dp(4.0F));
                  }
                  paramAnonymousRect.bottom = (-i);
                }
              }
            }
          }
        });
        this.contentView.addView(this.chatListView, LayoutHelper.createFrame(-1, -1.0F));
        this.chatListView.setOnItemLongClickListener(this.onItemLongClickListener);
        this.chatListView.setOnItemClickListener(this.onItemClickListener);
        this.chatListView.setOnScrollListener(new RecyclerView.OnScrollListener()
        {
          private final int scrollValue = AndroidUtilities.dp(100.0F);
          private float totalDy = 0.0F;
          
          public void onScrollStateChanged(RecyclerView paramAnonymousRecyclerView, int paramAnonymousInt)
          {
            if (paramAnonymousInt == 2) {
              ChatActivity.access$602(ChatActivity.this, true);
            }
            for (;;)
            {
              return;
              if (paramAnonymousInt == 1)
              {
                ChatActivity.access$602(ChatActivity.this, true);
                ChatActivity.access$12102(ChatActivity.this, true);
                ChatActivity.access$12202(ChatActivity.this, true);
              }
              else if (paramAnonymousInt == 0)
              {
                ChatActivity.access$12102(ChatActivity.this, false);
                ChatActivity.access$12202(ChatActivity.this, false);
                ChatActivity.this.hideFloatingDateView(true);
              }
            }
          }
          
          public void onScrolled(RecyclerView paramAnonymousRecyclerView, int paramAnonymousInt1, int paramAnonymousInt2)
          {
            ChatActivity.this.chatListView.invalidate();
            if ((!ChatActivity.this.wasManualScroll) && (paramAnonymousInt2 != 0)) {
              ChatActivity.access$602(ChatActivity.this, true);
            }
            if ((paramAnonymousInt2 != 0) && (ChatActivity.this.scrollingFloatingDate) && (!ChatActivity.this.currentFloatingTopIsNotMessage))
            {
              if (ChatActivity.this.highlightMessageId != Integer.MAX_VALUE)
              {
                ChatActivity.access$5602(ChatActivity.this, Integer.MAX_VALUE);
                ChatActivity.this.updateVisibleRows();
              }
              if (ChatActivity.this.floatingDateView.getTag() == null)
              {
                if (ChatActivity.this.floatingDateAnimation != null) {
                  ChatActivity.this.floatingDateAnimation.cancel();
                }
                ChatActivity.this.floatingDateView.setTag(Integer.valueOf(1));
                ChatActivity.access$12602(ChatActivity.this, new AnimatorSet());
                ChatActivity.this.floatingDateAnimation.setDuration(150L);
                ChatActivity.this.floatingDateAnimation.playTogether(new Animator[] { ObjectAnimator.ofFloat(ChatActivity.this.floatingDateView, "alpha", new float[] { 1.0F }) });
                ChatActivity.this.floatingDateAnimation.addListener(new AnimatorListenerAdapter()
                {
                  public void onAnimationEnd(Animator paramAnonymous2Animator)
                  {
                    if (paramAnonymous2Animator.equals(ChatActivity.this.floatingDateAnimation)) {
                      ChatActivity.access$12602(ChatActivity.this, null);
                    }
                  }
                });
                ChatActivity.this.floatingDateAnimation.start();
              }
            }
            ChatActivity.this.checkScrollForLoad(true);
            paramAnonymousInt1 = ChatActivity.this.chatLayoutManager.findFirstVisibleItemPosition();
            if (paramAnonymousInt1 != -1)
            {
              ChatActivity.this.chatAdapter.getItemCount();
              if ((paramAnonymousInt1 != 0) || (ChatActivity.this.forwardEndReached[0] == 0)) {
                break label294;
              }
              ChatActivity.this.showPagedownButton(false, true);
            }
            for (;;)
            {
              ChatActivity.this.updateMessagesVisisblePart();
              return;
              label294:
              if (paramAnonymousInt2 > 0)
              {
                if (ChatActivity.this.pagedownButton.getTag() == null)
                {
                  this.totalDy += paramAnonymousInt2;
                  if (this.totalDy > this.scrollValue)
                  {
                    this.totalDy = 0.0F;
                    ChatActivity.this.showPagedownButton(true, true);
                    ChatActivity.access$13002(ChatActivity.this, true);
                  }
                }
              }
              else if ((ChatActivity.this.pagedownButtonShowedByScroll) && (ChatActivity.this.pagedownButton.getTag() != null))
              {
                this.totalDy += paramAnonymousInt2;
                if (this.totalDy < -this.scrollValue)
                {
                  ChatActivity.this.showPagedownButton(false, true);
                  this.totalDy = 0.0F;
                }
              }
            }
          }
        });
        this.progressView = new FrameLayout(paramContext);
        this.progressView.setVisibility(4);
        this.contentView.addView(this.progressView, LayoutHelper.createFrame(-1, -1, 51));
        this.progressView2 = new View(paramContext);
        this.progressView2.setBackgroundResource(NUM);
        this.progressView2.getBackground().setColorFilter(Theme.colorFilter);
        this.progressView.addView(this.progressView2, LayoutHelper.createFrame(36, 36, 17));
        this.progressBar = new RadialProgressView(paramContext);
        this.progressBar.setSize(AndroidUtilities.dp(28.0F));
        this.progressBar.setProgressColor(Theme.getColor("chat_serviceText"));
        this.progressView.addView(this.progressBar, LayoutHelper.createFrame(32, 32, 17));
        this.floatingDateView = new ChatActionCell(paramContext);
        this.floatingDateView.setAlpha(0.0F);
        this.contentView.addView(this.floatingDateView, LayoutHelper.createFrame(-2, -2.0F, 49, 0.0F, 4.0F, 0.0F, 0.0F));
        this.floatingDateView.setOnClickListener(new View.OnClickListener()
        {
          public void onClick(View paramAnonymousView)
          {
            if (ChatActivity.this.floatingDateView.getAlpha() == 0.0F) {}
            for (;;)
            {
              return;
              paramAnonymousView = Calendar.getInstance();
              paramAnonymousView.setTimeInMillis(ChatActivity.this.floatingDateView.getCustomDate() * 1000L);
              int i = paramAnonymousView.get(1);
              int j = paramAnonymousView.get(2);
              int k = paramAnonymousView.get(5);
              paramAnonymousView.clear();
              paramAnonymousView.set(i, j, k);
              ChatActivity.this.jumpToDate((int)(paramAnonymousView.getTime().getTime() / 1000L));
            }
          }
        });
        if (ChatObject.isChannel(this.currentChat))
        {
          this.pinnedMessageView = new FrameLayout(paramContext);
          this.pinnedMessageView.setTag(Integer.valueOf(1));
          this.pinnedMessageView.setTranslationY(-AndroidUtilities.dp(50.0F));
          this.pinnedMessageView.setVisibility(8);
          this.pinnedMessageView.setBackgroundResource(NUM);
          this.pinnedMessageView.getBackground().setColorFilter(new PorterDuffColorFilter(Theme.getColor("chat_topPanelBackground"), PorterDuff.Mode.MULTIPLY));
          this.contentView.addView(this.pinnedMessageView, LayoutHelper.createFrame(-1, 50, 51));
          this.pinnedMessageView.setOnClickListener(new View.OnClickListener()
          {
            public void onClick(View paramAnonymousView)
            {
              ChatActivity.access$602(ChatActivity.this, true);
              ChatActivity.this.scrollToMessageId(ChatActivity.this.info.pinned_msg_id, 0, true, 0, false);
            }
          });
          this.pinnedLineView = new View(paramContext);
          this.pinnedLineView.setBackgroundColor(Theme.getColor("chat_topPanelLine"));
          this.pinnedMessageView.addView(this.pinnedLineView, LayoutHelper.createFrame(2, 32.0F, 51, 8.0F, 8.0F, 0.0F, 0.0F));
          this.pinnedMessageImageView = new BackupImageView(paramContext);
          this.pinnedMessageView.addView(this.pinnedMessageImageView, LayoutHelper.createFrame(32, 32.0F, 51, 17.0F, 8.0F, 0.0F, 0.0F));
          this.pinnedMessageNameTextView = new SimpleTextView(paramContext);
          this.pinnedMessageNameTextView.setTextSize(14);
          this.pinnedMessageNameTextView.setTextColor(Theme.getColor("chat_topPanelTitle"));
          this.pinnedMessageNameTextView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
          this.pinnedMessageView.addView(this.pinnedMessageNameTextView, LayoutHelper.createFrame(-1, AndroidUtilities.dp(18.0F), 51, 18.0F, 7.3F, 52.0F, 0.0F));
          this.pinnedMessageTextView = new SimpleTextView(paramContext);
          this.pinnedMessageTextView.setTextSize(14);
          this.pinnedMessageTextView.setTextColor(Theme.getColor("chat_topPanelMessage"));
          this.pinnedMessageView.addView(this.pinnedMessageTextView, LayoutHelper.createFrame(-1, AndroidUtilities.dp(18.0F), 51, 18.0F, 25.3F, 52.0F, 0.0F));
          this.closePinned = new ImageView(paramContext);
          this.closePinned.setImageResource(NUM);
          this.closePinned.setColorFilter(new PorterDuffColorFilter(Theme.getColor("chat_topPanelClose"), PorterDuff.Mode.MULTIPLY));
          this.closePinned.setScaleType(ImageView.ScaleType.CENTER);
          this.pinnedMessageView.addView(this.closePinned, LayoutHelper.createFrame(48, 48, 53));
          this.closePinned.setOnClickListener(new View.OnClickListener()
          {
            public void onClick(View paramAnonymousView)
            {
              if (ChatActivity.this.getParentActivity() == null) {}
              for (;;)
              {
                return;
                if ((ChatActivity.this.currentChat.creator) || ((ChatActivity.this.currentChat.admin_rights != null) && (((ChatActivity.this.currentChat.megagroup) && (ChatActivity.this.currentChat.admin_rights.pin_messages)) || ((!ChatActivity.this.currentChat.megagroup) && (ChatActivity.this.currentChat.admin_rights.edit_messages)))))
                {
                  paramAnonymousView = new AlertDialog.Builder(ChatActivity.this.getParentActivity());
                  paramAnonymousView.setMessage(LocaleController.getString("UnpinMessageAlert", NUM));
                  paramAnonymousView.setPositiveButton(LocaleController.getString("OK", NUM), new DialogInterface.OnClickListener()
                  {
                    public void onClick(DialogInterface paramAnonymous2DialogInterface, int paramAnonymous2Int)
                    {
                      MessagesController.getInstance(ChatActivity.this.currentAccount).pinChannelMessage(ChatActivity.this.currentChat, 0, false);
                    }
                  });
                  paramAnonymousView.setTitle(LocaleController.getString("AppName", NUM));
                  paramAnonymousView.setNegativeButton(LocaleController.getString("Cancel", NUM), null);
                  ChatActivity.this.showDialog(paramAnonymousView.create());
                }
                else
                {
                  MessagesController.getNotificationsSettings(ChatActivity.this.currentAccount).edit().putInt("pin_" + ChatActivity.this.dialog_id, ChatActivity.this.info.pinned_msg_id).commit();
                  ChatActivity.this.updatePinnedMessageView(true);
                }
              }
            }
          });
        }
        this.reportSpamView = new LinearLayout(paramContext);
        this.reportSpamView.setTag(Integer.valueOf(1));
        this.reportSpamView.setTranslationY(-AndroidUtilities.dp(50.0F));
        this.reportSpamView.setVisibility(8);
        this.reportSpamView.setBackgroundResource(NUM);
        this.reportSpamView.getBackground().setColorFilter(new PorterDuffColorFilter(Theme.getColor("chat_topPanelBackground"), PorterDuff.Mode.MULTIPLY));
        this.contentView.addView(this.reportSpamView, LayoutHelper.createFrame(-1, 50, 51));
        this.addToContactsButton = new TextView(paramContext);
        this.addToContactsButton.setTextColor(Theme.getColor("chat_addContact"));
        this.addToContactsButton.setVisibility(8);
        this.addToContactsButton.setTextSize(1, 14.0F);
        this.addToContactsButton.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
        this.addToContactsButton.setSingleLine(true);
        this.addToContactsButton.setMaxLines(1);
        this.addToContactsButton.setPadding(AndroidUtilities.dp(4.0F), 0, AndroidUtilities.dp(4.0F), 0);
        this.addToContactsButton.setGravity(17);
        this.addToContactsButton.setText(LocaleController.getString("AddContactChat", NUM));
        this.reportSpamView.addView(this.addToContactsButton, LayoutHelper.createLinear(-1, -1, 0.5F, 51, 0, 0, 0, AndroidUtilities.dp(1.0F)));
        this.addToContactsButton.setOnClickListener(new View.OnClickListener()
        {
          public void onClick(View paramAnonymousView)
          {
            paramAnonymousView = new Bundle();
            paramAnonymousView.putInt("user_id", ChatActivity.this.currentUser.id);
            paramAnonymousView.putBoolean("addContact", true);
            ChatActivity.this.presentFragment(new ContactAddActivity(paramAnonymousView));
          }
        });
        this.reportSpamContainer = new FrameLayout(paramContext);
        this.reportSpamView.addView(this.reportSpamContainer, LayoutHelper.createLinear(-1, -1, 1.0F, 51, 0, 0, 0, AndroidUtilities.dp(1.0F)));
        this.reportSpamButton = new TextView(paramContext);
        this.reportSpamButton.setTextColor(Theme.getColor("chat_reportSpam"));
        this.reportSpamButton.setTextSize(1, 14.0F);
        this.reportSpamButton.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
        this.reportSpamButton.setSingleLine(true);
        this.reportSpamButton.setMaxLines(1);
        if (this.currentChat == null) {
          break label7397;
        }
        this.reportSpamButton.setText(LocaleController.getString("ReportSpamAndLeave", NUM));
        this.reportSpamButton.setGravity(17);
        this.reportSpamButton.setPadding(AndroidUtilities.dp(50.0F), 0, AndroidUtilities.dp(50.0F), 0);
        this.reportSpamContainer.addView(this.reportSpamButton, LayoutHelper.createFrame(-1, -1, 51));
        this.reportSpamButton.setOnClickListener(new View.OnClickListener()
        {
          public void onClick(View paramAnonymousView)
          {
            if (ChatActivity.this.getParentActivity() == null) {
              return;
            }
            paramAnonymousView = new AlertDialog.Builder(ChatActivity.this.getParentActivity());
            if ((ChatObject.isChannel(ChatActivity.this.currentChat)) && (!ChatActivity.this.currentChat.megagroup)) {
              paramAnonymousView.setMessage(LocaleController.getString("ReportSpamAlertChannel", NUM));
            }
            for (;;)
            {
              paramAnonymousView.setTitle(LocaleController.getString("AppName", NUM));
              paramAnonymousView.setPositiveButton(LocaleController.getString("OK", NUM), new DialogInterface.OnClickListener()
              {
                public void onClick(DialogInterface paramAnonymous2DialogInterface, int paramAnonymous2Int)
                {
                  if (ChatActivity.this.currentUser != null) {
                    MessagesController.getInstance(ChatActivity.this.currentAccount).blockUser(ChatActivity.this.currentUser.id);
                  }
                  MessagesController.getInstance(ChatActivity.this.currentAccount).reportSpam(ChatActivity.this.dialog_id, ChatActivity.this.currentUser, ChatActivity.this.currentChat, ChatActivity.this.currentEncryptedChat);
                  ChatActivity.this.updateSpamView();
                  if (ChatActivity.this.currentChat != null) {
                    if (ChatObject.isNotInChat(ChatActivity.this.currentChat)) {
                      MessagesController.getInstance(ChatActivity.this.currentAccount).deleteDialog(ChatActivity.this.dialog_id, 0);
                    }
                  }
                  for (;;)
                  {
                    ChatActivity.this.finishFragment();
                    return;
                    MessagesController.getInstance(ChatActivity.this.currentAccount).deleteUserFromChat((int)-ChatActivity.this.dialog_id, MessagesController.getInstance(ChatActivity.this.currentAccount).getUser(Integer.valueOf(UserConfig.getInstance(ChatActivity.this.currentAccount).getClientUserId())), null);
                    continue;
                    MessagesController.getInstance(ChatActivity.this.currentAccount).deleteDialog(ChatActivity.this.dialog_id, 0);
                  }
                }
              });
              paramAnonymousView.setNegativeButton(LocaleController.getString("Cancel", NUM), null);
              ChatActivity.this.showDialog(paramAnonymousView.create());
              break;
              if (ChatActivity.this.currentChat != null) {
                paramAnonymousView.setMessage(LocaleController.getString("ReportSpamAlertGroup", NUM));
              } else {
                paramAnonymousView.setMessage(LocaleController.getString("ReportSpamAlert", NUM));
              }
            }
          }
        });
        this.closeReportSpam = new ImageView(paramContext);
        this.closeReportSpam.setImageResource(NUM);
        this.closeReportSpam.setColorFilter(new PorterDuffColorFilter(Theme.getColor("chat_topPanelClose"), PorterDuff.Mode.MULTIPLY));
        this.closeReportSpam.setScaleType(ImageView.ScaleType.CENTER);
        this.reportSpamContainer.addView(this.closeReportSpam, LayoutHelper.createFrame(48, 48, 53));
        this.closeReportSpam.setOnClickListener(new View.OnClickListener()
        {
          public void onClick(View paramAnonymousView)
          {
            MessagesController.getInstance(ChatActivity.this.currentAccount).hideReportSpam(ChatActivity.this.dialog_id, ChatActivity.this.currentUser, ChatActivity.this.currentChat);
            ChatActivity.this.updateSpamView();
          }
        });
        this.alertView = new FrameLayout(paramContext);
        this.alertView.setTag(Integer.valueOf(1));
        this.alertView.setTranslationY(-AndroidUtilities.dp(50.0F));
        this.alertView.setVisibility(8);
        this.alertView.setBackgroundResource(NUM);
        this.alertView.getBackground().setColorFilter(new PorterDuffColorFilter(Theme.getColor("chat_topPanelBackground"), PorterDuff.Mode.MULTIPLY));
        this.contentView.addView(this.alertView, LayoutHelper.createFrame(-1, 50, 51));
        this.alertNameTextView = new TextView(paramContext);
        this.alertNameTextView.setTextSize(1, 14.0F);
        this.alertNameTextView.setTextColor(Theme.getColor("chat_topPanelTitle"));
        this.alertNameTextView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
        this.alertNameTextView.setSingleLine(true);
        this.alertNameTextView.setEllipsize(TextUtils.TruncateAt.END);
        this.alertNameTextView.setMaxLines(1);
        this.alertView.addView(this.alertNameTextView, LayoutHelper.createFrame(-2, -2.0F, 51, 8.0F, 5.0F, 8.0F, 0.0F));
        this.alertTextView = new TextView(paramContext);
        this.alertTextView.setTextSize(1, 14.0F);
        this.alertTextView.setTextColor(Theme.getColor("chat_topPanelMessage"));
        this.alertTextView.setSingleLine(true);
        this.alertTextView.setEllipsize(TextUtils.TruncateAt.END);
        this.alertTextView.setMaxLines(1);
        this.alertView.addView(this.alertTextView, LayoutHelper.createFrame(-2, -2.0F, 51, 8.0F, 23.0F, 8.0F, 0.0F));
        this.pagedownButton = new FrameLayout(paramContext);
        this.pagedownButton.setVisibility(4);
        this.contentView.addView(this.pagedownButton, LayoutHelper.createFrame(66, 59.0F, 85, 0.0F, 0.0F, -3.0F, 5.0F));
        this.pagedownButton.setOnClickListener(new View.OnClickListener()
        {
          public void onClick(View paramAnonymousView)
          {
            ChatActivity.access$602(ChatActivity.this, true);
            ChatActivity.access$12202(ChatActivity.this, true);
            if (ChatActivity.this.createUnreadMessageAfterId != 0) {
              ChatActivity.this.scrollToMessageId(ChatActivity.this.createUnreadMessageAfterId, 0, false, ChatActivity.this.returnToLoadIndex, false);
            }
            for (;;)
            {
              return;
              if (ChatActivity.this.returnToMessageId > 0) {
                ChatActivity.this.scrollToMessageId(ChatActivity.this.returnToMessageId, 0, true, ChatActivity.this.returnToLoadIndex, false);
              } else {
                ChatActivity.this.scrollToLastMessage(true);
              }
            }
          }
        });
        this.mentiondownButton = new FrameLayout(paramContext);
        this.mentiondownButton.setVisibility(4);
        this.contentView.addView(this.mentiondownButton, LayoutHelper.createFrame(46, 59.0F, 85, 0.0F, 0.0F, 7.0F, 5.0F));
        this.mentiondownButton.setOnClickListener(new View.OnClickListener()
        {
          private void loadLastUnreadMention()
          {
            ChatActivity.access$602(ChatActivity.this, true);
            if (ChatActivity.this.hasAllMentionsLocal) {
              MessagesStorage.getInstance(ChatActivity.this.currentAccount).getUnreadMention(ChatActivity.this.dialog_id, new MessagesStorage.IntCallback()
              {
                public void run(int paramAnonymous2Int)
                {
                  if (paramAnonymous2Int == 0)
                  {
                    ChatActivity.access$14602(ChatActivity.this, false);
                    ChatActivity.28.this.loadLastUnreadMention();
                  }
                  for (;;)
                  {
                    return;
                    ChatActivity.this.scrollToMessageId(paramAnonymous2Int, 0, false, 0, false);
                  }
                }
              });
            }
            for (;;)
            {
              return;
              final MessagesStorage localMessagesStorage = MessagesStorage.getInstance(ChatActivity.this.currentAccount);
              TLRPC.TL_messages_getUnreadMentions localTL_messages_getUnreadMentions = new TLRPC.TL_messages_getUnreadMentions();
              localTL_messages_getUnreadMentions.peer = MessagesController.getInstance(ChatActivity.this.currentAccount).getInputPeer((int)ChatActivity.this.dialog_id);
              localTL_messages_getUnreadMentions.limit = 1;
              localTL_messages_getUnreadMentions.add_offset = (ChatActivity.this.newMentionsCount - 1);
              ConnectionsManager.getInstance(ChatActivity.this.currentAccount).sendRequest(localTL_messages_getUnreadMentions, new RequestDelegate()
              {
                public void run(final TLObject paramAnonymous2TLObject, final TLRPC.TL_error paramAnonymous2TL_error)
                {
                  AndroidUtilities.runOnUIThread(new Runnable()
                  {
                    public void run()
                    {
                      Object localObject = (TLRPC.messages_Messages)paramAnonymous2TLObject;
                      if ((paramAnonymous2TL_error != null) || (((TLRPC.messages_Messages)localObject).messages.isEmpty())) {
                        if (localObject != null)
                        {
                          ChatActivity.access$15102(ChatActivity.this, ((TLRPC.messages_Messages)localObject).count);
                          ChatActivity.28.2.this.val$messagesStorage.resetMentionsCount(ChatActivity.this.dialog_id, ChatActivity.this.newMentionsCount);
                          if (ChatActivity.this.newMentionsCount != 0) {
                            break label148;
                          }
                          ChatActivity.access$14602(ChatActivity.this, true);
                          ChatActivity.this.showMentiondownButton(false, true);
                        }
                      }
                      for (;;)
                      {
                        return;
                        ChatActivity.access$15102(ChatActivity.this, 0);
                        break;
                        label148:
                        ChatActivity.this.mentiondownButtonCounter.setText(String.format("%d", new Object[] { Integer.valueOf(ChatActivity.this.newMentionsCount) }));
                        ChatActivity.28.this.loadLastUnreadMention();
                        continue;
                        int i = ((TLRPC.Message)((TLRPC.messages_Messages)localObject).messages.get(0)).id;
                        long l1 = i;
                        long l2 = l1;
                        if (ChatObject.isChannel(ChatActivity.this.currentChat)) {
                          l2 = l1 | ChatActivity.this.currentChat.id << 32;
                        }
                        localObject = (MessageObject)ChatActivity.this.messagesDict[0].get(i);
                        ChatActivity.28.2.this.val$messagesStorage.markMessageAsMention(l2);
                        if (localObject != null)
                        {
                          ((MessageObject)localObject).messageOwner.media_unread = true;
                          ((MessageObject)localObject).messageOwner.mentioned = true;
                        }
                        ChatActivity.this.scrollToMessageId(i, 0, false, 0, false);
                      }
                    }
                  });
                }
              });
            }
          }
          
          public void onClick(View paramAnonymousView)
          {
            loadLastUnreadMention();
          }
        });
        this.mentiondownButton.setOnLongClickListener(new View.OnLongClickListener()
        {
          public boolean onLongClick(View paramAnonymousView)
          {
            for (int i = 0; i < ChatActivity.this.messages.size(); i++)
            {
              paramAnonymousView = (MessageObject)ChatActivity.this.messages.get(i);
              if ((paramAnonymousView.messageOwner.mentioned) && (!paramAnonymousView.isContentUnread())) {
                paramAnonymousView.setContentIsRead();
              }
            }
            ChatActivity.access$15102(ChatActivity.this, 0);
            MessagesStorage.getInstance(ChatActivity.this.currentAccount).resetMentionsCount(ChatActivity.this.dialog_id, ChatActivity.this.newMentionsCount);
            ChatActivity.access$14602(ChatActivity.this, true);
            ChatActivity.this.showMentiondownButton(false, true);
            paramAnonymousView = new TLRPC.TL_messages_readMentions();
            paramAnonymousView.peer = MessagesController.getInstance(ChatActivity.this.currentAccount).getInputPeer((int)ChatActivity.this.dialog_id);
            ConnectionsManager.getInstance(ChatActivity.this.currentAccount).sendRequest(paramAnonymousView, new RequestDelegate()
            {
              public void run(TLObject paramAnonymous2TLObject, TLRPC.TL_error paramAnonymous2TL_error) {}
            });
            return true;
          }
        });
        if (!this.isBroadcast)
        {
          this.mentionContainer = new FrameLayout(paramContext)
          {
            public void onDraw(Canvas paramAnonymousCanvas)
            {
              if (ChatActivity.this.mentionListView.getChildCount() <= 0) {}
              int j;
              for (;;)
              {
                return;
                if (!ChatActivity.this.mentionLayoutManager.getReverseLayout()) {
                  break;
                }
                i = ChatActivity.this.mentionListViewScrollOffsetY + AndroidUtilities.dp(2.0F);
                j = Theme.chat_composeShadowDrawable.getIntrinsicHeight();
                Theme.chat_composeShadowDrawable.setBounds(0, i + j, getMeasuredWidth(), i);
                Theme.chat_composeShadowDrawable.draw(paramAnonymousCanvas);
                paramAnonymousCanvas.drawRect(0.0F, 0.0F, getMeasuredWidth(), i, Theme.chat_composeBackgroundPaint);
              }
              if ((ChatActivity.this.mentionsAdapter.isBotContext()) && (ChatActivity.this.mentionsAdapter.isMediaLayout()) && (ChatActivity.this.mentionsAdapter.getBotContextSwitch() == null)) {}
              for (int i = ChatActivity.this.mentionListViewScrollOffsetY - AndroidUtilities.dp(4.0F);; i = ChatActivity.this.mentionListViewScrollOffsetY - AndroidUtilities.dp(2.0F))
              {
                j = i + Theme.chat_composeShadowDrawable.getIntrinsicHeight();
                Theme.chat_composeShadowDrawable.setBounds(0, i, getMeasuredWidth(), j);
                Theme.chat_composeShadowDrawable.draw(paramAnonymousCanvas);
                paramAnonymousCanvas.drawRect(0.0F, j, getMeasuredWidth(), getMeasuredHeight(), Theme.chat_composeBackgroundPaint);
                break;
              }
            }
            
            public void requestLayout()
            {
              if (ChatActivity.this.mentionListViewIgnoreLayout) {}
              for (;;)
              {
                return;
                super.requestLayout();
              }
            }
          };
          this.mentionContainer.setVisibility(8);
          this.mentionContainer.setWillNotDraw(false);
          this.contentView.addView(this.mentionContainer, LayoutHelper.createFrame(-1, 110, 83));
          this.mentionListView = new RecyclerListView(paramContext)
          {
            private int lastHeight;
            private int lastWidth;
            
            public boolean onInterceptTouchEvent(MotionEvent paramAnonymousMotionEvent)
            {
              boolean bool1 = false;
              boolean bool2;
              if (ChatActivity.this.mentionLayoutManager.getReverseLayout())
              {
                if ((ChatActivity.this.mentionListViewIsScrolling) || (ChatActivity.this.mentionListViewScrollOffsetY == 0) || (paramAnonymousMotionEvent.getY() <= ChatActivity.this.mentionListViewScrollOffsetY)) {
                  break label93;
                }
                bool2 = bool1;
              }
              for (;;)
              {
                return bool2;
                if ((!ChatActivity.this.mentionListViewIsScrolling) && (ChatActivity.this.mentionListViewScrollOffsetY != 0))
                {
                  bool2 = bool1;
                  if (paramAnonymousMotionEvent.getY() < ChatActivity.this.mentionListViewScrollOffsetY) {}
                }
                else
                {
                  label93:
                  boolean bool3 = StickerPreviewViewer.getInstance().onInterceptTouchEvent(paramAnonymousMotionEvent, ChatActivity.this.mentionListView, 0, null);
                  if (!super.onInterceptTouchEvent(paramAnonymousMotionEvent))
                  {
                    bool2 = bool1;
                    if (!bool3) {}
                  }
                  else
                  {
                    bool2 = true;
                  }
                }
              }
            }
            
            protected void onLayout(boolean paramAnonymousBoolean, int paramAnonymousInt1, int paramAnonymousInt2, int paramAnonymousInt3, int paramAnonymousInt4)
            {
              int i = paramAnonymousInt3 - paramAnonymousInt1;
              int j = paramAnonymousInt4 - paramAnonymousInt2;
              int k = -1;
              int m = 0;
              int n = k;
              int i1 = m;
              if (!ChatActivity.this.mentionLayoutManager.getReverseLayout())
              {
                n = k;
                i1 = m;
                if (ChatActivity.this.mentionListView != null)
                {
                  n = k;
                  i1 = m;
                  if (ChatActivity.this.mentionListViewLastViewPosition >= 0)
                  {
                    n = k;
                    i1 = m;
                    if (i == this.lastWidth)
                    {
                      n = k;
                      i1 = m;
                      if (j - this.lastHeight != 0)
                      {
                        n = ChatActivity.this.mentionListViewLastViewPosition;
                        i1 = ChatActivity.this.mentionListViewLastViewTop + j - this.lastHeight - getPaddingTop();
                      }
                    }
                  }
                }
              }
              super.onLayout(paramAnonymousBoolean, paramAnonymousInt1, paramAnonymousInt2, paramAnonymousInt3, paramAnonymousInt4);
              if (n != -1)
              {
                ChatActivity.access$8502(ChatActivity.this, true);
                if ((!ChatActivity.this.mentionsAdapter.isBotContext()) || (!ChatActivity.this.mentionsAdapter.isMediaLayout())) {
                  break label247;
                }
                ChatActivity.this.mentionGridLayoutManager.scrollToPositionWithOffset(n, i1);
              }
              for (;;)
              {
                super.onLayout(false, paramAnonymousInt1, paramAnonymousInt2, paramAnonymousInt3, paramAnonymousInt4);
                ChatActivity.access$8502(ChatActivity.this, false);
                this.lastHeight = j;
                this.lastWidth = i;
                ChatActivity.this.mentionListViewUpdateLayout();
                return;
                label247:
                ChatActivity.this.mentionLayoutManager.scrollToPositionWithOffset(n, i1);
              }
            }
            
            public boolean onTouchEvent(MotionEvent paramAnonymousMotionEvent)
            {
              boolean bool = false;
              if (ChatActivity.this.mentionLayoutManager.getReverseLayout()) {
                if ((ChatActivity.this.mentionListViewIsScrolling) || (ChatActivity.this.mentionListViewScrollOffsetY == 0) || (paramAnonymousMotionEvent.getY() <= ChatActivity.this.mentionListViewScrollOffsetY)) {
                  break label89;
                }
              }
              for (;;)
              {
                return bool;
                if ((ChatActivity.this.mentionListViewIsScrolling) || (ChatActivity.this.mentionListViewScrollOffsetY == 0) || (paramAnonymousMotionEvent.getY() >= ChatActivity.this.mentionListViewScrollOffsetY)) {
                  label89:
                  bool = super.onTouchEvent(paramAnonymousMotionEvent);
                }
              }
            }
            
            public void requestLayout()
            {
              if (ChatActivity.this.mentionListViewIgnoreLayout) {}
              for (;;)
              {
                return;
                super.requestLayout();
              }
            }
          };
          this.mentionListView.setOnTouchListener(new View.OnTouchListener()
          {
            public boolean onTouch(View paramAnonymousView, MotionEvent paramAnonymousMotionEvent)
            {
              return StickerPreviewViewer.getInstance().onTouch(paramAnonymousMotionEvent, ChatActivity.this.mentionListView, 0, ChatActivity.this.mentionsOnItemClickListener, null);
            }
          });
          this.mentionListView.setTag(Integer.valueOf(2));
          this.mentionLayoutManager = new LinearLayoutManager(paramContext)
          {
            public boolean supportsPredictiveItemAnimations()
            {
              return false;
            }
          };
          this.mentionLayoutManager.setOrientation(1);
          this.mentionGridLayoutManager = new ExtendedGridLayoutManager(paramContext, 100)
          {
            private Size size = new Size();
            
            protected int getFlowItemCount()
            {
              if (ChatActivity.this.mentionsAdapter.getBotContextSwitch() != null) {}
              for (int i = getItemCount() - 1;; i = super.getFlowItemCount()) {
                return i;
              }
            }
            
            protected Size getSizeForItem(int paramAnonymousInt)
            {
              float f1 = 100.0F;
              int i = paramAnonymousInt;
              if (ChatActivity.this.mentionsAdapter.getBotContextSwitch() != null) {
                i = paramAnonymousInt + 1;
              }
              Object localObject1 = ChatActivity.this.mentionsAdapter.getItem(i);
              Object localObject2;
              float f2;
              if ((localObject1 instanceof TLRPC.BotInlineResult))
              {
                localObject1 = (TLRPC.BotInlineResult)localObject1;
                if (((TLRPC.BotInlineResult)localObject1).document == null) {
                  break label231;
                }
                localObject2 = this.size;
                if (((TLRPC.BotInlineResult)localObject1).document.thumb == null) {
                  break label218;
                }
                f2 = ((TLRPC.BotInlineResult)localObject1).document.thumb.w;
                ((Size)localObject2).width = f2;
                localObject2 = this.size;
                f2 = f1;
                if (((TLRPC.BotInlineResult)localObject1).document.thumb != null) {
                  f2 = ((TLRPC.BotInlineResult)localObject1).document.thumb.h;
                }
                ((Size)localObject2).height = f2;
                paramAnonymousInt = 0;
                label139:
                if (paramAnonymousInt < ((TLRPC.BotInlineResult)localObject1).document.attributes.size())
                {
                  localObject2 = (TLRPC.DocumentAttribute)((TLRPC.BotInlineResult)localObject1).document.attributes.get(paramAnonymousInt);
                  if ((!(localObject2 instanceof TLRPC.TL_documentAttributeImageSize)) && (!(localObject2 instanceof TLRPC.TL_documentAttributeVideo))) {
                    break label225;
                  }
                  this.size.width = ((TLRPC.DocumentAttribute)localObject2).w;
                  this.size.height = ((TLRPC.DocumentAttribute)localObject2).h;
                }
              }
              label218:
              label225:
              label231:
              label322:
              label415:
              for (;;)
              {
                return this.size;
                f2 = 100.0F;
                break;
                paramAnonymousInt++;
                break label139;
                if (((TLRPC.BotInlineResult)localObject1).content != null) {
                  for (paramAnonymousInt = 0;; paramAnonymousInt++)
                  {
                    if (paramAnonymousInt >= ((TLRPC.BotInlineResult)localObject1).content.attributes.size()) {
                      break label322;
                    }
                    localObject2 = (TLRPC.DocumentAttribute)((TLRPC.BotInlineResult)localObject1).content.attributes.get(paramAnonymousInt);
                    if (((localObject2 instanceof TLRPC.TL_documentAttributeImageSize)) || ((localObject2 instanceof TLRPC.TL_documentAttributeVideo)))
                    {
                      this.size.width = ((TLRPC.DocumentAttribute)localObject2).w;
                      this.size.height = ((TLRPC.DocumentAttribute)localObject2).h;
                      break;
                    }
                  }
                } else if (((TLRPC.BotInlineResult)localObject1).thumb != null) {
                  for (paramAnonymousInt = 0;; paramAnonymousInt++)
                  {
                    if (paramAnonymousInt >= ((TLRPC.BotInlineResult)localObject1).content.attributes.size()) {
                      break label415;
                    }
                    localObject2 = (TLRPC.DocumentAttribute)((TLRPC.BotInlineResult)localObject1).content.attributes.get(paramAnonymousInt);
                    if (((localObject2 instanceof TLRPC.TL_documentAttributeImageSize)) || ((localObject2 instanceof TLRPC.TL_documentAttributeVideo)))
                    {
                      this.size.width = ((TLRPC.DocumentAttribute)localObject2).w;
                      this.size.height = ((TLRPC.DocumentAttribute)localObject2).h;
                      break;
                    }
                  }
                }
              }
            }
          };
          this.mentionGridLayoutManager.setSpanSizeLookup(new GridLayoutManager.SpanSizeLookup()
          {
            public int getSpanSize(int paramAnonymousInt)
            {
              if ((ChatActivity.this.mentionsAdapter.getItem(paramAnonymousInt) instanceof TLRPC.TL_inlineBotSwitchPM)) {}
              int i;
              for (paramAnonymousInt = 100;; paramAnonymousInt = ChatActivity.this.mentionGridLayoutManager.getSpanSizeForItem(i))
              {
                return paramAnonymousInt;
                i = paramAnonymousInt;
                if (ChatActivity.this.mentionsAdapter.getBotContextSwitch() != null) {
                  i = paramAnonymousInt - 1;
                }
              }
            }
          });
          this.mentionListView.addItemDecoration(new RecyclerView.ItemDecoration()
          {
            public void getItemOffsets(android.graphics.Rect paramAnonymousRect, View paramAnonymousView, RecyclerView paramAnonymousRecyclerView, RecyclerView.State paramAnonymousState)
            {
              int i = 0;
              paramAnonymousRect.left = 0;
              paramAnonymousRect.right = 0;
              paramAnonymousRect.top = 0;
              paramAnonymousRect.bottom = 0;
              if (paramAnonymousRecyclerView.getLayoutManager() == ChatActivity.this.mentionGridLayoutManager)
              {
                j = paramAnonymousRecyclerView.getChildAdapterPosition(paramAnonymousView);
                if (ChatActivity.this.mentionsAdapter.getBotContextSwitch() == null) {
                  break label128;
                }
                if (j != 0) {}
              }
              else
              {
                return;
              }
              int k = j - 1;
              int j = k;
              if (!ChatActivity.this.mentionGridLayoutManager.isFirstRow(k))
              {
                paramAnonymousRect.top = AndroidUtilities.dp(2.0F);
                j = k;
              }
              label100:
              if (ChatActivity.this.mentionGridLayoutManager.isLastInRow(j)) {}
              for (j = i;; j = AndroidUtilities.dp(2.0F))
              {
                paramAnonymousRect.right = j;
                break;
                label128:
                paramAnonymousRect.top = AndroidUtilities.dp(2.0F);
                break label100;
              }
            }
          });
          this.mentionListView.setItemAnimator(null);
          this.mentionListView.setLayoutAnimation(null);
          this.mentionListView.setClipToPadding(false);
          this.mentionListView.setLayoutManager(this.mentionLayoutManager);
          this.mentionListView.setOverScrollMode(2);
          this.mentionContainer.addView(this.mentionListView, LayoutHelper.createFrame(-1, -1.0F));
          localObject2 = this.mentionListView;
          localObject3 = new MentionsAdapter(paramContext, false, this.dialog_id, new MentionsAdapter.MentionsAdapterDelegate()
          {
            public void needChangePanelVisibility(boolean paramAnonymousBoolean)
            {
              if ((ChatActivity.this.mentionsAdapter.isBotContext()) && (ChatActivity.this.mentionsAdapter.isMediaLayout()))
              {
                ChatActivity.this.mentionListView.setLayoutManager(ChatActivity.this.mentionGridLayoutManager);
                boolean bool = paramAnonymousBoolean;
                if (paramAnonymousBoolean)
                {
                  bool = paramAnonymousBoolean;
                  if (ChatActivity.this.bottomOverlay.getVisibility() == 0) {
                    bool = false;
                  }
                }
                if (!bool) {
                  break label519;
                }
                if (ChatActivity.this.mentionListAnimation != null)
                {
                  ChatActivity.this.mentionListAnimation.cancel();
                  ChatActivity.access$16502(ChatActivity.this, null);
                }
                if (ChatActivity.this.mentionContainer.getVisibility() != 0) {
                  break label144;
                }
                ChatActivity.this.mentionContainer.setAlpha(1.0F);
              }
              for (;;)
              {
                return;
                ChatActivity.this.mentionListView.setLayoutManager(ChatActivity.this.mentionLayoutManager);
                break;
                label144:
                if ((ChatActivity.this.mentionsAdapter.isBotContext()) && (ChatActivity.this.mentionsAdapter.isMediaLayout())) {
                  ChatActivity.this.mentionGridLayoutManager.scrollToPositionWithOffset(0, 10000);
                }
                for (;;)
                {
                  if ((!ChatActivity.this.allowStickersPanel) || ((ChatActivity.this.mentionsAdapter.isBotContext()) && (!ChatActivity.this.allowContextBotPanel) && (!ChatActivity.this.allowContextBotPanelSecond))) {
                    break label494;
                  }
                  if ((ChatActivity.this.currentEncryptedChat != null) && (ChatActivity.this.mentionsAdapter.isBotContext()))
                  {
                    SharedPreferences localSharedPreferences = MessagesController.getGlobalMainSettings();
                    if (!localSharedPreferences.getBoolean("secretbot", false))
                    {
                      AlertDialog.Builder localBuilder = new AlertDialog.Builder(ChatActivity.this.getParentActivity());
                      localBuilder.setTitle(LocaleController.getString("AppName", NUM));
                      localBuilder.setMessage(LocaleController.getString("SecretChatContextBotAlert", NUM));
                      localBuilder.setPositiveButton(LocaleController.getString("OK", NUM), null);
                      ChatActivity.this.showDialog(localBuilder.create());
                      localSharedPreferences.edit().putBoolean("secretbot", true).commit();
                    }
                  }
                  ChatActivity.this.mentionContainer.setVisibility(0);
                  ChatActivity.this.mentionContainer.setTag(null);
                  ChatActivity.access$16502(ChatActivity.this, new AnimatorSet());
                  ChatActivity.this.mentionListAnimation.playTogether(new Animator[] { ObjectAnimator.ofFloat(ChatActivity.this.mentionContainer, "alpha", new float[] { 0.0F, 1.0F }) });
                  ChatActivity.this.mentionListAnimation.addListener(new AnimatorListenerAdapter()
                  {
                    public void onAnimationCancel(Animator paramAnonymous2Animator)
                    {
                      if ((ChatActivity.this.mentionListAnimation != null) && (ChatActivity.this.mentionListAnimation.equals(paramAnonymous2Animator))) {
                        ChatActivity.access$16502(ChatActivity.this, null);
                      }
                    }
                    
                    public void onAnimationEnd(Animator paramAnonymous2Animator)
                    {
                      if ((ChatActivity.this.mentionListAnimation != null) && (ChatActivity.this.mentionListAnimation.equals(paramAnonymous2Animator))) {
                        ChatActivity.access$16502(ChatActivity.this, null);
                      }
                    }
                  });
                  ChatActivity.this.mentionListAnimation.setDuration(200L);
                  ChatActivity.this.mentionListAnimation.start();
                  break;
                  ChatActivity.this.mentionLayoutManager.scrollToPositionWithOffset(0, 10000);
                }
                label494:
                ChatActivity.this.mentionContainer.setAlpha(1.0F);
                ChatActivity.this.mentionContainer.setVisibility(4);
                continue;
                label519:
                if (ChatActivity.this.mentionListAnimation != null)
                {
                  ChatActivity.this.mentionListAnimation.cancel();
                  ChatActivity.access$16502(ChatActivity.this, null);
                }
                if (ChatActivity.this.mentionContainer.getVisibility() != 8) {
                  if (ChatActivity.this.allowStickersPanel)
                  {
                    ChatActivity.access$16502(ChatActivity.this, new AnimatorSet());
                    ChatActivity.this.mentionListAnimation.playTogether(new Animator[] { ObjectAnimator.ofFloat(ChatActivity.this.mentionContainer, "alpha", new float[] { 0.0F }) });
                    ChatActivity.this.mentionListAnimation.addListener(new AnimatorListenerAdapter()
                    {
                      public void onAnimationCancel(Animator paramAnonymous2Animator)
                      {
                        if ((ChatActivity.this.mentionListAnimation != null) && (ChatActivity.this.mentionListAnimation.equals(paramAnonymous2Animator))) {
                          ChatActivity.access$16502(ChatActivity.this, null);
                        }
                      }
                      
                      public void onAnimationEnd(Animator paramAnonymous2Animator)
                      {
                        if ((ChatActivity.this.mentionListAnimation != null) && (ChatActivity.this.mentionListAnimation.equals(paramAnonymous2Animator)))
                        {
                          ChatActivity.this.mentionContainer.setVisibility(8);
                          ChatActivity.this.mentionContainer.setTag(null);
                          ChatActivity.access$16502(ChatActivity.this, null);
                        }
                      }
                    });
                    ChatActivity.this.mentionListAnimation.setDuration(200L);
                    ChatActivity.this.mentionListAnimation.start();
                  }
                  else
                  {
                    ChatActivity.this.mentionContainer.setTag(null);
                    ChatActivity.this.mentionContainer.setVisibility(8);
                  }
                }
              }
            }
            
            public void onContextClick(TLRPC.BotInlineResult paramAnonymousBotInlineResult)
            {
              if ((ChatActivity.this.getParentActivity() == null) || (paramAnonymousBotInlineResult.content == null)) {}
              for (;;)
              {
                return;
                if ((paramAnonymousBotInlineResult.type.equals("video")) || (paramAnonymousBotInlineResult.type.equals("web_player_video")))
                {
                  int[] arrayOfInt = MessageObject.getInlineResultWidthAndHeight(paramAnonymousBotInlineResult);
                  Activity localActivity = ChatActivity.this.getParentActivity();
                  if (paramAnonymousBotInlineResult.title != null) {}
                  for (String str = paramAnonymousBotInlineResult.title;; str = "")
                  {
                    EmbedBottomSheet.show(localActivity, str, paramAnonymousBotInlineResult.description, paramAnonymousBotInlineResult.content.url, paramAnonymousBotInlineResult.content.url, arrayOfInt[0], arrayOfInt[1]);
                    break;
                  }
                }
                Browser.openUrl(ChatActivity.this.getParentActivity(), paramAnonymousBotInlineResult.content.url);
              }
            }
            
            public void onContextSearch(boolean paramAnonymousBoolean)
            {
              if (ChatActivity.this.chatActivityEnterView != null)
              {
                ChatActivity.this.chatActivityEnterView.setCaption(ChatActivity.this.mentionsAdapter.getBotCaption());
                ChatActivity.this.chatActivityEnterView.showContextProgress(paramAnonymousBoolean);
              }
            }
          });
          this.mentionsAdapter = ((MentionsAdapter)localObject3);
          ((RecyclerListView)localObject2).setAdapter((RecyclerView.Adapter)localObject3);
          if ((!ChatObject.isChannel(this.currentChat)) || ((this.currentChat != null) && (this.currentChat.megagroup))) {
            this.mentionsAdapter.setBotInfo(this.botInfo);
          }
          this.mentionsAdapter.setParentFragment(this);
          this.mentionsAdapter.setChatInfo(this.info);
          localObject2 = this.mentionsAdapter;
          if (this.currentChat == null) {
            break label7416;
          }
          bool1 = true;
          ((MentionsAdapter)localObject2).setNeedUsernames(bool1);
          localObject2 = this.mentionsAdapter;
          if ((this.currentEncryptedChat != null) && (AndroidUtilities.getPeerLayerVersion(this.currentEncryptedChat.layer) < 46)) {
            break label7421;
          }
          bool1 = true;
          ((MentionsAdapter)localObject2).setNeedBotContext(bool1);
          localObject2 = this.mentionsAdapter;
          if (this.currentChat == null) {
            break label7426;
          }
          i = this.botsCount;
          ((MentionsAdapter)localObject2).setBotsCount(i);
          localObject3 = this.mentionListView;
          localObject2 = new RecyclerListView.OnItemClickListener()
          {
            public void onItemClick(View paramAnonymousView, int paramAnonymousInt)
            {
              if (ChatActivity.this.mentionsAdapter.isBannedInline()) {}
              for (;;)
              {
                return;
                paramAnonymousView = ChatActivity.this.mentionsAdapter.getItem(paramAnonymousInt);
                int i = ChatActivity.this.mentionsAdapter.getResultStartPosition();
                int j = ChatActivity.this.mentionsAdapter.getResultLength();
                if ((paramAnonymousView instanceof TLRPC.User))
                {
                  Object localObject;
                  if ((ChatActivity.this.searchingForUser) && (ChatActivity.this.searchContainer.getVisibility() == 0))
                  {
                    ChatActivity.access$5102(ChatActivity.this, (TLRPC.User)paramAnonymousView);
                    if (ChatActivity.this.searchingUserMessages != null)
                    {
                      localObject = ChatActivity.this.searchingUserMessages.first_name;
                      paramAnonymousView = (View)localObject;
                      if (TextUtils.isEmpty((CharSequence)localObject)) {
                        paramAnonymousView = ChatActivity.this.searchingUserMessages.last_name;
                      }
                      ChatActivity.access$4802(ChatActivity.this, false);
                      localObject = LocaleController.getString("SearchFrom", NUM);
                      paramAnonymousView = new SpannableString((String)localObject + " " + paramAnonymousView);
                      paramAnonymousView.setSpan(new ForegroundColorSpan(Theme.getColor("actionBarDefaultSubtitle")), ((String)localObject).length() + 1, paramAnonymousView.length(), 33);
                      ChatActivity.this.searchItem.setSearchFieldCaption(paramAnonymousView);
                      ChatActivity.this.mentionsAdapter.searchUsernameOrHashtag(null, 0, null, false);
                      ChatActivity.this.searchItem.getSearchField().setHint(null);
                      ChatActivity.this.searchItem.clearSearchText();
                      DataQuery.getInstance(ChatActivity.this.currentAccount).searchMessagesInChat("", ChatActivity.this.dialog_id, ChatActivity.this.mergeDialogId, ChatActivity.this.classGuid, 0, ChatActivity.this.searchingUserMessages);
                    }
                  }
                  else
                  {
                    paramAnonymousView = (TLRPC.User)paramAnonymousView;
                    if (paramAnonymousView != null) {
                      if (paramAnonymousView.username != null)
                      {
                        ChatActivity.this.chatActivityEnterView.replaceWithText(i, j, "@" + paramAnonymousView.username + " ", false);
                      }
                      else
                      {
                        localObject = UserObject.getFirstName(paramAnonymousView);
                        localObject = new SpannableString((String)localObject + " ");
                        ((Spannable)localObject).setSpan(new URLSpanUserMention("" + paramAnonymousView.id, 1), 0, ((Spannable)localObject).length(), 33);
                        ChatActivity.this.chatActivityEnterView.replaceWithText(i, j, (CharSequence)localObject, false);
                      }
                    }
                  }
                }
                else if ((paramAnonymousView instanceof String))
                {
                  if (ChatActivity.this.mentionsAdapter.isBotCommands())
                  {
                    SendMessagesHelper.getInstance(ChatActivity.this.currentAccount).sendMessage((String)paramAnonymousView, ChatActivity.this.dialog_id, ChatActivity.this.replyingMessageObject, null, false, null, null, null);
                    ChatActivity.this.chatActivityEnterView.setFieldText("");
                    ChatActivity.this.showReplyPanel(false, null, null, null, false);
                  }
                  else
                  {
                    ChatActivity.this.chatActivityEnterView.replaceWithText(i, j, paramAnonymousView + " ", false);
                  }
                }
                else if ((paramAnonymousView instanceof TLRPC.BotInlineResult))
                {
                  if (ChatActivity.this.chatActivityEnterView.getFieldText() != null)
                  {
                    paramAnonymousView = (TLRPC.BotInlineResult)paramAnonymousView;
                    if (((paramAnonymousView.type.equals("photo")) && ((paramAnonymousView.photo != null) || (paramAnonymousView.content != null))) || ((paramAnonymousView.type.equals("gif")) && ((paramAnonymousView.document != null) || (paramAnonymousView.content != null))) || ((paramAnonymousView.type.equals("video")) && (paramAnonymousView.document != null)))
                    {
                      paramAnonymousView = ChatActivity.access$302(ChatActivity.this, new ArrayList(ChatActivity.this.mentionsAdapter.getSearchResultBotContext()));
                      PhotoViewer.getInstance().setParentActivity(ChatActivity.this.getParentActivity());
                      PhotoViewer.getInstance().openPhotoForSelect(paramAnonymousView, ChatActivity.this.mentionsAdapter.getItemPosition(paramAnonymousInt), 3, ChatActivity.this.botContextProvider, null);
                    }
                    else
                    {
                      ChatActivity.this.sendBotInlineResult(paramAnonymousView);
                    }
                  }
                }
                else if ((paramAnonymousView instanceof TLRPC.TL_inlineBotSwitchPM))
                {
                  ChatActivity.this.processInlineBotContextPM((TLRPC.TL_inlineBotSwitchPM)paramAnonymousView);
                }
                else if ((paramAnonymousView instanceof EmojiSuggestion))
                {
                  paramAnonymousView = ((EmojiSuggestion)paramAnonymousView).emoji;
                  ChatActivity.this.chatActivityEnterView.addEmojiToRecent(paramAnonymousView);
                  ChatActivity.this.chatActivityEnterView.replaceWithText(i, j, paramAnonymousView, true);
                }
              }
            }
          };
          this.mentionsOnItemClickListener = ((RecyclerListView.OnItemClickListener)localObject2);
          ((RecyclerListView)localObject3).setOnItemClickListener((RecyclerListView.OnItemClickListener)localObject2);
          this.mentionListView.setOnItemLongClickListener(new RecyclerListView.OnItemLongClickListener()
          {
            public boolean onItemClick(View paramAnonymousView, int paramAnonymousInt)
            {
              boolean bool1 = false;
              boolean bool2 = false;
              boolean bool3 = bool2;
              if (ChatActivity.this.getParentActivity() != null)
              {
                if (ChatActivity.this.mentionsAdapter.isLongClickEnabled()) {
                  break label39;
                }
                bool3 = bool2;
              }
              for (;;)
              {
                return bool3;
                label39:
                Object localObject = ChatActivity.this.mentionsAdapter.getItem(paramAnonymousInt);
                bool3 = bool2;
                if ((localObject instanceof String)) {
                  if (ChatActivity.this.mentionsAdapter.isBotCommands())
                  {
                    bool3 = bool2;
                    if (URLSpanBotCommand.enabled)
                    {
                      ChatActivity.this.chatActivityEnterView.setFieldText("");
                      paramAnonymousView = ChatActivity.this.chatActivityEnterView;
                      localObject = (String)localObject;
                      bool3 = bool1;
                      if (ChatActivity.this.currentChat != null)
                      {
                        bool3 = bool1;
                        if (ChatActivity.this.currentChat.megagroup) {
                          bool3 = true;
                        }
                      }
                      paramAnonymousView.setCommand(null, (String)localObject, true, bool3);
                      bool3 = true;
                    }
                  }
                  else
                  {
                    paramAnonymousView = new AlertDialog.Builder(ChatActivity.this.getParentActivity());
                    paramAnonymousView.setTitle(LocaleController.getString("AppName", NUM));
                    paramAnonymousView.setMessage(LocaleController.getString("ClearSearch", NUM));
                    paramAnonymousView.setPositiveButton(LocaleController.getString("ClearButton", NUM).toUpperCase(), new DialogInterface.OnClickListener()
                    {
                      public void onClick(DialogInterface paramAnonymous2DialogInterface, int paramAnonymous2Int)
                      {
                        ChatActivity.this.mentionsAdapter.clearRecentHashtags();
                      }
                    });
                    paramAnonymousView.setNegativeButton(LocaleController.getString("Cancel", NUM), null);
                    ChatActivity.this.showDialog(paramAnonymousView.create());
                    bool3 = true;
                  }
                }
              }
            }
          });
          this.mentionListView.setOnScrollListener(new RecyclerView.OnScrollListener()
          {
            public void onScrollStateChanged(RecyclerView paramAnonymousRecyclerView, int paramAnonymousInt)
            {
              boolean bool = true;
              paramAnonymousRecyclerView = ChatActivity.this;
              if (paramAnonymousInt == 1) {}
              for (;;)
              {
                ChatActivity.access$15902(paramAnonymousRecyclerView, bool);
                return;
                bool = false;
              }
            }
            
            public void onScrolled(RecyclerView paramAnonymousRecyclerView, int paramAnonymousInt1, int paramAnonymousInt2)
            {
              if ((ChatActivity.this.mentionsAdapter.isBotContext()) && (ChatActivity.this.mentionsAdapter.isMediaLayout()))
              {
                paramAnonymousInt1 = ChatActivity.this.mentionGridLayoutManager.findLastVisibleItemPosition();
                if (paramAnonymousInt1 != -1) {
                  break label96;
                }
              }
              label96:
              for (paramAnonymousInt2 = 0;; paramAnonymousInt2 = paramAnonymousInt1)
              {
                if ((paramAnonymousInt2 > 0) && (paramAnonymousInt1 > ChatActivity.this.mentionsAdapter.getItemCount() - 5)) {
                  ChatActivity.this.mentionsAdapter.searchForContextBotForNextOffset();
                }
                ChatActivity.this.mentionListViewUpdateLayout();
                return;
                paramAnonymousInt1 = ChatActivity.this.mentionLayoutManager.findLastVisibleItemPosition();
                break;
              }
            }
          });
        }
        this.pagedownButtonImage = new ImageView(paramContext);
        this.pagedownButtonImage.setImageResource(NUM);
        this.pagedownButtonImage.setScaleType(ImageView.ScaleType.CENTER);
        this.pagedownButtonImage.setColorFilter(new PorterDuffColorFilter(Theme.getColor("chat_goDownButtonIcon"), PorterDuff.Mode.MULTIPLY));
        this.pagedownButtonImage.setPadding(0, AndroidUtilities.dp(2.0F), 0, 0);
        localObject3 = Theme.createCircleDrawable(AndroidUtilities.dp(42.0F), Theme.getColor("chat_goDownButton"));
        localObject2 = paramContext.getResources().getDrawable(NUM).mutate();
        ((Drawable)localObject2).setColorFilter(new PorterDuffColorFilter(Theme.getColor("chat_goDownButtonShadow"), PorterDuff.Mode.MULTIPLY));
        localObject2 = new CombinedDrawable((Drawable)localObject2, (Drawable)localObject3, 0, 0);
        ((CombinedDrawable)localObject2).setIconSize(AndroidUtilities.dp(42.0F), AndroidUtilities.dp(42.0F));
        this.pagedownButtonImage.setBackgroundDrawable((Drawable)localObject2);
        this.pagedownButton.addView(this.pagedownButtonImage, LayoutHelper.createFrame(46, 46, 81));
        this.pagedownButtonCounter = new TextView(paramContext);
        this.pagedownButtonCounter.setVisibility(4);
        this.pagedownButtonCounter.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
        this.pagedownButtonCounter.setTextSize(1, 13.0F);
        this.pagedownButtonCounter.setTextColor(Theme.getColor("chat_goDownButtonCounter"));
        this.pagedownButtonCounter.setGravity(17);
        this.pagedownButtonCounter.setBackgroundDrawable(Theme.createRoundRectDrawable(AndroidUtilities.dp(11.5F), Theme.getColor("chat_goDownButtonCounterBackground")));
        this.pagedownButtonCounter.setMinWidth(AndroidUtilities.dp(23.0F));
        this.pagedownButtonCounter.setPadding(AndroidUtilities.dp(8.0F), 0, AndroidUtilities.dp(8.0F), AndroidUtilities.dp(1.0F));
        this.pagedownButton.addView(this.pagedownButtonCounter, LayoutHelper.createFrame(-2, 23, 49));
        this.mentiondownButtonImage = new ImageView(paramContext);
        this.mentiondownButtonImage.setImageResource(NUM);
        this.mentiondownButtonImage.setScaleType(ImageView.ScaleType.CENTER);
        this.mentiondownButtonImage.setColorFilter(new PorterDuffColorFilter(Theme.getColor("chat_goDownButtonIcon"), PorterDuff.Mode.MULTIPLY));
        this.mentiondownButtonImage.setPadding(0, AndroidUtilities.dp(2.0F), 0, 0);
        localObject2 = Theme.createCircleDrawable(AndroidUtilities.dp(42.0F), Theme.getColor("chat_goDownButton"));
        localObject3 = paramContext.getResources().getDrawable(NUM).mutate();
        ((Drawable)localObject3).setColorFilter(new PorterDuffColorFilter(Theme.getColor("chat_goDownButtonShadow"), PorterDuff.Mode.MULTIPLY));
        localObject2 = new CombinedDrawable((Drawable)localObject3, (Drawable)localObject2, 0, 0);
        ((CombinedDrawable)localObject2).setIconSize(AndroidUtilities.dp(42.0F), AndroidUtilities.dp(42.0F));
        this.mentiondownButtonImage.setBackgroundDrawable((Drawable)localObject2);
        this.mentiondownButton.addView(this.mentiondownButtonImage, LayoutHelper.createFrame(46, 46, 83));
        this.mentiondownButtonCounter = new TextView(paramContext);
        this.mentiondownButtonCounter.setVisibility(4);
        this.mentiondownButtonCounter.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
        this.mentiondownButtonCounter.setTextSize(1, 13.0F);
        this.mentiondownButtonCounter.setTextColor(Theme.getColor("chat_goDownButtonCounter"));
        this.mentiondownButtonCounter.setGravity(17);
        this.mentiondownButtonCounter.setBackgroundDrawable(Theme.createRoundRectDrawable(AndroidUtilities.dp(11.5F), Theme.getColor("chat_goDownButtonCounterBackground")));
        this.mentiondownButtonCounter.setMinWidth(AndroidUtilities.dp(23.0F));
        this.mentiondownButtonCounter.setPadding(AndroidUtilities.dp(8.0F), 0, AndroidUtilities.dp(8.0F), AndroidUtilities.dp(1.0F));
        this.mentiondownButton.addView(this.mentiondownButtonCounter, LayoutHelper.createFrame(-2, 23, 49));
        if ((!AndroidUtilities.isTablet()) || (AndroidUtilities.isSmallTablet()))
        {
          localObject3 = this.contentView;
          localObject2 = new FragmentContextView(paramContext, this, true);
          this.fragmentLocationContextView = ((FragmentContextView)localObject2);
          ((SizeNotifierFrameLayout)localObject3).addView((View)localObject2, LayoutHelper.createFrame(-1, 39.0F, 51, 0.0F, -36.0F, 0.0F, 0.0F));
          localObject3 = this.contentView;
          localObject2 = new FragmentContextView(paramContext, this, false);
          this.fragmentContextView = ((FragmentContextView)localObject2);
          ((SizeNotifierFrameLayout)localObject3).addView((View)localObject2, LayoutHelper.createFrame(-1, 39.0F, 51, 0.0F, -36.0F, 0.0F, 0.0F));
          this.fragmentContextView.setAdditionalContextView(this.fragmentLocationContextView);
          this.fragmentLocationContextView.setAdditionalContextView(this.fragmentContextView);
        }
        this.contentView.addView(this.actionBar);
        this.overlayView = new View(paramContext);
        this.overlayView.setOnTouchListener(new View.OnTouchListener()
        {
          public boolean onTouch(View paramAnonymousView, MotionEvent paramAnonymousMotionEvent)
          {
            if (paramAnonymousMotionEvent.getAction() == 0) {
              ChatActivity.this.checkRecordLocked();
            }
            ChatActivity.this.overlayView.getParent().requestDisallowInterceptTouchEvent(true);
            return true;
          }
        });
        this.contentView.addView(this.overlayView, LayoutHelper.createFrame(-1, -1, 51));
        this.overlayView.setVisibility(8);
        this.instantCameraView = new InstantCameraView(paramContext, this);
        this.contentView.addView(this.instantCameraView, LayoutHelper.createFrame(-1, -1, 51));
        this.chatActivityEnterView = new ChatActivityEnterView(getParentActivity(), this.contentView, this, true);
        this.chatActivityEnterView.setDialogId(this.dialog_id, this.currentAccount);
        this.chatActivityEnterView.setId(1000);
        this.chatActivityEnterView.setBotsCount(this.botsCount, this.hasBotsCommands);
        localObject2 = this.chatActivityEnterView;
        if ((this.currentEncryptedChat != null) && (AndroidUtilities.getPeerLayerVersion(this.currentEncryptedChat.layer) < 23)) {
          break label7431;
        }
        bool1 = true;
        if ((this.currentEncryptedChat != null) && (AndroidUtilities.getPeerLayerVersion(this.currentEncryptedChat.layer) < 46)) {
          break label7436;
        }
        bool2 = true;
        label5036:
        ((ChatActivityEnterView)localObject2).setAllowStickersAndGifs(bool1, bool2);
        this.contentView.addView(this.chatActivityEnterView, this.contentView.getChildCount() - 1, LayoutHelper.createFrame(-1, -2, 83));
        this.chatActivityEnterView.setDelegate(new ChatActivityEnterView.ChatActivityEnterViewDelegate()
        {
          public void didPressedAttachButton()
          {
            ChatActivity.this.openAttachMenu();
          }
          
          public void needChangeVideoPreviewState(int paramAnonymousInt, float paramAnonymousFloat)
          {
            if (ChatActivity.this.instantCameraView != null) {
              ChatActivity.this.instantCameraView.changeVideoPreviewState(paramAnonymousInt, paramAnonymousFloat);
            }
          }
          
          public void needSendTyping()
          {
            MessagesController.getInstance(ChatActivity.this.currentAccount).sendTyping(ChatActivity.this.dialog_id, 0, ChatActivity.this.classGuid);
          }
          
          public void needShowMediaBanHint()
          {
            ChatActivity.this.showMediaBannedHint();
          }
          
          public void needStartRecordAudio(int paramAnonymousInt)
          {
            View localView = ChatActivity.this.overlayView;
            if (paramAnonymousInt == 0) {}
            for (paramAnonymousInt = 8;; paramAnonymousInt = 0)
            {
              localView.setVisibility(paramAnonymousInt);
              return;
            }
          }
          
          public void needStartRecordVideo(int paramAnonymousInt)
          {
            if (ChatActivity.this.instantCameraView != null)
            {
              if (paramAnonymousInt != 0) {
                break label25;
              }
              ChatActivity.this.instantCameraView.showCamera();
            }
            for (;;)
            {
              return;
              label25:
              if ((paramAnonymousInt == 1) || (paramAnonymousInt == 3) || (paramAnonymousInt == 4)) {
                ChatActivity.this.instantCameraView.send(paramAnonymousInt);
              } else if (paramAnonymousInt == 2) {
                ChatActivity.this.instantCameraView.cancel();
              }
            }
          }
          
          public void onAttachButtonHidden()
          {
            if (ChatActivity.this.actionBar.isSearchFieldVisible()) {}
            for (;;)
            {
              return;
              if (ChatActivity.this.attachItem != null) {
                ChatActivity.this.attachItem.setVisibility(0);
              }
              if (ChatActivity.this.headerItem != null) {
                ChatActivity.this.headerItem.setVisibility(8);
              }
            }
          }
          
          public void onAttachButtonShow()
          {
            if (ChatActivity.this.actionBar.isSearchFieldVisible()) {}
            for (;;)
            {
              return;
              if (ChatActivity.this.attachItem != null) {
                ChatActivity.this.attachItem.setVisibility(8);
              }
              if (ChatActivity.this.headerItem != null) {
                ChatActivity.this.headerItem.setVisibility(0);
              }
            }
          }
          
          public void onMessageEditEnd(boolean paramAnonymousBoolean)
          {
            Object localObject;
            if (!paramAnonymousBoolean)
            {
              localObject = ChatActivity.this.mentionsAdapter;
              if ((ChatActivity.this.currentEncryptedChat != null) && (AndroidUtilities.getPeerLayerVersion(ChatActivity.this.currentEncryptedChat.layer) < 46)) {
                break label273;
              }
              paramAnonymousBoolean = true;
              ((MentionsAdapter)localObject).setNeedBotContext(paramAnonymousBoolean);
              ChatActivity.this.chatListView.setOnItemLongClickListener(ChatActivity.this.onItemLongClickListener);
              ChatActivity.this.chatListView.setOnItemClickListener(ChatActivity.this.onItemClickListener);
              ChatActivity.this.chatListView.setClickable(true);
              ChatActivity.this.chatListView.setLongClickable(true);
              ChatActivity.this.actionModeTitleContainer.setVisibility(8);
              ChatActivity.this.selectedMessagesCountTextView.setVisibility(0);
              localObject = ChatActivity.this.chatActivityEnterView;
              if ((ChatActivity.this.currentEncryptedChat != null) && (AndroidUtilities.getPeerLayerVersion(ChatActivity.this.currentEncryptedChat.layer) < 23)) {
                break label278;
              }
              paramAnonymousBoolean = true;
              label164:
              if ((ChatActivity.this.currentEncryptedChat != null) && (AndroidUtilities.getPeerLayerVersion(ChatActivity.this.currentEncryptedChat.layer) < 46)) {
                break label283;
              }
            }
            label273:
            label278:
            label283:
            for (boolean bool = true;; bool = false)
            {
              ((ChatActivityEnterView)localObject).setAllowStickersAndGifs(paramAnonymousBoolean, bool);
              if (ChatActivity.this.editingMessageObjectReqId != 0)
              {
                ConnectionsManager.getInstance(ChatActivity.this.currentAccount).cancelRequest(ChatActivity.this.editingMessageObjectReqId, true);
                ChatActivity.access$18602(ChatActivity.this, 0);
              }
              ChatActivity.this.actionBar.hideActionMode();
              ChatActivity.this.updatePinnedMessageView(true);
              ChatActivity.this.updateBottomOverlay();
              ChatActivity.this.updateVisibleRows();
              return;
              paramAnonymousBoolean = false;
              break;
              paramAnonymousBoolean = false;
              break label164;
            }
          }
          
          public void onMessageSend(CharSequence paramAnonymousCharSequence)
          {
            ChatActivity.this.moveScrollToLastMessage();
            ChatActivity.this.showReplyPanel(false, null, null, null, false);
            if (ChatActivity.this.mentionsAdapter != null) {
              ChatActivity.this.mentionsAdapter.addHashtagsFromMessage(paramAnonymousCharSequence);
            }
          }
          
          public void onPreAudioVideoRecord()
          {
            ChatActivity.this.showVoiceHint(true, false);
          }
          
          public void onStickersExpandedChange()
          {
            ChatActivity.this.checkRaiseSensors();
          }
          
          public void onStickersTab(boolean paramAnonymousBoolean)
          {
            if (ChatActivity.this.emojiButtonRed != null) {
              ChatActivity.this.emojiButtonRed.setVisibility(8);
            }
            ChatActivity localChatActivity = ChatActivity.this;
            if (!paramAnonymousBoolean) {}
            for (paramAnonymousBoolean = true;; paramAnonymousBoolean = false)
            {
              ChatActivity.access$16802(localChatActivity, paramAnonymousBoolean);
              ChatActivity.this.checkContextBotPanel();
              return;
            }
          }
          
          public void onSwitchRecordMode(boolean paramAnonymousBoolean)
          {
            ChatActivity.this.showVoiceHint(false, paramAnonymousBoolean);
          }
          
          public void onTextChanged(final CharSequence paramAnonymousCharSequence, boolean paramAnonymousBoolean)
          {
            if ((ChatActivity.this.startReplyOnTextChange) && (paramAnonymousCharSequence.length() > 0))
            {
              ChatActivity.this.actionBar.getActionBarMenuOnItemClick().onItemClick(19);
              ChatActivity.access$3902(ChatActivity.this, false);
            }
            MediaController localMediaController = MediaController.getInstance();
            if ((!TextUtils.isEmpty(paramAnonymousCharSequence)) || (ChatActivity.this.chatActivityEnterView.isEditingMessage())) {}
            for (boolean bool = true;; bool = false)
            {
              localMediaController.setInputFieldHasText(bool);
              if ((ChatActivity.this.stickersAdapter != null) && (!ChatActivity.this.chatActivityEnterView.isEditingMessage()) && (ChatObject.canSendStickers(ChatActivity.this.currentChat))) {
                ChatActivity.this.stickersAdapter.loadStikersForEmoji(paramAnonymousCharSequence);
              }
              if (ChatActivity.this.mentionsAdapter != null) {
                ChatActivity.this.mentionsAdapter.searchUsernameOrHashtag(paramAnonymousCharSequence.toString(), ChatActivity.this.chatActivityEnterView.getCursorPosition(), ChatActivity.this.messages, false);
              }
              if (ChatActivity.this.waitingForCharaterEnterRunnable != null)
              {
                AndroidUtilities.cancelRunOnUIThread(ChatActivity.this.waitingForCharaterEnterRunnable);
                ChatActivity.access$17802(ChatActivity.this, null);
              }
              if ((ChatObject.canSendEmbed(ChatActivity.this.currentChat)) && (ChatActivity.this.chatActivityEnterView.isMessageWebPageSearchEnabled()) && ((!ChatActivity.this.chatActivityEnterView.isEditingMessage()) || (!ChatActivity.this.chatActivityEnterView.isEditingCaption())))
              {
                if (!paramAnonymousBoolean) {
                  break;
                }
                ChatActivity.this.searchLinks(paramAnonymousCharSequence, true);
              }
              return;
            }
            ChatActivity.access$17802(ChatActivity.this, new Runnable()
            {
              public void run()
              {
                if (this == ChatActivity.this.waitingForCharaterEnterRunnable)
                {
                  ChatActivity.this.searchLinks(paramAnonymousCharSequence, false);
                  ChatActivity.access$17802(ChatActivity.this, null);
                }
              }
            });
            paramAnonymousCharSequence = ChatActivity.this.waitingForCharaterEnterRunnable;
            if (AndroidUtilities.WEB_URL == null) {}
            for (long l = 3000L;; l = 1000L)
            {
              AndroidUtilities.runOnUIThread(paramAnonymousCharSequence, l);
              break;
            }
          }
          
          public void onWindowSizeChanged(int paramAnonymousInt)
          {
            boolean bool = true;
            ChatActivity localChatActivity;
            if (paramAnonymousInt < AndroidUtilities.dp(72.0F) + ActionBar.getCurrentActionBarHeight())
            {
              ChatActivity.access$16602(ChatActivity.this, false);
              if (ChatActivity.this.stickersPanel.getVisibility() == 0) {
                ChatActivity.this.stickersPanel.setVisibility(4);
              }
              if ((ChatActivity.this.mentionContainer != null) && (ChatActivity.this.mentionContainer.getVisibility() == 0)) {
                ChatActivity.this.mentionContainer.setVisibility(4);
              }
              localChatActivity = ChatActivity.this;
              if (ChatActivity.this.chatActivityEnterView.isPopupShowing()) {
                break label231;
              }
            }
            for (;;)
            {
              ChatActivity.access$16702(localChatActivity, bool);
              ChatActivity.this.checkContextBotPanel();
              return;
              ChatActivity.access$16602(ChatActivity.this, true);
              if (ChatActivity.this.stickersPanel.getVisibility() == 4) {
                ChatActivity.this.stickersPanel.setVisibility(0);
              }
              if ((ChatActivity.this.mentionContainer == null) || (ChatActivity.this.mentionContainer.getVisibility() != 4) || ((ChatActivity.this.mentionsAdapter.isBotContext()) && (!ChatActivity.this.allowContextBotPanel) && (!ChatActivity.this.allowContextBotPanelSecond))) {
                break;
              }
              ChatActivity.this.mentionContainer.setVisibility(0);
              ChatActivity.this.mentionContainer.setTag(null);
              break;
              label231:
              bool = false;
            }
          }
        });
        localObject2 = new FrameLayout(paramContext)
        {
          public boolean hasOverlappingRendering()
          {
            return false;
          }
          
          public void setTranslationY(float paramAnonymousFloat)
          {
            super.setTranslationY(paramAnonymousFloat);
            if (ChatActivity.this.chatActivityEnterView != null) {
              ChatActivity.this.chatActivityEnterView.invalidate();
            }
            FrameLayout localFrameLayout;
            if (getVisibility() != 8)
            {
              int i = getLayoutParams().height;
              if (ChatActivity.this.chatListView != null) {
                ChatActivity.this.chatListView.setTranslationY(paramAnonymousFloat);
              }
              if (ChatActivity.this.progressView != null) {
                ChatActivity.this.progressView.setTranslationY(paramAnonymousFloat);
              }
              if (ChatActivity.this.mentionContainer != null) {
                ChatActivity.this.mentionContainer.setTranslationY(paramAnonymousFloat);
              }
              if (ChatActivity.this.pagedownButton != null) {
                ChatActivity.this.pagedownButton.setTranslationY(paramAnonymousFloat);
              }
              if (ChatActivity.this.mentiondownButton != null)
              {
                localFrameLayout = ChatActivity.this.mentiondownButton;
                if (ChatActivity.this.pagedownButton.getVisibility() == 0) {
                  break label163;
                }
              }
            }
            for (;;)
            {
              localFrameLayout.setTranslationY(paramAnonymousFloat);
              return;
              label163:
              paramAnonymousFloat -= AndroidUtilities.dp(72.0F);
            }
          }
          
          public void setVisibility(int paramAnonymousInt)
          {
            float f = 0.0F;
            super.setVisibility(paramAnonymousInt);
            if (paramAnonymousInt == 8)
            {
              if (ChatActivity.this.chatListView != null) {
                ChatActivity.this.chatListView.setTranslationY(0.0F);
              }
              if (ChatActivity.this.progressView != null) {
                ChatActivity.this.progressView.setTranslationY(0.0F);
              }
              if (ChatActivity.this.mentionContainer != null) {
                ChatActivity.this.mentionContainer.setTranslationY(0.0F);
              }
              FrameLayout localFrameLayout;
              if (ChatActivity.this.pagedownButton != null)
              {
                localFrameLayout = ChatActivity.this.pagedownButton;
                if (ChatActivity.this.pagedownButton.getTag() == null) {
                  f = AndroidUtilities.dp(100.0F);
                }
                localFrameLayout.setTranslationY(f);
              }
              if (ChatActivity.this.mentiondownButton != null)
              {
                localFrameLayout = ChatActivity.this.mentiondownButton;
                if (ChatActivity.this.mentiondownButton.getTag() != null) {
                  break label163;
                }
                f = AndroidUtilities.dp(100.0F);
                localFrameLayout.setTranslationY(f);
              }
            }
            return;
            label163:
            if (ChatActivity.this.pagedownButton.getVisibility() == 0) {}
            for (paramAnonymousInt = -AndroidUtilities.dp(72.0F);; paramAnonymousInt = 0)
            {
              f = paramAnonymousInt;
              break;
            }
          }
        };
        this.chatActivityEnterView.addTopView((View)localObject2, 48);
        ((FrameLayout)localObject2).setOnClickListener(new View.OnClickListener()
        {
          public void onClick(View paramAnonymousView)
          {
            if (ChatActivity.this.replyingMessageObject != null) {
              ChatActivity.this.scrollToMessageId(ChatActivity.this.replyingMessageObject.getId(), 0, true, 0, false);
            }
          }
        });
        this.replyLineView = new View(paramContext);
        this.replyLineView.setBackgroundColor(Theme.getColor("chat_replyPanelLine"));
        ((FrameLayout)localObject2).addView(this.replyLineView, LayoutHelper.createFrame(-1, 1, 83));
        this.replyIconImageView = new ImageView(paramContext);
        this.replyIconImageView.setColorFilter(new PorterDuffColorFilter(Theme.getColor("chat_replyPanelIcons"), PorterDuff.Mode.MULTIPLY));
        this.replyIconImageView.setScaleType(ImageView.ScaleType.CENTER);
        ((FrameLayout)localObject2).addView(this.replyIconImageView, LayoutHelper.createFrame(52, 46, 51));
        this.replyCloseImageView = new ImageView(paramContext);
        this.replyCloseImageView.setColorFilter(new PorterDuffColorFilter(Theme.getColor("chat_replyPanelClose"), PorterDuff.Mode.MULTIPLY));
        this.replyCloseImageView.setImageResource(NUM);
        this.replyCloseImageView.setScaleType(ImageView.ScaleType.CENTER);
        ((FrameLayout)localObject2).addView(this.replyCloseImageView, LayoutHelper.createFrame(52, 46.0F, 53, 0.0F, 0.5F, 0.0F, 0.0F));
        this.replyCloseImageView.setOnClickListener(new View.OnClickListener()
        {
          public void onClick(View paramAnonymousView)
          {
            if (ChatActivity.this.forwardingMessages != null) {
              ChatActivity.this.forwardingMessages.clear();
            }
            ChatActivity.this.showReplyPanel(false, null, null, ChatActivity.this.foundWebPage, true);
          }
        });
        this.replyNameTextView = new SimpleTextView(paramContext);
        this.replyNameTextView.setTextSize(14);
        this.replyNameTextView.setTextColor(Theme.getColor("chat_replyPanelName"));
        this.replyNameTextView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
        ((FrameLayout)localObject2).addView(this.replyNameTextView, LayoutHelper.createFrame(-1, 18.0F, 51, 52.0F, 6.0F, 52.0F, 0.0F));
        this.replyObjectTextView = new SimpleTextView(paramContext);
        this.replyObjectTextView.setTextSize(14);
        this.replyObjectTextView.setTextColor(Theme.getColor("chat_replyPanelMessage"));
        ((FrameLayout)localObject2).addView(this.replyObjectTextView, LayoutHelper.createFrame(-1, 18.0F, 51, 52.0F, 24.0F, 52.0F, 0.0F));
        this.replyImageView = new BackupImageView(paramContext);
        ((FrameLayout)localObject2).addView(this.replyImageView, LayoutHelper.createFrame(34, 34.0F, 51, 52.0F, 6.0F, 0.0F, 0.0F));
        this.stickersPanel = new FrameLayout(paramContext);
        this.stickersPanel.setVisibility(8);
        this.contentView.addView(this.stickersPanel, LayoutHelper.createFrame(-2, 81.5F, 83, 0.0F, 0.0F, 0.0F, 38.0F));
        localObject2 = new StickerPreviewViewer.StickerPreviewViewerDelegate()
        {
          public boolean needSend()
          {
            return false;
          }
          
          public void openSet(TLRPC.InputStickerSet paramAnonymousInputStickerSet)
          {
            if (paramAnonymousInputStickerSet == null) {}
            for (;;)
            {
              return;
              if (ChatActivity.this.getParentActivity() != null)
              {
                TLRPC.TL_inputStickerSetID localTL_inputStickerSetID = new TLRPC.TL_inputStickerSetID();
                localTL_inputStickerSetID.access_hash = paramAnonymousInputStickerSet.access_hash;
                localTL_inputStickerSetID.id = paramAnonymousInputStickerSet.id;
                ChatActivity.this.showDialog(new StickersAlert(ChatActivity.this.getParentActivity(), ChatActivity.this, localTL_inputStickerSetID, null, ChatActivity.this.chatActivityEnterView));
              }
            }
          }
          
          public void sendSticker(TLRPC.Document paramAnonymousDocument) {}
        };
        this.stickersListView = new RecyclerListView(paramContext)
        {
          public boolean onInterceptTouchEvent(MotionEvent paramAnonymousMotionEvent)
          {
            boolean bool1 = false;
            boolean bool2 = StickerPreviewViewer.getInstance().onInterceptTouchEvent(paramAnonymousMotionEvent, ChatActivity.this.stickersListView, 0, localObject2);
            if ((super.onInterceptTouchEvent(paramAnonymousMotionEvent)) || (bool2)) {
              bool1 = true;
            }
            return bool1;
          }
        };
        this.stickersListView.setTag(Integer.valueOf(3));
        this.stickersListView.setOnTouchListener(new View.OnTouchListener()
        {
          public boolean onTouch(View paramAnonymousView, MotionEvent paramAnonymousMotionEvent)
          {
            return StickerPreviewViewer.getInstance().onTouch(paramAnonymousMotionEvent, ChatActivity.this.stickersListView, 0, ChatActivity.this.stickersOnItemClickListener, localObject2);
          }
        });
        this.stickersListView.setDisallowInterceptTouchEvents(true);
        localObject2 = new LinearLayoutManager(paramContext);
        ((LinearLayoutManager)localObject2).setOrientation(0);
        this.stickersListView.setLayoutManager((RecyclerView.LayoutManager)localObject2);
        this.stickersListView.setClipToPadding(false);
        this.stickersListView.setOverScrollMode(2);
        this.stickersPanel.addView(this.stickersListView, LayoutHelper.createFrame(-1, 78.0F));
        initStickers();
        this.stickersPanelArrow = new ImageView(paramContext);
        this.stickersPanelArrow.setImageResource(NUM);
        this.stickersPanelArrow.setColorFilter(new PorterDuffColorFilter(Theme.getColor("chat_stickersHintPanel"), PorterDuff.Mode.MULTIPLY));
        this.stickersPanel.addView(this.stickersPanelArrow, LayoutHelper.createFrame(-2, -2.0F, 83, 53.0F, 0.0F, 0.0F, 0.0F));
        this.searchContainer = new FrameLayout(paramContext)
        {
          public void onDraw(Canvas paramAnonymousCanvas)
          {
            int i = Theme.chat_composeShadowDrawable.getIntrinsicHeight();
            Theme.chat_composeShadowDrawable.setBounds(0, 0, getMeasuredWidth(), i);
            Theme.chat_composeShadowDrawable.draw(paramAnonymousCanvas);
            paramAnonymousCanvas.drawRect(0.0F, i, getMeasuredWidth(), getMeasuredHeight(), Theme.chat_composeBackgroundPaint);
          }
        };
        this.searchContainer.setOnTouchListener(new View.OnTouchListener()
        {
          public boolean onTouch(View paramAnonymousView, MotionEvent paramAnonymousMotionEvent)
          {
            return true;
          }
        });
        this.searchContainer.setWillNotDraw(false);
        this.searchContainer.setVisibility(4);
        this.searchContainer.setFocusable(true);
        this.searchContainer.setFocusableInTouchMode(true);
        this.searchContainer.setClickable(true);
        this.searchContainer.setPadding(0, AndroidUtilities.dp(3.0F), 0, 0);
        this.searchUpButton = new ImageView(paramContext);
        this.searchUpButton.setScaleType(ImageView.ScaleType.CENTER);
        this.searchUpButton.setImageResource(NUM);
        this.searchUpButton.setColorFilter(new PorterDuffColorFilter(Theme.getColor("chat_searchPanelIcons"), PorterDuff.Mode.MULTIPLY));
        this.searchContainer.addView(this.searchUpButton, LayoutHelper.createFrame(48, 48.0F, 53, 0.0F, 0.0F, 48.0F, 0.0F));
        this.searchUpButton.setOnClickListener(new View.OnClickListener()
        {
          public void onClick(View paramAnonymousView)
          {
            DataQuery.getInstance(ChatActivity.this.currentAccount).searchMessagesInChat(null, ChatActivity.this.dialog_id, ChatActivity.this.mergeDialogId, ChatActivity.this.classGuid, 1, ChatActivity.this.searchingUserMessages);
          }
        });
        this.searchDownButton = new ImageView(paramContext);
        this.searchDownButton.setScaleType(ImageView.ScaleType.CENTER);
        this.searchDownButton.setImageResource(NUM);
        this.searchDownButton.setColorFilter(new PorterDuffColorFilter(Theme.getColor("chat_searchPanelIcons"), PorterDuff.Mode.MULTIPLY));
        this.searchContainer.addView(this.searchDownButton, LayoutHelper.createFrame(48, 48.0F, 53, 0.0F, 0.0F, 0.0F, 0.0F));
        this.searchDownButton.setOnClickListener(new View.OnClickListener()
        {
          public void onClick(View paramAnonymousView)
          {
            DataQuery.getInstance(ChatActivity.this.currentAccount).searchMessagesInChat(null, ChatActivity.this.dialog_id, ChatActivity.this.mergeDialogId, ChatActivity.this.classGuid, 2, ChatActivity.this.searchingUserMessages);
          }
        });
        if ((this.currentChat != null) && ((!ChatObject.isChannel(this.currentChat)) || (this.currentChat.megagroup)))
        {
          this.searchUserButton = new ImageView(paramContext);
          this.searchUserButton.setScaleType(ImageView.ScaleType.CENTER);
          this.searchUserButton.setImageResource(NUM);
          this.searchUserButton.setColorFilter(new PorterDuffColorFilter(Theme.getColor("chat_searchPanelIcons"), PorterDuff.Mode.MULTIPLY));
          this.searchContainer.addView(this.searchUserButton, LayoutHelper.createFrame(48, 48.0F, 51, 48.0F, 0.0F, 0.0F, 0.0F));
          this.searchUserButton.setOnClickListener(new View.OnClickListener()
          {
            public void onClick(View paramAnonymousView)
            {
              ChatActivity.this.mentionLayoutManager.setReverseLayout(true);
              ChatActivity.this.mentionsAdapter.setSearchingMentions(true);
              ChatActivity.this.searchCalendarButton.setVisibility(8);
              ChatActivity.this.searchUserButton.setVisibility(8);
              ChatActivity.access$4802(ChatActivity.this, true);
              ChatActivity.access$5102(ChatActivity.this, null);
              ChatActivity.this.searchItem.getSearchField().setHint(LocaleController.getString("SearchMembers", NUM));
              ChatActivity.this.searchItem.setSearchFieldCaption(LocaleController.getString("SearchFrom", NUM));
              AndroidUtilities.showKeyboard(ChatActivity.this.searchItem.getSearchField());
              ChatActivity.this.searchItem.clearSearchText();
            }
          });
        }
        this.searchCalendarButton = new ImageView(paramContext);
        this.searchCalendarButton.setScaleType(ImageView.ScaleType.CENTER);
        this.searchCalendarButton.setImageResource(NUM);
        this.searchCalendarButton.setColorFilter(new PorterDuffColorFilter(Theme.getColor("chat_searchPanelIcons"), PorterDuff.Mode.MULTIPLY));
        this.searchContainer.addView(this.searchCalendarButton, LayoutHelper.createFrame(48, 48, 51));
        this.searchCalendarButton.setOnClickListener(new View.OnClickListener()
        {
          public void onClick(View paramAnonymousView)
          {
            if (ChatActivity.this.getParentActivity() == null) {}
            for (;;)
            {
              return;
              AndroidUtilities.hideKeyboard(ChatActivity.this.searchItem.getSearchField());
              paramAnonymousView = Calendar.getInstance();
              int i = paramAnonymousView.get(1);
              int j = paramAnonymousView.get(2);
              int k = paramAnonymousView.get(5);
              try
              {
                paramAnonymousView = new android/app/DatePickerDialog;
                Object localObject1 = ChatActivity.this.getParentActivity();
                Object localObject2 = new org/telegram/ui/ChatActivity$54$1;
                ((1)localObject2).<init>(this);
                paramAnonymousView.<init>((Context)localObject1, (DatePickerDialog.OnDateSetListener)localObject2, i, j, k);
                localObject1 = paramAnonymousView.getDatePicker();
                ((DatePicker)localObject1).setMinDate(1375315200000L);
                ((DatePicker)localObject1).setMaxDate(System.currentTimeMillis());
                paramAnonymousView.setButton(-1, LocaleController.getString("JumpToDate", NUM), paramAnonymousView);
                String str = LocaleController.getString("Cancel", NUM);
                localObject2 = new org/telegram/ui/ChatActivity$54$2;
                ((2)localObject2).<init>(this);
                paramAnonymousView.setButton(-2, str, (DialogInterface.OnClickListener)localObject2);
                if (Build.VERSION.SDK_INT >= 21)
                {
                  localObject2 = new org/telegram/ui/ChatActivity$54$3;
                  ((3)localObject2).<init>(this, (DatePicker)localObject1);
                  paramAnonymousView.setOnShowListener((DialogInterface.OnShowListener)localObject2);
                }
                ChatActivity.this.showDialog(paramAnonymousView);
              }
              catch (Exception paramAnonymousView)
              {
                FileLog.e(paramAnonymousView);
              }
            }
          }
        });
        this.searchCountText = new SimpleTextView(paramContext);
        this.searchCountText.setTextColor(Theme.getColor("chat_searchPanelText"));
        this.searchCountText.setTextSize(15);
        this.searchCountText.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
        this.searchCountText.setGravity(5);
        this.searchContainer.addView(this.searchCountText, LayoutHelper.createFrame(-2, -2.0F, 21, 0.0F, 0.0F, 108.0F, 0.0F));
        this.bottomOverlay = new FrameLayout(paramContext)
        {
          public void onDraw(Canvas paramAnonymousCanvas)
          {
            int i = Theme.chat_composeShadowDrawable.getIntrinsicHeight();
            Theme.chat_composeShadowDrawable.setBounds(0, 0, getMeasuredWidth(), i);
            Theme.chat_composeShadowDrawable.draw(paramAnonymousCanvas);
            paramAnonymousCanvas.drawRect(0.0F, i, getMeasuredWidth(), getMeasuredHeight(), Theme.chat_composeBackgroundPaint);
          }
        };
        this.bottomOverlay.setWillNotDraw(false);
        this.bottomOverlay.setVisibility(4);
        this.bottomOverlay.setFocusable(true);
        this.bottomOverlay.setFocusableInTouchMode(true);
        this.bottomOverlay.setClickable(true);
        this.bottomOverlay.setPadding(0, AndroidUtilities.dp(2.0F), 0, 0);
        this.contentView.addView(this.bottomOverlay, LayoutHelper.createFrame(-1, 51, 80));
        this.bottomOverlayText = new TextView(paramContext);
        this.bottomOverlayText.setTextSize(1, 14.0F);
        this.bottomOverlayText.setGravity(17);
        this.bottomOverlayText.setMaxLines(2);
        this.bottomOverlayText.setEllipsize(TextUtils.TruncateAt.END);
        this.bottomOverlayText.setLineSpacing(AndroidUtilities.dp(2.0F), 1.0F);
        this.bottomOverlayText.setTextColor(Theme.getColor("chat_secretChatStatusText"));
        this.bottomOverlay.addView(this.bottomOverlayText, LayoutHelper.createFrame(-2, -2.0F, 17, 14.0F, 0.0F, 14.0F, 0.0F));
        this.bottomOverlayChat = new FrameLayout(paramContext)
        {
          public void onDraw(Canvas paramAnonymousCanvas)
          {
            int i = Theme.chat_composeShadowDrawable.getIntrinsicHeight();
            Theme.chat_composeShadowDrawable.setBounds(0, 0, getMeasuredWidth(), i);
            Theme.chat_composeShadowDrawable.draw(paramAnonymousCanvas);
            paramAnonymousCanvas.drawRect(0.0F, i, getMeasuredWidth(), getMeasuredHeight(), Theme.chat_composeBackgroundPaint);
          }
        };
        this.bottomOverlayChat.setWillNotDraw(false);
        this.bottomOverlayChat.setPadding(0, AndroidUtilities.dp(3.0F), 0, 0);
        this.bottomOverlayChat.setVisibility(4);
        this.contentView.addView(this.bottomOverlayChat, LayoutHelper.createFrame(-1, 51, 80));
        this.bottomOverlayChat.setOnClickListener(new View.OnClickListener()
        {
          public void onClick(View paramAnonymousView)
          {
            if (ChatActivity.this.getParentActivity() == null) {}
            label510:
            for (;;)
            {
              return;
              paramAnonymousView = null;
              if ((ChatActivity.this.currentUser != null) && (ChatActivity.this.userBlocked)) {
                if (ChatActivity.this.currentUser.bot)
                {
                  String str = ChatActivity.this.botUser;
                  ChatActivity.access$20802(ChatActivity.this, null);
                  MessagesController.getInstance(ChatActivity.this.currentAccount).unblockUser(ChatActivity.this.currentUser.id);
                  if ((str != null) && (str.length() != 0)) {
                    MessagesController.getInstance(ChatActivity.this.currentAccount).sendBotStart(ChatActivity.this.currentUser, str);
                  }
                }
              }
              for (;;)
              {
                if (paramAnonymousView == null) {
                  break label510;
                }
                paramAnonymousView.setTitle(LocaleController.getString("AppName", NUM));
                paramAnonymousView.setNegativeButton(LocaleController.getString("Cancel", NUM), null);
                ChatActivity.this.showDialog(paramAnonymousView.create());
                break;
                SendMessagesHelper.getInstance(ChatActivity.this.currentAccount).sendMessage("/start", ChatActivity.this.dialog_id, null, null, false, null, null, null);
                continue;
                paramAnonymousView = new AlertDialog.Builder(ChatActivity.this.getParentActivity());
                paramAnonymousView.setMessage(LocaleController.getString("AreYouSureUnblockContact", NUM));
                paramAnonymousView.setPositiveButton(LocaleController.getString("OK", NUM), new DialogInterface.OnClickListener()
                {
                  public void onClick(DialogInterface paramAnonymous2DialogInterface, int paramAnonymous2Int)
                  {
                    MessagesController.getInstance(ChatActivity.this.currentAccount).unblockUser(ChatActivity.this.currentUser.id);
                  }
                });
                continue;
                if ((ChatActivity.this.currentUser != null) && (ChatActivity.this.currentUser.bot) && (ChatActivity.this.botUser != null))
                {
                  if (ChatActivity.this.botUser.length() != 0) {
                    MessagesController.getInstance(ChatActivity.this.currentAccount).sendBotStart(ChatActivity.this.currentUser, ChatActivity.this.botUser);
                  }
                  for (;;)
                  {
                    ChatActivity.access$20802(ChatActivity.this, null);
                    ChatActivity.this.updateBottomOverlay();
                    break;
                    SendMessagesHelper.getInstance(ChatActivity.this.currentAccount).sendMessage("/start", ChatActivity.this.dialog_id, null, null, false, null, null, null);
                  }
                }
                if ((ChatObject.isChannel(ChatActivity.this.currentChat)) && (!(ChatActivity.this.currentChat instanceof TLRPC.TL_channelForbidden)))
                {
                  if (ChatObject.isNotInChat(ChatActivity.this.currentChat)) {
                    MessagesController.getInstance(ChatActivity.this.currentAccount).addUserToChat(ChatActivity.this.currentChat.id, UserConfig.getInstance(ChatActivity.this.currentAccount).getCurrentUser(), null, 0, null, ChatActivity.this);
                  } else {
                    ChatActivity.this.toggleMute(true);
                  }
                }
                else
                {
                  paramAnonymousView = new AlertDialog.Builder(ChatActivity.this.getParentActivity());
                  paramAnonymousView.setMessage(LocaleController.getString("AreYouSureDeleteThisChat", NUM));
                  paramAnonymousView.setPositiveButton(LocaleController.getString("OK", NUM), new DialogInterface.OnClickListener()
                  {
                    public void onClick(DialogInterface paramAnonymous2DialogInterface, int paramAnonymous2Int)
                    {
                      MessagesController.getInstance(ChatActivity.this.currentAccount).deleteDialog(ChatActivity.this.dialog_id, 0);
                      ChatActivity.this.finishFragment();
                    }
                  });
                }
              }
            }
          }
        });
        this.bottomOverlayChatText = new TextView(paramContext);
        this.bottomOverlayChatText.setTextSize(1, 15.0F);
        this.bottomOverlayChatText.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
        this.bottomOverlayChatText.setTextColor(Theme.getColor("chat_fieldOverlayText"));
        this.bottomOverlayChat.addView(this.bottomOverlayChatText, LayoutHelper.createFrame(-2, -2, 17));
        this.contentView.addView(this.searchContainer, LayoutHelper.createFrame(-1, 51, 80));
        this.chatAdapter.updateRows();
        if ((!this.loading) || (!this.messages.isEmpty())) {
          break label7447;
        }
        paramContext = this.progressView;
        if (this.chatAdapter.botInfoRow != -1) {
          break label7442;
        }
        i = 0;
        label6713:
        paramContext.setVisibility(i);
        this.chatListView.setEmptyView(null);
      }
      for (;;)
      {
        checkBotKeyboard();
        updateContactStatus();
        updateBottomOverlay();
        updateSecretStatus();
        updateSpamView();
        updatePinnedMessageView(true);
        try
        {
          if ((this.currentEncryptedChat != null) && (Build.VERSION.SDK_INT >= 23) && ((SharedConfig.passcodeHash.length() == 0) || (SharedConfig.allowScreenCapture))) {
            MediaController.getInstance().setFlagSecure(this, true);
          }
        }
        catch (Throwable paramContext)
        {
          for (;;)
          {
            label6818:
            FileLog.e(paramContext);
          }
        }
        if (localObject1 != null) {
          this.chatActivityEnterView.setFieldText((CharSequence)localObject1);
        }
        fixLayoutInternal();
        return this.fragmentView;
        bool1 = false;
        break;
        this.headerItem.hideSubItem(32);
        break label498;
        label6830:
        this.headerItem.addSubItem(16, LocaleController.getString("DeleteChatUser", NUM));
        break label750;
        label6852:
        if (!this.currentUser.self) {
          break label781;
        }
        this.headerItem.addSubItem(24, LocaleController.getString("AddShortcut", NUM));
        break label781;
        label6884:
        this.actionModeViews.add(((ActionBarMenu)localObject1).addItemWithWidth(23, NUM, AndroidUtilities.dp(54.0F)));
        this.actionModeViews.add(((ActionBarMenu)localObject1).addItemWithWidth(19, NUM, AndroidUtilities.dp(54.0F)));
        this.actionModeViews.add(((ActionBarMenu)localObject1).addItemWithWidth(22, NUM, AndroidUtilities.dp(54.0F)));
        this.actionModeViews.add(((ActionBarMenu)localObject1).addItemWithWidth(10, NUM, AndroidUtilities.dp(54.0F)));
        this.actionModeViews.add(((ActionBarMenu)localObject1).addItemWithWidth(12, NUM, AndroidUtilities.dp(54.0F)));
        break label1349;
        label7007:
        i = 8;
        break label1391;
        label7013:
        i = 8;
        break label1430;
        label7019:
        i = 8;
        break label1469;
        label7025:
        i = 8;
        break label1493;
        label7031:
        this.emptyView = new TextView(paramContext);
        if ((this.currentUser != null) && (this.currentUser.id != 777000) && (this.currentUser.id != 429000) && (this.currentUser.id != 4244000) && (MessagesController.isSupportId(this.currentUser.id))) {
          this.emptyView.setText(LocaleController.getString("GotAQuestion", NUM));
        }
        for (;;)
        {
          this.emptyView.setTextSize(1, 14.0F);
          this.emptyView.setGravity(17);
          this.emptyView.setTextColor(Theme.getColor("chat_serviceText"));
          this.emptyView.setBackgroundResource(NUM);
          this.emptyView.getBackground().setColorFilter(Theme.colorFilter);
          this.emptyView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
          this.emptyView.setPadding(AndroidUtilities.dp(10.0F), AndroidUtilities.dp(2.0F), AndroidUtilities.dp(10.0F), AndroidUtilities.dp(3.0F));
          this.emptyViewContainer.addView(this.emptyView, new FrameLayout.LayoutParams(-2, -2, 17));
          break;
          this.emptyView.setText(LocaleController.getString("NoMessages", NUM));
        }
        label7262:
        this.bigEmptyView = new ChatBigEmptyView(paramContext, true);
        if (this.currentEncryptedChat.admin_id == UserConfig.getInstance(this.currentAccount).getClientUserId()) {
          this.bigEmptyView.setSecretText(LocaleController.formatString("EncryptedPlaceholderTitleOutgoing", NUM, new Object[] { UserObject.getFirstName(this.currentUser) }));
        }
        for (;;)
        {
          this.emptyViewContainer.addView(this.bigEmptyView, new FrameLayout.LayoutParams(-2, -2, 17));
          break;
          this.bigEmptyView.setSecretText(LocaleController.formatString("EncryptedPlaceholderTitleIncoming", NUM, new Object[] { UserObject.getFirstName(this.currentUser) }));
        }
        label7385:
        localObject1 = null;
        break label1685;
        label7391:
        localObject1 = null;
        break label1685;
        label7397:
        this.reportSpamButton.setText(LocaleController.getString("ReportSpam", NUM));
        break label2984;
        label7416:
        bool1 = false;
        break label3917;
        label7421:
        bool1 = false;
        break label3953;
        label7426:
        i = 1;
        break label3977;
        label7431:
        bool1 = false;
        break label5011;
        label7436:
        bool2 = false;
        break label5036;
        label7442:
        i = 4;
        break label6713;
        label7447:
        this.progressView.setVisibility(4);
        this.chatListView.setEmptyView(this.emptyViewContainer);
      }
    }
    catch (Exception localException)
    {
      for (;;) {}
    }
  }
  
  public void didReceivedNotification(int paramInt1, int paramInt2, final Object... paramVarArgs)
  {
    int i;
    if (paramInt1 == NotificationCenter.messagesDidLoaded) {
      if (((Integer)paramVarArgs[10]).intValue() == this.classGuid)
      {
        if (!this.openAnimationEnded) {
          NotificationCenter.getInstance(this.currentAccount).setAllowedNotificationsDutingAnimation(new int[] { NotificationCenter.chatInfoDidLoaded, NotificationCenter.dialogsNeedReload, NotificationCenter.closeChats, NotificationCenter.botKeyboardDidLoaded });
        }
        paramInt1 = ((Integer)paramVarArgs[11]).intValue();
        paramInt1 = this.waitingForLoad.indexOf(Integer.valueOf(paramInt1));
        i = UserConfig.getInstance(this.currentAccount).getClientUserId();
        if (paramInt1 != -1) {
          break label109;
        }
      }
    }
    for (;;)
    {
      return;
      label109:
      this.waitingForLoad.remove(paramInt1);
      ArrayList localArrayList = (ArrayList)paramVarArgs[2];
      boolean bool1 = false;
      int j;
      final Object localObject1;
      label197:
      label259:
      label265:
      boolean bool2;
      if (this.waitingForReplyMessageLoad)
      {
        if (!this.createUnreadMessageAfterIdLoading)
        {
          j = 0;
          for (paramInt2 = 0;; paramInt2++)
          {
            paramInt1 = j;
            if (paramInt2 < localArrayList.size())
            {
              localObject1 = (MessageObject)localArrayList.get(paramInt2);
              if (((MessageObject)localObject1).getId() != this.startLoadFromMessageId) {
                break label197;
              }
            }
            for (paramInt1 = 1;; paramInt1 = 1)
            {
              if (paramInt1 != 0) {
                break label265;
              }
              this.startLoadFromMessageId = 0;
              break;
              if (paramInt2 + 1 >= localArrayList.size()) {
                break label259;
              }
              localObject2 = (MessageObject)localArrayList.get(paramInt2 + 1);
              if ((((MessageObject)localObject1).getId() < this.startLoadFromMessageId) || (((MessageObject)localObject2).getId() >= this.startLoadFromMessageId)) {
                break label259;
              }
              this.startLoadFromMessageId = ((MessageObject)localObject1).getId();
            }
          }
        }
        paramInt2 = this.startLoadFromMessageId;
        bool2 = this.needSelectFromMessageId;
        paramInt1 = this.createUnreadMessageAfterId;
        bool1 = this.createUnreadMessageAfterIdLoading;
        clearChatData();
        this.createUnreadMessageAfterId = paramInt1;
        this.startLoadFromMessageId = paramInt2;
        this.needSelectFromMessageId = bool2;
      }
      this.loadsCount += 1;
      int k;
      int m;
      int n;
      int i1;
      if (((Long)paramVarArgs[0]).longValue() == this.dialog_id)
      {
        k = 0;
        m = ((Integer)paramVarArgs[1]).intValue();
        bool2 = ((Boolean)paramVarArgs[3]).booleanValue();
        paramInt2 = ((Integer)paramVarArgs[4]).intValue();
        ((Integer)paramVarArgs[7]).intValue();
        n = ((Integer)paramVarArgs[8]).intValue();
        j = ((Integer)paramVarArgs[12]).intValue();
        paramInt1 = ((Integer)paramVarArgs[13]).intValue();
        if (paramInt1 >= 0) {
          break label781;
        }
        i1 = paramInt1 * -1;
        this.hasAllMentionsLocal = false;
        label429:
        if (n == 4)
        {
          this.startLoadFromMessageId = j;
          paramInt1 = localArrayList.size() - 1;
          label449:
          if (paramInt1 > 0)
          {
            localObject2 = (MessageObject)localArrayList.get(paramInt1);
            if ((((MessageObject)localObject2).type >= 0) || (((MessageObject)localObject2).getId() != this.startLoadFromMessageId)) {
              break label802;
            }
            this.startLoadFromMessageId = ((MessageObject)localArrayList.get(paramInt1 - 1)).getId();
          }
        }
        paramInt1 = 0;
        j = 0;
        if (paramInt2 == 0) {
          break label828;
        }
        this.last_message_id = ((Integer)paramVarArgs[5]).intValue();
        if (n != 3) {
          break label808;
        }
        if (this.loadingFromOldPosition)
        {
          j = ((Integer)paramVarArgs[6]).intValue();
          if (j != 0) {
            this.createUnreadMessageAfterId = paramInt2;
          }
          this.loadingFromOldPosition = false;
        }
        this.first_unread_id = 0;
        label569:
        paramInt2 = 0;
        if ((n != 0) && ((this.startLoadFromMessageId != 0) || (this.last_message_id != 0))) {
          this.forwardEndReached[k] = false;
        }
        if (((n == 1) || (n == 3)) && (k == 1))
        {
          paramVarArgs = this.endReached;
          this.cacheEndReached[0] = true;
          paramVarArgs[0] = 1;
          this.forwardEndReached[0] = false;
          this.minMessageId[0] = 0;
        }
        if ((this.loadsCount == 1) && (localArrayList.size() > 20)) {
          this.loadsCount += 1;
        }
        if (!this.firstLoading) {
          break label909;
        }
        if (this.forwardEndReached[k] != 0) {
          break label893;
        }
        this.messages.clear();
        this.messagesByDays.clear();
        this.groupedMessagesMap.clear();
        paramInt1 = 0;
        label714:
        if (paramInt1 >= 2) {
          break label893;
        }
        this.messagesDict[paramInt1].clear();
        if (this.currentEncryptedChat != null) {
          break label872;
        }
        this.maxMessageId[paramInt1] = Integer.MAX_VALUE;
        this.minMessageId[paramInt1] = Integer.MIN_VALUE;
      }
      for (;;)
      {
        this.maxDate[paramInt1] = Integer.MIN_VALUE;
        this.minDate[paramInt1] = 0;
        paramInt1++;
        break label714;
        k = 1;
        break;
        label781:
        i1 = paramInt1;
        if (!this.first) {
          break label429;
        }
        this.hasAllMentionsLocal = true;
        i1 = paramInt1;
        break label429;
        label802:
        paramInt1--;
        break label449;
        label808:
        this.first_unread_id = paramInt2;
        j = ((Integer)paramVarArgs[6]).intValue();
        break label569;
        label828:
        j = paramInt1;
        if (this.startLoadFromMessageId == 0) {
          break label569;
        }
        if (n != 3)
        {
          j = paramInt1;
          if (n != 4) {
            break label569;
          }
        }
        this.last_message_id = ((Integer)paramVarArgs[5]).intValue();
        j = paramInt1;
        break label569;
        label872:
        this.maxMessageId[paramInt1] = Integer.MIN_VALUE;
        this.minMessageId[paramInt1] = Integer.MAX_VALUE;
      }
      label893:
      this.firstLoading = false;
      AndroidUtilities.runOnUIThread(new Runnable()
      {
        public void run()
        {
          if (ChatActivity.this.parentLayout != null) {
            ChatActivity.this.parentLayout.resumeDelayedFragmentAnimation();
          }
        }
      });
      label909:
      if (n == 1) {
        Collections.reverse(localArrayList);
      }
      if (this.currentEncryptedChat == null) {
        DataQuery.getInstance(this.currentAccount).loadReplyMessagesForMessages(localArrayList, this.dialog_id);
      }
      int i2 = 0;
      if ((n == 2) && (localArrayList.isEmpty()) && (!bool2)) {
        this.forwardEndReached[0] = true;
      }
      Object localObject2 = null;
      paramVarArgs = null;
      MediaController localMediaController = MediaController.getInstance();
      int i3 = 0;
      Object localObject3;
      Object localObject4;
      Object localObject5;
      label1259:
      label1404:
      Object localObject6;
      if (i3 < localArrayList.size())
      {
        localObject1 = (MessageObject)localArrayList.get(i3);
        i2 += ((MessageObject)localObject1).getApproximateHeight();
        if (this.currentUser != null)
        {
          if (this.currentUser.self) {
            ((MessageObject)localObject1).messageOwner.out = true;
          }
          if (((this.currentUser.bot) && (((MessageObject)localObject1).isOut())) || (this.currentUser.id == i)) {
            ((MessageObject)localObject1).setIsRead();
          }
        }
        if (this.messagesDict[k].indexOfKey(((MessageObject)localObject1).getId()) >= 0)
        {
          paramInt1 = paramInt2;
          localObject3 = localObject2;
          localObject4 = paramVarArgs;
        }
        label1661:
        label1736:
        label1797:
        label1838:
        label1885:
        label1912:
        label1983:
        label2120:
        label2254:
        do
        {
          do
          {
            do
            {
              do
              {
                do
                {
                  do
                  {
                    do
                    {
                      do
                      {
                        do
                        {
                          do
                          {
                            do
                            {
                              i3++;
                              paramVarArgs = (Object[])localObject4;
                              localObject2 = localObject3;
                              paramInt2 = paramInt1;
                              break;
                              if (localMediaController.isPlayingMessage((MessageObject)localObject1))
                              {
                                localObject5 = localMediaController.getPlayingMessageObject();
                                ((MessageObject)localObject1).audioProgress = ((MessageObject)localObject5).audioProgress;
                                ((MessageObject)localObject1).audioProgressSec = ((MessageObject)localObject5).audioProgressSec;
                                ((MessageObject)localObject1).audioPlayerDuration = ((MessageObject)localObject5).audioPlayerDuration;
                              }
                              if ((k == 0) && (ChatObject.isChannel(this.currentChat)) && (((MessageObject)localObject1).getId() == 1))
                              {
                                this.endReached[k] = true;
                                this.cacheEndReached[k] = true;
                              }
                              if (((MessageObject)localObject1).getId() <= 0) {
                                break label2421;
                              }
                              this.maxMessageId[k] = Math.min(((MessageObject)localObject1).getId(), this.maxMessageId[k]);
                              this.minMessageId[k] = Math.max(((MessageObject)localObject1).getId(), this.minMessageId[k]);
                              if (((MessageObject)localObject1).messageOwner.date != 0)
                              {
                                this.maxDate[k] = Math.max(this.maxDate[k], ((MessageObject)localObject1).messageOwner.date);
                                if ((this.minDate[k] == 0) || (((MessageObject)localObject1).messageOwner.date < this.minDate[k])) {
                                  this.minDate[k] = ((MessageObject)localObject1).messageOwner.date;
                                }
                              }
                              if (((MessageObject)localObject1).getId() == this.last_message_id) {
                                this.forwardEndReached[k] = true;
                              }
                              localObject4 = paramVarArgs;
                              localObject3 = localObject2;
                              paramInt1 = paramInt2;
                            } while (((MessageObject)localObject1).type < 0);
                            if (k != 1) {
                              break label1404;
                            }
                            localObject4 = paramVarArgs;
                            localObject3 = localObject2;
                            paramInt1 = paramInt2;
                          } while ((((MessageObject)localObject1).messageOwner.action instanceof TLRPC.TL_messageActionChatMigrateTo));
                          localObject6 = localObject1;
                          if (this.needAnimateToMessage != null)
                          {
                            localObject6 = localObject1;
                            if (this.needAnimateToMessage.getId() == ((MessageObject)localObject1).getId())
                            {
                              localObject6 = localObject1;
                              if (((MessageObject)localObject1).getId() < 0)
                              {
                                localObject6 = localObject1;
                                if (((MessageObject)localObject1).type == 5)
                                {
                                  localObject6 = this.needAnimateToMessage;
                                  this.animatingMessageObjects.add(localObject6);
                                  this.needAnimateToMessage = null;
                                }
                              }
                            }
                          }
                          if ((!((MessageObject)localObject6).isOut()) && (((MessageObject)localObject6).isUnread())) {}
                          this.messagesDict[k].put(((MessageObject)localObject6).getId(), localObject6);
                          localObject1 = (ArrayList)this.messagesByDays.get(((MessageObject)localObject6).dateKey);
                          localObject3 = localObject1;
                          paramInt1 = paramInt2;
                          if (localObject1 == null)
                          {
                            localObject3 = new ArrayList();
                            this.messagesByDays.put(((MessageObject)localObject6).dateKey, localObject3);
                            localObject1 = new TLRPC.TL_message();
                            ((TLRPC.Message)localObject1).message = LocaleController.formatDateChat(((MessageObject)localObject6).messageOwner.date);
                            ((TLRPC.Message)localObject1).id = 0;
                            ((TLRPC.Message)localObject1).date = ((MessageObject)localObject6).messageOwner.date;
                            localObject1 = new MessageObject(this.currentAccount, (TLRPC.Message)localObject1, false);
                            ((MessageObject)localObject1).type = 10;
                            ((MessageObject)localObject1).contentType = 1;
                            ((MessageObject)localObject1).isDateObject = true;
                            if (n != 1) {
                              break label2475;
                            }
                            this.messages.add(0, localObject1);
                            paramInt1 = paramInt2 + 1;
                          }
                          if (!((MessageObject)localObject6).hasValidGroupId()) {
                            break label2627;
                          }
                          localObject4 = (MessageObject.GroupedMessages)this.groupedMessagesMap.get(((MessageObject)localObject6).messageOwner.grouped_id);
                          localObject1 = localObject4;
                          if (localObject4 != null)
                          {
                            localObject1 = localObject4;
                            if (this.messages.size() > 1)
                            {
                              if (n != 1) {
                                break label2488;
                              }
                              localObject5 = (MessageObject)this.messages.get(0);
                              if (((MessageObject)localObject5).messageOwner.grouped_id != ((MessageObject)localObject6).messageOwner.grouped_id) {
                                break label2512;
                              }
                              localObject1 = localObject4;
                              if (((MessageObject)localObject5).localGroupId != 0L)
                              {
                                ((MessageObject)localObject6).localGroupId = ((MessageObject)localObject5).localGroupId;
                                localObject1 = (MessageObject.GroupedMessages)this.groupedMessagesMap.get(((MessageObject)localObject5).localGroupId);
                              }
                            }
                          }
                          if (localObject1 != null) {
                            break label2553;
                          }
                          localObject4 = new MessageObject.GroupedMessages();
                          ((MessageObject.GroupedMessages)localObject4).groupId = ((MessageObject)localObject6).getGroupId();
                          this.groupedMessagesMap.put(((MessageObject.GroupedMessages)localObject4).groupId, localObject4);
                          localObject5 = paramVarArgs;
                          localObject1 = localObject2;
                          if (localObject2 == null) {
                            localObject1 = new LongSparseArray();
                          }
                          ((LongSparseArray)localObject1).put(((MessageObject.GroupedMessages)localObject4).groupId, localObject4);
                          if (n != 1) {
                            break label2613;
                          }
                          ((MessageObject.GroupedMessages)localObject4).messages.add(localObject6);
                          paramInt1++;
                          ((ArrayList)localObject3).add(localObject6);
                          if (n != 1) {
                            break label2666;
                          }
                          this.messages.add(0, localObject6);
                          if (this.currentEncryptedChat != null) {
                            break label2692;
                          }
                          if ((this.createUnreadMessageAfterId == 0) || (n == 1) || (i3 + 1 >= localArrayList.size())) {
                            break label2687;
                          }
                          localObject2 = (MessageObject)localArrayList.get(i3 + 1);
                          if (!((MessageObject)localObject6).isOut())
                          {
                            paramVarArgs = (Object[])localObject2;
                            if (((MessageObject)localObject2).getId() < this.createUnreadMessageAfterId) {}
                          }
                          else
                          {
                            paramVarArgs = null;
                          }
                          if ((n != 2) || (((MessageObject)localObject6).getId() != this.first_unread_id)) {
                            break label2759;
                          }
                          if (i2 <= AndroidUtilities.displaySize.y / 2)
                          {
                            paramInt2 = paramInt1;
                            if (this.forwardEndReached[0] != 0) {}
                          }
                          else
                          {
                            localObject2 = new TLRPC.TL_message();
                            ((TLRPC.Message)localObject2).message = "";
                            ((TLRPC.Message)localObject2).id = 0;
                            localObject2 = new MessageObject(this.currentAccount, (TLRPC.Message)localObject2, false);
                            ((MessageObject)localObject2).type = 6;
                            ((MessageObject)localObject2).contentType = 2;
                            this.messages.add(this.messages.size() - 1, localObject2);
                            this.unreadMessageObject = ((MessageObject)localObject2);
                            this.scrollToMessage = this.unreadMessageObject;
                            this.scrollToMessagePosition = 55536;
                            paramInt2 = paramInt1 + 1;
                          }
                          localObject4 = localObject5;
                          localObject3 = localObject1;
                          paramInt1 = paramInt2;
                        } while (n == 2);
                        localObject4 = localObject5;
                        localObject3 = localObject1;
                        paramInt1 = paramInt2;
                      } while (this.unreadMessageObject != null);
                      localObject4 = localObject5;
                      localObject3 = localObject1;
                      paramInt1 = paramInt2;
                    } while (this.createUnreadMessageAfterId == 0);
                    if ((this.currentEncryptedChat == null) && (!((MessageObject)localObject6).isOut()) && (((MessageObject)localObject6).getId() >= this.createUnreadMessageAfterId)) {
                      break label2254;
                    }
                    localObject4 = localObject5;
                    localObject3 = localObject1;
                    paramInt1 = paramInt2;
                  } while (this.currentEncryptedChat == null);
                  localObject4 = localObject5;
                  localObject3 = localObject1;
                  paramInt1 = paramInt2;
                } while (((MessageObject)localObject6).isOut());
                localObject4 = localObject5;
                localObject3 = localObject1;
                paramInt1 = paramInt2;
              } while (((MessageObject)localObject6).getId() > this.createUnreadMessageAfterId);
              if ((n == 1) || (paramVarArgs != null)) {
                break label2315;
              }
              localObject4 = localObject5;
              localObject3 = localObject1;
              paramInt1 = paramInt2;
            } while (paramVarArgs != null);
            localObject4 = localObject5;
            localObject3 = localObject1;
            paramInt1 = paramInt2;
          } while (!bool1);
          localObject4 = localObject5;
          localObject3 = localObject1;
          paramInt1 = paramInt2;
        } while (i3 != localArrayList.size() - 1);
        label2315:
        paramVarArgs = new TLRPC.TL_message();
        paramVarArgs.message = "";
        paramVarArgs.id = 0;
        paramVarArgs = new MessageObject(this.currentAccount, paramVarArgs, false);
        paramVarArgs.type = 6;
        paramVarArgs.contentType = 2;
        if (n == 1) {
          this.messages.add(1, paramVarArgs);
        }
        for (;;)
        {
          this.unreadMessageObject = paramVarArgs;
          if (n == 3)
          {
            this.scrollToMessage = this.unreadMessageObject;
            this.startLoadFromMessageId = 0;
            this.scrollToMessagePosition = 56536;
          }
          paramInt1 = paramInt2 + 1;
          localObject4 = localObject5;
          localObject3 = localObject1;
          break;
          label2421:
          if (this.currentEncryptedChat == null) {
            break label1259;
          }
          this.maxMessageId[k] = Math.max(((MessageObject)localObject1).getId(), this.maxMessageId[k]);
          this.minMessageId[k] = Math.min(((MessageObject)localObject1).getId(), this.minMessageId[k]);
          break label1259;
          label2475:
          this.messages.add(localObject1);
          break label1661;
          label2488:
          localObject5 = (MessageObject)this.messages.get(this.messages.size() - 2);
          break label1736;
          label2512:
          localObject1 = localObject4;
          if (((MessageObject)localObject5).messageOwner.grouped_id == ((MessageObject)localObject6).messageOwner.grouped_id) {
            break label1797;
          }
          ((MessageObject)localObject6).localGroupId = Utilities.random.nextLong();
          localObject1 = null;
          break label1797;
          label2553:
          if (localObject2 != null)
          {
            localObject5 = paramVarArgs;
            localObject4 = localObject1;
            if (((LongSparseArray)localObject2).indexOfKey(((MessageObject)localObject6).getGroupId()) >= 0) {
              break label1838;
            }
          }
          localObject5 = paramVarArgs;
          if (paramVarArgs == null) {
            localObject5 = new LongSparseArray();
          }
          ((LongSparseArray)localObject5).put(((MessageObject)localObject6).getGroupId(), localObject1);
          localObject4 = localObject1;
          break label1838;
          label2613:
          ((MessageObject.GroupedMessages)localObject4).messages.add(0, localObject6);
          break label1885;
          label2627:
          localObject5 = paramVarArgs;
          localObject1 = localObject2;
          if (((MessageObject)localObject6).messageOwner.grouped_id == 0L) {
            break label1885;
          }
          ((MessageObject)localObject6).messageOwner.grouped_id = 0L;
          localObject5 = paramVarArgs;
          localObject1 = localObject2;
          break label1885;
          label2666:
          this.messages.add(this.messages.size() - 1, localObject6);
          break label1912;
          label2687:
          paramVarArgs = null;
          break label1983;
          label2692:
          if ((this.createUnreadMessageAfterId != 0) && (n != 1) && (i3 - 1 >= 0))
          {
            localObject2 = (MessageObject)localArrayList.get(i3 - 1);
            if (!((MessageObject)localObject6).isOut())
            {
              paramVarArgs = (Object[])localObject2;
              if (((MessageObject)localObject2).getId() < this.createUnreadMessageAfterId) {
                break label1983;
              }
            }
            paramVarArgs = null;
            break label1983;
          }
          paramVarArgs = null;
          break label1983;
          label2759:
          if (n != 3)
          {
            paramInt2 = paramInt1;
            if (n != 4) {
              break label2120;
            }
          }
          paramInt2 = paramInt1;
          if (((MessageObject)localObject6).getId() != this.startLoadFromMessageId) {
            break label2120;
          }
          if (this.needSelectFromMessageId) {}
          for (this.highlightMessageId = ((MessageObject)localObject6).getId();; this.highlightMessageId = Integer.MAX_VALUE)
          {
            this.scrollToMessage = ((MessageObject)localObject6);
            this.startLoadFromMessageId = 0;
            paramInt2 = paramInt1;
            if (this.scrollToMessagePosition != 55536) {
              break;
            }
            this.scrollToMessagePosition = 56536;
            paramInt2 = paramInt1;
            break;
          }
          this.messages.add(this.messages.size() - 1, paramVarArgs);
        }
      }
      if (bool1) {
        this.createUnreadMessageAfterId = 0;
      }
      if ((n == 0) && (paramInt2 == 0)) {
        this.loadsCount -= 1;
      }
      if (localObject2 != null) {
        for (paramInt1 = 0; paramInt1 < ((LongSparseArray)localObject2).size(); paramInt1++)
        {
          localObject5 = (MessageObject.GroupedMessages)((LongSparseArray)localObject2).valueAt(paramInt1);
          ((MessageObject.GroupedMessages)localObject5).calculate();
          if ((this.chatAdapter != null) && (paramVarArgs != null) && (paramVarArgs.indexOfKey(((LongSparseArray)localObject2).keyAt(paramInt1)) >= 0))
          {
            localObject1 = (MessageObject)((MessageObject.GroupedMessages)localObject5).messages.get(((MessageObject.GroupedMessages)localObject5).messages.size() - 1);
            i3 = this.messages.indexOf(localObject1);
            if (i3 >= 0) {
              this.chatAdapter.notifyItemRangeChanged(this.chatAdapter.messagesStartRow + i3, ((MessageObject.GroupedMessages)localObject5).messages.size());
            }
          }
        }
      }
      if ((this.forwardEndReached[k] != 0) && (k != 1))
      {
        this.first_unread_id = 0;
        this.last_message_id = 0;
        this.createUnreadMessageAfterId = 0;
      }
      if (n == 1)
      {
        i1 = 0;
        j = 0;
        paramInt1 = i1;
        if (localArrayList.size() != m) {
          if ((bool2) && (this.currentEncryptedChat == null))
          {
            paramInt1 = i1;
            if (this.forwardEndReached[k] == 0) {}
          }
          else
          {
            this.forwardEndReached[k] = true;
            paramInt1 = j;
            if (k != 1)
            {
              this.first_unread_id = 0;
              this.last_message_id = 0;
              this.createUnreadMessageAfterId = 0;
              this.chatAdapter.notifyItemRemoved(this.chatAdapter.loadingDownRow);
              paramInt1 = 0 + 1;
            }
            this.startLoadFromMessageId = 0;
          }
        }
        if (paramInt2 > 0)
        {
          k = this.chatLayoutManager.findFirstVisibleItemPosition();
          j = k;
          if (k == 0) {
            j = k + 1;
          }
          paramVarArgs = this.chatLayoutManager.findViewByPosition(j);
          if (paramVarArgs != null) {
            break label3376;
          }
          k = 0;
          label3204:
          this.chatAdapter.notifyItemRangeInserted(1, paramInt2);
          if (j != -1) {
            this.chatLayoutManager.scrollToPositionWithOffset(j + paramInt2 - paramInt1, k);
          }
        }
        this.loadingForward = false;
        label3239:
        if ((this.first) && (this.messages.size() > 0)) {
          this.first = false;
        }
        if ((this.messages.isEmpty()) && (this.currentEncryptedChat == null) && (this.currentUser != null) && (this.currentUser.bot) && (this.botUser == null))
        {
          this.botUser = "";
          updateBottomOverlay();
        }
        if ((paramInt2 != 0) || (this.currentEncryptedChat == null) || (this.endReached[0] != 0)) {
          break label4224;
        }
        this.first = true;
        if (this.chatListView != null) {
          this.chatListView.setEmptyView(null);
        }
        if (this.emptyViewContainer != null) {
          this.emptyViewContainer.setVisibility(4);
        }
      }
      for (;;)
      {
        checkScrollForLoad(false);
        break;
        label3376:
        k = this.chatListView.getMeasuredHeight() - paramVarArgs.getBottom() - this.chatListView.getPaddingBottom();
        break label3204;
        if ((localArrayList.size() < m) && (n != 3) && (n != 4))
        {
          if (!bool2) {
            break label3818;
          }
          if ((this.currentEncryptedChat != null) || (this.isBroadcast)) {
            this.endReached[k] = true;
          }
          if (n != 2) {
            this.cacheEndReached[k] = true;
          }
        }
        label3464:
        this.loading = false;
        if (this.chatListView != null)
        {
          if ((this.first) || (this.scrollToTopOnResume) || (this.forceScrollToTop))
          {
            this.forceScrollToTop = false;
            this.chatAdapter.notifyDataSetChanged();
            if (this.scrollToMessage != null)
            {
              bool1 = true;
              if (this.startLoadFromMessageOffset != Integer.MAX_VALUE)
              {
                paramInt1 = -this.startLoadFromMessageOffset - this.chatListView.getPaddingBottom();
                this.startLoadFromMessageOffset = Integer.MAX_VALUE;
                label3550:
                if (!this.messages.isEmpty())
                {
                  if ((this.messages.get(this.messages.size() - 1) != this.scrollToMessage) && (this.messages.get(this.messages.size() - 2) != this.scrollToMessage)) {
                    break label3910;
                  }
                  this.chatLayoutManager.scrollToPositionWithOffset(this.chatAdapter.loadingUpRow, paramInt1, bool1);
                }
                label3623:
                this.chatListView.invalidate();
                if ((this.scrollToMessagePosition == 55536) || (this.scrollToMessagePosition == 56536))
                {
                  showPagedownButton(true, true);
                  if (j != 0)
                  {
                    this.pagedownButtonCounter.setVisibility(0);
                    paramVarArgs = this.pagedownButtonCounter;
                    this.newUnreadMessageCount = j;
                    paramVarArgs.setText(String.format("%d", new Object[] { Integer.valueOf(j) }));
                  }
                }
                this.scrollToMessagePosition = 55536;
                this.scrollToMessage = null;
                label3714:
                if (i1 != 0)
                {
                  showMentiondownButton(true, true);
                  this.mentiondownButtonCounter.setVisibility(0);
                  paramVarArgs = this.mentiondownButtonCounter;
                  this.newMentionsCount = i1;
                  paramVarArgs.setText(String.format("%d", new Object[] { Integer.valueOf(i1) }));
                }
              }
            }
          }
          for (;;)
          {
            if (this.paused)
            {
              this.scrollToTopOnResume = true;
              if (this.scrollToMessage != null) {
                this.scrollToTopUnReadOnResume = true;
              }
            }
            if ((!this.first) || (this.chatListView == null)) {
              break;
            }
            this.chatListView.setEmptyView(this.emptyViewContainer);
            break;
            label3818:
            if ((n == 2) && ((localArrayList.size() != 0) || (!this.messages.isEmpty()))) {
              break label3464;
            }
            this.endReached[k] = true;
            break label3464;
            if (this.scrollToMessagePosition == 56536)
            {
              paramInt1 = getScrollOffsetForMessage(this.scrollToMessage);
              bool1 = false;
              break label3550;
            }
            if (this.scrollToMessagePosition == 55536)
            {
              paramInt1 = -AndroidUtilities.dp(11.0F);
              bool1 = false;
              break label3550;
            }
            paramInt1 = this.scrollToMessagePosition;
            break label3550;
            label3910:
            this.chatLayoutManager.scrollToPositionWithOffset(this.chatAdapter.messagesStartRow + this.messages.indexOf(this.scrollToMessage), paramInt1, bool1);
            break label3623;
            moveScrollToLastMessage();
            break label3714;
            if (paramInt2 != 0)
            {
              j = 0;
              paramInt1 = j;
              if (this.endReached[k] != 0) {
                if ((k != 0) || (this.mergeDialogId != 0L))
                {
                  paramInt1 = j;
                  if (k != 1) {}
                }
                else
                {
                  paramInt1 = 1;
                  this.chatAdapter.notifyItemRangeChanged(this.chatAdapter.loadingUpRow - 1, 2);
                  this.chatAdapter.updateRows();
                }
              }
              i1 = this.chatLayoutManager.findFirstVisibleItemPosition();
              paramVarArgs = this.chatLayoutManager.findViewByPosition(i1);
              if (paramVarArgs == null)
              {
                j = 0;
                label4044:
                if (paramInt1 == 0) {
                  break label4146;
                }
                k = 1;
                label4051:
                if (paramInt2 - k > 0)
                {
                  k = this.chatAdapter.messagesEndRow;
                  this.chatAdapter.notifyItemChanged(this.chatAdapter.loadingUpRow);
                  paramVarArgs = this.chatAdapter;
                  if (paramInt1 == 0) {
                    break label4152;
                  }
                }
              }
              label4146:
              label4152:
              for (paramInt1 = 1;; paramInt1 = 0)
              {
                paramVarArgs.notifyItemRangeInserted(k, paramInt2 - paramInt1);
                if (i1 == -1) {
                  break;
                }
                this.chatLayoutManager.scrollToPositionWithOffset(i1, j);
                break;
                j = this.chatListView.getMeasuredHeight() - paramVarArgs.getBottom() - this.chatListView.getPaddingBottom();
                break label4044;
                k = 0;
                break label4051;
              }
            }
            if ((this.endReached[k] != 0) && (((k == 0) && (this.mergeDialogId == 0L)) || (k == 1))) {
              this.chatAdapter.notifyItemRemoved(this.chatAdapter.loadingUpRow);
            }
          }
        }
        this.scrollToTopOnResume = true;
        if (this.scrollToMessage == null) {
          break label3239;
        }
        this.scrollToTopUnReadOnResume = true;
        break label3239;
        label4224:
        if (this.progressView != null) {
          this.progressView.setVisibility(4);
        }
      }
      if (paramInt1 == NotificationCenter.emojiDidLoaded)
      {
        if (this.chatListView != null) {
          this.chatListView.invalidateViews();
        }
        if (this.replyObjectTextView != null) {
          this.replyObjectTextView.invalidate();
        }
        if (this.alertTextView != null) {
          this.alertTextView.invalidate();
        }
        if (this.pinnedMessageTextView != null) {
          this.pinnedMessageTextView.invalidate();
        }
        if (this.mentionListView != null) {
          this.mentionListView.invalidateViews();
        }
      }
      else
      {
        if (paramInt1 == NotificationCenter.updateInterfaces)
        {
          j = ((Integer)paramVarArgs[0]).intValue();
          if (((j & 0x1) != 0) || ((j & 0x10) != 0))
          {
            if (this.currentChat == null) {
              break label4595;
            }
            paramVarArgs = MessagesController.getInstance(this.currentAccount).getChat(Integer.valueOf(this.currentChat.id));
            if (paramVarArgs != null) {
              this.currentChat = paramVarArgs;
            }
          }
          for (;;)
          {
            updateTitle();
            paramInt1 = 0;
            if (((j & 0x20) != 0) || ((j & 0x4) != 0))
            {
              if ((this.currentChat != null) && (this.avatarContainer != null)) {
                this.avatarContainer.updateOnlineCount();
              }
              paramInt1 = 1;
            }
            if (((j & 0x2) != 0) || ((j & 0x8) != 0) || ((j & 0x1) != 0))
            {
              checkAndUpdateAvatar();
              updateVisibleRows();
            }
            if ((j & 0x40) != 0) {
              paramInt1 = 1;
            }
            paramInt2 = paramInt1;
            if ((j & 0x2000) != 0)
            {
              paramInt2 = paramInt1;
              if (ChatObject.isChannel(this.currentChat))
              {
                paramVarArgs = MessagesController.getInstance(this.currentAccount).getChat(Integer.valueOf(this.currentChat.id));
                if (paramVarArgs == null) {
                  break;
                }
                this.currentChat = paramVarArgs;
                paramInt1 = 1;
                updateBottomOverlay();
                paramInt2 = paramInt1;
                if (this.chatActivityEnterView != null)
                {
                  this.chatActivityEnterView.setDialogId(this.dialog_id, this.currentAccount);
                  paramInt2 = paramInt1;
                }
              }
            }
            if ((this.avatarContainer != null) && (paramInt2 != 0)) {
              this.avatarContainer.updateSubtitle();
            }
            if ((j & 0x80) == 0) {
              break;
            }
            updateContactStatus();
            break;
            label4595:
            if (this.currentUser != null)
            {
              paramVarArgs = MessagesController.getInstance(this.currentAccount).getUser(Integer.valueOf(this.currentUser.id));
              if (paramVarArgs != null) {
                this.currentUser = paramVarArgs;
              }
            }
          }
        }
        if (paramInt1 == NotificationCenter.didReceivedNewMessages)
        {
          if (((Long)paramVarArgs[0]).longValue() == this.dialog_id)
          {
            int i4 = UserConfig.getInstance(this.currentAccount).getClientUserId();
            i3 = 0;
            k = 0;
            i2 = 0;
            localObject3 = (ArrayList)paramVarArgs[1];
            if ((this.currentEncryptedChat != null) && (((ArrayList)localObject3).size() == 1))
            {
              paramVarArgs = (MessageObject)((ArrayList)localObject3).get(0);
              if ((this.currentEncryptedChat != null) && (paramVarArgs.isOut()) && (paramVarArgs.messageOwner.action != null) && ((paramVarArgs.messageOwner.action instanceof TLRPC.TL_messageEncryptedAction)) && ((paramVarArgs.messageOwner.action.encryptedAction instanceof TLRPC.TL_decryptedMessageActionSetMessageTTL)) && (getParentActivity() != null) && (AndroidUtilities.getPeerLayerVersion(this.currentEncryptedChat.layer) < 17) && (this.currentEncryptedChat.ttl > 0) && (this.currentEncryptedChat.ttl <= 60))
              {
                paramVarArgs = new AlertDialog.Builder(getParentActivity());
                paramVarArgs.setTitle(LocaleController.getString("AppName", NUM));
                paramVarArgs.setPositiveButton(LocaleController.getString("OK", NUM), null);
                paramVarArgs.setMessage(LocaleController.formatString("CompatibilityChat", NUM, new Object[] { this.currentUser.first_name, this.currentUser.first_name }));
                showDialog(paramVarArgs.create());
              }
            }
            if ((this.currentChat != null) || (this.inlineReturn != 0L))
            {
              paramInt1 = 0;
              if (paramInt1 < ((ArrayList)localObject3).size())
              {
                localObject1 = (MessageObject)((ArrayList)localObject3).get(paramInt1);
                if (this.currentChat != null) {
                  if ((((((MessageObject)localObject1).messageOwner.action instanceof TLRPC.TL_messageActionChatDeleteUser)) && (((MessageObject)localObject1).messageOwner.action.user_id == i4)) || (((((MessageObject)localObject1).messageOwner.action instanceof TLRPC.TL_messageActionChatAddUser)) && (((MessageObject)localObject1).messageOwner.action.users.contains(Integer.valueOf(i4)))))
                  {
                    paramVarArgs = MessagesController.getInstance(this.currentAccount).getChat(Integer.valueOf(this.currentChat.id));
                    if (paramVarArgs != null)
                    {
                      this.currentChat = paramVarArgs;
                      checkActionBarMenu();
                      updateBottomOverlay();
                      if (this.avatarContainer != null) {
                        this.avatarContainer.updateSubtitle();
                      }
                    }
                  }
                }
                label5228:
                while ((this.inlineReturn == 0L) || (((MessageObject)localObject1).messageOwner.reply_markup == null)) {
                  for (;;)
                  {
                    paramInt1++;
                    break;
                    if ((((MessageObject)localObject1).messageOwner.reply_to_msg_id != 0) && (((MessageObject)localObject1).replyMessageObject == null))
                    {
                      ((MessageObject)localObject1).replyMessageObject = ((MessageObject)this.messagesDict[0].get(((MessageObject)localObject1).messageOwner.reply_to_msg_id));
                      if ((((MessageObject)localObject1).messageOwner.action instanceof TLRPC.TL_messageActionPinMessage)) {
                        ((MessageObject)localObject1).generatePinMessageText(null, null);
                      }
                      for (;;)
                      {
                        if ((!((MessageObject)localObject1).isMegagroup()) || (((MessageObject)localObject1).replyMessageObject == null) || (((MessageObject)localObject1).replyMessageObject.messageOwner == null)) {
                          break label5228;
                        }
                        paramVarArgs = ((MessageObject)localObject1).replyMessageObject.messageOwner;
                        paramVarArgs.flags |= 0x80000000;
                        break;
                        if ((((MessageObject)localObject1).messageOwner.action instanceof TLRPC.TL_messageActionGameScore)) {
                          ((MessageObject)localObject1).generateGameMessageText(null);
                        } else if ((((MessageObject)localObject1).messageOwner.action instanceof TLRPC.TL_messageActionPaymentSent)) {
                          ((MessageObject)localObject1).generatePaymentSentMessageText(null);
                        }
                      }
                    }
                  }
                }
                paramInt2 = 0;
                label5252:
                if (paramInt2 < ((MessageObject)localObject1).messageOwner.reply_markup.rows.size()) {
                  paramVarArgs = (TLRPC.TL_keyboardButtonRow)((MessageObject)localObject1).messageOwner.reply_markup.rows.get(paramInt2);
                }
                for (j = 0;; j++) {
                  if (j < paramVarArgs.buttons.size())
                  {
                    localObject2 = (TLRPC.KeyboardButton)paramVarArgs.buttons.get(j);
                    if ((localObject2 instanceof TLRPC.TL_keyboardButtonSwitchInline)) {
                      processSwitchButton((TLRPC.TL_keyboardButtonSwitchInline)localObject2);
                    }
                  }
                  else
                  {
                    paramInt2++;
                    break label5252;
                    break;
                  }
                }
              }
            }
            paramInt2 = 0;
            paramInt1 = 0;
            if (this.forwardEndReached[0] == 0)
            {
              m = Integer.MIN_VALUE;
              j = Integer.MIN_VALUE;
              if (this.currentEncryptedChat != null) {
                j = Integer.MAX_VALUE;
              }
              i1 = 0;
              paramInt2 = k;
              k = i1;
              for (;;)
              {
                if (k < ((ArrayList)localObject3).size())
                {
                  localObject2 = (MessageObject)((ArrayList)localObject3).get(k);
                  if ((this.currentUser != null) && (((this.currentUser.bot) && (((MessageObject)localObject2).isOut())) || (this.currentUser.id == i4))) {
                    ((MessageObject)localObject2).setIsRead();
                  }
                  if ((this.avatarContainer != null) && (this.currentEncryptedChat != null) && (((MessageObject)localObject2).messageOwner.action != null) && ((((MessageObject)localObject2).messageOwner.action instanceof TLRPC.TL_messageEncryptedAction)) && ((((MessageObject)localObject2).messageOwner.action.encryptedAction instanceof TLRPC.TL_decryptedMessageActionSetMessageTTL))) {
                    this.avatarContainer.setTime(((TLRPC.TL_decryptedMessageActionSetMessageTTL)((MessageObject)localObject2).messageOwner.action.encryptedAction).ttl_seconds);
                  }
                  if ((((MessageObject)localObject2).messageOwner.action instanceof TLRPC.TL_messageActionChatMigrateTo))
                  {
                    localObject1 = new Bundle();
                    ((Bundle)localObject1).putInt("chat_id", ((MessageObject)localObject2).messageOwner.action.channel_id);
                    if (this.parentLayout.fragmentsStack.size() > 0) {}
                    for (paramVarArgs = (BaseFragment)this.parentLayout.fragmentsStack.get(this.parentLayout.fragmentsStack.size() - 1);; paramVarArgs = null)
                    {
                      AndroidUtilities.runOnUIThread(new Runnable()
                      {
                        public void run()
                        {
                          ActionBarLayout localActionBarLayout = ChatActivity.this.parentLayout;
                          if (paramVarArgs != null) {
                            NotificationCenter.getInstance(ChatActivity.this.currentAccount).removeObserver(paramVarArgs, NotificationCenter.closeChats);
                          }
                          NotificationCenter.getInstance(ChatActivity.this.currentAccount).postNotificationName(NotificationCenter.closeChats, new Object[0]);
                          localActionBarLayout.presentFragment(new ChatActivity(localObject1), true);
                          AndroidUtilities.runOnUIThread(new Runnable()
                          {
                            public void run()
                            {
                              MessagesController.getInstance(ChatActivity.this.currentAccount).loadFullChat(ChatActivity.84.this.val$channel_id, 0, true);
                            }
                          }, 1000L);
                        }
                      });
                      break;
                    }
                  }
                  i1 = paramInt1;
                  if (this.currentChat != null)
                  {
                    i1 = paramInt1;
                    if (this.currentChat.megagroup) {
                      if (!(((MessageObject)localObject2).messageOwner.action instanceof TLRPC.TL_messageActionChatAddUser))
                      {
                        i1 = paramInt1;
                        if (!(((MessageObject)localObject2).messageOwner.action instanceof TLRPC.TL_messageActionChatDeleteUser)) {}
                      }
                      else
                      {
                        i1 = 1;
                      }
                    }
                  }
                  if ((k == 0) && (((MessageObject)localObject2).messageOwner.id < 0) && (((MessageObject)localObject2).type == 5)) {
                    this.needAnimateToMessage = ((MessageObject)localObject2);
                  }
                  if ((((MessageObject)localObject2).isOut()) && (((MessageObject)localObject2).isSending()))
                  {
                    scrollToLastMessage(false);
                    break;
                  }
                  i2 = m;
                  i = j;
                  i3 = paramInt2;
                  if (((MessageObject)localObject2).type >= 0)
                  {
                    if (this.messagesDict[0].indexOfKey(((MessageObject)localObject2).getId()) >= 0)
                    {
                      i3 = paramInt2;
                      i = j;
                      i2 = m;
                    }
                  }
                  else
                  {
                    k++;
                    m = i2;
                    j = i;
                    paramInt1 = i1;
                    paramInt2 = i3;
                    continue;
                  }
                  ((MessageObject)localObject2).checkLayout();
                  m = Math.max(m, ((MessageObject)localObject2).messageOwner.date);
                  if (((MessageObject)localObject2).getId() > 0)
                  {
                    paramInt1 = Math.max(((MessageObject)localObject2).getId(), j);
                    this.last_message_id = Math.max(this.last_message_id, ((MessageObject)localObject2).getId());
                  }
                  for (;;)
                  {
                    if ((((MessageObject)localObject2).messageOwner.mentioned) && (((MessageObject)localObject2).isContentUnread())) {
                      this.newMentionsCount += 1;
                    }
                    this.newUnreadMessageCount += 1;
                    if (((MessageObject)localObject2).type != 10)
                    {
                      i2 = m;
                      i = paramInt1;
                      i3 = paramInt2;
                      if (((MessageObject)localObject2).type != 11) {
                        break;
                      }
                    }
                    i3 = 1;
                    i2 = m;
                    i = paramInt1;
                    break;
                    paramInt1 = j;
                    if (this.currentEncryptedChat != null)
                    {
                      paramInt1 = Math.min(((MessageObject)localObject2).getId(), j);
                      this.last_message_id = Math.min(this.last_message_id, ((MessageObject)localObject2).getId());
                    }
                  }
                }
              }
              if ((this.newUnreadMessageCount != 0) && (this.pagedownButtonCounter != null))
              {
                this.pagedownButtonCounter.setVisibility(0);
                this.pagedownButtonCounter.setText(String.format("%d", new Object[] { Integer.valueOf(this.newUnreadMessageCount) }));
              }
              if ((this.newMentionsCount != 0) && (this.mentiondownButtonCounter != null))
              {
                this.mentiondownButtonCounter.setVisibility(0);
                this.mentiondownButtonCounter.setText(String.format("%d", new Object[] { Integer.valueOf(this.newMentionsCount) }));
                showMentiondownButton(true, true);
              }
              updateVisibleRows();
              j = paramInt1;
            }
            for (;;)
            {
              if ((!this.messages.isEmpty()) && (this.botUser != null) && (this.botUser.length() == 0))
              {
                this.botUser = null;
                updateBottomOverlay();
              }
              if (paramInt2 != 0)
              {
                updateTitle();
                checkAndUpdateAvatar();
              }
              if (j == 0) {
                break;
              }
              MessagesController.getInstance(this.currentAccount).loadFullChat(this.currentChat.id, 0, true);
              break;
              localObject2 = null;
              j = 1;
              paramVarArgs = null;
              if (BuildVars.LOGS_ENABLED) {
                FileLog.d("received new messages " + ((ArrayList)localObject3).size() + " in dialog " + this.dialog_id);
              }
              m = 0;
              paramInt1 = paramInt2;
              while (m < ((ArrayList)localObject3).size())
              {
                paramInt2 = -1;
                localObject4 = (MessageObject)((ArrayList)localObject3).get(m);
                if ((this.currentUser != null) && (((this.currentUser.bot) && (((MessageObject)localObject4).isOut())) || (this.currentUser.id == i4))) {
                  ((MessageObject)localObject4).setIsRead();
                }
                if ((this.avatarContainer != null) && (this.currentEncryptedChat != null) && (((MessageObject)localObject4).messageOwner.action != null) && ((((MessageObject)localObject4).messageOwner.action instanceof TLRPC.TL_messageEncryptedAction)) && ((((MessageObject)localObject4).messageOwner.action.encryptedAction instanceof TLRPC.TL_decryptedMessageActionSetMessageTTL))) {
                  this.avatarContainer.setTime(((TLRPC.TL_decryptedMessageActionSetMessageTTL)((MessageObject)localObject4).messageOwner.action.encryptedAction).ttl_seconds);
                }
                i1 = i2;
                localObject5 = localObject2;
                i = paramInt1;
                n = j;
                int i5 = i3;
                localObject6 = paramVarArgs;
                if (((MessageObject)localObject4).type >= 0)
                {
                  if (this.messagesDict[0].indexOfKey(((MessageObject)localObject4).getId()) >= 0)
                  {
                    localObject6 = paramVarArgs;
                    i5 = i3;
                    n = j;
                    i = paramInt1;
                    localObject5 = localObject2;
                    i1 = i2;
                  }
                }
                else
                {
                  m++;
                  i2 = i1;
                  localObject2 = localObject5;
                  paramInt1 = i;
                  j = n;
                  i3 = i5;
                  paramVarArgs = (Object[])localObject6;
                  continue;
                }
                if ((m == 0) && (((MessageObject)localObject4).messageOwner.id < 0) && (((MessageObject)localObject4).type == 5)) {
                  this.animatingMessageObjects.add(localObject4);
                }
                if (((MessageObject)localObject4).hasValidGroupId())
                {
                  localObject5 = (MessageObject.GroupedMessages)this.groupedMessagesMap.get(((MessageObject)localObject4).getGroupId());
                  localObject1 = localObject5;
                  if (localObject5 == null)
                  {
                    localObject1 = new MessageObject.GroupedMessages();
                    ((MessageObject.GroupedMessages)localObject1).groupId = ((MessageObject)localObject4).getGroupId();
                    this.groupedMessagesMap.put(((MessageObject.GroupedMessages)localObject1).groupId, localObject1);
                  }
                  localObject5 = localObject2;
                  if (localObject2 == null) {
                    localObject5 = new LongSparseArray();
                  }
                  ((LongSparseArray)localObject5).put(((MessageObject.GroupedMessages)localObject1).groupId, localObject1);
                  ((MessageObject.GroupedMessages)localObject1).messages.add(localObject4);
                  localObject2 = localObject5;
                  label6643:
                  k = paramInt2;
                  if (localObject1 != null)
                  {
                    if (((MessageObject.GroupedMessages)localObject1).messages.size() <= 1) {
                      break label7020;
                    }
                    localObject1 = (MessageObject)((MessageObject.GroupedMessages)localObject1).messages.get(((MessageObject.GroupedMessages)localObject1).messages.size() - 2);
                    label6686:
                    k = paramInt2;
                    if (localObject1 != null) {
                      k = this.messages.indexOf(localObject1);
                    }
                  }
                  paramInt2 = k;
                  if (k == -1)
                  {
                    if ((((MessageObject)localObject4).messageOwner.id >= 0) && (!this.messages.isEmpty())) {
                      break label7026;
                    }
                    paramInt2 = 0;
                  }
                  localObject1 = paramVarArgs;
                  if (this.currentEncryptedChat != null)
                  {
                    localObject1 = paramVarArgs;
                    if ((((MessageObject)localObject4).messageOwner.media instanceof TLRPC.TL_messageMediaWebPage))
                    {
                      localObject1 = paramVarArgs;
                      if ((((MessageObject)localObject4).messageOwner.media.webpage instanceof TLRPC.TL_webPageUrlPending))
                      {
                        localObject1 = paramVarArgs;
                        if (paramVarArgs == null) {
                          localObject1 = new HashMap();
                        }
                        localObject5 = (ArrayList)((HashMap)localObject1).get(((MessageObject)localObject4).messageOwner.media.webpage.url);
                        paramVarArgs = (Object[])localObject5;
                        if (localObject5 == null)
                        {
                          paramVarArgs = new ArrayList();
                          ((HashMap)localObject1).put(((MessageObject)localObject4).messageOwner.media.webpage.url, paramVarArgs);
                        }
                        paramVarArgs.add(localObject4);
                      }
                    }
                  }
                  ((MessageObject)localObject4).checkLayout();
                  if (!(((MessageObject)localObject4).messageOwner.action instanceof TLRPC.TL_messageActionChatMigrateTo)) {
                    break label7280;
                  }
                  localObject1 = new Bundle();
                  ((Bundle)localObject1).putInt("chat_id", ((MessageObject)localObject4).messageOwner.action.channel_id);
                  if (this.parentLayout.fragmentsStack.size() <= 0) {
                    break label7275;
                  }
                }
                label7020:
                label7026:
                label7193:
                label7233:
                label7239:
                label7275:
                for (paramVarArgs = (BaseFragment)this.parentLayout.fragmentsStack.get(this.parentLayout.fragmentsStack.size() - 1);; paramVarArgs = null)
                {
                  AndroidUtilities.runOnUIThread(new Runnable()
                  {
                    public void run()
                    {
                      ActionBarLayout localActionBarLayout = ChatActivity.this.parentLayout;
                      if (paramVarArgs != null) {
                        NotificationCenter.getInstance(ChatActivity.this.currentAccount).removeObserver(paramVarArgs, NotificationCenter.closeChats);
                      }
                      NotificationCenter.getInstance(ChatActivity.this.currentAccount).postNotificationName(NotificationCenter.closeChats, new Object[0]);
                      localActionBarLayout.presentFragment(new ChatActivity(localObject1), true);
                      AndroidUtilities.runOnUIThread(new Runnable()
                      {
                        public void run()
                        {
                          MessagesController.getInstance(ChatActivity.this.currentAccount).loadFullChat(ChatActivity.85.this.val$channel_id, 0, true);
                        }
                      }, 1000L);
                    }
                  });
                  if (localObject2 == null) {
                    break;
                  }
                  for (paramInt1 = 0; paramInt1 < ((LongSparseArray)localObject2).size(); paramInt1++) {
                    ((MessageObject.GroupedMessages)((LongSparseArray)localObject2).valueAt(paramInt1)).calculate();
                  }
                  break;
                  localObject1 = null;
                  break label6643;
                  localObject1 = null;
                  break label6686;
                  i = this.messages.size();
                  for (paramInt2 = 0;; paramInt2++)
                  {
                    i1 = k;
                    if (paramInt2 < i)
                    {
                      localObject1 = (MessageObject)this.messages.get(paramInt2);
                      if ((((MessageObject)localObject1).type < 0) || (((MessageObject)localObject1).messageOwner.date <= 0) || (((((MessageObject)localObject1).messageOwner.id <= 0) || (((MessageObject)localObject4).messageOwner.id <= 0) || (((MessageObject)localObject1).messageOwner.id >= ((MessageObject)localObject4).messageOwner.id)) && (((MessageObject)localObject1).messageOwner.date >= ((MessageObject)localObject4).messageOwner.date))) {
                        continue;
                      }
                      if (((MessageObject)localObject1).getGroupId() == 0L) {
                        break label7233;
                      }
                      localObject5 = (MessageObject.GroupedMessages)this.groupedMessagesMap.get(((MessageObject)localObject1).getGroupId());
                      localObject1 = localObject5;
                      if (localObject5 != null)
                      {
                        localObject1 = localObject5;
                        if (((MessageObject.GroupedMessages)localObject5).messages.size() == 0) {
                          localObject1 = null;
                        }
                      }
                      if (localObject1 != null) {
                        break label7239;
                      }
                    }
                    for (i1 = paramInt2;; i1 = this.messages.indexOf(((MessageObject.GroupedMessages)localObject1).messages.get(((MessageObject.GroupedMessages)localObject1).messages.size() - 1)))
                    {
                      if (i1 != -1)
                      {
                        paramInt2 = i1;
                        if (i1 <= this.messages.size()) {
                          break;
                        }
                      }
                      paramInt2 = this.messages.size();
                      break;
                      localObject1 = null;
                      break label7193;
                    }
                  }
                }
                label7280:
                k = paramInt1;
                if (this.currentChat != null)
                {
                  k = paramInt1;
                  if (this.currentChat.megagroup) {
                    if (!(((MessageObject)localObject4).messageOwner.action instanceof TLRPC.TL_messageActionChatAddUser))
                    {
                      k = paramInt1;
                      if (!(((MessageObject)localObject4).messageOwner.action instanceof TLRPC.TL_messageActionChatDeleteUser)) {}
                    }
                    else
                    {
                      k = 1;
                    }
                  }
                }
                if ((this.minDate[0] == 0) || (((MessageObject)localObject4).messageOwner.date < this.minDate[0])) {
                  this.minDate[0] = ((MessageObject)localObject4).messageOwner.date;
                }
                if (((MessageObject)localObject4).isOut())
                {
                  removeUnreadPlane(true);
                  i2 = 1;
                }
                if (((MessageObject)localObject4).getId() > 0)
                {
                  this.maxMessageId[0] = Math.min(((MessageObject)localObject4).getId(), this.maxMessageId[0]);
                  this.minMessageId[0] = Math.max(((MessageObject)localObject4).getId(), this.minMessageId[0]);
                }
                for (;;)
                {
                  this.maxDate[0] = Math.max(this.maxDate[0], ((MessageObject)localObject4).messageOwner.date);
                  this.messagesDict[0].put(((MessageObject)localObject4).getId(), localObject4);
                  localObject5 = (ArrayList)this.messagesByDays.get(((MessageObject)localObject4).dateKey);
                  paramInt1 = paramInt2;
                  if (paramInt2 > this.messages.size()) {
                    paramInt1 = this.messages.size();
                  }
                  paramVarArgs = (Object[])localObject5;
                  if (localObject5 == null)
                  {
                    localObject5 = new ArrayList();
                    this.messagesByDays.put(((MessageObject)localObject4).dateKey, localObject5);
                    paramVarArgs = new TLRPC.TL_message();
                    paramVarArgs.message = LocaleController.formatDateChat(((MessageObject)localObject4).messageOwner.date);
                    paramVarArgs.id = 0;
                    paramVarArgs.date = ((MessageObject)localObject4).messageOwner.date;
                    paramVarArgs = new MessageObject(this.currentAccount, paramVarArgs, false);
                    paramVarArgs.type = 10;
                    paramVarArgs.contentType = 1;
                    paramVarArgs.isDateObject = true;
                    this.messages.add(paramInt1, paramVarArgs);
                    paramVarArgs = (Object[])localObject5;
                    if (this.chatAdapter != null)
                    {
                      this.chatAdapter.notifyItemInserted(paramInt1);
                      paramVarArgs = (Object[])localObject5;
                    }
                  }
                  i = paramInt1;
                  paramInt2 = j;
                  if (!((MessageObject)localObject4).isOut())
                  {
                    i1 = paramInt1;
                    paramInt2 = j;
                    if (this.paused)
                    {
                      i1 = paramInt1;
                      paramInt2 = j;
                      if (paramInt1 == 0)
                      {
                        i = paramInt1;
                        if (!this.scrollToTopUnReadOnResume)
                        {
                          i = paramInt1;
                          if (this.unreadMessageObject != null)
                          {
                            removeMessageObject(this.unreadMessageObject);
                            i = paramInt1;
                            if (paramInt1 > 0) {
                              i = paramInt1 - 1;
                            }
                            this.unreadMessageObject = null;
                          }
                        }
                        i1 = i;
                        paramInt2 = j;
                        if (this.unreadMessageObject == null)
                        {
                          localObject5 = new TLRPC.TL_message();
                          ((TLRPC.Message)localObject5).message = "";
                          ((TLRPC.Message)localObject5).id = 0;
                          localObject5 = new MessageObject(this.currentAccount, (TLRPC.Message)localObject5, false);
                          ((MessageObject)localObject5).type = 6;
                          ((MessageObject)localObject5).contentType = 2;
                          this.messages.add(0, localObject5);
                          if (this.chatAdapter != null) {
                            this.chatAdapter.notifyItemInserted(0);
                          }
                          this.unreadMessageObject = ((MessageObject)localObject5);
                          this.scrollToMessage = this.unreadMessageObject;
                          this.scrollToMessagePosition = 55536;
                          paramInt2 = 0;
                          this.scrollToTopUnReadOnResume = true;
                          i1 = i;
                        }
                      }
                    }
                    i = i1;
                    if (this.unreadMessageObject != null)
                    {
                      paramInt2 = 1;
                      i = i1;
                    }
                  }
                  paramVarArgs.add(0, localObject4);
                  this.messages.add(i, localObject4);
                  if (this.chatAdapter != null)
                  {
                    this.chatAdapter.notifyItemChanged(i);
                    this.chatAdapter.notifyItemInserted(i);
                  }
                  if ((!((MessageObject)localObject4).isOut()) && (((MessageObject)localObject4).messageOwner.mentioned) && (((MessageObject)localObject4).isContentUnread())) {
                    this.newMentionsCount += 1;
                  }
                  this.newUnreadMessageCount += 1;
                  if (((MessageObject)localObject4).type != 10)
                  {
                    i1 = i2;
                    localObject5 = localObject2;
                    i = k;
                    n = paramInt2;
                    i5 = i3;
                    localObject6 = localObject1;
                    if (((MessageObject)localObject4).type != 11) {
                      break;
                    }
                  }
                  i5 = 1;
                  i1 = i2;
                  localObject5 = localObject2;
                  i = k;
                  n = paramInt2;
                  localObject6 = localObject1;
                  break;
                  if (this.currentEncryptedChat != null)
                  {
                    this.maxMessageId[0] = Math.max(((MessageObject)localObject4).getId(), this.maxMessageId[0]);
                    this.minMessageId[0] = Math.min(((MessageObject)localObject4).getId(), this.minMessageId[0]);
                  }
                }
              }
              if (paramVarArgs != null) {
                MessagesController.getInstance(this.currentAccount).reloadWebPages(this.dialog_id, paramVarArgs);
              }
              if (localObject2 != null) {
                for (paramInt2 = 0; paramInt2 < ((LongSparseArray)localObject2).size(); paramInt2++)
                {
                  paramVarArgs = (MessageObject.GroupedMessages)((LongSparseArray)localObject2).valueAt(paramInt2);
                  i1 = paramVarArgs.posArray.size();
                  paramVarArgs.calculate();
                  k = paramVarArgs.posArray.size();
                  if ((k - i1 > 0) && (this.chatAdapter != null))
                  {
                    i1 = this.messages.indexOf(paramVarArgs.messages.get(paramVarArgs.messages.size() - 1));
                    if (i1 >= 0) {
                      this.chatAdapter.notifyItemRangeChanged(i1, k);
                    }
                  }
                }
              }
              if (this.progressView != null) {
                this.progressView.setVisibility(4);
              }
              if (this.chatAdapter != null)
              {
                if (j != 0) {
                  this.chatAdapter.updateRowWithMessageObject(this.unreadMessageObject);
                }
                label8248:
                if ((this.chatListView == null) || (this.chatAdapter == null)) {
                  break label8469;
                }
                j = this.chatLayoutManager.findFirstVisibleItemPosition();
                paramInt2 = j;
                if (j == -1) {
                  paramInt2 = 0;
                }
                if ((paramInt2 != 0) && (i2 == 0)) {
                  break label8411;
                }
                this.newUnreadMessageCount = 0;
                if (!this.firstLoading)
                {
                  if (!this.paused) {
                    break label8399;
                  }
                  this.scrollToTopOnResume = true;
                }
              }
              for (;;)
              {
                j = paramInt1;
                paramInt2 = i3;
                if (this.newMentionsCount == 0) {
                  break;
                }
                j = paramInt1;
                paramInt2 = i3;
                if (this.mentiondownButtonCounter == null) {
                  break;
                }
                this.mentiondownButtonCounter.setVisibility(0);
                this.mentiondownButtonCounter.setText(String.format("%d", new Object[] { Integer.valueOf(this.newMentionsCount) }));
                showMentiondownButton(true, true);
                j = paramInt1;
                paramInt2 = i3;
                break;
                this.scrollToTopOnResume = true;
                break label8248;
                label8399:
                this.forceScrollToTop = true;
                moveScrollToLastMessage();
                continue;
                label8411:
                if ((this.newUnreadMessageCount != 0) && (this.pagedownButtonCounter != null))
                {
                  this.pagedownButtonCounter.setVisibility(0);
                  this.pagedownButtonCounter.setText(String.format("%d", new Object[] { Integer.valueOf(this.newUnreadMessageCount) }));
                }
                showPagedownButton(true, true);
              }
              label8469:
              this.scrollToTopOnResume = true;
              j = paramInt1;
              paramInt2 = i3;
            }
          }
        }
        else if (paramInt1 == NotificationCenter.closeChats)
        {
          if ((paramVarArgs != null) && (paramVarArgs.length > 0))
          {
            if (((Long)paramVarArgs[0]).longValue() == this.dialog_id) {
              finishFragment();
            }
          }
          else {
            removeSelfFromStack();
          }
        }
        else
        {
          long l;
          if (paramInt1 == NotificationCenter.messagesRead)
          {
            localObject2 = (SparseLongArray)paramVarArgs[0];
            paramVarArgs = (SparseLongArray)paramVarArgs[1];
            k = 0;
            j = 0;
            paramInt1 = k;
            if (localObject2 != null)
            {
              paramInt2 = 0;
              i1 = ((SparseLongArray)localObject2).size();
              for (;;)
              {
                paramInt1 = k;
                if (paramInt2 >= i1) {
                  break label8697;
                }
                paramInt1 = ((SparseLongArray)localObject2).keyAt(paramInt2);
                l = ((SparseLongArray)localObject2).get(paramInt1);
                if (paramInt1 == this.dialog_id) {
                  break;
                }
                paramInt2++;
              }
              paramInt2 = 0;
              k = this.messages.size();
              paramInt1 = j;
              if (paramInt2 < k)
              {
                localObject2 = (MessageObject)this.messages.get(paramInt2);
                j = paramInt1;
                if (((MessageObject)localObject2).isOut()) {
                  break label8846;
                }
                j = paramInt1;
                if (((MessageObject)localObject2).getId() <= 0) {
                  break label8846;
                }
                j = paramInt1;
                if (((MessageObject)localObject2).getId() > (int)l) {
                  break label8846;
                }
                if (((MessageObject)localObject2).isUnread()) {}
              }
              else
              {
                removeUnreadPlane(false);
              }
            }
            else
            {
              label8697:
              if (paramInt1 != 0)
              {
                if (this.newUnreadMessageCount < 0) {
                  this.newUnreadMessageCount = 0;
                }
                if (this.pagedownButtonCounter != null)
                {
                  this.pagedownButtonCounter.setText(String.format("%d", new Object[] { Integer.valueOf(this.newUnreadMessageCount) }));
                  if (this.newUnreadMessageCount > 0) {
                    break label8855;
                  }
                  if (this.pagedownButtonCounter.getVisibility() != 4) {
                    this.pagedownButtonCounter.setVisibility(4);
                  }
                }
              }
            }
            for (;;)
            {
              paramInt2 = paramInt1;
              if (paramVarArgs == null) {
                break label8948;
              }
              j = 0;
              i1 = paramVarArgs.size();
              for (;;)
              {
                paramInt2 = paramInt1;
                if (j >= i1) {
                  break label8948;
                }
                paramInt2 = paramVarArgs.keyAt(j);
                k = (int)paramVarArgs.get(paramInt2);
                if (paramInt2 == this.dialog_id) {
                  break;
                }
                j++;
              }
              ((MessageObject)localObject2).setIsRead();
              j = 1;
              this.newUnreadMessageCount -= 1;
              label8846:
              paramInt2++;
              paramInt1 = j;
              break;
              label8855:
              if (this.pagedownButtonCounter.getVisibility() != 0) {
                this.pagedownButtonCounter.setVisibility(0);
              }
            }
            j = 0;
            i1 = this.messages.size();
            for (;;)
            {
              paramInt2 = paramInt1;
              if (j < i1)
              {
                paramVarArgs = (MessageObject)this.messages.get(j);
                paramInt2 = paramInt1;
                if (!paramVarArgs.isOut()) {
                  break label8965;
                }
                paramInt2 = paramInt1;
                if (paramVarArgs.getId() <= 0) {
                  break label8965;
                }
                paramInt2 = paramInt1;
                if (paramVarArgs.getId() > k) {
                  break label8965;
                }
                if (!paramVarArgs.isUnread()) {
                  paramInt2 = paramInt1;
                }
              }
              else
              {
                label8948:
                if (paramInt2 == 0) {
                  break;
                }
                updateVisibleRows();
                break;
              }
              paramVarArgs.setIsRead();
              paramInt2 = 1;
              label8965:
              j++;
              paramInt1 = paramInt2;
            }
          }
          if (paramInt1 == NotificationCenter.historyCleared)
          {
            if (((Long)paramVarArgs[0]).longValue() == this.dialog_id)
            {
              i1 = ((Integer)paramVarArgs[1]).intValue();
              paramInt2 = 0;
              paramInt1 = 0;
              if (paramInt1 < this.messages.size())
              {
                paramVarArgs = (MessageObject)this.messages.get(paramInt1);
                i3 = paramVarArgs.getId();
                k = paramInt1;
                j = paramInt2;
                if (i3 > 0)
                {
                  if (i3 <= i1) {
                    break label9076;
                  }
                  j = paramInt2;
                }
                for (k = paramInt1;; k = paramInt1)
                {
                  paramInt1 = k + 1;
                  paramInt2 = j;
                  break;
                  label9076:
                  if ((this.info != null) && (this.info.pinned_msg_id == i3))
                  {
                    this.pinnedMessageObject = null;
                    this.info.pinned_msg_id = 0;
                    MessagesStorage.getInstance(this.currentAccount).updateChannelPinnedMessage(this.info.id, 0);
                    updatePinnedMessageView(true);
                  }
                  this.messages.remove(paramInt1);
                  paramInt2 = paramInt1 - 1;
                  this.messagesDict[0].remove(i3);
                  localObject2 = (ArrayList)this.messagesByDays.get(paramVarArgs.dateKey);
                  paramInt1 = paramInt2;
                  if (localObject2 != null)
                  {
                    ((ArrayList)localObject2).remove(paramVarArgs);
                    paramInt1 = paramInt2;
                    if (((ArrayList)localObject2).isEmpty())
                    {
                      this.messagesByDays.remove(paramVarArgs.dateKey);
                      paramInt1 = paramInt2;
                      if (paramInt2 >= 0)
                      {
                        paramInt1 = paramInt2;
                        if (paramInt2 < this.messages.size())
                        {
                          this.messages.remove(paramInt2);
                          paramInt1 = paramInt2 - 1;
                        }
                      }
                    }
                  }
                  j = 1;
                }
              }
              if (this.messages.isEmpty())
              {
                if ((this.endReached[0] != 0) || (this.loading)) {
                  break label9564;
                }
                if (this.progressView != null) {
                  this.progressView.setVisibility(4);
                }
                if (this.chatListView != null) {
                  this.chatListView.setEmptyView(null);
                }
                if (this.currentEncryptedChat != null) {
                  break label9515;
                }
                paramVarArgs = this.maxMessageId;
                this.maxMessageId[1] = Integer.MAX_VALUE;
                paramVarArgs[0] = Integer.MAX_VALUE;
                paramVarArgs = this.minMessageId;
                this.minMessageId[1] = Integer.MIN_VALUE;
                paramVarArgs[0] = Integer.MIN_VALUE;
                label9351:
                paramVarArgs = this.maxDate;
                this.maxDate[1] = Integer.MIN_VALUE;
                paramVarArgs[0] = Integer.MIN_VALUE;
                paramVarArgs = this.minDate;
                this.minDate[1] = 0;
                paramVarArgs[0] = 0;
                this.waitingForLoad.add(Integer.valueOf(this.lastLoadIndex));
                paramVarArgs = MessagesController.getInstance(this.currentAccount);
                l = this.dialog_id;
                if (this.cacheEndReached[0] != 0) {
                  break label9558;
                }
                bool1 = true;
                label9428:
                j = this.minDate[0];
                k = this.classGuid;
                bool2 = ChatObject.isChannel(this.currentChat);
                paramInt1 = this.lastLoadIndex;
                this.lastLoadIndex = (paramInt1 + 1);
                paramVarArgs.loadMessages(l, 30, 0, 0, bool1, j, k, 0, 0, bool2, paramInt1);
                this.loading = true;
              }
              for (;;)
              {
                if ((paramInt2 == 0) || (this.chatAdapter == null)) {
                  break label9635;
                }
                removeUnreadPlane(true);
                this.chatAdapter.notifyDataSetChanged();
                break;
                label9515:
                paramVarArgs = this.maxMessageId;
                this.maxMessageId[1] = Integer.MIN_VALUE;
                paramVarArgs[0] = Integer.MIN_VALUE;
                paramVarArgs = this.minMessageId;
                this.minMessageId[1] = Integer.MAX_VALUE;
                paramVarArgs[0] = Integer.MAX_VALUE;
                break label9351;
                label9558:
                bool1 = false;
                break label9428;
                label9564:
                if (this.botButtons != null)
                {
                  this.botButtons = null;
                  if (this.chatActivityEnterView != null) {
                    this.chatActivityEnterView.setButtons(null, false);
                  }
                }
                if ((this.currentEncryptedChat == null) && (this.currentUser != null) && (this.currentUser.bot) && (this.botUser == null))
                {
                  this.botUser = "";
                  updateBottomOverlay();
                }
              }
            }
          }
          else {
            label9635:
            if (paramInt1 == NotificationCenter.messagesDeleted)
            {
              localObject1 = (ArrayList)paramVarArgs[0];
              i2 = ((Integer)paramVarArgs[1]).intValue();
              paramInt1 = 0;
              if (ChatObject.isChannel(this.currentChat)) {
                if ((i2 == 0) && (this.mergeDialogId != 0L))
                {
                  paramInt1 = 1;
                  label9691:
                  j = 0;
                  paramVarArgs = null;
                  i = ((ArrayList)localObject1).size();
                  paramInt2 = 0;
                  bool1 = false;
                  k = 0;
                  label9711:
                  if (k >= i) {
                    break label10136;
                  }
                  localObject6 = (Integer)((ArrayList)localObject1).get(k);
                  localObject5 = (MessageObject)this.messagesDict[paramInt1].get(((Integer)localObject6).intValue());
                  if ((paramInt1 == 0) && (this.info != null) && (this.info.pinned_msg_id == ((Integer)localObject6).intValue()))
                  {
                    this.pinnedMessageObject = null;
                    this.info.pinned_msg_id = 0;
                    MessagesStorage.getInstance(this.currentAccount).updateChannelPinnedMessage(i2, 0);
                    updatePinnedMessageView(true);
                  }
                  localObject2 = paramVarArgs;
                  i3 = j;
                  i1 = paramInt2;
                  bool2 = bool1;
                  if (localObject5 != null)
                  {
                    m = this.messages.indexOf(localObject5);
                    localObject2 = paramVarArgs;
                    i3 = j;
                    i1 = paramInt2;
                    bool2 = bool1;
                    if (m != -1) {
                      if (this.selectedMessagesIds[paramInt1].indexOfKey(((Integer)localObject6).intValue()) >= 0)
                      {
                        paramInt2 = 1;
                        if (k != i - 1) {
                          break label10130;
                        }
                      }
                    }
                  }
                }
              }
              label10130:
              for (bool1 = true;; bool1 = false)
              {
                addToSelectedMessages((MessageObject)localObject5, false, bool1);
                localObject3 = (MessageObject)this.messages.remove(m);
                localObject2 = paramVarArgs;
                if (((MessageObject)localObject3).getGroupId() != 0L)
                {
                  localObject3 = (MessageObject.GroupedMessages)this.groupedMessagesMap.get(((MessageObject)localObject3).getGroupId());
                  localObject2 = paramVarArgs;
                  if (localObject3 != null)
                  {
                    localObject2 = paramVarArgs;
                    if (paramVarArgs == null) {
                      localObject2 = new LongSparseArray();
                    }
                    ((LongSparseArray)localObject2).put(((MessageObject.GroupedMessages)localObject3).groupId, localObject3);
                    ((MessageObject.GroupedMessages)localObject3).messages.remove(localObject5);
                  }
                }
                this.messagesDict[paramInt1].remove(((Integer)localObject6).intValue());
                paramVarArgs = (ArrayList)this.messagesByDays.get(((MessageObject)localObject5).dateKey);
                if (paramVarArgs != null)
                {
                  paramVarArgs.remove(localObject5);
                  if (paramVarArgs.isEmpty())
                  {
                    this.messagesByDays.remove(((MessageObject)localObject5).dateKey);
                    if ((m >= 0) && (m < this.messages.size())) {
                      this.messages.remove(m);
                    }
                  }
                }
                i3 = 1;
                bool2 = bool1;
                i1 = paramInt2;
                k++;
                paramVarArgs = (Object[])localObject2;
                j = i3;
                paramInt2 = i1;
                bool1 = bool2;
                break label9711;
                if (i2 != this.currentChat.id) {
                  break;
                }
                paramInt1 = 0;
                break label9691;
                if (i2 == 0) {
                  break label9691;
                }
                break;
              }
              label10136:
              if ((paramInt2 != 0) && (!bool1)) {
                addToSelectedMessages(null, false, true);
              }
              if (paramVarArgs != null)
              {
                paramInt1 = 0;
                if (paramInt1 < paramVarArgs.size())
                {
                  localObject1 = (MessageObject.GroupedMessages)paramVarArgs.valueAt(paramInt1);
                  if (((MessageObject.GroupedMessages)localObject1).messages.isEmpty()) {
                    this.groupedMessagesMap.remove(((MessageObject.GroupedMessages)localObject1).groupId);
                  }
                  for (;;)
                  {
                    paramInt1++;
                    break;
                    ((MessageObject.GroupedMessages)localObject1).calculate();
                    localObject2 = (MessageObject)((MessageObject.GroupedMessages)localObject1).messages.get(((MessageObject.GroupedMessages)localObject1).messages.size() - 1);
                    paramInt2 = this.messages.indexOf(localObject2);
                    if ((paramInt2 >= 0) && (this.chatAdapter != null)) {
                      this.chatAdapter.notifyItemRangeChanged(this.chatAdapter.messagesStartRow + paramInt2, ((MessageObject.GroupedMessages)localObject1).messages.size());
                    }
                  }
                }
              }
              if (this.messages.isEmpty())
              {
                if ((this.endReached[0] != 0) || (this.loading)) {
                  break label10669;
                }
                if (this.progressView != null) {
                  this.progressView.setVisibility(4);
                }
                if (this.chatListView != null) {
                  this.chatListView.setEmptyView(null);
                }
                if (this.currentEncryptedChat == null)
                {
                  paramVarArgs = this.maxMessageId;
                  this.maxMessageId[1] = Integer.MAX_VALUE;
                  paramVarArgs[0] = Integer.MAX_VALUE;
                  paramVarArgs = this.minMessageId;
                  this.minMessageId[1] = Integer.MIN_VALUE;
                  paramVarArgs[0] = Integer.MIN_VALUE;
                  label10384:
                  paramVarArgs = this.maxDate;
                  this.maxDate[1] = Integer.MIN_VALUE;
                  paramVarArgs[0] = Integer.MIN_VALUE;
                  paramVarArgs = this.minDate;
                  this.minDate[1] = 0;
                  paramVarArgs[0] = 0;
                  this.waitingForLoad.add(Integer.valueOf(this.lastLoadIndex));
                  paramVarArgs = MessagesController.getInstance(this.currentAccount);
                  l = this.dialog_id;
                  if (this.cacheEndReached[0] != 0) {
                    break label10663;
                  }
                  bool1 = true;
                  label10461:
                  paramInt1 = this.minDate[0];
                  paramInt2 = this.classGuid;
                  bool2 = ChatObject.isChannel(this.currentChat);
                  k = this.lastLoadIndex;
                  this.lastLoadIndex = (k + 1);
                  paramVarArgs.loadMessages(l, 30, 0, 0, bool1, paramInt1, paramInt2, 0, 0, bool2, k);
                  this.loading = true;
                }
              }
              else
              {
                label10521:
                if (this.chatAdapter == null) {
                  break label10740;
                }
                if (j == 0) {
                  break label10820;
                }
                removeUnreadPlane(false);
                i3 = this.chatListView.getChildCount();
                k = -1;
                i1 = 0;
                paramInt2 = 0;
                label10555:
                j = i1;
                paramInt1 = k;
                if (paramInt2 >= i3) {
                  break label10779;
                }
                localObject2 = this.chatListView.getChildAt(paramInt2);
                paramVarArgs = null;
                if (!(localObject2 instanceof ChatMessageCell)) {
                  break label10742;
                }
                paramVarArgs = ((ChatMessageCell)localObject2).getMessageObject();
              }
              for (;;)
              {
                if (paramVarArgs != null)
                {
                  paramInt1 = this.messages.indexOf(paramVarArgs);
                  if (paramInt1 >= 0) {
                    break label10762;
                  }
                }
                paramInt2++;
                break label10555;
                paramVarArgs = this.maxMessageId;
                this.maxMessageId[1] = Integer.MIN_VALUE;
                paramVarArgs[0] = Integer.MIN_VALUE;
                paramVarArgs = this.minMessageId;
                this.minMessageId[1] = Integer.MAX_VALUE;
                paramVarArgs[0] = Integer.MAX_VALUE;
                break label10384;
                label10663:
                bool1 = false;
                break label10461;
                label10669:
                if (this.botButtons != null)
                {
                  this.botButtons = null;
                  if (this.chatActivityEnterView != null) {
                    this.chatActivityEnterView.setButtons(null, false);
                  }
                }
                if ((this.currentEncryptedChat != null) || (this.currentUser == null) || (!this.currentUser.bot) || (this.botUser != null)) {
                  break label10521;
                }
                this.botUser = "";
                updateBottomOverlay();
                break label10521;
                label10740:
                break;
                label10742:
                if ((localObject2 instanceof ChatActionCell)) {
                  paramVarArgs = ((ChatActionCell)localObject2).getMessageObject();
                }
              }
              label10762:
              paramInt1 = this.chatAdapter.messagesStartRow + paramInt1;
              j = ((View)localObject2).getBottom();
              label10779:
              this.chatAdapter.notifyDataSetChanged();
              if (paramInt1 != -1)
              {
                this.chatLayoutManager.scrollToPositionWithOffset(paramInt1, this.chatListView.getMeasuredHeight() - j - this.chatListView.getPaddingBottom());
                continue;
                label10820:
                this.first_unread_id = 0;
                this.last_message_id = 0;
                this.createUnreadMessageAfterId = 0;
                removeMessageObject(this.unreadMessageObject);
                this.unreadMessageObject = null;
                if (this.pagedownButtonCounter != null) {
                  this.pagedownButtonCounter.setVisibility(4);
                }
              }
            }
            else if (paramInt1 == NotificationCenter.messageReceivedByServer)
            {
              localObject1 = (Integer)paramVarArgs[0];
              localObject2 = (MessageObject)this.messagesDict[0].get(((Integer)localObject1).intValue());
              if (localObject2 != null)
              {
                localObject5 = (Integer)paramVarArgs[1];
                if ((!((Integer)localObject5).equals(localObject1)) && (this.messagesDict[0].indexOfKey(((Integer)localObject5).intValue()) >= 0))
                {
                  paramVarArgs = (MessageObject)this.messagesDict[0].get(((Integer)localObject1).intValue());
                  this.messagesDict[0].remove(((Integer)localObject1).intValue());
                  if (paramVarArgs != null)
                  {
                    paramInt1 = this.messages.indexOf(paramVarArgs);
                    this.messages.remove(paramInt1);
                    paramVarArgs = (ArrayList)this.messagesByDays.get(paramVarArgs.dateKey);
                    paramVarArgs.remove(localObject2);
                    if (paramVarArgs.isEmpty())
                    {
                      this.messagesByDays.remove(((MessageObject)localObject2).dateKey);
                      if ((paramInt1 >= 0) && (paramInt1 < this.messages.size())) {
                        this.messages.remove(paramInt1);
                      }
                    }
                    if (this.chatAdapter != null) {
                      this.chatAdapter.notifyDataSetChanged();
                    }
                  }
                }
                else
                {
                  paramVarArgs = (TLRPC.Message)paramVarArgs[2];
                  bool2 = false;
                  bool1 = false;
                  paramInt1 = 0;
                  paramInt2 = 0;
                  if (paramVarArgs != null) {
                    paramInt2 = paramInt1;
                  }
                  for (;;)
                  {
                    try
                    {
                      if (!((MessageObject)localObject2).isForwarded()) {
                        continue;
                      }
                      paramInt2 = paramInt1;
                      if (((MessageObject)localObject2).messageOwner.reply_markup == null)
                      {
                        paramInt2 = paramInt1;
                        if (paramVarArgs.reply_markup != null) {}
                      }
                      else
                      {
                        paramInt2 = paramInt1;
                        if (((MessageObject)localObject2).messageOwner.message.equals(paramVarArgs.message)) {
                          continue;
                        }
                      }
                      paramInt1 = 1;
                      if (paramInt1 == 0)
                      {
                        paramInt2 = paramInt1;
                        if (((MessageObject)localObject2).messageOwner.params != null)
                        {
                          paramInt2 = paramInt1;
                          if (((MessageObject)localObject2).messageOwner.params.containsKey("query_id")) {}
                        }
                        else
                        {
                          paramInt2 = paramInt1;
                          if (paramVarArgs.media == null) {
                            continue;
                          }
                          paramInt2 = paramInt1;
                          if (((MessageObject)localObject2).messageOwner.media == null) {
                            continue;
                          }
                          paramInt2 = paramInt1;
                          bool2 = paramVarArgs.media.getClass().equals(((MessageObject)localObject2).messageOwner.media.getClass());
                          if (bool2) {
                            continue;
                          }
                        }
                      }
                      bool1 = true;
                    }
                    catch (Exception localException)
                    {
                      FileLog.e(localException);
                      paramInt1 = paramInt2;
                      continue;
                    }
                    if ((((MessageObject)localObject2).getGroupId() != 0L) && (paramVarArgs.grouped_id != 0L))
                    {
                      localObject6 = (MessageObject.GroupedMessages)this.groupedMessagesMap.get(((MessageObject)localObject2).getGroupId());
                      if (localObject6 != null) {
                        this.groupedMessagesMap.put(paramVarArgs.grouped_id, localObject6);
                      }
                    }
                    ((MessageObject)localObject2).messageOwner = paramVarArgs;
                    ((MessageObject)localObject2).generateThumbs(true);
                    ((MessageObject)localObject2).setType();
                    bool2 = bool1;
                    paramInt2 = paramInt1;
                    if ((paramVarArgs.media instanceof TLRPC.TL_messageMediaGame))
                    {
                      ((MessageObject)localObject2).applyNewText();
                      paramInt2 = paramInt1;
                      bool2 = bool1;
                    }
                    if (paramInt2 != 0) {
                      ((MessageObject)localObject2).measureInlineBotButtons();
                    }
                    this.messagesDict[0].remove(((Integer)localObject1).intValue());
                    this.messagesDict[0].put(((Integer)localObject5).intValue(), localObject2);
                    ((MessageObject)localObject2).messageOwner.id = ((Integer)localObject5).intValue();
                    ((MessageObject)localObject2).messageOwner.send_state = 0;
                    ((MessageObject)localObject2).forceUpdate = bool2;
                    paramVarArgs = new ArrayList();
                    paramVarArgs.add(localObject2);
                    if (this.currentEncryptedChat == null) {
                      DataQuery.getInstance(this.currentAccount).loadReplyMessagesForMessages(paramVarArgs, this.dialog_id);
                    }
                    if (this.chatAdapter != null) {
                      this.chatAdapter.updateRowWithMessageObject((MessageObject)localObject2);
                    }
                    if ((this.chatLayoutManager != null) && (bool2) && (this.chatLayoutManager.findFirstVisibleItemPosition() == 0)) {
                      moveScrollToLastMessage();
                    }
                    NotificationsController.getInstance(this.currentAccount).playOutChatSound();
                    break;
                    paramInt1 = 0;
                    continue;
                    bool1 = false;
                  }
                }
              }
            }
            else if (paramInt1 == NotificationCenter.messageReceivedByAck)
            {
              paramVarArgs = (Integer)paramVarArgs[0];
              paramVarArgs = (MessageObject)this.messagesDict[0].get(paramVarArgs.intValue());
              if (paramVarArgs != null)
              {
                paramVarArgs.messageOwner.send_state = 0;
                if (this.chatAdapter != null) {
                  this.chatAdapter.updateRowWithMessageObject(paramVarArgs);
                }
              }
            }
            else if (paramInt1 == NotificationCenter.messageSendError)
            {
              paramVarArgs = (Integer)paramVarArgs[0];
              paramVarArgs = (MessageObject)this.messagesDict[0].get(paramVarArgs.intValue());
              if (paramVarArgs != null)
              {
                paramVarArgs.messageOwner.send_state = 2;
                updateVisibleRows();
              }
            }
            else if (paramInt1 == NotificationCenter.chatInfoDidLoaded)
            {
              localObject2 = (TLRPC.ChatFull)paramVarArgs[0];
              if ((this.currentChat != null) && (((TLRPC.ChatFull)localObject2).id == this.currentChat.id))
              {
                if ((localObject2 instanceof TLRPC.TL_channelFull))
                {
                  if (this.currentChat.megagroup)
                  {
                    paramInt2 = 0;
                    paramInt1 = 0;
                    if (((TLRPC.ChatFull)localObject2).participants != null) {
                      for (j = 0;; j++)
                      {
                        paramInt2 = paramInt1;
                        if (j >= ((TLRPC.ChatFull)localObject2).participants.participants.size()) {
                          break;
                        }
                        paramInt1 = Math.max(((TLRPC.ChatParticipant)((TLRPC.ChatFull)localObject2).participants.participants.get(j)).date, paramInt1);
                      }
                    }
                    if ((paramInt2 == 0) || (Math.abs(System.currentTimeMillis() / 1000L - paramInt2) > 3600L)) {
                      MessagesController.getInstance(this.currentAccount).loadChannelParticipants(Integer.valueOf(this.currentChat.id));
                    }
                  }
                  if ((((TLRPC.ChatFull)localObject2).participants == null) && (this.info != null)) {
                    ((TLRPC.ChatFull)localObject2).participants = this.info.participants;
                  }
                }
                this.info = ((TLRPC.ChatFull)localObject2);
                if (this.chatActivityEnterView != null) {
                  this.chatActivityEnterView.setChatInfo(this.info);
                }
                if (this.mentionsAdapter != null) {
                  this.mentionsAdapter.setChatInfo(this.info);
                }
                if ((paramVarArgs[3] instanceof MessageObject))
                {
                  this.pinnedMessageObject = ((MessageObject)paramVarArgs[3]);
                  updatePinnedMessageView(false);
                }
                for (;;)
                {
                  if (this.avatarContainer != null)
                  {
                    this.avatarContainer.updateOnlineCount();
                    this.avatarContainer.updateSubtitle();
                  }
                  if (this.isBroadcast) {
                    SendMessagesHelper.getInstance(this.currentAccount).setCurrentChatInfo(this.info);
                  }
                  if (!(this.info instanceof TLRPC.TL_chatFull)) {
                    break label12202;
                  }
                  this.hasBotsCommands = false;
                  this.botInfo.clear();
                  this.botsCount = 0;
                  URLSpanBotCommand.enabled = false;
                  for (paramInt1 = 0; paramInt1 < this.info.participants.participants.size(); paramInt1++)
                  {
                    paramVarArgs = (TLRPC.ChatParticipant)this.info.participants.participants.get(paramInt1);
                    paramVarArgs = MessagesController.getInstance(this.currentAccount).getUser(Integer.valueOf(paramVarArgs.user_id));
                    if ((paramVarArgs != null) && (paramVarArgs.bot))
                    {
                      URLSpanBotCommand.enabled = true;
                      this.botsCount += 1;
                      DataQuery.getInstance(this.currentAccount).loadBotInfo(paramVarArgs.id, true, this.classGuid);
                    }
                  }
                  updatePinnedMessageView(true);
                }
                if (this.chatListView != null) {
                  this.chatListView.invalidateViews();
                }
                for (;;)
                {
                  if (this.chatActivityEnterView != null) {
                    this.chatActivityEnterView.setBotsCount(this.botsCount, this.hasBotsCommands);
                  }
                  if (this.mentionsAdapter != null) {
                    this.mentionsAdapter.setBotsCount(this.botsCount);
                  }
                  if ((!ChatObject.isChannel(this.currentChat)) || (this.mergeDialogId != 0L) || (this.info.migrated_from_chat_id == 0)) {
                    break;
                  }
                  this.mergeDialogId = (-this.info.migrated_from_chat_id);
                  this.maxMessageId[1] = this.info.migrated_from_max_id;
                  if (this.chatAdapter == null) {
                    break;
                  }
                  this.chatAdapter.notifyDataSetChanged();
                  break;
                  label12202:
                  if ((this.info instanceof TLRPC.TL_channelFull))
                  {
                    this.hasBotsCommands = false;
                    this.botInfo.clear();
                    this.botsCount = 0;
                    if ((!this.info.bot_info.isEmpty()) && (this.currentChat != null) && (this.currentChat.megagroup)) {}
                    for (bool1 = true;; bool1 = false)
                    {
                      URLSpanBotCommand.enabled = bool1;
                      this.botsCount = this.info.bot_info.size();
                      for (paramInt1 = 0; paramInt1 < this.info.bot_info.size(); paramInt1++)
                      {
                        paramVarArgs = (TLRPC.BotInfo)this.info.bot_info.get(paramInt1);
                        if ((!paramVarArgs.commands.isEmpty()) && ((!ChatObject.isChannel(this.currentChat)) || ((this.currentChat != null) && (this.currentChat.megagroup)))) {
                          this.hasBotsCommands = true;
                        }
                        this.botInfo.put(paramVarArgs.user_id, paramVarArgs);
                      }
                    }
                    if (this.chatListView != null) {
                      this.chatListView.invalidateViews();
                    }
                    if ((this.mentionsAdapter != null) && ((!ChatObject.isChannel(this.currentChat)) || ((this.currentChat != null) && (this.currentChat.megagroup)))) {
                      this.mentionsAdapter.setBotInfo(this.botInfo);
                    }
                  }
                }
              }
            }
            else if (paramInt1 == NotificationCenter.chatInfoCantLoad)
            {
              paramInt1 = ((Integer)paramVarArgs[0]).intValue();
              if ((this.currentChat != null) && (this.currentChat.id == paramInt1))
              {
                paramInt1 = ((Integer)paramVarArgs[1]).intValue();
                if ((getParentActivity() != null) && (this.closeChatDialog == null))
                {
                  paramVarArgs = new AlertDialog.Builder(getParentActivity());
                  paramVarArgs.setTitle(LocaleController.getString("AppName", NUM));
                  if (paramInt1 == 0) {
                    paramVarArgs.setMessage(LocaleController.getString("ChannelCantOpenPrivate", NUM));
                  }
                  for (;;)
                  {
                    paramVarArgs.setPositiveButton(LocaleController.getString("OK", NUM), null);
                    paramVarArgs = paramVarArgs.create();
                    this.closeChatDialog = paramVarArgs;
                    showDialog(paramVarArgs);
                    this.loading = false;
                    if (this.progressView != null) {
                      this.progressView.setVisibility(4);
                    }
                    if (this.chatAdapter == null) {
                      break;
                    }
                    this.chatAdapter.notifyDataSetChanged();
                    break;
                    if (paramInt1 == 1) {
                      paramVarArgs.setMessage(LocaleController.getString("ChannelCantOpenNa", NUM));
                    } else if (paramInt1 == 2) {
                      paramVarArgs.setMessage(LocaleController.getString("ChannelCantOpenBanned", NUM));
                    }
                  }
                }
              }
            }
            else if (paramInt1 == NotificationCenter.contactsDidLoaded)
            {
              updateContactStatus();
              if (this.currentEncryptedChat != null) {
                updateSpamView();
              }
              if (this.avatarContainer != null) {
                this.avatarContainer.updateSubtitle();
              }
            }
            else if (paramInt1 == NotificationCenter.encryptedChatUpdated)
            {
              paramVarArgs = (TLRPC.EncryptedChat)paramVarArgs[0];
              if ((this.currentEncryptedChat != null) && (paramVarArgs.id == this.currentEncryptedChat.id))
              {
                this.currentEncryptedChat = paramVarArgs;
                updateContactStatus();
                updateSecretStatus();
                initStickers();
                if (this.chatActivityEnterView != null)
                {
                  paramVarArgs = this.chatActivityEnterView;
                  if ((this.currentEncryptedChat == null) || (AndroidUtilities.getPeerLayerVersion(this.currentEncryptedChat.layer) >= 23))
                  {
                    bool1 = true;
                    label12783:
                    if ((this.currentEncryptedChat != null) && (AndroidUtilities.getPeerLayerVersion(this.currentEncryptedChat.layer) < 46)) {
                      break label12885;
                    }
                    bool2 = true;
                    label12808:
                    paramVarArgs.setAllowStickersAndGifs(bool1, bool2);
                    this.chatActivityEnterView.checkRoundVideo();
                  }
                }
                else
                {
                  if (this.mentionsAdapter == null) {
                    continue;
                  }
                  paramVarArgs = this.mentionsAdapter;
                  if ((this.chatActivityEnterView.isEditingMessage()) || ((this.currentEncryptedChat != null) && (AndroidUtilities.getPeerLayerVersion(this.currentEncryptedChat.layer) < 46))) {
                    break label12891;
                  }
                }
                label12885:
                label12891:
                for (bool1 = true;; bool1 = false)
                {
                  paramVarArgs.setNeedBotContext(bool1);
                  break;
                  bool1 = false;
                  break label12783;
                  bool2 = false;
                  break label12808;
                }
              }
            }
            else if (paramInt1 == NotificationCenter.messagesReadEncrypted)
            {
              paramInt1 = ((Integer)paramVarArgs[0]).intValue();
              if ((this.currentEncryptedChat != null) && (this.currentEncryptedChat.id == paramInt1))
              {
                paramInt1 = ((Integer)paramVarArgs[1]).intValue();
                paramVarArgs = this.messages.iterator();
                for (;;)
                {
                  if (paramVarArgs.hasNext())
                  {
                    localObject2 = (MessageObject)paramVarArgs.next();
                    if (!((MessageObject)localObject2).isOut()) {
                      continue;
                    }
                    if ((!((MessageObject)localObject2).isOut()) || (((MessageObject)localObject2).isUnread())) {}
                  }
                  else
                  {
                    updateVisibleRows();
                    break;
                  }
                  if (((MessageObject)localObject2).messageOwner.date - 1 <= paramInt1) {
                    ((MessageObject)localObject2).setIsRead();
                  }
                }
              }
            }
            else if (paramInt1 == NotificationCenter.removeAllMessagesFromDialog)
            {
              l = ((Long)paramVarArgs[0]).longValue();
              if (this.dialog_id == l)
              {
                this.messages.clear();
                this.waitingForLoad.clear();
                this.messagesByDays.clear();
                this.groupedMessagesMap.clear();
                paramInt1 = 1;
                if (paramInt1 >= 0)
                {
                  this.messagesDict[paramInt1].clear();
                  if (this.currentEncryptedChat == null)
                  {
                    this.maxMessageId[paramInt1] = Integer.MAX_VALUE;
                    this.minMessageId[paramInt1] = Integer.MIN_VALUE;
                  }
                  for (;;)
                  {
                    this.maxDate[paramInt1] = Integer.MIN_VALUE;
                    this.minDate[paramInt1] = 0;
                    this.selectedMessagesIds[paramInt1].clear();
                    this.selectedMessagesCanCopyIds[paramInt1].clear();
                    this.selectedMessagesCanStarIds[paramInt1].clear();
                    paramInt1--;
                    break;
                    this.maxMessageId[paramInt1] = Integer.MIN_VALUE;
                    this.minMessageId[paramInt1] = Integer.MAX_VALUE;
                  }
                }
                this.cantDeleteMessagesCount = 0;
                this.canEditMessagesCount = 0;
                this.actionBar.hideActionMode();
                updatePinnedMessageView(true);
                if (this.botButtons != null)
                {
                  this.botButtons = null;
                  if (this.chatActivityEnterView != null) {
                    this.chatActivityEnterView.setButtons(null, false);
                  }
                }
                if (((Boolean)paramVarArgs[1]).booleanValue())
                {
                  if (this.chatAdapter != null)
                  {
                    paramVarArgs = this.progressView;
                    if (this.chatAdapter.botInfoRow != -1) {
                      break label13323;
                    }
                  }
                  label13323:
                  for (paramInt1 = 0;; paramInt1 = 4)
                  {
                    paramVarArgs.setVisibility(paramInt1);
                    this.chatListView.setEmptyView(null);
                    for (paramInt1 = 0; paramInt1 < 2; paramInt1++)
                    {
                      this.endReached[paramInt1] = false;
                      this.cacheEndReached[paramInt1] = false;
                      this.forwardEndReached[paramInt1] = true;
                    }
                  }
                  this.first = true;
                  this.firstLoading = true;
                  this.loading = true;
                  this.startLoadFromMessageId = 0;
                  this.needSelectFromMessageId = false;
                  this.waitingForLoad.add(Integer.valueOf(this.lastLoadIndex));
                  paramVarArgs = MessagesController.getInstance(this.currentAccount);
                  l = this.dialog_id;
                  if (AndroidUtilities.isTablet())
                  {
                    paramInt1 = 30;
                    label13391:
                    paramInt2 = this.classGuid;
                    bool1 = ChatObject.isChannel(this.currentChat);
                    j = this.lastLoadIndex;
                    this.lastLoadIndex = (j + 1);
                    paramVarArgs.loadMessages(l, paramInt1, 0, 0, true, 0, paramInt2, 2, 0, bool1, j);
                  }
                }
                for (;;)
                {
                  if (this.chatAdapter != null) {
                    this.chatAdapter.notifyDataSetChanged();
                  }
                  if ((this.currentEncryptedChat != null) || (this.currentUser == null) || (!this.currentUser.bot) || (this.botUser != null)) {
                    break;
                  }
                  this.botUser = "";
                  updateBottomOverlay();
                  break;
                  paramInt1 = 20;
                  break label13391;
                  if (this.progressView != null)
                  {
                    this.progressView.setVisibility(4);
                    this.chatListView.setEmptyView(this.emptyViewContainer);
                  }
                }
              }
            }
            else if (paramInt1 == NotificationCenter.screenshotTook)
            {
              updateInformationForScreenshotDetector();
            }
            else if (paramInt1 == NotificationCenter.blockedUsersDidLoaded)
            {
              if (this.currentUser != null)
              {
                bool1 = this.userBlocked;
                this.userBlocked = MessagesController.getInstance(this.currentAccount).blockedUsers.contains(Integer.valueOf(this.currentUser.id));
                if (bool1 != this.userBlocked) {
                  updateBottomOverlay();
                }
              }
            }
            else if (paramInt1 == NotificationCenter.FileNewChunkAvailable)
            {
              localObject2 = (MessageObject)paramVarArgs[0];
              l = ((Long)paramVarArgs[3]).longValue();
              if ((l != 0L) && (this.dialog_id == ((MessageObject)localObject2).getDialogId()))
              {
                paramVarArgs = (MessageObject)this.messagesDict[0].get(((MessageObject)localObject2).getId());
                if (paramVarArgs != null)
                {
                  paramVarArgs.messageOwner.media.document.size = ((int)l);
                  updateVisibleRows();
                }
              }
            }
            else if (paramInt1 == NotificationCenter.didCreatedNewDeleteTask)
            {
              paramVarArgs = (SparseArray)paramVarArgs[0];
              paramInt2 = 0;
              for (paramInt1 = 0;; paramInt1++)
              {
                if (paramInt1 >= paramVarArgs.size()) {
                  break label13874;
                }
                i3 = paramVarArgs.keyAt(paramInt1);
                localObject1 = (ArrayList)paramVarArgs.get(i3);
                j = 0;
                if (j < ((ArrayList)localObject1).size())
                {
                  l = ((Long)((ArrayList)localObject1).get(j)).longValue();
                  if (j == 0)
                  {
                    i1 = (int)(l >> 32);
                    k = i1;
                    if (i1 < 0) {
                      k = 0;
                    }
                    if (!ChatObject.isChannel(this.currentChat)) {
                      break label13862;
                    }
                  }
                  label13862:
                  for (i1 = this.currentChat.id;; i1 = 0)
                  {
                    if (k != i1) {
                      break label13866;
                    }
                    localObject2 = (MessageObject)this.messagesDict[0].get((int)l);
                    if (localObject2 != null)
                    {
                      ((MessageObject)localObject2).messageOwner.destroyTime = i3;
                      paramInt2 = 1;
                    }
                    j++;
                    break;
                  }
                  label13866:
                  break;
                }
              }
              label13874:
              if (paramInt2 != 0) {
                updateVisibleRows();
              }
            }
            else if (paramInt1 == NotificationCenter.messagePlayingDidStarted)
            {
              paramVarArgs = (MessageObject)paramVarArgs[0];
              if (paramVarArgs.eventId == 0L)
              {
                sendSecretMessageRead(paramVarArgs);
                if (paramVarArgs.isRoundVideo())
                {
                  MediaController.getInstance().setTextureView(createTextureView(true), this.aspectRatioFrameLayout, this.roundVideoContainer, true);
                  updateTextureViewPosition();
                }
                if (this.chatListView != null)
                {
                  paramInt2 = this.chatListView.getChildCount();
                  paramInt1 = 0;
                  if (paramInt1 < paramInt2)
                  {
                    paramVarArgs = this.chatListView.getChildAt(paramInt1);
                    if ((paramVarArgs instanceof ChatMessageCell))
                    {
                      paramVarArgs = (ChatMessageCell)paramVarArgs;
                      localObject2 = paramVarArgs.getMessageObject();
                      if (localObject2 != null)
                      {
                        if ((!((MessageObject)localObject2).isVoice()) && (!((MessageObject)localObject2).isMusic())) {
                          break label14026;
                        }
                        paramVarArgs.updateButtonState(false);
                      }
                    }
                    for (;;)
                    {
                      paramInt1++;
                      break;
                      label14026:
                      if (((MessageObject)localObject2).isRoundVideo())
                      {
                        paramVarArgs.checkRoundVideoPlayback(false);
                        if ((!MediaController.getInstance().isPlayingMessage((MessageObject)localObject2)) && (((MessageObject)localObject2).audioProgress != 0.0F))
                        {
                          ((MessageObject)localObject2).resetPlayingProgress();
                          paramVarArgs.invalidate();
                        }
                      }
                    }
                  }
                  paramInt2 = this.mentionListView.getChildCount();
                  for (paramInt1 = 0; paramInt1 < paramInt2; paramInt1++)
                  {
                    paramVarArgs = this.mentionListView.getChildAt(paramInt1);
                    if ((paramVarArgs instanceof ContextLinkCell))
                    {
                      paramVarArgs = (ContextLinkCell)paramVarArgs;
                      localObject2 = paramVarArgs.getMessageObject();
                      if ((localObject2 != null) && ((((MessageObject)localObject2).isVoice()) || (((MessageObject)localObject2).isMusic()))) {
                        paramVarArgs.updateButtonState(false);
                      }
                    }
                  }
                }
              }
            }
            else if ((paramInt1 == NotificationCenter.messagePlayingDidReset) || (paramInt1 == NotificationCenter.messagePlayingPlayStateChanged))
            {
              if (paramInt1 == NotificationCenter.messagePlayingDidReset) {
                destroyTextureView();
              }
              if (this.chatListView != null)
              {
                paramInt2 = this.chatListView.getChildCount();
                paramInt1 = 0;
                if (paramInt1 < paramInt2)
                {
                  paramVarArgs = this.chatListView.getChildAt(paramInt1);
                  if ((paramVarArgs instanceof ChatMessageCell))
                  {
                    localObject2 = (ChatMessageCell)paramVarArgs;
                    paramVarArgs = ((ChatMessageCell)localObject2).getMessageObject();
                    if (paramVarArgs != null)
                    {
                      if ((!paramVarArgs.isVoice()) && (!paramVarArgs.isMusic())) {
                        break label14251;
                      }
                      ((ChatMessageCell)localObject2).updateButtonState(false);
                    }
                  }
                  for (;;)
                  {
                    paramInt1++;
                    break;
                    label14251:
                    if ((paramVarArgs.isRoundVideo()) && (!MediaController.getInstance().isPlayingMessage(paramVarArgs))) {
                      ((ChatMessageCell)localObject2).checkRoundVideoPlayback(true);
                    }
                  }
                }
                paramInt2 = this.mentionListView.getChildCount();
                for (paramInt1 = 0; paramInt1 < paramInt2; paramInt1++)
                {
                  paramVarArgs = this.mentionListView.getChildAt(paramInt1);
                  if ((paramVarArgs instanceof ContextLinkCell))
                  {
                    paramVarArgs = (ContextLinkCell)paramVarArgs;
                    localObject2 = paramVarArgs.getMessageObject();
                    if ((localObject2 != null) && ((((MessageObject)localObject2).isVoice()) || (((MessageObject)localObject2).isMusic()))) {
                      paramVarArgs.updateButtonState(false);
                    }
                  }
                }
              }
            }
            else if (paramInt1 == NotificationCenter.messagePlayingProgressDidChanged)
            {
              paramVarArgs = (Integer)paramVarArgs[0];
              if (this.chatListView != null)
              {
                paramInt2 = this.chatListView.getChildCount();
                for (paramInt1 = 0;; paramInt1++)
                {
                  if (paramInt1 >= paramInt2) {
                    break label14502;
                  }
                  localObject2 = this.chatListView.getChildAt(paramInt1);
                  if ((localObject2 instanceof ChatMessageCell))
                  {
                    localObject1 = (ChatMessageCell)localObject2;
                    localObject2 = ((ChatMessageCell)localObject1).getMessageObject();
                    if ((localObject2 != null) && (((MessageObject)localObject2).getId() == paramVarArgs.intValue()))
                    {
                      paramVarArgs = MediaController.getInstance().getPlayingMessageObject();
                      if (paramVarArgs == null) {
                        break;
                      }
                      ((MessageObject)localObject2).audioProgress = paramVarArgs.audioProgress;
                      ((MessageObject)localObject2).audioProgressSec = paramVarArgs.audioProgressSec;
                      ((MessageObject)localObject2).audioPlayerDuration = paramVarArgs.audioPlayerDuration;
                      ((ChatMessageCell)localObject1).updatePlayingMessageProgress();
                      if (this.drawLaterRoundProgressCell != localObject1) {
                        break;
                      }
                      this.fragmentView.invalidate();
                      break;
                    }
                  }
                }
              }
            }
            else
            {
              label14502:
              Object localObject7;
              if (paramInt1 == NotificationCenter.updateMessageMedia)
              {
                localObject7 = (TLRPC.Message)paramVarArgs[0];
                localObject5 = (MessageObject)this.messagesDict[0].get(((TLRPC.Message)localObject7).id);
                if (localObject5 != null)
                {
                  ((MessageObject)localObject5).messageOwner.media = ((TLRPC.Message)localObject7).media;
                  ((MessageObject)localObject5).messageOwner.attachPath = ((TLRPC.Message)localObject7).attachPath;
                  ((MessageObject)localObject5).generateThumbs(false);
                  if ((((MessageObject)localObject5).getGroupId() != 0L) && ((((MessageObject)localObject5).photoThumbs == null) || (((MessageObject)localObject5).photoThumbs.isEmpty())))
                  {
                    localObject1 = (MessageObject.GroupedMessages)this.groupedMessagesMap.get(((MessageObject)localObject5).getGroupId());
                    if (localObject1 != null)
                    {
                      j = ((MessageObject.GroupedMessages)localObject1).messages.indexOf(localObject5);
                      if (j >= 0)
                      {
                        paramInt2 = ((MessageObject.GroupedMessages)localObject1).messages.size();
                        localObject2 = null;
                        paramVarArgs = (Object[])localObject2;
                        if (j > 0)
                        {
                          paramVarArgs = (Object[])localObject2;
                          if (j < ((MessageObject.GroupedMessages)localObject1).messages.size() - 1)
                          {
                            localObject2 = new MessageObject.GroupedMessages();
                            ((MessageObject.GroupedMessages)localObject2).groupId = Utilities.random.nextLong();
                            ((MessageObject.GroupedMessages)localObject2).messages.addAll(((MessageObject.GroupedMessages)localObject1).messages.subList(j + 1, ((MessageObject.GroupedMessages)localObject1).messages.size()));
                            for (paramInt1 = 0; paramInt1 < ((MessageObject.GroupedMessages)localObject2).messages.size(); paramInt1++)
                            {
                              ((MessageObject)((MessageObject.GroupedMessages)localObject2).messages.get(paramInt1)).localGroupId = ((MessageObject.GroupedMessages)localObject2).groupId;
                              ((MessageObject.GroupedMessages)localObject1).messages.remove(j + 1);
                            }
                            this.groupedMessagesMap.put(((MessageObject.GroupedMessages)localObject2).groupId, localObject2);
                            paramVarArgs = (MessageObject)((MessageObject.GroupedMessages)localObject2).messages.get(((MessageObject.GroupedMessages)localObject2).messages.size() - 1);
                            ((MessageObject.GroupedMessages)localObject2).calculate();
                          }
                        }
                        ((MessageObject.GroupedMessages)localObject1).messages.remove(j);
                        if (!((MessageObject.GroupedMessages)localObject1).messages.isEmpty()) {
                          break label14914;
                        }
                        this.groupedMessagesMap.remove(((MessageObject.GroupedMessages)localObject1).groupId);
                      }
                    }
                  }
                  for (;;)
                  {
                    if ((((TLRPC.Message)localObject7).media.ttl_seconds == 0) || ((!(((TLRPC.Message)localObject7).media.photo instanceof TLRPC.TL_photoEmpty)) && (!(((TLRPC.Message)localObject7).media.document instanceof TLRPC.TL_documentEmpty)))) {
                      break label14990;
                    }
                    ((MessageObject)localObject5).setType();
                    this.chatAdapter.updateRowWithMessageObject((MessageObject)localObject5);
                    break;
                    label14914:
                    localObject2 = paramVarArgs;
                    if (paramVarArgs == null) {
                      localObject2 = (MessageObject)((MessageObject.GroupedMessages)localObject1).messages.get(((MessageObject.GroupedMessages)localObject1).messages.size() - 1);
                    }
                    ((MessageObject.GroupedMessages)localObject1).calculate();
                    paramInt1 = this.messages.indexOf(localObject2);
                    if ((paramInt1 >= 0) && (this.chatAdapter != null)) {
                      this.chatAdapter.notifyItemRangeChanged(this.chatAdapter.messagesStartRow + paramInt1, paramInt2);
                    }
                  }
                  label14990:
                  updateVisibleRows();
                }
              }
              else if (paramInt1 == NotificationCenter.replaceMessagesObjects)
              {
                l = ((Long)paramVarArgs[0]).longValue();
                if ((l == this.dialog_id) || (l == this.mergeDialogId))
                {
                  if (l == this.dialog_id)
                  {
                    j = 0;
                    paramInt1 = 0;
                    localObject1 = (ArrayList)paramVarArgs[1];
                    paramVarArgs = null;
                    k = 0;
                    if (k >= ((ArrayList)localObject1).size()) {
                      break label15898;
                    }
                    localObject5 = (MessageObject)((ArrayList)localObject1).get(k);
                    localObject7 = (MessageObject)this.messagesDict[j].get(((MessageObject)localObject5).getId());
                    if ((this.pinnedMessageObject != null) && (this.pinnedMessageObject.getId() == ((MessageObject)localObject5).getId()))
                    {
                      this.pinnedMessageObject = ((MessageObject)localObject5);
                      updatePinnedMessageView(true);
                    }
                    paramInt2 = paramInt1;
                    localObject2 = paramVarArgs;
                    if (localObject7 == null) {
                      break label15717;
                    }
                    if (((MessageObject)localObject5).type < 0) {
                      break label15607;
                    }
                    paramInt2 = paramInt1;
                    if (paramInt1 == 0)
                    {
                      paramInt2 = paramInt1;
                      if ((((MessageObject)localObject5).messageOwner.media instanceof TLRPC.TL_messageMediaWebPage)) {
                        paramInt2 = 1;
                      }
                    }
                    if (((MessageObject)localObject7).replyMessageObject != null)
                    {
                      ((MessageObject)localObject5).replyMessageObject = ((MessageObject)localObject7).replyMessageObject;
                      if (!(((MessageObject)localObject5).messageOwner.action instanceof TLRPC.TL_messageActionGameScore)) {
                        break label15584;
                      }
                      ((MessageObject)localObject5).generateGameMessageText(null);
                    }
                    label15218:
                    ((MessageObject)localObject5).messageOwner.attachPath = ((MessageObject)localObject7).messageOwner.attachPath;
                    ((MessageObject)localObject5).attachPathExists = ((MessageObject)localObject7).attachPathExists;
                    ((MessageObject)localObject5).mediaExists = ((MessageObject)localObject7).mediaExists;
                    this.messagesDict[j].put(((MessageObject)localObject7).getId(), localObject5);
                    paramInt1 = paramInt2;
                  }
                  for (;;)
                  {
                    i3 = this.messages.indexOf(localObject7);
                    paramInt2 = paramInt1;
                    localObject2 = paramVarArgs;
                    if (i3 < 0) {
                      break label15717;
                    }
                    localObject3 = (ArrayList)this.messagesByDays.get(((MessageObject)localObject7).dateKey);
                    paramInt2 = -1;
                    if (localObject3 != null) {
                      paramInt2 = ((ArrayList)localObject3).indexOf(localObject7);
                    }
                    localObject2 = paramVarArgs;
                    if (((MessageObject)localObject7).getGroupId() == 0L) {
                      break label15658;
                    }
                    localObject4 = (MessageObject.GroupedMessages)this.groupedMessagesMap.get(((MessageObject)localObject7).getGroupId());
                    localObject2 = paramVarArgs;
                    if (localObject4 == null) {
                      break label15658;
                    }
                    i2 = ((MessageObject.GroupedMessages)localObject4).messages.indexOf(localObject7);
                    localObject2 = paramVarArgs;
                    if (i2 < 0) {
                      break label15658;
                    }
                    if (((MessageObject)localObject7).getGroupId() != ((MessageObject)localObject5).getGroupId()) {
                      this.groupedMessagesMap.put(((MessageObject)localObject5).getGroupId(), localObject4);
                    }
                    if ((((MessageObject)localObject5).photoThumbs != null) && (!((MessageObject)localObject5).photoThumbs.isEmpty())) {
                      break label15728;
                    }
                    localObject2 = paramVarArgs;
                    if (paramVarArgs == null) {
                      localObject2 = new LongSparseArray();
                    }
                    ((LongSparseArray)localObject2).put(((MessageObject.GroupedMessages)localObject4).groupId, localObject4);
                    if ((i2 <= 0) || (i2 >= ((MessageObject.GroupedMessages)localObject4).messages.size() - 1)) {
                      break label15647;
                    }
                    paramVarArgs = new MessageObject.GroupedMessages();
                    paramVarArgs.groupId = Utilities.random.nextLong();
                    paramVarArgs.messages.addAll(((MessageObject.GroupedMessages)localObject4).messages.subList(i2 + 1, ((MessageObject.GroupedMessages)localObject4).messages.size()));
                    for (i1 = 0; i1 < paramVarArgs.messages.size(); i1++)
                    {
                      ((MessageObject)paramVarArgs.messages.get(i1)).localGroupId = paramVarArgs.groupId;
                      ((MessageObject.GroupedMessages)localObject4).messages.remove(i2 + 1);
                    }
                    j = 1;
                    break;
                    label15584:
                    if (!(((MessageObject)localObject5).messageOwner.action instanceof TLRPC.TL_messageActionPaymentSent)) {
                      break label15218;
                    }
                    ((MessageObject)localObject5).generatePaymentSentMessageText(null);
                    break label15218;
                    label15607:
                    this.messagesDict[j].remove(((MessageObject)localObject7).getId());
                  }
                  ((LongSparseArray)localObject2).put(paramVarArgs.groupId, paramVarArgs);
                  this.groupedMessagesMap.put(paramVarArgs.groupId, paramVarArgs);
                  label15647:
                  ((MessageObject.GroupedMessages)localObject4).messages.remove(i2);
                  label15658:
                  if (((MessageObject)localObject5).type >= 0)
                  {
                    this.messages.set(i3, localObject5);
                    if (this.chatAdapter != null) {
                      this.chatAdapter.updateRowAtPosition(this.chatAdapter.messagesStartRow + i3);
                    }
                    if (paramInt2 >= 0) {
                      ((ArrayList)localObject3).set(paramInt2, localObject5);
                    }
                  }
                  for (;;)
                  {
                    paramInt2 = paramInt1;
                    label15717:
                    k++;
                    paramInt1 = paramInt2;
                    paramVarArgs = (Object[])localObject2;
                    break;
                    label15728:
                    ((MessageObject.GroupedMessages)localObject4).messages.set(i2, localObject5);
                    localObject2 = (MessageObject.GroupedMessagePosition)((MessageObject.GroupedMessages)localObject4).positions.remove(localObject7);
                    if (localObject2 != null) {
                      ((MessageObject.GroupedMessages)localObject4).positions.put(localObject5, localObject2);
                    }
                    localObject2 = paramVarArgs;
                    if (paramVarArgs == null) {
                      localObject2 = new LongSparseArray();
                    }
                    ((LongSparseArray)localObject2).put(((MessageObject.GroupedMessages)localObject4).groupId, localObject4);
                    break label15658;
                    this.messages.remove(i3);
                    if (this.chatAdapter != null) {
                      this.chatAdapter.notifyItemRemoved(this.chatAdapter.messagesStartRow + i3);
                    }
                    if (paramInt2 >= 0)
                    {
                      ((ArrayList)localObject3).remove(paramInt2);
                      if (((ArrayList)localObject3).isEmpty())
                      {
                        this.messagesByDays.remove(((MessageObject)localObject7).dateKey);
                        this.messages.remove(i3);
                        this.chatAdapter.notifyItemRemoved(this.chatAdapter.messagesStartRow);
                      }
                    }
                  }
                  label15898:
                  if (paramVarArgs != null)
                  {
                    paramInt1 = 0;
                    label15904:
                    if (paramInt1 < paramVarArgs.size())
                    {
                      localObject1 = (MessageObject.GroupedMessages)paramVarArgs.valueAt(paramInt1);
                      if (!((MessageObject.GroupedMessages)localObject1).messages.isEmpty()) {
                        break label15951;
                      }
                      this.groupedMessagesMap.remove(((MessageObject.GroupedMessages)localObject1).groupId);
                    }
                    for (;;)
                    {
                      paramInt1++;
                      break label15904;
                      break;
                      label15951:
                      ((MessageObject.GroupedMessages)localObject1).calculate();
                      localObject2 = (MessageObject)((MessageObject.GroupedMessages)localObject1).messages.get(((MessageObject.GroupedMessages)localObject1).messages.size() - 1);
                      paramInt2 = this.messages.indexOf(localObject2);
                      if ((paramInt2 >= 0) && (this.chatAdapter != null)) {
                        this.chatAdapter.notifyItemRangeChanged(this.chatAdapter.messagesStartRow + paramInt2, ((MessageObject.GroupedMessages)localObject1).messages.size());
                      }
                    }
                  }
                }
              }
              else if (paramInt1 == NotificationCenter.notificationsSettingsUpdated)
              {
                updateTitleIcons();
                if (ChatObject.isChannel(this.currentChat)) {
                  updateBottomOverlay();
                }
              }
              else if (paramInt1 == NotificationCenter.didLoadedReplyMessages)
              {
                if (((Long)paramVarArgs[0]).longValue() == this.dialog_id) {
                  updateVisibleRows();
                }
              }
              else if (paramInt1 == NotificationCenter.didLoadedPinnedMessage)
              {
                paramVarArgs = (MessageObject)paramVarArgs[0];
                if ((paramVarArgs.getDialogId() == this.dialog_id) && (this.info != null) && (this.info.pinned_msg_id == paramVarArgs.getId()))
                {
                  this.pinnedMessageObject = paramVarArgs;
                  this.loadingPinnedMessage = 0;
                  updatePinnedMessageView(true);
                }
              }
              else if (paramInt1 == NotificationCenter.didReceivedWebpages)
              {
                localObject2 = (ArrayList)paramVarArgs[0];
                paramInt2 = 0;
                paramInt1 = 0;
                while (paramInt1 < ((ArrayList)localObject2).size())
                {
                  paramVarArgs = (TLRPC.Message)((ArrayList)localObject2).get(paramInt1);
                  l = MessageObject.getDialogId(paramVarArgs);
                  if ((l != this.dialog_id) && (l != this.mergeDialogId))
                  {
                    paramInt1++;
                  }
                  else
                  {
                    localObject1 = this.messagesDict;
                    if (l == this.dialog_id) {}
                    for (j = 0;; j = 1)
                    {
                      localObject1 = (MessageObject)localObject1[j].get(paramVarArgs.id);
                      if (localObject1 == null) {
                        break;
                      }
                      ((MessageObject)localObject1).messageOwner.media = new TLRPC.TL_messageMediaWebPage();
                      ((MessageObject)localObject1).messageOwner.media.webpage = paramVarArgs.media.webpage;
                      ((MessageObject)localObject1).generateThumbs(true);
                      paramInt2 = 1;
                      break;
                    }
                  }
                }
                if (paramInt2 != 0) {
                  updateVisibleRows();
                }
              }
              else if (paramInt1 == NotificationCenter.didReceivedWebpagesInUpdates)
              {
                if (this.foundWebPage != null)
                {
                  paramVarArgs = (LongSparseArray)paramVarArgs[0];
                  for (paramInt1 = 0;; paramInt1++)
                  {
                    if (paramInt1 >= paramVarArgs.size()) {
                      break label16415;
                    }
                    localObject2 = (TLRPC.WebPage)paramVarArgs.valueAt(paramInt1);
                    if (((TLRPC.WebPage)localObject2).id == this.foundWebPage.id)
                    {
                      if (!(localObject2 instanceof TLRPC.TL_webPageEmpty)) {}
                      for (bool1 = true;; bool1 = false)
                      {
                        showReplyPanel(bool1, null, null, (TLRPC.WebPage)localObject2, false);
                        break;
                      }
                    }
                  }
                }
              }
              else
              {
                label16415:
                if (paramInt1 == NotificationCenter.messagesReadContent)
                {
                  paramVarArgs = (ArrayList)paramVarArgs[0];
                  j = 0;
                  if (ChatObject.isChannel(this.currentChat))
                  {
                    paramInt1 = this.currentChat.id;
                    paramInt2 = 0;
                    label16454:
                    if (paramInt2 >= paramVarArgs.size()) {
                      break label16631;
                    }
                    l = ((Long)paramVarArgs.get(paramInt2)).longValue();
                    i1 = (int)(l >> 32);
                    k = i1;
                    if (i1 < 0) {
                      k = 0;
                    }
                    if (k == paramInt1) {
                      break label16512;
                    }
                  }
                  for (;;)
                  {
                    paramInt2++;
                    break label16454;
                    paramInt1 = 0;
                    break;
                    label16512:
                    localObject2 = (MessageObject)this.messagesDict[0].get((int)l);
                    if (localObject2 != null)
                    {
                      ((MessageObject)localObject2).setContentIsRead();
                      k = 1;
                      j = k;
                      if (((MessageObject)localObject2).messageOwner.mentioned)
                      {
                        this.newMentionsCount -= 1;
                        if (this.newMentionsCount <= 0)
                        {
                          this.newMentionsCount = 0;
                          this.hasAllMentionsLocal = true;
                          showMentiondownButton(false, true);
                          j = k;
                        }
                        else
                        {
                          this.mentiondownButtonCounter.setText(String.format("%d", new Object[] { Integer.valueOf(this.newMentionsCount) }));
                          j = k;
                        }
                      }
                    }
                  }
                  label16631:
                  if (j != 0) {
                    updateVisibleRows();
                  }
                }
                else if (paramInt1 == NotificationCenter.botInfoDidLoaded)
                {
                  paramInt1 = ((Integer)paramVarArgs[1]).intValue();
                  if (this.classGuid == paramInt1)
                  {
                    paramVarArgs = (TLRPC.BotInfo)paramVarArgs[0];
                    if (this.currentEncryptedChat == null)
                    {
                      if ((!paramVarArgs.commands.isEmpty()) && (!ChatObject.isChannel(this.currentChat))) {
                        this.hasBotsCommands = true;
                      }
                      this.botInfo.put(paramVarArgs.user_id, paramVarArgs);
                      if (this.chatAdapter != null) {
                        this.chatAdapter.notifyItemChanged(this.chatAdapter.botInfoRow);
                      }
                      if ((this.mentionsAdapter != null) && ((!ChatObject.isChannel(this.currentChat)) || ((this.currentChat != null) && (this.currentChat.megagroup)))) {
                        this.mentionsAdapter.setBotInfo(this.botInfo);
                      }
                      if (this.chatActivityEnterView != null) {
                        this.chatActivityEnterView.setBotsCount(this.botsCount, this.hasBotsCommands);
                      }
                    }
                    updateBotButtons();
                  }
                }
                else if (paramInt1 == NotificationCenter.botKeyboardDidLoaded)
                {
                  if (this.dialog_id == ((Long)paramVarArgs[1]).longValue())
                  {
                    paramVarArgs = (TLRPC.Message)paramVarArgs[0];
                    if ((paramVarArgs != null) && (!this.userBlocked))
                    {
                      this.botButtons = new MessageObject(this.currentAccount, paramVarArgs, false);
                      checkBotKeyboard();
                    }
                    else
                    {
                      this.botButtons = null;
                      if (this.chatActivityEnterView != null)
                      {
                        if ((this.replyingMessageObject != null) && (this.botReplyButtons == this.replyingMessageObject))
                        {
                          this.botReplyButtons = null;
                          showReplyPanel(false, null, null, null, false);
                        }
                        this.chatActivityEnterView.setButtons(this.botButtons);
                      }
                    }
                  }
                }
                else if (paramInt1 == NotificationCenter.chatSearchResultsAvailable)
                {
                  if (this.classGuid == ((Integer)paramVarArgs[0]).intValue())
                  {
                    paramInt2 = ((Integer)paramVarArgs[1]).intValue();
                    l = ((Long)paramVarArgs[3]).longValue();
                    if (paramInt2 != 0) {
                      if (l != this.dialog_id) {
                        break label17056;
                      }
                    }
                    label17056:
                    for (paramInt1 = 0;; paramInt1 = 1)
                    {
                      scrollToMessageId(paramInt2, 0, true, paramInt1, false);
                      updateSearchButtons(((Integer)paramVarArgs[2]).intValue(), ((Integer)paramVarArgs[4]).intValue(), ((Integer)paramVarArgs[5]).intValue());
                      if (this.searchItem == null) {
                        break;
                      }
                      this.searchItem.setShowSearchProgress(false);
                      break;
                    }
                  }
                }
                else if (paramInt1 == NotificationCenter.chatSearchResultsLoading)
                {
                  if ((this.classGuid == ((Integer)paramVarArgs[0]).intValue()) && (this.searchItem != null)) {
                    this.searchItem.setShowSearchProgress(true);
                  }
                }
                else if (paramInt1 == NotificationCenter.didUpdatedMessagesViews)
                {
                  paramVarArgs = (SparseIntArray)((SparseArray)paramVarArgs[0]).get((int)this.dialog_id);
                  if (paramVarArgs != null)
                  {
                    paramInt1 = 0;
                    j = 0;
                    while (j < paramVarArgs.size())
                    {
                      k = paramVarArgs.keyAt(j);
                      localObject2 = (MessageObject)this.messagesDict[0].get(k);
                      paramInt2 = paramInt1;
                      if (localObject2 != null)
                      {
                        k = paramVarArgs.get(k);
                        paramInt2 = paramInt1;
                        if (k > ((MessageObject)localObject2).messageOwner.views)
                        {
                          ((MessageObject)localObject2).messageOwner.views = k;
                          paramInt2 = 1;
                        }
                      }
                      j++;
                      paramInt1 = paramInt2;
                    }
                    if (paramInt1 != 0) {
                      updateVisibleRows();
                    }
                  }
                }
                else if (paramInt1 == NotificationCenter.peerSettingsDidLoaded)
                {
                  if (((Long)paramVarArgs[0]).longValue() == this.dialog_id) {
                    updateSpamView();
                  }
                }
                else if (paramInt1 == NotificationCenter.newDraftReceived)
                {
                  if (((Long)paramVarArgs[0]).longValue() == this.dialog_id) {
                    applyDraftMaybe(true);
                  }
                }
                else if (paramInt1 == NotificationCenter.userInfoDidLoaded)
                {
                  localObject2 = (Integer)paramVarArgs[0];
                  if ((this.currentUser != null) && (this.currentUser.id == ((Integer)localObject2).intValue()))
                  {
                    paramVarArgs = (TLRPC.TL_userFull)paramVarArgs[1];
                    if (this.headerItem != null) {
                      if (paramVarArgs.phone_calls_available) {
                        this.headerItem.showSubItem(32);
                      } else {
                        this.headerItem.hideSubItem(32);
                      }
                    }
                  }
                }
                else if (paramInt1 == NotificationCenter.didSetNewWallpapper)
                {
                  if (this.fragmentView != null)
                  {
                    ((SizeNotifierFrameLayout)this.fragmentView).setBackgroundImage(Theme.getCachedWallpaper());
                    this.progressView2.getBackground().setColorFilter(Theme.colorFilter);
                    if (this.emptyView != null) {
                      this.emptyView.getBackground().setColorFilter(Theme.colorFilter);
                    }
                    if (this.bigEmptyView != null) {
                      this.bigEmptyView.getBackground().setColorFilter(Theme.colorFilter);
                    }
                    this.chatListView.invalidateViews();
                  }
                }
                else if (paramInt1 == NotificationCenter.channelRightsUpdated)
                {
                  paramVarArgs = (TLRPC.Chat)paramVarArgs[0];
                  if ((this.currentChat != null) && (paramVarArgs.id == this.currentChat.id) && (this.chatActivityEnterView != null))
                  {
                    this.currentChat = paramVarArgs;
                    this.chatActivityEnterView.checkChannelRights();
                    checkRaiseSensors();
                    updateSecretStatus();
                  }
                }
                else if ((paramInt1 == NotificationCenter.updateMentionsCount) && (this.dialog_id == ((Long)paramVarArgs[0]).longValue()))
                {
                  paramInt1 = ((Integer)paramVarArgs[1]).intValue();
                  if (this.newMentionsCount > paramInt1)
                  {
                    this.newMentionsCount = paramInt1;
                    if (this.newMentionsCount <= 0)
                    {
                      this.newMentionsCount = 0;
                      this.hasAllMentionsLocal = true;
                      showMentiondownButton(false, true);
                    }
                    else
                    {
                      this.mentiondownButtonCounter.setText(String.format("%d", new Object[] { Integer.valueOf(this.newMentionsCount) }));
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
  public void didSelectDialogs(DialogsActivity paramDialogsActivity, ArrayList<Long> paramArrayList, CharSequence paramCharSequence, boolean paramBoolean)
  {
    if ((this.forwardingMessage == null) && (this.selectedMessagesIds[0].size() == 0) && (this.selectedMessagesIds[1].size() == 0)) {}
    for (;;)
    {
      return;
      ArrayList localArrayList1 = new ArrayList();
      if (this.forwardingMessage != null) {
        if (this.forwardingMessageGroup != null)
        {
          localArrayList1.addAll(this.forwardingMessageGroup.messages);
          this.forwardingMessage = null;
          this.forwardingMessageGroup = null;
        }
      }
      label78:
      int i;
      int j;
      for (;;)
      {
        if ((paramArrayList.size() > 1) || (((Long)paramArrayList.get(0)).longValue() == UserConfig.getInstance(this.currentAccount).getClientUserId()) || (paramCharSequence != null))
        {
          i = 0;
          for (;;)
          {
            if (i < paramArrayList.size())
            {
              l = ((Long)paramArrayList.get(i)).longValue();
              if (paramCharSequence != null) {
                SendMessagesHelper.getInstance(this.currentAccount).sendMessage(paramCharSequence.toString(), l, null, null, true, null, null, null);
              }
              SendMessagesHelper.getInstance(this.currentAccount).sendMessage(localArrayList1, l);
              i++;
              continue;
              localArrayList1.add(this.forwardingMessage);
              break;
              for (i = 1; i >= 0; i--)
              {
                ArrayList localArrayList2 = new ArrayList();
                for (j = 0; j < this.selectedMessagesIds[i].size(); j++) {
                  localArrayList2.add(Integer.valueOf(this.selectedMessagesIds[i].keyAt(j)));
                }
                Collections.sort(localArrayList2);
                for (j = 0; j < localArrayList2.size(); j++)
                {
                  Integer localInteger = (Integer)localArrayList2.get(j);
                  MessageObject localMessageObject = (MessageObject)this.selectedMessagesIds[i].get(localInteger.intValue());
                  if ((localMessageObject != null) && (localInteger.intValue() > 0)) {
                    localArrayList1.add(localMessageObject);
                  }
                }
                this.selectedMessagesCanCopyIds[i].clear();
                this.selectedMessagesCanStarIds[i].clear();
                this.selectedMessagesIds[i].clear();
              }
              this.cantDeleteMessagesCount = 0;
              this.canEditMessagesCount = 0;
              this.actionBar.hideActionMode();
              updatePinnedMessageView(true);
              break label78;
            }
          }
          paramDialogsActivity.finishFragment();
          break;
        }
      }
      long l = ((Long)paramArrayList.get(0)).longValue();
      if (l != this.dialog_id)
      {
        j = (int)l;
        i = (int)(l >> 32);
        paramArrayList = new Bundle();
        paramArrayList.putBoolean("scrollToTopOnResume", this.scrollToTopOnResume);
        if (j != 0) {
          if (j > 0) {
            paramArrayList.putInt("user_id", j);
          }
        }
        for (;;)
        {
          if ((j != 0) && (!MessagesController.getInstance(this.currentAccount).checkCanOpenChat(paramArrayList, paramDialogsActivity))) {
            break label574;
          }
          paramArrayList = new ChatActivity(paramArrayList);
          if (!presentFragment(paramArrayList, true)) {
            break label576;
          }
          paramArrayList.showReplyPanel(true, null, localArrayList1, null, false);
          if (AndroidUtilities.isTablet()) {
            break;
          }
          removeSelfFromStack();
          break;
          if (j < 0)
          {
            paramArrayList.putInt("chat_id", -j);
            continue;
            paramArrayList.putInt("enc_id", i);
          }
        }
        label574:
        continue;
        label576:
        paramDialogsActivity.finishFragment();
      }
      else
      {
        paramDialogsActivity.finishFragment();
        moveScrollToLastMessage();
        showReplyPanel(true, null, localArrayList1, null, false);
        if (AndroidUtilities.isTablet())
        {
          this.actionBar.hideActionMode();
          updatePinnedMessageView(true);
        }
        updateVisibleRows();
      }
    }
  }
  
  public void didSelectLocation(TLRPC.MessageMedia paramMessageMedia, int paramInt)
  {
    SendMessagesHelper.getInstance(this.currentAccount).sendMessage(paramMessageMedia, this.dialog_id, this.replyingMessageObject, null, null);
    moveScrollToLastMessage();
    if (paramInt == 1)
    {
      showReplyPanel(false, null, null, null, false);
      DataQuery.getInstance(this.currentAccount).cleanDraft(this.dialog_id, true);
    }
    if (this.paused) {
      this.scrollToTopOnResume = true;
    }
  }
  
  public void dismissCurrentDialig()
  {
    if ((this.chatAttachAlert != null) && (this.visibleDialog == this.chatAttachAlert))
    {
      this.chatAttachAlert.closeCamera(false);
      this.chatAttachAlert.dismissInternal();
      this.chatAttachAlert.hideCamera(true);
    }
    for (;;)
    {
      return;
      super.dismissCurrentDialig();
    }
  }
  
  public boolean dismissDialogOnPause(Dialog paramDialog)
  {
    if ((paramDialog != this.chatAttachAlert) && (super.dismissDialogOnPause(paramDialog))) {}
    for (boolean bool = true;; bool = false) {
      return bool;
    }
  }
  
  public boolean extendActionMode(Menu paramMenu)
  {
    if ((PhotoViewer.hasInstance()) && (PhotoViewer.getInstance().isVisible())) {
      if ((PhotoViewer.getInstance().getSelectiongLength() != 0) && (paramMenu.findItem(16908321) != null)) {
        break label60;
      }
    }
    for (;;)
    {
      return true;
      if ((this.chatActivityEnterView.getSelectionLength() != 0) && (paramMenu.findItem(16908321) != null))
      {
        label60:
        if (Build.VERSION.SDK_INT >= 23) {
          paramMenu.removeItem(16908341);
        }
        SpannableStringBuilder localSpannableStringBuilder = new SpannableStringBuilder(LocaleController.getString("Bold", NUM));
        localSpannableStringBuilder.setSpan(new TypefaceSpan(AndroidUtilities.getTypeface("fonts/rmedium.ttf")), 0, localSpannableStringBuilder.length(), 33);
        paramMenu.add(NUM, NUM, 6, localSpannableStringBuilder);
        localSpannableStringBuilder = new SpannableStringBuilder(LocaleController.getString("Italic", NUM));
        localSpannableStringBuilder.setSpan(new TypefaceSpan(AndroidUtilities.getTypeface("fonts/ritalic.ttf")), 0, localSpannableStringBuilder.length(), 33);
        paramMenu.add(NUM, NUM, 7, localSpannableStringBuilder);
        paramMenu.add(NUM, NUM, 8, LocaleController.getString("Regular", NUM));
      }
    }
  }
  
  public TLRPC.Chat getCurrentChat()
  {
    return this.currentChat;
  }
  
  public TLRPC.ChatFull getCurrentChatInfo()
  {
    return this.info;
  }
  
  public TLRPC.EncryptedChat getCurrentEncryptedChat()
  {
    return this.currentEncryptedChat;
  }
  
  public TLRPC.User getCurrentUser()
  {
    return this.currentUser;
  }
  
  public long getDialogId()
  {
    return this.dialog_id;
  }
  
  /* Error */
  public org.telegram.ui.ActionBar.ThemeDescription[] getThemeDescriptions()
  {
    // Byte code:
    //   0: new 52	org/telegram/ui/ChatActivity$113
    //   3: dup
    //   4: aload_0
    //   5: invokespecial 5675	org/telegram/ui/ChatActivity$113:<init>	(Lorg/telegram/ui/ChatActivity;)V
    //   8: astore_1
    //   9: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12: dup
    //   13: aload_0
    //   14: getfield 833	org/telegram/ui/ChatActivity:fragmentView	Landroid/view/View;
    //   17: iconst_0
    //   18: aconst_null
    //   19: aconst_null
    //   20: aconst_null
    //   21: aconst_null
    //   22: ldc_w 5679
    //   25: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   28: astore_2
    //   29: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   32: dup
    //   33: aload_0
    //   34: getfield 781	org/telegram/ui/ChatActivity:actionBar	Lorg/telegram/ui/ActionBar/ActionBar;
    //   37: getstatic 5685	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUND	I
    //   40: aconst_null
    //   41: aconst_null
    //   42: aconst_null
    //   43: aconst_null
    //   44: ldc_w 5687
    //   47: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   50: astore_3
    //   51: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   54: dup
    //   55: aload_0
    //   56: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   59: getstatic 5690	org/telegram/ui/ActionBar/ThemeDescription:FLAG_LISTGLOWCOLOR	I
    //   62: aconst_null
    //   63: aconst_null
    //   64: aconst_null
    //   65: aconst_null
    //   66: ldc_w 5687
    //   69: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   72: astore 4
    //   74: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   77: dup
    //   78: aload_0
    //   79: getfield 781	org/telegram/ui/ChatActivity:actionBar	Lorg/telegram/ui/ActionBar/ActionBar;
    //   82: getstatic 5693	org/telegram/ui/ActionBar/ThemeDescription:FLAG_AB_ITEMSCOLOR	I
    //   85: aconst_null
    //   86: aconst_null
    //   87: aconst_null
    //   88: aconst_null
    //   89: ldc_w 5695
    //   92: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   95: astore 5
    //   97: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   100: dup
    //   101: aload_0
    //   102: getfield 781	org/telegram/ui/ChatActivity:actionBar	Lorg/telegram/ui/ActionBar/ActionBar;
    //   105: getstatic 5698	org/telegram/ui/ActionBar/ThemeDescription:FLAG_AB_SELECTORCOLOR	I
    //   108: aconst_null
    //   109: aconst_null
    //   110: aconst_null
    //   111: aconst_null
    //   112: ldc_w 5700
    //   115: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   118: astore 6
    //   120: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   123: dup
    //   124: aload_0
    //   125: getfield 781	org/telegram/ui/ChatActivity:actionBar	Lorg/telegram/ui/ActionBar/ActionBar;
    //   128: getstatic 5703	org/telegram/ui/ActionBar/ThemeDescription:FLAG_AB_SUBMENUBACKGROUND	I
    //   131: aconst_null
    //   132: aconst_null
    //   133: aconst_null
    //   134: aconst_null
    //   135: ldc_w 5705
    //   138: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   141: astore 7
    //   143: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   146: dup
    //   147: aload_0
    //   148: getfield 781	org/telegram/ui/ChatActivity:actionBar	Lorg/telegram/ui/ActionBar/ActionBar;
    //   151: getstatic 5708	org/telegram/ui/ActionBar/ThemeDescription:FLAG_AB_SUBMENUITEM	I
    //   154: aconst_null
    //   155: aconst_null
    //   156: aconst_null
    //   157: aconst_null
    //   158: ldc_w 5710
    //   161: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   164: astore 8
    //   166: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   169: dup
    //   170: aload_0
    //   171: getfield 781	org/telegram/ui/ChatActivity:actionBar	Lorg/telegram/ui/ActionBar/ActionBar;
    //   174: getstatic 5685	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUND	I
    //   177: aconst_null
    //   178: aconst_null
    //   179: aconst_null
    //   180: aconst_null
    //   181: ldc_w 5687
    //   184: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   187: astore 9
    //   189: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   192: dup
    //   193: aload_0
    //   194: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   197: getstatic 5690	org/telegram/ui/ActionBar/ThemeDescription:FLAG_LISTGLOWCOLOR	I
    //   200: aconst_null
    //   201: aconst_null
    //   202: aconst_null
    //   203: aconst_null
    //   204: ldc_w 5687
    //   207: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   210: astore 10
    //   212: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   215: dup
    //   216: aload_0
    //   217: getfield 781	org/telegram/ui/ChatActivity:actionBar	Lorg/telegram/ui/ActionBar/ActionBar;
    //   220: getstatic 5693	org/telegram/ui/ActionBar/ThemeDescription:FLAG_AB_ITEMSCOLOR	I
    //   223: aconst_null
    //   224: aconst_null
    //   225: aconst_null
    //   226: aconst_null
    //   227: ldc_w 5695
    //   230: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   233: astore 11
    //   235: aload_0
    //   236: getfield 1430	org/telegram/ui/ChatActivity:avatarContainer	Lorg/telegram/ui/Components/ChatAvatarContainer;
    //   239: ifnull +15430 -> 15669
    //   242: aload_0
    //   243: getfield 1430	org/telegram/ui/ChatActivity:avatarContainer	Lorg/telegram/ui/Components/ChatAvatarContainer;
    //   246: invokevirtual 5714	org/telegram/ui/Components/ChatAvatarContainer:getTitleTextView	()Lorg/telegram/ui/ActionBar/SimpleTextView;
    //   249: astore 12
    //   251: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   254: dup
    //   255: aload 12
    //   257: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   260: aconst_null
    //   261: aconst_null
    //   262: aconst_null
    //   263: aconst_null
    //   264: ldc_w 5719
    //   267: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   270: astore 13
    //   272: aload_0
    //   273: getfield 1430	org/telegram/ui/ChatActivity:avatarContainer	Lorg/telegram/ui/Components/ChatAvatarContainer;
    //   276: ifnull +15399 -> 15675
    //   279: aload_0
    //   280: getfield 1430	org/telegram/ui/ChatActivity:avatarContainer	Lorg/telegram/ui/Components/ChatAvatarContainer;
    //   283: invokevirtual 5722	org/telegram/ui/Components/ChatAvatarContainer:getSubtitleTextView	()Lorg/telegram/ui/ActionBar/SimpleTextView;
    //   286: astore 12
    //   288: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   291: dup
    //   292: aload 12
    //   294: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   297: aconst_null
    //   298: iconst_2
    //   299: anewarray 2837	android/graphics/Paint
    //   302: dup
    //   303: iconst_0
    //   304: getstatic 5725	org/telegram/ui/ActionBar/Theme:chat_statusPaint	Landroid/graphics/Paint;
    //   307: aastore
    //   308: dup
    //   309: iconst_1
    //   310: getstatic 5728	org/telegram/ui/ActionBar/Theme:chat_statusRecordPaint	Landroid/graphics/Paint;
    //   313: aastore
    //   314: aconst_null
    //   315: aconst_null
    //   316: ldc_w 5730
    //   319: aconst_null
    //   320: invokespecial 5733	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;Ljava/lang/Object;)V
    //   323: astore 14
    //   325: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   328: dup
    //   329: aload_0
    //   330: getfield 781	org/telegram/ui/ChatActivity:actionBar	Lorg/telegram/ui/ActionBar/ActionBar;
    //   333: getstatic 5698	org/telegram/ui/ActionBar/ThemeDescription:FLAG_AB_SELECTORCOLOR	I
    //   336: aconst_null
    //   337: aconst_null
    //   338: aconst_null
    //   339: aconst_null
    //   340: ldc_w 5700
    //   343: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   346: astore 15
    //   348: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   351: dup
    //   352: aload_0
    //   353: getfield 781	org/telegram/ui/ChatActivity:actionBar	Lorg/telegram/ui/ActionBar/ActionBar;
    //   356: getstatic 5736	org/telegram/ui/ActionBar/ThemeDescription:FLAG_AB_SEARCH	I
    //   359: aconst_null
    //   360: aconst_null
    //   361: aconst_null
    //   362: aconst_null
    //   363: ldc_w 5738
    //   366: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   369: astore 16
    //   371: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   374: dup
    //   375: aload_0
    //   376: getfield 781	org/telegram/ui/ChatActivity:actionBar	Lorg/telegram/ui/ActionBar/ActionBar;
    //   379: getstatic 5741	org/telegram/ui/ActionBar/ThemeDescription:FLAG_AB_SEARCHPLACEHOLDER	I
    //   382: aconst_null
    //   383: aconst_null
    //   384: aconst_null
    //   385: aconst_null
    //   386: ldc_w 5743
    //   389: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   392: astore 17
    //   394: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   397: dup
    //   398: aload_0
    //   399: getfield 781	org/telegram/ui/ChatActivity:actionBar	Lorg/telegram/ui/ActionBar/ActionBar;
    //   402: getstatic 5746	org/telegram/ui/ActionBar/ThemeDescription:FLAG_AB_AM_ITEMSCOLOR	I
    //   405: aconst_null
    //   406: aconst_null
    //   407: aconst_null
    //   408: aconst_null
    //   409: ldc_w 4526
    //   412: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   415: astore 18
    //   417: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   420: dup
    //   421: aload_0
    //   422: getfield 781	org/telegram/ui/ChatActivity:actionBar	Lorg/telegram/ui/ActionBar/ActionBar;
    //   425: getstatic 5749	org/telegram/ui/ActionBar/ThemeDescription:FLAG_AB_AM_BACKGROUND	I
    //   428: aconst_null
    //   429: aconst_null
    //   430: aconst_null
    //   431: aconst_null
    //   432: ldc_w 5751
    //   435: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   438: astore 19
    //   440: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   443: dup
    //   444: aload_0
    //   445: getfield 781	org/telegram/ui/ChatActivity:actionBar	Lorg/telegram/ui/ActionBar/ActionBar;
    //   448: getstatic 5754	org/telegram/ui/ActionBar/ThemeDescription:FLAG_AB_AM_TOPBACKGROUND	I
    //   451: aconst_null
    //   452: aconst_null
    //   453: aconst_null
    //   454: aconst_null
    //   455: ldc_w 5756
    //   458: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   461: astore 20
    //   463: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   466: dup
    //   467: aload_0
    //   468: getfield 781	org/telegram/ui/ChatActivity:actionBar	Lorg/telegram/ui/ActionBar/ActionBar;
    //   471: getstatic 5759	org/telegram/ui/ActionBar/ThemeDescription:FLAG_AB_AM_SELECTORCOLOR	I
    //   474: aconst_null
    //   475: aconst_null
    //   476: aconst_null
    //   477: aconst_null
    //   478: ldc_w 5761
    //   481: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   484: astore 21
    //   486: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   489: dup
    //   490: aload_0
    //   491: getfield 1040	org/telegram/ui/ChatActivity:selectedMessagesCountTextView	Lorg/telegram/ui/Components/NumberTextView;
    //   494: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   497: aconst_null
    //   498: aconst_null
    //   499: aconst_null
    //   500: aconst_null
    //   501: ldc_w 4526
    //   504: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   507: astore 22
    //   509: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   512: dup
    //   513: aload_0
    //   514: getfield 1468	org/telegram/ui/ChatActivity:actionModeTextView	Lorg/telegram/ui/ActionBar/SimpleTextView;
    //   517: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   520: aconst_null
    //   521: aconst_null
    //   522: aconst_null
    //   523: aconst_null
    //   524: ldc_w 4526
    //   527: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   530: astore 23
    //   532: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   535: dup
    //   536: aload_0
    //   537: getfield 1471	org/telegram/ui/ChatActivity:actionModeSubTextView	Lorg/telegram/ui/ActionBar/SimpleTextView;
    //   540: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   543: aconst_null
    //   544: aconst_null
    //   545: aconst_null
    //   546: aconst_null
    //   547: ldc_w 4526
    //   550: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   553: astore 24
    //   555: aload_0
    //   556: getfield 1430	org/telegram/ui/ChatActivity:avatarContainer	Lorg/telegram/ui/Components/ChatAvatarContainer;
    //   559: ifnull +15122 -> 15681
    //   562: aload_0
    //   563: getfield 1430	org/telegram/ui/ChatActivity:avatarContainer	Lorg/telegram/ui/Components/ChatAvatarContainer;
    //   566: invokevirtual 5714	org/telegram/ui/Components/ChatAvatarContainer:getTitleTextView	()Lorg/telegram/ui/ActionBar/SimpleTextView;
    //   569: astore 12
    //   571: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   574: dup
    //   575: aload 12
    //   577: iconst_0
    //   578: aconst_null
    //   579: aconst_null
    //   580: iconst_1
    //   581: anewarray 4185	android/graphics/drawable/Drawable
    //   584: dup
    //   585: iconst_0
    //   586: getstatic 4338	org/telegram/ui/ActionBar/Theme:chat_muteIconDrawable	Landroid/graphics/drawable/Drawable;
    //   589: aastore
    //   590: aconst_null
    //   591: ldc_w 5763
    //   594: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   597: astore 25
    //   599: aload_0
    //   600: getfield 1430	org/telegram/ui/ChatActivity:avatarContainer	Lorg/telegram/ui/Components/ChatAvatarContainer;
    //   603: ifnull +15084 -> 15687
    //   606: aload_0
    //   607: getfield 1430	org/telegram/ui/ChatActivity:avatarContainer	Lorg/telegram/ui/Components/ChatAvatarContainer;
    //   610: invokevirtual 5714	org/telegram/ui/Components/ChatAvatarContainer:getTitleTextView	()Lorg/telegram/ui/ActionBar/SimpleTextView;
    //   613: astore 12
    //   615: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   618: dup
    //   619: aload 12
    //   621: iconst_0
    //   622: aconst_null
    //   623: aconst_null
    //   624: iconst_1
    //   625: anewarray 4185	android/graphics/drawable/Drawable
    //   628: dup
    //   629: iconst_0
    //   630: getstatic 4341	org/telegram/ui/ActionBar/Theme:chat_lockIconDrawable	Landroid/graphics/drawable/Drawable;
    //   633: aastore
    //   634: aconst_null
    //   635: ldc_w 5765
    //   638: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   641: astore 26
    //   643: aload_0
    //   644: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   647: astore 27
    //   649: getstatic 5768	org/telegram/ui/ActionBar/Theme:avatar_photoDrawable	Landroid/graphics/drawable/Drawable;
    //   652: astore 28
    //   654: getstatic 5771	org/telegram/ui/ActionBar/Theme:avatar_broadcastDrawable	Landroid/graphics/drawable/Drawable;
    //   657: astore 29
    //   659: getstatic 5774	org/telegram/ui/ActionBar/Theme:avatar_savedDrawable	Landroid/graphics/drawable/Drawable;
    //   662: astore 12
    //   664: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   667: dup
    //   668: aload 27
    //   670: iconst_0
    //   671: iconst_1
    //   672: anewarray 5776	java/lang/Class
    //   675: dup
    //   676: iconst_0
    //   677: ldc_w 2530
    //   680: aastore
    //   681: aconst_null
    //   682: iconst_3
    //   683: anewarray 4185	android/graphics/drawable/Drawable
    //   686: dup
    //   687: iconst_0
    //   688: aload 28
    //   690: aastore
    //   691: dup
    //   692: iconst_1
    //   693: aload 29
    //   695: aastore
    //   696: dup
    //   697: iconst_2
    //   698: aload 12
    //   700: aastore
    //   701: aconst_null
    //   702: ldc_w 5778
    //   705: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   708: astore 28
    //   710: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   713: dup
    //   714: aload_0
    //   715: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   718: iconst_0
    //   719: iconst_1
    //   720: anewarray 5776	java/lang/Class
    //   723: dup
    //   724: iconst_0
    //   725: ldc_w 2530
    //   728: aastore
    //   729: aconst_null
    //   730: aconst_null
    //   731: aconst_null
    //   732: ldc_w 5780
    //   735: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   738: astore 30
    //   740: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   743: dup
    //   744: aload_0
    //   745: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   748: iconst_0
    //   749: iconst_1
    //   750: anewarray 5776	java/lang/Class
    //   753: dup
    //   754: iconst_0
    //   755: ldc_w 2530
    //   758: aastore
    //   759: aconst_null
    //   760: aconst_null
    //   761: aconst_null
    //   762: ldc_w 5782
    //   765: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   768: astore 31
    //   770: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   773: dup
    //   774: aload_0
    //   775: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   778: iconst_0
    //   779: iconst_1
    //   780: anewarray 5776	java/lang/Class
    //   783: dup
    //   784: iconst_0
    //   785: ldc_w 2530
    //   788: aastore
    //   789: aconst_null
    //   790: aconst_null
    //   791: aconst_null
    //   792: ldc_w 5784
    //   795: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   798: astore 32
    //   800: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   803: dup
    //   804: aload_0
    //   805: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   808: iconst_0
    //   809: iconst_1
    //   810: anewarray 5776	java/lang/Class
    //   813: dup
    //   814: iconst_0
    //   815: ldc_w 2530
    //   818: aastore
    //   819: aconst_null
    //   820: aconst_null
    //   821: aconst_null
    //   822: ldc_w 5786
    //   825: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   828: astore 33
    //   830: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   833: dup
    //   834: aload_0
    //   835: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   838: iconst_0
    //   839: iconst_1
    //   840: anewarray 5776	java/lang/Class
    //   843: dup
    //   844: iconst_0
    //   845: ldc_w 2530
    //   848: aastore
    //   849: aconst_null
    //   850: aconst_null
    //   851: aconst_null
    //   852: ldc_w 5788
    //   855: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   858: astore 34
    //   860: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   863: dup
    //   864: aload_0
    //   865: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   868: iconst_0
    //   869: iconst_1
    //   870: anewarray 5776	java/lang/Class
    //   873: dup
    //   874: iconst_0
    //   875: ldc_w 2530
    //   878: aastore
    //   879: aconst_null
    //   880: aconst_null
    //   881: aconst_null
    //   882: ldc_w 5790
    //   885: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   888: astore 29
    //   890: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   893: dup
    //   894: aload_0
    //   895: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   898: iconst_0
    //   899: iconst_1
    //   900: anewarray 5776	java/lang/Class
    //   903: dup
    //   904: iconst_0
    //   905: ldc_w 2530
    //   908: aastore
    //   909: aconst_null
    //   910: aconst_null
    //   911: aconst_null
    //   912: ldc_w 5792
    //   915: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   918: astore 35
    //   920: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   923: dup
    //   924: aload_0
    //   925: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   928: iconst_0
    //   929: iconst_1
    //   930: anewarray 5776	java/lang/Class
    //   933: dup
    //   934: iconst_0
    //   935: ldc_w 2530
    //   938: aastore
    //   939: aconst_null
    //   940: aconst_null
    //   941: aconst_null
    //   942: ldc_w 5794
    //   945: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   948: astore 36
    //   950: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   953: dup
    //   954: aload_0
    //   955: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   958: iconst_0
    //   959: iconst_1
    //   960: anewarray 5776	java/lang/Class
    //   963: dup
    //   964: iconst_0
    //   965: ldc_w 2530
    //   968: aastore
    //   969: aconst_null
    //   970: aconst_null
    //   971: aconst_null
    //   972: ldc_w 5796
    //   975: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   978: astore 27
    //   980: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   983: dup
    //   984: aload_0
    //   985: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   988: iconst_0
    //   989: iconst_1
    //   990: anewarray 5776	java/lang/Class
    //   993: dup
    //   994: iconst_0
    //   995: ldc_w 2530
    //   998: aastore
    //   999: aconst_null
    //   1000: aconst_null
    //   1001: aconst_null
    //   1002: ldc_w 5798
    //   1005: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   1008: astore 37
    //   1010: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   1013: dup
    //   1014: aload_0
    //   1015: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   1018: iconst_0
    //   1019: iconst_1
    //   1020: anewarray 5776	java/lang/Class
    //   1023: dup
    //   1024: iconst_0
    //   1025: ldc_w 2530
    //   1028: aastore
    //   1029: aconst_null
    //   1030: aconst_null
    //   1031: aconst_null
    //   1032: ldc_w 5800
    //   1035: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   1038: astore 38
    //   1040: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   1043: dup
    //   1044: aload_0
    //   1045: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   1048: iconst_0
    //   1049: iconst_1
    //   1050: anewarray 5776	java/lang/Class
    //   1053: dup
    //   1054: iconst_0
    //   1055: ldc_w 2530
    //   1058: aastore
    //   1059: aconst_null
    //   1060: aconst_null
    //   1061: aconst_null
    //   1062: ldc_w 5802
    //   1065: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   1068: astore 39
    //   1070: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   1073: dup
    //   1074: aload_0
    //   1075: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   1078: iconst_0
    //   1079: iconst_1
    //   1080: anewarray 5776	java/lang/Class
    //   1083: dup
    //   1084: iconst_0
    //   1085: ldc_w 2530
    //   1088: aastore
    //   1089: aconst_null
    //   1090: aconst_null
    //   1091: aconst_null
    //   1092: ldc_w 5804
    //   1095: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   1098: astore 40
    //   1100: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   1103: dup
    //   1104: aload_0
    //   1105: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   1108: iconst_0
    //   1109: iconst_1
    //   1110: anewarray 5776	java/lang/Class
    //   1113: dup
    //   1114: iconst_0
    //   1115: ldc_w 2530
    //   1118: aastore
    //   1119: aconst_null
    //   1120: aconst_null
    //   1121: aconst_null
    //   1122: ldc_w 5806
    //   1125: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   1128: astore 41
    //   1130: aload_0
    //   1131: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   1134: astore 42
    //   1136: getstatic 5809	org/telegram/ui/ActionBar/Theme:chat_msgInDrawable	Landroid/graphics/drawable/Drawable;
    //   1139: astore 43
    //   1141: getstatic 5812	org/telegram/ui/ActionBar/Theme:chat_msgInMediaDrawable	Landroid/graphics/drawable/Drawable;
    //   1144: astore 12
    //   1146: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   1149: dup
    //   1150: aload 42
    //   1152: iconst_0
    //   1153: iconst_2
    //   1154: anewarray 5776	java/lang/Class
    //   1157: dup
    //   1158: iconst_0
    //   1159: ldc_w 2530
    //   1162: aastore
    //   1163: dup
    //   1164: iconst_1
    //   1165: ldc_w 5814
    //   1168: aastore
    //   1169: aconst_null
    //   1170: iconst_2
    //   1171: anewarray 4185	android/graphics/drawable/Drawable
    //   1174: dup
    //   1175: iconst_0
    //   1176: aload 43
    //   1178: aastore
    //   1179: dup
    //   1180: iconst_1
    //   1181: aload 12
    //   1183: aastore
    //   1184: aconst_null
    //   1185: ldc_w 5816
    //   1188: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   1191: astore 42
    //   1193: aload_0
    //   1194: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   1197: astore 43
    //   1199: getstatic 5819	org/telegram/ui/ActionBar/Theme:chat_msgInSelectedDrawable	Landroid/graphics/drawable/Drawable;
    //   1202: astore 12
    //   1204: getstatic 5822	org/telegram/ui/ActionBar/Theme:chat_msgInMediaSelectedDrawable	Landroid/graphics/drawable/Drawable;
    //   1207: astore 44
    //   1209: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   1212: dup
    //   1213: aload 43
    //   1215: iconst_0
    //   1216: iconst_1
    //   1217: anewarray 5776	java/lang/Class
    //   1220: dup
    //   1221: iconst_0
    //   1222: ldc_w 2530
    //   1225: aastore
    //   1226: aconst_null
    //   1227: iconst_2
    //   1228: anewarray 4185	android/graphics/drawable/Drawable
    //   1231: dup
    //   1232: iconst_0
    //   1233: aload 12
    //   1235: aastore
    //   1236: dup
    //   1237: iconst_1
    //   1238: aload 44
    //   1240: aastore
    //   1241: aconst_null
    //   1242: ldc_w 5824
    //   1245: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   1248: astore 43
    //   1250: aload_0
    //   1251: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   1254: astore 44
    //   1256: getstatic 5827	org/telegram/ui/ActionBar/Theme:chat_msgInShadowDrawable	Landroid/graphics/drawable/Drawable;
    //   1259: astore 12
    //   1261: getstatic 5830	org/telegram/ui/ActionBar/Theme:chat_msgInMediaShadowDrawable	Landroid/graphics/drawable/Drawable;
    //   1264: astore 45
    //   1266: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   1269: dup
    //   1270: aload 44
    //   1272: iconst_0
    //   1273: iconst_2
    //   1274: anewarray 5776	java/lang/Class
    //   1277: dup
    //   1278: iconst_0
    //   1279: ldc_w 2530
    //   1282: aastore
    //   1283: dup
    //   1284: iconst_1
    //   1285: ldc_w 5814
    //   1288: aastore
    //   1289: aconst_null
    //   1290: iconst_2
    //   1291: anewarray 4185	android/graphics/drawable/Drawable
    //   1294: dup
    //   1295: iconst_0
    //   1296: aload 12
    //   1298: aastore
    //   1299: dup
    //   1300: iconst_1
    //   1301: aload 45
    //   1303: aastore
    //   1304: aconst_null
    //   1305: ldc_w 5832
    //   1308: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   1311: astore 44
    //   1313: aload_0
    //   1314: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   1317: astore 45
    //   1319: getstatic 5835	org/telegram/ui/ActionBar/Theme:chat_msgOutDrawable	Landroid/graphics/drawable/Drawable;
    //   1322: astore 12
    //   1324: getstatic 5838	org/telegram/ui/ActionBar/Theme:chat_msgOutMediaDrawable	Landroid/graphics/drawable/Drawable;
    //   1327: astore 46
    //   1329: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   1332: dup
    //   1333: aload 45
    //   1335: iconst_0
    //   1336: iconst_1
    //   1337: anewarray 5776	java/lang/Class
    //   1340: dup
    //   1341: iconst_0
    //   1342: ldc_w 2530
    //   1345: aastore
    //   1346: aconst_null
    //   1347: iconst_2
    //   1348: anewarray 4185	android/graphics/drawable/Drawable
    //   1351: dup
    //   1352: iconst_0
    //   1353: aload 12
    //   1355: aastore
    //   1356: dup
    //   1357: iconst_1
    //   1358: aload 46
    //   1360: aastore
    //   1361: aconst_null
    //   1362: ldc_w 5840
    //   1365: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   1368: astore 45
    //   1370: aload_0
    //   1371: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   1374: astore 12
    //   1376: getstatic 5843	org/telegram/ui/ActionBar/Theme:chat_msgOutSelectedDrawable	Landroid/graphics/drawable/Drawable;
    //   1379: astore 46
    //   1381: getstatic 5846	org/telegram/ui/ActionBar/Theme:chat_msgOutMediaSelectedDrawable	Landroid/graphics/drawable/Drawable;
    //   1384: astore 47
    //   1386: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   1389: dup
    //   1390: aload 12
    //   1392: iconst_0
    //   1393: iconst_1
    //   1394: anewarray 5776	java/lang/Class
    //   1397: dup
    //   1398: iconst_0
    //   1399: ldc_w 2530
    //   1402: aastore
    //   1403: aconst_null
    //   1404: iconst_2
    //   1405: anewarray 4185	android/graphics/drawable/Drawable
    //   1408: dup
    //   1409: iconst_0
    //   1410: aload 46
    //   1412: aastore
    //   1413: dup
    //   1414: iconst_1
    //   1415: aload 47
    //   1417: aastore
    //   1418: aconst_null
    //   1419: ldc_w 5848
    //   1422: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   1425: astore 46
    //   1427: aload_0
    //   1428: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   1431: astore 47
    //   1433: getstatic 5851	org/telegram/ui/ActionBar/Theme:chat_msgOutShadowDrawable	Landroid/graphics/drawable/Drawable;
    //   1436: astore 48
    //   1438: getstatic 5854	org/telegram/ui/ActionBar/Theme:chat_msgOutMediaShadowDrawable	Landroid/graphics/drawable/Drawable;
    //   1441: astore 12
    //   1443: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   1446: dup
    //   1447: aload 47
    //   1449: iconst_0
    //   1450: iconst_1
    //   1451: anewarray 5776	java/lang/Class
    //   1454: dup
    //   1455: iconst_0
    //   1456: ldc_w 2530
    //   1459: aastore
    //   1460: aconst_null
    //   1461: iconst_2
    //   1462: anewarray 4185	android/graphics/drawable/Drawable
    //   1465: dup
    //   1466: iconst_0
    //   1467: aload 48
    //   1469: aastore
    //   1470: dup
    //   1471: iconst_1
    //   1472: aload 12
    //   1474: aastore
    //   1475: aconst_null
    //   1476: ldc_w 5856
    //   1479: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   1482: astore 47
    //   1484: aload_0
    //   1485: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   1488: astore 48
    //   1490: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   1493: istore 49
    //   1495: getstatic 5860	org/telegram/ui/ActionBar/Theme:chat_actionTextPaint	Landroid/text/TextPaint;
    //   1498: astore 12
    //   1500: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   1503: dup
    //   1504: aload 48
    //   1506: iload 49
    //   1508: iconst_1
    //   1509: anewarray 5776	java/lang/Class
    //   1512: dup
    //   1513: iconst_0
    //   1514: ldc_w 2236
    //   1517: aastore
    //   1518: aload 12
    //   1520: aconst_null
    //   1521: aconst_null
    //   1522: ldc_w 4638
    //   1525: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   1528: astore 48
    //   1530: aload_0
    //   1531: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   1534: astore 50
    //   1536: getstatic 5863	org/telegram/ui/ActionBar/ThemeDescription:FLAG_LINKCOLOR	I
    //   1539: istore 49
    //   1541: getstatic 5860	org/telegram/ui/ActionBar/Theme:chat_actionTextPaint	Landroid/text/TextPaint;
    //   1544: astore 12
    //   1546: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   1549: dup
    //   1550: aload 50
    //   1552: iload 49
    //   1554: iconst_1
    //   1555: anewarray 5776	java/lang/Class
    //   1558: dup
    //   1559: iconst_0
    //   1560: ldc_w 2236
    //   1563: aastore
    //   1564: aload 12
    //   1566: aconst_null
    //   1567: aconst_null
    //   1568: ldc_w 5865
    //   1571: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   1574: astore 50
    //   1576: aload_0
    //   1577: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   1580: astore 51
    //   1582: getstatic 5868	org/telegram/ui/ActionBar/Theme:chat_shareIconDrawable	Landroid/graphics/drawable/Drawable;
    //   1585: astore 52
    //   1587: getstatic 5871	org/telegram/ui/ActionBar/Theme:chat_replyIconDrawable	Landroid/graphics/drawable/Drawable;
    //   1590: astore 53
    //   1592: getstatic 5874	org/telegram/ui/ActionBar/Theme:chat_botInlineDrawable	Landroid/graphics/drawable/Drawable;
    //   1595: astore 12
    //   1597: getstatic 5877	org/telegram/ui/ActionBar/Theme:chat_botLinkDrawalbe	Landroid/graphics/drawable/Drawable;
    //   1600: astore 54
    //   1602: getstatic 5880	org/telegram/ui/ActionBar/Theme:chat_goIconDrawable	Landroid/graphics/drawable/Drawable;
    //   1605: astore 55
    //   1607: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   1610: dup
    //   1611: aload 51
    //   1613: iconst_0
    //   1614: iconst_1
    //   1615: anewarray 5776	java/lang/Class
    //   1618: dup
    //   1619: iconst_0
    //   1620: ldc_w 2530
    //   1623: aastore
    //   1624: aconst_null
    //   1625: iconst_5
    //   1626: anewarray 4185	android/graphics/drawable/Drawable
    //   1629: dup
    //   1630: iconst_0
    //   1631: aload 52
    //   1633: aastore
    //   1634: dup
    //   1635: iconst_1
    //   1636: aload 53
    //   1638: aastore
    //   1639: dup
    //   1640: iconst_2
    //   1641: aload 12
    //   1643: aastore
    //   1644: dup
    //   1645: iconst_3
    //   1646: aload 54
    //   1648: aastore
    //   1649: dup
    //   1650: iconst_4
    //   1651: aload 55
    //   1653: aastore
    //   1654: aconst_null
    //   1655: ldc_w 5882
    //   1658: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   1661: astore 51
    //   1663: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   1666: dup
    //   1667: aload_0
    //   1668: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   1671: iconst_0
    //   1672: iconst_2
    //   1673: anewarray 5776	java/lang/Class
    //   1676: dup
    //   1677: iconst_0
    //   1678: ldc_w 2530
    //   1681: aastore
    //   1682: dup
    //   1683: iconst_1
    //   1684: ldc_w 2236
    //   1687: aastore
    //   1688: aconst_null
    //   1689: aconst_null
    //   1690: aconst_null
    //   1691: ldc_w 5884
    //   1694: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   1697: astore 52
    //   1699: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   1702: dup
    //   1703: aload_0
    //   1704: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   1707: iconst_0
    //   1708: iconst_2
    //   1709: anewarray 5776	java/lang/Class
    //   1712: dup
    //   1713: iconst_0
    //   1714: ldc_w 2530
    //   1717: aastore
    //   1718: dup
    //   1719: iconst_1
    //   1720: ldc_w 2236
    //   1723: aastore
    //   1724: aconst_null
    //   1725: aconst_null
    //   1726: aconst_null
    //   1727: ldc_w 5886
    //   1730: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   1733: astore 56
    //   1735: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   1738: dup
    //   1739: aload_0
    //   1740: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   1743: iconst_0
    //   1744: iconst_2
    //   1745: anewarray 5776	java/lang/Class
    //   1748: dup
    //   1749: iconst_0
    //   1750: ldc_w 2530
    //   1753: aastore
    //   1754: dup
    //   1755: iconst_1
    //   1756: ldc_w 5814
    //   1759: aastore
    //   1760: aconst_null
    //   1761: aconst_null
    //   1762: aconst_null
    //   1763: ldc_w 5888
    //   1766: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   1769: astore 54
    //   1771: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   1774: dup
    //   1775: aload_0
    //   1776: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   1779: iconst_0
    //   1780: iconst_1
    //   1781: anewarray 5776	java/lang/Class
    //   1784: dup
    //   1785: iconst_0
    //   1786: ldc_w 2530
    //   1789: aastore
    //   1790: aconst_null
    //   1791: aconst_null
    //   1792: aconst_null
    //   1793: ldc_w 5890
    //   1796: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   1799: astore 57
    //   1801: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   1804: dup
    //   1805: aload_0
    //   1806: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   1809: getstatic 5863	org/telegram/ui/ActionBar/ThemeDescription:FLAG_LINKCOLOR	I
    //   1812: iconst_2
    //   1813: anewarray 5776	java/lang/Class
    //   1816: dup
    //   1817: iconst_0
    //   1818: ldc_w 2530
    //   1821: aastore
    //   1822: dup
    //   1823: iconst_1
    //   1824: ldc_w 5814
    //   1827: aastore
    //   1828: aconst_null
    //   1829: aconst_null
    //   1830: aconst_null
    //   1831: ldc_w 5892
    //   1834: aconst_null
    //   1835: invokespecial 5733	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;Ljava/lang/Object;)V
    //   1838: astore 55
    //   1840: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   1843: dup
    //   1844: aload_0
    //   1845: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   1848: getstatic 5863	org/telegram/ui/ActionBar/ThemeDescription:FLAG_LINKCOLOR	I
    //   1851: iconst_1
    //   1852: anewarray 5776	java/lang/Class
    //   1855: dup
    //   1856: iconst_0
    //   1857: ldc_w 2530
    //   1860: aastore
    //   1861: aconst_null
    //   1862: aconst_null
    //   1863: aconst_null
    //   1864: ldc_w 5894
    //   1867: aconst_null
    //   1868: invokespecial 5733	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;Ljava/lang/Object;)V
    //   1871: astore 53
    //   1873: aload_0
    //   1874: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   1877: astore 12
    //   1879: getstatic 5897	org/telegram/ui/ActionBar/Theme:chat_msgOutCheckDrawable	Landroid/graphics/drawable/Drawable;
    //   1882: astore 58
    //   1884: getstatic 5900	org/telegram/ui/ActionBar/Theme:chat_msgOutHalfCheckDrawable	Landroid/graphics/drawable/Drawable;
    //   1887: astore 59
    //   1889: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   1892: dup
    //   1893: aload 12
    //   1895: iconst_0
    //   1896: iconst_1
    //   1897: anewarray 5776	java/lang/Class
    //   1900: dup
    //   1901: iconst_0
    //   1902: ldc_w 2530
    //   1905: aastore
    //   1906: aconst_null
    //   1907: iconst_2
    //   1908: anewarray 4185	android/graphics/drawable/Drawable
    //   1911: dup
    //   1912: iconst_0
    //   1913: aload 58
    //   1915: aastore
    //   1916: dup
    //   1917: iconst_1
    //   1918: aload 59
    //   1920: aastore
    //   1921: aconst_null
    //   1922: ldc_w 5902
    //   1925: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   1928: astore 58
    //   1930: aload_0
    //   1931: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   1934: astore 59
    //   1936: getstatic 5905	org/telegram/ui/ActionBar/Theme:chat_msgOutCheckSelectedDrawable	Landroid/graphics/drawable/Drawable;
    //   1939: astore 60
    //   1941: getstatic 5908	org/telegram/ui/ActionBar/Theme:chat_msgOutHalfCheckSelectedDrawable	Landroid/graphics/drawable/Drawable;
    //   1944: astore 12
    //   1946: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   1949: dup
    //   1950: aload 59
    //   1952: iconst_0
    //   1953: iconst_1
    //   1954: anewarray 5776	java/lang/Class
    //   1957: dup
    //   1958: iconst_0
    //   1959: ldc_w 2530
    //   1962: aastore
    //   1963: aconst_null
    //   1964: iconst_2
    //   1965: anewarray 4185	android/graphics/drawable/Drawable
    //   1968: dup
    //   1969: iconst_0
    //   1970: aload 60
    //   1972: aastore
    //   1973: dup
    //   1974: iconst_1
    //   1975: aload 12
    //   1977: aastore
    //   1978: aconst_null
    //   1979: ldc_w 5910
    //   1982: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   1985: astore 59
    //   1987: aload_0
    //   1988: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   1991: astore 12
    //   1993: getstatic 5913	org/telegram/ui/ActionBar/Theme:chat_msgOutClockDrawable	Landroid/graphics/drawable/Drawable;
    //   1996: astore 60
    //   1998: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   2001: dup
    //   2002: aload 12
    //   2004: iconst_0
    //   2005: iconst_1
    //   2006: anewarray 5776	java/lang/Class
    //   2009: dup
    //   2010: iconst_0
    //   2011: ldc_w 2530
    //   2014: aastore
    //   2015: aconst_null
    //   2016: iconst_1
    //   2017: anewarray 4185	android/graphics/drawable/Drawable
    //   2020: dup
    //   2021: iconst_0
    //   2022: aload 60
    //   2024: aastore
    //   2025: aconst_null
    //   2026: ldc_w 5915
    //   2029: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   2032: astore 60
    //   2034: aload_0
    //   2035: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   2038: astore 12
    //   2040: getstatic 5918	org/telegram/ui/ActionBar/Theme:chat_msgOutSelectedClockDrawable	Landroid/graphics/drawable/Drawable;
    //   2043: astore 61
    //   2045: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   2048: dup
    //   2049: aload 12
    //   2051: iconst_0
    //   2052: iconst_1
    //   2053: anewarray 5776	java/lang/Class
    //   2056: dup
    //   2057: iconst_0
    //   2058: ldc_w 2530
    //   2061: aastore
    //   2062: aconst_null
    //   2063: iconst_1
    //   2064: anewarray 4185	android/graphics/drawable/Drawable
    //   2067: dup
    //   2068: iconst_0
    //   2069: aload 61
    //   2071: aastore
    //   2072: aconst_null
    //   2073: ldc_w 5920
    //   2076: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   2079: astore 61
    //   2081: aload_0
    //   2082: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   2085: astore 12
    //   2087: getstatic 5923	org/telegram/ui/ActionBar/Theme:chat_msgInClockDrawable	Landroid/graphics/drawable/Drawable;
    //   2090: astore 62
    //   2092: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   2095: dup
    //   2096: aload 12
    //   2098: iconst_0
    //   2099: iconst_1
    //   2100: anewarray 5776	java/lang/Class
    //   2103: dup
    //   2104: iconst_0
    //   2105: ldc_w 2530
    //   2108: aastore
    //   2109: aconst_null
    //   2110: iconst_1
    //   2111: anewarray 4185	android/graphics/drawable/Drawable
    //   2114: dup
    //   2115: iconst_0
    //   2116: aload 62
    //   2118: aastore
    //   2119: aconst_null
    //   2120: ldc_w 5925
    //   2123: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   2126: astore 62
    //   2128: aload_0
    //   2129: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   2132: astore 63
    //   2134: getstatic 5928	org/telegram/ui/ActionBar/Theme:chat_msgInSelectedClockDrawable	Landroid/graphics/drawable/Drawable;
    //   2137: astore 12
    //   2139: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   2142: dup
    //   2143: aload 63
    //   2145: iconst_0
    //   2146: iconst_1
    //   2147: anewarray 5776	java/lang/Class
    //   2150: dup
    //   2151: iconst_0
    //   2152: ldc_w 2530
    //   2155: aastore
    //   2156: aconst_null
    //   2157: iconst_1
    //   2158: anewarray 4185	android/graphics/drawable/Drawable
    //   2161: dup
    //   2162: iconst_0
    //   2163: aload 12
    //   2165: aastore
    //   2166: aconst_null
    //   2167: ldc_w 5930
    //   2170: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   2173: astore 63
    //   2175: aload_0
    //   2176: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   2179: astore 64
    //   2181: getstatic 5933	org/telegram/ui/ActionBar/Theme:chat_msgMediaCheckDrawable	Landroid/graphics/drawable/Drawable;
    //   2184: astore 65
    //   2186: getstatic 5936	org/telegram/ui/ActionBar/Theme:chat_msgMediaHalfCheckDrawable	Landroid/graphics/drawable/Drawable;
    //   2189: astore 12
    //   2191: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   2194: dup
    //   2195: aload 64
    //   2197: iconst_0
    //   2198: iconst_1
    //   2199: anewarray 5776	java/lang/Class
    //   2202: dup
    //   2203: iconst_0
    //   2204: ldc_w 2530
    //   2207: aastore
    //   2208: aconst_null
    //   2209: iconst_2
    //   2210: anewarray 4185	android/graphics/drawable/Drawable
    //   2213: dup
    //   2214: iconst_0
    //   2215: aload 65
    //   2217: aastore
    //   2218: dup
    //   2219: iconst_1
    //   2220: aload 12
    //   2222: aastore
    //   2223: aconst_null
    //   2224: ldc_w 5938
    //   2227: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   2230: astore 64
    //   2232: aload_0
    //   2233: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   2236: astore 65
    //   2238: getstatic 5941	org/telegram/ui/ActionBar/Theme:chat_msgStickerHalfCheckDrawable	Landroid/graphics/drawable/Drawable;
    //   2241: astore 66
    //   2243: getstatic 5944	org/telegram/ui/ActionBar/Theme:chat_msgStickerCheckDrawable	Landroid/graphics/drawable/Drawable;
    //   2246: astore 67
    //   2248: getstatic 5947	org/telegram/ui/ActionBar/Theme:chat_msgStickerClockDrawable	Landroid/graphics/drawable/Drawable;
    //   2251: astore 12
    //   2253: getstatic 5950	org/telegram/ui/ActionBar/Theme:chat_msgStickerViewsDrawable	Landroid/graphics/drawable/Drawable;
    //   2256: astore 68
    //   2258: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   2261: dup
    //   2262: aload 65
    //   2264: iconst_0
    //   2265: iconst_1
    //   2266: anewarray 5776	java/lang/Class
    //   2269: dup
    //   2270: iconst_0
    //   2271: ldc_w 2530
    //   2274: aastore
    //   2275: aconst_null
    //   2276: iconst_4
    //   2277: anewarray 4185	android/graphics/drawable/Drawable
    //   2280: dup
    //   2281: iconst_0
    //   2282: aload 66
    //   2284: aastore
    //   2285: dup
    //   2286: iconst_1
    //   2287: aload 67
    //   2289: aastore
    //   2290: dup
    //   2291: iconst_2
    //   2292: aload 12
    //   2294: aastore
    //   2295: dup
    //   2296: iconst_3
    //   2297: aload 68
    //   2299: aastore
    //   2300: aconst_null
    //   2301: ldc_w 4638
    //   2304: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   2307: astore 65
    //   2309: aload_0
    //   2310: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   2313: astore 68
    //   2315: getstatic 5953	org/telegram/ui/ActionBar/Theme:chat_msgMediaClockDrawable	Landroid/graphics/drawable/Drawable;
    //   2318: astore 12
    //   2320: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   2323: dup
    //   2324: aload 68
    //   2326: iconst_0
    //   2327: iconst_1
    //   2328: anewarray 5776	java/lang/Class
    //   2331: dup
    //   2332: iconst_0
    //   2333: ldc_w 2530
    //   2336: aastore
    //   2337: aconst_null
    //   2338: iconst_1
    //   2339: anewarray 4185	android/graphics/drawable/Drawable
    //   2342: dup
    //   2343: iconst_0
    //   2344: aload 12
    //   2346: aastore
    //   2347: aconst_null
    //   2348: ldc_w 5955
    //   2351: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   2354: astore 68
    //   2356: aload_0
    //   2357: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   2360: astore 67
    //   2362: getstatic 5958	org/telegram/ui/ActionBar/Theme:chat_msgOutViewsDrawable	Landroid/graphics/drawable/Drawable;
    //   2365: astore 12
    //   2367: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   2370: dup
    //   2371: aload 67
    //   2373: iconst_0
    //   2374: iconst_1
    //   2375: anewarray 5776	java/lang/Class
    //   2378: dup
    //   2379: iconst_0
    //   2380: ldc_w 2530
    //   2383: aastore
    //   2384: aconst_null
    //   2385: iconst_1
    //   2386: anewarray 4185	android/graphics/drawable/Drawable
    //   2389: dup
    //   2390: iconst_0
    //   2391: aload 12
    //   2393: aastore
    //   2394: aconst_null
    //   2395: ldc_w 5960
    //   2398: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   2401: astore 67
    //   2403: aload_0
    //   2404: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   2407: astore 66
    //   2409: getstatic 5963	org/telegram/ui/ActionBar/Theme:chat_msgOutViewsSelectedDrawable	Landroid/graphics/drawable/Drawable;
    //   2412: astore 12
    //   2414: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   2417: dup
    //   2418: aload 66
    //   2420: iconst_0
    //   2421: iconst_1
    //   2422: anewarray 5776	java/lang/Class
    //   2425: dup
    //   2426: iconst_0
    //   2427: ldc_w 2530
    //   2430: aastore
    //   2431: aconst_null
    //   2432: iconst_1
    //   2433: anewarray 4185	android/graphics/drawable/Drawable
    //   2436: dup
    //   2437: iconst_0
    //   2438: aload 12
    //   2440: aastore
    //   2441: aconst_null
    //   2442: ldc_w 5965
    //   2445: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   2448: astore 66
    //   2450: aload_0
    //   2451: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   2454: astore 69
    //   2456: getstatic 5968	org/telegram/ui/ActionBar/Theme:chat_msgInViewsDrawable	Landroid/graphics/drawable/Drawable;
    //   2459: astore 12
    //   2461: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   2464: dup
    //   2465: aload 69
    //   2467: iconst_0
    //   2468: iconst_1
    //   2469: anewarray 5776	java/lang/Class
    //   2472: dup
    //   2473: iconst_0
    //   2474: ldc_w 2530
    //   2477: aastore
    //   2478: aconst_null
    //   2479: iconst_1
    //   2480: anewarray 4185	android/graphics/drawable/Drawable
    //   2483: dup
    //   2484: iconst_0
    //   2485: aload 12
    //   2487: aastore
    //   2488: aconst_null
    //   2489: ldc_w 5970
    //   2492: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   2495: astore 69
    //   2497: aload_0
    //   2498: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   2501: astore 12
    //   2503: getstatic 5973	org/telegram/ui/ActionBar/Theme:chat_msgInViewsSelectedDrawable	Landroid/graphics/drawable/Drawable;
    //   2506: astore 70
    //   2508: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   2511: dup
    //   2512: aload 12
    //   2514: iconst_0
    //   2515: iconst_1
    //   2516: anewarray 5776	java/lang/Class
    //   2519: dup
    //   2520: iconst_0
    //   2521: ldc_w 2530
    //   2524: aastore
    //   2525: aconst_null
    //   2526: iconst_1
    //   2527: anewarray 4185	android/graphics/drawable/Drawable
    //   2530: dup
    //   2531: iconst_0
    //   2532: aload 70
    //   2534: aastore
    //   2535: aconst_null
    //   2536: ldc_w 5975
    //   2539: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   2542: astore 70
    //   2544: aload_0
    //   2545: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   2548: astore 12
    //   2550: getstatic 5978	org/telegram/ui/ActionBar/Theme:chat_msgMediaViewsDrawable	Landroid/graphics/drawable/Drawable;
    //   2553: astore 71
    //   2555: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   2558: dup
    //   2559: aload 12
    //   2561: iconst_0
    //   2562: iconst_1
    //   2563: anewarray 5776	java/lang/Class
    //   2566: dup
    //   2567: iconst_0
    //   2568: ldc_w 2530
    //   2571: aastore
    //   2572: aconst_null
    //   2573: iconst_1
    //   2574: anewarray 4185	android/graphics/drawable/Drawable
    //   2577: dup
    //   2578: iconst_0
    //   2579: aload 71
    //   2581: aastore
    //   2582: aconst_null
    //   2583: ldc_w 5980
    //   2586: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   2589: astore 71
    //   2591: aload_0
    //   2592: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   2595: astore 72
    //   2597: getstatic 5983	org/telegram/ui/ActionBar/Theme:chat_msgOutMenuDrawable	Landroid/graphics/drawable/Drawable;
    //   2600: astore 12
    //   2602: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   2605: dup
    //   2606: aload 72
    //   2608: iconst_0
    //   2609: iconst_1
    //   2610: anewarray 5776	java/lang/Class
    //   2613: dup
    //   2614: iconst_0
    //   2615: ldc_w 2530
    //   2618: aastore
    //   2619: aconst_null
    //   2620: iconst_1
    //   2621: anewarray 4185	android/graphics/drawable/Drawable
    //   2624: dup
    //   2625: iconst_0
    //   2626: aload 12
    //   2628: aastore
    //   2629: aconst_null
    //   2630: ldc_w 5985
    //   2633: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   2636: astore 72
    //   2638: aload_0
    //   2639: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   2642: astore 73
    //   2644: getstatic 5988	org/telegram/ui/ActionBar/Theme:chat_msgOutMenuSelectedDrawable	Landroid/graphics/drawable/Drawable;
    //   2647: astore 12
    //   2649: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   2652: dup
    //   2653: aload 73
    //   2655: iconst_0
    //   2656: iconst_1
    //   2657: anewarray 5776	java/lang/Class
    //   2660: dup
    //   2661: iconst_0
    //   2662: ldc_w 2530
    //   2665: aastore
    //   2666: aconst_null
    //   2667: iconst_1
    //   2668: anewarray 4185	android/graphics/drawable/Drawable
    //   2671: dup
    //   2672: iconst_0
    //   2673: aload 12
    //   2675: aastore
    //   2676: aconst_null
    //   2677: ldc_w 5990
    //   2680: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   2683: astore 73
    //   2685: aload_0
    //   2686: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   2689: astore 74
    //   2691: getstatic 5993	org/telegram/ui/ActionBar/Theme:chat_msgInMenuDrawable	Landroid/graphics/drawable/Drawable;
    //   2694: astore 12
    //   2696: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   2699: dup
    //   2700: aload 74
    //   2702: iconst_0
    //   2703: iconst_1
    //   2704: anewarray 5776	java/lang/Class
    //   2707: dup
    //   2708: iconst_0
    //   2709: ldc_w 2530
    //   2712: aastore
    //   2713: aconst_null
    //   2714: iconst_1
    //   2715: anewarray 4185	android/graphics/drawable/Drawable
    //   2718: dup
    //   2719: iconst_0
    //   2720: aload 12
    //   2722: aastore
    //   2723: aconst_null
    //   2724: ldc_w 5995
    //   2727: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   2730: astore 74
    //   2732: aload_0
    //   2733: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   2736: astore 12
    //   2738: getstatic 5998	org/telegram/ui/ActionBar/Theme:chat_msgInMenuSelectedDrawable	Landroid/graphics/drawable/Drawable;
    //   2741: astore 75
    //   2743: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   2746: dup
    //   2747: aload 12
    //   2749: iconst_0
    //   2750: iconst_1
    //   2751: anewarray 5776	java/lang/Class
    //   2754: dup
    //   2755: iconst_0
    //   2756: ldc_w 2530
    //   2759: aastore
    //   2760: aconst_null
    //   2761: iconst_1
    //   2762: anewarray 4185	android/graphics/drawable/Drawable
    //   2765: dup
    //   2766: iconst_0
    //   2767: aload 75
    //   2769: aastore
    //   2770: aconst_null
    //   2771: ldc_w 6000
    //   2774: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   2777: astore 75
    //   2779: aload_0
    //   2780: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   2783: astore 76
    //   2785: getstatic 6003	org/telegram/ui/ActionBar/Theme:chat_msgMediaMenuDrawable	Landroid/graphics/drawable/Drawable;
    //   2788: astore 12
    //   2790: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   2793: dup
    //   2794: aload 76
    //   2796: iconst_0
    //   2797: iconst_1
    //   2798: anewarray 5776	java/lang/Class
    //   2801: dup
    //   2802: iconst_0
    //   2803: ldc_w 2530
    //   2806: aastore
    //   2807: aconst_null
    //   2808: iconst_1
    //   2809: anewarray 4185	android/graphics/drawable/Drawable
    //   2812: dup
    //   2813: iconst_0
    //   2814: aload 12
    //   2816: aastore
    //   2817: aconst_null
    //   2818: ldc_w 6005
    //   2821: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   2824: astore 76
    //   2826: aload_0
    //   2827: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   2830: astore 12
    //   2832: getstatic 6008	org/telegram/ui/ActionBar/Theme:chat_msgOutInstantDrawable	Landroid/graphics/drawable/Drawable;
    //   2835: astore 77
    //   2837: getstatic 6011	org/telegram/ui/ActionBar/Theme:chat_msgOutCallDrawable	Landroid/graphics/drawable/Drawable;
    //   2840: astore 78
    //   2842: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   2845: dup
    //   2846: aload 12
    //   2848: iconst_0
    //   2849: iconst_1
    //   2850: anewarray 5776	java/lang/Class
    //   2853: dup
    //   2854: iconst_0
    //   2855: ldc_w 2530
    //   2858: aastore
    //   2859: aconst_null
    //   2860: iconst_2
    //   2861: anewarray 4185	android/graphics/drawable/Drawable
    //   2864: dup
    //   2865: iconst_0
    //   2866: aload 77
    //   2868: aastore
    //   2869: dup
    //   2870: iconst_1
    //   2871: aload 78
    //   2873: aastore
    //   2874: aconst_null
    //   2875: ldc_w 6013
    //   2878: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   2881: astore 78
    //   2883: aload_0
    //   2884: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   2887: astore 77
    //   2889: getstatic 6016	org/telegram/ui/ActionBar/Theme:chat_msgOutCallSelectedDrawable	Landroid/graphics/drawable/Drawable;
    //   2892: astore 12
    //   2894: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   2897: dup
    //   2898: aload 77
    //   2900: iconst_0
    //   2901: iconst_1
    //   2902: anewarray 5776	java/lang/Class
    //   2905: dup
    //   2906: iconst_0
    //   2907: ldc_w 2530
    //   2910: aastore
    //   2911: aconst_null
    //   2912: iconst_1
    //   2913: anewarray 4185	android/graphics/drawable/Drawable
    //   2916: dup
    //   2917: iconst_0
    //   2918: aload 12
    //   2920: aastore
    //   2921: aconst_null
    //   2922: ldc_w 6018
    //   2925: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   2928: astore 77
    //   2930: aload_0
    //   2931: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   2934: astore 79
    //   2936: getstatic 6021	org/telegram/ui/ActionBar/Theme:chat_msgInInstantDrawable	Landroid/graphics/drawable/Drawable;
    //   2939: astore 80
    //   2941: getstatic 6024	org/telegram/ui/ActionBar/Theme:chat_msgInCallDrawable	Landroid/graphics/drawable/Drawable;
    //   2944: astore 12
    //   2946: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   2949: dup
    //   2950: aload 79
    //   2952: iconst_0
    //   2953: iconst_1
    //   2954: anewarray 5776	java/lang/Class
    //   2957: dup
    //   2958: iconst_0
    //   2959: ldc_w 2530
    //   2962: aastore
    //   2963: aconst_null
    //   2964: iconst_2
    //   2965: anewarray 4185	android/graphics/drawable/Drawable
    //   2968: dup
    //   2969: iconst_0
    //   2970: aload 80
    //   2972: aastore
    //   2973: dup
    //   2974: iconst_1
    //   2975: aload 12
    //   2977: aastore
    //   2978: aconst_null
    //   2979: ldc_w 6026
    //   2982: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   2985: astore 80
    //   2987: aload_0
    //   2988: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   2991: astore 79
    //   2993: getstatic 6029	org/telegram/ui/ActionBar/Theme:chat_msgInCallSelectedDrawable	Landroid/graphics/drawable/Drawable;
    //   2996: astore 12
    //   2998: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3001: dup
    //   3002: aload 79
    //   3004: iconst_0
    //   3005: iconst_1
    //   3006: anewarray 5776	java/lang/Class
    //   3009: dup
    //   3010: iconst_0
    //   3011: ldc_w 2530
    //   3014: aastore
    //   3015: aconst_null
    //   3016: iconst_1
    //   3017: anewarray 4185	android/graphics/drawable/Drawable
    //   3020: dup
    //   3021: iconst_0
    //   3022: aload 12
    //   3024: aastore
    //   3025: aconst_null
    //   3026: ldc_w 6031
    //   3029: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   3032: astore 79
    //   3034: aload_0
    //   3035: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   3038: astore 12
    //   3040: getstatic 6034	org/telegram/ui/ActionBar/Theme:chat_msgCallUpRedDrawable	Landroid/graphics/drawable/Drawable;
    //   3043: astore 81
    //   3045: getstatic 6037	org/telegram/ui/ActionBar/Theme:chat_msgCallDownRedDrawable	Landroid/graphics/drawable/Drawable;
    //   3048: astore 82
    //   3050: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3053: dup
    //   3054: aload 12
    //   3056: iconst_0
    //   3057: iconst_1
    //   3058: anewarray 5776	java/lang/Class
    //   3061: dup
    //   3062: iconst_0
    //   3063: ldc_w 2530
    //   3066: aastore
    //   3067: aconst_null
    //   3068: iconst_2
    //   3069: anewarray 4185	android/graphics/drawable/Drawable
    //   3072: dup
    //   3073: iconst_0
    //   3074: aload 81
    //   3076: aastore
    //   3077: dup
    //   3078: iconst_1
    //   3079: aload 82
    //   3081: aastore
    //   3082: aconst_null
    //   3083: ldc_w 6039
    //   3086: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   3089: astore 81
    //   3091: aload_0
    //   3092: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   3095: astore 83
    //   3097: getstatic 6042	org/telegram/ui/ActionBar/Theme:chat_msgCallUpGreenDrawable	Landroid/graphics/drawable/Drawable;
    //   3100: astore 82
    //   3102: getstatic 6045	org/telegram/ui/ActionBar/Theme:chat_msgCallDownGreenDrawable	Landroid/graphics/drawable/Drawable;
    //   3105: astore 12
    //   3107: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3110: dup
    //   3111: aload 83
    //   3113: iconst_0
    //   3114: iconst_1
    //   3115: anewarray 5776	java/lang/Class
    //   3118: dup
    //   3119: iconst_0
    //   3120: ldc_w 2530
    //   3123: aastore
    //   3124: aconst_null
    //   3125: iconst_2
    //   3126: anewarray 4185	android/graphics/drawable/Drawable
    //   3129: dup
    //   3130: iconst_0
    //   3131: aload 82
    //   3133: aastore
    //   3134: dup
    //   3135: iconst_1
    //   3136: aload 12
    //   3138: aastore
    //   3139: aconst_null
    //   3140: ldc_w 6047
    //   3143: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   3146: astore 82
    //   3148: aload_0
    //   3149: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   3152: astore 12
    //   3154: getstatic 6050	org/telegram/ui/ActionBar/Theme:chat_msgErrorPaint	Landroid/graphics/Paint;
    //   3157: astore 83
    //   3159: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3162: dup
    //   3163: aload 12
    //   3165: iconst_0
    //   3166: iconst_1
    //   3167: anewarray 5776	java/lang/Class
    //   3170: dup
    //   3171: iconst_0
    //   3172: ldc_w 2530
    //   3175: aastore
    //   3176: aload 83
    //   3178: aconst_null
    //   3179: aconst_null
    //   3180: ldc_w 6052
    //   3183: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   3186: astore 83
    //   3188: aload_0
    //   3189: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   3192: astore 84
    //   3194: getstatic 6055	org/telegram/ui/ActionBar/Theme:chat_msgErrorDrawable	Landroid/graphics/drawable/Drawable;
    //   3197: astore 12
    //   3199: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3202: dup
    //   3203: aload 84
    //   3205: iconst_0
    //   3206: iconst_1
    //   3207: anewarray 5776	java/lang/Class
    //   3210: dup
    //   3211: iconst_0
    //   3212: ldc_w 2530
    //   3215: aastore
    //   3216: aconst_null
    //   3217: iconst_1
    //   3218: anewarray 4185	android/graphics/drawable/Drawable
    //   3221: dup
    //   3222: iconst_0
    //   3223: aload 12
    //   3225: aastore
    //   3226: aconst_null
    //   3227: ldc_w 6057
    //   3230: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   3233: astore 84
    //   3235: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3238: dup
    //   3239: aload_0
    //   3240: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   3243: iconst_0
    //   3244: iconst_1
    //   3245: anewarray 5776	java/lang/Class
    //   3248: dup
    //   3249: iconst_0
    //   3250: ldc_w 2530
    //   3253: aastore
    //   3254: aconst_null
    //   3255: aconst_null
    //   3256: aload_1
    //   3257: ldc_w 3676
    //   3260: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   3263: astore 85
    //   3265: aload_0
    //   3266: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   3269: astore 12
    //   3271: getstatic 6060	org/telegram/ui/ActionBar/Theme:chat_durationPaint	Landroid/text/TextPaint;
    //   3274: astore 86
    //   3276: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3279: dup
    //   3280: aload 12
    //   3282: iconst_0
    //   3283: iconst_1
    //   3284: anewarray 5776	java/lang/Class
    //   3287: dup
    //   3288: iconst_0
    //   3289: ldc_w 2530
    //   3292: aastore
    //   3293: aload 86
    //   3295: aconst_null
    //   3296: aconst_null
    //   3297: ldc_w 6062
    //   3300: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   3303: astore 86
    //   3305: aload_0
    //   3306: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   3309: astore 87
    //   3311: getstatic 6065	org/telegram/ui/ActionBar/Theme:chat_gamePaint	Landroid/text/TextPaint;
    //   3314: astore 12
    //   3316: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3319: dup
    //   3320: aload 87
    //   3322: iconst_0
    //   3323: iconst_1
    //   3324: anewarray 5776	java/lang/Class
    //   3327: dup
    //   3328: iconst_0
    //   3329: ldc_w 2530
    //   3332: aastore
    //   3333: aload 12
    //   3335: aconst_null
    //   3336: aconst_null
    //   3337: ldc_w 6067
    //   3340: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   3343: astore 88
    //   3345: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3348: dup
    //   3349: aload_0
    //   3350: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   3353: iconst_0
    //   3354: iconst_1
    //   3355: anewarray 5776	java/lang/Class
    //   3358: dup
    //   3359: iconst_0
    //   3360: ldc_w 2530
    //   3363: aastore
    //   3364: aconst_null
    //   3365: aconst_null
    //   3366: aconst_null
    //   3367: ldc_w 6069
    //   3370: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   3373: astore 89
    //   3375: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3378: dup
    //   3379: aload_0
    //   3380: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   3383: iconst_0
    //   3384: iconst_1
    //   3385: anewarray 5776	java/lang/Class
    //   3388: dup
    //   3389: iconst_0
    //   3390: ldc_w 2530
    //   3393: aastore
    //   3394: aconst_null
    //   3395: aconst_null
    //   3396: aconst_null
    //   3397: ldc_w 6071
    //   3400: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   3403: astore 90
    //   3405: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3408: dup
    //   3409: aload_0
    //   3410: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   3413: iconst_0
    //   3414: iconst_1
    //   3415: anewarray 5776	java/lang/Class
    //   3418: dup
    //   3419: iconst_0
    //   3420: ldc_w 2530
    //   3423: aastore
    //   3424: aconst_null
    //   3425: aconst_null
    //   3426: aconst_null
    //   3427: ldc_w 6073
    //   3430: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   3433: astore 87
    //   3435: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3438: dup
    //   3439: aload_0
    //   3440: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   3443: iconst_0
    //   3444: iconst_1
    //   3445: anewarray 5776	java/lang/Class
    //   3448: dup
    //   3449: iconst_0
    //   3450: ldc_w 2530
    //   3453: aastore
    //   3454: aconst_null
    //   3455: aconst_null
    //   3456: aconst_null
    //   3457: ldc_w 6075
    //   3460: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   3463: astore 91
    //   3465: aload_0
    //   3466: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   3469: astore 92
    //   3471: getstatic 6078	org/telegram/ui/ActionBar/Theme:chat_deleteProgressPaint	Landroid/graphics/Paint;
    //   3474: astore 12
    //   3476: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3479: dup
    //   3480: aload 92
    //   3482: iconst_0
    //   3483: iconst_1
    //   3484: anewarray 5776	java/lang/Class
    //   3487: dup
    //   3488: iconst_0
    //   3489: ldc_w 2530
    //   3492: aastore
    //   3493: aload 12
    //   3495: aconst_null
    //   3496: aconst_null
    //   3497: ldc_w 6080
    //   3500: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   3503: astore 93
    //   3505: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3508: dup
    //   3509: aload_0
    //   3510: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   3513: iconst_0
    //   3514: iconst_1
    //   3515: anewarray 5776	java/lang/Class
    //   3518: dup
    //   3519: iconst_0
    //   3520: ldc_w 2530
    //   3523: aastore
    //   3524: aconst_null
    //   3525: aconst_null
    //   3526: aconst_null
    //   3527: ldc_w 6082
    //   3530: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   3533: astore 92
    //   3535: aload_0
    //   3536: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   3539: astore 12
    //   3541: getstatic 6085	org/telegram/ui/ActionBar/Theme:chat_botButtonPaint	Landroid/text/TextPaint;
    //   3544: astore 94
    //   3546: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3549: dup
    //   3550: aload 12
    //   3552: iconst_0
    //   3553: iconst_1
    //   3554: anewarray 5776	java/lang/Class
    //   3557: dup
    //   3558: iconst_0
    //   3559: ldc_w 2530
    //   3562: aastore
    //   3563: aload 94
    //   3565: aconst_null
    //   3566: aconst_null
    //   3567: ldc_w 6087
    //   3570: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   3573: astore 94
    //   3575: aload_0
    //   3576: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   3579: astore 95
    //   3581: getstatic 6090	org/telegram/ui/ActionBar/Theme:chat_botProgressPaint	Landroid/graphics/Paint;
    //   3584: astore 12
    //   3586: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3589: dup
    //   3590: aload 95
    //   3592: iconst_0
    //   3593: iconst_1
    //   3594: anewarray 5776	java/lang/Class
    //   3597: dup
    //   3598: iconst_0
    //   3599: ldc_w 2530
    //   3602: aastore
    //   3603: aload 12
    //   3605: aconst_null
    //   3606: aconst_null
    //   3607: ldc_w 6092
    //   3610: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   3613: astore 96
    //   3615: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3618: dup
    //   3619: aload_0
    //   3620: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   3623: iconst_0
    //   3624: iconst_1
    //   3625: anewarray 5776	java/lang/Class
    //   3628: dup
    //   3629: iconst_0
    //   3630: ldc_w 2530
    //   3633: aastore
    //   3634: aconst_null
    //   3635: aconst_null
    //   3636: aconst_null
    //   3637: ldc_w 6094
    //   3640: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   3643: astore 97
    //   3645: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3648: dup
    //   3649: aload_0
    //   3650: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   3653: iconst_0
    //   3654: iconst_1
    //   3655: anewarray 5776	java/lang/Class
    //   3658: dup
    //   3659: iconst_0
    //   3660: ldc_w 2530
    //   3663: aastore
    //   3664: aconst_null
    //   3665: aconst_null
    //   3666: aconst_null
    //   3667: ldc_w 6096
    //   3670: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   3673: astore 98
    //   3675: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3678: dup
    //   3679: aload_0
    //   3680: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   3683: iconst_0
    //   3684: iconst_1
    //   3685: anewarray 5776	java/lang/Class
    //   3688: dup
    //   3689: iconst_0
    //   3690: ldc_w 2530
    //   3693: aastore
    //   3694: aconst_null
    //   3695: aconst_null
    //   3696: aconst_null
    //   3697: ldc_w 6098
    //   3700: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   3703: astore 99
    //   3705: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3708: dup
    //   3709: aload_0
    //   3710: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   3713: iconst_0
    //   3714: iconst_1
    //   3715: anewarray 5776	java/lang/Class
    //   3718: dup
    //   3719: iconst_0
    //   3720: ldc_w 2530
    //   3723: aastore
    //   3724: aconst_null
    //   3725: aconst_null
    //   3726: aconst_null
    //   3727: ldc_w 6100
    //   3730: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   3733: astore 100
    //   3735: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3738: dup
    //   3739: aload_0
    //   3740: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   3743: iconst_0
    //   3744: iconst_1
    //   3745: anewarray 5776	java/lang/Class
    //   3748: dup
    //   3749: iconst_0
    //   3750: ldc_w 2530
    //   3753: aastore
    //   3754: aconst_null
    //   3755: aconst_null
    //   3756: aconst_null
    //   3757: ldc_w 6102
    //   3760: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   3763: astore 101
    //   3765: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3768: dup
    //   3769: aload_0
    //   3770: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   3773: iconst_0
    //   3774: iconst_1
    //   3775: anewarray 5776	java/lang/Class
    //   3778: dup
    //   3779: iconst_0
    //   3780: ldc_w 2530
    //   3783: aastore
    //   3784: aconst_null
    //   3785: aconst_null
    //   3786: aconst_null
    //   3787: ldc_w 6104
    //   3790: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   3793: astore 102
    //   3795: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3798: dup
    //   3799: aload_0
    //   3800: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   3803: iconst_0
    //   3804: iconst_1
    //   3805: anewarray 5776	java/lang/Class
    //   3808: dup
    //   3809: iconst_0
    //   3810: ldc_w 2530
    //   3813: aastore
    //   3814: aconst_null
    //   3815: aconst_null
    //   3816: aconst_null
    //   3817: ldc_w 6106
    //   3820: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   3823: astore 103
    //   3825: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3828: dup
    //   3829: aload_0
    //   3830: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   3833: iconst_0
    //   3834: iconst_1
    //   3835: anewarray 5776	java/lang/Class
    //   3838: dup
    //   3839: iconst_0
    //   3840: ldc_w 2530
    //   3843: aastore
    //   3844: aconst_null
    //   3845: aconst_null
    //   3846: aconst_null
    //   3847: ldc_w 6108
    //   3850: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   3853: astore 104
    //   3855: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3858: dup
    //   3859: aload_0
    //   3860: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   3863: iconst_0
    //   3864: iconst_1
    //   3865: anewarray 5776	java/lang/Class
    //   3868: dup
    //   3869: iconst_0
    //   3870: ldc_w 2530
    //   3873: aastore
    //   3874: aconst_null
    //   3875: aconst_null
    //   3876: aconst_null
    //   3877: ldc_w 6110
    //   3880: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   3883: astore 105
    //   3885: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3888: dup
    //   3889: aload_0
    //   3890: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   3893: iconst_0
    //   3894: iconst_1
    //   3895: anewarray 5776	java/lang/Class
    //   3898: dup
    //   3899: iconst_0
    //   3900: ldc_w 2530
    //   3903: aastore
    //   3904: aconst_null
    //   3905: aconst_null
    //   3906: aconst_null
    //   3907: ldc_w 6112
    //   3910: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   3913: astore 106
    //   3915: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3918: dup
    //   3919: aload_0
    //   3920: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   3923: iconst_0
    //   3924: iconst_1
    //   3925: anewarray 5776	java/lang/Class
    //   3928: dup
    //   3929: iconst_0
    //   3930: ldc_w 2530
    //   3933: aastore
    //   3934: aconst_null
    //   3935: aconst_null
    //   3936: aconst_null
    //   3937: ldc_w 6114
    //   3940: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   3943: astore 107
    //   3945: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3948: dup
    //   3949: aload_0
    //   3950: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   3953: iconst_0
    //   3954: iconst_1
    //   3955: anewarray 5776	java/lang/Class
    //   3958: dup
    //   3959: iconst_0
    //   3960: ldc_w 2530
    //   3963: aastore
    //   3964: aconst_null
    //   3965: aconst_null
    //   3966: aconst_null
    //   3967: ldc_w 6116
    //   3970: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   3973: astore 108
    //   3975: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3978: dup
    //   3979: aload_0
    //   3980: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   3983: iconst_0
    //   3984: iconst_1
    //   3985: anewarray 5776	java/lang/Class
    //   3988: dup
    //   3989: iconst_0
    //   3990: ldc_w 2530
    //   3993: aastore
    //   3994: aconst_null
    //   3995: aconst_null
    //   3996: aconst_null
    //   3997: ldc_w 6118
    //   4000: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4003: astore 109
    //   4005: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4008: dup
    //   4009: aload_0
    //   4010: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4013: iconst_0
    //   4014: iconst_1
    //   4015: anewarray 5776	java/lang/Class
    //   4018: dup
    //   4019: iconst_0
    //   4020: ldc_w 2530
    //   4023: aastore
    //   4024: aconst_null
    //   4025: aconst_null
    //   4026: aconst_null
    //   4027: ldc_w 6120
    //   4030: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4033: astore 110
    //   4035: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4038: dup
    //   4039: aload_0
    //   4040: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4043: iconst_0
    //   4044: iconst_1
    //   4045: anewarray 5776	java/lang/Class
    //   4048: dup
    //   4049: iconst_0
    //   4050: ldc_w 2530
    //   4053: aastore
    //   4054: aconst_null
    //   4055: aconst_null
    //   4056: aconst_null
    //   4057: ldc_w 6122
    //   4060: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4063: astore 111
    //   4065: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4068: dup
    //   4069: aload_0
    //   4070: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4073: iconst_0
    //   4074: iconst_1
    //   4075: anewarray 5776	java/lang/Class
    //   4078: dup
    //   4079: iconst_0
    //   4080: ldc_w 2530
    //   4083: aastore
    //   4084: aconst_null
    //   4085: aconst_null
    //   4086: aconst_null
    //   4087: ldc_w 6124
    //   4090: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4093: astore 112
    //   4095: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4098: dup
    //   4099: aload_0
    //   4100: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4103: iconst_0
    //   4104: iconst_1
    //   4105: anewarray 5776	java/lang/Class
    //   4108: dup
    //   4109: iconst_0
    //   4110: ldc_w 2530
    //   4113: aastore
    //   4114: aconst_null
    //   4115: aconst_null
    //   4116: aconst_null
    //   4117: ldc_w 6126
    //   4120: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4123: astore 113
    //   4125: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4128: dup
    //   4129: aload_0
    //   4130: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4133: iconst_0
    //   4134: iconst_1
    //   4135: anewarray 5776	java/lang/Class
    //   4138: dup
    //   4139: iconst_0
    //   4140: ldc_w 2530
    //   4143: aastore
    //   4144: aconst_null
    //   4145: aconst_null
    //   4146: aconst_null
    //   4147: ldc_w 6128
    //   4150: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4153: astore 114
    //   4155: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4158: dup
    //   4159: aload_0
    //   4160: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4163: iconst_0
    //   4164: iconst_1
    //   4165: anewarray 5776	java/lang/Class
    //   4168: dup
    //   4169: iconst_0
    //   4170: ldc_w 2530
    //   4173: aastore
    //   4174: aconst_null
    //   4175: aconst_null
    //   4176: aconst_null
    //   4177: ldc_w 6130
    //   4180: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4183: astore 115
    //   4185: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4188: dup
    //   4189: aload_0
    //   4190: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4193: iconst_0
    //   4194: iconst_1
    //   4195: anewarray 5776	java/lang/Class
    //   4198: dup
    //   4199: iconst_0
    //   4200: ldc_w 2530
    //   4203: aastore
    //   4204: aconst_null
    //   4205: aconst_null
    //   4206: aconst_null
    //   4207: ldc_w 6132
    //   4210: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4213: astore 116
    //   4215: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4218: dup
    //   4219: aload_0
    //   4220: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4223: iconst_0
    //   4224: iconst_1
    //   4225: anewarray 5776	java/lang/Class
    //   4228: dup
    //   4229: iconst_0
    //   4230: ldc_w 2530
    //   4233: aastore
    //   4234: aconst_null
    //   4235: aconst_null
    //   4236: aconst_null
    //   4237: ldc_w 6134
    //   4240: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4243: astore 117
    //   4245: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4248: dup
    //   4249: aload_0
    //   4250: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4253: iconst_0
    //   4254: iconst_1
    //   4255: anewarray 5776	java/lang/Class
    //   4258: dup
    //   4259: iconst_0
    //   4260: ldc_w 2530
    //   4263: aastore
    //   4264: aconst_null
    //   4265: aconst_null
    //   4266: aconst_null
    //   4267: ldc_w 6136
    //   4270: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4273: astore 118
    //   4275: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4278: dup
    //   4279: aload_0
    //   4280: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4283: iconst_0
    //   4284: iconst_1
    //   4285: anewarray 5776	java/lang/Class
    //   4288: dup
    //   4289: iconst_0
    //   4290: ldc_w 2530
    //   4293: aastore
    //   4294: aconst_null
    //   4295: aconst_null
    //   4296: aconst_null
    //   4297: ldc_w 6138
    //   4300: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4303: astore 119
    //   4305: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4308: dup
    //   4309: aload_0
    //   4310: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4313: iconst_0
    //   4314: iconst_1
    //   4315: anewarray 5776	java/lang/Class
    //   4318: dup
    //   4319: iconst_0
    //   4320: ldc_w 2530
    //   4323: aastore
    //   4324: aconst_null
    //   4325: aconst_null
    //   4326: aconst_null
    //   4327: ldc_w 6140
    //   4330: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4333: astore 120
    //   4335: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4338: dup
    //   4339: aload_0
    //   4340: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4343: iconst_0
    //   4344: iconst_1
    //   4345: anewarray 5776	java/lang/Class
    //   4348: dup
    //   4349: iconst_0
    //   4350: ldc_w 2530
    //   4353: aastore
    //   4354: aconst_null
    //   4355: aconst_null
    //   4356: aconst_null
    //   4357: ldc_w 6142
    //   4360: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4363: astore 121
    //   4365: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4368: dup
    //   4369: aload_0
    //   4370: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4373: iconst_0
    //   4374: iconst_1
    //   4375: anewarray 5776	java/lang/Class
    //   4378: dup
    //   4379: iconst_0
    //   4380: ldc_w 2530
    //   4383: aastore
    //   4384: aconst_null
    //   4385: aconst_null
    //   4386: aconst_null
    //   4387: ldc_w 6144
    //   4390: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4393: astore 122
    //   4395: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4398: dup
    //   4399: aload_0
    //   4400: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4403: iconst_0
    //   4404: iconst_1
    //   4405: anewarray 5776	java/lang/Class
    //   4408: dup
    //   4409: iconst_0
    //   4410: ldc_w 2530
    //   4413: aastore
    //   4414: aconst_null
    //   4415: aconst_null
    //   4416: aconst_null
    //   4417: ldc_w 6146
    //   4420: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4423: astore 123
    //   4425: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4428: dup
    //   4429: aload_0
    //   4430: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4433: iconst_0
    //   4434: iconst_1
    //   4435: anewarray 5776	java/lang/Class
    //   4438: dup
    //   4439: iconst_0
    //   4440: ldc_w 2530
    //   4443: aastore
    //   4444: aconst_null
    //   4445: aconst_null
    //   4446: aconst_null
    //   4447: ldc_w 6148
    //   4450: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4453: astore 124
    //   4455: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4458: dup
    //   4459: aload_0
    //   4460: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4463: iconst_0
    //   4464: iconst_1
    //   4465: anewarray 5776	java/lang/Class
    //   4468: dup
    //   4469: iconst_0
    //   4470: ldc_w 2530
    //   4473: aastore
    //   4474: aconst_null
    //   4475: aconst_null
    //   4476: aconst_null
    //   4477: ldc_w 6150
    //   4480: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4483: astore 125
    //   4485: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4488: dup
    //   4489: aload_0
    //   4490: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4493: iconst_0
    //   4494: iconst_1
    //   4495: anewarray 5776	java/lang/Class
    //   4498: dup
    //   4499: iconst_0
    //   4500: ldc_w 2530
    //   4503: aastore
    //   4504: aconst_null
    //   4505: aconst_null
    //   4506: aconst_null
    //   4507: ldc_w 6152
    //   4510: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4513: astore 126
    //   4515: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4518: dup
    //   4519: aload_0
    //   4520: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4523: iconst_0
    //   4524: iconst_1
    //   4525: anewarray 5776	java/lang/Class
    //   4528: dup
    //   4529: iconst_0
    //   4530: ldc_w 2530
    //   4533: aastore
    //   4534: aconst_null
    //   4535: aconst_null
    //   4536: aconst_null
    //   4537: ldc_w 6154
    //   4540: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4543: astore 127
    //   4545: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4548: dup
    //   4549: aload_0
    //   4550: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4553: iconst_0
    //   4554: iconst_1
    //   4555: anewarray 5776	java/lang/Class
    //   4558: dup
    //   4559: iconst_0
    //   4560: ldc_w 2530
    //   4563: aastore
    //   4564: aconst_null
    //   4565: aconst_null
    //   4566: aconst_null
    //   4567: ldc_w 6156
    //   4570: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4573: astore -128
    //   4575: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4578: dup
    //   4579: aload_0
    //   4580: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4583: iconst_0
    //   4584: iconst_1
    //   4585: anewarray 5776	java/lang/Class
    //   4588: dup
    //   4589: iconst_0
    //   4590: ldc_w 2530
    //   4593: aastore
    //   4594: aconst_null
    //   4595: aconst_null
    //   4596: aconst_null
    //   4597: ldc_w 6158
    //   4600: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4603: astore -127
    //   4605: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4608: dup
    //   4609: aload_0
    //   4610: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4613: iconst_0
    //   4614: iconst_1
    //   4615: anewarray 5776	java/lang/Class
    //   4618: dup
    //   4619: iconst_0
    //   4620: ldc_w 2530
    //   4623: aastore
    //   4624: aconst_null
    //   4625: aconst_null
    //   4626: aconst_null
    //   4627: ldc_w 6160
    //   4630: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4633: astore -126
    //   4635: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4638: dup
    //   4639: aload_0
    //   4640: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4643: iconst_0
    //   4644: iconst_1
    //   4645: anewarray 5776	java/lang/Class
    //   4648: dup
    //   4649: iconst_0
    //   4650: ldc_w 2530
    //   4653: aastore
    //   4654: aconst_null
    //   4655: aconst_null
    //   4656: aconst_null
    //   4657: ldc_w 6162
    //   4660: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4663: astore 95
    //   4665: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4668: dup
    //   4669: aload_0
    //   4670: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4673: iconst_0
    //   4674: iconst_1
    //   4675: anewarray 5776	java/lang/Class
    //   4678: dup
    //   4679: iconst_0
    //   4680: ldc_w 2530
    //   4683: aastore
    //   4684: aconst_null
    //   4685: aconst_null
    //   4686: aconst_null
    //   4687: ldc_w 6164
    //   4690: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4693: astore -125
    //   4695: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4698: dup
    //   4699: aload_0
    //   4700: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4703: iconst_0
    //   4704: iconst_1
    //   4705: anewarray 5776	java/lang/Class
    //   4708: dup
    //   4709: iconst_0
    //   4710: ldc_w 2530
    //   4713: aastore
    //   4714: aconst_null
    //   4715: aconst_null
    //   4716: aconst_null
    //   4717: ldc_w 6166
    //   4720: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4723: astore -124
    //   4725: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4728: dup
    //   4729: aload_0
    //   4730: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4733: iconst_0
    //   4734: iconst_1
    //   4735: anewarray 5776	java/lang/Class
    //   4738: dup
    //   4739: iconst_0
    //   4740: ldc_w 2530
    //   4743: aastore
    //   4744: aconst_null
    //   4745: aconst_null
    //   4746: aconst_null
    //   4747: ldc_w 6168
    //   4750: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4753: astore -123
    //   4755: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4758: dup
    //   4759: aload_0
    //   4760: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4763: iconst_0
    //   4764: iconst_1
    //   4765: anewarray 5776	java/lang/Class
    //   4768: dup
    //   4769: iconst_0
    //   4770: ldc_w 2530
    //   4773: aastore
    //   4774: aconst_null
    //   4775: aconst_null
    //   4776: aconst_null
    //   4777: ldc_w 6170
    //   4780: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4783: astore -122
    //   4785: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4788: dup
    //   4789: aload_0
    //   4790: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4793: iconst_0
    //   4794: iconst_1
    //   4795: anewarray 5776	java/lang/Class
    //   4798: dup
    //   4799: iconst_0
    //   4800: ldc_w 2530
    //   4803: aastore
    //   4804: aconst_null
    //   4805: aconst_null
    //   4806: aconst_null
    //   4807: ldc_w 6172
    //   4810: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4813: astore -121
    //   4815: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4818: dup
    //   4819: aload_0
    //   4820: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4823: iconst_0
    //   4824: iconst_1
    //   4825: anewarray 5776	java/lang/Class
    //   4828: dup
    //   4829: iconst_0
    //   4830: ldc_w 2530
    //   4833: aastore
    //   4834: aconst_null
    //   4835: aconst_null
    //   4836: aconst_null
    //   4837: ldc_w 6174
    //   4840: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4843: astore -120
    //   4845: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4848: dup
    //   4849: aload_0
    //   4850: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4853: iconst_0
    //   4854: iconst_1
    //   4855: anewarray 5776	java/lang/Class
    //   4858: dup
    //   4859: iconst_0
    //   4860: ldc_w 2530
    //   4863: aastore
    //   4864: aconst_null
    //   4865: aconst_null
    //   4866: aconst_null
    //   4867: ldc_w 6176
    //   4870: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4873: astore -119
    //   4875: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4878: dup
    //   4879: aload_0
    //   4880: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4883: iconst_0
    //   4884: iconst_1
    //   4885: anewarray 5776	java/lang/Class
    //   4888: dup
    //   4889: iconst_0
    //   4890: ldc_w 2530
    //   4893: aastore
    //   4894: aconst_null
    //   4895: aconst_null
    //   4896: aconst_null
    //   4897: ldc_w 6178
    //   4900: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4903: astore -118
    //   4905: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4908: dup
    //   4909: aload_0
    //   4910: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4913: iconst_0
    //   4914: iconst_1
    //   4915: anewarray 5776	java/lang/Class
    //   4918: dup
    //   4919: iconst_0
    //   4920: ldc_w 2530
    //   4923: aastore
    //   4924: aconst_null
    //   4925: aconst_null
    //   4926: aconst_null
    //   4927: ldc_w 6180
    //   4930: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4933: astore -117
    //   4935: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4938: dup
    //   4939: aload_0
    //   4940: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4943: iconst_0
    //   4944: iconst_1
    //   4945: anewarray 5776	java/lang/Class
    //   4948: dup
    //   4949: iconst_0
    //   4950: ldc_w 2530
    //   4953: aastore
    //   4954: aconst_null
    //   4955: aconst_null
    //   4956: aconst_null
    //   4957: ldc_w 6182
    //   4960: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4963: astore -116
    //   4965: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4968: dup
    //   4969: aload_0
    //   4970: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4973: iconst_0
    //   4974: iconst_1
    //   4975: anewarray 5776	java/lang/Class
    //   4978: dup
    //   4979: iconst_0
    //   4980: ldc_w 2530
    //   4983: aastore
    //   4984: aconst_null
    //   4985: aconst_null
    //   4986: aconst_null
    //   4987: ldc_w 6184
    //   4990: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4993: astore -115
    //   4995: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4998: dup
    //   4999: aload_0
    //   5000: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5003: iconst_0
    //   5004: iconst_1
    //   5005: anewarray 5776	java/lang/Class
    //   5008: dup
    //   5009: iconst_0
    //   5010: ldc_w 2530
    //   5013: aastore
    //   5014: aconst_null
    //   5015: aconst_null
    //   5016: aconst_null
    //   5017: ldc_w 6186
    //   5020: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5023: astore -114
    //   5025: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5028: dup
    //   5029: aload_0
    //   5030: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5033: iconst_0
    //   5034: iconst_1
    //   5035: anewarray 5776	java/lang/Class
    //   5038: dup
    //   5039: iconst_0
    //   5040: ldc_w 2530
    //   5043: aastore
    //   5044: aconst_null
    //   5045: aconst_null
    //   5046: aconst_null
    //   5047: ldc_w 6188
    //   5050: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5053: astore -113
    //   5055: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5058: dup
    //   5059: aload_0
    //   5060: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5063: iconst_0
    //   5064: iconst_1
    //   5065: anewarray 5776	java/lang/Class
    //   5068: dup
    //   5069: iconst_0
    //   5070: ldc_w 2530
    //   5073: aastore
    //   5074: aconst_null
    //   5075: aconst_null
    //   5076: aconst_null
    //   5077: ldc_w 6190
    //   5080: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5083: astore -112
    //   5085: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5088: dup
    //   5089: aload_0
    //   5090: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5093: iconst_0
    //   5094: iconst_1
    //   5095: anewarray 5776	java/lang/Class
    //   5098: dup
    //   5099: iconst_0
    //   5100: ldc_w 2530
    //   5103: aastore
    //   5104: aconst_null
    //   5105: aconst_null
    //   5106: aconst_null
    //   5107: ldc_w 6192
    //   5110: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5113: astore -111
    //   5115: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5118: dup
    //   5119: aload_0
    //   5120: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5123: iconst_0
    //   5124: iconst_1
    //   5125: anewarray 5776	java/lang/Class
    //   5128: dup
    //   5129: iconst_0
    //   5130: ldc_w 2530
    //   5133: aastore
    //   5134: aconst_null
    //   5135: aconst_null
    //   5136: aconst_null
    //   5137: ldc_w 6194
    //   5140: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5143: astore -110
    //   5145: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5148: dup
    //   5149: aload_0
    //   5150: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5153: iconst_0
    //   5154: iconst_1
    //   5155: anewarray 5776	java/lang/Class
    //   5158: dup
    //   5159: iconst_0
    //   5160: ldc_w 2530
    //   5163: aastore
    //   5164: aconst_null
    //   5165: aconst_null
    //   5166: aconst_null
    //   5167: ldc_w 6196
    //   5170: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5173: astore -109
    //   5175: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5178: dup
    //   5179: aload_0
    //   5180: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5183: iconst_0
    //   5184: iconst_1
    //   5185: anewarray 5776	java/lang/Class
    //   5188: dup
    //   5189: iconst_0
    //   5190: ldc_w 2530
    //   5193: aastore
    //   5194: aconst_null
    //   5195: aconst_null
    //   5196: aconst_null
    //   5197: ldc_w 6198
    //   5200: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5203: astore -108
    //   5205: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5208: dup
    //   5209: aload_0
    //   5210: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5213: iconst_0
    //   5214: iconst_1
    //   5215: anewarray 5776	java/lang/Class
    //   5218: dup
    //   5219: iconst_0
    //   5220: ldc_w 2530
    //   5223: aastore
    //   5224: aconst_null
    //   5225: aconst_null
    //   5226: aconst_null
    //   5227: ldc_w 6200
    //   5230: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5233: astore -107
    //   5235: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5238: dup
    //   5239: aload_0
    //   5240: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5243: iconst_0
    //   5244: iconst_1
    //   5245: anewarray 5776	java/lang/Class
    //   5248: dup
    //   5249: iconst_0
    //   5250: ldc_w 2530
    //   5253: aastore
    //   5254: aconst_null
    //   5255: aconst_null
    //   5256: aconst_null
    //   5257: ldc_w 6202
    //   5260: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5263: astore -106
    //   5265: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5268: dup
    //   5269: aload_0
    //   5270: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5273: iconst_0
    //   5274: iconst_1
    //   5275: anewarray 5776	java/lang/Class
    //   5278: dup
    //   5279: iconst_0
    //   5280: ldc_w 2530
    //   5283: aastore
    //   5284: aconst_null
    //   5285: aconst_null
    //   5286: aconst_null
    //   5287: ldc_w 6204
    //   5290: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5293: astore -105
    //   5295: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5298: dup
    //   5299: aload_0
    //   5300: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5303: iconst_0
    //   5304: iconst_1
    //   5305: anewarray 5776	java/lang/Class
    //   5308: dup
    //   5309: iconst_0
    //   5310: ldc_w 2530
    //   5313: aastore
    //   5314: aconst_null
    //   5315: aconst_null
    //   5316: aconst_null
    //   5317: ldc_w 6206
    //   5320: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5323: astore -104
    //   5325: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5328: dup
    //   5329: aload_0
    //   5330: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5333: iconst_0
    //   5334: iconst_1
    //   5335: anewarray 5776	java/lang/Class
    //   5338: dup
    //   5339: iconst_0
    //   5340: ldc_w 2530
    //   5343: aastore
    //   5344: aconst_null
    //   5345: aconst_null
    //   5346: aconst_null
    //   5347: ldc_w 6208
    //   5350: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5353: astore -103
    //   5355: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5358: dup
    //   5359: aload_0
    //   5360: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5363: iconst_0
    //   5364: iconst_1
    //   5365: anewarray 5776	java/lang/Class
    //   5368: dup
    //   5369: iconst_0
    //   5370: ldc_w 2530
    //   5373: aastore
    //   5374: aconst_null
    //   5375: aconst_null
    //   5376: aconst_null
    //   5377: ldc_w 6210
    //   5380: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5383: astore -102
    //   5385: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5388: dup
    //   5389: aload_0
    //   5390: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5393: iconst_0
    //   5394: iconst_1
    //   5395: anewarray 5776	java/lang/Class
    //   5398: dup
    //   5399: iconst_0
    //   5400: ldc_w 2530
    //   5403: aastore
    //   5404: aconst_null
    //   5405: aconst_null
    //   5406: aconst_null
    //   5407: ldc_w 6212
    //   5410: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5413: astore -101
    //   5415: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5418: dup
    //   5419: aload_0
    //   5420: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5423: iconst_0
    //   5424: iconst_1
    //   5425: anewarray 5776	java/lang/Class
    //   5428: dup
    //   5429: iconst_0
    //   5430: ldc_w 2530
    //   5433: aastore
    //   5434: aconst_null
    //   5435: aconst_null
    //   5436: aconst_null
    //   5437: ldc_w 6214
    //   5440: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5443: astore -100
    //   5445: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5448: dup
    //   5449: aload_0
    //   5450: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5453: iconst_0
    //   5454: iconst_1
    //   5455: anewarray 5776	java/lang/Class
    //   5458: dup
    //   5459: iconst_0
    //   5460: ldc_w 2530
    //   5463: aastore
    //   5464: aconst_null
    //   5465: aconst_null
    //   5466: aconst_null
    //   5467: ldc_w 6216
    //   5470: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5473: astore -99
    //   5475: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5478: dup
    //   5479: aload_0
    //   5480: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5483: iconst_0
    //   5484: iconst_1
    //   5485: anewarray 5776	java/lang/Class
    //   5488: dup
    //   5489: iconst_0
    //   5490: ldc_w 2530
    //   5493: aastore
    //   5494: aconst_null
    //   5495: aconst_null
    //   5496: aconst_null
    //   5497: ldc_w 6218
    //   5500: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5503: astore -98
    //   5505: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5508: dup
    //   5509: aload_0
    //   5510: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5513: iconst_0
    //   5514: iconst_1
    //   5515: anewarray 5776	java/lang/Class
    //   5518: dup
    //   5519: iconst_0
    //   5520: ldc_w 2530
    //   5523: aastore
    //   5524: aconst_null
    //   5525: aconst_null
    //   5526: aconst_null
    //   5527: ldc_w 6220
    //   5530: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5533: astore -97
    //   5535: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5538: dup
    //   5539: aload_0
    //   5540: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5543: iconst_0
    //   5544: iconst_1
    //   5545: anewarray 5776	java/lang/Class
    //   5548: dup
    //   5549: iconst_0
    //   5550: ldc_w 2530
    //   5553: aastore
    //   5554: aconst_null
    //   5555: aconst_null
    //   5556: aconst_null
    //   5557: ldc_w 6222
    //   5560: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5563: astore -96
    //   5565: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5568: dup
    //   5569: aload_0
    //   5570: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5573: iconst_0
    //   5574: iconst_1
    //   5575: anewarray 5776	java/lang/Class
    //   5578: dup
    //   5579: iconst_0
    //   5580: ldc_w 2530
    //   5583: aastore
    //   5584: aconst_null
    //   5585: aconst_null
    //   5586: aconst_null
    //   5587: ldc_w 6224
    //   5590: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5593: astore -95
    //   5595: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5598: dup
    //   5599: aload_0
    //   5600: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5603: iconst_0
    //   5604: iconst_1
    //   5605: anewarray 5776	java/lang/Class
    //   5608: dup
    //   5609: iconst_0
    //   5610: ldc_w 2530
    //   5613: aastore
    //   5614: aconst_null
    //   5615: aconst_null
    //   5616: aconst_null
    //   5617: ldc_w 6226
    //   5620: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5623: astore -94
    //   5625: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5628: dup
    //   5629: aload_0
    //   5630: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5633: iconst_0
    //   5634: iconst_1
    //   5635: anewarray 5776	java/lang/Class
    //   5638: dup
    //   5639: iconst_0
    //   5640: ldc_w 2530
    //   5643: aastore
    //   5644: aconst_null
    //   5645: aconst_null
    //   5646: aconst_null
    //   5647: ldc_w 6228
    //   5650: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5653: astore -93
    //   5655: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5658: dup
    //   5659: aload_0
    //   5660: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5663: iconst_0
    //   5664: iconst_1
    //   5665: anewarray 5776	java/lang/Class
    //   5668: dup
    //   5669: iconst_0
    //   5670: ldc_w 2530
    //   5673: aastore
    //   5674: aconst_null
    //   5675: aconst_null
    //   5676: aconst_null
    //   5677: ldc_w 6230
    //   5680: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5683: astore -92
    //   5685: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5688: dup
    //   5689: aload_0
    //   5690: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5693: iconst_0
    //   5694: iconst_1
    //   5695: anewarray 5776	java/lang/Class
    //   5698: dup
    //   5699: iconst_0
    //   5700: ldc_w 2530
    //   5703: aastore
    //   5704: aconst_null
    //   5705: aconst_null
    //   5706: aconst_null
    //   5707: ldc_w 6232
    //   5710: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5713: astore -91
    //   5715: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5718: dup
    //   5719: aload_0
    //   5720: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5723: iconst_0
    //   5724: iconst_1
    //   5725: anewarray 5776	java/lang/Class
    //   5728: dup
    //   5729: iconst_0
    //   5730: ldc_w 2530
    //   5733: aastore
    //   5734: aconst_null
    //   5735: aconst_null
    //   5736: aconst_null
    //   5737: ldc_w 6234
    //   5740: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5743: astore -90
    //   5745: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5748: dup
    //   5749: aload_0
    //   5750: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5753: iconst_0
    //   5754: iconst_1
    //   5755: anewarray 5776	java/lang/Class
    //   5758: dup
    //   5759: iconst_0
    //   5760: ldc_w 2530
    //   5763: aastore
    //   5764: aconst_null
    //   5765: aconst_null
    //   5766: aconst_null
    //   5767: ldc_w 6236
    //   5770: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5773: astore -89
    //   5775: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5778: dup
    //   5779: aload_0
    //   5780: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5783: iconst_0
    //   5784: iconst_1
    //   5785: anewarray 5776	java/lang/Class
    //   5788: dup
    //   5789: iconst_0
    //   5790: ldc_w 2530
    //   5793: aastore
    //   5794: aconst_null
    //   5795: aconst_null
    //   5796: aconst_null
    //   5797: ldc_w 6238
    //   5800: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5803: astore -88
    //   5805: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5808: dup
    //   5809: aload_0
    //   5810: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5813: iconst_0
    //   5814: iconst_1
    //   5815: anewarray 5776	java/lang/Class
    //   5818: dup
    //   5819: iconst_0
    //   5820: ldc_w 2530
    //   5823: aastore
    //   5824: aconst_null
    //   5825: aconst_null
    //   5826: aconst_null
    //   5827: ldc_w 6240
    //   5830: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5833: astore -87
    //   5835: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5838: dup
    //   5839: aload_0
    //   5840: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5843: iconst_0
    //   5844: iconst_1
    //   5845: anewarray 5776	java/lang/Class
    //   5848: dup
    //   5849: iconst_0
    //   5850: ldc_w 2530
    //   5853: aastore
    //   5854: aconst_null
    //   5855: aconst_null
    //   5856: aconst_null
    //   5857: ldc_w 6242
    //   5860: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5863: astore -86
    //   5865: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5868: dup
    //   5869: aload_0
    //   5870: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5873: iconst_0
    //   5874: iconst_1
    //   5875: anewarray 5776	java/lang/Class
    //   5878: dup
    //   5879: iconst_0
    //   5880: ldc_w 2530
    //   5883: aastore
    //   5884: aconst_null
    //   5885: aconst_null
    //   5886: aconst_null
    //   5887: ldc_w 6244
    //   5890: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5893: astore -85
    //   5895: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5898: dup
    //   5899: aload_0
    //   5900: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5903: iconst_0
    //   5904: iconst_1
    //   5905: anewarray 5776	java/lang/Class
    //   5908: dup
    //   5909: iconst_0
    //   5910: ldc_w 2530
    //   5913: aastore
    //   5914: aconst_null
    //   5915: aconst_null
    //   5916: aconst_null
    //   5917: ldc_w 6246
    //   5920: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5923: astore -84
    //   5925: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5928: dup
    //   5929: aload_0
    //   5930: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5933: iconst_0
    //   5934: iconst_1
    //   5935: anewarray 5776	java/lang/Class
    //   5938: dup
    //   5939: iconst_0
    //   5940: ldc_w 2530
    //   5943: aastore
    //   5944: aconst_null
    //   5945: aconst_null
    //   5946: aconst_null
    //   5947: ldc_w 6248
    //   5950: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5953: astore -83
    //   5955: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5958: dup
    //   5959: aload_0
    //   5960: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5963: iconst_0
    //   5964: iconst_1
    //   5965: anewarray 5776	java/lang/Class
    //   5968: dup
    //   5969: iconst_0
    //   5970: ldc_w 2530
    //   5973: aastore
    //   5974: aconst_null
    //   5975: aconst_null
    //   5976: aconst_null
    //   5977: ldc_w 6250
    //   5980: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5983: astore -82
    //   5985: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5988: dup
    //   5989: aload_0
    //   5990: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5993: iconst_0
    //   5994: iconst_1
    //   5995: anewarray 5776	java/lang/Class
    //   5998: dup
    //   5999: iconst_0
    //   6000: ldc_w 2530
    //   6003: aastore
    //   6004: aconst_null
    //   6005: aconst_null
    //   6006: aconst_null
    //   6007: ldc_w 6252
    //   6010: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   6013: astore -81
    //   6015: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   6018: dup
    //   6019: aload_0
    //   6020: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   6023: iconst_0
    //   6024: iconst_1
    //   6025: anewarray 5776	java/lang/Class
    //   6028: dup
    //   6029: iconst_0
    //   6030: ldc_w 2530
    //   6033: aastore
    //   6034: aconst_null
    //   6035: aconst_null
    //   6036: aconst_null
    //   6037: ldc_w 6254
    //   6040: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   6043: astore -80
    //   6045: aload_0
    //   6046: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   6049: astore -79
    //   6051: getstatic 6257	org/telegram/ui/ActionBar/Theme:chat_urlPaint	Landroid/graphics/Paint;
    //   6054: astore 12
    //   6056: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   6059: dup
    //   6060: aload -79
    //   6062: iconst_0
    //   6063: iconst_1
    //   6064: anewarray 5776	java/lang/Class
    //   6067: dup
    //   6068: iconst_0
    //   6069: ldc_w 2530
    //   6072: aastore
    //   6073: aload 12
    //   6075: aconst_null
    //   6076: aconst_null
    //   6077: ldc_w 6259
    //   6080: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   6083: astore -79
    //   6085: aload_0
    //   6086: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   6089: astore 12
    //   6091: getstatic 6262	org/telegram/ui/ActionBar/Theme:chat_textSearchSelectionPaint	Landroid/graphics/Paint;
    //   6094: astore -78
    //   6096: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   6099: dup
    //   6100: aload 12
    //   6102: iconst_0
    //   6103: iconst_1
    //   6104: anewarray 5776	java/lang/Class
    //   6107: dup
    //   6108: iconst_0
    //   6109: ldc_w 2530
    //   6112: aastore
    //   6113: aload -78
    //   6115: aconst_null
    //   6116: aconst_null
    //   6117: ldc_w 6264
    //   6120: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   6123: astore -78
    //   6125: aload_0
    //   6126: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   6129: astore -77
    //   6131: getstatic 6267	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUNDFILTER	I
    //   6134: istore 49
    //   6136: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6139: iconst_0
    //   6140: aaload
    //   6141: iconst_0
    //   6142: aaload
    //   6143: astore 12
    //   6145: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6148: iconst_1
    //   6149: aaload
    //   6150: iconst_0
    //   6151: aaload
    //   6152: astore -76
    //   6154: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6157: iconst_2
    //   6158: aaload
    //   6159: iconst_0
    //   6160: aaload
    //   6161: astore -75
    //   6163: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6166: iconst_3
    //   6167: aaload
    //   6168: iconst_0
    //   6169: aaload
    //   6170: astore -74
    //   6172: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6175: iconst_4
    //   6176: aaload
    //   6177: iconst_0
    //   6178: aaload
    //   6179: astore -73
    //   6181: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   6184: dup
    //   6185: aload -77
    //   6187: iload 49
    //   6189: iconst_1
    //   6190: anewarray 5776	java/lang/Class
    //   6193: dup
    //   6194: iconst_0
    //   6195: ldc_w 2530
    //   6198: aastore
    //   6199: aconst_null
    //   6200: iconst_5
    //   6201: anewarray 4185	android/graphics/drawable/Drawable
    //   6204: dup
    //   6205: iconst_0
    //   6206: aload 12
    //   6208: aastore
    //   6209: dup
    //   6210: iconst_1
    //   6211: aload -76
    //   6213: aastore
    //   6214: dup
    //   6215: iconst_2
    //   6216: aload -75
    //   6218: aastore
    //   6219: dup
    //   6220: iconst_3
    //   6221: aload -74
    //   6223: aastore
    //   6224: dup
    //   6225: iconst_4
    //   6226: aload -73
    //   6228: aastore
    //   6229: aconst_null
    //   6230: ldc_w 6273
    //   6233: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   6236: astore -76
    //   6238: aload_0
    //   6239: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   6242: astore -72
    //   6244: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6247: iconst_0
    //   6248: aaload
    //   6249: iconst_0
    //   6250: aaload
    //   6251: astore -75
    //   6253: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6256: iconst_1
    //   6257: aaload
    //   6258: iconst_0
    //   6259: aaload
    //   6260: astore -74
    //   6262: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6265: iconst_2
    //   6266: aaload
    //   6267: iconst_0
    //   6268: aaload
    //   6269: astore -73
    //   6271: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6274: iconst_3
    //   6275: aaload
    //   6276: iconst_0
    //   6277: aaload
    //   6278: astore 12
    //   6280: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6283: iconst_4
    //   6284: aaload
    //   6285: iconst_0
    //   6286: aaload
    //   6287: astore -77
    //   6289: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   6292: dup
    //   6293: aload -72
    //   6295: iconst_0
    //   6296: iconst_1
    //   6297: anewarray 5776	java/lang/Class
    //   6300: dup
    //   6301: iconst_0
    //   6302: ldc_w 2530
    //   6305: aastore
    //   6306: aconst_null
    //   6307: iconst_5
    //   6308: anewarray 4185	android/graphics/drawable/Drawable
    //   6311: dup
    //   6312: iconst_0
    //   6313: aload -75
    //   6315: aastore
    //   6316: dup
    //   6317: iconst_1
    //   6318: aload -74
    //   6320: aastore
    //   6321: dup
    //   6322: iconst_2
    //   6323: aload -73
    //   6325: aastore
    //   6326: dup
    //   6327: iconst_3
    //   6328: aload 12
    //   6330: aastore
    //   6331: dup
    //   6332: iconst_4
    //   6333: aload -77
    //   6335: aastore
    //   6336: aconst_null
    //   6337: ldc_w 5840
    //   6340: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   6343: astore -75
    //   6345: aload_0
    //   6346: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   6349: astore -73
    //   6351: getstatic 6267	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUNDFILTER	I
    //   6354: istore 49
    //   6356: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6359: iconst_0
    //   6360: aaload
    //   6361: iconst_1
    //   6362: aaload
    //   6363: astore 12
    //   6365: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6368: iconst_1
    //   6369: aaload
    //   6370: iconst_1
    //   6371: aaload
    //   6372: astore -71
    //   6374: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6377: iconst_2
    //   6378: aaload
    //   6379: iconst_1
    //   6380: aaload
    //   6381: astore -77
    //   6383: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6386: iconst_3
    //   6387: aaload
    //   6388: iconst_1
    //   6389: aaload
    //   6390: astore -74
    //   6392: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6395: iconst_4
    //   6396: aaload
    //   6397: iconst_1
    //   6398: aaload
    //   6399: astore -72
    //   6401: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   6404: dup
    //   6405: aload -73
    //   6407: iload 49
    //   6409: iconst_1
    //   6410: anewarray 5776	java/lang/Class
    //   6413: dup
    //   6414: iconst_0
    //   6415: ldc_w 2530
    //   6418: aastore
    //   6419: aconst_null
    //   6420: iconst_5
    //   6421: anewarray 4185	android/graphics/drawable/Drawable
    //   6424: dup
    //   6425: iconst_0
    //   6426: aload 12
    //   6428: aastore
    //   6429: dup
    //   6430: iconst_1
    //   6431: aload -71
    //   6433: aastore
    //   6434: dup
    //   6435: iconst_2
    //   6436: aload -77
    //   6438: aastore
    //   6439: dup
    //   6440: iconst_3
    //   6441: aload -74
    //   6443: aastore
    //   6444: dup
    //   6445: iconst_4
    //   6446: aload -72
    //   6448: aastore
    //   6449: aconst_null
    //   6450: ldc_w 6275
    //   6453: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   6456: astore -74
    //   6458: aload_0
    //   6459: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   6462: astore 12
    //   6464: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6467: iconst_0
    //   6468: aaload
    //   6469: iconst_1
    //   6470: aaload
    //   6471: astore -72
    //   6473: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6476: iconst_1
    //   6477: aaload
    //   6478: iconst_1
    //   6479: aaload
    //   6480: astore -73
    //   6482: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6485: iconst_2
    //   6486: aaload
    //   6487: iconst_1
    //   6488: aaload
    //   6489: astore -70
    //   6491: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6494: iconst_3
    //   6495: aaload
    //   6496: iconst_1
    //   6497: aaload
    //   6498: astore -71
    //   6500: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6503: iconst_4
    //   6504: aaload
    //   6505: iconst_1
    //   6506: aaload
    //   6507: astore -77
    //   6509: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   6512: dup
    //   6513: aload 12
    //   6515: iconst_0
    //   6516: iconst_1
    //   6517: anewarray 5776	java/lang/Class
    //   6520: dup
    //   6521: iconst_0
    //   6522: ldc_w 2530
    //   6525: aastore
    //   6526: aconst_null
    //   6527: iconst_5
    //   6528: anewarray 4185	android/graphics/drawable/Drawable
    //   6531: dup
    //   6532: iconst_0
    //   6533: aload -72
    //   6535: aastore
    //   6536: dup
    //   6537: iconst_1
    //   6538: aload -73
    //   6540: aastore
    //   6541: dup
    //   6542: iconst_2
    //   6543: aload -70
    //   6545: aastore
    //   6546: dup
    //   6547: iconst_3
    //   6548: aload -71
    //   6550: aastore
    //   6551: dup
    //   6552: iconst_4
    //   6553: aload -77
    //   6555: aastore
    //   6556: aconst_null
    //   6557: ldc_w 5848
    //   6560: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   6563: astore -73
    //   6565: aload_0
    //   6566: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   6569: astore -69
    //   6571: getstatic 6267	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUNDFILTER	I
    //   6574: istore 49
    //   6576: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6579: iconst_5
    //   6580: aaload
    //   6581: iconst_0
    //   6582: aaload
    //   6583: astore 12
    //   6585: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6588: bipush 6
    //   6590: aaload
    //   6591: iconst_0
    //   6592: aaload
    //   6593: astore -77
    //   6595: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6598: bipush 7
    //   6600: aaload
    //   6601: iconst_0
    //   6602: aaload
    //   6603: astore -72
    //   6605: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6608: bipush 8
    //   6610: aaload
    //   6611: iconst_0
    //   6612: aaload
    //   6613: astore -70
    //   6615: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6618: bipush 9
    //   6620: aaload
    //   6621: iconst_0
    //   6622: aaload
    //   6623: astore -71
    //   6625: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   6628: dup
    //   6629: aload -69
    //   6631: iload 49
    //   6633: iconst_1
    //   6634: anewarray 5776	java/lang/Class
    //   6637: dup
    //   6638: iconst_0
    //   6639: ldc_w 2530
    //   6642: aastore
    //   6643: aconst_null
    //   6644: iconst_5
    //   6645: anewarray 4185	android/graphics/drawable/Drawable
    //   6648: dup
    //   6649: iconst_0
    //   6650: aload 12
    //   6652: aastore
    //   6653: dup
    //   6654: iconst_1
    //   6655: aload -77
    //   6657: aastore
    //   6658: dup
    //   6659: iconst_2
    //   6660: aload -72
    //   6662: aastore
    //   6663: dup
    //   6664: iconst_3
    //   6665: aload -70
    //   6667: aastore
    //   6668: dup
    //   6669: iconst_4
    //   6670: aload -71
    //   6672: aastore
    //   6673: aconst_null
    //   6674: ldc_w 6277
    //   6677: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   6680: astore -77
    //   6682: aload_0
    //   6683: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   6686: astore 12
    //   6688: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6691: iconst_5
    //   6692: aaload
    //   6693: iconst_0
    //   6694: aaload
    //   6695: astore -71
    //   6697: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6700: bipush 6
    //   6702: aaload
    //   6703: iconst_0
    //   6704: aaload
    //   6705: astore -72
    //   6707: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6710: bipush 7
    //   6712: aaload
    //   6713: iconst_0
    //   6714: aaload
    //   6715: astore -68
    //   6717: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6720: bipush 8
    //   6722: aaload
    //   6723: iconst_0
    //   6724: aaload
    //   6725: astore -70
    //   6727: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6730: bipush 9
    //   6732: aaload
    //   6733: iconst_0
    //   6734: aaload
    //   6735: astore -69
    //   6737: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   6740: dup
    //   6741: aload 12
    //   6743: iconst_0
    //   6744: iconst_1
    //   6745: anewarray 5776	java/lang/Class
    //   6748: dup
    //   6749: iconst_0
    //   6750: ldc_w 2530
    //   6753: aastore
    //   6754: aconst_null
    //   6755: iconst_5
    //   6756: anewarray 4185	android/graphics/drawable/Drawable
    //   6759: dup
    //   6760: iconst_0
    //   6761: aload -71
    //   6763: aastore
    //   6764: dup
    //   6765: iconst_1
    //   6766: aload -72
    //   6768: aastore
    //   6769: dup
    //   6770: iconst_2
    //   6771: aload -68
    //   6773: aastore
    //   6774: dup
    //   6775: iconst_3
    //   6776: aload -70
    //   6778: aastore
    //   6779: dup
    //   6780: iconst_4
    //   6781: aload -69
    //   6783: aastore
    //   6784: aconst_null
    //   6785: ldc_w 5816
    //   6788: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   6791: astore -72
    //   6793: aload_0
    //   6794: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   6797: astore -67
    //   6799: getstatic 6267	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUNDFILTER	I
    //   6802: istore 49
    //   6804: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6807: iconst_5
    //   6808: aaload
    //   6809: iconst_1
    //   6810: aaload
    //   6811: astore -70
    //   6813: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6816: bipush 6
    //   6818: aaload
    //   6819: iconst_1
    //   6820: aaload
    //   6821: astore -68
    //   6823: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6826: bipush 7
    //   6828: aaload
    //   6829: iconst_1
    //   6830: aaload
    //   6831: astore 12
    //   6833: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6836: bipush 8
    //   6838: aaload
    //   6839: iconst_1
    //   6840: aaload
    //   6841: astore -69
    //   6843: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6846: bipush 9
    //   6848: aaload
    //   6849: iconst_1
    //   6850: aaload
    //   6851: astore -71
    //   6853: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   6856: dup
    //   6857: aload -67
    //   6859: iload 49
    //   6861: iconst_1
    //   6862: anewarray 5776	java/lang/Class
    //   6865: dup
    //   6866: iconst_0
    //   6867: ldc_w 2530
    //   6870: aastore
    //   6871: aconst_null
    //   6872: iconst_5
    //   6873: anewarray 4185	android/graphics/drawable/Drawable
    //   6876: dup
    //   6877: iconst_0
    //   6878: aload -70
    //   6880: aastore
    //   6881: dup
    //   6882: iconst_1
    //   6883: aload -68
    //   6885: aastore
    //   6886: dup
    //   6887: iconst_2
    //   6888: aload 12
    //   6890: aastore
    //   6891: dup
    //   6892: iconst_3
    //   6893: aload -69
    //   6895: aastore
    //   6896: dup
    //   6897: iconst_4
    //   6898: aload -71
    //   6900: aastore
    //   6901: aconst_null
    //   6902: ldc_w 6279
    //   6905: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   6908: astore -71
    //   6910: aload_0
    //   6911: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   6914: astore -70
    //   6916: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6919: iconst_5
    //   6920: aaload
    //   6921: iconst_1
    //   6922: aaload
    //   6923: astore -68
    //   6925: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6928: bipush 6
    //   6930: aaload
    //   6931: iconst_1
    //   6932: aaload
    //   6933: astore -66
    //   6935: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6938: bipush 7
    //   6940: aaload
    //   6941: iconst_1
    //   6942: aaload
    //   6943: astore -69
    //   6945: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6948: bipush 8
    //   6950: aaload
    //   6951: iconst_1
    //   6952: aaload
    //   6953: astore 12
    //   6955: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6958: bipush 9
    //   6960: aaload
    //   6961: iconst_1
    //   6962: aaload
    //   6963: astore -67
    //   6965: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   6968: dup
    //   6969: aload -70
    //   6971: iconst_0
    //   6972: iconst_1
    //   6973: anewarray 5776	java/lang/Class
    //   6976: dup
    //   6977: iconst_0
    //   6978: ldc_w 2530
    //   6981: aastore
    //   6982: aconst_null
    //   6983: iconst_5
    //   6984: anewarray 4185	android/graphics/drawable/Drawable
    //   6987: dup
    //   6988: iconst_0
    //   6989: aload -68
    //   6991: aastore
    //   6992: dup
    //   6993: iconst_1
    //   6994: aload -66
    //   6996: aastore
    //   6997: dup
    //   6998: iconst_2
    //   6999: aload -69
    //   7001: aastore
    //   7002: dup
    //   7003: iconst_3
    //   7004: aload 12
    //   7006: aastore
    //   7007: dup
    //   7008: iconst_4
    //   7009: aload -67
    //   7011: aastore
    //   7012: aconst_null
    //   7013: ldc_w 5824
    //   7016: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   7019: astore -70
    //   7021: aload_0
    //   7022: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   7025: astore -68
    //   7027: getstatic 6267	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUNDFILTER	I
    //   7030: istore 49
    //   7032: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7035: iconst_0
    //   7036: aaload
    //   7037: iconst_0
    //   7038: aaload
    //   7039: astore 12
    //   7041: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7044: iconst_1
    //   7045: aaload
    //   7046: iconst_0
    //   7047: aaload
    //   7048: astore -69
    //   7050: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7053: iconst_2
    //   7054: aaload
    //   7055: iconst_0
    //   7056: aaload
    //   7057: astore -67
    //   7059: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7062: iconst_3
    //   7063: aaload
    //   7064: iconst_0
    //   7065: aaload
    //   7066: astore -66
    //   7068: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   7071: dup
    //   7072: aload -68
    //   7074: iload 49
    //   7076: iconst_1
    //   7077: anewarray 5776	java/lang/Class
    //   7080: dup
    //   7081: iconst_0
    //   7082: ldc_w 2530
    //   7085: aastore
    //   7086: aconst_null
    //   7087: iconst_4
    //   7088: anewarray 4185	android/graphics/drawable/Drawable
    //   7091: dup
    //   7092: iconst_0
    //   7093: aload 12
    //   7095: aastore
    //   7096: dup
    //   7097: iconst_1
    //   7098: aload -69
    //   7100: aastore
    //   7101: dup
    //   7102: iconst_2
    //   7103: aload -67
    //   7105: aastore
    //   7106: dup
    //   7107: iconst_3
    //   7108: aload -66
    //   7110: aastore
    //   7111: aconst_null
    //   7112: ldc_w 6284
    //   7115: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   7118: astore -69
    //   7120: aload_0
    //   7121: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   7124: astore -67
    //   7126: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7129: iconst_0
    //   7130: aaload
    //   7131: iconst_0
    //   7132: aaload
    //   7133: astore -68
    //   7135: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7138: iconst_1
    //   7139: aaload
    //   7140: iconst_0
    //   7141: aaload
    //   7142: astore -65
    //   7144: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7147: iconst_2
    //   7148: aaload
    //   7149: iconst_0
    //   7150: aaload
    //   7151: astore -66
    //   7153: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7156: iconst_3
    //   7157: aaload
    //   7158: iconst_0
    //   7159: aaload
    //   7160: astore 12
    //   7162: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   7165: dup
    //   7166: aload -67
    //   7168: iconst_0
    //   7169: iconst_1
    //   7170: anewarray 5776	java/lang/Class
    //   7173: dup
    //   7174: iconst_0
    //   7175: ldc_w 2530
    //   7178: aastore
    //   7179: aconst_null
    //   7180: iconst_4
    //   7181: anewarray 4185	android/graphics/drawable/Drawable
    //   7184: dup
    //   7185: iconst_0
    //   7186: aload -68
    //   7188: aastore
    //   7189: dup
    //   7190: iconst_1
    //   7191: aload -65
    //   7193: aastore
    //   7194: dup
    //   7195: iconst_2
    //   7196: aload -66
    //   7198: aastore
    //   7199: dup
    //   7200: iconst_3
    //   7201: aload 12
    //   7203: aastore
    //   7204: aconst_null
    //   7205: ldc_w 6286
    //   7208: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   7211: astore -68
    //   7213: aload_0
    //   7214: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   7217: astore -64
    //   7219: getstatic 6267	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUNDFILTER	I
    //   7222: istore 49
    //   7224: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7227: iconst_0
    //   7228: aaload
    //   7229: iconst_1
    //   7230: aaload
    //   7231: astore -66
    //   7233: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7236: iconst_1
    //   7237: aaload
    //   7238: iconst_1
    //   7239: aaload
    //   7240: astore 12
    //   7242: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7245: iconst_2
    //   7246: aaload
    //   7247: iconst_1
    //   7248: aaload
    //   7249: astore -65
    //   7251: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7254: iconst_3
    //   7255: aaload
    //   7256: iconst_1
    //   7257: aaload
    //   7258: astore -67
    //   7260: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   7263: dup
    //   7264: aload -64
    //   7266: iload 49
    //   7268: iconst_1
    //   7269: anewarray 5776	java/lang/Class
    //   7272: dup
    //   7273: iconst_0
    //   7274: ldc_w 2530
    //   7277: aastore
    //   7278: aconst_null
    //   7279: iconst_4
    //   7280: anewarray 4185	android/graphics/drawable/Drawable
    //   7283: dup
    //   7284: iconst_0
    //   7285: aload -66
    //   7287: aastore
    //   7288: dup
    //   7289: iconst_1
    //   7290: aload 12
    //   7292: aastore
    //   7293: dup
    //   7294: iconst_2
    //   7295: aload -65
    //   7297: aastore
    //   7298: dup
    //   7299: iconst_3
    //   7300: aload -67
    //   7302: aastore
    //   7303: aconst_null
    //   7304: ldc_w 6288
    //   7307: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   7310: astore -67
    //   7312: aload_0
    //   7313: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   7316: astore 12
    //   7318: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7321: iconst_0
    //   7322: aaload
    //   7323: iconst_1
    //   7324: aaload
    //   7325: astore -63
    //   7327: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7330: iconst_1
    //   7331: aaload
    //   7332: iconst_1
    //   7333: aaload
    //   7334: astore -66
    //   7336: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7339: iconst_2
    //   7340: aaload
    //   7341: iconst_1
    //   7342: aaload
    //   7343: astore -64
    //   7345: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7348: iconst_3
    //   7349: aaload
    //   7350: iconst_1
    //   7351: aaload
    //   7352: astore -65
    //   7354: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   7357: dup
    //   7358: aload 12
    //   7360: iconst_0
    //   7361: iconst_1
    //   7362: anewarray 5776	java/lang/Class
    //   7365: dup
    //   7366: iconst_0
    //   7367: ldc_w 2530
    //   7370: aastore
    //   7371: aconst_null
    //   7372: iconst_4
    //   7373: anewarray 4185	android/graphics/drawable/Drawable
    //   7376: dup
    //   7377: iconst_0
    //   7378: aload -63
    //   7380: aastore
    //   7381: dup
    //   7382: iconst_1
    //   7383: aload -66
    //   7385: aastore
    //   7386: dup
    //   7387: iconst_2
    //   7388: aload -64
    //   7390: aastore
    //   7391: dup
    //   7392: iconst_3
    //   7393: aload -65
    //   7395: aastore
    //   7396: aconst_null
    //   7397: ldc_w 6290
    //   7400: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   7403: astore -66
    //   7405: aload_0
    //   7406: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   7409: astore 12
    //   7411: getstatic 6267	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUNDFILTER	I
    //   7414: istore 49
    //   7416: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7419: bipush 7
    //   7421: aaload
    //   7422: iconst_0
    //   7423: aaload
    //   7424: astore -65
    //   7426: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7429: bipush 8
    //   7431: aaload
    //   7432: iconst_0
    //   7433: aaload
    //   7434: astore -64
    //   7436: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   7439: dup
    //   7440: aload 12
    //   7442: iload 49
    //   7444: iconst_1
    //   7445: anewarray 5776	java/lang/Class
    //   7448: dup
    //   7449: iconst_0
    //   7450: ldc_w 2530
    //   7453: aastore
    //   7454: aconst_null
    //   7455: iconst_2
    //   7456: anewarray 4185	android/graphics/drawable/Drawable
    //   7459: dup
    //   7460: iconst_0
    //   7461: aload -65
    //   7463: aastore
    //   7464: dup
    //   7465: iconst_1
    //   7466: aload -64
    //   7468: aastore
    //   7469: aconst_null
    //   7470: ldc_w 6292
    //   7473: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   7476: astore -65
    //   7478: aload_0
    //   7479: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   7482: astore -63
    //   7484: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7487: bipush 7
    //   7489: aaload
    //   7490: iconst_0
    //   7491: aaload
    //   7492: astore 12
    //   7494: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7497: bipush 8
    //   7499: aaload
    //   7500: iconst_0
    //   7501: aaload
    //   7502: astore -64
    //   7504: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   7507: dup
    //   7508: aload -63
    //   7510: iconst_0
    //   7511: iconst_1
    //   7512: anewarray 5776	java/lang/Class
    //   7515: dup
    //   7516: iconst_0
    //   7517: ldc_w 2530
    //   7520: aastore
    //   7521: aconst_null
    //   7522: iconst_2
    //   7523: anewarray 4185	android/graphics/drawable/Drawable
    //   7526: dup
    //   7527: iconst_0
    //   7528: aload 12
    //   7530: aastore
    //   7531: dup
    //   7532: iconst_1
    //   7533: aload -64
    //   7535: aastore
    //   7536: aconst_null
    //   7537: ldc_w 6294
    //   7540: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   7543: astore -64
    //   7545: aload_0
    //   7546: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   7549: astore -63
    //   7551: getstatic 6267	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUNDFILTER	I
    //   7554: istore 49
    //   7556: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7559: bipush 7
    //   7561: aaload
    //   7562: iconst_1
    //   7563: aaload
    //   7564: astore -62
    //   7566: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7569: bipush 8
    //   7571: aaload
    //   7572: iconst_1
    //   7573: aaload
    //   7574: astore 12
    //   7576: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   7579: dup
    //   7580: aload -63
    //   7582: iload 49
    //   7584: iconst_1
    //   7585: anewarray 5776	java/lang/Class
    //   7588: dup
    //   7589: iconst_0
    //   7590: ldc_w 2530
    //   7593: aastore
    //   7594: aconst_null
    //   7595: iconst_2
    //   7596: anewarray 4185	android/graphics/drawable/Drawable
    //   7599: dup
    //   7600: iconst_0
    //   7601: aload -62
    //   7603: aastore
    //   7604: dup
    //   7605: iconst_1
    //   7606: aload 12
    //   7608: aastore
    //   7609: aconst_null
    //   7610: ldc_w 6296
    //   7613: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   7616: astore -63
    //   7618: aload_0
    //   7619: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   7622: astore 12
    //   7624: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7627: bipush 7
    //   7629: aaload
    //   7630: iconst_1
    //   7631: aaload
    //   7632: astore -62
    //   7634: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7637: bipush 8
    //   7639: aaload
    //   7640: iconst_1
    //   7641: aaload
    //   7642: astore -61
    //   7644: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   7647: dup
    //   7648: aload 12
    //   7650: iconst_0
    //   7651: iconst_1
    //   7652: anewarray 5776	java/lang/Class
    //   7655: dup
    //   7656: iconst_0
    //   7657: ldc_w 2530
    //   7660: aastore
    //   7661: aconst_null
    //   7662: iconst_2
    //   7663: anewarray 4185	android/graphics/drawable/Drawable
    //   7666: dup
    //   7667: iconst_0
    //   7668: aload -62
    //   7670: aastore
    //   7671: dup
    //   7672: iconst_1
    //   7673: aload -61
    //   7675: aastore
    //   7676: aconst_null
    //   7677: ldc_w 6298
    //   7680: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   7683: astore -62
    //   7685: aload_0
    //   7686: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   7689: astore 12
    //   7691: getstatic 6267	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUNDFILTER	I
    //   7694: istore 49
    //   7696: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7699: bipush 10
    //   7701: aaload
    //   7702: iconst_0
    //   7703: aaload
    //   7704: astore -61
    //   7706: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7709: bipush 11
    //   7711: aaload
    //   7712: iconst_0
    //   7713: aaload
    //   7714: astore -60
    //   7716: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   7719: dup
    //   7720: aload 12
    //   7722: iload 49
    //   7724: iconst_1
    //   7725: anewarray 5776	java/lang/Class
    //   7728: dup
    //   7729: iconst_0
    //   7730: ldc_w 2530
    //   7733: aastore
    //   7734: aconst_null
    //   7735: iconst_2
    //   7736: anewarray 4185	android/graphics/drawable/Drawable
    //   7739: dup
    //   7740: iconst_0
    //   7741: aload -61
    //   7743: aastore
    //   7744: dup
    //   7745: iconst_1
    //   7746: aload -60
    //   7748: aastore
    //   7749: aconst_null
    //   7750: ldc_w 6300
    //   7753: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   7756: astore -61
    //   7758: aload_0
    //   7759: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   7762: astore 12
    //   7764: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7767: bipush 10
    //   7769: aaload
    //   7770: iconst_0
    //   7771: aaload
    //   7772: astore -59
    //   7774: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7777: bipush 11
    //   7779: aaload
    //   7780: iconst_0
    //   7781: aaload
    //   7782: astore -60
    //   7784: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   7787: dup
    //   7788: aload 12
    //   7790: iconst_0
    //   7791: iconst_1
    //   7792: anewarray 5776	java/lang/Class
    //   7795: dup
    //   7796: iconst_0
    //   7797: ldc_w 2530
    //   7800: aastore
    //   7801: aconst_null
    //   7802: iconst_2
    //   7803: anewarray 4185	android/graphics/drawable/Drawable
    //   7806: dup
    //   7807: iconst_0
    //   7808: aload -59
    //   7810: aastore
    //   7811: dup
    //   7812: iconst_1
    //   7813: aload -60
    //   7815: aastore
    //   7816: aconst_null
    //   7817: ldc_w 6302
    //   7820: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   7823: astore -60
    //   7825: aload_0
    //   7826: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   7829: astore -59
    //   7831: getstatic 6267	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUNDFILTER	I
    //   7834: istore 49
    //   7836: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7839: bipush 10
    //   7841: aaload
    //   7842: iconst_1
    //   7843: aaload
    //   7844: astore -58
    //   7846: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7849: bipush 11
    //   7851: aaload
    //   7852: iconst_1
    //   7853: aaload
    //   7854: astore 12
    //   7856: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   7859: dup
    //   7860: aload -59
    //   7862: iload 49
    //   7864: iconst_1
    //   7865: anewarray 5776	java/lang/Class
    //   7868: dup
    //   7869: iconst_0
    //   7870: ldc_w 2530
    //   7873: aastore
    //   7874: aconst_null
    //   7875: iconst_2
    //   7876: anewarray 4185	android/graphics/drawable/Drawable
    //   7879: dup
    //   7880: iconst_0
    //   7881: aload -58
    //   7883: aastore
    //   7884: dup
    //   7885: iconst_1
    //   7886: aload 12
    //   7888: aastore
    //   7889: aconst_null
    //   7890: ldc_w 6304
    //   7893: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   7896: astore -59
    //   7898: aload_0
    //   7899: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   7902: astore -58
    //   7904: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7907: bipush 10
    //   7909: aaload
    //   7910: iconst_1
    //   7911: aaload
    //   7912: astore -57
    //   7914: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7917: bipush 11
    //   7919: aaload
    //   7920: iconst_1
    //   7921: aaload
    //   7922: astore 12
    //   7924: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   7927: dup
    //   7928: aload -58
    //   7930: iconst_0
    //   7931: iconst_1
    //   7932: anewarray 5776	java/lang/Class
    //   7935: dup
    //   7936: iconst_0
    //   7937: ldc_w 2530
    //   7940: aastore
    //   7941: aconst_null
    //   7942: iconst_2
    //   7943: anewarray 4185	android/graphics/drawable/Drawable
    //   7946: dup
    //   7947: iconst_0
    //   7948: aload -57
    //   7950: aastore
    //   7951: dup
    //   7952: iconst_1
    //   7953: aload 12
    //   7955: aastore
    //   7956: aconst_null
    //   7957: ldc_w 6306
    //   7960: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   7963: astore -58
    //   7965: aload_0
    //   7966: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   7969: astore -57
    //   7971: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7974: bipush 9
    //   7976: aaload
    //   7977: iconst_0
    //   7978: aaload
    //   7979: astore 12
    //   7981: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   7984: dup
    //   7985: aload -57
    //   7987: iconst_0
    //   7988: iconst_1
    //   7989: anewarray 5776	java/lang/Class
    //   7992: dup
    //   7993: iconst_0
    //   7994: ldc_w 2530
    //   7997: aastore
    //   7998: aconst_null
    //   7999: iconst_1
    //   8000: anewarray 4185	android/graphics/drawable/Drawable
    //   8003: dup
    //   8004: iconst_0
    //   8005: aload 12
    //   8007: aastore
    //   8008: aconst_null
    //   8009: ldc_w 6308
    //   8012: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   8015: astore -57
    //   8017: aload_0
    //   8018: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   8021: astore -56
    //   8023: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   8026: bipush 9
    //   8028: aaload
    //   8029: iconst_1
    //   8030: aaload
    //   8031: astore 12
    //   8033: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   8036: dup
    //   8037: aload -56
    //   8039: iconst_0
    //   8040: iconst_1
    //   8041: anewarray 5776	java/lang/Class
    //   8044: dup
    //   8045: iconst_0
    //   8046: ldc_w 2530
    //   8049: aastore
    //   8050: aconst_null
    //   8051: iconst_1
    //   8052: anewarray 4185	android/graphics/drawable/Drawable
    //   8055: dup
    //   8056: iconst_0
    //   8057: aload 12
    //   8059: aastore
    //   8060: aconst_null
    //   8061: ldc_w 6310
    //   8064: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   8067: astore -56
    //   8069: aload_0
    //   8070: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   8073: astore 12
    //   8075: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   8078: bipush 12
    //   8080: aaload
    //   8081: iconst_0
    //   8082: aaload
    //   8083: astore -55
    //   8085: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   8088: dup
    //   8089: aload 12
    //   8091: iconst_0
    //   8092: iconst_1
    //   8093: anewarray 5776	java/lang/Class
    //   8096: dup
    //   8097: iconst_0
    //   8098: ldc_w 2530
    //   8101: aastore
    //   8102: aconst_null
    //   8103: iconst_1
    //   8104: anewarray 4185	android/graphics/drawable/Drawable
    //   8107: dup
    //   8108: iconst_0
    //   8109: aload -55
    //   8111: aastore
    //   8112: aconst_null
    //   8113: ldc_w 6312
    //   8116: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   8119: astore -55
    //   8121: aload_0
    //   8122: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   8125: astore 12
    //   8127: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   8130: bipush 12
    //   8132: aaload
    //   8133: iconst_1
    //   8134: aaload
    //   8135: astore -54
    //   8137: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   8140: dup
    //   8141: aload 12
    //   8143: iconst_0
    //   8144: iconst_1
    //   8145: anewarray 5776	java/lang/Class
    //   8148: dup
    //   8149: iconst_0
    //   8150: ldc_w 2530
    //   8153: aastore
    //   8154: aconst_null
    //   8155: iconst_1
    //   8156: anewarray 4185	android/graphics/drawable/Drawable
    //   8159: dup
    //   8160: iconst_0
    //   8161: aload -54
    //   8163: aastore
    //   8164: aconst_null
    //   8165: ldc_w 6314
    //   8168: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   8171: astore -54
    //   8173: aload_0
    //   8174: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   8177: astore -53
    //   8179: getstatic 6267	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUNDFILTER	I
    //   8182: istore 49
    //   8184: getstatic 6318	org/telegram/ui/ActionBar/Theme:chat_contactDrawable	[Landroid/graphics/drawable/Drawable;
    //   8187: iconst_0
    //   8188: aaload
    //   8189: astore 12
    //   8191: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   8194: dup
    //   8195: aload -53
    //   8197: iload 49
    //   8199: iconst_1
    //   8200: anewarray 5776	java/lang/Class
    //   8203: dup
    //   8204: iconst_0
    //   8205: ldc_w 2530
    //   8208: aastore
    //   8209: aconst_null
    //   8210: iconst_1
    //   8211: anewarray 4185	android/graphics/drawable/Drawable
    //   8214: dup
    //   8215: iconst_0
    //   8216: aload 12
    //   8218: aastore
    //   8219: aconst_null
    //   8220: ldc_w 6320
    //   8223: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   8226: astore -53
    //   8228: aload_0
    //   8229: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   8232: astore 12
    //   8234: getstatic 6318	org/telegram/ui/ActionBar/Theme:chat_contactDrawable	[Landroid/graphics/drawable/Drawable;
    //   8237: iconst_0
    //   8238: aaload
    //   8239: astore -52
    //   8241: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   8244: dup
    //   8245: aload 12
    //   8247: iconst_0
    //   8248: iconst_1
    //   8249: anewarray 5776	java/lang/Class
    //   8252: dup
    //   8253: iconst_0
    //   8254: ldc_w 2530
    //   8257: aastore
    //   8258: aconst_null
    //   8259: iconst_1
    //   8260: anewarray 4185	android/graphics/drawable/Drawable
    //   8263: dup
    //   8264: iconst_0
    //   8265: aload -52
    //   8267: aastore
    //   8268: aconst_null
    //   8269: ldc_w 6322
    //   8272: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   8275: astore -52
    //   8277: aload_0
    //   8278: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   8281: astore -51
    //   8283: getstatic 6267	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUNDFILTER	I
    //   8286: istore 49
    //   8288: getstatic 6318	org/telegram/ui/ActionBar/Theme:chat_contactDrawable	[Landroid/graphics/drawable/Drawable;
    //   8291: iconst_1
    //   8292: aaload
    //   8293: astore 12
    //   8295: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   8298: dup
    //   8299: aload -51
    //   8301: iload 49
    //   8303: iconst_1
    //   8304: anewarray 5776	java/lang/Class
    //   8307: dup
    //   8308: iconst_0
    //   8309: ldc_w 2530
    //   8312: aastore
    //   8313: aconst_null
    //   8314: iconst_1
    //   8315: anewarray 4185	android/graphics/drawable/Drawable
    //   8318: dup
    //   8319: iconst_0
    //   8320: aload 12
    //   8322: aastore
    //   8323: aconst_null
    //   8324: ldc_w 6324
    //   8327: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   8330: astore -51
    //   8332: aload_0
    //   8333: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   8336: astore -50
    //   8338: getstatic 6318	org/telegram/ui/ActionBar/Theme:chat_contactDrawable	[Landroid/graphics/drawable/Drawable;
    //   8341: iconst_1
    //   8342: aaload
    //   8343: astore 12
    //   8345: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   8348: dup
    //   8349: aload -50
    //   8351: iconst_0
    //   8352: iconst_1
    //   8353: anewarray 5776	java/lang/Class
    //   8356: dup
    //   8357: iconst_0
    //   8358: ldc_w 2530
    //   8361: aastore
    //   8362: aconst_null
    //   8363: iconst_1
    //   8364: anewarray 4185	android/graphics/drawable/Drawable
    //   8367: dup
    //   8368: iconst_0
    //   8369: aload 12
    //   8371: aastore
    //   8372: aconst_null
    //   8373: ldc_w 6326
    //   8376: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   8379: astore -50
    //   8381: aload_0
    //   8382: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   8385: astore 12
    //   8387: getstatic 6267	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUNDFILTER	I
    //   8390: istore 49
    //   8392: getstatic 6329	org/telegram/ui/ActionBar/Theme:chat_locationDrawable	[Landroid/graphics/drawable/Drawable;
    //   8395: iconst_0
    //   8396: aaload
    //   8397: astore -49
    //   8399: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   8402: dup
    //   8403: aload 12
    //   8405: iload 49
    //   8407: iconst_1
    //   8408: anewarray 5776	java/lang/Class
    //   8411: dup
    //   8412: iconst_0
    //   8413: ldc_w 2530
    //   8416: aastore
    //   8417: aconst_null
    //   8418: iconst_1
    //   8419: anewarray 4185	android/graphics/drawable/Drawable
    //   8422: dup
    //   8423: iconst_0
    //   8424: aload -49
    //   8426: aastore
    //   8427: aconst_null
    //   8428: ldc_w 6331
    //   8431: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   8434: astore -49
    //   8436: aload_0
    //   8437: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   8440: astore -48
    //   8442: getstatic 6329	org/telegram/ui/ActionBar/Theme:chat_locationDrawable	[Landroid/graphics/drawable/Drawable;
    //   8445: iconst_0
    //   8446: aaload
    //   8447: astore 12
    //   8449: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   8452: dup
    //   8453: aload -48
    //   8455: iconst_0
    //   8456: iconst_1
    //   8457: anewarray 5776	java/lang/Class
    //   8460: dup
    //   8461: iconst_0
    //   8462: ldc_w 2530
    //   8465: aastore
    //   8466: aconst_null
    //   8467: iconst_1
    //   8468: anewarray 4185	android/graphics/drawable/Drawable
    //   8471: dup
    //   8472: iconst_0
    //   8473: aload 12
    //   8475: aastore
    //   8476: aconst_null
    //   8477: ldc_w 6333
    //   8480: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   8483: astore -48
    //   8485: aload_0
    //   8486: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   8489: astore -47
    //   8491: getstatic 6267	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUNDFILTER	I
    //   8494: istore 49
    //   8496: getstatic 6329	org/telegram/ui/ActionBar/Theme:chat_locationDrawable	[Landroid/graphics/drawable/Drawable;
    //   8499: iconst_1
    //   8500: aaload
    //   8501: astore 12
    //   8503: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   8506: dup
    //   8507: aload -47
    //   8509: iload 49
    //   8511: iconst_1
    //   8512: anewarray 5776	java/lang/Class
    //   8515: dup
    //   8516: iconst_0
    //   8517: ldc_w 2530
    //   8520: aastore
    //   8521: aconst_null
    //   8522: iconst_1
    //   8523: anewarray 4185	android/graphics/drawable/Drawable
    //   8526: dup
    //   8527: iconst_0
    //   8528: aload 12
    //   8530: aastore
    //   8531: aconst_null
    //   8532: ldc_w 6335
    //   8535: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   8538: astore -47
    //   8540: aload_0
    //   8541: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   8544: astore -46
    //   8546: getstatic 6329	org/telegram/ui/ActionBar/Theme:chat_locationDrawable	[Landroid/graphics/drawable/Drawable;
    //   8549: iconst_1
    //   8550: aaload
    //   8551: astore 12
    //   8553: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   8556: dup
    //   8557: aload -46
    //   8559: iconst_0
    //   8560: iconst_1
    //   8561: anewarray 5776	java/lang/Class
    //   8564: dup
    //   8565: iconst_0
    //   8566: ldc_w 2530
    //   8569: aastore
    //   8570: aconst_null
    //   8571: iconst_1
    //   8572: anewarray 4185	android/graphics/drawable/Drawable
    //   8575: dup
    //   8576: iconst_0
    //   8577: aload 12
    //   8579: aastore
    //   8580: aconst_null
    //   8581: ldc_w 6337
    //   8584: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   8587: astore -45
    //   8589: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   8592: dup
    //   8593: aload_0
    //   8594: getfield 1522	org/telegram/ui/ChatActivity:mentionContainer	Landroid/widget/FrameLayout;
    //   8597: iconst_0
    //   8598: aconst_null
    //   8599: getstatic 6340	org/telegram/ui/ActionBar/Theme:chat_composeBackgroundPaint	Landroid/graphics/Paint;
    //   8602: aconst_null
    //   8603: aconst_null
    //   8604: ldc_w 6342
    //   8607: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   8610: astore -44
    //   8612: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   8615: dup
    //   8616: aload_0
    //   8617: getfield 1522	org/telegram/ui/ChatActivity:mentionContainer	Landroid/widget/FrameLayout;
    //   8620: iconst_0
    //   8621: aconst_null
    //   8622: aconst_null
    //   8623: iconst_1
    //   8624: anewarray 4185	android/graphics/drawable/Drawable
    //   8627: dup
    //   8628: iconst_0
    //   8629: getstatic 6345	org/telegram/ui/ActionBar/Theme:chat_composeShadowDrawable	Landroid/graphics/drawable/Drawable;
    //   8632: aastore
    //   8633: aconst_null
    //   8634: ldc_w 6347
    //   8637: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   8640: astore -43
    //   8642: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   8645: dup
    //   8646: aload_0
    //   8647: getfield 991	org/telegram/ui/ChatActivity:searchContainer	Landroid/widget/FrameLayout;
    //   8650: iconst_0
    //   8651: aconst_null
    //   8652: getstatic 6340	org/telegram/ui/ActionBar/Theme:chat_composeBackgroundPaint	Landroid/graphics/Paint;
    //   8655: aconst_null
    //   8656: aconst_null
    //   8657: ldc_w 6342
    //   8660: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   8663: astore -42
    //   8665: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   8668: dup
    //   8669: aload_0
    //   8670: getfield 991	org/telegram/ui/ChatActivity:searchContainer	Landroid/widget/FrameLayout;
    //   8673: iconst_0
    //   8674: aconst_null
    //   8675: aconst_null
    //   8676: iconst_1
    //   8677: anewarray 4185	android/graphics/drawable/Drawable
    //   8680: dup
    //   8681: iconst_0
    //   8682: getstatic 6345	org/telegram/ui/ActionBar/Theme:chat_composeShadowDrawable	Landroid/graphics/drawable/Drawable;
    //   8685: aastore
    //   8686: aconst_null
    //   8687: ldc_w 6347
    //   8690: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   8693: astore -41
    //   8695: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   8698: dup
    //   8699: aload_0
    //   8700: getfield 974	org/telegram/ui/ChatActivity:bottomOverlay	Landroid/widget/FrameLayout;
    //   8703: iconst_0
    //   8704: aconst_null
    //   8705: getstatic 6340	org/telegram/ui/ActionBar/Theme:chat_composeBackgroundPaint	Landroid/graphics/Paint;
    //   8708: aconst_null
    //   8709: aconst_null
    //   8710: ldc_w 6342
    //   8713: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   8716: astore -40
    //   8718: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   8721: dup
    //   8722: aload_0
    //   8723: getfield 974	org/telegram/ui/ChatActivity:bottomOverlay	Landroid/widget/FrameLayout;
    //   8726: iconst_0
    //   8727: aconst_null
    //   8728: aconst_null
    //   8729: iconst_1
    //   8730: anewarray 4185	android/graphics/drawable/Drawable
    //   8733: dup
    //   8734: iconst_0
    //   8735: getstatic 6345	org/telegram/ui/ActionBar/Theme:chat_composeShadowDrawable	Landroid/graphics/drawable/Drawable;
    //   8738: aastore
    //   8739: aconst_null
    //   8740: ldc_w 6347
    //   8743: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   8746: astore -39
    //   8748: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   8751: dup
    //   8752: aload_0
    //   8753: getfield 816	org/telegram/ui/ChatActivity:bottomOverlayChat	Landroid/widget/FrameLayout;
    //   8756: iconst_0
    //   8757: aconst_null
    //   8758: getstatic 6340	org/telegram/ui/ActionBar/Theme:chat_composeBackgroundPaint	Landroid/graphics/Paint;
    //   8761: aconst_null
    //   8762: aconst_null
    //   8763: ldc_w 6342
    //   8766: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   8769: astore -38
    //   8771: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   8774: dup
    //   8775: aload_0
    //   8776: getfield 816	org/telegram/ui/ChatActivity:bottomOverlayChat	Landroid/widget/FrameLayout;
    //   8779: iconst_0
    //   8780: aconst_null
    //   8781: aconst_null
    //   8782: iconst_1
    //   8783: anewarray 4185	android/graphics/drawable/Drawable
    //   8786: dup
    //   8787: iconst_0
    //   8788: getstatic 6345	org/telegram/ui/ActionBar/Theme:chat_composeShadowDrawable	Landroid/graphics/drawable/Drawable;
    //   8791: aastore
    //   8792: aconst_null
    //   8793: ldc_w 6347
    //   8796: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   8799: astore -37
    //   8801: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   8804: dup
    //   8805: aload_0
    //   8806: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   8809: iconst_0
    //   8810: aconst_null
    //   8811: getstatic 6340	org/telegram/ui/ActionBar/Theme:chat_composeBackgroundPaint	Landroid/graphics/Paint;
    //   8814: aconst_null
    //   8815: aconst_null
    //   8816: ldc_w 6342
    //   8819: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   8822: astore -36
    //   8824: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   8827: dup
    //   8828: aload_0
    //   8829: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   8832: iconst_0
    //   8833: aconst_null
    //   8834: aconst_null
    //   8835: iconst_1
    //   8836: anewarray 4185	android/graphics/drawable/Drawable
    //   8839: dup
    //   8840: iconst_0
    //   8841: getstatic 6345	org/telegram/ui/ActionBar/Theme:chat_composeShadowDrawable	Landroid/graphics/drawable/Drawable;
    //   8844: aastore
    //   8845: aconst_null
    //   8846: ldc_w 6347
    //   8849: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   8852: astore -35
    //   8854: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   8857: dup
    //   8858: aload_0
    //   8859: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   8862: getstatic 5685	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUND	I
    //   8865: iconst_1
    //   8866: anewarray 5776	java/lang/Class
    //   8869: dup
    //   8870: iconst_0
    //   8871: ldc_w 1717
    //   8874: aastore
    //   8875: iconst_1
    //   8876: anewarray 1974	java/lang/String
    //   8879: dup
    //   8880: iconst_0
    //   8881: ldc_w 6349
    //   8884: aastore
    //   8885: aconst_null
    //   8886: aconst_null
    //   8887: aconst_null
    //   8888: ldc_w 6342
    //   8891: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   8894: astore -34
    //   8896: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   8899: dup
    //   8900: aload_0
    //   8901: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   8904: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   8907: iconst_1
    //   8908: anewarray 5776	java/lang/Class
    //   8911: dup
    //   8912: iconst_0
    //   8913: ldc_w 1717
    //   8916: aastore
    //   8917: iconst_1
    //   8918: anewarray 1974	java/lang/String
    //   8921: dup
    //   8922: iconst_0
    //   8923: ldc_w 6354
    //   8926: aastore
    //   8927: aconst_null
    //   8928: aconst_null
    //   8929: aconst_null
    //   8930: ldc_w 6356
    //   8933: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   8936: astore -33
    //   8938: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   8941: dup
    //   8942: aload_0
    //   8943: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   8946: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   8949: iconst_1
    //   8950: anewarray 5776	java/lang/Class
    //   8953: dup
    //   8954: iconst_0
    //   8955: ldc_w 1717
    //   8958: aastore
    //   8959: iconst_1
    //   8960: anewarray 1974	java/lang/String
    //   8963: dup
    //   8964: iconst_0
    //   8965: ldc_w 6358
    //   8968: aastore
    //   8969: aconst_null
    //   8970: aconst_null
    //   8971: aconst_null
    //   8972: ldc_w 4963
    //   8975: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   8978: astore -32
    //   8980: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   8983: dup
    //   8984: aload_0
    //   8985: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   8988: getstatic 6361	org/telegram/ui/ActionBar/ThemeDescription:FLAG_HINTTEXTCOLOR	I
    //   8991: iconst_1
    //   8992: anewarray 5776	java/lang/Class
    //   8995: dup
    //   8996: iconst_0
    //   8997: ldc_w 1717
    //   9000: aastore
    //   9001: iconst_1
    //   9002: anewarray 1974	java/lang/String
    //   9005: dup
    //   9006: iconst_0
    //   9007: ldc_w 6354
    //   9010: aastore
    //   9011: aconst_null
    //   9012: aconst_null
    //   9013: aconst_null
    //   9014: ldc_w 6363
    //   9017: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   9020: astore -31
    //   9022: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   9025: dup
    //   9026: aload_0
    //   9027: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   9030: iconst_0
    //   9031: iconst_1
    //   9032: anewarray 5776	java/lang/Class
    //   9035: dup
    //   9036: iconst_0
    //   9037: ldc_w 1717
    //   9040: aastore
    //   9041: iconst_1
    //   9042: anewarray 1974	java/lang/String
    //   9045: dup
    //   9046: iconst_0
    //   9047: ldc_w 6365
    //   9050: aastore
    //   9051: aconst_null
    //   9052: aconst_null
    //   9053: aconst_null
    //   9054: ldc_w 6367
    //   9057: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   9060: astore -30
    //   9062: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   9065: dup
    //   9066: aload_0
    //   9067: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   9070: iconst_0
    //   9071: iconst_1
    //   9072: anewarray 5776	java/lang/Class
    //   9075: dup
    //   9076: iconst_0
    //   9077: ldc_w 1717
    //   9080: aastore
    //   9081: iconst_1
    //   9082: anewarray 1974	java/lang/String
    //   9085: dup
    //   9086: iconst_0
    //   9087: ldc_w 6369
    //   9090: aastore
    //   9091: aconst_null
    //   9092: aconst_null
    //   9093: aconst_null
    //   9094: ldc_w 6371
    //   9097: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   9100: astore -29
    //   9102: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   9105: dup
    //   9106: aload_0
    //   9107: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   9110: iconst_0
    //   9111: iconst_1
    //   9112: anewarray 5776	java/lang/Class
    //   9115: dup
    //   9116: iconst_0
    //   9117: ldc_w 1717
    //   9120: aastore
    //   9121: iconst_1
    //   9122: anewarray 1974	java/lang/String
    //   9125: dup
    //   9126: iconst_0
    //   9127: ldc_w 6373
    //   9130: aastore
    //   9131: aconst_null
    //   9132: aconst_null
    //   9133: aconst_null
    //   9134: ldc_w 6371
    //   9137: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   9140: astore -28
    //   9142: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   9145: dup
    //   9146: aload_0
    //   9147: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   9150: iconst_0
    //   9151: iconst_1
    //   9152: anewarray 5776	java/lang/Class
    //   9155: dup
    //   9156: iconst_0
    //   9157: ldc_w 1717
    //   9160: aastore
    //   9161: iconst_1
    //   9162: anewarray 1974	java/lang/String
    //   9165: dup
    //   9166: iconst_0
    //   9167: ldc_w 6375
    //   9170: aastore
    //   9171: aconst_null
    //   9172: aconst_null
    //   9173: aconst_null
    //   9174: ldc_w 6371
    //   9177: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   9180: astore -27
    //   9182: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   9185: dup
    //   9186: aload_0
    //   9187: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   9190: iconst_0
    //   9191: iconst_1
    //   9192: anewarray 5776	java/lang/Class
    //   9195: dup
    //   9196: iconst_0
    //   9197: ldc_w 1717
    //   9200: aastore
    //   9201: iconst_1
    //   9202: anewarray 1974	java/lang/String
    //   9205: dup
    //   9206: iconst_0
    //   9207: ldc_w 6377
    //   9210: aastore
    //   9211: aconst_null
    //   9212: aconst_null
    //   9213: aconst_null
    //   9214: ldc_w 6371
    //   9217: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   9220: astore -26
    //   9222: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   9225: dup
    //   9226: aload_0
    //   9227: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   9230: iconst_0
    //   9231: iconst_1
    //   9232: anewarray 5776	java/lang/Class
    //   9235: dup
    //   9236: iconst_0
    //   9237: ldc_w 1717
    //   9240: aastore
    //   9241: iconst_1
    //   9242: anewarray 1974	java/lang/String
    //   9245: dup
    //   9246: iconst_0
    //   9247: ldc_w 6379
    //   9250: aastore
    //   9251: aconst_null
    //   9252: aconst_null
    //   9253: aconst_null
    //   9254: ldc_w 6371
    //   9257: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   9260: astore -25
    //   9262: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   9265: dup
    //   9266: aload_0
    //   9267: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   9270: iconst_0
    //   9271: iconst_1
    //   9272: anewarray 5776	java/lang/Class
    //   9275: dup
    //   9276: iconst_0
    //   9277: ldc_w 1717
    //   9280: aastore
    //   9281: iconst_1
    //   9282: anewarray 1974	java/lang/String
    //   9285: dup
    //   9286: iconst_0
    //   9287: ldc_w 6381
    //   9290: aastore
    //   9291: aconst_null
    //   9292: aconst_null
    //   9293: aconst_null
    //   9294: ldc_w 6371
    //   9297: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   9300: astore -24
    //   9302: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   9305: dup
    //   9306: aload_0
    //   9307: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   9310: getstatic 6384	org/telegram/ui/ActionBar/ThemeDescription:FLAG_IMAGECOLOR	I
    //   9313: iconst_1
    //   9314: anewarray 5776	java/lang/Class
    //   9317: dup
    //   9318: iconst_0
    //   9319: ldc_w 1717
    //   9322: aastore
    //   9323: iconst_1
    //   9324: anewarray 1974	java/lang/String
    //   9327: dup
    //   9328: iconst_0
    //   9329: ldc_w 6386
    //   9332: aastore
    //   9333: aconst_null
    //   9334: aconst_null
    //   9335: aconst_null
    //   9336: ldc_w 6388
    //   9339: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   9342: astore -23
    //   9344: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   9347: dup
    //   9348: aload_0
    //   9349: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   9352: getstatic 5685	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUND	I
    //   9355: iconst_1
    //   9356: anewarray 5776	java/lang/Class
    //   9359: dup
    //   9360: iconst_0
    //   9361: ldc_w 1717
    //   9364: aastore
    //   9365: iconst_1
    //   9366: anewarray 1974	java/lang/String
    //   9369: dup
    //   9370: iconst_0
    //   9371: ldc_w 6390
    //   9374: aastore
    //   9375: aconst_null
    //   9376: aconst_null
    //   9377: aconst_null
    //   9378: ldc_w 6342
    //   9381: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   9384: astore -22
    //   9386: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   9389: dup
    //   9390: aload_0
    //   9391: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   9394: iconst_0
    //   9395: iconst_1
    //   9396: anewarray 5776	java/lang/Class
    //   9399: dup
    //   9400: iconst_0
    //   9401: ldc_w 1717
    //   9404: aastore
    //   9405: iconst_1
    //   9406: anewarray 1974	java/lang/String
    //   9409: dup
    //   9410: iconst_0
    //   9411: ldc_w 6392
    //   9414: aastore
    //   9415: aconst_null
    //   9416: aconst_null
    //   9417: aconst_null
    //   9418: ldc_w 6394
    //   9421: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   9424: astore -46
    //   9426: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   9429: dup
    //   9430: aload_0
    //   9431: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   9434: iconst_0
    //   9435: iconst_1
    //   9436: anewarray 5776	java/lang/Class
    //   9439: dup
    //   9440: iconst_0
    //   9441: ldc_w 1717
    //   9444: aastore
    //   9445: iconst_1
    //   9446: anewarray 1974	java/lang/String
    //   9449: dup
    //   9450: iconst_0
    //   9451: ldc_w 6396
    //   9454: aastore
    //   9455: aconst_null
    //   9456: aconst_null
    //   9457: aconst_null
    //   9458: ldc_w 6394
    //   9461: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   9464: astore -21
    //   9466: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   9469: dup
    //   9470: aload_0
    //   9471: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   9474: iconst_0
    //   9475: iconst_1
    //   9476: anewarray 5776	java/lang/Class
    //   9479: dup
    //   9480: iconst_0
    //   9481: ldc_w 1717
    //   9484: aastore
    //   9485: iconst_1
    //   9486: anewarray 1974	java/lang/String
    //   9489: dup
    //   9490: iconst_0
    //   9491: ldc_w 6398
    //   9494: aastore
    //   9495: aconst_null
    //   9496: aconst_null
    //   9497: aconst_null
    //   9498: ldc_w 6394
    //   9501: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   9504: astore -20
    //   9506: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   9509: dup
    //   9510: aload_0
    //   9511: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   9514: iconst_0
    //   9515: iconst_1
    //   9516: anewarray 5776	java/lang/Class
    //   9519: dup
    //   9520: iconst_0
    //   9521: ldc_w 1717
    //   9524: aastore
    //   9525: iconst_1
    //   9526: anewarray 1974	java/lang/String
    //   9529: dup
    //   9530: iconst_0
    //   9531: ldc_w 6400
    //   9534: aastore
    //   9535: aconst_null
    //   9536: aconst_null
    //   9537: aconst_null
    //   9538: ldc_w 6402
    //   9541: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   9544: astore -19
    //   9546: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   9549: dup
    //   9550: aload_0
    //   9551: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   9554: iconst_0
    //   9555: iconst_1
    //   9556: anewarray 5776	java/lang/Class
    //   9559: dup
    //   9560: iconst_0
    //   9561: ldc_w 1717
    //   9564: aastore
    //   9565: iconst_1
    //   9566: anewarray 1974	java/lang/String
    //   9569: dup
    //   9570: iconst_0
    //   9571: ldc_w 6404
    //   9574: aastore
    //   9575: aconst_null
    //   9576: aconst_null
    //   9577: aconst_null
    //   9578: ldc_w 6402
    //   9581: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   9584: astore -18
    //   9586: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   9589: dup
    //   9590: aload_0
    //   9591: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   9594: iconst_0
    //   9595: iconst_1
    //   9596: anewarray 5776	java/lang/Class
    //   9599: dup
    //   9600: iconst_0
    //   9601: ldc_w 1717
    //   9604: aastore
    //   9605: iconst_1
    //   9606: anewarray 1974	java/lang/String
    //   9609: dup
    //   9610: iconst_0
    //   9611: ldc_w 6406
    //   9614: aastore
    //   9615: aconst_null
    //   9616: aconst_null
    //   9617: aconst_null
    //   9618: ldc_w 6402
    //   9621: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   9624: astore -17
    //   9626: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   9629: dup
    //   9630: aload_0
    //   9631: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   9634: iconst_0
    //   9635: iconst_1
    //   9636: anewarray 5776	java/lang/Class
    //   9639: dup
    //   9640: iconst_0
    //   9641: ldc_w 1717
    //   9644: aastore
    //   9645: iconst_1
    //   9646: anewarray 1974	java/lang/String
    //   9649: dup
    //   9650: iconst_0
    //   9651: ldc_w 6408
    //   9654: aastore
    //   9655: aconst_null
    //   9656: aconst_null
    //   9657: aconst_null
    //   9658: ldc_w 6410
    //   9661: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   9664: astore -16
    //   9666: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   9669: dup
    //   9670: aload_0
    //   9671: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   9674: iconst_0
    //   9675: iconst_1
    //   9676: anewarray 5776	java/lang/Class
    //   9679: dup
    //   9680: iconst_0
    //   9681: ldc_w 1717
    //   9684: aastore
    //   9685: iconst_1
    //   9686: anewarray 1974	java/lang/String
    //   9689: dup
    //   9690: iconst_0
    //   9691: ldc_w 6412
    //   9694: aastore
    //   9695: aconst_null
    //   9696: aconst_null
    //   9697: aconst_null
    //   9698: ldc_w 6414
    //   9701: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   9704: astore -15
    //   9706: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   9709: dup
    //   9710: aload_0
    //   9711: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   9714: getstatic 6384	org/telegram/ui/ActionBar/ThemeDescription:FLAG_IMAGECOLOR	I
    //   9717: iconst_1
    //   9718: anewarray 5776	java/lang/Class
    //   9721: dup
    //   9722: iconst_0
    //   9723: ldc_w 1717
    //   9726: aastore
    //   9727: iconst_1
    //   9728: anewarray 1974	java/lang/String
    //   9731: dup
    //   9732: iconst_0
    //   9733: ldc_w 6416
    //   9736: aastore
    //   9737: aconst_null
    //   9738: aconst_null
    //   9739: aconst_null
    //   9740: ldc_w 6418
    //   9743: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   9746: astore -14
    //   9748: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   9751: dup
    //   9752: aload_0
    //   9753: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   9756: getstatic 6267	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUNDFILTER	I
    //   9759: iconst_1
    //   9760: anewarray 5776	java/lang/Class
    //   9763: dup
    //   9764: iconst_0
    //   9765: ldc_w 1717
    //   9768: aastore
    //   9769: iconst_1
    //   9770: anewarray 1974	java/lang/String
    //   9773: dup
    //   9774: iconst_0
    //   9775: ldc_w 6420
    //   9778: aastore
    //   9779: aconst_null
    //   9780: aconst_null
    //   9781: aconst_null
    //   9782: ldc_w 6422
    //   9785: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   9788: astore -13
    //   9790: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   9793: dup
    //   9794: aload_0
    //   9795: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   9798: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   9801: iconst_1
    //   9802: anewarray 5776	java/lang/Class
    //   9805: dup
    //   9806: iconst_0
    //   9807: ldc_w 1717
    //   9810: aastore
    //   9811: iconst_1
    //   9812: anewarray 1974	java/lang/String
    //   9815: dup
    //   9816: iconst_0
    //   9817: ldc_w 6424
    //   9820: aastore
    //   9821: aconst_null
    //   9822: aconst_null
    //   9823: aconst_null
    //   9824: ldc_w 6426
    //   9827: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   9830: astore -12
    //   9832: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   9835: dup
    //   9836: aload_0
    //   9837: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   9840: getstatic 5685	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUND	I
    //   9843: iconst_1
    //   9844: anewarray 5776	java/lang/Class
    //   9847: dup
    //   9848: iconst_0
    //   9849: ldc_w 1717
    //   9852: aastore
    //   9853: iconst_1
    //   9854: anewarray 1974	java/lang/String
    //   9857: dup
    //   9858: iconst_0
    //   9859: ldc_w 6428
    //   9862: aastore
    //   9863: aconst_null
    //   9864: aconst_null
    //   9865: aconst_null
    //   9866: ldc_w 6342
    //   9869: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   9872: astore -11
    //   9874: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   9877: dup
    //   9878: aload_0
    //   9879: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   9882: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   9885: iconst_1
    //   9886: anewarray 5776	java/lang/Class
    //   9889: dup
    //   9890: iconst_0
    //   9891: ldc_w 1717
    //   9894: aastore
    //   9895: iconst_1
    //   9896: anewarray 1974	java/lang/String
    //   9899: dup
    //   9900: iconst_0
    //   9901: ldc_w 6430
    //   9904: aastore
    //   9905: aconst_null
    //   9906: aconst_null
    //   9907: aconst_null
    //   9908: ldc_w 6432
    //   9911: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   9914: astore -10
    //   9916: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   9919: dup
    //   9920: aload_0
    //   9921: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   9924: getstatic 5685	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUND	I
    //   9927: iconst_1
    //   9928: anewarray 5776	java/lang/Class
    //   9931: dup
    //   9932: iconst_0
    //   9933: ldc_w 1717
    //   9936: aastore
    //   9937: iconst_1
    //   9938: anewarray 1974	java/lang/String
    //   9941: dup
    //   9942: iconst_0
    //   9943: ldc_w 6434
    //   9946: aastore
    //   9947: aconst_null
    //   9948: aconst_null
    //   9949: aconst_null
    //   9950: ldc_w 6342
    //   9953: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   9956: astore -9
    //   9958: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   9961: dup
    //   9962: aload_0
    //   9963: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   9966: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   9969: iconst_1
    //   9970: anewarray 5776	java/lang/Class
    //   9973: dup
    //   9974: iconst_0
    //   9975: ldc_w 1717
    //   9978: aastore
    //   9979: iconst_1
    //   9980: anewarray 1974	java/lang/String
    //   9983: dup
    //   9984: iconst_0
    //   9985: ldc_w 6436
    //   9988: aastore
    //   9989: aconst_null
    //   9990: aconst_null
    //   9991: aconst_null
    //   9992: ldc_w 6438
    //   9995: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   9998: astore -8
    //   10000: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   10003: dup
    //   10004: aload_0
    //   10005: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10008: getstatic 6384	org/telegram/ui/ActionBar/ThemeDescription:FLAG_IMAGECOLOR	I
    //   10011: iconst_1
    //   10012: anewarray 5776	java/lang/Class
    //   10015: dup
    //   10016: iconst_0
    //   10017: ldc_w 1717
    //   10020: aastore
    //   10021: iconst_1
    //   10022: anewarray 1974	java/lang/String
    //   10025: dup
    //   10026: iconst_0
    //   10027: ldc_w 6440
    //   10030: aastore
    //   10031: aconst_null
    //   10032: aconst_null
    //   10033: aconst_null
    //   10034: ldc_w 6432
    //   10037: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   10040: astore -7
    //   10042: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   10045: dup
    //   10046: aload_0
    //   10047: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10050: iconst_0
    //   10051: iconst_1
    //   10052: anewarray 5776	java/lang/Class
    //   10055: dup
    //   10056: iconst_0
    //   10057: ldc_w 1717
    //   10060: aastore
    //   10061: iconst_1
    //   10062: anewarray 1974	java/lang/String
    //   10065: dup
    //   10066: iconst_0
    //   10067: ldc_w 6442
    //   10070: aastore
    //   10071: aconst_null
    //   10072: aconst_null
    //   10073: aconst_null
    //   10074: ldc_w 6444
    //   10077: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   10080: astore -6
    //   10082: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   10085: dup
    //   10086: aload_0
    //   10087: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10090: iconst_0
    //   10091: iconst_1
    //   10092: anewarray 5776	java/lang/Class
    //   10095: dup
    //   10096: iconst_0
    //   10097: ldc_w 1717
    //   10100: aastore
    //   10101: iconst_1
    //   10102: anewarray 1974	java/lang/String
    //   10105: dup
    //   10106: iconst_0
    //   10107: ldc_w 6442
    //   10110: aastore
    //   10111: aconst_null
    //   10112: aconst_null
    //   10113: aconst_null
    //   10114: ldc_w 6446
    //   10117: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   10120: astore -5
    //   10122: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   10125: dup
    //   10126: aload_0
    //   10127: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10130: getstatic 6384	org/telegram/ui/ActionBar/ThemeDescription:FLAG_IMAGECOLOR	I
    //   10133: iconst_1
    //   10134: anewarray 5776	java/lang/Class
    //   10137: dup
    //   10138: iconst_0
    //   10139: ldc_w 1717
    //   10142: aastore
    //   10143: iconst_1
    //   10144: anewarray 1974	java/lang/String
    //   10147: dup
    //   10148: iconst_0
    //   10149: ldc_w 6448
    //   10152: aastore
    //   10153: aconst_null
    //   10154: aconst_null
    //   10155: aconst_null
    //   10156: ldc_w 6450
    //   10159: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   10162: astore -4
    //   10164: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   10167: dup
    //   10168: aload_0
    //   10169: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10172: iconst_0
    //   10173: iconst_1
    //   10174: anewarray 5776	java/lang/Class
    //   10177: dup
    //   10178: iconst_0
    //   10179: ldc_w 1717
    //   10182: aastore
    //   10183: iconst_1
    //   10184: anewarray 1974	java/lang/String
    //   10187: dup
    //   10188: iconst_0
    //   10189: ldc_w 6452
    //   10192: aastore
    //   10193: aconst_null
    //   10194: aconst_null
    //   10195: aconst_null
    //   10196: ldc_w 6454
    //   10199: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   10202: astore -3
    //   10204: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   10207: dup
    //   10208: aload_0
    //   10209: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10212: iconst_0
    //   10213: iconst_1
    //   10214: anewarray 5776	java/lang/Class
    //   10217: dup
    //   10218: iconst_0
    //   10219: ldc_w 1717
    //   10222: aastore
    //   10223: iconst_1
    //   10224: anewarray 1974	java/lang/String
    //   10227: dup
    //   10228: iconst_0
    //   10229: ldc_w 6456
    //   10232: aastore
    //   10233: aconst_null
    //   10234: aconst_null
    //   10235: aconst_null
    //   10236: ldc_w 6458
    //   10239: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   10242: astore -2
    //   10244: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   10247: dup
    //   10248: aload_0
    //   10249: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10252: iconst_0
    //   10253: iconst_1
    //   10254: anewarray 5776	java/lang/Class
    //   10257: dup
    //   10258: iconst_0
    //   10259: ldc_w 1717
    //   10262: aastore
    //   10263: iconst_1
    //   10264: anewarray 1974	java/lang/String
    //   10267: dup
    //   10268: iconst_0
    //   10269: ldc_w 6460
    //   10272: aastore
    //   10273: aconst_null
    //   10274: aconst_null
    //   10275: aconst_null
    //   10276: ldc_w 6462
    //   10279: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   10282: astore -1
    //   10284: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   10287: dup
    //   10288: aload_0
    //   10289: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10292: iconst_0
    //   10293: iconst_1
    //   10294: anewarray 5776	java/lang/Class
    //   10297: dup
    //   10298: iconst_0
    //   10299: ldc_w 1717
    //   10302: aastore
    //   10303: iconst_1
    //   10304: anewarray 1974	java/lang/String
    //   10307: dup
    //   10308: iconst_0
    //   10309: ldc_w 6464
    //   10312: aastore
    //   10313: aconst_null
    //   10314: aconst_null
    //   10315: aconst_null
    //   10316: ldc_w 6466
    //   10319: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   10322: wide
    //   10326: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   10329: dup
    //   10330: aload_0
    //   10331: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10334: iconst_0
    //   10335: iconst_1
    //   10336: anewarray 5776	java/lang/Class
    //   10339: dup
    //   10340: iconst_0
    //   10341: ldc_w 1717
    //   10344: aastore
    //   10345: iconst_1
    //   10346: anewarray 1974	java/lang/String
    //   10349: dup
    //   10350: iconst_0
    //   10351: ldc_w 6464
    //   10354: aastore
    //   10355: aconst_null
    //   10356: aconst_null
    //   10357: aconst_null
    //   10358: ldc_w 6468
    //   10361: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   10364: wide
    //   10368: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   10371: dup
    //   10372: aload_0
    //   10373: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10376: iconst_0
    //   10377: iconst_1
    //   10378: anewarray 5776	java/lang/Class
    //   10381: dup
    //   10382: iconst_0
    //   10383: ldc_w 1717
    //   10386: aastore
    //   10387: iconst_1
    //   10388: anewarray 1974	java/lang/String
    //   10391: dup
    //   10392: iconst_0
    //   10393: ldc_w 6470
    //   10396: aastore
    //   10397: aconst_null
    //   10398: aconst_null
    //   10399: aconst_null
    //   10400: ldc_w 6472
    //   10403: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   10406: wide
    //   10410: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   10413: dup
    //   10414: aload_0
    //   10415: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10418: iconst_0
    //   10419: iconst_1
    //   10420: anewarray 5776	java/lang/Class
    //   10423: dup
    //   10424: iconst_0
    //   10425: ldc_w 1717
    //   10428: aastore
    //   10429: iconst_1
    //   10430: anewarray 1974	java/lang/String
    //   10433: dup
    //   10434: iconst_0
    //   10435: ldc_w 6474
    //   10438: aastore
    //   10439: aconst_null
    //   10440: aconst_null
    //   10441: aconst_null
    //   10442: ldc_w 6472
    //   10445: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   10448: wide
    //   10452: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   10455: dup
    //   10456: aload_0
    //   10457: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10460: iconst_0
    //   10461: iconst_1
    //   10462: anewarray 5776	java/lang/Class
    //   10465: dup
    //   10466: iconst_0
    //   10467: ldc_w 1717
    //   10470: aastore
    //   10471: iconst_1
    //   10472: anewarray 1974	java/lang/String
    //   10475: dup
    //   10476: iconst_0
    //   10477: ldc_w 6476
    //   10480: aastore
    //   10481: aconst_null
    //   10482: aconst_null
    //   10483: aconst_null
    //   10484: ldc_w 6478
    //   10487: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   10490: wide
    //   10494: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   10497: dup
    //   10498: aload_0
    //   10499: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10502: getstatic 6481	org/telegram/ui/ActionBar/ThemeDescription:FLAG_DRAWABLESELECTEDSTATE	I
    //   10505: iconst_1
    //   10506: anewarray 5776	java/lang/Class
    //   10509: dup
    //   10510: iconst_0
    //   10511: ldc_w 1717
    //   10514: aastore
    //   10515: iconst_1
    //   10516: anewarray 1974	java/lang/String
    //   10519: dup
    //   10520: iconst_0
    //   10521: ldc_w 6470
    //   10524: aastore
    //   10525: aconst_null
    //   10526: aconst_null
    //   10527: aconst_null
    //   10528: ldc_w 6483
    //   10531: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   10534: wide
    //   10538: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   10541: dup
    //   10542: aload_0
    //   10543: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10546: getstatic 6481	org/telegram/ui/ActionBar/ThemeDescription:FLAG_DRAWABLESELECTEDSTATE	I
    //   10549: iconst_1
    //   10550: anewarray 5776	java/lang/Class
    //   10553: dup
    //   10554: iconst_0
    //   10555: ldc_w 1717
    //   10558: aastore
    //   10559: iconst_1
    //   10560: anewarray 1974	java/lang/String
    //   10563: dup
    //   10564: iconst_0
    //   10565: ldc_w 6474
    //   10568: aastore
    //   10569: aconst_null
    //   10570: aconst_null
    //   10571: aconst_null
    //   10572: ldc_w 6483
    //   10575: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   10578: wide
    //   10582: aload_0
    //   10583: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10586: ifnull +5107 -> 15693
    //   10589: aload_0
    //   10590: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10593: invokevirtual 6487	org/telegram/ui/Components/ChatActivityEnterView:getEmojiView	()Lorg/telegram/ui/Components/EmojiView;
    //   10596: astore 12
    //   10598: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   10601: dup
    //   10602: aload 12
    //   10604: iconst_0
    //   10605: iconst_1
    //   10606: anewarray 5776	java/lang/Class
    //   10609: dup
    //   10610: iconst_0
    //   10611: ldc_w 6489
    //   10614: aastore
    //   10615: aconst_null
    //   10616: aconst_null
    //   10617: aconst_null
    //   10618: aload_1
    //   10619: ldc_w 6491
    //   10622: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   10625: wide
    //   10629: aload_0
    //   10630: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10633: ifnull +5069 -> 15702
    //   10636: aload_0
    //   10637: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10640: invokevirtual 6487	org/telegram/ui/Components/ChatActivityEnterView:getEmojiView	()Lorg/telegram/ui/Components/EmojiView;
    //   10643: astore 12
    //   10645: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   10648: dup
    //   10649: aload 12
    //   10651: iconst_0
    //   10652: iconst_1
    //   10653: anewarray 5776	java/lang/Class
    //   10656: dup
    //   10657: iconst_0
    //   10658: ldc_w 6489
    //   10661: aastore
    //   10662: aconst_null
    //   10663: aconst_null
    //   10664: aconst_null
    //   10665: aload_1
    //   10666: ldc_w 6493
    //   10669: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   10672: wide
    //   10676: aload_0
    //   10677: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10680: ifnull +5031 -> 15711
    //   10683: aload_0
    //   10684: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10687: invokevirtual 6487	org/telegram/ui/Components/ChatActivityEnterView:getEmojiView	()Lorg/telegram/ui/Components/EmojiView;
    //   10690: astore 12
    //   10692: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   10695: dup
    //   10696: aload 12
    //   10698: iconst_0
    //   10699: iconst_1
    //   10700: anewarray 5776	java/lang/Class
    //   10703: dup
    //   10704: iconst_0
    //   10705: ldc_w 6489
    //   10708: aastore
    //   10709: aconst_null
    //   10710: aconst_null
    //   10711: aconst_null
    //   10712: aload_1
    //   10713: ldc_w 6495
    //   10716: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   10719: wide
    //   10723: aload_0
    //   10724: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10727: ifnull +4993 -> 15720
    //   10730: aload_0
    //   10731: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10734: invokevirtual 6487	org/telegram/ui/Components/ChatActivityEnterView:getEmojiView	()Lorg/telegram/ui/Components/EmojiView;
    //   10737: astore 12
    //   10739: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   10742: dup
    //   10743: aload 12
    //   10745: iconst_0
    //   10746: iconst_1
    //   10747: anewarray 5776	java/lang/Class
    //   10750: dup
    //   10751: iconst_0
    //   10752: ldc_w 6489
    //   10755: aastore
    //   10756: aconst_null
    //   10757: aconst_null
    //   10758: aconst_null
    //   10759: aload_1
    //   10760: ldc_w 6497
    //   10763: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   10766: wide
    //   10770: aload_0
    //   10771: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10774: ifnull +4955 -> 15729
    //   10777: aload_0
    //   10778: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10781: invokevirtual 6487	org/telegram/ui/Components/ChatActivityEnterView:getEmojiView	()Lorg/telegram/ui/Components/EmojiView;
    //   10784: astore 12
    //   10786: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   10789: dup
    //   10790: aload 12
    //   10792: iconst_0
    //   10793: iconst_1
    //   10794: anewarray 5776	java/lang/Class
    //   10797: dup
    //   10798: iconst_0
    //   10799: ldc_w 6489
    //   10802: aastore
    //   10803: aconst_null
    //   10804: aconst_null
    //   10805: aconst_null
    //   10806: aload_1
    //   10807: ldc_w 6499
    //   10810: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   10813: wide
    //   10817: aload_0
    //   10818: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10821: ifnull +4917 -> 15738
    //   10824: aload_0
    //   10825: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10828: invokevirtual 6487	org/telegram/ui/Components/ChatActivityEnterView:getEmojiView	()Lorg/telegram/ui/Components/EmojiView;
    //   10831: astore 12
    //   10833: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   10836: dup
    //   10837: aload 12
    //   10839: iconst_0
    //   10840: iconst_1
    //   10841: anewarray 5776	java/lang/Class
    //   10844: dup
    //   10845: iconst_0
    //   10846: ldc_w 6489
    //   10849: aastore
    //   10850: aconst_null
    //   10851: aconst_null
    //   10852: aconst_null
    //   10853: aload_1
    //   10854: ldc_w 6501
    //   10857: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   10860: wide
    //   10864: aload_0
    //   10865: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10868: ifnull +4879 -> 15747
    //   10871: aload_0
    //   10872: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10875: invokevirtual 6487	org/telegram/ui/Components/ChatActivityEnterView:getEmojiView	()Lorg/telegram/ui/Components/EmojiView;
    //   10878: astore 12
    //   10880: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   10883: dup
    //   10884: aload 12
    //   10886: iconst_0
    //   10887: iconst_1
    //   10888: anewarray 5776	java/lang/Class
    //   10891: dup
    //   10892: iconst_0
    //   10893: ldc_w 6489
    //   10896: aastore
    //   10897: aconst_null
    //   10898: aconst_null
    //   10899: aconst_null
    //   10900: aload_1
    //   10901: ldc_w 6503
    //   10904: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   10907: wide
    //   10911: aload_0
    //   10912: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10915: ifnull +4841 -> 15756
    //   10918: aload_0
    //   10919: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10922: invokevirtual 6487	org/telegram/ui/Components/ChatActivityEnterView:getEmojiView	()Lorg/telegram/ui/Components/EmojiView;
    //   10925: astore 12
    //   10927: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   10930: dup
    //   10931: aload 12
    //   10933: iconst_0
    //   10934: iconst_1
    //   10935: anewarray 5776	java/lang/Class
    //   10938: dup
    //   10939: iconst_0
    //   10940: ldc_w 6489
    //   10943: aastore
    //   10944: aconst_null
    //   10945: aconst_null
    //   10946: aconst_null
    //   10947: aload_1
    //   10948: ldc_w 6505
    //   10951: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   10954: wide
    //   10958: aload_0
    //   10959: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10962: ifnull +4803 -> 15765
    //   10965: aload_0
    //   10966: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10969: invokevirtual 6487	org/telegram/ui/Components/ChatActivityEnterView:getEmojiView	()Lorg/telegram/ui/Components/EmojiView;
    //   10972: astore 12
    //   10974: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   10977: dup
    //   10978: aload 12
    //   10980: iconst_0
    //   10981: iconst_1
    //   10982: anewarray 5776	java/lang/Class
    //   10985: dup
    //   10986: iconst_0
    //   10987: ldc_w 6489
    //   10990: aastore
    //   10991: aconst_null
    //   10992: aconst_null
    //   10993: aconst_null
    //   10994: aload_1
    //   10995: ldc_w 6507
    //   10998: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11001: wide
    //   11005: aload_0
    //   11006: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   11009: ifnull +4765 -> 15774
    //   11012: aload_0
    //   11013: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   11016: invokevirtual 6487	org/telegram/ui/Components/ChatActivityEnterView:getEmojiView	()Lorg/telegram/ui/Components/EmojiView;
    //   11019: astore 12
    //   11021: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11024: dup
    //   11025: aload 12
    //   11027: iconst_0
    //   11028: iconst_1
    //   11029: anewarray 5776	java/lang/Class
    //   11032: dup
    //   11033: iconst_0
    //   11034: ldc_w 6489
    //   11037: aastore
    //   11038: aconst_null
    //   11039: aconst_null
    //   11040: aconst_null
    //   11041: aload_1
    //   11042: ldc_w 6509
    //   11045: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11048: wide
    //   11052: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11055: dup
    //   11056: aconst_null
    //   11057: iconst_0
    //   11058: aconst_null
    //   11059: aconst_null
    //   11060: aconst_null
    //   11061: aconst_null
    //   11062: ldc_w 6511
    //   11065: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11068: wide
    //   11072: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11075: dup
    //   11076: aconst_null
    //   11077: iconst_0
    //   11078: aconst_null
    //   11079: aconst_null
    //   11080: aconst_null
    //   11081: aconst_null
    //   11082: ldc_w 6513
    //   11085: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11088: wide
    //   11092: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11095: dup
    //   11096: aconst_null
    //   11097: iconst_0
    //   11098: aconst_null
    //   11099: aconst_null
    //   11100: aconst_null
    //   11101: aconst_null
    //   11102: ldc_w 6515
    //   11105: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11108: wide
    //   11112: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11115: dup
    //   11116: aload_0
    //   11117: getfield 833	org/telegram/ui/ChatActivity:fragmentView	Landroid/view/View;
    //   11120: getstatic 5685	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUND	I
    //   11123: getstatic 6518	org/telegram/ui/ActionBar/ThemeDescription:FLAG_CHECKTAG	I
    //   11126: ior
    //   11127: iconst_1
    //   11128: anewarray 5776	java/lang/Class
    //   11131: dup
    //   11132: iconst_0
    //   11133: ldc_w 2958
    //   11136: aastore
    //   11137: iconst_1
    //   11138: anewarray 1974	java/lang/String
    //   11141: dup
    //   11142: iconst_0
    //   11143: ldc_w 6520
    //   11146: aastore
    //   11147: aconst_null
    //   11148: aconst_null
    //   11149: aconst_null
    //   11150: ldc_w 6522
    //   11153: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11156: wide
    //   11160: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11163: dup
    //   11164: aload_0
    //   11165: getfield 833	org/telegram/ui/ChatActivity:fragmentView	Landroid/view/View;
    //   11168: getstatic 6384	org/telegram/ui/ActionBar/ThemeDescription:FLAG_IMAGECOLOR	I
    //   11171: iconst_1
    //   11172: anewarray 5776	java/lang/Class
    //   11175: dup
    //   11176: iconst_0
    //   11177: ldc_w 2958
    //   11180: aastore
    //   11181: iconst_1
    //   11182: anewarray 1974	java/lang/String
    //   11185: dup
    //   11186: iconst_0
    //   11187: ldc_w 6524
    //   11190: aastore
    //   11191: aconst_null
    //   11192: aconst_null
    //   11193: aconst_null
    //   11194: ldc_w 6526
    //   11197: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11200: wide
    //   11204: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11207: dup
    //   11208: aload_0
    //   11209: getfield 833	org/telegram/ui/ChatActivity:fragmentView	Landroid/view/View;
    //   11212: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   11215: getstatic 6518	org/telegram/ui/ActionBar/ThemeDescription:FLAG_CHECKTAG	I
    //   11218: ior
    //   11219: iconst_1
    //   11220: anewarray 5776	java/lang/Class
    //   11223: dup
    //   11224: iconst_0
    //   11225: ldc_w 2958
    //   11228: aastore
    //   11229: iconst_1
    //   11230: anewarray 1974	java/lang/String
    //   11233: dup
    //   11234: iconst_0
    //   11235: ldc_w 6528
    //   11238: aastore
    //   11239: aconst_null
    //   11240: aconst_null
    //   11241: aconst_null
    //   11242: ldc_w 6530
    //   11245: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11248: wide
    //   11252: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11255: dup
    //   11256: aload_0
    //   11257: getfield 833	org/telegram/ui/ChatActivity:fragmentView	Landroid/view/View;
    //   11260: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   11263: getstatic 6533	org/telegram/ui/ActionBar/ThemeDescription:FLAG_FASTSCROLL	I
    //   11266: ior
    //   11267: iconst_1
    //   11268: anewarray 5776	java/lang/Class
    //   11271: dup
    //   11272: iconst_0
    //   11273: ldc_w 2958
    //   11276: aastore
    //   11277: iconst_1
    //   11278: anewarray 1974	java/lang/String
    //   11281: dup
    //   11282: iconst_0
    //   11283: ldc_w 6528
    //   11286: aastore
    //   11287: aconst_null
    //   11288: aconst_null
    //   11289: aconst_null
    //   11290: ldc_w 6535
    //   11293: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11296: wide
    //   11300: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11303: dup
    //   11304: aload_0
    //   11305: getfield 833	org/telegram/ui/ChatActivity:fragmentView	Landroid/view/View;
    //   11308: getstatic 6384	org/telegram/ui/ActionBar/ThemeDescription:FLAG_IMAGECOLOR	I
    //   11311: iconst_1
    //   11312: anewarray 5776	java/lang/Class
    //   11315: dup
    //   11316: iconst_0
    //   11317: ldc_w 2958
    //   11320: aastore
    //   11321: iconst_1
    //   11322: anewarray 1974	java/lang/String
    //   11325: dup
    //   11326: iconst_0
    //   11327: ldc_w 6537
    //   11330: aastore
    //   11331: aconst_null
    //   11332: aconst_null
    //   11333: aconst_null
    //   11334: ldc_w 6539
    //   11337: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11340: wide
    //   11344: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11347: dup
    //   11348: aload_0
    //   11349: getfield 833	org/telegram/ui/ChatActivity:fragmentView	Landroid/view/View;
    //   11352: getstatic 5685	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUND	I
    //   11355: getstatic 6518	org/telegram/ui/ActionBar/ThemeDescription:FLAG_CHECKTAG	I
    //   11358: ior
    //   11359: iconst_1
    //   11360: anewarray 5776	java/lang/Class
    //   11363: dup
    //   11364: iconst_0
    //   11365: ldc_w 2958
    //   11368: aastore
    //   11369: iconst_1
    //   11370: anewarray 1974	java/lang/String
    //   11373: dup
    //   11374: iconst_0
    //   11375: ldc_w 6520
    //   11378: aastore
    //   11379: aconst_null
    //   11380: aconst_null
    //   11381: aconst_null
    //   11382: ldc_w 6541
    //   11385: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11388: wide
    //   11392: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11395: dup
    //   11396: aload_0
    //   11397: getfield 833	org/telegram/ui/ChatActivity:fragmentView	Landroid/view/View;
    //   11400: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   11403: getstatic 6518	org/telegram/ui/ActionBar/ThemeDescription:FLAG_CHECKTAG	I
    //   11406: ior
    //   11407: iconst_1
    //   11408: anewarray 5776	java/lang/Class
    //   11411: dup
    //   11412: iconst_0
    //   11413: ldc_w 2958
    //   11416: aastore
    //   11417: iconst_1
    //   11418: anewarray 1974	java/lang/String
    //   11421: dup
    //   11422: iconst_0
    //   11423: ldc_w 6528
    //   11426: aastore
    //   11427: aconst_null
    //   11428: aconst_null
    //   11429: aconst_null
    //   11430: ldc_w 6543
    //   11433: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11436: wide
    //   11440: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11443: dup
    //   11444: aload_0
    //   11445: getfield 4661	org/telegram/ui/ChatActivity:pinnedLineView	Landroid/view/View;
    //   11448: getstatic 5685	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUND	I
    //   11451: aconst_null
    //   11452: aconst_null
    //   11453: aconst_null
    //   11454: aconst_null
    //   11455: ldc_w 4663
    //   11458: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11461: wide
    //   11465: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11468: dup
    //   11469: aload_0
    //   11470: getfield 4130	org/telegram/ui/ChatActivity:pinnedMessageNameTextView	Lorg/telegram/ui/ActionBar/SimpleTextView;
    //   11473: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   11476: aconst_null
    //   11477: aconst_null
    //   11478: aconst_null
    //   11479: aconst_null
    //   11480: ldc_w 4669
    //   11483: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11486: wide
    //   11490: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11493: dup
    //   11494: aload_0
    //   11495: getfield 4133	org/telegram/ui/ChatActivity:pinnedMessageTextView	Lorg/telegram/ui/ActionBar/SimpleTextView;
    //   11498: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   11501: aconst_null
    //   11502: aconst_null
    //   11503: aconst_null
    //   11504: aconst_null
    //   11505: ldc_w 4672
    //   11508: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11511: wide
    //   11515: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11518: dup
    //   11519: aload_0
    //   11520: getfield 4725	org/telegram/ui/ChatActivity:alertNameTextView	Landroid/widget/TextView;
    //   11523: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   11526: aconst_null
    //   11527: aconst_null
    //   11528: aconst_null
    //   11529: aconst_null
    //   11530: ldc_w 4669
    //   11533: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11536: wide
    //   11540: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11543: dup
    //   11544: aload_0
    //   11545: getfield 4737	org/telegram/ui/ChatActivity:alertTextView	Landroid/widget/TextView;
    //   11548: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   11551: aconst_null
    //   11552: aconst_null
    //   11553: aconst_null
    //   11554: aconst_null
    //   11555: ldc_w 4672
    //   11558: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11561: wide
    //   11565: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11568: dup
    //   11569: aload_0
    //   11570: getfield 4676	org/telegram/ui/ChatActivity:closePinned	Landroid/widget/ImageView;
    //   11573: getstatic 6384	org/telegram/ui/ActionBar/ThemeDescription:FLAG_IMAGECOLOR	I
    //   11576: aconst_null
    //   11577: aconst_null
    //   11578: aconst_null
    //   11579: aconst_null
    //   11580: ldc_w 4682
    //   11583: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11586: wide
    //   11590: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11593: dup
    //   11594: aload_0
    //   11595: getfield 4722	org/telegram/ui/ChatActivity:closeReportSpam	Landroid/widget/ImageView;
    //   11598: getstatic 6384	org/telegram/ui/ActionBar/ThemeDescription:FLAG_IMAGECOLOR	I
    //   11601: aconst_null
    //   11602: aconst_null
    //   11603: aconst_null
    //   11604: aconst_null
    //   11605: ldc_w 4682
    //   11608: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11611: wide
    //   11615: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11618: dup
    //   11619: aload_0
    //   11620: getfield 1090	org/telegram/ui/ChatActivity:reportSpamView	Landroid/widget/LinearLayout;
    //   11623: getstatic 6267	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUNDFILTER	I
    //   11626: aconst_null
    //   11627: aconst_null
    //   11628: aconst_null
    //   11629: aconst_null
    //   11630: ldc_w 4651
    //   11633: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11636: wide
    //   11640: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11643: dup
    //   11644: aload_0
    //   11645: getfield 1229	org/telegram/ui/ChatActivity:alertView	Landroid/widget/FrameLayout;
    //   11648: getstatic 6267	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUNDFILTER	I
    //   11651: aconst_null
    //   11652: aconst_null
    //   11653: aconst_null
    //   11654: aconst_null
    //   11655: ldc_w 4651
    //   11658: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11661: wide
    //   11665: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11668: dup
    //   11669: aload_0
    //   11670: getfield 775	org/telegram/ui/ChatActivity:pinnedMessageView	Landroid/widget/FrameLayout;
    //   11673: getstatic 6267	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUNDFILTER	I
    //   11676: aconst_null
    //   11677: aconst_null
    //   11678: aconst_null
    //   11679: aconst_null
    //   11680: ldc_w 4651
    //   11683: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11686: wide
    //   11690: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11693: dup
    //   11694: aload_0
    //   11695: getfield 4021	org/telegram/ui/ChatActivity:addToContactsButton	Landroid/widget/TextView;
    //   11698: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   11701: aconst_null
    //   11702: aconst_null
    //   11703: aconst_null
    //   11704: aconst_null
    //   11705: ldc_w 4701
    //   11708: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11711: wide
    //   11715: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11718: dup
    //   11719: aload_0
    //   11720: getfield 4019	org/telegram/ui/ChatActivity:reportSpamButton	Landroid/widget/TextView;
    //   11723: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   11726: aconst_null
    //   11727: aconst_null
    //   11728: aconst_null
    //   11729: aconst_null
    //   11730: ldc_w 4716
    //   11733: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11736: wide
    //   11740: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11743: dup
    //   11744: aload_0
    //   11745: getfield 4880	org/telegram/ui/ChatActivity:replyLineView	Landroid/view/View;
    //   11748: getstatic 5685	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUND	I
    //   11751: aconst_null
    //   11752: aconst_null
    //   11753: aconst_null
    //   11754: aconst_null
    //   11755: ldc_w 4882
    //   11758: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11761: wide
    //   11765: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11768: dup
    //   11769: aload_0
    //   11770: getfield 4895	org/telegram/ui/ChatActivity:replyNameTextView	Lorg/telegram/ui/ActionBar/SimpleTextView;
    //   11773: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   11776: aconst_null
    //   11777: aconst_null
    //   11778: aconst_null
    //   11779: aconst_null
    //   11780: ldc_w 4897
    //   11783: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11786: wide
    //   11790: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11793: dup
    //   11794: aload_0
    //   11795: getfield 4900	org/telegram/ui/ChatActivity:replyObjectTextView	Lorg/telegram/ui/ActionBar/SimpleTextView;
    //   11798: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   11801: aconst_null
    //   11802: aconst_null
    //   11803: aconst_null
    //   11804: aconst_null
    //   11805: ldc_w 4902
    //   11808: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11811: wide
    //   11815: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11818: dup
    //   11819: aload_0
    //   11820: getfield 4884	org/telegram/ui/ChatActivity:replyIconImageView	Landroid/widget/ImageView;
    //   11823: getstatic 6384	org/telegram/ui/ActionBar/ThemeDescription:FLAG_IMAGECOLOR	I
    //   11826: aconst_null
    //   11827: aconst_null
    //   11828: aconst_null
    //   11829: aconst_null
    //   11830: ldc_w 4886
    //   11833: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11836: wide
    //   11840: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11843: dup
    //   11844: aload_0
    //   11845: getfield 4888	org/telegram/ui/ChatActivity:replyCloseImageView	Landroid/widget/ImageView;
    //   11848: getstatic 6384	org/telegram/ui/ActionBar/ThemeDescription:FLAG_IMAGECOLOR	I
    //   11851: aconst_null
    //   11852: aconst_null
    //   11853: aconst_null
    //   11854: aconst_null
    //   11855: ldc_w 4890
    //   11858: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11861: wide
    //   11865: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11868: dup
    //   11869: aload_0
    //   11870: getfield 4226	org/telegram/ui/ChatActivity:searchUpButton	Landroid/widget/ImageView;
    //   11873: getstatic 6384	org/telegram/ui/ActionBar/ThemeDescription:FLAG_IMAGECOLOR	I
    //   11876: aconst_null
    //   11877: aconst_null
    //   11878: aconst_null
    //   11879: aconst_null
    //   11880: ldc_w 4941
    //   11883: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11886: wide
    //   11890: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11893: dup
    //   11894: aload_0
    //   11895: getfield 4233	org/telegram/ui/ChatActivity:searchDownButton	Landroid/widget/ImageView;
    //   11898: getstatic 6384	org/telegram/ui/ActionBar/ThemeDescription:FLAG_IMAGECOLOR	I
    //   11901: aconst_null
    //   11902: aconst_null
    //   11903: aconst_null
    //   11904: aconst_null
    //   11905: ldc_w 4941
    //   11908: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11911: wide
    //   11915: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11918: dup
    //   11919: aload_0
    //   11920: getfield 1395	org/telegram/ui/ChatActivity:searchCalendarButton	Landroid/widget/ImageView;
    //   11923: getstatic 6384	org/telegram/ui/ActionBar/ThemeDescription:FLAG_IMAGECOLOR	I
    //   11926: aconst_null
    //   11927: aconst_null
    //   11928: aconst_null
    //   11929: aconst_null
    //   11930: ldc_w 4941
    //   11933: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11936: wide
    //   11940: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11943: dup
    //   11944: aload_0
    //   11945: getfield 1398	org/telegram/ui/ChatActivity:searchUserButton	Landroid/widget/ImageView;
    //   11948: getstatic 6384	org/telegram/ui/ActionBar/ThemeDescription:FLAG_IMAGECOLOR	I
    //   11951: aconst_null
    //   11952: aconst_null
    //   11953: aconst_null
    //   11954: aconst_null
    //   11955: ldc_w 4941
    //   11958: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11961: wide
    //   11965: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11968: dup
    //   11969: aload_0
    //   11970: getfield 4239	org/telegram/ui/ChatActivity:searchCountText	Lorg/telegram/ui/ActionBar/SimpleTextView;
    //   11973: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   11976: aconst_null
    //   11977: aconst_null
    //   11978: aconst_null
    //   11979: aconst_null
    //   11980: ldc_w 4950
    //   11983: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11986: wide
    //   11990: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11993: dup
    //   11994: aload_0
    //   11995: getfield 4251	org/telegram/ui/ChatActivity:bottomOverlayText	Landroid/widget/TextView;
    //   11998: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   12001: aconst_null
    //   12002: aconst_null
    //   12003: aconst_null
    //   12004: aconst_null
    //   12005: ldc_w 4958
    //   12008: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12011: wide
    //   12015: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12018: dup
    //   12019: aload_0
    //   12020: getfield 3939	org/telegram/ui/ChatActivity:bottomOverlayChatText	Landroid/widget/TextView;
    //   12023: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   12026: aconst_null
    //   12027: aconst_null
    //   12028: aconst_null
    //   12029: aconst_null
    //   12030: ldc_w 4963
    //   12033: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12036: wide
    //   12040: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12043: dup
    //   12044: aload_0
    //   12045: getfield 4259	org/telegram/ui/ChatActivity:bigEmptyView	Lorg/telegram/ui/Components/ChatBigEmptyView;
    //   12048: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   12051: aconst_null
    //   12052: aconst_null
    //   12053: aconst_null
    //   12054: aconst_null
    //   12055: ldc_w 4638
    //   12058: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12061: wide
    //   12065: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12068: dup
    //   12069: aload_0
    //   12070: getfield 4992	org/telegram/ui/ChatActivity:emptyView	Landroid/widget/TextView;
    //   12073: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   12076: aconst_null
    //   12077: aconst_null
    //   12078: aconst_null
    //   12079: aconst_null
    //   12080: ldc_w 4638
    //   12083: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12086: astore_1
    //   12087: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12090: dup
    //   12091: aload_0
    //   12092: getfield 4632	org/telegram/ui/ChatActivity:progressBar	Lorg/telegram/ui/Components/RadialProgressView;
    //   12095: getstatic 6546	org/telegram/ui/ActionBar/ThemeDescription:FLAG_PROGRESSBAR	I
    //   12098: aconst_null
    //   12099: aconst_null
    //   12100: aconst_null
    //   12101: aconst_null
    //   12102: ldc_w 4638
    //   12105: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12108: wide
    //   12112: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12115: dup
    //   12116: aload_0
    //   12117: getfield 4924	org/telegram/ui/ChatActivity:stickersPanelArrow	Landroid/widget/ImageView;
    //   12120: getstatic 6384	org/telegram/ui/ActionBar/ThemeDescription:FLAG_IMAGECOLOR	I
    //   12123: aconst_null
    //   12124: aconst_null
    //   12125: aconst_null
    //   12126: aconst_null
    //   12127: ldc_w 4927
    //   12130: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12133: wide
    //   12137: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12140: dup
    //   12141: aload_0
    //   12142: getfield 1081	org/telegram/ui/ChatActivity:stickersListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   12145: getstatic 6267	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUNDFILTER	I
    //   12148: iconst_1
    //   12149: anewarray 5776	java/lang/Class
    //   12152: dup
    //   12153: iconst_0
    //   12154: ldc_w 6548
    //   12157: aastore
    //   12158: aconst_null
    //   12159: aconst_null
    //   12160: aconst_null
    //   12161: ldc_w 4927
    //   12164: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12167: wide
    //   12171: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12174: dup
    //   12175: aload_0
    //   12176: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   12179: getstatic 6551	org/telegram/ui/ActionBar/ThemeDescription:FLAG_USEBACKGROUNDDRAWABLE	I
    //   12182: iconst_1
    //   12183: anewarray 5776	java/lang/Class
    //   12186: dup
    //   12187: iconst_0
    //   12188: ldc_w 6553
    //   12191: aastore
    //   12192: iconst_1
    //   12193: anewarray 1974	java/lang/String
    //   12196: dup
    //   12197: iconst_0
    //   12198: ldc_w 6555
    //   12201: aastore
    //   12202: aconst_null
    //   12203: aconst_null
    //   12204: aconst_null
    //   12205: ldc_w 6557
    //   12208: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12211: wide
    //   12215: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12218: dup
    //   12219: aload_0
    //   12220: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   12223: getstatic 6384	org/telegram/ui/ActionBar/ThemeDescription:FLAG_IMAGECOLOR	I
    //   12226: iconst_1
    //   12227: anewarray 5776	java/lang/Class
    //   12230: dup
    //   12231: iconst_0
    //   12232: ldc_w 6553
    //   12235: aastore
    //   12236: iconst_1
    //   12237: anewarray 1974	java/lang/String
    //   12240: dup
    //   12241: iconst_0
    //   12242: ldc_w 6559
    //   12245: aastore
    //   12246: aconst_null
    //   12247: aconst_null
    //   12248: aconst_null
    //   12249: ldc_w 6561
    //   12252: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12255: wide
    //   12259: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12262: dup
    //   12263: aload_0
    //   12264: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   12267: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   12270: iconst_1
    //   12271: anewarray 5776	java/lang/Class
    //   12274: dup
    //   12275: iconst_0
    //   12276: ldc_w 6553
    //   12279: aastore
    //   12280: iconst_1
    //   12281: anewarray 1974	java/lang/String
    //   12284: dup
    //   12285: iconst_0
    //   12286: ldc_w 6563
    //   12289: aastore
    //   12290: aconst_null
    //   12291: aconst_null
    //   12292: aconst_null
    //   12293: ldc_w 6565
    //   12296: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12299: wide
    //   12303: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12306: dup
    //   12307: aload_0
    //   12308: getfield 4615	org/telegram/ui/ChatActivity:progressView2	Landroid/view/View;
    //   12311: getstatic 6568	org/telegram/ui/ActionBar/ThemeDescription:FLAG_SERVICEBACKGROUND	I
    //   12314: aconst_null
    //   12315: aconst_null
    //   12316: aconst_null
    //   12317: aconst_null
    //   12318: ldc_w 5884
    //   12321: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12324: wide
    //   12328: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12331: dup
    //   12332: aload_0
    //   12333: getfield 4992	org/telegram/ui/ChatActivity:emptyView	Landroid/widget/TextView;
    //   12336: getstatic 6568	org/telegram/ui/ActionBar/ThemeDescription:FLAG_SERVICEBACKGROUND	I
    //   12339: aconst_null
    //   12340: aconst_null
    //   12341: aconst_null
    //   12342: aconst_null
    //   12343: ldc_w 5884
    //   12346: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12349: wide
    //   12353: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12356: dup
    //   12357: aload_0
    //   12358: getfield 4259	org/telegram/ui/ChatActivity:bigEmptyView	Lorg/telegram/ui/Components/ChatBigEmptyView;
    //   12361: getstatic 6568	org/telegram/ui/ActionBar/ThemeDescription:FLAG_SERVICEBACKGROUND	I
    //   12364: aconst_null
    //   12365: aconst_null
    //   12366: aconst_null
    //   12367: aconst_null
    //   12368: ldc_w 5884
    //   12371: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12374: wide
    //   12378: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12381: dup
    //   12382: aload_0
    //   12383: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   12386: getstatic 6568	org/telegram/ui/ActionBar/ThemeDescription:FLAG_SERVICEBACKGROUND	I
    //   12389: iconst_1
    //   12390: anewarray 5776	java/lang/Class
    //   12393: dup
    //   12394: iconst_0
    //   12395: ldc_w 6570
    //   12398: aastore
    //   12399: iconst_1
    //   12400: anewarray 1974	java/lang/String
    //   12403: dup
    //   12404: iconst_0
    //   12405: ldc_w 6563
    //   12408: aastore
    //   12409: aconst_null
    //   12410: aconst_null
    //   12411: aconst_null
    //   12412: ldc_w 5884
    //   12415: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12418: wide
    //   12422: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12425: dup
    //   12426: aload_0
    //   12427: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   12430: getstatic 6546	org/telegram/ui/ActionBar/ThemeDescription:FLAG_PROGRESSBAR	I
    //   12433: iconst_1
    //   12434: anewarray 5776	java/lang/Class
    //   12437: dup
    //   12438: iconst_0
    //   12439: ldc_w 6570
    //   12442: aastore
    //   12443: iconst_1
    //   12444: anewarray 1974	java/lang/String
    //   12447: dup
    //   12448: iconst_0
    //   12449: ldc_w 6563
    //   12452: aastore
    //   12453: aconst_null
    //   12454: aconst_null
    //   12455: aconst_null
    //   12456: ldc_w 4638
    //   12459: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12462: wide
    //   12466: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12469: dup
    //   12470: aload_0
    //   12471: getfield 1374	org/telegram/ui/ChatActivity:mentionListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   12474: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   12477: iconst_1
    //   12478: anewarray 5776	java/lang/Class
    //   12481: dup
    //   12482: iconst_0
    //   12483: ldc_w 6572
    //   12486: aastore
    //   12487: iconst_1
    //   12488: anewarray 1974	java/lang/String
    //   12491: dup
    //   12492: iconst_0
    //   12493: ldc_w 6563
    //   12496: aastore
    //   12497: aconst_null
    //   12498: aconst_null
    //   12499: aconst_null
    //   12500: ldc_w 6574
    //   12503: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12506: wide
    //   12510: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12513: dup
    //   12514: aload_0
    //   12515: getfield 1374	org/telegram/ui/ChatActivity:mentionListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   12518: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   12521: iconst_1
    //   12522: anewarray 5776	java/lang/Class
    //   12525: dup
    //   12526: iconst_0
    //   12527: ldc_w 6576
    //   12530: aastore
    //   12531: iconst_1
    //   12532: anewarray 1974	java/lang/String
    //   12535: dup
    //   12536: iconst_0
    //   12537: ldc_w 6578
    //   12540: aastore
    //   12541: aconst_null
    //   12542: aconst_null
    //   12543: aconst_null
    //   12544: ldc_w 6580
    //   12547: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12550: wide
    //   12554: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12557: dup
    //   12558: aload_0
    //   12559: getfield 1374	org/telegram/ui/ChatActivity:mentionListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   12562: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   12565: iconst_1
    //   12566: anewarray 5776	java/lang/Class
    //   12569: dup
    //   12570: iconst_0
    //   12571: ldc_w 6576
    //   12574: aastore
    //   12575: iconst_1
    //   12576: anewarray 1974	java/lang/String
    //   12579: dup
    //   12580: iconst_0
    //   12581: ldc_w 6582
    //   12584: aastore
    //   12585: aconst_null
    //   12586: aconst_null
    //   12587: aconst_null
    //   12588: ldc_w 6584
    //   12591: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12594: wide
    //   12598: aload_0
    //   12599: getfield 1374	org/telegram/ui/ChatActivity:mentionListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   12602: astore 12
    //   12604: getstatic 6587	org/telegram/ui/ActionBar/Theme:chat_inlineResultFile	Landroid/graphics/drawable/Drawable;
    //   12607: wide
    //   12611: getstatic 6590	org/telegram/ui/ActionBar/Theme:chat_inlineResultAudio	Landroid/graphics/drawable/Drawable;
    //   12614: wide
    //   12618: getstatic 6593	org/telegram/ui/ActionBar/Theme:chat_inlineResultLocation	Landroid/graphics/drawable/Drawable;
    //   12621: wide
    //   12625: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12628: dup
    //   12629: aload 12
    //   12631: iconst_0
    //   12632: iconst_1
    //   12633: anewarray 5776	java/lang/Class
    //   12636: dup
    //   12637: iconst_0
    //   12638: ldc_w 5443
    //   12641: aastore
    //   12642: aconst_null
    //   12643: iconst_3
    //   12644: anewarray 4185	android/graphics/drawable/Drawable
    //   12647: dup
    //   12648: iconst_0
    //   12649: wide
    //   12653: aastore
    //   12654: dup
    //   12655: iconst_1
    //   12656: wide
    //   12660: aastore
    //   12661: dup
    //   12662: iconst_2
    //   12663: wide
    //   12667: aastore
    //   12668: aconst_null
    //   12669: ldc_w 6595
    //   12672: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12675: wide
    //   12679: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12682: dup
    //   12683: aload_0
    //   12684: getfield 1374	org/telegram/ui/ChatActivity:mentionListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   12687: iconst_0
    //   12688: iconst_1
    //   12689: anewarray 5776	java/lang/Class
    //   12692: dup
    //   12693: iconst_0
    //   12694: ldc_w 5443
    //   12697: aastore
    //   12698: aconst_null
    //   12699: aconst_null
    //   12700: aconst_null
    //   12701: ldc_w 6597
    //   12704: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12707: wide
    //   12711: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12714: dup
    //   12715: aload_0
    //   12716: getfield 1374	org/telegram/ui/ChatActivity:mentionListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   12719: iconst_0
    //   12720: iconst_1
    //   12721: anewarray 5776	java/lang/Class
    //   12724: dup
    //   12725: iconst_0
    //   12726: ldc_w 5443
    //   12729: aastore
    //   12730: aconst_null
    //   12731: aconst_null
    //   12732: aconst_null
    //   12733: ldc_w 6599
    //   12736: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12739: wide
    //   12743: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12746: dup
    //   12747: aload_0
    //   12748: getfield 1374	org/telegram/ui/ChatActivity:mentionListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   12751: iconst_0
    //   12752: iconst_1
    //   12753: anewarray 5776	java/lang/Class
    //   12756: dup
    //   12757: iconst_0
    //   12758: ldc_w 5443
    //   12761: aastore
    //   12762: aconst_null
    //   12763: aconst_null
    //   12764: aconst_null
    //   12765: ldc_w 6580
    //   12768: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12771: wide
    //   12775: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12778: dup
    //   12779: aload_0
    //   12780: getfield 1374	org/telegram/ui/ChatActivity:mentionListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   12783: iconst_0
    //   12784: iconst_1
    //   12785: anewarray 5776	java/lang/Class
    //   12788: dup
    //   12789: iconst_0
    //   12790: ldc_w 5443
    //   12793: aastore
    //   12794: aconst_null
    //   12795: aconst_null
    //   12796: aconst_null
    //   12797: ldc_w 6148
    //   12800: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12803: wide
    //   12807: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12810: dup
    //   12811: aload_0
    //   12812: getfield 1374	org/telegram/ui/ChatActivity:mentionListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   12815: iconst_0
    //   12816: iconst_1
    //   12817: anewarray 5776	java/lang/Class
    //   12820: dup
    //   12821: iconst_0
    //   12822: ldc_w 5443
    //   12825: aastore
    //   12826: aconst_null
    //   12827: aconst_null
    //   12828: aconst_null
    //   12829: ldc_w 6152
    //   12832: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12835: wide
    //   12839: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12842: dup
    //   12843: aload_0
    //   12844: getfield 1374	org/telegram/ui/ChatActivity:mentionListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   12847: iconst_0
    //   12848: iconst_1
    //   12849: anewarray 5776	java/lang/Class
    //   12852: dup
    //   12853: iconst_0
    //   12854: ldc_w 5443
    //   12857: aastore
    //   12858: aconst_null
    //   12859: aconst_null
    //   12860: aconst_null
    //   12861: ldc_w 6601
    //   12864: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12867: wide
    //   12871: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12874: dup
    //   12875: aload_0
    //   12876: getfield 785	org/telegram/ui/ChatActivity:gifHintTextView	Landroid/widget/TextView;
    //   12879: getstatic 6267	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUNDFILTER	I
    //   12882: aconst_null
    //   12883: aconst_null
    //   12884: aconst_null
    //   12885: aconst_null
    //   12886: ldc_w 3733
    //   12889: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12892: wide
    //   12896: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12899: dup
    //   12900: aload_0
    //   12901: getfield 785	org/telegram/ui/ChatActivity:gifHintTextView	Landroid/widget/TextView;
    //   12904: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   12907: aconst_null
    //   12908: aconst_null
    //   12909: aconst_null
    //   12910: aconst_null
    //   12911: ldc_w 3740
    //   12914: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12917: wide
    //   12921: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12924: dup
    //   12925: aload_0
    //   12926: getfield 1199	org/telegram/ui/ChatActivity:pagedownButtonCounter	Landroid/widget/TextView;
    //   12929: getstatic 6267	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUNDFILTER	I
    //   12932: aconst_null
    //   12933: aconst_null
    //   12934: aconst_null
    //   12935: aconst_null
    //   12936: ldc_w 4832
    //   12939: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12942: wide
    //   12946: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12949: dup
    //   12950: aload_0
    //   12951: getfield 1199	org/telegram/ui/ChatActivity:pagedownButtonCounter	Landroid/widget/TextView;
    //   12954: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   12957: aconst_null
    //   12958: aconst_null
    //   12959: aconst_null
    //   12960: aconst_null
    //   12961: ldc_w 4829
    //   12964: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12967: wide
    //   12971: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12974: dup
    //   12975: aload_0
    //   12976: getfield 4797	org/telegram/ui/ChatActivity:pagedownButtonImage	Landroid/widget/ImageView;
    //   12979: getstatic 6267	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUNDFILTER	I
    //   12982: aconst_null
    //   12983: aconst_null
    //   12984: aconst_null
    //   12985: aconst_null
    //   12986: ldc_w 4804
    //   12989: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12992: wide
    //   12996: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12999: dup
    //   13000: aload_0
    //   13001: getfield 4797	org/telegram/ui/ChatActivity:pagedownButtonImage	Landroid/widget/ImageView;
    //   13004: getstatic 6267	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUNDFILTER	I
    //   13007: getstatic 6481	org/telegram/ui/ActionBar/ThemeDescription:FLAG_DRAWABLESELECTEDSTATE	I
    //   13010: ior
    //   13011: aconst_null
    //   13012: aconst_null
    //   13013: aconst_null
    //   13014: aconst_null
    //   13015: ldc_w 4817
    //   13018: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   13021: wide
    //   13025: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   13028: dup
    //   13029: aload_0
    //   13030: getfield 4797	org/telegram/ui/ChatActivity:pagedownButtonImage	Landroid/widget/ImageView;
    //   13033: getstatic 6384	org/telegram/ui/ActionBar/ThemeDescription:FLAG_IMAGECOLOR	I
    //   13036: aconst_null
    //   13037: aconst_null
    //   13038: aconst_null
    //   13039: aconst_null
    //   13040: ldc_w 4800
    //   13043: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   13046: wide
    //   13050: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   13053: dup
    //   13054: aload_0
    //   13055: getfield 943	org/telegram/ui/ChatActivity:mentiondownButtonCounter	Landroid/widget/TextView;
    //   13058: getstatic 6267	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUNDFILTER	I
    //   13061: aconst_null
    //   13062: aconst_null
    //   13063: aconst_null
    //   13064: aconst_null
    //   13065: ldc_w 4832
    //   13068: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   13071: wide
    //   13075: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   13078: dup
    //   13079: aload_0
    //   13080: getfield 943	org/telegram/ui/ChatActivity:mentiondownButtonCounter	Landroid/widget/TextView;
    //   13083: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   13086: aconst_null
    //   13087: aconst_null
    //   13088: aconst_null
    //   13089: aconst_null
    //   13090: ldc_w 4829
    //   13093: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   13096: wide
    //   13100: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   13103: dup
    //   13104: aload_0
    //   13105: getfield 4837	org/telegram/ui/ChatActivity:mentiondownButtonImage	Landroid/widget/ImageView;
    //   13108: getstatic 6267	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUNDFILTER	I
    //   13111: aconst_null
    //   13112: aconst_null
    //   13113: aconst_null
    //   13114: aconst_null
    //   13115: ldc_w 4804
    //   13118: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   13121: wide
    //   13125: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   13128: dup
    //   13129: aload_0
    //   13130: getfield 4837	org/telegram/ui/ChatActivity:mentiondownButtonImage	Landroid/widget/ImageView;
    //   13133: getstatic 6267	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUNDFILTER	I
    //   13136: getstatic 6481	org/telegram/ui/ActionBar/ThemeDescription:FLAG_DRAWABLESELECTEDSTATE	I
    //   13139: ior
    //   13140: aconst_null
    //   13141: aconst_null
    //   13142: aconst_null
    //   13143: aconst_null
    //   13144: ldc_w 4817
    //   13147: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   13150: wide
    //   13154: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   13157: dup
    //   13158: aload_0
    //   13159: getfield 4837	org/telegram/ui/ChatActivity:mentiondownButtonImage	Landroid/widget/ImageView;
    //   13162: getstatic 6384	org/telegram/ui/ActionBar/ThemeDescription:FLAG_IMAGECOLOR	I
    //   13165: aconst_null
    //   13166: aconst_null
    //   13167: aconst_null
    //   13168: aconst_null
    //   13169: ldc_w 4800
    //   13172: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   13175: wide
    //   13179: aload_0
    //   13180: getfield 1430	org/telegram/ui/ChatActivity:avatarContainer	Lorg/telegram/ui/Components/ChatAvatarContainer;
    //   13183: ifnull +2600 -> 15783
    //   13186: aload_0
    //   13187: getfield 1430	org/telegram/ui/ChatActivity:avatarContainer	Lorg/telegram/ui/Components/ChatAvatarContainer;
    //   13190: invokevirtual 6605	org/telegram/ui/Components/ChatAvatarContainer:getTimeItem	()Landroid/widget/ImageView;
    //   13193: astore 12
    //   13195: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   13198: dup
    //   13199: aload 12
    //   13201: iconst_0
    //   13202: aconst_null
    //   13203: aconst_null
    //   13204: aconst_null
    //   13205: aconst_null
    //   13206: ldc_w 6607
    //   13209: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   13212: wide
    //   13216: aload_0
    //   13217: getfield 1430	org/telegram/ui/ChatActivity:avatarContainer	Lorg/telegram/ui/Components/ChatAvatarContainer;
    //   13220: ifnull +2569 -> 15789
    //   13223: aload_0
    //   13224: getfield 1430	org/telegram/ui/ChatActivity:avatarContainer	Lorg/telegram/ui/Components/ChatAvatarContainer;
    //   13227: invokevirtual 6605	org/telegram/ui/Components/ChatAvatarContainer:getTimeItem	()Landroid/widget/ImageView;
    //   13230: astore 12
    //   13232: sipush 340
    //   13235: anewarray 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   13238: dup
    //   13239: iconst_0
    //   13240: aload_2
    //   13241: aastore
    //   13242: dup
    //   13243: iconst_1
    //   13244: aload_3
    //   13245: aastore
    //   13246: dup
    //   13247: iconst_2
    //   13248: aload 4
    //   13250: aastore
    //   13251: dup
    //   13252: iconst_3
    //   13253: aload 5
    //   13255: aastore
    //   13256: dup
    //   13257: iconst_4
    //   13258: aload 6
    //   13260: aastore
    //   13261: dup
    //   13262: iconst_5
    //   13263: aload 7
    //   13265: aastore
    //   13266: dup
    //   13267: bipush 6
    //   13269: aload 8
    //   13271: aastore
    //   13272: dup
    //   13273: bipush 7
    //   13275: aload 9
    //   13277: aastore
    //   13278: dup
    //   13279: bipush 8
    //   13281: aload 10
    //   13283: aastore
    //   13284: dup
    //   13285: bipush 9
    //   13287: aload 11
    //   13289: aastore
    //   13290: dup
    //   13291: bipush 10
    //   13293: aload 13
    //   13295: aastore
    //   13296: dup
    //   13297: bipush 11
    //   13299: aload 14
    //   13301: aastore
    //   13302: dup
    //   13303: bipush 12
    //   13305: aload 15
    //   13307: aastore
    //   13308: dup
    //   13309: bipush 13
    //   13311: aload 16
    //   13313: aastore
    //   13314: dup
    //   13315: bipush 14
    //   13317: aload 17
    //   13319: aastore
    //   13320: dup
    //   13321: bipush 15
    //   13323: aload 18
    //   13325: aastore
    //   13326: dup
    //   13327: bipush 16
    //   13329: aload 19
    //   13331: aastore
    //   13332: dup
    //   13333: bipush 17
    //   13335: aload 20
    //   13337: aastore
    //   13338: dup
    //   13339: bipush 18
    //   13341: aload 21
    //   13343: aastore
    //   13344: dup
    //   13345: bipush 19
    //   13347: aload 22
    //   13349: aastore
    //   13350: dup
    //   13351: bipush 20
    //   13353: aload 23
    //   13355: aastore
    //   13356: dup
    //   13357: bipush 21
    //   13359: aload 24
    //   13361: aastore
    //   13362: dup
    //   13363: bipush 22
    //   13365: aload 25
    //   13367: aastore
    //   13368: dup
    //   13369: bipush 23
    //   13371: aload 26
    //   13373: aastore
    //   13374: dup
    //   13375: bipush 24
    //   13377: aload 28
    //   13379: aastore
    //   13380: dup
    //   13381: bipush 25
    //   13383: aload 30
    //   13385: aastore
    //   13386: dup
    //   13387: bipush 26
    //   13389: aload 31
    //   13391: aastore
    //   13392: dup
    //   13393: bipush 27
    //   13395: aload 32
    //   13397: aastore
    //   13398: dup
    //   13399: bipush 28
    //   13401: aload 33
    //   13403: aastore
    //   13404: dup
    //   13405: bipush 29
    //   13407: aload 34
    //   13409: aastore
    //   13410: dup
    //   13411: bipush 30
    //   13413: aload 29
    //   13415: aastore
    //   13416: dup
    //   13417: bipush 31
    //   13419: aload 35
    //   13421: aastore
    //   13422: dup
    //   13423: bipush 32
    //   13425: aload 36
    //   13427: aastore
    //   13428: dup
    //   13429: bipush 33
    //   13431: aload 27
    //   13433: aastore
    //   13434: dup
    //   13435: bipush 34
    //   13437: aload 37
    //   13439: aastore
    //   13440: dup
    //   13441: bipush 35
    //   13443: aload 38
    //   13445: aastore
    //   13446: dup
    //   13447: bipush 36
    //   13449: aload 39
    //   13451: aastore
    //   13452: dup
    //   13453: bipush 37
    //   13455: aload 40
    //   13457: aastore
    //   13458: dup
    //   13459: bipush 38
    //   13461: aload 41
    //   13463: aastore
    //   13464: dup
    //   13465: bipush 39
    //   13467: aload 42
    //   13469: aastore
    //   13470: dup
    //   13471: bipush 40
    //   13473: aload 43
    //   13475: aastore
    //   13476: dup
    //   13477: bipush 41
    //   13479: aload 44
    //   13481: aastore
    //   13482: dup
    //   13483: bipush 42
    //   13485: aload 45
    //   13487: aastore
    //   13488: dup
    //   13489: bipush 43
    //   13491: aload 46
    //   13493: aastore
    //   13494: dup
    //   13495: bipush 44
    //   13497: aload 47
    //   13499: aastore
    //   13500: dup
    //   13501: bipush 45
    //   13503: aload 48
    //   13505: aastore
    //   13506: dup
    //   13507: bipush 46
    //   13509: aload 50
    //   13511: aastore
    //   13512: dup
    //   13513: bipush 47
    //   13515: aload 51
    //   13517: aastore
    //   13518: dup
    //   13519: bipush 48
    //   13521: aload 52
    //   13523: aastore
    //   13524: dup
    //   13525: bipush 49
    //   13527: aload 56
    //   13529: aastore
    //   13530: dup
    //   13531: bipush 50
    //   13533: aload 54
    //   13535: aastore
    //   13536: dup
    //   13537: bipush 51
    //   13539: aload 57
    //   13541: aastore
    //   13542: dup
    //   13543: bipush 52
    //   13545: aload 55
    //   13547: aastore
    //   13548: dup
    //   13549: bipush 53
    //   13551: aload 53
    //   13553: aastore
    //   13554: dup
    //   13555: bipush 54
    //   13557: aload 58
    //   13559: aastore
    //   13560: dup
    //   13561: bipush 55
    //   13563: aload 59
    //   13565: aastore
    //   13566: dup
    //   13567: bipush 56
    //   13569: aload 60
    //   13571: aastore
    //   13572: dup
    //   13573: bipush 57
    //   13575: aload 61
    //   13577: aastore
    //   13578: dup
    //   13579: bipush 58
    //   13581: aload 62
    //   13583: aastore
    //   13584: dup
    //   13585: bipush 59
    //   13587: aload 63
    //   13589: aastore
    //   13590: dup
    //   13591: bipush 60
    //   13593: aload 64
    //   13595: aastore
    //   13596: dup
    //   13597: bipush 61
    //   13599: aload 65
    //   13601: aastore
    //   13602: dup
    //   13603: bipush 62
    //   13605: aload 68
    //   13607: aastore
    //   13608: dup
    //   13609: bipush 63
    //   13611: aload 67
    //   13613: aastore
    //   13614: dup
    //   13615: bipush 64
    //   13617: aload 66
    //   13619: aastore
    //   13620: dup
    //   13621: bipush 65
    //   13623: aload 69
    //   13625: aastore
    //   13626: dup
    //   13627: bipush 66
    //   13629: aload 70
    //   13631: aastore
    //   13632: dup
    //   13633: bipush 67
    //   13635: aload 71
    //   13637: aastore
    //   13638: dup
    //   13639: bipush 68
    //   13641: aload 72
    //   13643: aastore
    //   13644: dup
    //   13645: bipush 69
    //   13647: aload 73
    //   13649: aastore
    //   13650: dup
    //   13651: bipush 70
    //   13653: aload 74
    //   13655: aastore
    //   13656: dup
    //   13657: bipush 71
    //   13659: aload 75
    //   13661: aastore
    //   13662: dup
    //   13663: bipush 72
    //   13665: aload 76
    //   13667: aastore
    //   13668: dup
    //   13669: bipush 73
    //   13671: aload 78
    //   13673: aastore
    //   13674: dup
    //   13675: bipush 74
    //   13677: aload 77
    //   13679: aastore
    //   13680: dup
    //   13681: bipush 75
    //   13683: aload 80
    //   13685: aastore
    //   13686: dup
    //   13687: bipush 76
    //   13689: aload 79
    //   13691: aastore
    //   13692: dup
    //   13693: bipush 77
    //   13695: aload 81
    //   13697: aastore
    //   13698: dup
    //   13699: bipush 78
    //   13701: aload 82
    //   13703: aastore
    //   13704: dup
    //   13705: bipush 79
    //   13707: aload 83
    //   13709: aastore
    //   13710: dup
    //   13711: bipush 80
    //   13713: aload 84
    //   13715: aastore
    //   13716: dup
    //   13717: bipush 81
    //   13719: aload 85
    //   13721: aastore
    //   13722: dup
    //   13723: bipush 82
    //   13725: aload 86
    //   13727: aastore
    //   13728: dup
    //   13729: bipush 83
    //   13731: aload 88
    //   13733: aastore
    //   13734: dup
    //   13735: bipush 84
    //   13737: aload 89
    //   13739: aastore
    //   13740: dup
    //   13741: bipush 85
    //   13743: aload 90
    //   13745: aastore
    //   13746: dup
    //   13747: bipush 86
    //   13749: aload 87
    //   13751: aastore
    //   13752: dup
    //   13753: bipush 87
    //   13755: aload 91
    //   13757: aastore
    //   13758: dup
    //   13759: bipush 88
    //   13761: aload 93
    //   13763: aastore
    //   13764: dup
    //   13765: bipush 89
    //   13767: aload 92
    //   13769: aastore
    //   13770: dup
    //   13771: bipush 90
    //   13773: aload 94
    //   13775: aastore
    //   13776: dup
    //   13777: bipush 91
    //   13779: aload 96
    //   13781: aastore
    //   13782: dup
    //   13783: bipush 92
    //   13785: aload 97
    //   13787: aastore
    //   13788: dup
    //   13789: bipush 93
    //   13791: aload 98
    //   13793: aastore
    //   13794: dup
    //   13795: bipush 94
    //   13797: aload 99
    //   13799: aastore
    //   13800: dup
    //   13801: bipush 95
    //   13803: aload 100
    //   13805: aastore
    //   13806: dup
    //   13807: bipush 96
    //   13809: aload 101
    //   13811: aastore
    //   13812: dup
    //   13813: bipush 97
    //   13815: aload 102
    //   13817: aastore
    //   13818: dup
    //   13819: bipush 98
    //   13821: aload 103
    //   13823: aastore
    //   13824: dup
    //   13825: bipush 99
    //   13827: aload 104
    //   13829: aastore
    //   13830: dup
    //   13831: bipush 100
    //   13833: aload 105
    //   13835: aastore
    //   13836: dup
    //   13837: bipush 101
    //   13839: aload 106
    //   13841: aastore
    //   13842: dup
    //   13843: bipush 102
    //   13845: aload 107
    //   13847: aastore
    //   13848: dup
    //   13849: bipush 103
    //   13851: aload 108
    //   13853: aastore
    //   13854: dup
    //   13855: bipush 104
    //   13857: aload 109
    //   13859: aastore
    //   13860: dup
    //   13861: bipush 105
    //   13863: aload 110
    //   13865: aastore
    //   13866: dup
    //   13867: bipush 106
    //   13869: aload 111
    //   13871: aastore
    //   13872: dup
    //   13873: bipush 107
    //   13875: aload 112
    //   13877: aastore
    //   13878: dup
    //   13879: bipush 108
    //   13881: aload 113
    //   13883: aastore
    //   13884: dup
    //   13885: bipush 109
    //   13887: aload 114
    //   13889: aastore
    //   13890: dup
    //   13891: bipush 110
    //   13893: aload 115
    //   13895: aastore
    //   13896: dup
    //   13897: bipush 111
    //   13899: aload 116
    //   13901: aastore
    //   13902: dup
    //   13903: bipush 112
    //   13905: aload 117
    //   13907: aastore
    //   13908: dup
    //   13909: bipush 113
    //   13911: aload 118
    //   13913: aastore
    //   13914: dup
    //   13915: bipush 114
    //   13917: aload 119
    //   13919: aastore
    //   13920: dup
    //   13921: bipush 115
    //   13923: aload 120
    //   13925: aastore
    //   13926: dup
    //   13927: bipush 116
    //   13929: aload 121
    //   13931: aastore
    //   13932: dup
    //   13933: bipush 117
    //   13935: aload 122
    //   13937: aastore
    //   13938: dup
    //   13939: bipush 118
    //   13941: aload 123
    //   13943: aastore
    //   13944: dup
    //   13945: bipush 119
    //   13947: aload 124
    //   13949: aastore
    //   13950: dup
    //   13951: bipush 120
    //   13953: aload 125
    //   13955: aastore
    //   13956: dup
    //   13957: bipush 121
    //   13959: aload 126
    //   13961: aastore
    //   13962: dup
    //   13963: bipush 122
    //   13965: aload 127
    //   13967: aastore
    //   13968: dup
    //   13969: bipush 123
    //   13971: aload -128
    //   13973: aastore
    //   13974: dup
    //   13975: bipush 124
    //   13977: aload -127
    //   13979: aastore
    //   13980: dup
    //   13981: bipush 125
    //   13983: aload -126
    //   13985: aastore
    //   13986: dup
    //   13987: bipush 126
    //   13989: aload 95
    //   13991: aastore
    //   13992: dup
    //   13993: bipush 127
    //   13995: aload -125
    //   13997: aastore
    //   13998: dup
    //   13999: sipush 128
    //   14002: aload -124
    //   14004: aastore
    //   14005: dup
    //   14006: sipush 129
    //   14009: aload -123
    //   14011: aastore
    //   14012: dup
    //   14013: sipush 130
    //   14016: aload -122
    //   14018: aastore
    //   14019: dup
    //   14020: sipush 131
    //   14023: aload -121
    //   14025: aastore
    //   14026: dup
    //   14027: sipush 132
    //   14030: aload -120
    //   14032: aastore
    //   14033: dup
    //   14034: sipush 133
    //   14037: aload -119
    //   14039: aastore
    //   14040: dup
    //   14041: sipush 134
    //   14044: aload -118
    //   14046: aastore
    //   14047: dup
    //   14048: sipush 135
    //   14051: aload -117
    //   14053: aastore
    //   14054: dup
    //   14055: sipush 136
    //   14058: aload -116
    //   14060: aastore
    //   14061: dup
    //   14062: sipush 137
    //   14065: aload -115
    //   14067: aastore
    //   14068: dup
    //   14069: sipush 138
    //   14072: aload -114
    //   14074: aastore
    //   14075: dup
    //   14076: sipush 139
    //   14079: aload -113
    //   14081: aastore
    //   14082: dup
    //   14083: sipush 140
    //   14086: aload -112
    //   14088: aastore
    //   14089: dup
    //   14090: sipush 141
    //   14093: aload -111
    //   14095: aastore
    //   14096: dup
    //   14097: sipush 142
    //   14100: aload -110
    //   14102: aastore
    //   14103: dup
    //   14104: sipush 143
    //   14107: aload -109
    //   14109: aastore
    //   14110: dup
    //   14111: sipush 144
    //   14114: aload -108
    //   14116: aastore
    //   14117: dup
    //   14118: sipush 145
    //   14121: aload -107
    //   14123: aastore
    //   14124: dup
    //   14125: sipush 146
    //   14128: aload -106
    //   14130: aastore
    //   14131: dup
    //   14132: sipush 147
    //   14135: aload -105
    //   14137: aastore
    //   14138: dup
    //   14139: sipush 148
    //   14142: aload -104
    //   14144: aastore
    //   14145: dup
    //   14146: sipush 149
    //   14149: aload -103
    //   14151: aastore
    //   14152: dup
    //   14153: sipush 150
    //   14156: aload -102
    //   14158: aastore
    //   14159: dup
    //   14160: sipush 151
    //   14163: aload -101
    //   14165: aastore
    //   14166: dup
    //   14167: sipush 152
    //   14170: aload -100
    //   14172: aastore
    //   14173: dup
    //   14174: sipush 153
    //   14177: aload -99
    //   14179: aastore
    //   14180: dup
    //   14181: sipush 154
    //   14184: aload -98
    //   14186: aastore
    //   14187: dup
    //   14188: sipush 155
    //   14191: aload -97
    //   14193: aastore
    //   14194: dup
    //   14195: sipush 156
    //   14198: aload -96
    //   14200: aastore
    //   14201: dup
    //   14202: sipush 157
    //   14205: aload -95
    //   14207: aastore
    //   14208: dup
    //   14209: sipush 158
    //   14212: aload -94
    //   14214: aastore
    //   14215: dup
    //   14216: sipush 159
    //   14219: aload -93
    //   14221: aastore
    //   14222: dup
    //   14223: sipush 160
    //   14226: aload -92
    //   14228: aastore
    //   14229: dup
    //   14230: sipush 161
    //   14233: aload -91
    //   14235: aastore
    //   14236: dup
    //   14237: sipush 162
    //   14240: aload -90
    //   14242: aastore
    //   14243: dup
    //   14244: sipush 163
    //   14247: aload -89
    //   14249: aastore
    //   14250: dup
    //   14251: sipush 164
    //   14254: aload -88
    //   14256: aastore
    //   14257: dup
    //   14258: sipush 165
    //   14261: aload -87
    //   14263: aastore
    //   14264: dup
    //   14265: sipush 166
    //   14268: aload -86
    //   14270: aastore
    //   14271: dup
    //   14272: sipush 167
    //   14275: aload -85
    //   14277: aastore
    //   14278: dup
    //   14279: sipush 168
    //   14282: aload -84
    //   14284: aastore
    //   14285: dup
    //   14286: sipush 169
    //   14289: aload -83
    //   14291: aastore
    //   14292: dup
    //   14293: sipush 170
    //   14296: aload -82
    //   14298: aastore
    //   14299: dup
    //   14300: sipush 171
    //   14303: aload -81
    //   14305: aastore
    //   14306: dup
    //   14307: sipush 172
    //   14310: aload -80
    //   14312: aastore
    //   14313: dup
    //   14314: sipush 173
    //   14317: aload -79
    //   14319: aastore
    //   14320: dup
    //   14321: sipush 174
    //   14324: aload -78
    //   14326: aastore
    //   14327: dup
    //   14328: sipush 175
    //   14331: aload -76
    //   14333: aastore
    //   14334: dup
    //   14335: sipush 176
    //   14338: aload -75
    //   14340: aastore
    //   14341: dup
    //   14342: sipush 177
    //   14345: aload -74
    //   14347: aastore
    //   14348: dup
    //   14349: sipush 178
    //   14352: aload -73
    //   14354: aastore
    //   14355: dup
    //   14356: sipush 179
    //   14359: aload -77
    //   14361: aastore
    //   14362: dup
    //   14363: sipush 180
    //   14366: aload -72
    //   14368: aastore
    //   14369: dup
    //   14370: sipush 181
    //   14373: aload -71
    //   14375: aastore
    //   14376: dup
    //   14377: sipush 182
    //   14380: aload -70
    //   14382: aastore
    //   14383: dup
    //   14384: sipush 183
    //   14387: aload -69
    //   14389: aastore
    //   14390: dup
    //   14391: sipush 184
    //   14394: aload -68
    //   14396: aastore
    //   14397: dup
    //   14398: sipush 185
    //   14401: aload -67
    //   14403: aastore
    //   14404: dup
    //   14405: sipush 186
    //   14408: aload -66
    //   14410: aastore
    //   14411: dup
    //   14412: sipush 187
    //   14415: aload -65
    //   14417: aastore
    //   14418: dup
    //   14419: sipush 188
    //   14422: aload -64
    //   14424: aastore
    //   14425: dup
    //   14426: sipush 189
    //   14429: aload -63
    //   14431: aastore
    //   14432: dup
    //   14433: sipush 190
    //   14436: aload -62
    //   14438: aastore
    //   14439: dup
    //   14440: sipush 191
    //   14443: aload -61
    //   14445: aastore
    //   14446: dup
    //   14447: sipush 192
    //   14450: aload -60
    //   14452: aastore
    //   14453: dup
    //   14454: sipush 193
    //   14457: aload -59
    //   14459: aastore
    //   14460: dup
    //   14461: sipush 194
    //   14464: aload -58
    //   14466: aastore
    //   14467: dup
    //   14468: sipush 195
    //   14471: aload -57
    //   14473: aastore
    //   14474: dup
    //   14475: sipush 196
    //   14478: aload -56
    //   14480: aastore
    //   14481: dup
    //   14482: sipush 197
    //   14485: aload -55
    //   14487: aastore
    //   14488: dup
    //   14489: sipush 198
    //   14492: aload -54
    //   14494: aastore
    //   14495: dup
    //   14496: sipush 199
    //   14499: aload -53
    //   14501: aastore
    //   14502: dup
    //   14503: sipush 200
    //   14506: aload -52
    //   14508: aastore
    //   14509: dup
    //   14510: sipush 201
    //   14513: aload -51
    //   14515: aastore
    //   14516: dup
    //   14517: sipush 202
    //   14520: aload -50
    //   14522: aastore
    //   14523: dup
    //   14524: sipush 203
    //   14527: aload -49
    //   14529: aastore
    //   14530: dup
    //   14531: sipush 204
    //   14534: aload -48
    //   14536: aastore
    //   14537: dup
    //   14538: sipush 205
    //   14541: aload -47
    //   14543: aastore
    //   14544: dup
    //   14545: sipush 206
    //   14548: aload -45
    //   14550: aastore
    //   14551: dup
    //   14552: sipush 207
    //   14555: aload -44
    //   14557: aastore
    //   14558: dup
    //   14559: sipush 208
    //   14562: aload -43
    //   14564: aastore
    //   14565: dup
    //   14566: sipush 209
    //   14569: aload -42
    //   14571: aastore
    //   14572: dup
    //   14573: sipush 210
    //   14576: aload -41
    //   14578: aastore
    //   14579: dup
    //   14580: sipush 211
    //   14583: aload -40
    //   14585: aastore
    //   14586: dup
    //   14587: sipush 212
    //   14590: aload -39
    //   14592: aastore
    //   14593: dup
    //   14594: sipush 213
    //   14597: aload -38
    //   14599: aastore
    //   14600: dup
    //   14601: sipush 214
    //   14604: aload -37
    //   14606: aastore
    //   14607: dup
    //   14608: sipush 215
    //   14611: aload -36
    //   14613: aastore
    //   14614: dup
    //   14615: sipush 216
    //   14618: aload -35
    //   14620: aastore
    //   14621: dup
    //   14622: sipush 217
    //   14625: aload -34
    //   14627: aastore
    //   14628: dup
    //   14629: sipush 218
    //   14632: aload -33
    //   14634: aastore
    //   14635: dup
    //   14636: sipush 219
    //   14639: aload -32
    //   14641: aastore
    //   14642: dup
    //   14643: sipush 220
    //   14646: aload -31
    //   14648: aastore
    //   14649: dup
    //   14650: sipush 221
    //   14653: aload -30
    //   14655: aastore
    //   14656: dup
    //   14657: sipush 222
    //   14660: aload -29
    //   14662: aastore
    //   14663: dup
    //   14664: sipush 223
    //   14667: aload -28
    //   14669: aastore
    //   14670: dup
    //   14671: sipush 224
    //   14674: aload -27
    //   14676: aastore
    //   14677: dup
    //   14678: sipush 225
    //   14681: aload -26
    //   14683: aastore
    //   14684: dup
    //   14685: sipush 226
    //   14688: aload -25
    //   14690: aastore
    //   14691: dup
    //   14692: sipush 227
    //   14695: aload -24
    //   14697: aastore
    //   14698: dup
    //   14699: sipush 228
    //   14702: aload -23
    //   14704: aastore
    //   14705: dup
    //   14706: sipush 229
    //   14709: aload -22
    //   14711: aastore
    //   14712: dup
    //   14713: sipush 230
    //   14716: aload -46
    //   14718: aastore
    //   14719: dup
    //   14720: sipush 231
    //   14723: aload -21
    //   14725: aastore
    //   14726: dup
    //   14727: sipush 232
    //   14730: aload -20
    //   14732: aastore
    //   14733: dup
    //   14734: sipush 233
    //   14737: aload -19
    //   14739: aastore
    //   14740: dup
    //   14741: sipush 234
    //   14744: aload -18
    //   14746: aastore
    //   14747: dup
    //   14748: sipush 235
    //   14751: aload -17
    //   14753: aastore
    //   14754: dup
    //   14755: sipush 236
    //   14758: aload -16
    //   14760: aastore
    //   14761: dup
    //   14762: sipush 237
    //   14765: aload -15
    //   14767: aastore
    //   14768: dup
    //   14769: sipush 238
    //   14772: aload -14
    //   14774: aastore
    //   14775: dup
    //   14776: sipush 239
    //   14779: aload -13
    //   14781: aastore
    //   14782: dup
    //   14783: sipush 240
    //   14786: aload -12
    //   14788: aastore
    //   14789: dup
    //   14790: sipush 241
    //   14793: aload -11
    //   14795: aastore
    //   14796: dup
    //   14797: sipush 242
    //   14800: aload -10
    //   14802: aastore
    //   14803: dup
    //   14804: sipush 243
    //   14807: aload -9
    //   14809: aastore
    //   14810: dup
    //   14811: sipush 244
    //   14814: aload -8
    //   14816: aastore
    //   14817: dup
    //   14818: sipush 245
    //   14821: aload -7
    //   14823: aastore
    //   14824: dup
    //   14825: sipush 246
    //   14828: aload -6
    //   14830: aastore
    //   14831: dup
    //   14832: sipush 247
    //   14835: aload -5
    //   14837: aastore
    //   14838: dup
    //   14839: sipush 248
    //   14842: aload -4
    //   14844: aastore
    //   14845: dup
    //   14846: sipush 249
    //   14849: aload -3
    //   14851: aastore
    //   14852: dup
    //   14853: sipush 250
    //   14856: aload -2
    //   14858: aastore
    //   14859: dup
    //   14860: sipush 251
    //   14863: aload -1
    //   14865: aastore
    //   14866: dup
    //   14867: sipush 252
    //   14870: wide
    //   14874: aastore
    //   14875: dup
    //   14876: sipush 253
    //   14879: wide
    //   14883: aastore
    //   14884: dup
    //   14885: sipush 254
    //   14888: wide
    //   14892: aastore
    //   14893: dup
    //   14894: sipush 255
    //   14897: wide
    //   14901: aastore
    //   14902: dup
    //   14903: sipush 256
    //   14906: wide
    //   14910: aastore
    //   14911: dup
    //   14912: sipush 257
    //   14915: wide
    //   14919: aastore
    //   14920: dup
    //   14921: sipush 258
    //   14924: wide
    //   14928: aastore
    //   14929: dup
    //   14930: sipush 259
    //   14933: wide
    //   14937: aastore
    //   14938: dup
    //   14939: sipush 260
    //   14942: wide
    //   14946: aastore
    //   14947: dup
    //   14948: sipush 261
    //   14951: wide
    //   14955: aastore
    //   14956: dup
    //   14957: sipush 262
    //   14960: wide
    //   14964: aastore
    //   14965: dup
    //   14966: sipush 263
    //   14969: wide
    //   14973: aastore
    //   14974: dup
    //   14975: sipush 264
    //   14978: wide
    //   14982: aastore
    //   14983: dup
    //   14984: sipush 265
    //   14987: wide
    //   14991: aastore
    //   14992: dup
    //   14993: sipush 266
    //   14996: wide
    //   15000: aastore
    //   15001: dup
    //   15002: sipush 267
    //   15005: wide
    //   15009: aastore
    //   15010: dup
    //   15011: sipush 268
    //   15014: wide
    //   15018: aastore
    //   15019: dup
    //   15020: sipush 269
    //   15023: wide
    //   15027: aastore
    //   15028: dup
    //   15029: sipush 270
    //   15032: wide
    //   15036: aastore
    //   15037: dup
    //   15038: sipush 271
    //   15041: wide
    //   15045: aastore
    //   15046: dup
    //   15047: sipush 272
    //   15050: wide
    //   15054: aastore
    //   15055: dup
    //   15056: sipush 273
    //   15059: wide
    //   15063: aastore
    //   15064: dup
    //   15065: sipush 274
    //   15068: wide
    //   15072: aastore
    //   15073: dup
    //   15074: sipush 275
    //   15077: wide
    //   15081: aastore
    //   15082: dup
    //   15083: sipush 276
    //   15086: wide
    //   15090: aastore
    //   15091: dup
    //   15092: sipush 277
    //   15095: wide
    //   15099: aastore
    //   15100: dup
    //   15101: sipush 278
    //   15104: wide
    //   15108: aastore
    //   15109: dup
    //   15110: sipush 279
    //   15113: wide
    //   15117: aastore
    //   15118: dup
    //   15119: sipush 280
    //   15122: wide
    //   15126: aastore
    //   15127: dup
    //   15128: sipush 281
    //   15131: wide
    //   15135: aastore
    //   15136: dup
    //   15137: sipush 282
    //   15140: wide
    //   15144: aastore
    //   15145: dup
    //   15146: sipush 283
    //   15149: wide
    //   15153: aastore
    //   15154: dup
    //   15155: sipush 284
    //   15158: wide
    //   15162: aastore
    //   15163: dup
    //   15164: sipush 285
    //   15167: wide
    //   15171: aastore
    //   15172: dup
    //   15173: sipush 286
    //   15176: wide
    //   15180: aastore
    //   15181: dup
    //   15182: sipush 287
    //   15185: wide
    //   15189: aastore
    //   15190: dup
    //   15191: sipush 288
    //   15194: wide
    //   15198: aastore
    //   15199: dup
    //   15200: sipush 289
    //   15203: wide
    //   15207: aastore
    //   15208: dup
    //   15209: sipush 290
    //   15212: wide
    //   15216: aastore
    //   15217: dup
    //   15218: sipush 291
    //   15221: wide
    //   15225: aastore
    //   15226: dup
    //   15227: sipush 292
    //   15230: wide
    //   15234: aastore
    //   15235: dup
    //   15236: sipush 293
    //   15239: wide
    //   15243: aastore
    //   15244: dup
    //   15245: sipush 294
    //   15248: wide
    //   15252: aastore
    //   15253: dup
    //   15254: sipush 295
    //   15257: wide
    //   15261: aastore
    //   15262: dup
    //   15263: sipush 296
    //   15266: wide
    //   15270: aastore
    //   15271: dup
    //   15272: sipush 297
    //   15275: wide
    //   15279: aastore
    //   15280: dup
    //   15281: sipush 298
    //   15284: wide
    //   15288: aastore
    //   15289: dup
    //   15290: sipush 299
    //   15293: wide
    //   15297: aastore
    //   15298: dup
    //   15299: sipush 300
    //   15302: wide
    //   15306: aastore
    //   15307: dup
    //   15308: sipush 301
    //   15311: wide
    //   15315: aastore
    //   15316: dup
    //   15317: sipush 302
    //   15320: wide
    //   15324: aastore
    //   15325: dup
    //   15326: sipush 303
    //   15329: wide
    //   15333: aastore
    //   15334: dup
    //   15335: sipush 304
    //   15338: aload_1
    //   15339: aastore
    //   15340: dup
    //   15341: sipush 305
    //   15344: wide
    //   15348: aastore
    //   15349: dup
    //   15350: sipush 306
    //   15353: wide
    //   15357: aastore
    //   15358: dup
    //   15359: sipush 307
    //   15362: wide
    //   15366: aastore
    //   15367: dup
    //   15368: sipush 308
    //   15371: wide
    //   15375: aastore
    //   15376: dup
    //   15377: sipush 309
    //   15380: wide
    //   15384: aastore
    //   15385: dup
    //   15386: sipush 310
    //   15389: wide
    //   15393: aastore
    //   15394: dup
    //   15395: sipush 311
    //   15398: wide
    //   15402: aastore
    //   15403: dup
    //   15404: sipush 312
    //   15407: wide
    //   15411: aastore
    //   15412: dup
    //   15413: sipush 313
    //   15416: wide
    //   15420: aastore
    //   15421: dup
    //   15422: sipush 314
    //   15425: wide
    //   15429: aastore
    //   15430: dup
    //   15431: sipush 315
    //   15434: wide
    //   15438: aastore
    //   15439: dup
    //   15440: sipush 316
    //   15443: wide
    //   15447: aastore
    //   15448: dup
    //   15449: sipush 317
    //   15452: wide
    //   15456: aastore
    //   15457: dup
    //   15458: sipush 318
    //   15461: wide
    //   15465: aastore
    //   15466: dup
    //   15467: sipush 319
    //   15470: wide
    //   15474: aastore
    //   15475: dup
    //   15476: sipush 320
    //   15479: wide
    //   15483: aastore
    //   15484: dup
    //   15485: sipush 321
    //   15488: wide
    //   15492: aastore
    //   15493: dup
    //   15494: sipush 322
    //   15497: wide
    //   15501: aastore
    //   15502: dup
    //   15503: sipush 323
    //   15506: wide
    //   15510: aastore
    //   15511: dup
    //   15512: sipush 324
    //   15515: wide
    //   15519: aastore
    //   15520: dup
    //   15521: sipush 325
    //   15524: wide
    //   15528: aastore
    //   15529: dup
    //   15530: sipush 326
    //   15533: wide
    //   15537: aastore
    //   15538: dup
    //   15539: sipush 327
    //   15542: wide
    //   15546: aastore
    //   15547: dup
    //   15548: sipush 328
    //   15551: wide
    //   15555: aastore
    //   15556: dup
    //   15557: sipush 329
    //   15560: wide
    //   15564: aastore
    //   15565: dup
    //   15566: sipush 330
    //   15569: wide
    //   15573: aastore
    //   15574: dup
    //   15575: sipush 331
    //   15578: wide
    //   15582: aastore
    //   15583: dup
    //   15584: sipush 332
    //   15587: wide
    //   15591: aastore
    //   15592: dup
    //   15593: sipush 333
    //   15596: wide
    //   15600: aastore
    //   15601: dup
    //   15602: sipush 334
    //   15605: wide
    //   15609: aastore
    //   15610: dup
    //   15611: sipush 335
    //   15614: wide
    //   15618: aastore
    //   15619: dup
    //   15620: sipush 336
    //   15623: wide
    //   15627: aastore
    //   15628: dup
    //   15629: sipush 337
    //   15632: wide
    //   15636: aastore
    //   15637: dup
    //   15638: sipush 338
    //   15641: wide
    //   15645: aastore
    //   15646: dup
    //   15647: sipush 339
    //   15650: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   15653: dup
    //   15654: aload 12
    //   15656: iconst_0
    //   15657: aconst_null
    //   15658: aconst_null
    //   15659: aconst_null
    //   15660: aconst_null
    //   15661: ldc_w 6609
    //   15664: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   15667: aastore
    //   15668: areturn
    //   15669: aconst_null
    //   15670: astore 12
    //   15672: goto -15421 -> 251
    //   15675: aconst_null
    //   15676: astore 12
    //   15678: goto -15390 -> 288
    //   15681: aconst_null
    //   15682: astore 12
    //   15684: goto -15113 -> 571
    //   15687: aconst_null
    //   15688: astore 12
    //   15690: goto -15075 -> 615
    //   15693: aload_0
    //   15694: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   15697: astore 12
    //   15699: goto -5101 -> 10598
    //   15702: aload_0
    //   15703: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   15706: astore 12
    //   15708: goto -5063 -> 10645
    //   15711: aload_0
    //   15712: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   15715: astore 12
    //   15717: goto -5025 -> 10692
    //   15720: aload_0
    //   15721: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   15724: astore 12
    //   15726: goto -4987 -> 10739
    //   15729: aload_0
    //   15730: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   15733: astore 12
    //   15735: goto -4949 -> 10786
    //   15738: aload_0
    //   15739: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   15742: astore 12
    //   15744: goto -4911 -> 10833
    //   15747: aload_0
    //   15748: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   15751: astore 12
    //   15753: goto -4873 -> 10880
    //   15756: aload_0
    //   15757: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   15760: astore 12
    //   15762: goto -4835 -> 10927
    //   15765: aload_0
    //   15766: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   15769: astore 12
    //   15771: goto -4797 -> 10974
    //   15774: aload_0
    //   15775: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   15778: astore 12
    //   15780: goto -4759 -> 11021
    //   15783: aconst_null
    //   15784: astore 12
    //   15786: goto -2591 -> 13195
    //   15789: aconst_null
    //   15790: astore 12
    //   15792: goto -2560 -> 13232
  }
  
  public boolean isSecretChat()
  {
    if (this.currentEncryptedChat != null) {}
    for (boolean bool = true;; bool = false) {
      return bool;
    }
  }
  
  public boolean needDelayOpenAnimation()
  {
    return this.firstLoading;
  }
  
  public void onActivityResultFragment(int paramInt1, int paramInt2, Intent paramIntent)
  {
    if (paramInt2 == -1)
    {
      if ((paramInt1 != 0) && (paramInt1 != 2)) {
        break label44;
      }
      createChatAttachView();
      if (this.chatAttachAlert != null) {
        this.chatAttachAlert.onActivityResultFragment(paramInt1, paramIntent, this.currentPicturePath);
      }
      this.currentPicturePath = null;
    }
    for (;;)
    {
      return;
      label44:
      if (paramInt1 == 1)
      {
        if ((paramIntent == null) || (paramIntent.getData() == null))
        {
          showAttachmentError();
          continue;
        }
        Object localObject1 = paramIntent.getData();
        if (((Uri)localObject1).toString().contains("video"))
        {
          paramIntent = null;
          try
          {
            localObject1 = AndroidUtilities.getPath((Uri)localObject1);
            paramIntent = (Intent)localObject1;
          }
          catch (Exception localException)
          {
            for (;;)
            {
              FileLog.e(localException);
              continue;
              openVideoEditor(paramIntent, null);
            }
          }
          if (paramIntent == null) {
            showAttachmentError();
          }
          if (this.paused) {
            this.startVideoEdit = paramIntent;
          }
        }
        for (;;)
        {
          showReplyPanel(false, null, null, null, false);
          DataQuery.getInstance(this.currentAccount).cleanDraft(this.dialog_id, true);
          break;
          SendMessagesHelper.prepareSendingPhoto(null, localException, this.dialog_id, this.replyingMessageObject, null, null, null, null, 0);
        }
      }
      if (paramInt1 == 21)
      {
        if (paramIntent == null)
        {
          showAttachmentError();
          continue;
        }
        if (paramIntent.getData() != null) {
          sendUriAsDocument(paramIntent.getData());
        }
        for (;;)
        {
          showReplyPanel(false, null, null, null, false);
          DataQuery.getInstance(this.currentAccount).cleanDraft(this.dialog_id, true);
          break;
          if (paramIntent.getClipData() != null)
          {
            paramIntent = paramIntent.getClipData();
            for (paramInt1 = 0; paramInt1 < paramIntent.getItemCount(); paramInt1++) {
              sendUriAsDocument(paramIntent.getItemAt(paramInt1).getUri());
            }
          }
          else
          {
            showAttachmentError();
          }
        }
      }
      if (paramInt1 != 31) {
        continue;
      }
      if ((paramIntent == null) || (paramIntent.getData() == null))
      {
        showAttachmentError();
        continue;
      }
      Object localObject2 = paramIntent.getData();
      paramIntent = null;
      try
      {
        localObject2 = getParentActivity().getContentResolver().query((Uri)localObject2, new String[] { "display_name", "data1" }, null, null, null);
        if (localObject2 != null)
        {
          paramInt1 = 0;
          for (;;)
          {
            paramIntent = (Intent)localObject2;
            if (!((Cursor)localObject2).moveToNext()) {
              break;
            }
            paramInt1 = 1;
            paramIntent = (Intent)localObject2;
            String str1 = ((Cursor)localObject2).getString(0);
            paramIntent = (Intent)localObject2;
            String str2 = ((Cursor)localObject2).getString(1);
            paramIntent = (Intent)localObject2;
            TLRPC.TL_user localTL_user = new org/telegram/tgnet/TLRPC$TL_user;
            paramIntent = (Intent)localObject2;
            localTL_user.<init>();
            paramIntent = (Intent)localObject2;
            localTL_user.first_name = str1;
            paramIntent = (Intent)localObject2;
            localTL_user.last_name = "";
            paramIntent = (Intent)localObject2;
            localTL_user.phone = str2;
            paramIntent = (Intent)localObject2;
            SendMessagesHelper.getInstance(this.currentAccount).sendMessage(localTL_user, this.dialog_id, this.replyingMessageObject, null, null);
          }
        }
        try
        {
          if (!paramIntent.isClosed()) {
            paramIntent.close();
          }
          throw ((Throwable)localObject3);
          if (paramInt1 != 0)
          {
            paramIntent = (Intent)localObject3;
            showReplyPanel(false, null, null, null, false);
            paramIntent = (Intent)localObject3;
            DataQuery.getInstance(this.currentAccount).cleanDraft(this.dialog_id, true);
          }
          if (localObject3 == null) {
            continue;
          }
          try
          {
            if (((Cursor)localObject3).isClosed()) {
              continue;
            }
            ((Cursor)localObject3).close();
          }
          catch (Exception paramIntent)
          {
            FileLog.e(paramIntent);
          }
        }
        catch (Exception paramIntent)
        {
          for (;;)
          {
            FileLog.e(paramIntent);
          }
        }
      }
      finally
      {
        if (paramIntent == null) {}
      }
    }
  }
  
  public boolean onBackPressed()
  {
    boolean bool = false;
    if (checkRecordLocked()) {}
    for (;;)
    {
      return bool;
      if ((this.actionBar != null) && (this.actionBar.isActionModeShowed()))
      {
        for (int i = 1; i >= 0; i--)
        {
          this.selectedMessagesIds[i].clear();
          this.selectedMessagesCanCopyIds[i].clear();
          this.selectedMessagesCanStarIds[i].clear();
        }
        this.chatActivityEnterView.setEditingMessageObject(null, false);
        this.actionBar.hideActionMode();
        updatePinnedMessageView(true);
        this.cantDeleteMessagesCount = 0;
        this.canEditMessagesCount = 0;
        updateVisibleRows();
      }
      else if ((this.chatActivityEnterView != null) && (this.chatActivityEnterView.isPopupShowing()))
      {
        this.chatActivityEnterView.hidePopup(true);
      }
      else
      {
        bool = true;
      }
    }
  }
  
  public void onConfigurationChanged(Configuration paramConfiguration)
  {
    fixLayout();
    if ((this.visibleDialog instanceof DatePickerDialog)) {
      this.visibleDialog.dismiss();
    }
  }
  
  protected void onDialogDismiss(Dialog paramDialog)
  {
    if ((this.closeChatDialog != null) && (paramDialog == this.closeChatDialog))
    {
      MessagesController.getInstance(this.currentAccount).deleteDialog(this.dialog_id, 0);
      if ((this.parentLayout == null) || (this.parentLayout.fragmentsStack.isEmpty()) || (this.parentLayout.fragmentsStack.get(this.parentLayout.fragmentsStack.size() - 1) == this)) {
        break label111;
      }
      paramDialog = (BaseFragment)this.parentLayout.fragmentsStack.get(this.parentLayout.fragmentsStack.size() - 1);
      removeSelfFromStack();
      paramDialog.finishFragment();
    }
    for (;;)
    {
      return;
      label111:
      finishFragment();
    }
  }
  
  /* Error */
  public boolean onFragmentCreate()
  {
    // Byte code:
    //   0: aload_0
    //   1: getfield 6707	org/telegram/ui/ChatActivity:arguments	Landroid/os/Bundle;
    //   4: ldc_w 5241
    //   7: iconst_0
    //   8: invokevirtual 6708	android/os/Bundle:getInt	(Ljava/lang/String;I)I
    //   11: istore_1
    //   12: aload_0
    //   13: getfield 6707	org/telegram/ui/ChatActivity:arguments	Landroid/os/Bundle;
    //   16: ldc_w 3495
    //   19: iconst_0
    //   20: invokevirtual 6708	android/os/Bundle:getInt	(Ljava/lang/String;I)I
    //   23: istore_2
    //   24: aload_0
    //   25: getfield 6707	org/telegram/ui/ChatActivity:arguments	Landroid/os/Bundle;
    //   28: ldc_w 5591
    //   31: iconst_0
    //   32: invokevirtual 6708	android/os/Bundle:getInt	(Ljava/lang/String;I)I
    //   35: istore_3
    //   36: aload_0
    //   37: aload_0
    //   38: getfield 6707	org/telegram/ui/ChatActivity:arguments	Landroid/os/Bundle;
    //   41: ldc_w 6710
    //   44: lconst_0
    //   45: invokevirtual 6714	android/os/Bundle:getLong	(Ljava/lang/String;J)J
    //   48: putfield 1279	org/telegram/ui/ChatActivity:inlineReturn	J
    //   51: aload_0
    //   52: getfield 6707	org/telegram/ui/ChatActivity:arguments	Landroid/os/Bundle;
    //   55: ldc_w 6716
    //   58: invokevirtual 6718	android/os/Bundle:getString	(Ljava/lang/String;)Ljava/lang/String;
    //   61: astore 4
    //   63: aload_0
    //   64: aload_0
    //   65: getfield 6707	org/telegram/ui/ChatActivity:arguments	Landroid/os/Bundle;
    //   68: ldc_w 6720
    //   71: iconst_0
    //   72: invokevirtual 6708	android/os/Bundle:getInt	(Ljava/lang/String;I)I
    //   75: putfield 2335	org/telegram/ui/ChatActivity:startLoadFromMessageId	I
    //   78: aload_0
    //   79: getfield 6707	org/telegram/ui/ChatActivity:arguments	Landroid/os/Bundle;
    //   82: ldc_w 6722
    //   85: iconst_0
    //   86: invokevirtual 6708	android/os/Bundle:getInt	(Ljava/lang/String;I)I
    //   89: istore 5
    //   91: aload_0
    //   92: aload_0
    //   93: getfield 6707	org/telegram/ui/ChatActivity:arguments	Landroid/os/Bundle;
    //   96: ldc_w 5581
    //   99: iconst_0
    //   100: invokevirtual 1972	android/os/Bundle:getBoolean	(Ljava/lang/String;Z)Z
    //   103: putfield 5142	org/telegram/ui/ChatActivity:scrollToTopOnResume	Z
    //   106: iload_1
    //   107: ifeq +1283 -> 1390
    //   110: aload_0
    //   111: aload_0
    //   112: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   115: invokestatic 1992	org/telegram/messenger/MessagesController:getInstance	(I)Lorg/telegram/messenger/MessagesController;
    //   118: iload_1
    //   119: invokestatic 2046	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   122: invokevirtual 2056	org/telegram/messenger/MessagesController:getChat	(Ljava/lang/Integer;)Lorg/telegram/tgnet/TLRPC$Chat;
    //   125: putfield 1617	org/telegram/ui/ChatActivity:currentChat	Lorg/telegram/tgnet/TLRPC$Chat;
    //   128: aload_0
    //   129: getfield 1617	org/telegram/ui/ChatActivity:currentChat	Lorg/telegram/tgnet/TLRPC$Chat;
    //   132: ifnonnull +70 -> 202
    //   135: new 6724	java/util/concurrent/CountDownLatch
    //   138: dup
    //   139: iconst_1
    //   140: invokespecial 6725	java/util/concurrent/CountDownLatch:<init>	(I)V
    //   143: astore 4
    //   145: aload_0
    //   146: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   149: invokestatic 3877	org/telegram/messenger/MessagesStorage:getInstance	(I)Lorg/telegram/messenger/MessagesStorage;
    //   152: astore 6
    //   154: aload 6
    //   156: invokevirtual 6729	org/telegram/messenger/MessagesStorage:getStorageQueue	()Lorg/telegram/messenger/DispatchQueue;
    //   159: new 160	org/telegram/ui/ChatActivity$5
    //   162: dup
    //   163: aload_0
    //   164: aload 6
    //   166: iload_1
    //   167: aload 4
    //   169: invokespecial 6732	org/telegram/ui/ChatActivity$5:<init>	(Lorg/telegram/ui/ChatActivity;Lorg/telegram/messenger/MessagesStorage;ILjava/util/concurrent/CountDownLatch;)V
    //   172: invokevirtual 3588	org/telegram/messenger/DispatchQueue:postRunnable	(Ljava/lang/Runnable;)V
    //   175: aload 4
    //   177: invokevirtual 6735	java/util/concurrent/CountDownLatch:await	()V
    //   180: aload_0
    //   181: getfield 1617	org/telegram/ui/ChatActivity:currentChat	Lorg/telegram/tgnet/TLRPC$Chat;
    //   184: ifnull +1184 -> 1368
    //   187: aload_0
    //   188: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   191: invokestatic 1992	org/telegram/messenger/MessagesController:getInstance	(I)Lorg/telegram/messenger/MessagesController;
    //   194: aload_0
    //   195: getfield 1617	org/telegram/ui/ChatActivity:currentChat	Lorg/telegram/tgnet/TLRPC$Chat;
    //   198: iconst_1
    //   199: invokevirtual 6739	org/telegram/messenger/MessagesController:putChat	(Lorg/telegram/tgnet/TLRPC$Chat;Z)V
    //   202: iload_1
    //   203: ifle +1171 -> 1374
    //   206: aload_0
    //   207: iload_1
    //   208: ineg
    //   209: i2l
    //   210: putfield 1168	org/telegram/ui/ChatActivity:dialog_id	J
    //   213: aload_0
    //   214: getfield 1617	org/telegram/ui/ChatActivity:currentChat	Lorg/telegram/tgnet/TLRPC$Chat;
    //   217: invokestatic 1702	org/telegram/messenger/ChatObject:isChannel	(Lorg/telegram/tgnet/TLRPC$Chat;)Z
    //   220: ifeq +15 -> 235
    //   223: aload_0
    //   224: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   227: invokestatic 1992	org/telegram/messenger/MessagesController:getInstance	(I)Lorg/telegram/messenger/MessagesController;
    //   230: iload_1
    //   231: iconst_0
    //   232: invokevirtual 6742	org/telegram/messenger/MessagesController:startShortPoll	(IZ)V
    //   235: aload_0
    //   236: getfield 2008	org/telegram/ui/ChatActivity:currentUser	Lorg/telegram/tgnet/TLRPC$User;
    //   239: ifnull +9 -> 248
    //   242: invokestatic 2282	org/telegram/messenger/MediaController:getInstance	()Lorg/telegram/messenger/MediaController;
    //   245: invokevirtual 6745	org/telegram/messenger/MediaController:startMediaObserver	()V
    //   248: aload_0
    //   249: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   252: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   255: aload_0
    //   256: getstatic 5023	org/telegram/messenger/NotificationCenter:messagesDidLoaded	I
    //   259: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   262: invokestatic 6753	org/telegram/messenger/NotificationCenter:getGlobalInstance	()Lorg/telegram/messenger/NotificationCenter;
    //   265: aload_0
    //   266: getstatic 5162	org/telegram/messenger/NotificationCenter:emojiDidLoaded	I
    //   269: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   272: aload_0
    //   273: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   276: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   279: aload_0
    //   280: getstatic 5170	org/telegram/messenger/NotificationCenter:updateInterfaces	I
    //   283: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   286: aload_0
    //   287: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   290: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   293: aload_0
    //   294: getstatic 5173	org/telegram/messenger/NotificationCenter:didReceivedNewMessages	I
    //   297: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   300: aload_0
    //   301: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   304: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   307: aload_0
    //   308: getstatic 5040	org/telegram/messenger/NotificationCenter:closeChats	I
    //   311: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   314: aload_0
    //   315: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   318: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   321: aload_0
    //   322: getstatic 5284	org/telegram/messenger/NotificationCenter:messagesRead	I
    //   325: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   328: aload_0
    //   329: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   332: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   335: aload_0
    //   336: getstatic 5305	org/telegram/messenger/NotificationCenter:messagesDeleted	I
    //   339: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   342: aload_0
    //   343: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   346: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   349: aload_0
    //   350: getstatic 5294	org/telegram/messenger/NotificationCenter:historyCleared	I
    //   353: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   356: aload_0
    //   357: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   360: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   363: aload_0
    //   364: getstatic 5310	org/telegram/messenger/NotificationCenter:messageReceivedByServer	I
    //   367: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   370: aload_0
    //   371: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   374: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   377: aload_0
    //   378: getstatic 5345	org/telegram/messenger/NotificationCenter:messageReceivedByAck	I
    //   381: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   384: aload_0
    //   385: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   388: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   391: aload_0
    //   392: getstatic 5348	org/telegram/messenger/NotificationCenter:messageSendError	I
    //   395: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   398: aload_0
    //   399: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   402: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   405: aload_0
    //   406: getstatic 5034	org/telegram/messenger/NotificationCenter:chatInfoDidLoaded	I
    //   409: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   412: aload_0
    //   413: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   416: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   419: aload_0
    //   420: getstatic 5390	org/telegram/messenger/NotificationCenter:contactsDidLoaded	I
    //   423: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   426: aload_0
    //   427: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   430: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   433: aload_0
    //   434: getstatic 5393	org/telegram/messenger/NotificationCenter:encryptedChatUpdated	I
    //   437: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   440: aload_0
    //   441: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   444: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   447: aload_0
    //   448: getstatic 5400	org/telegram/messenger/NotificationCenter:messagesReadEncrypted	I
    //   451: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   454: aload_0
    //   455: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   458: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   461: aload_0
    //   462: getstatic 5403	org/telegram/messenger/NotificationCenter:removeAllMessagesFromDialog	I
    //   465: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   468: aload_0
    //   469: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   472: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   475: aload_0
    //   476: getstatic 5456	org/telegram/messenger/NotificationCenter:messagePlayingProgressDidChanged	I
    //   479: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   482: aload_0
    //   483: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   486: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   489: aload_0
    //   490: getstatic 5448	org/telegram/messenger/NotificationCenter:messagePlayingDidReset	I
    //   493: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   496: aload_0
    //   497: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   500: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   503: aload_0
    //   504: getstatic 5451	org/telegram/messenger/NotificationCenter:messagePlayingPlayStateChanged	I
    //   507: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   510: aload_0
    //   511: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   514: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   517: aload_0
    //   518: getstatic 5406	org/telegram/messenger/NotificationCenter:screenshotTook	I
    //   521: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   524: aload_0
    //   525: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   528: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   531: aload_0
    //   532: getstatic 5411	org/telegram/messenger/NotificationCenter:blockedUsersDidLoaded	I
    //   535: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   538: aload_0
    //   539: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   542: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   545: aload_0
    //   546: getstatic 5417	org/telegram/messenger/NotificationCenter:FileNewChunkAvailable	I
    //   549: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   552: aload_0
    //   553: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   556: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   559: aload_0
    //   560: getstatic 5423	org/telegram/messenger/NotificationCenter:didCreatedNewDeleteTask	I
    //   563: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   566: aload_0
    //   567: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   570: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   573: aload_0
    //   574: getstatic 5427	org/telegram/messenger/NotificationCenter:messagePlayingDidStarted	I
    //   577: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   580: aload_0
    //   581: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   584: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   587: aload_0
    //   588: getstatic 5462	org/telegram/messenger/NotificationCenter:updateMessageMedia	I
    //   591: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   594: aload_0
    //   595: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   598: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   601: aload_0
    //   602: getstatic 5482	org/telegram/messenger/NotificationCenter:replaceMessagesObjects	I
    //   605: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   608: aload_0
    //   609: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   612: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   615: aload_0
    //   616: getstatic 5498	org/telegram/messenger/NotificationCenter:notificationsSettingsUpdated	I
    //   619: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   622: aload_0
    //   623: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   626: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   629: aload_0
    //   630: getstatic 5501	org/telegram/messenger/NotificationCenter:didLoadedReplyMessages	I
    //   633: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   636: aload_0
    //   637: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   640: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   643: aload_0
    //   644: getstatic 5507	org/telegram/messenger/NotificationCenter:didReceivedWebpages	I
    //   647: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   650: aload_0
    //   651: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   654: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   657: aload_0
    //   658: getstatic 5514	org/telegram/messenger/NotificationCenter:didReceivedWebpagesInUpdates	I
    //   661: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   664: aload_0
    //   665: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   668: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   671: aload_0
    //   672: getstatic 5520	org/telegram/messenger/NotificationCenter:messagesReadContent	I
    //   675: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   678: aload_0
    //   679: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   682: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   685: aload_0
    //   686: getstatic 5526	org/telegram/messenger/NotificationCenter:botInfoDidLoaded	I
    //   689: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   692: aload_0
    //   693: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   696: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   699: aload_0
    //   700: getstatic 5043	org/telegram/messenger/NotificationCenter:botKeyboardDidLoaded	I
    //   703: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   706: aload_0
    //   707: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   710: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   713: aload_0
    //   714: getstatic 5529	org/telegram/messenger/NotificationCenter:chatSearchResultsAvailable	I
    //   717: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   720: aload_0
    //   721: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   724: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   727: aload_0
    //   728: getstatic 5535	org/telegram/messenger/NotificationCenter:chatSearchResultsLoading	I
    //   731: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   734: aload_0
    //   735: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   738: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   741: aload_0
    //   742: getstatic 5538	org/telegram/messenger/NotificationCenter:didUpdatedMessagesViews	I
    //   745: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   748: aload_0
    //   749: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   752: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   755: aload_0
    //   756: getstatic 5376	org/telegram/messenger/NotificationCenter:chatInfoCantLoad	I
    //   759: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   762: aload_0
    //   763: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   766: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   769: aload_0
    //   770: getstatic 5504	org/telegram/messenger/NotificationCenter:didLoadedPinnedMessage	I
    //   773: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   776: aload_0
    //   777: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   780: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   783: aload_0
    //   784: getstatic 5550	org/telegram/messenger/NotificationCenter:peerSettingsDidLoaded	I
    //   787: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   790: aload_0
    //   791: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   794: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   797: aload_0
    //   798: getstatic 5553	org/telegram/messenger/NotificationCenter:newDraftReceived	I
    //   801: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   804: aload_0
    //   805: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   808: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   811: aload_0
    //   812: getstatic 5558	org/telegram/messenger/NotificationCenter:userInfoDidLoaded	I
    //   815: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   818: invokestatic 6753	org/telegram/messenger/NotificationCenter:getGlobalInstance	()Lorg/telegram/messenger/NotificationCenter;
    //   821: aload_0
    //   822: getstatic 5561	org/telegram/messenger/NotificationCenter:didSetNewWallpapper	I
    //   825: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   828: aload_0
    //   829: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   832: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   835: aload_0
    //   836: getstatic 5565	org/telegram/messenger/NotificationCenter:channelRightsUpdated	I
    //   839: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   842: aload_0
    //   843: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   846: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   849: aload_0
    //   850: getstatic 5571	org/telegram/messenger/NotificationCenter:updateMentionsCount	I
    //   853: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   856: aload_0
    //   857: invokespecial 6755	org/telegram/ui/ActionBar/BaseFragment:onFragmentCreate	()Z
    //   860: pop
    //   861: aload_0
    //   862: getfield 1681	org/telegram/ui/ChatActivity:currentEncryptedChat	Lorg/telegram/tgnet/TLRPC$EncryptedChat;
    //   865: ifnonnull +24 -> 889
    //   868: aload_0
    //   869: getfield 820	org/telegram/ui/ChatActivity:isBroadcast	Z
    //   872: ifne +17 -> 889
    //   875: aload_0
    //   876: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   879: invokestatic 1661	org/telegram/messenger/DataQuery:getInstance	(I)Lorg/telegram/messenger/DataQuery;
    //   882: aload_0
    //   883: getfield 1168	org/telegram/ui/ChatActivity:dialog_id	J
    //   886: invokevirtual 6758	org/telegram/messenger/DataQuery:loadBotKeyboard	(J)V
    //   889: aload_0
    //   890: iconst_1
    //   891: putfield 2304	org/telegram/ui/ChatActivity:loading	Z
    //   894: aload_0
    //   895: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   898: invokestatic 1992	org/telegram/messenger/MessagesController:getInstance	(I)Lorg/telegram/messenger/MessagesController;
    //   901: aload_0
    //   902: getfield 2008	org/telegram/ui/ChatActivity:currentUser	Lorg/telegram/tgnet/TLRPC$User;
    //   905: aload_0
    //   906: getfield 1617	org/telegram/ui/ChatActivity:currentChat	Lorg/telegram/tgnet/TLRPC$Chat;
    //   909: invokevirtual 6761	org/telegram/messenger/MessagesController:loadPeerSettings	(Lorg/telegram/tgnet/TLRPC$User;Lorg/telegram/tgnet/TLRPC$Chat;)V
    //   912: aload_0
    //   913: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   916: invokestatic 1992	org/telegram/messenger/MessagesController:getInstance	(I)Lorg/telegram/messenger/MessagesController;
    //   919: aload_0
    //   920: getfield 1168	org/telegram/ui/ChatActivity:dialog_id	J
    //   923: iconst_1
    //   924: invokevirtual 6764	org/telegram/messenger/MessagesController:setLastCreatedDialogId	(JZ)V
    //   927: aload_0
    //   928: getfield 2335	org/telegram/ui/ChatActivity:startLoadFromMessageId	I
    //   931: ifne +895 -> 1826
    //   934: aload_0
    //   935: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   938: invokestatic 3867	org/telegram/messenger/MessagesController:getNotificationsSettings	(I)Landroid/content/SharedPreferences;
    //   941: astore 4
    //   943: aload 4
    //   945: new 1905	java/lang/StringBuilder
    //   948: dup
    //   949: invokespecial 1906	java/lang/StringBuilder:<init>	()V
    //   952: ldc_w 6766
    //   955: invokevirtual 1912	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   958: aload_0
    //   959: getfield 1168	org/telegram/ui/ChatActivity:dialog_id	J
    //   962: invokevirtual 2111	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   965: invokevirtual 1919	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   968: iconst_0
    //   969: invokeinterface 2117 3 0
    //   974: istore_1
    //   975: iload_1
    //   976: ifeq +53 -> 1029
    //   979: aload_0
    //   980: iconst_1
    //   981: putfield 1452	org/telegram/ui/ChatActivity:wasManualScroll	Z
    //   984: aload_0
    //   985: iconst_1
    //   986: putfield 5057	org/telegram/ui/ChatActivity:loadingFromOldPosition	Z
    //   989: aload_0
    //   990: aload 4
    //   992: new 1905	java/lang/StringBuilder
    //   995: dup
    //   996: invokespecial 1906	java/lang/StringBuilder:<init>	()V
    //   999: ldc_w 6768
    //   1002: invokevirtual 1912	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1005: aload_0
    //   1006: getfield 1168	org/telegram/ui/ChatActivity:dialog_id	J
    //   1009: invokevirtual 2111	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   1012: invokevirtual 1919	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1015: iconst_0
    //   1016: invokeinterface 2117 3 0
    //   1021: putfield 744	org/telegram/ui/ChatActivity:startLoadFromMessageOffset	I
    //   1024: aload_0
    //   1025: iload_1
    //   1026: putfield 2335	org/telegram/ui/ChatActivity:startLoadFromMessageId	I
    //   1029: aload_0
    //   1030: getfield 2335	org/telegram/ui/ChatActivity:startLoadFromMessageId	I
    //   1033: ifeq +923 -> 1956
    //   1036: aload_0
    //   1037: getfield 706	org/telegram/ui/ChatActivity:waitingForLoad	Ljava/util/ArrayList;
    //   1040: aload_0
    //   1041: getfield 1105	org/telegram/ui/ChatActivity:lastLoadIndex	I
    //   1044: invokestatic 2046	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   1047: invokevirtual 2308	java/util/ArrayList:add	(Ljava/lang/Object;)Z
    //   1050: pop
    //   1051: iload 5
    //   1053: ifeq +801 -> 1854
    //   1056: aload_0
    //   1057: iload 5
    //   1059: i2l
    //   1060: putfield 1462	org/telegram/ui/ChatActivity:mergeDialogId	J
    //   1063: aload_0
    //   1064: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   1067: invokestatic 1992	org/telegram/messenger/MessagesController:getInstance	(I)Lorg/telegram/messenger/MessagesController;
    //   1070: astore 4
    //   1072: aload_0
    //   1073: getfield 1462	org/telegram/ui/ChatActivity:mergeDialogId	J
    //   1076: lstore 7
    //   1078: aload_0
    //   1079: getfield 5057	org/telegram/ui/ChatActivity:loadingFromOldPosition	Z
    //   1082: ifeq +752 -> 1834
    //   1085: bipush 50
    //   1087: istore 5
    //   1089: aload_0
    //   1090: getfield 2335	org/telegram/ui/ChatActivity:startLoadFromMessageId	I
    //   1093: istore_1
    //   1094: aload_0
    //   1095: getfield 996	org/telegram/ui/ChatActivity:classGuid	I
    //   1098: istore 9
    //   1100: aload_0
    //   1101: getfield 1617	org/telegram/ui/ChatActivity:currentChat	Lorg/telegram/tgnet/TLRPC$Chat;
    //   1104: invokestatic 1702	org/telegram/messenger/ChatObject:isChannel	(Lorg/telegram/tgnet/TLRPC$Chat;)Z
    //   1107: istore 10
    //   1109: aload_0
    //   1110: getfield 1105	org/telegram/ui/ChatActivity:lastLoadIndex	I
    //   1113: istore_3
    //   1114: aload_0
    //   1115: iload_3
    //   1116: iconst_1
    //   1117: iadd
    //   1118: putfield 1105	org/telegram/ui/ChatActivity:lastLoadIndex	I
    //   1121: aload 4
    //   1123: lload 7
    //   1125: iload 5
    //   1127: iload_1
    //   1128: iconst_0
    //   1129: iconst_1
    //   1130: iconst_0
    //   1131: iload 9
    //   1133: iconst_3
    //   1134: iconst_0
    //   1135: iload 10
    //   1137: iload_3
    //   1138: invokevirtual 2313	org/telegram/messenger/MessagesController:loadMessages	(JIIIZIIIIZI)V
    //   1141: aload_0
    //   1142: getfield 1617	org/telegram/ui/ChatActivity:currentChat	Lorg/telegram/tgnet/TLRPC$Chat;
    //   1145: ifnull +66 -> 1211
    //   1148: aconst_null
    //   1149: astore 4
    //   1151: aload_0
    //   1152: getfield 820	org/telegram/ui/ChatActivity:isBroadcast	Z
    //   1155: ifeq +13 -> 1168
    //   1158: new 6724	java/util/concurrent/CountDownLatch
    //   1161: dup
    //   1162: iconst_1
    //   1163: invokespecial 6725	java/util/concurrent/CountDownLatch:<init>	(I)V
    //   1166: astore 4
    //   1168: aload_0
    //   1169: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   1172: invokestatic 1992	org/telegram/messenger/MessagesController:getInstance	(I)Lorg/telegram/messenger/MessagesController;
    //   1175: aload_0
    //   1176: getfield 1617	org/telegram/ui/ChatActivity:currentChat	Lorg/telegram/tgnet/TLRPC$Chat;
    //   1179: getfield 2052	org/telegram/tgnet/TLRPC$Chat:id	I
    //   1182: aload 4
    //   1184: aload_0
    //   1185: getfield 1617	org/telegram/ui/ChatActivity:currentChat	Lorg/telegram/tgnet/TLRPC$Chat;
    //   1188: invokestatic 1702	org/telegram/messenger/ChatObject:isChannel	(Lorg/telegram/tgnet/TLRPC$Chat;)Z
    //   1191: invokevirtual 6772	org/telegram/messenger/MessagesController:loadChatInfo	(ILjava/util/concurrent/CountDownLatch;Z)V
    //   1194: aload_0
    //   1195: getfield 820	org/telegram/ui/ChatActivity:isBroadcast	Z
    //   1198: ifeq +13 -> 1211
    //   1201: aload 4
    //   1203: ifnull +8 -> 1211
    //   1206: aload 4
    //   1208: invokevirtual 6735	java/util/concurrent/CountDownLatch:await	()V
    //   1211: iload_2
    //   1212: ifeq +849 -> 2061
    //   1215: aload_0
    //   1216: getfield 2008	org/telegram/ui/ChatActivity:currentUser	Lorg/telegram/tgnet/TLRPC$User;
    //   1219: getfield 2065	org/telegram/tgnet/TLRPC$User:bot	Z
    //   1222: ifeq +839 -> 2061
    //   1225: aload_0
    //   1226: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   1229: invokestatic 1661	org/telegram/messenger/DataQuery:getInstance	(I)Lorg/telegram/messenger/DataQuery;
    //   1232: iload_2
    //   1233: iconst_1
    //   1234: aload_0
    //   1235: getfield 996	org/telegram/ui/ChatActivity:classGuid	I
    //   1238: invokevirtual 5366	org/telegram/messenger/DataQuery:loadBotInfo	(IZI)V
    //   1241: aload_0
    //   1242: getfield 2008	org/telegram/ui/ChatActivity:currentUser	Lorg/telegram/tgnet/TLRPC$User;
    //   1245: ifnull +30 -> 1275
    //   1248: aload_0
    //   1249: aload_0
    //   1250: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   1253: invokestatic 1992	org/telegram/messenger/MessagesController:getInstance	(I)Lorg/telegram/messenger/MessagesController;
    //   1256: getfield 5414	org/telegram/messenger/MessagesController:blockedUsers	Ljava/util/ArrayList;
    //   1259: aload_0
    //   1260: getfield 2008	org/telegram/ui/ChatActivity:currentUser	Lorg/telegram/tgnet/TLRPC$User;
    //   1263: getfield 2041	org/telegram/tgnet/TLRPC$User:id	I
    //   1266: invokestatic 2046	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   1269: invokevirtual 5194	java/util/ArrayList:contains	(Ljava/lang/Object;)Z
    //   1272: putfield 676	org/telegram/ui/ChatActivity:userBlocked	Z
    //   1275: invokestatic 2890	org/telegram/messenger/AndroidUtilities:isTablet	()Z
    //   1278: ifeq +37 -> 1315
    //   1281: aload_0
    //   1282: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   1285: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   1288: getstatic 6775	org/telegram/messenger/NotificationCenter:openedChatChanged	I
    //   1291: iconst_2
    //   1292: anewarray 1822	java/lang/Object
    //   1295: dup
    //   1296: iconst_0
    //   1297: aload_0
    //   1298: getfield 1168	org/telegram/ui/ChatActivity:dialog_id	J
    //   1301: invokestatic 2935	java/lang/Long:valueOf	(J)Ljava/lang/Long;
    //   1304: aastore
    //   1305: dup
    //   1306: iconst_1
    //   1307: iconst_0
    //   1308: invokestatic 6778	java/lang/Boolean:valueOf	(Z)Ljava/lang/Boolean;
    //   1311: aastore
    //   1312: invokevirtual 6782	org/telegram/messenger/NotificationCenter:postNotificationName	(I[Ljava/lang/Object;)V
    //   1315: aload_0
    //   1316: getfield 1681	org/telegram/ui/ChatActivity:currentEncryptedChat	Lorg/telegram/tgnet/TLRPC$EncryptedChat;
    //   1319: ifnull +33 -> 1352
    //   1322: aload_0
    //   1323: getfield 1681	org/telegram/ui/ChatActivity:currentEncryptedChat	Lorg/telegram/tgnet/TLRPC$EncryptedChat;
    //   1326: getfield 1686	org/telegram/tgnet/TLRPC$EncryptedChat:layer	I
    //   1329: invokestatic 6785	org/telegram/messenger/AndroidUtilities:getMyLayerVersion	(I)I
    //   1332: bipush 73
    //   1334: if_icmpeq +18 -> 1352
    //   1337: aload_0
    //   1338: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   1341: invokestatic 6790	org/telegram/messenger/SecretChatHelper:getInstance	(I)Lorg/telegram/messenger/SecretChatHelper;
    //   1344: aload_0
    //   1345: getfield 1681	org/telegram/ui/ChatActivity:currentEncryptedChat	Lorg/telegram/tgnet/TLRPC$EncryptedChat;
    //   1348: aconst_null
    //   1349: invokevirtual 6794	org/telegram/messenger/SecretChatHelper:sendNotifyLayerMessage	(Lorg/telegram/tgnet/TLRPC$EncryptedChat;Lorg/telegram/tgnet/TLRPC$Message;)V
    //   1352: iconst_1
    //   1353: istore 10
    //   1355: iload 10
    //   1357: ireturn
    //   1358: astore 4
    //   1360: aload 4
    //   1362: invokestatic 2263	org/telegram/messenger/FileLog:e	(Ljava/lang/Throwable;)V
    //   1365: goto -1185 -> 180
    //   1368: iconst_0
    //   1369: istore 10
    //   1371: goto -16 -> 1355
    //   1374: aload_0
    //   1375: iconst_1
    //   1376: putfield 820	org/telegram/ui/ChatActivity:isBroadcast	Z
    //   1379: aload_0
    //   1380: iload_1
    //   1381: invokestatic 6797	org/telegram/messenger/AndroidUtilities:makeBroadcastId	(I)J
    //   1384: putfield 1168	org/telegram/ui/ChatActivity:dialog_id	J
    //   1387: goto -1174 -> 213
    //   1390: iload_2
    //   1391: ifeq +156 -> 1547
    //   1394: aload_0
    //   1395: aload_0
    //   1396: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   1399: invokestatic 1992	org/telegram/messenger/MessagesController:getInstance	(I)Lorg/telegram/messenger/MessagesController;
    //   1402: iload_2
    //   1403: invokestatic 2046	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   1406: invokevirtual 2050	org/telegram/messenger/MessagesController:getUser	(Ljava/lang/Integer;)Lorg/telegram/tgnet/TLRPC$User;
    //   1409: putfield 2008	org/telegram/ui/ChatActivity:currentUser	Lorg/telegram/tgnet/TLRPC$User;
    //   1412: aload_0
    //   1413: getfield 2008	org/telegram/ui/ChatActivity:currentUser	Lorg/telegram/tgnet/TLRPC$User;
    //   1416: ifnonnull +71 -> 1487
    //   1419: aload_0
    //   1420: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   1423: invokestatic 3877	org/telegram/messenger/MessagesStorage:getInstance	(I)Lorg/telegram/messenger/MessagesStorage;
    //   1426: astore 6
    //   1428: new 6724	java/util/concurrent/CountDownLatch
    //   1431: dup
    //   1432: iconst_1
    //   1433: invokespecial 6725	java/util/concurrent/CountDownLatch:<init>	(I)V
    //   1436: astore 11
    //   1438: aload 6
    //   1440: invokevirtual 6729	org/telegram/messenger/MessagesStorage:getStorageQueue	()Lorg/telegram/messenger/DispatchQueue;
    //   1443: new 192	org/telegram/ui/ChatActivity$6
    //   1446: dup
    //   1447: aload_0
    //   1448: aload 6
    //   1450: iload_2
    //   1451: aload 11
    //   1453: invokespecial 6798	org/telegram/ui/ChatActivity$6:<init>	(Lorg/telegram/ui/ChatActivity;Lorg/telegram/messenger/MessagesStorage;ILjava/util/concurrent/CountDownLatch;)V
    //   1456: invokevirtual 3588	org/telegram/messenger/DispatchQueue:postRunnable	(Ljava/lang/Runnable;)V
    //   1459: aload 11
    //   1461: invokevirtual 6735	java/util/concurrent/CountDownLatch:await	()V
    //   1464: aload_0
    //   1465: getfield 2008	org/telegram/ui/ChatActivity:currentUser	Lorg/telegram/tgnet/TLRPC$User;
    //   1468: ifnull +73 -> 1541
    //   1471: aload_0
    //   1472: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   1475: invokestatic 1992	org/telegram/messenger/MessagesController:getInstance	(I)Lorg/telegram/messenger/MessagesController;
    //   1478: aload_0
    //   1479: getfield 2008	org/telegram/ui/ChatActivity:currentUser	Lorg/telegram/tgnet/TLRPC$User;
    //   1482: iconst_1
    //   1483: invokevirtual 6802	org/telegram/messenger/MessagesController:putUser	(Lorg/telegram/tgnet/TLRPC$User;Z)Z
    //   1486: pop
    //   1487: aload_0
    //   1488: iload_2
    //   1489: i2l
    //   1490: putfield 1168	org/telegram/ui/ChatActivity:dialog_id	J
    //   1493: aload_0
    //   1494: aload_0
    //   1495: getfield 6707	org/telegram/ui/ChatActivity:arguments	Landroid/os/Bundle;
    //   1498: ldc_w 6803
    //   1501: invokevirtual 6718	android/os/Bundle:getString	(Ljava/lang/String;)Ljava/lang/String;
    //   1504: putfield 1114	org/telegram/ui/ChatActivity:botUser	Ljava/lang/String;
    //   1507: aload 4
    //   1509: ifnull -1274 -> 235
    //   1512: aload_0
    //   1513: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   1516: invokestatic 1992	org/telegram/messenger/MessagesController:getInstance	(I)Lorg/telegram/messenger/MessagesController;
    //   1519: aload_0
    //   1520: getfield 2008	org/telegram/ui/ChatActivity:currentUser	Lorg/telegram/tgnet/TLRPC$User;
    //   1523: aload 4
    //   1525: invokevirtual 6807	org/telegram/messenger/MessagesController:sendBotStart	(Lorg/telegram/tgnet/TLRPC$User;Ljava/lang/String;)V
    //   1528: goto -1293 -> 235
    //   1531: astore 6
    //   1533: aload 6
    //   1535: invokestatic 2263	org/telegram/messenger/FileLog:e	(Ljava/lang/Throwable;)V
    //   1538: goto -74 -> 1464
    //   1541: iconst_0
    //   1542: istore 10
    //   1544: goto -189 -> 1355
    //   1547: iload_3
    //   1548: ifeq +272 -> 1820
    //   1551: aload_0
    //   1552: aload_0
    //   1553: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   1556: invokestatic 1992	org/telegram/messenger/MessagesController:getInstance	(I)Lorg/telegram/messenger/MessagesController;
    //   1559: iload_3
    //   1560: invokestatic 2046	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   1563: invokevirtual 6811	org/telegram/messenger/MessagesController:getEncryptedChat	(Ljava/lang/Integer;)Lorg/telegram/tgnet/TLRPC$EncryptedChat;
    //   1566: putfield 1681	org/telegram/ui/ChatActivity:currentEncryptedChat	Lorg/telegram/tgnet/TLRPC$EncryptedChat;
    //   1569: aload_0
    //   1570: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   1573: invokestatic 3877	org/telegram/messenger/MessagesStorage:getInstance	(I)Lorg/telegram/messenger/MessagesStorage;
    //   1576: astore 4
    //   1578: aload_0
    //   1579: getfield 1681	org/telegram/ui/ChatActivity:currentEncryptedChat	Lorg/telegram/tgnet/TLRPC$EncryptedChat;
    //   1582: ifnonnull +61 -> 1643
    //   1585: new 6724	java/util/concurrent/CountDownLatch
    //   1588: dup
    //   1589: iconst_1
    //   1590: invokespecial 6725	java/util/concurrent/CountDownLatch:<init>	(I)V
    //   1593: astore 6
    //   1595: aload 4
    //   1597: invokevirtual 6729	org/telegram/messenger/MessagesStorage:getStorageQueue	()Lorg/telegram/messenger/DispatchQueue;
    //   1600: new 226	org/telegram/ui/ChatActivity$7
    //   1603: dup
    //   1604: aload_0
    //   1605: aload 4
    //   1607: iload_3
    //   1608: aload 6
    //   1610: invokespecial 6812	org/telegram/ui/ChatActivity$7:<init>	(Lorg/telegram/ui/ChatActivity;Lorg/telegram/messenger/MessagesStorage;ILjava/util/concurrent/CountDownLatch;)V
    //   1613: invokevirtual 3588	org/telegram/messenger/DispatchQueue:postRunnable	(Ljava/lang/Runnable;)V
    //   1616: aload 6
    //   1618: invokevirtual 6735	java/util/concurrent/CountDownLatch:await	()V
    //   1621: aload_0
    //   1622: getfield 1681	org/telegram/ui/ChatActivity:currentEncryptedChat	Lorg/telegram/tgnet/TLRPC$EncryptedChat;
    //   1625: ifnull +173 -> 1798
    //   1628: aload_0
    //   1629: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   1632: invokestatic 1992	org/telegram/messenger/MessagesController:getInstance	(I)Lorg/telegram/messenger/MessagesController;
    //   1635: aload_0
    //   1636: getfield 1681	org/telegram/ui/ChatActivity:currentEncryptedChat	Lorg/telegram/tgnet/TLRPC$EncryptedChat;
    //   1639: iconst_1
    //   1640: invokevirtual 6816	org/telegram/messenger/MessagesController:putEncryptedChat	(Lorg/telegram/tgnet/TLRPC$EncryptedChat;Z)V
    //   1643: aload_0
    //   1644: aload_0
    //   1645: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   1648: invokestatic 1992	org/telegram/messenger/MessagesController:getInstance	(I)Lorg/telegram/messenger/MessagesController;
    //   1651: aload_0
    //   1652: getfield 1681	org/telegram/ui/ChatActivity:currentEncryptedChat	Lorg/telegram/tgnet/TLRPC$EncryptedChat;
    //   1655: getfield 6817	org/telegram/tgnet/TLRPC$EncryptedChat:user_id	I
    //   1658: invokestatic 2046	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   1661: invokevirtual 2050	org/telegram/messenger/MessagesController:getUser	(Ljava/lang/Integer;)Lorg/telegram/tgnet/TLRPC$User;
    //   1664: putfield 2008	org/telegram/ui/ChatActivity:currentUser	Lorg/telegram/tgnet/TLRPC$User;
    //   1667: aload_0
    //   1668: getfield 2008	org/telegram/ui/ChatActivity:currentUser	Lorg/telegram/tgnet/TLRPC$User;
    //   1671: ifnonnull +61 -> 1732
    //   1674: new 6724	java/util/concurrent/CountDownLatch
    //   1677: dup
    //   1678: iconst_1
    //   1679: invokespecial 6725	java/util/concurrent/CountDownLatch:<init>	(I)V
    //   1682: astore 6
    //   1684: aload 4
    //   1686: invokevirtual 6729	org/telegram/messenger/MessagesStorage:getStorageQueue	()Lorg/telegram/messenger/DispatchQueue;
    //   1689: new 260	org/telegram/ui/ChatActivity$8
    //   1692: dup
    //   1693: aload_0
    //   1694: aload 4
    //   1696: aload 6
    //   1698: invokespecial 6820	org/telegram/ui/ChatActivity$8:<init>	(Lorg/telegram/ui/ChatActivity;Lorg/telegram/messenger/MessagesStorage;Ljava/util/concurrent/CountDownLatch;)V
    //   1701: invokevirtual 3588	org/telegram/messenger/DispatchQueue:postRunnable	(Ljava/lang/Runnable;)V
    //   1704: aload 6
    //   1706: invokevirtual 6735	java/util/concurrent/CountDownLatch:await	()V
    //   1709: aload_0
    //   1710: getfield 2008	org/telegram/ui/ChatActivity:currentUser	Lorg/telegram/tgnet/TLRPC$User;
    //   1713: ifnull +101 -> 1814
    //   1716: aload_0
    //   1717: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   1720: invokestatic 1992	org/telegram/messenger/MessagesController:getInstance	(I)Lorg/telegram/messenger/MessagesController;
    //   1723: aload_0
    //   1724: getfield 2008	org/telegram/ui/ChatActivity:currentUser	Lorg/telegram/tgnet/TLRPC$User;
    //   1727: iconst_1
    //   1728: invokevirtual 6802	org/telegram/messenger/MessagesController:putUser	(Lorg/telegram/tgnet/TLRPC$User;Z)Z
    //   1731: pop
    //   1732: aload_0
    //   1733: iload_3
    //   1734: i2l
    //   1735: bipush 32
    //   1737: lshl
    //   1738: putfield 1168	org/telegram/ui/ChatActivity:dialog_id	J
    //   1741: aload_0
    //   1742: getfield 723	org/telegram/ui/ChatActivity:maxMessageId	[I
    //   1745: astore 4
    //   1747: aload_0
    //   1748: getfield 723	org/telegram/ui/ChatActivity:maxMessageId	[I
    //   1751: iconst_1
    //   1752: ldc_w 724
    //   1755: iastore
    //   1756: aload 4
    //   1758: iconst_0
    //   1759: ldc_w 724
    //   1762: iastore
    //   1763: aload_0
    //   1764: getfield 726	org/telegram/ui/ChatActivity:minMessageId	[I
    //   1767: astore 4
    //   1769: aload_0
    //   1770: getfield 726	org/telegram/ui/ChatActivity:minMessageId	[I
    //   1773: iconst_1
    //   1774: ldc_w 721
    //   1777: iastore
    //   1778: aload 4
    //   1780: iconst_0
    //   1781: ldc_w 721
    //   1784: iastore
    //   1785: goto -1550 -> 235
    //   1788: astore 6
    //   1790: aload 6
    //   1792: invokestatic 2263	org/telegram/messenger/FileLog:e	(Ljava/lang/Throwable;)V
    //   1795: goto -174 -> 1621
    //   1798: iconst_0
    //   1799: istore 10
    //   1801: goto -446 -> 1355
    //   1804: astore 4
    //   1806: aload 4
    //   1808: invokestatic 2263	org/telegram/messenger/FileLog:e	(Ljava/lang/Throwable;)V
    //   1811: goto -102 -> 1709
    //   1814: iconst_0
    //   1815: istore 10
    //   1817: goto -462 -> 1355
    //   1820: iconst_0
    //   1821: istore 10
    //   1823: goto -468 -> 1355
    //   1826: aload_0
    //   1827: iconst_1
    //   1828: putfield 2339	org/telegram/ui/ChatActivity:needSelectFromMessageId	Z
    //   1831: goto -802 -> 1029
    //   1834: invokestatic 2890	org/telegram/messenger/AndroidUtilities:isTablet	()Z
    //   1837: ifeq +10 -> 1847
    //   1840: bipush 30
    //   1842: istore 5
    //   1844: goto -755 -> 1089
    //   1847: bipush 20
    //   1849: istore 5
    //   1851: goto -762 -> 1089
    //   1854: aload_0
    //   1855: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   1858: invokestatic 1992	org/telegram/messenger/MessagesController:getInstance	(I)Lorg/telegram/messenger/MessagesController;
    //   1861: astore 4
    //   1863: aload_0
    //   1864: getfield 1168	org/telegram/ui/ChatActivity:dialog_id	J
    //   1867: lstore 7
    //   1869: aload_0
    //   1870: getfield 5057	org/telegram/ui/ChatActivity:loadingFromOldPosition	Z
    //   1873: ifeq +63 -> 1936
    //   1876: bipush 50
    //   1878: istore 5
    //   1880: aload_0
    //   1881: getfield 2335	org/telegram/ui/ChatActivity:startLoadFromMessageId	I
    //   1884: istore_1
    //   1885: aload_0
    //   1886: getfield 996	org/telegram/ui/ChatActivity:classGuid	I
    //   1889: istore_3
    //   1890: aload_0
    //   1891: getfield 1617	org/telegram/ui/ChatActivity:currentChat	Lorg/telegram/tgnet/TLRPC$Chat;
    //   1894: invokestatic 1702	org/telegram/messenger/ChatObject:isChannel	(Lorg/telegram/tgnet/TLRPC$Chat;)Z
    //   1897: istore 10
    //   1899: aload_0
    //   1900: getfield 1105	org/telegram/ui/ChatActivity:lastLoadIndex	I
    //   1903: istore 9
    //   1905: aload_0
    //   1906: iload 9
    //   1908: iconst_1
    //   1909: iadd
    //   1910: putfield 1105	org/telegram/ui/ChatActivity:lastLoadIndex	I
    //   1913: aload 4
    //   1915: lload 7
    //   1917: iload 5
    //   1919: iload_1
    //   1920: iconst_0
    //   1921: iconst_1
    //   1922: iconst_0
    //   1923: iload_3
    //   1924: iconst_3
    //   1925: iconst_0
    //   1926: iload 10
    //   1928: iload 9
    //   1930: invokevirtual 2313	org/telegram/messenger/MessagesController:loadMessages	(JIIIZIIIIZI)V
    //   1933: goto -792 -> 1141
    //   1936: invokestatic 2890	org/telegram/messenger/AndroidUtilities:isTablet	()Z
    //   1939: ifeq +10 -> 1949
    //   1942: bipush 30
    //   1944: istore 5
    //   1946: goto -66 -> 1880
    //   1949: bipush 20
    //   1951: istore 5
    //   1953: goto -73 -> 1880
    //   1956: aload_0
    //   1957: getfield 706	org/telegram/ui/ChatActivity:waitingForLoad	Ljava/util/ArrayList;
    //   1960: aload_0
    //   1961: getfield 1105	org/telegram/ui/ChatActivity:lastLoadIndex	I
    //   1964: invokestatic 2046	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   1967: invokevirtual 2308	java/util/ArrayList:add	(Ljava/lang/Object;)Z
    //   1970: pop
    //   1971: aload_0
    //   1972: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   1975: invokestatic 1992	org/telegram/messenger/MessagesController:getInstance	(I)Lorg/telegram/messenger/MessagesController;
    //   1978: astore 4
    //   1980: aload_0
    //   1981: getfield 1168	org/telegram/ui/ChatActivity:dialog_id	J
    //   1984: lstore 7
    //   1986: invokestatic 2890	org/telegram/messenger/AndroidUtilities:isTablet	()Z
    //   1989: ifeq +55 -> 2044
    //   1992: bipush 30
    //   1994: istore 5
    //   1996: aload_0
    //   1997: getfield 996	org/telegram/ui/ChatActivity:classGuid	I
    //   2000: istore_3
    //   2001: aload_0
    //   2002: getfield 1617	org/telegram/ui/ChatActivity:currentChat	Lorg/telegram/tgnet/TLRPC$Chat;
    //   2005: invokestatic 1702	org/telegram/messenger/ChatObject:isChannel	(Lorg/telegram/tgnet/TLRPC$Chat;)Z
    //   2008: istore 10
    //   2010: aload_0
    //   2011: getfield 1105	org/telegram/ui/ChatActivity:lastLoadIndex	I
    //   2014: istore_1
    //   2015: aload_0
    //   2016: iload_1
    //   2017: iconst_1
    //   2018: iadd
    //   2019: putfield 1105	org/telegram/ui/ChatActivity:lastLoadIndex	I
    //   2022: aload 4
    //   2024: lload 7
    //   2026: iload 5
    //   2028: iconst_0
    //   2029: iconst_0
    //   2030: iconst_1
    //   2031: iconst_0
    //   2032: iload_3
    //   2033: iconst_2
    //   2034: iconst_0
    //   2035: iload 10
    //   2037: iload_1
    //   2038: invokevirtual 2313	org/telegram/messenger/MessagesController:loadMessages	(JIIIZIIIIZI)V
    //   2041: goto -900 -> 1141
    //   2044: bipush 20
    //   2046: istore 5
    //   2048: goto -52 -> 1996
    //   2051: astore 4
    //   2053: aload 4
    //   2055: invokestatic 2263	org/telegram/messenger/FileLog:e	(Ljava/lang/Throwable;)V
    //   2058: goto -847 -> 1211
    //   2061: aload_0
    //   2062: getfield 2067	org/telegram/ui/ChatActivity:info	Lorg/telegram/tgnet/TLRPC$ChatFull;
    //   2065: instanceof 2069
    //   2068: ifeq -827 -> 1241
    //   2071: iconst_0
    //   2072: istore 5
    //   2074: iload 5
    //   2076: aload_0
    //   2077: getfield 2067	org/telegram/ui/ChatActivity:info	Lorg/telegram/tgnet/TLRPC$ChatFull;
    //   2080: getfield 2075	org/telegram/tgnet/TLRPC$ChatFull:participants	Lorg/telegram/tgnet/TLRPC$ChatParticipants;
    //   2083: getfield 2079	org/telegram/tgnet/TLRPC$ChatParticipants:participants	Ljava/util/ArrayList;
    //   2086: invokevirtual 1592	java/util/ArrayList:size	()I
    //   2089: if_icmpge -848 -> 1241
    //   2092: aload_0
    //   2093: getfield 2067	org/telegram/ui/ChatActivity:info	Lorg/telegram/tgnet/TLRPC$ChatFull;
    //   2096: getfield 2075	org/telegram/tgnet/TLRPC$ChatFull:participants	Lorg/telegram/tgnet/TLRPC$ChatParticipants;
    //   2099: getfield 2079	org/telegram/tgnet/TLRPC$ChatParticipants:participants	Ljava/util/ArrayList;
    //   2102: iload 5
    //   2104: invokevirtual 1595	java/util/ArrayList:get	(I)Ljava/lang/Object;
    //   2107: checkcast 2081	org/telegram/tgnet/TLRPC$ChatParticipant
    //   2110: astore 4
    //   2112: aload_0
    //   2113: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   2116: invokestatic 1992	org/telegram/messenger/MessagesController:getInstance	(I)Lorg/telegram/messenger/MessagesController;
    //   2119: aload 4
    //   2121: getfield 2082	org/telegram/tgnet/TLRPC$ChatParticipant:user_id	I
    //   2124: invokestatic 2046	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   2127: invokevirtual 2050	org/telegram/messenger/MessagesController:getUser	(Ljava/lang/Integer;)Lorg/telegram/tgnet/TLRPC$User;
    //   2130: astore 4
    //   2132: aload 4
    //   2134: ifnull +31 -> 2165
    //   2137: aload 4
    //   2139: getfield 2065	org/telegram/tgnet/TLRPC$User:bot	Z
    //   2142: ifeq +23 -> 2165
    //   2145: aload_0
    //   2146: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   2149: invokestatic 1661	org/telegram/messenger/DataQuery:getInstance	(I)Lorg/telegram/messenger/DataQuery;
    //   2152: aload 4
    //   2154: getfield 2041	org/telegram/tgnet/TLRPC$User:id	I
    //   2157: iconst_1
    //   2158: aload_0
    //   2159: getfield 996	org/telegram/ui/ChatActivity:classGuid	I
    //   2162: invokevirtual 5366	org/telegram/messenger/DataQuery:loadBotInfo	(IZI)V
    //   2165: iinc 5 1
    //   2168: goto -94 -> 2074
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	2171	0	this	ChatActivity
    //   11	2027	1	i	int
    //   23	1466	2	j	int
    //   35	1998	3	k	int
    //   61	1146	4	localObject1	Object
    //   1358	166	4	localException1	Exception
    //   1576	203	4	localObject2	Object
    //   1804	3	4	localException2	Exception
    //   1861	162	4	localMessagesController	MessagesController
    //   2051	3	4	localException3	Exception
    //   2110	43	4	localObject3	Object
    //   89	2077	5	m	int
    //   152	1297	6	localMessagesStorage	MessagesStorage
    //   1531	3	6	localException4	Exception
    //   1593	112	6	localCountDownLatch1	CountDownLatch
    //   1788	3	6	localException5	Exception
    //   1076	949	7	l	long
    //   1098	831	9	n	int
    //   1107	929	10	bool	boolean
    //   1436	24	11	localCountDownLatch2	CountDownLatch
    // Exception table:
    //   from	to	target	type
    //   175	180	1358	java/lang/Exception
    //   1459	1464	1531	java/lang/Exception
    //   1616	1621	1788	java/lang/Exception
    //   1704	1709	1804	java/lang/Exception
    //   1206	1211	2051	java/lang/Exception
  }
  
  public void onFragmentDestroy()
  {
    super.onFragmentDestroy();
    if (this.chatActivityEnterView != null) {
      this.chatActivityEnterView.onDestroy();
    }
    if (this.mentionsAdapter != null) {
      this.mentionsAdapter.onDestroy();
    }
    if (this.chatAttachAlert != null) {
      this.chatAttachAlert.dismissInternal();
    }
    MessagesController.getInstance(this.currentAccount).setLastCreatedDialogId(this.dialog_id, false);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.messagesDidLoaded);
    NotificationCenter.getGlobalInstance().removeObserver(this, NotificationCenter.emojiDidLoaded);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.updateInterfaces);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.didReceivedNewMessages);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.closeChats);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.messagesRead);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.messagesDeleted);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.historyCleared);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.messageReceivedByServer);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.messageReceivedByAck);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.messageSendError);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.chatInfoDidLoaded);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.encryptedChatUpdated);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.messagesReadEncrypted);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.removeAllMessagesFromDialog);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.contactsDidLoaded);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.messagePlayingProgressDidChanged);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.messagePlayingDidReset);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.screenshotTook);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.blockedUsersDidLoaded);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.FileNewChunkAvailable);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.didCreatedNewDeleteTask);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.messagePlayingDidStarted);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.updateMessageMedia);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.replaceMessagesObjects);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.notificationsSettingsUpdated);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.didLoadedReplyMessages);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.didReceivedWebpages);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.didReceivedWebpagesInUpdates);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.messagesReadContent);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.botInfoDidLoaded);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.botKeyboardDidLoaded);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.chatSearchResultsAvailable);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.chatSearchResultsLoading);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.messagePlayingPlayStateChanged);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.didUpdatedMessagesViews);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.chatInfoCantLoad);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.didLoadedPinnedMessage);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.peerSettingsDidLoaded);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.newDraftReceived);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.userInfoDidLoaded);
    NotificationCenter.getGlobalInstance().removeObserver(this, NotificationCenter.didSetNewWallpapper);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.channelRightsUpdated);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.updateMentionsCount);
    if (AndroidUtilities.isTablet()) {
      NotificationCenter.getInstance(this.currentAccount).postNotificationName(NotificationCenter.openedChatChanged, new Object[] { Long.valueOf(this.dialog_id), Boolean.valueOf(true) });
    }
    if (this.currentUser != null) {
      MediaController.getInstance().stopMediaObserver();
    }
    if (this.currentEncryptedChat != null) {}
    try
    {
      if ((Build.VERSION.SDK_INT >= 23) && ((SharedConfig.passcodeHash.length() == 0) || (SharedConfig.allowScreenCapture))) {
        MediaController.getInstance().setFlagSecure(this, false);
      }
    }
    catch (Throwable localThrowable)
    {
      for (;;)
      {
        FileLog.e(localThrowable);
      }
    }
    if (this.currentUser != null) {
      MessagesController.getInstance(this.currentAccount).cancelLoadFullUser(this.currentUser.id);
    }
    AndroidUtilities.removeAdjustResize(getParentActivity(), this.classGuid);
    if (this.stickersAdapter != null) {
      this.stickersAdapter.onDestroy();
    }
    if (this.chatAttachAlert != null) {
      this.chatAttachAlert.onDestroy();
    }
    AndroidUtilities.unlockOrientation(getParentActivity());
    if (ChatObject.isChannel(this.currentChat)) {
      MessagesController.getInstance(this.currentAccount).startShortPoll(this.currentChat.id, true);
    }
  }
  
  public void onPause()
  {
    super.onPause();
    MessagesController.getInstance(this.currentAccount).markDialogAsReadNow(this.dialog_id);
    MediaController.getInstance().stopRaiseToEarSensors(this);
    this.paused = true;
    this.wasPaused = true;
    NotificationsController.getInstance(this.currentAccount).setOpenedDialogId(0L);
    Object localObject1 = null;
    Object localObject2 = null;
    Object localObject3 = null;
    boolean bool1 = true;
    Object localObject4 = localObject1;
    Object localObject5 = localObject3;
    boolean bool2 = bool1;
    if (!this.ignoreAttachOnPause)
    {
      localObject4 = localObject1;
      localObject5 = localObject3;
      bool2 = bool1;
      if (this.chatActivityEnterView != null)
      {
        localObject4 = localObject1;
        localObject5 = localObject3;
        bool2 = bool1;
        if (this.bottomOverlayChat.getVisibility() != 0)
        {
          this.chatActivityEnterView.onPause();
          localObject5 = this.replyingMessageObject;
          localObject4 = localObject2;
          if (!this.chatActivityEnterView.isEditingMessage())
          {
            localObject3 = AndroidUtilities.getTrimmedString(this.chatActivityEnterView.getFieldText());
            localObject4 = localObject2;
            if (!TextUtils.isEmpty((CharSequence)localObject3))
            {
              localObject4 = localObject2;
              if (!TextUtils.equals((CharSequence)localObject3, "@gif")) {
                localObject4 = localObject3;
              }
            }
          }
          bool2 = this.chatActivityEnterView.isMessageWebPageSearchEnabled();
          this.chatActivityEnterView.setFieldFocused(false);
        }
      }
    }
    label262:
    label270:
    int j;
    if (this.chatAttachAlert != null)
    {
      if (!this.ignoreAttachOnPause) {
        this.chatAttachAlert.onPause();
      }
    }
    else
    {
      localObject1 = new CharSequence[1];
      localObject1[0] = localObject4;
      localObject2 = DataQuery.getInstance(this.currentAccount).getEntities((CharSequence[])localObject1);
      localObject3 = DataQuery.getInstance(this.currentAccount);
      long l = this.dialog_id;
      localObject1 = localObject1[0];
      if (localObject5 == null) {
        break label506;
      }
      localObject4 = ((MessageObject)localObject5).messageOwner;
      if (bool2) {
        break label512;
      }
      bool2 = true;
      ((DataQuery)localObject3).saveDraft(l, (CharSequence)localObject1, (ArrayList)localObject2, (TLRPC.Message)localObject4, bool2);
      MessagesController.getInstance(this.currentAccount).cancelTyping(0, this.dialog_id);
      if (this.pausedOnLastMessage) {
        break label810;
      }
      localObject5 = MessagesController.getNotificationsSettings(this.currentAccount).edit();
      i = 0;
      j = 0;
      k = i;
      m = j;
      if (this.chatLayoutManager == null) {
        break label731;
      }
      n = this.chatLayoutManager.findFirstVisibleItemPosition();
      k = i;
      m = j;
      if (n == 0) {
        break label731;
      }
      localObject4 = (RecyclerListView.Holder)this.chatListView.findViewHolderForAdapterPosition(n);
      k = i;
      m = j;
      if (localObject4 == null) {
        break label731;
      }
      k = 0;
      if (!(((RecyclerListView.Holder)localObject4).itemView instanceof ChatMessageCell)) {
        break label518;
      }
      k = ((ChatMessageCell)((RecyclerListView.Holder)localObject4).itemView).getMessageObject().getId();
    }
    for (;;)
    {
      if (k == 0) {
        localObject4 = (RecyclerListView.Holder)this.chatListView.findViewHolderForAdapterPosition(n + 1);
      }
      m = 0;
      for (k = n - 1;; k--)
      {
        i = m;
        if (k < this.chatAdapter.messagesStartRow) {
          break label573;
        }
        localObject2 = (MessageObject)this.messages.get(k - this.chatAdapter.messagesStartRow);
        if (((MessageObject)localObject2).getId() != 0) {
          break;
        }
      }
      this.ignoreAttachOnPause = false;
      break;
      label506:
      localObject4 = null;
      break label262;
      label512:
      bool2 = false;
      break label270;
      label518:
      if ((((RecyclerListView.Holder)localObject4).itemView instanceof ChatActionCell)) {
        k = ((ChatActionCell)((RecyclerListView.Holder)localObject4).itemView).getMessageObject().getId();
      }
    }
    int i = m;
    if (!((MessageObject)localObject2).isOut())
    {
      i = m;
      if (((MessageObject)localObject2).isUnread()) {
        i = 1;
      }
    }
    label573:
    int i1 = 0;
    int n = 0;
    int k = i1;
    int m = j;
    if (localObject4 != null)
    {
      k = i1;
      m = j;
      if (i == 0)
      {
        if (!(((RecyclerListView.Holder)localObject4).itemView instanceof ChatMessageCell)) {
          break label829;
        }
        i = ((ChatMessageCell)((RecyclerListView.Holder)localObject4).itemView).getMessageObject().getId();
        if (((i <= 0) || (this.currentEncryptedChat != null)) && ((i >= 0) || (this.currentEncryptedChat == null))) {
          break label863;
        }
        j = ((RecyclerListView.Holder)localObject4).itemView.getBottom() - this.chatListView.getMeasuredHeight();
        k = i;
        m = j;
        if (BuildVars.LOGS_ENABLED)
        {
          FileLog.d("save offset = " + j + " for mid " + i);
          m = j;
          k = i;
        }
      }
    }
    label731:
    if (k != 0)
    {
      ((SharedPreferences.Editor)localObject5).putInt("diditem" + this.dialog_id, k);
      ((SharedPreferences.Editor)localObject5).putInt("diditemo" + this.dialog_id, m);
    }
    for (;;)
    {
      ((SharedPreferences.Editor)localObject5).commit();
      label810:
      if (this.currentUser != null)
      {
        this.chatLeaveTime = System.currentTimeMillis();
        updateInformationForScreenshotDetector();
      }
      return;
      label829:
      i = n;
      if (!(((RecyclerListView.Holder)localObject4).itemView instanceof ChatActionCell)) {
        break;
      }
      i = ((ChatActionCell)((RecyclerListView.Holder)localObject4).itemView).getMessageObject().getId();
      break;
      label863:
      k = 0;
      m = j;
      break label731;
      this.pausedOnLastMessage = true;
      ((SharedPreferences.Editor)localObject5).remove("diditem" + this.dialog_id);
      ((SharedPreferences.Editor)localObject5).remove("diditemo" + this.dialog_id);
    }
  }
  
  protected void onRemoveFromParent()
  {
    MediaController.getInstance().setTextureView(this.videoTextureView, null, null, false);
  }
  
  public void onRequestPermissionsResultFragment(int paramInt, String[] paramArrayOfString, int[] paramArrayOfInt)
  {
    if (this.chatActivityEnterView != null) {
      this.chatActivityEnterView.onRequestPermissionsResultFragment(paramInt, paramArrayOfString, paramArrayOfInt);
    }
    if (this.mentionsAdapter != null) {
      this.mentionsAdapter.onRequestPermissionsResultFragment(paramInt, paramArrayOfString, paramArrayOfInt);
    }
    if ((paramInt == 17) && (this.chatAttachAlert != null)) {
      this.chatAttachAlert.checkCamera(false);
    }
    for (;;)
    {
      return;
      if (paramInt == 21)
      {
        if ((getParentActivity() != null) && (paramArrayOfInt != null) && (paramArrayOfInt.length != 0) && (paramArrayOfInt[0] != 0))
        {
          paramArrayOfString = new AlertDialog.Builder(getParentActivity());
          paramArrayOfString.setTitle(LocaleController.getString("AppName", NUM));
          paramArrayOfString.setMessage(LocaleController.getString("PermissionNoAudioVideo", NUM));
          paramArrayOfString.setNegativeButton(LocaleController.getString("PermissionOpenSettings", NUM), new DialogInterface.OnClickListener()
          {
            @TargetApi(9)
            public void onClick(DialogInterface paramAnonymousDialogInterface, int paramAnonymousInt)
            {
              try
              {
                paramAnonymousDialogInterface = new android/content/Intent;
                paramAnonymousDialogInterface.<init>("android.settings.APPLICATION_DETAILS_SETTINGS");
                StringBuilder localStringBuilder = new java/lang/StringBuilder;
                localStringBuilder.<init>();
                paramAnonymousDialogInterface.setData(Uri.parse("package:" + ApplicationLoader.applicationContext.getPackageName()));
                ChatActivity.this.getParentActivity().startActivity(paramAnonymousDialogInterface);
                return;
              }
              catch (Exception paramAnonymousDialogInterface)
              {
                for (;;)
                {
                  FileLog.e(paramAnonymousDialogInterface);
                }
              }
            }
          });
          paramArrayOfString.setPositiveButton(LocaleController.getString("OK", NUM), null);
          paramArrayOfString.show();
        }
      }
      else if ((paramInt == 19) && (paramArrayOfInt != null) && (paramArrayOfInt.length > 0) && (paramArrayOfInt[0] == 0)) {
        processSelectedAttach(0);
      } else if ((paramInt == 20) && (paramArrayOfInt != null) && (paramArrayOfInt.length > 0) && (paramArrayOfInt[0] == 0)) {
        processSelectedAttach(2);
      } else if ((paramInt == 101) && (this.currentUser != null)) {
        if ((paramArrayOfInt.length > 0) && (paramArrayOfInt[0] == 0)) {
          VoIPHelper.startCall(this.currentUser, getParentActivity(), MessagesController.getInstance(this.currentAccount).getUserFull(this.currentUser.id));
        } else {
          VoIPHelper.permissionDenied(getParentActivity(), null);
        }
      }
    }
  }
  
  public void onResume()
  {
    super.onResume();
    AndroidUtilities.requestAdjustResize(getParentActivity(), this.classGuid);
    MediaController.getInstance().startRaiseToEarSensors(this);
    checkRaiseSensors();
    if (this.chatAttachAlert != null) {
      this.chatAttachAlert.onResume();
    }
    checkActionBarMenu();
    if ((this.replyImageLocation != null) && (this.replyImageView != null)) {
      this.replyImageView.setImage(this.replyImageLocation, "50_50", (Drawable)null);
    }
    if ((this.pinnedImageLocation != null) && (this.pinnedMessageImageView != null)) {
      this.pinnedMessageImageView.setImage(this.pinnedImageLocation, "50_50", (Drawable)null);
    }
    NotificationsController.getInstance(this.currentAccount).setOpenedDialogId(this.dialog_id);
    boolean bool;
    int i;
    if (this.scrollToTopOnResume)
    {
      if ((!this.scrollToTopUnReadOnResume) || (this.scrollToMessage == null)) {
        break label432;
      }
      if (this.chatListView != null)
      {
        bool = true;
        if (this.scrollToMessagePosition != 56536) {
          break label401;
        }
        i = getScrollOffsetForMessage(this.scrollToMessage);
        bool = false;
        this.chatLayoutManager.scrollToPositionWithOffset(this.chatAdapter.messagesStartRow + this.messages.indexOf(this.scrollToMessage), i, bool);
      }
    }
    for (;;)
    {
      this.scrollToTopUnReadOnResume = false;
      this.scrollToTopOnResume = false;
      this.scrollToMessage = null;
      this.paused = false;
      this.pausedOnLastMessage = false;
      checkScrollForLoad(false);
      if (this.wasPaused)
      {
        this.wasPaused = false;
        if (this.chatAdapter != null) {
          this.chatAdapter.notifyDataSetChanged();
        }
      }
      fixLayout();
      applyDraftMaybe(false);
      if ((this.bottomOverlayChat != null) && (this.bottomOverlayChat.getVisibility() != 0)) {
        this.chatActivityEnterView.setFieldFocused(true);
      }
      if (this.chatActivityEnterView != null) {
        this.chatActivityEnterView.onResume();
      }
      if (this.currentUser != null)
      {
        this.chatEnterTime = System.currentTimeMillis();
        this.chatLeaveTime = 0L;
      }
      if (this.startVideoEdit != null) {
        AndroidUtilities.runOnUIThread(new Runnable()
        {
          public void run()
          {
            ChatActivity.this.openVideoEditor(ChatActivity.this.startVideoEdit, null);
            ChatActivity.access$26202(ChatActivity.this, null);
          }
        });
      }
      if ((this.chatListView != null) && ((this.chatActivityEnterView == null) || (!this.chatActivityEnterView.isEditingMessage())))
      {
        this.chatListView.setOnItemLongClickListener(this.onItemLongClickListener);
        this.chatListView.setOnItemClickListener(this.onItemClickListener);
        this.chatListView.setLongClickable(true);
      }
      checkBotCommands();
      return;
      label401:
      if (this.scrollToMessagePosition == 55536)
      {
        i = -AndroidUtilities.dp(11.0F);
        bool = false;
        break;
      }
      i = this.scrollToMessagePosition;
      break;
      label432:
      moveScrollToLastMessage();
    }
  }
  
  public void onTransitionAnimationEnd(boolean paramBoolean1, boolean paramBoolean2)
  {
    NotificationCenter.getInstance(this.currentAccount).setAnimationInProgress(false);
    int i;
    SharedPreferences localSharedPreferences;
    if (paramBoolean1)
    {
      this.openAnimationEnded = true;
      if (this.currentUser != null) {
        MessagesController.getInstance(this.currentAccount).loadFullUser(this.currentUser, this.classGuid, false);
      }
      if (Build.VERSION.SDK_INT >= 21) {
        createChatAttachView();
      }
      if ((this.chatActivityEnterView.hasRecordVideo()) && (!this.chatActivityEnterView.isSendButtonVisible()))
      {
        i = 0;
        if (this.currentChat != null)
        {
          if ((!ChatObject.isChannel(this.currentChat)) || (this.currentChat.megagroup)) {
            break label183;
          }
          i = 1;
        }
        localSharedPreferences = MessagesController.getGlobalMainSettings();
        if (i == 0) {
          break label188;
        }
      }
    }
    label183:
    label188:
    for (String str = "needShowRoundHintChannel";; str = "needShowRoundHint")
    {
      if ((localSharedPreferences.getBoolean(str, true)) && (Utilities.random.nextFloat() < 0.2F))
      {
        showVoiceHint(false, this.chatActivityEnterView.isInVideoMode());
        localSharedPreferences.edit().putBoolean(str, false).commit();
      }
      return;
      i = 0;
      break;
    }
  }
  
  public void onTransitionAnimationStart(boolean paramBoolean1, boolean paramBoolean2)
  {
    NotificationCenter.getInstance(this.currentAccount).setAllowedNotificationsDutingAnimation(new int[] { NotificationCenter.chatInfoDidLoaded, NotificationCenter.dialogsNeedReload, NotificationCenter.closeChats, NotificationCenter.messagesDidLoaded, NotificationCenter.botKeyboardDidLoaded });
    NotificationCenter.getInstance(this.currentAccount).setAnimationInProgress(true);
    if (paramBoolean1) {
      this.openAnimationEnded = false;
    }
  }
  
  public void openVideoEditor(String paramString1, String paramString2)
  {
    if (getParentActivity() != null)
    {
      final Bitmap localBitmap = ThumbnailUtils.createVideoThumbnail(paramString1, 1);
      PhotoViewer.getInstance().setParentActivity(getParentActivity());
      final ArrayList localArrayList = new ArrayList();
      paramString1 = new MediaController.PhotoEntry(0, 0, 0L, paramString1, 0, true);
      paramString1.caption = paramString2;
      localArrayList.add(paramString1);
      PhotoViewer.getInstance().openPhotoForSelect(localArrayList, 0, 2, new PhotoViewer.EmptyPhotoViewerProvider()
      {
        public boolean canScrollAway()
        {
          return false;
        }
        
        public ImageReceiver.BitmapHolder getThumbForPhoto(MessageObject paramAnonymousMessageObject, TLRPC.FileLocation paramAnonymousFileLocation, int paramAnonymousInt)
        {
          return new ImageReceiver.BitmapHolder(localBitmap, null);
        }
        
        public void sendButtonPressed(int paramAnonymousInt, VideoEditedInfo paramAnonymousVideoEditedInfo)
        {
          ChatActivity.this.sendMedia((MediaController.PhotoEntry)localArrayList.get(0), paramAnonymousVideoEditedInfo);
        }
      }, this);
    }
    for (;;)
    {
      return;
      SendMessagesHelper.prepareSendingVideo(paramString1, 0L, 0L, 0, 0, null, this.dialog_id, this.replyingMessageObject, null, null, 0);
      showReplyPanel(false, null, null, null, false);
      DataQuery.getInstance(this.currentAccount).cleanDraft(this.dialog_id, true);
    }
  }
  
  public boolean playFirstUnreadVoiceMessage()
  {
    boolean bool1 = false;
    boolean bool2;
    if ((this.chatActivityEnterView != null) && (this.chatActivityEnterView.isRecordingAudioVideo())) {
      bool2 = true;
    }
    for (;;)
    {
      return bool2;
      for (int i = this.messages.size() - 1;; i--)
      {
        if (i < 0) {
          break label132;
        }
        Object localObject = (MessageObject)this.messages.get(i);
        if (((((MessageObject)localObject).isVoice()) || (((MessageObject)localObject).isRoundVideo())) && (((MessageObject)localObject).isContentUnread()) && (!((MessageObject)localObject).isOut()))
        {
          MediaController localMediaController = MediaController.getInstance();
          if (MediaController.getInstance().playMessage((MessageObject)localObject)) {}
          for (localObject = createVoiceMessagesPlaylist((MessageObject)localObject, true);; localObject = null)
          {
            localMediaController.setVoiceMessagesPlaylist((ArrayList)localObject, true);
            bool2 = true;
            break;
          }
        }
      }
      label132:
      bool2 = bool1;
      if (Build.VERSION.SDK_INT >= 23)
      {
        bool2 = bool1;
        if (getParentActivity() != null)
        {
          bool2 = bool1;
          if (getParentActivity().checkSelfPermission("android.permission.RECORD_AUDIO") != 0)
          {
            getParentActivity().requestPermissions(new String[] { "android.permission.RECORD_AUDIO" }, 3);
            bool2 = true;
          }
        }
      }
    }
  }
  
  public void processInlineBotContextPM(TLRPC.TL_inlineBotSwitchPM paramTL_inlineBotSwitchPM)
  {
    if (paramTL_inlineBotSwitchPM == null) {}
    for (;;)
    {
      return;
      TLRPC.User localUser = this.mentionsAdapter.getContextBotUser();
      if (localUser != null)
      {
        this.chatActivityEnterView.setFieldText("");
        if (this.dialog_id == localUser.id)
        {
          this.inlineReturn = this.dialog_id;
          MessagesController.getInstance(this.currentAccount).sendBotStart(this.currentUser, paramTL_inlineBotSwitchPM.start_param);
        }
        else
        {
          Bundle localBundle = new Bundle();
          localBundle.putInt("user_id", localUser.id);
          localBundle.putString("inline_query", paramTL_inlineBotSwitchPM.start_param);
          localBundle.putLong("inline_return", this.dialog_id);
          if (MessagesController.getInstance(this.currentAccount).checkCanOpenChat(localBundle, this)) {
            presentFragment(new ChatActivity(localBundle));
          }
        }
      }
    }
  }
  
  public boolean processSendingText(String paramString)
  {
    return this.chatActivityEnterView.processSendingText(paramString);
  }
  
  public boolean processSwitchButton(TLRPC.TL_keyboardButtonSwitchInline paramTL_keyboardButtonSwitchInline)
  {
    boolean bool;
    if ((this.inlineReturn == 0L) || (paramTL_keyboardButtonSwitchInline.same_peer) || (this.parentLayout == null))
    {
      bool = false;
      return bool;
    }
    paramTL_keyboardButtonSwitchInline = "@" + this.currentUser.username + " " + paramTL_keyboardButtonSwitchInline.query;
    if (this.inlineReturn == this.dialog_id)
    {
      this.inlineReturn = 0L;
      this.chatActivityEnterView.setFieldText(paramTL_keyboardButtonSwitchInline);
    }
    for (;;)
    {
      bool = true;
      break;
      DataQuery.getInstance(this.currentAccount).saveDraft(this.inlineReturn, paramTL_keyboardButtonSwitchInline, null, null, false);
      if (this.parentLayout.fragmentsStack.size() > 1)
      {
        paramTL_keyboardButtonSwitchInline = (BaseFragment)this.parentLayout.fragmentsStack.get(this.parentLayout.fragmentsStack.size() - 2);
        if ((!(paramTL_keyboardButtonSwitchInline instanceof ChatActivity)) || (((ChatActivity)paramTL_keyboardButtonSwitchInline).dialog_id != this.inlineReturn)) {
          break label184;
        }
        finishFragment();
      }
    }
    label184:
    paramTL_keyboardButtonSwitchInline = new Bundle();
    int i = (int)this.inlineReturn;
    int j = (int)(this.inlineReturn >> 32);
    if (i != 0) {
      if (i > 0) {
        paramTL_keyboardButtonSwitchInline.putInt("user_id", i);
      }
    }
    for (;;)
    {
      presentFragment(new ChatActivity(paramTL_keyboardButtonSwitchInline), true);
      break;
      if (i < 0)
      {
        paramTL_keyboardButtonSwitchInline.putInt("chat_id", -i);
        continue;
        paramTL_keyboardButtonSwitchInline.putInt("enc_id", j);
      }
    }
  }
  
  public void restoreSelfArgs(Bundle paramBundle)
  {
    this.currentPicturePath = paramBundle.getString("path");
  }
  
  public void saveSelfArgs(Bundle paramBundle)
  {
    if (this.currentPicturePath != null) {
      paramBundle.putString("path", this.currentPicturePath);
    }
  }
  
  public void scrollToMessageId(int paramInt1, int paramInt2, boolean paramBoolean1, int paramInt3, boolean paramBoolean2)
  {
    this.wasManualScroll = true;
    Object localObject1 = (MessageObject)this.messagesDict[paramInt3].get(paramInt1);
    int i = 0;
    int j;
    label101:
    int n;
    label120:
    Object localObject2;
    if (localObject1 != null) {
      if (this.messages.indexOf(localObject1) != -1) {
        if (paramBoolean1)
        {
          this.highlightMessageId = paramInt1;
          j = getScrollOffsetForMessage((MessageObject)localObject1);
          if (!paramBoolean2) {
            break label271;
          }
          if (this.messages.get(this.messages.size() - 1) != localObject1) {
            break label244;
          }
          this.chatListView.smoothScrollToPosition(this.chatAdapter.getItemCount() - 1);
          updateVisibleRows();
          int k = 0;
          int m = this.chatListView.getChildCount();
          n = 0;
          j = k;
          if (n < m)
          {
            localObject2 = this.chatListView.getChildAt(n);
            if (!(localObject2 instanceof ChatMessageCell)) {
              break label344;
            }
            localObject2 = ((ChatMessageCell)localObject2).getMessageObject();
            if ((localObject2 == null) || (((MessageObject)localObject2).getId() != ((MessageObject)localObject1).getId())) {
              break label386;
            }
            j = 1;
          }
          label181:
          n = i;
          if (j == 0)
          {
            showPagedownButton(true, true);
            n = i;
          }
        }
      }
    }
    label244:
    label271:
    label344:
    label386:
    long l;
    for (;;)
    {
      if (n != 0)
      {
        if ((this.currentEncryptedChat != null) && (!MessagesStorage.getInstance(this.currentAccount).checkMessageId(this.dialog_id, this.startLoadFromMessageId)))
        {
          return;
          this.highlightMessageId = Integer.MAX_VALUE;
          break;
          this.chatListView.smoothScrollToPosition(this.chatAdapter.messagesStartRow + this.messages.indexOf(localObject1));
          break label101;
          if (this.messages.get(this.messages.size() - 1) == localObject1)
          {
            this.chatLayoutManager.scrollToPositionWithOffset(this.chatAdapter.getItemCount() - 1, j, false);
            break label101;
          }
          this.chatLayoutManager.scrollToPositionWithOffset(this.chatAdapter.messagesStartRow + this.messages.indexOf(localObject1), j, false);
          break label101;
          if ((localObject2 instanceof ChatActionCell))
          {
            localObject2 = ((ChatActionCell)localObject2).getMessageObject();
            if ((localObject2 != null) && (((MessageObject)localObject2).getId() == ((MessageObject)localObject1).getId()))
            {
              j = 1;
              break label181;
            }
          }
          n++;
          break label120;
          n = 1;
          continue;
          n = 1;
          continue;
        }
        this.waitingForLoad.clear();
        this.waitingForReplyMessageLoad = true;
        this.highlightMessageId = Integer.MAX_VALUE;
        this.scrollToMessagePosition = 55536;
        this.startLoadFromMessageId = paramInt1;
        if (paramInt1 == this.createUnreadMessageAfterId) {
          this.createUnreadMessageAfterIdLoading = true;
        }
        this.waitingForLoad.add(Integer.valueOf(this.lastLoadIndex));
        localObject1 = MessagesController.getInstance(this.currentAccount);
        if (paramInt3 != 0) {
          break label567;
        }
        l = this.dialog_id;
        label483:
        if (!AndroidUtilities.isTablet()) {
          break label576;
        }
      }
    }
    label567:
    label576:
    for (paramInt1 = 30;; paramInt1 = 20)
    {
      n = this.startLoadFromMessageId;
      j = this.classGuid;
      paramBoolean2 = ChatObject.isChannel(this.currentChat);
      i = this.lastLoadIndex;
      this.lastLoadIndex = (i + 1);
      ((MessagesController)localObject1).loadMessages(l, paramInt1, n, 0, true, 0, j, 3, 0, paramBoolean2, i);
      this.returnToMessageId = paramInt2;
      this.returnToLoadIndex = paramInt3;
      this.needSelectFromMessageId = paramBoolean1;
      break;
      l = this.mergeDialogId;
      break label483;
    }
  }
  
  public void sendMedia(MediaController.PhotoEntry paramPhotoEntry, VideoEditedInfo paramVideoEditedInfo)
  {
    if (paramPhotoEntry.isVideo) {
      if (paramVideoEditedInfo != null)
      {
        SendMessagesHelper.prepareSendingVideo(paramPhotoEntry.path, paramVideoEditedInfo.estimatedSize, paramVideoEditedInfo.estimatedDuration, paramVideoEditedInfo.resultWidth, paramVideoEditedInfo.resultHeight, paramVideoEditedInfo, this.dialog_id, this.replyingMessageObject, paramPhotoEntry.caption, paramPhotoEntry.entities, paramPhotoEntry.ttl);
        showReplyPanel(false, null, null, null, false);
        DataQuery.getInstance(this.currentAccount).cleanDraft(this.dialog_id, true);
      }
    }
    for (;;)
    {
      return;
      SendMessagesHelper.prepareSendingVideo(paramPhotoEntry.path, 0L, 0L, 0, 0, null, this.dialog_id, this.replyingMessageObject, paramPhotoEntry.caption, paramPhotoEntry.entities, paramPhotoEntry.ttl);
      break;
      if (paramPhotoEntry.imagePath != null)
      {
        SendMessagesHelper.prepareSendingPhoto(paramPhotoEntry.imagePath, null, this.dialog_id, this.replyingMessageObject, paramPhotoEntry.caption, paramPhotoEntry.entities, paramPhotoEntry.stickers, null, paramPhotoEntry.ttl);
        showReplyPanel(false, null, null, null, false);
        DataQuery.getInstance(this.currentAccount).cleanDraft(this.dialog_id, true);
      }
      else if (paramPhotoEntry.path != null)
      {
        SendMessagesHelper.prepareSendingPhoto(paramPhotoEntry.path, null, this.dialog_id, this.replyingMessageObject, paramPhotoEntry.caption, paramPhotoEntry.entities, paramPhotoEntry.stickers, null, paramPhotoEntry.ttl);
        showReplyPanel(false, null, null, null, false);
        DataQuery.getInstance(this.currentAccount).cleanDraft(this.dialog_id, true);
      }
    }
  }
  
  public void setBotUser(String paramString)
  {
    if (this.inlineReturn != 0L) {
      MessagesController.getInstance(this.currentAccount).sendBotStart(this.currentUser, paramString);
    }
    for (;;)
    {
      return;
      this.botUser = paramString;
      updateBottomOverlay();
    }
  }
  
  protected void setIgnoreAttachOnPause(boolean paramBoolean)
  {
    this.ignoreAttachOnPause = paramBoolean;
  }
  
  public void shareMyContact(final MessageObject paramMessageObject)
  {
    AlertDialog.Builder localBuilder = new AlertDialog.Builder(getParentActivity());
    localBuilder.setTitle(LocaleController.getString("ShareYouPhoneNumberTitle", NUM));
    if (this.currentUser != null) {
      if (this.currentUser.bot) {
        localBuilder.setMessage(LocaleController.getString("AreYouSureShareMyContactInfoBot", NUM));
      }
    }
    for (;;)
    {
      localBuilder.setPositiveButton(LocaleController.getString("OK", NUM), new DialogInterface.OnClickListener()
      {
        public void onClick(DialogInterface paramAnonymousDialogInterface, int paramAnonymousInt)
        {
          SendMessagesHelper.getInstance(ChatActivity.this.currentAccount).sendMessage(UserConfig.getInstance(ChatActivity.this.currentAccount).getCurrentUser(), ChatActivity.this.dialog_id, paramMessageObject, null, null);
          ChatActivity.this.moveScrollToLastMessage();
          ChatActivity.this.showReplyPanel(false, null, null, null, false);
        }
      });
      localBuilder.setNegativeButton(LocaleController.getString("Cancel", NUM), null);
      showDialog(localBuilder.create());
      return;
      localBuilder.setMessage(AndroidUtilities.replaceTags(LocaleController.formatString("AreYouSureShareMyContactInfoUser", NUM, new Object[] { PhoneFormat.getInstance().format("+" + UserConfig.getInstance(this.currentAccount).getCurrentUser().phone), ContactsController.formatName(this.currentUser.first_name, this.currentUser.last_name) })));
      continue;
      localBuilder.setMessage(LocaleController.getString("AreYouSureShareMyContactInfo", NUM));
    }
  }
  
  public void showAlert(String paramString1, String paramString2)
  {
    if ((this.alertView == null) || (paramString1 == null) || (paramString2 == null)) {}
    for (;;)
    {
      return;
      if (this.alertView.getTag() != null)
      {
        this.alertView.setTag(null);
        if (this.alertViewAnimator != null)
        {
          this.alertViewAnimator.cancel();
          this.alertViewAnimator = null;
        }
        this.alertView.setVisibility(0);
        this.alertViewAnimator = new AnimatorSet();
        this.alertViewAnimator.playTogether(new Animator[] { ObjectAnimator.ofFloat(this.alertView, "translationY", new float[] { 0.0F }) });
        this.alertViewAnimator.setDuration(200L);
        this.alertViewAnimator.addListener(new AnimatorListenerAdapter()
        {
          public void onAnimationCancel(Animator paramAnonymousAnimator)
          {
            if ((ChatActivity.this.alertViewAnimator != null) && (ChatActivity.this.alertViewAnimator.equals(paramAnonymousAnimator))) {
              ChatActivity.access$25702(ChatActivity.this, null);
            }
          }
          
          public void onAnimationEnd(Animator paramAnonymousAnimator)
          {
            if ((ChatActivity.this.alertViewAnimator != null) && (ChatActivity.this.alertViewAnimator.equals(paramAnonymousAnimator))) {
              ChatActivity.access$25702(ChatActivity.this, null);
            }
          }
        });
        this.alertViewAnimator.start();
      }
      this.alertNameTextView.setText(paramString1);
      this.alertTextView.setText(Emoji.replaceEmoji(paramString2.replace('\n', ' '), this.alertTextView.getPaint().getFontMetricsInt(), AndroidUtilities.dp(14.0F), false));
      if (this.hideAlertViewRunnable != null) {
        AndroidUtilities.cancelRunOnUIThread(this.hideAlertViewRunnable);
      }
      paramString1 = new Runnable()
      {
        public void run()
        {
          if (ChatActivity.this.hideAlertViewRunnable != this) {}
          for (;;)
          {
            return;
            if (ChatActivity.this.alertView.getTag() == null)
            {
              ChatActivity.this.alertView.setTag(Integer.valueOf(1));
              if (ChatActivity.this.alertViewAnimator != null)
              {
                ChatActivity.this.alertViewAnimator.cancel();
                ChatActivity.access$25702(ChatActivity.this, null);
              }
              ChatActivity.access$25702(ChatActivity.this, new AnimatorSet());
              ChatActivity.this.alertViewAnimator.playTogether(new Animator[] { ObjectAnimator.ofFloat(ChatActivity.this.alertView, "translationY", new float[] { -AndroidUtilities.dp(50.0F) }) });
              ChatActivity.this.alertViewAnimator.setDuration(200L);
              ChatActivity.this.alertViewAnimator.addListener(new AnimatorListenerAdapter()
              {
                public void onAnimationCancel(Animator paramAnonymous2Animator)
                {
                  if ((ChatActivity.this.alertViewAnimator != null) && (ChatActivity.this.alertViewAnimator.equals(paramAnonymous2Animator))) {
                    ChatActivity.access$25702(ChatActivity.this, null);
                  }
                }
                
                public void onAnimationEnd(Animator paramAnonymous2Animator)
                {
                  if ((ChatActivity.this.alertViewAnimator != null) && (ChatActivity.this.alertViewAnimator.equals(paramAnonymous2Animator)))
                  {
                    ChatActivity.this.alertView.setVisibility(8);
                    ChatActivity.access$25702(ChatActivity.this, null);
                  }
                }
              });
              ChatActivity.this.alertViewAnimator.start();
            }
          }
        }
      };
      this.hideAlertViewRunnable = paramString1;
      AndroidUtilities.runOnUIThread(paramString1, 3000L);
    }
  }
  
  public void showOpenGameAlert(final TLRPC.TL_game paramTL_game, final MessageObject paramMessageObject, final String paramString, boolean paramBoolean, final int paramInt)
  {
    TLRPC.User localUser = MessagesController.getInstance(this.currentAccount).getUser(Integer.valueOf(paramInt));
    if (paramBoolean)
    {
      localObject1 = new AlertDialog.Builder(getParentActivity());
      ((AlertDialog.Builder)localObject1).setTitle(LocaleController.getString("AppName", NUM));
      if (localUser != null)
      {
        localObject2 = ContactsController.formatName(localUser.first_name, localUser.last_name);
        ((AlertDialog.Builder)localObject1).setMessage(LocaleController.formatString("BotPermissionGameAlert", NUM, new Object[] { localObject2 }));
        ((AlertDialog.Builder)localObject1).setPositiveButton(LocaleController.getString("OK", NUM), new DialogInterface.OnClickListener()
        {
          public void onClick(DialogInterface paramAnonymousDialogInterface, int paramAnonymousInt)
          {
            ChatActivity.this.showOpenGameAlert(paramTL_game, paramMessageObject, paramString, false, paramInt);
            MessagesController.getNotificationsSettings(ChatActivity.this.currentAccount).edit().putBoolean("askgame_" + paramInt, false).commit();
          }
        });
        ((AlertDialog.Builder)localObject1).setNegativeButton(LocaleController.getString("Cancel", NUM), null);
        showDialog(((AlertDialog.Builder)localObject1).create());
      }
    }
    do
    {
      return;
      localObject2 = "";
      break;
      if ((Build.VERSION.SDK_INT < 21) || (AndroidUtilities.isTablet()) || (!WebviewActivity.supportWebview())) {
        break label261;
      }
    } while (this.parentLayout.fragmentsStack.get(this.parentLayout.fragmentsStack.size() - 1) != this);
    if ((localUser != null) && (!TextUtils.isEmpty(localUser.username))) {}
    for (Object localObject2 = localUser.username;; localObject2 = "")
    {
      presentFragment(new WebviewActivity(paramString, (String)localObject2, paramTL_game.title, paramTL_game.short_name, paramMessageObject));
      break;
    }
    label261:
    localObject2 = getParentActivity();
    Object localObject1 = paramTL_game.short_name;
    if ((localUser != null) && (localUser.username != null)) {}
    for (paramTL_game = localUser.username;; paramTL_game = "")
    {
      WebviewActivity.openGameInBrowser(paramString, paramMessageObject, (Activity)localObject2, (String)localObject1, paramTL_game);
      break;
    }
  }
  
  public void showOpenUrlAlert(final String paramString, boolean paramBoolean)
  {
    boolean bool = true;
    Object localObject;
    if ((Browser.isInternalUrl(paramString, null)) || (!paramBoolean))
    {
      localObject = getParentActivity();
      if (this.inlineReturn == 0L)
      {
        paramBoolean = bool;
        Browser.openUrl((Context)localObject, paramString, paramBoolean);
      }
    }
    for (;;)
    {
      return;
      paramBoolean = false;
      break;
      localObject = new AlertDialog.Builder(getParentActivity());
      ((AlertDialog.Builder)localObject).setTitle(LocaleController.getString("AppName", NUM));
      ((AlertDialog.Builder)localObject).setMessage(LocaleController.formatString("OpenUrlAlert", NUM, new Object[] { paramString }));
      ((AlertDialog.Builder)localObject).setPositiveButton(LocaleController.getString("Open", NUM), new DialogInterface.OnClickListener()
      {
        public void onClick(DialogInterface paramAnonymousDialogInterface, int paramAnonymousInt)
        {
          paramAnonymousDialogInterface = ChatActivity.this.getParentActivity();
          String str = paramString;
          if (ChatActivity.this.inlineReturn == 0L) {}
          for (boolean bool = true;; bool = false)
          {
            Browser.openUrl(paramAnonymousDialogInterface, str, bool);
            return;
          }
        }
      });
      ((AlertDialog.Builder)localObject).setNegativeButton(LocaleController.getString("Cancel", NUM), null);
      showDialog(((AlertDialog.Builder)localObject).create());
    }
  }
  
  public void showReplyPanel(boolean paramBoolean1, MessageObject paramMessageObject, ArrayList<MessageObject> paramArrayList, TLRPC.WebPage paramWebPage, boolean paramBoolean2)
  {
    if (this.chatActivityEnterView == null) {}
    for (;;)
    {
      return;
      if (paramBoolean1)
      {
        if ((paramMessageObject != null) || (paramArrayList != null) || (paramWebPage != null))
        {
          if ((this.searchItem != null) && (this.actionBar.isSearchFieldVisible()))
          {
            this.actionBar.closeSearchField(false);
            this.chatActivityEnterView.setFieldFocused();
            AndroidUtilities.runOnUIThread(new Runnable()
            {
              public void run()
              {
                if (ChatActivity.this.chatActivityEnterView != null) {
                  ChatActivity.this.chatActivityEnterView.openKeyboard();
                }
              }
            }, 100L);
          }
          paramBoolean2 = false;
          paramBoolean1 = paramBoolean2;
          Object localObject1 = paramMessageObject;
          Object localObject2 = paramArrayList;
          if (paramMessageObject != null)
          {
            paramBoolean1 = paramBoolean2;
            localObject1 = paramMessageObject;
            localObject2 = paramArrayList;
            if (paramMessageObject.getDialogId() != this.dialog_id)
            {
              localObject2 = new ArrayList();
              ((ArrayList)localObject2).add(paramMessageObject);
              localObject1 = null;
              paramBoolean1 = true;
            }
          }
          if (localObject1 != null)
          {
            this.forwardingMessages = null;
            this.replyingMessageObject = ((MessageObject)localObject1);
            this.chatActivityEnterView.setReplyingMessageObject((MessageObject)localObject1);
            if (this.foundWebPage != null) {
              continue;
            }
            if (((MessageObject)localObject1).isFromUser())
            {
              paramMessageObject = MessagesController.getInstance(this.currentAccount).getUser(Integer.valueOf(((MessageObject)localObject1).messageOwner.from_id));
              if (paramMessageObject == null) {
                continue;
              }
              paramMessageObject = UserObject.getUserName(paramMessageObject);
              label200:
              this.replyIconImageView.setImageResource(NUM);
              this.replyNameTextView.setText(paramMessageObject);
              if (!(((MessageObject)localObject1).messageOwner.media instanceof TLRPC.TL_messageMediaGame)) {
                break label486;
              }
              this.replyObjectTextView.setText(Emoji.replaceEmoji(((MessageObject)localObject1).messageOwner.media.game.title, this.replyObjectTextView.getPaint().getFontMetricsInt(), AndroidUtilities.dp(14.0F), false));
              paramMessageObject = (MessageObject)localObject1;
            }
          }
          int i;
          for (;;)
          {
            localObject2 = (FrameLayout.LayoutParams)this.replyNameTextView.getLayoutParams();
            localObject1 = (FrameLayout.LayoutParams)this.replyObjectTextView.getLayoutParams();
            paramArrayList = null;
            if (paramMessageObject != null)
            {
              paramWebPage = FileLoader.getClosestPhotoSizeWithSize(paramMessageObject.photoThumbs2, 80);
              paramArrayList = paramWebPage;
              if (paramWebPage == null) {
                paramArrayList = FileLoader.getClosestPhotoSizeWithSize(paramMessageObject.photoThumbs, 80);
              }
            }
            if ((paramArrayList != null) && (!(paramArrayList instanceof TLRPC.TL_photoSizeEmpty)) && (!(paramArrayList.location instanceof TLRPC.TL_fileLocationUnavailable)) && (paramMessageObject.type != 13) && ((paramMessageObject == null) || (!paramMessageObject.isSecretMedia()))) {
              break label1931;
            }
            this.replyImageView.setImageBitmap(null);
            this.replyImageLocation = null;
            this.replyImageView.setVisibility(4);
            i = AndroidUtilities.dp(52.0F);
            ((FrameLayout.LayoutParams)localObject1).leftMargin = i;
            ((FrameLayout.LayoutParams)localObject2).leftMargin = i;
            this.replyNameTextView.setLayoutParams((ViewGroup.LayoutParams)localObject2);
            this.replyObjectTextView.setLayoutParams((ViewGroup.LayoutParams)localObject1);
            this.chatActivityEnterView.showTopView(false, paramBoolean1);
            break;
            paramMessageObject = MessagesController.getInstance(this.currentAccount).getChat(Integer.valueOf(((MessageObject)localObject1).messageOwner.to_id.channel_id));
            if (paramMessageObject == null) {
              break;
            }
            paramMessageObject = paramMessageObject.title;
            break label200;
            label486:
            paramMessageObject = (MessageObject)localObject1;
            if (((MessageObject)localObject1).messageText != null)
            {
              paramArrayList = ((MessageObject)localObject1).messageText.toString();
              paramMessageObject = paramArrayList;
              if (paramArrayList.length() > 150) {
                paramMessageObject = paramArrayList.substring(0, 150);
              }
              paramMessageObject = paramMessageObject.replace('\n', ' ');
              this.replyObjectTextView.setText(Emoji.replaceEmoji(paramMessageObject, this.replyObjectTextView.getPaint().getFontMetricsInt(), AndroidUtilities.dp(14.0F), false));
              paramMessageObject = (MessageObject)localObject1;
              continue;
              if (localObject2 != null)
              {
                if (((ArrayList)localObject2).isEmpty()) {
                  break;
                }
                this.replyingMessageObject = null;
                this.chatActivityEnterView.setReplyingMessageObject(null);
                this.forwardingMessages = ((ArrayList)localObject2);
                if (this.foundWebPage != null) {
                  break;
                }
                this.chatActivityEnterView.setForceShowSendButton(true, false);
                paramWebPage = new ArrayList();
                this.replyIconImageView.setImageResource(NUM);
                paramMessageObject = (MessageObject)((ArrayList)localObject2).get(0);
                if (paramMessageObject.isFromUser())
                {
                  paramWebPage.add(Integer.valueOf(paramMessageObject.messageOwner.from_id));
                  i = ((MessageObject)((ArrayList)localObject2).get(0)).type;
                  j = 1;
                  label689:
                  if (j >= ((ArrayList)localObject2).size()) {
                    break label820;
                  }
                  paramMessageObject = (MessageObject)((ArrayList)localObject2).get(j);
                  if (!paramMessageObject.isFromUser()) {
                    break label802;
                  }
                }
                label802:
                for (paramMessageObject = Integer.valueOf(paramMessageObject.messageOwner.from_id);; paramMessageObject = Integer.valueOf(-paramMessageObject.messageOwner.to_id.channel_id))
                {
                  if (!paramWebPage.contains(paramMessageObject)) {
                    paramWebPage.add(paramMessageObject);
                  }
                  int k = i;
                  if (((MessageObject)((ArrayList)localObject2).get(j)).type != i) {
                    k = -1;
                  }
                  j++;
                  i = k;
                  break label689;
                  paramWebPage.add(Integer.valueOf(-paramMessageObject.messageOwner.to_id.channel_id));
                  break;
                }
                label820:
                StringBuilder localStringBuilder = new StringBuilder();
                int j = 0;
                if (j < paramWebPage.size())
                {
                  Integer localInteger = (Integer)paramWebPage.get(j);
                  paramArrayList = null;
                  paramMessageObject = null;
                  if (localInteger.intValue() > 0)
                  {
                    paramMessageObject = MessagesController.getInstance(this.currentAccount).getUser(localInteger);
                    label879:
                    if ((paramMessageObject != null) || (paramArrayList != null)) {
                      break label916;
                    }
                  }
                  for (;;)
                  {
                    j++;
                    break;
                    paramArrayList = MessagesController.getInstance(this.currentAccount).getChat(Integer.valueOf(-localInteger.intValue()));
                    break label879;
                    label916:
                    if (paramWebPage.size() == 1)
                    {
                      if (paramMessageObject != null) {
                        localStringBuilder.append(UserObject.getUserName(paramMessageObject));
                      } else {
                        localStringBuilder.append(paramArrayList.title);
                      }
                    }
                    else
                    {
                      if ((paramWebPage.size() != 2) && (localStringBuilder.length() != 0)) {
                        break label1064;
                      }
                      if (localStringBuilder.length() > 0) {
                        localStringBuilder.append(", ");
                      }
                      if (paramMessageObject != null)
                      {
                        if (!TextUtils.isEmpty(paramMessageObject.first_name)) {
                          localStringBuilder.append(paramMessageObject.first_name);
                        } else if (!TextUtils.isEmpty(paramMessageObject.last_name)) {
                          localStringBuilder.append(paramMessageObject.last_name);
                        } else {
                          localStringBuilder.append(" ");
                        }
                      }
                      else {
                        localStringBuilder.append(paramArrayList.title);
                      }
                    }
                  }
                  label1064:
                  localStringBuilder.append(" ");
                  localStringBuilder.append(LocaleController.formatPluralString("AndOther", paramWebPage.size() - 1));
                }
                this.replyNameTextView.setText(localStringBuilder);
                if ((i == -1) || (i == 0) || (i == 10) || (i == 11))
                {
                  if ((((ArrayList)localObject2).size() == 1) && (((MessageObject)((ArrayList)localObject2).get(0)).messageText != null))
                  {
                    paramMessageObject = (MessageObject)((ArrayList)localObject2).get(0);
                    if ((paramMessageObject.messageOwner.media instanceof TLRPC.TL_messageMediaGame))
                    {
                      this.replyObjectTextView.setText(Emoji.replaceEmoji(paramMessageObject.messageOwner.media.game.title, this.replyObjectTextView.getPaint().getFontMetricsInt(), AndroidUtilities.dp(14.0F), false));
                      paramMessageObject = (MessageObject)localObject1;
                      continue;
                    }
                    paramArrayList = paramMessageObject.messageText.toString();
                    paramMessageObject = paramArrayList;
                    if (paramArrayList.length() > 150) {
                      paramMessageObject = paramArrayList.substring(0, 150);
                    }
                    paramMessageObject = paramMessageObject.replace('\n', ' ');
                    this.replyObjectTextView.setText(Emoji.replaceEmoji(paramMessageObject, this.replyObjectTextView.getPaint().getFontMetricsInt(), AndroidUtilities.dp(14.0F), false));
                    paramMessageObject = (MessageObject)localObject1;
                    continue;
                  }
                  this.replyObjectTextView.setText(LocaleController.formatPluralString("ForwardedMessageCount", ((ArrayList)localObject2).size()));
                  paramMessageObject = (MessageObject)localObject1;
                  continue;
                }
                if (i == 1)
                {
                  this.replyObjectTextView.setText(LocaleController.formatPluralString("ForwardedPhoto", ((ArrayList)localObject2).size()));
                  paramMessageObject = (MessageObject)localObject1;
                  if (((ArrayList)localObject2).size() != 1) {
                    continue;
                  }
                  paramMessageObject = (MessageObject)((ArrayList)localObject2).get(0);
                  continue;
                }
                if (i == 4)
                {
                  this.replyObjectTextView.setText(LocaleController.formatPluralString("ForwardedLocation", ((ArrayList)localObject2).size()));
                  paramMessageObject = (MessageObject)localObject1;
                  continue;
                }
                if (i == 3)
                {
                  this.replyObjectTextView.setText(LocaleController.formatPluralString("ForwardedVideo", ((ArrayList)localObject2).size()));
                  paramMessageObject = (MessageObject)localObject1;
                  if (((ArrayList)localObject2).size() != 1) {
                    continue;
                  }
                  paramMessageObject = (MessageObject)((ArrayList)localObject2).get(0);
                  continue;
                }
                if (i == 12)
                {
                  this.replyObjectTextView.setText(LocaleController.formatPluralString("ForwardedContact", ((ArrayList)localObject2).size()));
                  paramMessageObject = (MessageObject)localObject1;
                  continue;
                }
                if (i == 2)
                {
                  this.replyObjectTextView.setText(LocaleController.formatPluralString("ForwardedAudio", ((ArrayList)localObject2).size()));
                  paramMessageObject = (MessageObject)localObject1;
                  continue;
                }
                if (i == 5)
                {
                  this.replyObjectTextView.setText(LocaleController.formatPluralString("ForwardedRound", ((ArrayList)localObject2).size()));
                  paramMessageObject = (MessageObject)localObject1;
                  continue;
                }
                if (i == 14)
                {
                  this.replyObjectTextView.setText(LocaleController.formatPluralString("ForwardedMusic", ((ArrayList)localObject2).size()));
                  paramMessageObject = (MessageObject)localObject1;
                  continue;
                }
                if (i == 13)
                {
                  this.replyObjectTextView.setText(LocaleController.formatPluralString("ForwardedSticker", ((ArrayList)localObject2).size()));
                  paramMessageObject = (MessageObject)localObject1;
                  continue;
                }
                if (i != 8)
                {
                  paramMessageObject = (MessageObject)localObject1;
                  if (i != 9) {
                    continue;
                  }
                }
                if (((ArrayList)localObject2).size() == 1)
                {
                  if (i == 8)
                  {
                    this.replyObjectTextView.setText(LocaleController.getString("AttachGif", NUM));
                    paramMessageObject = (MessageObject)localObject1;
                    continue;
                  }
                  paramMessageObject = FileLoader.getDocumentFileName(((MessageObject)((ArrayList)localObject2).get(0)).getDocument());
                  if (paramMessageObject.length() != 0) {
                    this.replyObjectTextView.setText(paramMessageObject);
                  }
                  paramMessageObject = (MessageObject)((ArrayList)localObject2).get(0);
                  continue;
                }
                this.replyObjectTextView.setText(LocaleController.formatPluralString("ForwardedFile", ((ArrayList)localObject2).size()));
                paramMessageObject = (MessageObject)localObject1;
                continue;
              }
              this.replyIconImageView.setImageResource(NUM);
              if (!(paramWebPage instanceof TLRPC.TL_webPagePending)) {
                break label1772;
              }
              this.replyNameTextView.setText(LocaleController.getString("GettingLinkInfo", NUM));
              this.replyObjectTextView.setText(this.pendingLinkSearchString);
              paramMessageObject = (MessageObject)localObject1;
            }
          }
          label1772:
          if (paramWebPage.site_name != null)
          {
            this.replyNameTextView.setText(paramWebPage.site_name);
            label1792:
            if (paramWebPage.title == null) {
              break label1870;
            }
            this.replyObjectTextView.setText(paramWebPage.title);
          }
          for (;;)
          {
            this.chatActivityEnterView.setWebPage(paramWebPage, true);
            paramMessageObject = (MessageObject)localObject1;
            break;
            if (paramWebPage.title != null)
            {
              this.replyNameTextView.setText(paramWebPage.title);
              break label1792;
            }
            this.replyNameTextView.setText(LocaleController.getString("LinkPreview", NUM));
            break label1792;
            label1870:
            if (paramWebPage.description != null) {
              this.replyObjectTextView.setText(paramWebPage.description);
            } else if (paramWebPage.author != null) {
              this.replyObjectTextView.setText(paramWebPage.author);
            } else {
              this.replyObjectTextView.setText(paramWebPage.display_url);
            }
          }
          label1931:
          if (paramMessageObject.isRoundVideo()) {
            this.replyImageView.setRoundRadius(AndroidUtilities.dp(17.0F));
          }
          for (;;)
          {
            this.replyImageLocation = paramArrayList.location;
            this.replyImageView.setImage(this.replyImageLocation, "50_50", (Drawable)null);
            this.replyImageView.setVisibility(0);
            i = AndroidUtilities.dp(96.0F);
            ((FrameLayout.LayoutParams)localObject1).leftMargin = i;
            ((FrameLayout.LayoutParams)localObject2).leftMargin = i;
            break;
            this.replyImageView.setRoundRadius(0);
          }
        }
      }
      else if ((this.replyingMessageObject != null) || (this.forwardingMessages != null) || (this.foundWebPage != null))
      {
        if ((this.replyingMessageObject != null) && ((this.replyingMessageObject.messageOwner.reply_markup instanceof TLRPC.TL_replyKeyboardForceReply))) {
          MessagesController.getMainSettings(this.currentAccount).edit().putInt("answered_" + this.dialog_id, this.replyingMessageObject.getId()).commit();
        }
        if (this.foundWebPage != null)
        {
          this.foundWebPage = null;
          paramMessageObject = this.chatActivityEnterView;
          if (!paramBoolean2) {}
          for (paramBoolean1 = true;; paramBoolean1 = false)
          {
            paramMessageObject.setWebPage(null, paramBoolean1);
            if ((paramWebPage == null) || ((this.replyingMessageObject == null) && (this.forwardingMessages == null))) {
              break label2190;
            }
            showReplyPanel(true, this.replyingMessageObject, this.forwardingMessages, null, false);
            break;
          }
        }
        label2190:
        if (this.forwardingMessages != null) {
          forwardMessages(this.forwardingMessages, false);
        }
        this.chatActivityEnterView.setForceShowSendButton(false, false);
        this.chatActivityEnterView.hideTopView(false);
        this.chatActivityEnterView.setReplyingMessageObject(null);
        this.replyingMessageObject = null;
        this.forwardingMessages = null;
        this.replyImageLocation = null;
      }
    }
  }
  
  public class ChatActivityAdapter
    extends RecyclerView.Adapter
  {
    private int botInfoRow = -1;
    private boolean isBot;
    private int loadingDownRow;
    private int loadingUpRow;
    private Context mContext;
    private int messagesEndRow;
    private int messagesStartRow;
    private int rowCount;
    
    public ChatActivityAdapter(Context paramContext)
    {
      this.mContext = paramContext;
      if ((ChatActivity.this.currentUser != null) && (ChatActivity.this.currentUser.bot)) {}
      for (boolean bool = true;; bool = false)
      {
        this.isBot = bool;
        return;
      }
    }
    
    public int getItemCount()
    {
      return this.rowCount;
    }
    
    public long getItemId(int paramInt)
    {
      return -1L;
    }
    
    public int getItemViewType(int paramInt)
    {
      if ((paramInt >= this.messagesStartRow) && (paramInt < this.messagesEndRow)) {
        paramInt = ((MessageObject)ChatActivity.this.messages.get(paramInt - this.messagesStartRow)).contentType;
      }
      for (;;)
      {
        return paramInt;
        if (paramInt == this.botInfoRow) {
          paramInt = 3;
        } else {
          paramInt = 4;
        }
      }
    }
    
    public void notifyDataSetChanged()
    {
      updateRows();
      try
      {
        super.notifyDataSetChanged();
        return;
      }
      catch (Exception localException)
      {
        for (;;)
        {
          FileLog.e(localException);
        }
      }
    }
    
    public void notifyItemChanged(int paramInt)
    {
      try
      {
        super.notifyItemChanged(paramInt);
        return;
      }
      catch (Exception localException)
      {
        for (;;)
        {
          FileLog.e(localException);
        }
      }
    }
    
    public void notifyItemInserted(int paramInt)
    {
      updateRows();
      try
      {
        super.notifyItemInserted(paramInt);
        return;
      }
      catch (Exception localException)
      {
        for (;;)
        {
          FileLog.e(localException);
        }
      }
    }
    
    public void notifyItemMoved(int paramInt1, int paramInt2)
    {
      updateRows();
      try
      {
        super.notifyItemMoved(paramInt1, paramInt2);
        return;
      }
      catch (Exception localException)
      {
        for (;;)
        {
          FileLog.e(localException);
        }
      }
    }
    
    public void notifyItemRangeChanged(int paramInt1, int paramInt2)
    {
      try
      {
        super.notifyItemRangeChanged(paramInt1, paramInt2);
        return;
      }
      catch (Exception localException)
      {
        for (;;)
        {
          FileLog.e(localException);
        }
      }
    }
    
    public void notifyItemRangeInserted(int paramInt1, int paramInt2)
    {
      updateRows();
      try
      {
        super.notifyItemRangeInserted(paramInt1, paramInt2);
        return;
      }
      catch (Exception localException)
      {
        for (;;)
        {
          FileLog.e(localException);
        }
      }
    }
    
    public void notifyItemRangeRemoved(int paramInt1, int paramInt2)
    {
      updateRows();
      try
      {
        super.notifyItemRangeRemoved(paramInt1, paramInt2);
        return;
      }
      catch (Exception localException)
      {
        for (;;)
        {
          FileLog.e(localException);
        }
      }
    }
    
    public void notifyItemRemoved(int paramInt)
    {
      updateRows();
      try
      {
        super.notifyItemRemoved(paramInt);
        return;
      }
      catch (Exception localException)
      {
        for (;;)
        {
          FileLog.e(localException);
        }
      }
    }
    
    public void onBindViewHolder(RecyclerView.ViewHolder paramViewHolder, int paramInt)
    {
      if (paramInt == this.botInfoRow)
      {
        localObject1 = (BotHelpCell)paramViewHolder.itemView;
        if (ChatActivity.this.botInfo.size() != 0)
        {
          paramViewHolder = ((TLRPC.BotInfo)ChatActivity.this.botInfo.get(ChatActivity.this.currentUser.id)).description;
          ((BotHelpCell)localObject1).setText(paramViewHolder);
        }
      }
      boolean bool1;
      do
      {
        return;
        paramViewHolder = null;
        break;
        if ((paramInt == this.loadingDownRow) || (paramInt == this.loadingUpRow))
        {
          paramViewHolder = (ChatLoadingCell)paramViewHolder.itemView;
          if (ChatActivity.this.loadsCount > 1) {}
          for (bool1 = true;; bool1 = false)
          {
            paramViewHolder.setProgressVisible(bool1);
            break;
          }
        }
      } while ((paramInt < this.messagesStartRow) || (paramInt >= this.messagesEndRow));
      Object localObject1 = (MessageObject)ChatActivity.this.messages.get(paramInt - this.messagesStartRow);
      View localView = paramViewHolder.itemView;
      final ChatMessageCell localChatMessageCell;
      label203:
      boolean bool2;
      boolean bool3;
      Object localObject2;
      int i;
      label283:
      label316:
      int j;
      if ((localView instanceof ChatMessageCell))
      {
        localChatMessageCell = (ChatMessageCell)localView;
        if ((ChatActivity.this.currentChat != null) || (UserObject.isUserSelf(ChatActivity.this.currentUser)))
        {
          bool1 = true;
          localChatMessageCell.isChat = bool1;
          bool2 = false;
          bool3 = false;
          bool1 = false;
          MessageObject.GroupedMessages localGroupedMessages = ChatActivity.this.getValidGroupedMessage((MessageObject)localObject1);
          if (localGroupedMessages == null) {
            break label1015;
          }
          localObject2 = (MessageObject.GroupedMessagePosition)localGroupedMessages.positions.get(localObject1);
          if (localObject2 == null) {
            break label1005;
          }
          if ((((MessageObject.GroupedMessagePosition)localObject2).flags & 0x4) == 0) {
            break label986;
          }
          i = localGroupedMessages.posArray.indexOf(localObject2) + paramInt + 1;
          bool3 = bool1;
          if ((((MessageObject.GroupedMessagePosition)localObject2).flags & 0x8) == 0) {
            break label996;
          }
          paramInt = paramInt - localGroupedMessages.posArray.size() + localGroupedMessages.posArray.indexOf(localObject2);
          j = getItemViewType(paramInt);
          int k = getItemViewType(i);
          bool1 = bool2;
          if (!(((MessageObject)localObject1).messageOwner.reply_markup instanceof TLRPC.TL_replyInlineMarkup))
          {
            bool1 = bool2;
            if (j == paramViewHolder.getItemViewType())
            {
              localObject2 = (MessageObject)ChatActivity.this.messages.get(paramInt - this.messagesStartRow);
              if ((((MessageObject)localObject2).isOutOwner() != ((MessageObject)localObject1).isOutOwner()) || (Math.abs(((MessageObject)localObject2).messageOwner.date - ((MessageObject)localObject1).messageOwner.date) > 300)) {
                break label1035;
              }
              bool2 = true;
              label422:
              bool1 = bool2;
              if (bool2)
              {
                if (ChatActivity.this.currentChat == null) {
                  break label1047;
                }
                if (((MessageObject)localObject2).messageOwner.from_id != ((MessageObject)localObject1).messageOwner.from_id) {
                  break label1041;
                }
                bool1 = true;
              }
            }
          }
          label462:
          if (k == paramViewHolder.getItemViewType())
          {
            paramViewHolder = (MessageObject)ChatActivity.this.messages.get(i - this.messagesStartRow);
            if (((paramViewHolder.messageOwner.reply_markup instanceof TLRPC.TL_replyInlineMarkup)) || (paramViewHolder.isOutOwner() != ((MessageObject)localObject1).isOutOwner()) || (Math.abs(paramViewHolder.messageOwner.date - ((MessageObject)localObject1).messageOwner.date) > 300)) {
              break label1088;
            }
            bool2 = true;
            label543:
            bool3 = bool2;
            if (bool2)
            {
              if (ChatActivity.this.currentChat == null) {
                break label1100;
              }
              if (paramViewHolder.messageOwner.from_id != ((MessageObject)localObject1).messageOwner.from_id) {
                break label1094;
              }
              bool3 = true;
            }
          }
          label582:
          localChatMessageCell.setMessageObject((MessageObject)localObject1, localGroupedMessages, bool1, bool3);
          if (((localView instanceof ChatMessageCell)) && (DownloadController.getInstance(ChatActivity.this.currentAccount).canDownloadMedia((MessageObject)localObject1))) {
            ((ChatMessageCell)localView).downloadAudioIfNeed();
          }
          if ((ChatActivity.this.highlightMessageId == Integer.MAX_VALUE) || (((MessageObject)localObject1).getId() != ChatActivity.this.highlightMessageId)) {
            break label1140;
          }
          bool1 = true;
          label657:
          localChatMessageCell.setHighlighted(bool1);
          if ((ChatActivity.this.searchContainer == null) || (ChatActivity.this.searchContainer.getVisibility() != 0)) {
            break label1152;
          }
          paramViewHolder = DataQuery.getInstance(ChatActivity.this.currentAccount);
          paramInt = ((MessageObject)localObject1).getId();
          if (((MessageObject)localObject1).getDialogId() != ChatActivity.this.mergeDialogId) {
            break label1146;
          }
          bool1 = true;
          label721:
          if ((!paramViewHolder.isMessageFound(paramInt, bool1)) || (DataQuery.getInstance(ChatActivity.this.currentAccount).getLastSearchQuery() == null)) {
            break label1152;
          }
          localChatMessageCell.setHighlightedText(DataQuery.getInstance(ChatActivity.this.currentAccount).getLastSearchQuery());
          label765:
          paramInt = ChatActivity.this.animatingMessageObjects.indexOf(localObject1);
          if (paramInt != -1)
          {
            ChatActivity.this.animatingMessageObjects.remove(paramInt);
            localChatMessageCell.getViewTreeObserver().addOnPreDrawListener(new ViewTreeObserver.OnPreDrawListener()
            {
              public boolean onPreDraw()
              {
                Object localObject1 = PipRoundVideoView.getInstance();
                if (localObject1 != null) {
                  ((PipRoundVideoView)localObject1).showTemporary(true);
                }
                localChatMessageCell.getViewTreeObserver().removeOnPreDrawListener(this);
                Object localObject2 = localChatMessageCell.getPhotoImage();
                int i = ((ImageReceiver)localObject2).getImageWidth();
                localObject1 = ChatActivity.this.instantCameraView.getCameraRect();
                float f = i / ((org.telegram.ui.Components.Rect)localObject1).width;
                int[] arrayOfInt = new int[2];
                localChatMessageCell.setAlpha(0.0F);
                localChatMessageCell.getLocationOnScreen(arrayOfInt);
                arrayOfInt[0] += ((ImageReceiver)localObject2).getImageX();
                arrayOfInt[1] += ((ImageReceiver)localObject2).getImageY();
                final FrameLayout localFrameLayout = ChatActivity.this.instantCameraView.getCameraContainer();
                localFrameLayout.setPivotX(0.0F);
                localFrameLayout.setPivotY(0.0F);
                localObject2 = new AnimatorSet();
                ((AnimatorSet)localObject2).playTogether(new Animator[] { ObjectAnimator.ofFloat(ChatActivity.this.instantCameraView, "alpha", new float[] { 0.0F }), ObjectAnimator.ofFloat(localFrameLayout, "scaleX", new float[] { f }), ObjectAnimator.ofFloat(localFrameLayout, "scaleY", new float[] { f }), ObjectAnimator.ofFloat(localFrameLayout, "translationX", new float[] { arrayOfInt[0] - ((org.telegram.ui.Components.Rect)localObject1).x }), ObjectAnimator.ofFloat(localFrameLayout, "translationY", new float[] { arrayOfInt[1] - ((org.telegram.ui.Components.Rect)localObject1).y }), ObjectAnimator.ofFloat(ChatActivity.this.instantCameraView.getSwitchButtonView(), "alpha", new float[] { 0.0F }), ObjectAnimator.ofInt(ChatActivity.this.instantCameraView.getPaint(), "alpha", new int[] { 0 }), ObjectAnimator.ofFloat(ChatActivity.this.instantCameraView.getMuteImageView(), "alpha", new float[] { 0.0F }) });
                ((AnimatorSet)localObject2).setDuration(180L);
                ((AnimatorSet)localObject2).setInterpolator(new DecelerateInterpolator());
                ((AnimatorSet)localObject2).addListener(new AnimatorListenerAdapter()
                {
                  public void onAnimationEnd(Animator paramAnonymous2Animator)
                  {
                    paramAnonymous2Animator = new AnimatorSet();
                    paramAnonymous2Animator.playTogether(new Animator[] { ObjectAnimator.ofFloat(localFrameLayout, "alpha", new float[] { 0.0F }), ObjectAnimator.ofFloat(ChatActivity.ChatActivityAdapter.4.this.val$messageCell, "alpha", new float[] { 1.0F }) });
                    paramAnonymous2Animator.setDuration(100L);
                    paramAnonymous2Animator.setInterpolator(new DecelerateInterpolator());
                    paramAnonymous2Animator.addListener(new AnimatorListenerAdapter()
                    {
                      public void onAnimationEnd(Animator paramAnonymous3Animator)
                      {
                        ChatActivity.this.instantCameraView.hideCamera(true);
                        ChatActivity.this.instantCameraView.setVisibility(4);
                      }
                    });
                    paramAnonymous2Animator.start();
                  }
                });
                ((AnimatorSet)localObject2).start();
                return true;
              }
            });
          }
          label812:
          if ((localObject1 == null) || (((MessageObject)localObject1).messageOwner == null) || (!((MessageObject)localObject1).messageOwner.media_unread) || (!((MessageObject)localObject1).messageOwner.mentioned)) {
            break label1233;
          }
          if ((!((MessageObject)localObject1).isVoice()) && (!((MessageObject)localObject1).isRoundVideo()))
          {
            ChatActivity.access$15110(ChatActivity.this);
            if (ChatActivity.this.newMentionsCount > 0) {
              break label1235;
            }
            ChatActivity.access$15102(ChatActivity.this, 0);
            ChatActivity.access$14602(ChatActivity.this, true);
            ChatActivity.this.showMentiondownButton(false, true);
            label902:
            paramViewHolder = MessagesController.getInstance(ChatActivity.this.currentAccount);
            i = ((MessageObject)localObject1).getId();
            if (!ChatObject.isChannel(ChatActivity.this.currentChat)) {
              break label1271;
            }
          }
        }
      }
      label986:
      label996:
      label1005:
      label1015:
      label1035:
      label1041:
      label1047:
      label1088:
      label1094:
      label1100:
      label1140:
      label1146:
      label1152:
      label1233:
      label1235:
      label1271:
      for (paramInt = ChatActivity.this.currentChat.id;; paramInt = 0)
      {
        paramViewHolder.markMentionMessageAsRead(i, paramInt, ChatActivity.this.dialog_id);
        ((MessageObject)localObject1).setContentIsRead();
        if (!(localView instanceof ChatMessageCell)) {
          break;
        }
        ((ChatMessageCell)localView).setHighlightedAnimated();
        break;
        bool1 = false;
        break label203;
        bool3 = true;
        i = -100;
        break label283;
        bool2 = true;
        paramInt = -100;
        break label316;
        i = -100;
        paramInt = -100;
        break label316;
        i = paramInt - 1;
        j = paramInt + 1;
        paramInt = i;
        i = j;
        break label316;
        bool2 = false;
        break label422;
        bool1 = false;
        break label462;
        bool1 = bool2;
        if (!UserObject.isUserSelf(ChatActivity.this.currentUser)) {
          break label462;
        }
        if (((MessageObject)localObject2).getFromId() == ((MessageObject)localObject1).getFromId()) {}
        for (bool1 = true;; bool1 = false) {
          break;
        }
        bool2 = false;
        break label543;
        bool3 = false;
        break label582;
        bool3 = bool2;
        if (!UserObject.isUserSelf(ChatActivity.this.currentUser)) {
          break label582;
        }
        if (paramViewHolder.getFromId() == ((MessageObject)localObject1).getFromId()) {}
        for (bool3 = true;; bool3 = false) {
          break;
        }
        bool1 = false;
        break label657;
        bool1 = false;
        break label721;
        localChatMessageCell.setHighlightedText(null);
        break label765;
        if ((localView instanceof ChatActionCell))
        {
          paramViewHolder = (ChatActionCell)localView;
          paramViewHolder.setMessageObject((MessageObject)localObject1);
          paramViewHolder.setAlpha(1.0F);
          break label812;
        }
        if (!(localView instanceof ChatUnreadCell)) {
          break label812;
        }
        ((ChatUnreadCell)localView).setText(LocaleController.getString("UnreadMessages", NUM));
        if (ChatActivity.this.createUnreadMessageAfterId == 0) {
          break label812;
        }
        ChatActivity.access$14302(ChatActivity.this, 0);
        break label812;
        break;
        ChatActivity.this.mentiondownButtonCounter.setText(String.format("%d", new Object[] { Integer.valueOf(ChatActivity.this.newMentionsCount) }));
        break label902;
      }
    }
    
    public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup paramViewGroup, int paramInt)
    {
      paramViewGroup = null;
      Object localObject;
      if (paramInt == 0) {
        if (!ChatActivity.this.chatMessageCellsCache.isEmpty())
        {
          localObject = (View)ChatActivity.this.chatMessageCellsCache.get(0);
          ChatActivity.this.chatMessageCellsCache.remove(0);
          ChatMessageCell localChatMessageCell = (ChatMessageCell)localObject;
          localChatMessageCell.setDelegate(new ChatMessageCell.ChatMessageCellDelegate()
          {
            public boolean canPerformActions()
            {
              if ((ChatActivity.this.actionBar != null) && (!ChatActivity.this.actionBar.isActionModeShowed())) {}
              for (boolean bool = true;; bool = false) {
                return bool;
              }
            }
            
            public void didLongPressed(ChatMessageCell paramAnonymousChatMessageCell)
            {
              ChatActivity.this.createMenu(paramAnonymousChatMessageCell, false, false);
            }
            
            public void didPressedBotButton(ChatMessageCell paramAnonymousChatMessageCell, TLRPC.KeyboardButton paramAnonymousKeyboardButton)
            {
              if ((ChatActivity.this.getParentActivity() == null) || ((ChatActivity.this.bottomOverlayChat.getVisibility() == 0) && (!(paramAnonymousKeyboardButton instanceof TLRPC.TL_keyboardButtonSwitchInline)) && (!(paramAnonymousKeyboardButton instanceof TLRPC.TL_keyboardButtonCallback)) && (!(paramAnonymousKeyboardButton instanceof TLRPC.TL_keyboardButtonGame)) && (!(paramAnonymousKeyboardButton instanceof TLRPC.TL_keyboardButtonUrl)) && (!(paramAnonymousKeyboardButton instanceof TLRPC.TL_keyboardButtonBuy)))) {}
              for (;;)
              {
                return;
                ChatActivity.this.chatActivityEnterView.didPressedBotButton(paramAnonymousKeyboardButton, paramAnonymousChatMessageCell.getMessageObject(), paramAnonymousChatMessageCell.getMessageObject());
              }
            }
            
            public void didPressedCancelSendButton(ChatMessageCell paramAnonymousChatMessageCell)
            {
              paramAnonymousChatMessageCell = paramAnonymousChatMessageCell.getMessageObject();
              if (paramAnonymousChatMessageCell.messageOwner.send_state != 0) {
                SendMessagesHelper.getInstance(ChatActivity.this.currentAccount).cancelSendingMessage(paramAnonymousChatMessageCell);
              }
            }
            
            public void didPressedChannelAvatar(ChatMessageCell paramAnonymousChatMessageCell, TLRPC.Chat paramAnonymousChat, int paramAnonymousInt)
            {
              if (ChatActivity.this.actionBar.isActionModeShowed()) {
                ChatActivity.this.processRowSelect(paramAnonymousChatMessageCell, true);
              }
              for (;;)
              {
                return;
                if ((paramAnonymousChat != null) && (paramAnonymousChat != ChatActivity.this.currentChat))
                {
                  Bundle localBundle = new Bundle();
                  localBundle.putInt("chat_id", paramAnonymousChat.id);
                  if (paramAnonymousInt != 0) {
                    localBundle.putInt("message_id", paramAnonymousInt);
                  }
                  if (MessagesController.getInstance(ChatActivity.this.currentAccount).checkCanOpenChat(localBundle, ChatActivity.this, paramAnonymousChatMessageCell.getMessageObject())) {
                    ChatActivity.this.presentFragment(new ChatActivity(localBundle), true);
                  }
                }
              }
            }
            
            public void didPressedImage(ChatMessageCell paramAnonymousChatMessageCell)
            {
              Object localObject1 = paramAnonymousChatMessageCell.getMessageObject();
              if (((MessageObject)localObject1).isSendError()) {
                ChatActivity.this.createMenu(paramAnonymousChatMessageCell, false, false);
              }
              for (;;)
              {
                return;
                if (!((MessageObject)localObject1).isSending()) {
                  if (((MessageObject)localObject1).needDrawBluredPreview())
                  {
                    if (ChatActivity.this.sendSecretMessageRead((MessageObject)localObject1)) {
                      paramAnonymousChatMessageCell.invalidate();
                    }
                    SecretMediaViewer.getInstance().setParentActivity(ChatActivity.this.getParentActivity());
                    SecretMediaViewer.getInstance().openMedia((MessageObject)localObject1, ChatActivity.this.photoViewerProvider);
                  }
                  else
                  {
                    Object localObject2;
                    Object localObject3;
                    if (((MessageObject)localObject1).type == 13)
                    {
                      ChatActivity localChatActivity = ChatActivity.this;
                      localObject2 = ChatActivity.this.getParentActivity();
                      localObject3 = ChatActivity.this;
                      localObject1 = ((MessageObject)localObject1).getInputStickerSet();
                      if ((ChatActivity.this.bottomOverlayChat.getVisibility() != 0) && (ChatObject.canSendStickers(ChatActivity.this.currentChat))) {}
                      for (paramAnonymousChatMessageCell = ChatActivity.this.chatActivityEnterView;; paramAnonymousChatMessageCell = null)
                      {
                        localChatActivity.showDialog(new StickersAlert((Context)localObject2, (BaseFragment)localObject3, (TLRPC.InputStickerSet)localObject1, null, paramAnonymousChatMessageCell));
                        break;
                      }
                    }
                    if ((((MessageObject)localObject1).isVideo()) || (((MessageObject)localObject1).type == 1) || ((((MessageObject)localObject1).type == 0) && (!((MessageObject)localObject1).isWebpageDocument())) || (((MessageObject)localObject1).isGif()))
                    {
                      if (((MessageObject)localObject1).isVideo()) {
                        ChatActivity.this.sendSecretMessageRead((MessageObject)localObject1);
                      }
                      PhotoViewer.getInstance().setParentActivity(ChatActivity.this.getParentActivity());
                      paramAnonymousChatMessageCell = PhotoViewer.getInstance();
                      long l1;
                      if (((MessageObject)localObject1).type != 0)
                      {
                        l1 = ChatActivity.this.dialog_id;
                        label301:
                        if (((MessageObject)localObject1).type == 0) {
                          break label364;
                        }
                      }
                      label364:
                      for (long l2 = ChatActivity.this.mergeDialogId;; l2 = 0L)
                      {
                        if (!paramAnonymousChatMessageCell.openPhoto((MessageObject)localObject1, l1, l2, ChatActivity.this.photoViewerProvider)) {
                          break label368;
                        }
                        PhotoViewer.getInstance().setParentChatActivity(ChatActivity.this);
                        break;
                        l1 = 0L;
                        break label301;
                      }
                    }
                    else
                    {
                      label368:
                      if (((MessageObject)localObject1).type == 3)
                      {
                        ChatActivity.this.sendSecretMessageRead((MessageObject)localObject1);
                        localObject2 = null;
                        paramAnonymousChatMessageCell = (ChatMessageCell)localObject2;
                        for (;;)
                        {
                          try
                          {
                            if (((MessageObject)localObject1).messageOwner.attachPath != null)
                            {
                              paramAnonymousChatMessageCell = (ChatMessageCell)localObject2;
                              if (((MessageObject)localObject1).messageOwner.attachPath.length() != 0)
                              {
                                paramAnonymousChatMessageCell = new java/io/File;
                                paramAnonymousChatMessageCell.<init>(((MessageObject)localObject1).messageOwner.attachPath);
                              }
                            }
                            if (paramAnonymousChatMessageCell != null)
                            {
                              localObject2 = paramAnonymousChatMessageCell;
                              if (paramAnonymousChatMessageCell.exists()) {}
                            }
                            else
                            {
                              localObject2 = FileLoader.getPathToMessage(((MessageObject)localObject1).messageOwner);
                            }
                            paramAnonymousChatMessageCell = new android/content/Intent;
                            paramAnonymousChatMessageCell.<init>("android.intent.action.VIEW");
                            if (Build.VERSION.SDK_INT < 24) {
                              break label550;
                            }
                            paramAnonymousChatMessageCell.setFlags(1);
                            paramAnonymousChatMessageCell.setDataAndType(FileProvider.getUriForFile(ChatActivity.this.getParentActivity(), "org.telegram.messenger.beta.provider", (File)localObject2), "video/mp4");
                            ChatActivity.this.getParentActivity().startActivityForResult(paramAnonymousChatMessageCell, 500);
                          }
                          catch (Exception paramAnonymousChatMessageCell)
                          {
                            FileLog.e(paramAnonymousChatMessageCell);
                            ChatActivity.this.alertUserOpenError((MessageObject)localObject1);
                          }
                          break;
                          label550:
                          paramAnonymousChatMessageCell.setDataAndType(Uri.fromFile((File)localObject2), "video/mp4");
                        }
                      }
                      int i;
                      if (((MessageObject)localObject1).type == 4)
                      {
                        if (AndroidUtilities.isGoogleMapsInstalled(ChatActivity.this)) {
                          if (((MessageObject)localObject1).isLiveLocation())
                          {
                            paramAnonymousChatMessageCell = new LocationActivity(2);
                            paramAnonymousChatMessageCell.setMessageObject((MessageObject)localObject1);
                            paramAnonymousChatMessageCell.setDelegate(ChatActivity.this);
                            ChatActivity.this.presentFragment(paramAnonymousChatMessageCell);
                          }
                          else
                          {
                            if (ChatActivity.this.currentEncryptedChat == null) {}
                            for (i = 3;; i = 0)
                            {
                              paramAnonymousChatMessageCell = new LocationActivity(i);
                              paramAnonymousChatMessageCell.setMessageObject((MessageObject)localObject1);
                              paramAnonymousChatMessageCell.setDelegate(ChatActivity.this);
                              ChatActivity.this.presentFragment(paramAnonymousChatMessageCell);
                              break;
                            }
                          }
                        }
                      }
                      else if ((((MessageObject)localObject1).type == 9) || (((MessageObject)localObject1).type == 0))
                      {
                        if (((MessageObject)localObject1).getDocumentName().toLowerCase().endsWith("attheme"))
                        {
                          localObject3 = null;
                          paramAnonymousChatMessageCell = (ChatMessageCell)localObject3;
                          if (((MessageObject)localObject1).messageOwner.attachPath != null)
                          {
                            paramAnonymousChatMessageCell = (ChatMessageCell)localObject3;
                            if (((MessageObject)localObject1).messageOwner.attachPath.length() != 0)
                            {
                              localObject2 = new File(((MessageObject)localObject1).messageOwner.attachPath);
                              paramAnonymousChatMessageCell = (ChatMessageCell)localObject3;
                              if (((File)localObject2).exists()) {
                                paramAnonymousChatMessageCell = (ChatMessageCell)localObject2;
                              }
                            }
                          }
                          localObject2 = paramAnonymousChatMessageCell;
                          if (paramAnonymousChatMessageCell == null)
                          {
                            localObject3 = FileLoader.getPathToMessage(((MessageObject)localObject1).messageOwner);
                            localObject2 = paramAnonymousChatMessageCell;
                            if (((File)localObject3).exists()) {
                              localObject2 = localObject3;
                            }
                          }
                          if (ChatActivity.this.chatLayoutManager != null)
                          {
                            i = ChatActivity.this.chatLayoutManager.findFirstVisibleItemPosition();
                            if (i == 0) {
                              break label999;
                            }
                            ChatActivity.access$9002(ChatActivity.this, i);
                            paramAnonymousChatMessageCell = (RecyclerListView.Holder)ChatActivity.this.chatListView.findViewHolderForAdapterPosition(ChatActivity.this.scrollToPositionOnRecreate);
                            if (paramAnonymousChatMessageCell == null) {
                              break label984;
                            }
                            ChatActivity.access$9102(ChatActivity.this, ChatActivity.this.chatListView.getMeasuredHeight() - paramAnonymousChatMessageCell.itemView.getBottom() - ChatActivity.this.chatListView.getPaddingBottom());
                          }
                          for (;;)
                          {
                            paramAnonymousChatMessageCell = Theme.applyThemeFile((File)localObject2, ((MessageObject)localObject1).getDocumentName(), true);
                            if (paramAnonymousChatMessageCell == null) {
                              break label1014;
                            }
                            ChatActivity.this.presentFragment(new ThemePreviewActivity((File)localObject2, paramAnonymousChatMessageCell));
                            break;
                            label984:
                            ChatActivity.access$9002(ChatActivity.this, -1);
                            continue;
                            label999:
                            ChatActivity.access$9002(ChatActivity.this, -1);
                          }
                          label1014:
                          ChatActivity.access$9002(ChatActivity.this, -1);
                        }
                        try
                        {
                          AndroidUtilities.openForView((MessageObject)localObject1, ChatActivity.this.getParentActivity());
                        }
                        catch (Exception paramAnonymousChatMessageCell)
                        {
                          FileLog.e(paramAnonymousChatMessageCell);
                          ChatActivity.this.alertUserOpenError((MessageObject)localObject1);
                        }
                      }
                    }
                  }
                }
              }
            }
            
            public void didPressedInstantButton(ChatMessageCell paramAnonymousChatMessageCell, int paramAnonymousInt)
            {
              paramAnonymousChatMessageCell = paramAnonymousChatMessageCell.getMessageObject();
              if (paramAnonymousInt == 0) {
                if ((paramAnonymousChatMessageCell.messageOwner.media != null) && (paramAnonymousChatMessageCell.messageOwner.media.webpage != null) && (paramAnonymousChatMessageCell.messageOwner.media.webpage.cached_page != null))
                {
                  ArticleViewer.getInstance().setParentActivity(ChatActivity.this.getParentActivity(), ChatActivity.this);
                  ArticleViewer.getInstance().open(paramAnonymousChatMessageCell);
                }
              }
              for (;;)
              {
                return;
                if ((paramAnonymousChatMessageCell.messageOwner.media != null) && (paramAnonymousChatMessageCell.messageOwner.media.webpage != null)) {
                  Browser.openUrl(ChatActivity.this.getParentActivity(), paramAnonymousChatMessageCell.messageOwner.media.webpage.url);
                }
              }
            }
            
            public void didPressedOther(ChatMessageCell paramAnonymousChatMessageCell)
            {
              if (paramAnonymousChatMessageCell.getMessageObject().type == 16) {
                if (ChatActivity.this.currentUser != null) {
                  VoIPHelper.startCall(ChatActivity.this.currentUser, ChatActivity.this.getParentActivity(), MessagesController.getInstance(ChatActivity.this.currentAccount).getUserFull(ChatActivity.this.currentUser.id));
                }
              }
              for (;;)
              {
                return;
                ChatActivity.this.createMenu(paramAnonymousChatMessageCell, true, false, false);
              }
            }
            
            public void didPressedReplyMessage(ChatMessageCell paramAnonymousChatMessageCell, int paramAnonymousInt)
            {
              paramAnonymousChatMessageCell = paramAnonymousChatMessageCell.getMessageObject();
              ChatActivity localChatActivity = ChatActivity.this;
              int i = paramAnonymousChatMessageCell.getId();
              if (paramAnonymousChatMessageCell.getDialogId() == ChatActivity.this.mergeDialogId) {}
              for (int j = 1;; j = 0)
              {
                localChatActivity.scrollToMessageId(paramAnonymousInt, i, true, j, false);
                return;
              }
            }
            
            public void didPressedShare(ChatMessageCell paramAnonymousChatMessageCell)
            {
              if (ChatActivity.this.getParentActivity() == null) {
                return;
              }
              if (ChatActivity.this.chatActivityEnterView != null) {
                ChatActivity.this.chatActivityEnterView.closeKeyboard();
              }
              Object localObject1 = paramAnonymousChatMessageCell.getMessageObject();
              if ((UserObject.isUserSelf(ChatActivity.this.currentUser)) && (((MessageObject)localObject1).messageOwner.fwd_from.saved_from_peer != null))
              {
                paramAnonymousChatMessageCell = new Bundle();
                if (((MessageObject)localObject1).messageOwner.fwd_from.saved_from_peer.channel_id != 0) {
                  paramAnonymousChatMessageCell.putInt("chat_id", ((MessageObject)localObject1).messageOwner.fwd_from.saved_from_peer.channel_id);
                }
                for (;;)
                {
                  paramAnonymousChatMessageCell.putInt("message_id", ((MessageObject)localObject1).messageOwner.fwd_from.saved_from_msg_id);
                  if (!MessagesController.getInstance(ChatActivity.this.currentAccount).checkCanOpenChat(paramAnonymousChatMessageCell, ChatActivity.this)) {
                    break;
                  }
                  ChatActivity.this.presentFragment(new ChatActivity(paramAnonymousChatMessageCell));
                  break;
                  if (((MessageObject)localObject1).messageOwner.fwd_from.saved_from_peer.chat_id != 0) {
                    paramAnonymousChatMessageCell.putInt("chat_id", ((MessageObject)localObject1).messageOwner.fwd_from.saved_from_peer.chat_id);
                  } else if (((MessageObject)localObject1).messageOwner.fwd_from.saved_from_peer.user_id != 0) {
                    paramAnonymousChatMessageCell.putInt("user_id", ((MessageObject)localObject1).messageOwner.fwd_from.saved_from_peer.user_id);
                  }
                }
              }
              Object localObject2 = null;
              paramAnonymousChatMessageCell = (ChatMessageCell)localObject2;
              if (((MessageObject)localObject1).getGroupId() != 0L)
              {
                MessageObject.GroupedMessages localGroupedMessages = (MessageObject.GroupedMessages)ChatActivity.this.groupedMessagesMap.get(((MessageObject)localObject1).getGroupId());
                paramAnonymousChatMessageCell = (ChatMessageCell)localObject2;
                if (localGroupedMessages != null) {
                  paramAnonymousChatMessageCell = localGroupedMessages.messages;
                }
              }
              localObject2 = paramAnonymousChatMessageCell;
              if (paramAnonymousChatMessageCell == null)
              {
                localObject2 = new ArrayList();
                ((ArrayList)localObject2).add(localObject1);
              }
              paramAnonymousChatMessageCell = ChatActivity.this;
              localObject1 = ChatActivity.ChatActivityAdapter.this.mContext;
              if ((ChatObject.isChannel(ChatActivity.this.currentChat)) && (!ChatActivity.this.currentChat.megagroup) && (ChatActivity.this.currentChat.username != null) && (ChatActivity.this.currentChat.username.length() > 0)) {}
              for (boolean bool = true;; bool = false)
              {
                paramAnonymousChatMessageCell.showDialog(new ShareAlert((Context)localObject1, (ArrayList)localObject2, null, bool, null, false));
                break;
              }
            }
            
            public void didPressedUrl(MessageObject paramAnonymousMessageObject, CharacterStyle paramAnonymousCharacterStyle, boolean paramAnonymousBoolean)
            {
              if (paramAnonymousCharacterStyle == null) {}
              for (;;)
              {
                return;
                if ((paramAnonymousCharacterStyle instanceof URLSpanMono))
                {
                  ((URLSpanMono)paramAnonymousCharacterStyle).copyToClipboard();
                  Toast.makeText(ChatActivity.this.getParentActivity(), LocaleController.getString("TextCopied", NUM), 0).show();
                }
                else if ((paramAnonymousCharacterStyle instanceof URLSpanUserMention))
                {
                  paramAnonymousMessageObject = MessagesController.getInstance(ChatActivity.this.currentAccount).getUser(Utilities.parseInt(((URLSpanUserMention)paramAnonymousCharacterStyle).getURL()));
                  if (paramAnonymousMessageObject != null) {
                    MessagesController.openChatOrProfileWith(paramAnonymousMessageObject, null, ChatActivity.this, 0, false);
                  }
                }
                else
                {
                  final Object localObject;
                  if ((paramAnonymousCharacterStyle instanceof URLSpanNoUnderline))
                  {
                    paramAnonymousCharacterStyle = ((URLSpanNoUnderline)paramAnonymousCharacterStyle).getURL();
                    if (paramAnonymousCharacterStyle.startsWith("@"))
                    {
                      MessagesController.getInstance(ChatActivity.this.currentAccount).openByUserName(paramAnonymousCharacterStyle.substring(1), ChatActivity.this, 0);
                    }
                    else if ((paramAnonymousCharacterStyle.startsWith("#")) || (paramAnonymousCharacterStyle.startsWith("$")))
                    {
                      if (ChatObject.isChannel(ChatActivity.this.currentChat))
                      {
                        ChatActivity.this.openSearchWithText(paramAnonymousCharacterStyle);
                      }
                      else
                      {
                        paramAnonymousMessageObject = new DialogsActivity(null);
                        paramAnonymousMessageObject.setSearchString(paramAnonymousCharacterStyle);
                        ChatActivity.this.presentFragment(paramAnonymousMessageObject);
                      }
                    }
                    else if ((paramAnonymousCharacterStyle.startsWith("/")) && (URLSpanBotCommand.enabled))
                    {
                      localObject = ChatActivity.this.chatActivityEnterView;
                      if ((ChatActivity.this.currentChat != null) && (ChatActivity.this.currentChat.megagroup)) {}
                      for (boolean bool = true;; bool = false)
                      {
                        ((ChatActivityEnterView)localObject).setCommand(paramAnonymousMessageObject, paramAnonymousCharacterStyle, paramAnonymousBoolean, bool);
                        if ((paramAnonymousBoolean) || (ChatActivity.this.chatActivityEnterView.getFieldText() != null)) {
                          break;
                        }
                        ChatActivity.this.showReplyPanel(false, null, null, null, false);
                        break;
                      }
                    }
                  }
                  else
                  {
                    localObject = ((URLSpan)paramAnonymousCharacterStyle).getURL();
                    String str;
                    if (paramAnonymousBoolean)
                    {
                      paramAnonymousCharacterStyle = new BottomSheet.Builder(ChatActivity.this.getParentActivity());
                      paramAnonymousCharacterStyle.setTitle((CharSequence)localObject);
                      str = LocaleController.getString("Open", NUM);
                      paramAnonymousMessageObject = LocaleController.getString("Copy", NUM);
                      localObject = new DialogInterface.OnClickListener()
                      {
                        public void onClick(DialogInterface paramAnonymous2DialogInterface, int paramAnonymous2Int)
                        {
                          boolean bool = true;
                          if (paramAnonymous2Int == 0)
                          {
                            localObject = ChatActivity.this.getParentActivity();
                            paramAnonymous2DialogInterface = localObject;
                            if (ChatActivity.this.inlineReturn == 0L) {
                              Browser.openUrl((Context)localObject, paramAnonymous2DialogInterface, bool);
                            }
                          }
                          while (paramAnonymous2Int != 1) {
                            for (;;)
                            {
                              return;
                              bool = false;
                            }
                          }
                          Object localObject = localObject;
                          if (((String)localObject).startsWith("mailto:")) {
                            paramAnonymous2DialogInterface = ((String)localObject).substring(7);
                          }
                          for (;;)
                          {
                            AndroidUtilities.addToClipboard(paramAnonymous2DialogInterface);
                            break;
                            paramAnonymous2DialogInterface = (DialogInterface)localObject;
                            if (((String)localObject).startsWith("tel:")) {
                              paramAnonymous2DialogInterface = ((String)localObject).substring(4);
                            }
                          }
                        }
                      };
                      paramAnonymousCharacterStyle.setItems(new CharSequence[] { str, paramAnonymousMessageObject }, (DialogInterface.OnClickListener)localObject);
                      ChatActivity.this.showDialog(paramAnonymousCharacterStyle.create());
                    }
                    else if ((paramAnonymousCharacterStyle instanceof URLSpanReplacement))
                    {
                      ChatActivity.this.showOpenUrlAlert(((URLSpanReplacement)paramAnonymousCharacterStyle).getURL(), true);
                    }
                    else if ((paramAnonymousCharacterStyle instanceof URLSpan))
                    {
                      if (((paramAnonymousMessageObject.messageOwner.media instanceof TLRPC.TL_messageMediaWebPage)) && (paramAnonymousMessageObject.messageOwner.media.webpage != null) && (paramAnonymousMessageObject.messageOwner.media.webpage.cached_page != null))
                      {
                        str = ((String)localObject).toLowerCase();
                        paramAnonymousCharacterStyle = paramAnonymousMessageObject.messageOwner.media.webpage.url.toLowerCase();
                        if (((str.contains("telegra.ph")) || (str.contains("t.me/iv"))) && ((str.contains(paramAnonymousCharacterStyle)) || (paramAnonymousCharacterStyle.contains(str))))
                        {
                          ArticleViewer.getInstance().setParentActivity(ChatActivity.this.getParentActivity(), ChatActivity.this);
                          ArticleViewer.getInstance().open(paramAnonymousMessageObject);
                          continue;
                        }
                      }
                      paramAnonymousMessageObject = ChatActivity.this.getParentActivity();
                      if (ChatActivity.this.inlineReturn == 0L) {}
                      for (paramAnonymousBoolean = true;; paramAnonymousBoolean = false)
                      {
                        Browser.openUrl(paramAnonymousMessageObject, (String)localObject, paramAnonymousBoolean);
                        break;
                      }
                    }
                    else if ((paramAnonymousCharacterStyle instanceof ClickableSpan))
                    {
                      ((ClickableSpan)paramAnonymousCharacterStyle).onClick(ChatActivity.this.fragmentView);
                    }
                  }
                }
              }
            }
            
            public void didPressedUserAvatar(ChatMessageCell paramAnonymousChatMessageCell, TLRPC.User paramAnonymousUser)
            {
              boolean bool = true;
              if (ChatActivity.this.actionBar.isActionModeShowed())
              {
                ChatActivity.this.processRowSelect(paramAnonymousChatMessageCell, true);
                return;
              }
              if ((paramAnonymousUser != null) && (paramAnonymousUser.id != UserConfig.getInstance(ChatActivity.this.currentAccount).getClientUserId()))
              {
                paramAnonymousChatMessageCell = new Bundle();
                paramAnonymousChatMessageCell.putInt("user_id", paramAnonymousUser.id);
                paramAnonymousChatMessageCell = new ProfileActivity(paramAnonymousChatMessageCell);
                if ((ChatActivity.this.currentUser == null) || (ChatActivity.this.currentUser.id != paramAnonymousUser.id)) {
                  break label139;
                }
              }
              for (;;)
              {
                paramAnonymousChatMessageCell.setPlayProfileAnimation(bool);
                ChatActivity.this.presentFragment(paramAnonymousChatMessageCell);
                break;
                break;
                label139:
                bool = false;
              }
            }
            
            public void didPressedViaBot(ChatMessageCell paramAnonymousChatMessageCell, String paramAnonymousString)
            {
              if (((ChatActivity.this.bottomOverlayChat != null) && (ChatActivity.this.bottomOverlayChat.getVisibility() == 0)) || ((ChatActivity.this.bottomOverlay != null) && (ChatActivity.this.bottomOverlay.getVisibility() == 0))) {}
              for (;;)
              {
                return;
                if ((ChatActivity.this.chatActivityEnterView != null) && (paramAnonymousString != null) && (paramAnonymousString.length() > 0))
                {
                  ChatActivity.this.chatActivityEnterView.setFieldText("@" + paramAnonymousString + " ");
                  ChatActivity.this.chatActivityEnterView.openKeyboard();
                }
              }
            }
            
            public boolean isChatAdminCell(int paramAnonymousInt)
            {
              if ((ChatObject.isChannel(ChatActivity.this.currentChat)) && (ChatActivity.this.currentChat.megagroup)) {}
              for (boolean bool = MessagesController.getInstance(ChatActivity.this.currentAccount).isChannelAdmin(ChatActivity.this.currentChat.id, paramAnonymousInt);; bool = false) {
                return bool;
              }
            }
            
            public void needOpenWebView(String paramAnonymousString1, String paramAnonymousString2, String paramAnonymousString3, String paramAnonymousString4, int paramAnonymousInt1, int paramAnonymousInt2)
            {
              EmbedBottomSheet.show(ChatActivity.ChatActivityAdapter.this.mContext, paramAnonymousString2, paramAnonymousString3, paramAnonymousString4, paramAnonymousString1, paramAnonymousInt1, paramAnonymousInt2);
            }
            
            public boolean needPlayMessage(MessageObject paramAnonymousMessageObject)
            {
              boolean bool;
              if ((paramAnonymousMessageObject.isVoice()) || (paramAnonymousMessageObject.isRoundVideo()))
              {
                bool = MediaController.getInstance().playMessage(paramAnonymousMessageObject);
                MediaController localMediaController = MediaController.getInstance();
                if (bool)
                {
                  paramAnonymousMessageObject = ChatActivity.this.createVoiceMessagesPlaylist(paramAnonymousMessageObject, false);
                  localMediaController.setVoiceMessagesPlaylist(paramAnonymousMessageObject, false);
                }
              }
              for (;;)
              {
                return bool;
                paramAnonymousMessageObject = null;
                break;
                if (paramAnonymousMessageObject.isMusic()) {
                  bool = MediaController.getInstance().setPlaylist(ChatActivity.this.messages, paramAnonymousMessageObject);
                } else {
                  bool = false;
                }
              }
            }
          });
          paramViewGroup = (ViewGroup)localObject;
          if (ChatActivity.this.currentEncryptedChat == null)
          {
            localChatMessageCell.setAllowAssistant(true);
            paramViewGroup = (ViewGroup)localObject;
          }
        }
      }
      for (;;)
      {
        paramViewGroup.setLayoutParams(new RecyclerView.LayoutParams(-1, -2));
        return new RecyclerListView.Holder(paramViewGroup);
        localObject = new ChatMessageCell(this.mContext);
        break;
        if (paramInt == 1)
        {
          paramViewGroup = new ChatActionCell(this.mContext);
          ((ChatActionCell)paramViewGroup).setDelegate(new ChatActionCell.ChatActionCellDelegate()
          {
            public void didClickedImage(ChatActionCell paramAnonymousChatActionCell)
            {
              paramAnonymousChatActionCell = paramAnonymousChatActionCell.getMessageObject();
              PhotoViewer.getInstance().setParentActivity(ChatActivity.this.getParentActivity());
              TLRPC.PhotoSize localPhotoSize = FileLoader.getClosestPhotoSizeWithSize(paramAnonymousChatActionCell.photoThumbs, 640);
              if (localPhotoSize != null) {
                PhotoViewer.getInstance().openPhoto(localPhotoSize.location, ChatActivity.this.photoViewerProvider);
              }
              for (;;)
              {
                return;
                PhotoViewer.getInstance().openPhoto(paramAnonymousChatActionCell, 0L, 0L, ChatActivity.this.photoViewerProvider);
              }
            }
            
            public void didLongPressed(ChatActionCell paramAnonymousChatActionCell)
            {
              ChatActivity.this.createMenu(paramAnonymousChatActionCell, false, false);
            }
            
            public void didPressedBotButton(MessageObject paramAnonymousMessageObject, TLRPC.KeyboardButton paramAnonymousKeyboardButton)
            {
              if ((ChatActivity.this.getParentActivity() == null) || ((ChatActivity.this.bottomOverlayChat.getVisibility() == 0) && (!(paramAnonymousKeyboardButton instanceof TLRPC.TL_keyboardButtonSwitchInline)) && (!(paramAnonymousKeyboardButton instanceof TLRPC.TL_keyboardButtonCallback)) && (!(paramAnonymousKeyboardButton instanceof TLRPC.TL_keyboardButtonGame)) && (!(paramAnonymousKeyboardButton instanceof TLRPC.TL_keyboardButtonUrl)) && (!(paramAnonymousKeyboardButton instanceof TLRPC.TL_keyboardButtonBuy)))) {}
              for (;;)
              {
                return;
                ChatActivity.this.chatActivityEnterView.didPressedBotButton(paramAnonymousKeyboardButton, paramAnonymousMessageObject, paramAnonymousMessageObject);
              }
            }
            
            public void didPressedReplyMessage(ChatActionCell paramAnonymousChatActionCell, int paramAnonymousInt)
            {
              MessageObject localMessageObject = paramAnonymousChatActionCell.getMessageObject();
              paramAnonymousChatActionCell = ChatActivity.this;
              int i = localMessageObject.getId();
              if (localMessageObject.getDialogId() == ChatActivity.this.mergeDialogId) {}
              for (int j = 1;; j = 0)
              {
                paramAnonymousChatActionCell.scrollToMessageId(paramAnonymousInt, i, true, j, false);
                return;
              }
            }
            
            public void needOpenUserProfile(int paramAnonymousInt)
            {
              boolean bool = true;
              Object localObject;
              if (paramAnonymousInt < 0)
              {
                localObject = new Bundle();
                ((Bundle)localObject).putInt("chat_id", -paramAnonymousInt);
                if (MessagesController.getInstance(ChatActivity.this.currentAccount).checkCanOpenChat((Bundle)localObject, ChatActivity.this)) {
                  ChatActivity.this.presentFragment(new ChatActivity((Bundle)localObject), true);
                }
                return;
              }
              if (paramAnonymousInt != UserConfig.getInstance(ChatActivity.this.currentAccount).getClientUserId())
              {
                localObject = new Bundle();
                ((Bundle)localObject).putInt("user_id", paramAnonymousInt);
                if ((ChatActivity.this.currentEncryptedChat != null) && (paramAnonymousInt == ChatActivity.this.currentUser.id)) {
                  ((Bundle)localObject).putLong("dialog_id", ChatActivity.this.dialog_id);
                }
                localObject = new ProfileActivity((Bundle)localObject);
                if ((ChatActivity.this.currentUser == null) || (ChatActivity.this.currentUser.id != paramAnonymousInt)) {
                  break label210;
                }
              }
              for (;;)
              {
                ((ProfileActivity)localObject).setPlayProfileAnimation(bool);
                ChatActivity.this.presentFragment((BaseFragment)localObject);
                break;
                break;
                label210:
                bool = false;
              }
            }
          });
        }
        else if (paramInt == 2)
        {
          paramViewGroup = new ChatUnreadCell(this.mContext);
        }
        else if (paramInt == 3)
        {
          paramViewGroup = new BotHelpCell(this.mContext);
          ((BotHelpCell)paramViewGroup).setDelegate(new BotHelpCell.BotHelpCellDelegate()
          {
            public void didPressUrl(String paramAnonymousString)
            {
              if (paramAnonymousString.startsWith("@")) {
                MessagesController.getInstance(ChatActivity.this.currentAccount).openByUserName(paramAnonymousString.substring(1), ChatActivity.this, 0);
              }
              for (;;)
              {
                return;
                if ((paramAnonymousString.startsWith("#")) || (paramAnonymousString.startsWith("$")))
                {
                  DialogsActivity localDialogsActivity = new DialogsActivity(null);
                  localDialogsActivity.setSearchString(paramAnonymousString);
                  ChatActivity.this.presentFragment(localDialogsActivity);
                }
                else if (paramAnonymousString.startsWith("/"))
                {
                  ChatActivity.this.chatActivityEnterView.setCommand(null, paramAnonymousString, false, false);
                  if (ChatActivity.this.chatActivityEnterView.getFieldText() == null) {
                    ChatActivity.this.showReplyPanel(false, null, null, null, false);
                  }
                }
              }
            }
          });
        }
        else if (paramInt == 4)
        {
          paramViewGroup = new ChatLoadingCell(this.mContext);
        }
      }
    }
    
    public void onViewAttachedToWindow(RecyclerView.ViewHolder paramViewHolder)
    {
      boolean bool1 = true;
      final ChatMessageCell localChatMessageCell;
      int i;
      int j;
      int k;
      label88:
      label130:
      label141:
      label149:
      boolean bool3;
      if ((paramViewHolder.itemView instanceof ChatMessageCell))
      {
        localChatMessageCell = (ChatMessageCell)paramViewHolder.itemView;
        MessageObject localMessageObject = localChatMessageCell.getMessageObject();
        i = 0;
        j = 0;
        k = 0;
        if (!ChatActivity.this.actionBar.isActionModeShowed()) {
          break label249;
        }
        if (ChatActivity.this.chatActivityEnterView == null) {
          break label226;
        }
        paramViewHolder = ChatActivity.this.chatActivityEnterView.getEditingMessageObject();
        if (localMessageObject.getDialogId() != ChatActivity.this.dialog_id) {
          break label231;
        }
        k = 0;
        if ((paramViewHolder != localMessageObject) && (ChatActivity.this.selectedMessagesIds[k].indexOfKey(localMessageObject.getId()) < 0)) {
          break label237;
        }
        ChatActivity.this.setCellSelectionBackground(localMessageObject, localChatMessageCell, k);
        k = 1;
        i = 1;
        j = k;
        k = i;
        if (k != 0) {
          break label261;
        }
        bool2 = true;
        if ((k == 0) || (j == 0)) {
          break label267;
        }
        bool3 = true;
        label162:
        localChatMessageCell.setCheckPressed(bool2, bool3);
        localChatMessageCell.getViewTreeObserver().addOnPreDrawListener(new ViewTreeObserver.OnPreDrawListener()
        {
          public boolean onPreDraw()
          {
            localChatMessageCell.getViewTreeObserver().removeOnPreDrawListener(this);
            int i = ChatActivity.this.chatListView.getMeasuredHeight();
            int j = localChatMessageCell.getTop();
            localChatMessageCell.getBottom();
            if (j >= 0) {}
            for (j = 0;; j = -j)
            {
              int k = localChatMessageCell.getMeasuredHeight();
              int m = k;
              if (k > i) {
                m = j + i;
              }
              localChatMessageCell.setVisiblePart(j, m - j);
              return true;
            }
          }
        });
        if ((ChatActivity.this.highlightMessageId == Integer.MAX_VALUE) || (localChatMessageCell.getMessageObject().getId() != ChatActivity.this.highlightMessageId)) {
          break label273;
        }
      }
      label226:
      label231:
      label237:
      label249:
      label261:
      label267:
      label273:
      for (boolean bool2 = bool1;; bool2 = false)
      {
        localChatMessageCell.setHighlighted(bool2);
        return;
        paramViewHolder = null;
        break;
        k = 1;
        break label88;
        localChatMessageCell.setBackgroundDrawable(null);
        k = j;
        break label130;
        localChatMessageCell.setBackgroundDrawable(null);
        j = i;
        break label141;
        bool2 = false;
        break label149;
        bool3 = false;
        break label162;
      }
    }
    
    public void updateRowAtPosition(int paramInt)
    {
      if (ChatActivity.this.chatLayoutManager == null) {}
      for (;;)
      {
        return;
        int i = -1;
        int j = i;
        int k;
        if (!ChatActivity.this.wasManualScroll)
        {
          j = i;
          if (ChatActivity.this.unreadMessageObject != null)
          {
            k = ChatActivity.this.messages.indexOf(ChatActivity.this.unreadMessageObject);
            j = i;
            if (k >= 0) {
              j = this.messagesStartRow + k;
            }
          }
        }
        notifyItemChanged(paramInt);
        if (j != -1)
        {
          paramInt = ChatActivity.this.chatListView.getMeasuredHeight();
          k = ChatActivity.this.chatListView.getPaddingBottom();
          i = ChatActivity.this.chatListView.getPaddingTop();
          int m = AndroidUtilities.dp(29.0F);
          ChatActivity.this.chatLayoutManager.scrollToPositionWithOffset(j, paramInt - k - i - m);
        }
      }
    }
    
    public void updateRowWithMessageObject(MessageObject paramMessageObject)
    {
      int i = ChatActivity.this.messages.indexOf(paramMessageObject);
      if (i == -1) {}
      for (;;)
      {
        return;
        updateRowAtPosition(this.messagesStartRow + i);
      }
    }
    
    public void updateRows()
    {
      this.rowCount = 0;
      int i;
      if (!ChatActivity.this.messages.isEmpty()) {
        if ((ChatActivity.this.forwardEndReached[0] == 0) || ((ChatActivity.this.mergeDialogId != 0L) && (ChatActivity.this.forwardEndReached[1] == 0)))
        {
          i = this.rowCount;
          this.rowCount = (i + 1);
          this.loadingDownRow = i;
          this.messagesStartRow = this.rowCount;
          this.rowCount += ChatActivity.this.messages.size();
          this.messagesEndRow = this.rowCount;
          if ((ChatActivity.this.endReached[0] != 0) && ((ChatActivity.this.mergeDialogId == 0L) || (ChatActivity.this.endReached[1] != 0))) {
            break label208;
          }
          i = this.rowCount;
          this.rowCount = (i + 1);
          this.loadingUpRow = i;
          label159:
          if ((ChatActivity.this.currentUser == null) || (!ChatActivity.this.currentUser.bot)) {
            break label239;
          }
          i = this.rowCount;
          this.rowCount = (i + 1);
        }
      }
      label208:
      label239:
      for (this.botInfoRow = i;; this.botInfoRow = -1)
      {
        return;
        this.loadingDownRow = -1;
        break;
        this.loadingUpRow = -1;
        break label159;
        this.loadingUpRow = -1;
        this.loadingDownRow = -1;
        this.messagesStartRow = -1;
        this.messagesEndRow = -1;
        break label159;
      }
    }
  }
}


/* Location:              /home/fabian/Escritorio/Proyectos/Android/Dev/jardecompiler/TMessagesProj-fat-debug.jar!/org/telegram/ui/ChatActivity.class
 * Java compiler version: 6 (50.0)
 * JD-Core Version:       0.7.1-SNAPSHOT-20140817
 */