package org.telegram.tgnet;

import android.text.TextUtils;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map.Entry;
import java.util.Set;

public class TLRPC
{
  public static final int CHAT_FLAG_IS_PUBLIC = 64;
  public static final int LAYER = 76;
  public static final int MESSAGE_FLAG_EDITED = 32768;
  public static final int MESSAGE_FLAG_FWD = 4;
  public static final int MESSAGE_FLAG_HAS_BOT_ID = 2048;
  public static final int MESSAGE_FLAG_HAS_ENTITIES = 128;
  public static final int MESSAGE_FLAG_HAS_FROM_ID = 256;
  public static final int MESSAGE_FLAG_HAS_MARKUP = 64;
  public static final int MESSAGE_FLAG_HAS_MEDIA = 512;
  public static final int MESSAGE_FLAG_HAS_VIEWS = 1024;
  public static final int MESSAGE_FLAG_MEGAGROUP = Integer.MIN_VALUE;
  public static final int MESSAGE_FLAG_REPLY = 8;
  public static final int USER_FLAG_ACCESS_HASH = 1;
  public static final int USER_FLAG_FIRST_NAME = 2;
  public static final int USER_FLAG_LAST_NAME = 4;
  public static final int USER_FLAG_PHONE = 16;
  public static final int USER_FLAG_PHOTO = 32;
  public static final int USER_FLAG_STATUS = 64;
  public static final int USER_FLAG_UNUSED = 128;
  public static final int USER_FLAG_UNUSED2 = 256;
  public static final int USER_FLAG_UNUSED3 = 512;
  public static final int USER_FLAG_USERNAME = 8;
  
  public static abstract class Audio
    extends TLObject
  {
    public long access_hash;
    public int date;
    public int dc_id;
    public int duration;
    public long id;
    public byte[] iv;
    public byte[] key;
    public String mime_type;
    public int size;
    public int user_id;
    
    public static Audio TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in Audio", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_audioEmpty_layer45();
        continue;
        localObject = new TLRPC.TL_audio_layer45();
        continue;
        localObject = new TLRPC.TL_audio_old();
        continue;
        localObject = new TLRPC.TL_audioEncrypted();
        continue;
        localObject = new TLRPC.TL_audio_old2();
      }
      if (localObject != null) {
        ((Audio)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (Audio)localObject;
    }
  }
  
  public static abstract class Bool
    extends TLObject
  {
    public static Bool TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in Bool", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_boolTrue();
        continue;
        localObject = new TLRPC.TL_boolFalse();
      }
      if (localObject != null) {
        ((Bool)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (Bool)localObject;
    }
  }
  
  public static abstract class BotInfo
    extends TLObject
  {
    public ArrayList<TLRPC.TL_botCommand> commands = new ArrayList();
    public String description;
    public int user_id;
    public int version;
    
    public static BotInfo TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in BotInfo", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_botInfoEmpty_layer48();
        continue;
        localObject = new TLRPC.TL_botInfo();
        continue;
        localObject = new TLRPC.TL_botInfo_layer48();
      }
      if (localObject != null) {
        ((BotInfo)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (BotInfo)localObject;
    }
  }
  
  public static abstract class BotInlineMessage
    extends TLObject
  {
    public String address;
    public ArrayList<TLRPC.MessageEntity> entities = new ArrayList();
    public String first_name;
    public int flags;
    public TLRPC.GeoPoint geo;
    public String last_name;
    public String message;
    public boolean no_webpage;
    public int period;
    public String phone_number;
    public String provider;
    public TLRPC.ReplyMarkup reply_markup;
    public String title;
    public String venue_id;
    
    public static BotInlineMessage TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in BotInlineMessage", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_botInlineMessageMediaVenue();
        continue;
        localObject = new TLRPC.TL_botInlineMessageMediaGeo_layer71();
        continue;
        localObject = new TLRPC.TL_botInlineMessageMediaAuto();
        continue;
        localObject = new TLRPC.TL_botInlineMessageMediaAuto_layer74();
        continue;
        localObject = new TLRPC.TL_botInlineMessageMediaContact();
        continue;
        localObject = new TLRPC.TL_botInlineMessageText();
        continue;
        localObject = new TLRPC.TL_botInlineMessageMediaGeo();
      }
      if (localObject != null) {
        ((BotInlineMessage)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (BotInlineMessage)localObject;
    }
  }
  
  public static abstract class BotInlineResult
    extends TLObject
  {
    public TLRPC.WebDocument content;
    public String description;
    public TLRPC.Document document;
    public int flags;
    public String id;
    public TLRPC.Photo photo;
    public long query_id;
    public TLRPC.BotInlineMessage send_message;
    public TLRPC.WebDocument thumb;
    public String title;
    public String type;
    public String url;
    
    public static BotInlineResult TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in BotInlineResult", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_botInlineResult();
        continue;
        localObject = new TLRPC.TL_botInlineMediaResult();
      }
      if (localObject != null) {
        ((BotInlineResult)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (BotInlineResult)localObject;
    }
  }
  
  public static abstract class ChannelAdminLogEventAction
    extends TLObject
  {
    public TLRPC.Message message;
    public TLRPC.Message new_message;
    public TLRPC.ChannelParticipant new_participant;
    public TLRPC.ChatPhoto new_photo;
    public TLRPC.InputStickerSet new_stickerset;
    public TLRPC.ChannelParticipant participant;
    public TLRPC.Message prev_message;
    public TLRPC.ChannelParticipant prev_participant;
    public TLRPC.ChatPhoto prev_photo;
    public TLRPC.InputStickerSet prev_stickerset;
    public String prev_value;
    
    public static ChannelAdminLogEventAction TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in ChannelAdminLogEventAction", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_channelAdminLogEventActionToggleInvites();
        continue;
        localObject = new TLRPC.TL_channelAdminLogEventActionUpdatePinned();
        continue;
        localObject = new TLRPC.TL_channelAdminLogEventActionToggleSignatures();
        continue;
        localObject = new TLRPC.TL_channelAdminLogEventActionChangeAbout();
        continue;
        localObject = new TLRPC.TL_channelAdminLogEventActionEditMessage();
        continue;
        localObject = new TLRPC.TL_channelAdminLogEventActionParticipantToggleAdmin();
        continue;
        localObject = new TLRPC.TL_channelAdminLogEventActionChangeStickerSet();
        continue;
        localObject = new TLRPC.TL_channelAdminLogEventActionChangeTitle();
        continue;
        localObject = new TLRPC.TL_channelAdminLogEventActionTogglePreHistoryHidden();
        continue;
        localObject = new TLRPC.TL_channelAdminLogEventActionDeleteMessage();
        continue;
        localObject = new TLRPC.TL_channelAdminLogEventActionParticipantInvite();
        continue;
        localObject = new TLRPC.TL_channelAdminLogEventActionParticipantLeave();
        continue;
        localObject = new TLRPC.TL_channelAdminLogEventActionChangeUsername();
        continue;
        localObject = new TLRPC.TL_channelAdminLogEventActionChangePhoto();
        continue;
        localObject = new TLRPC.TL_channelAdminLogEventActionParticipantToggleBan();
        continue;
        localObject = new TLRPC.TL_channelAdminLogEventActionParticipantJoin();
      }
      if (localObject != null) {
        ((ChannelAdminLogEventAction)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (ChannelAdminLogEventAction)localObject;
    }
  }
  
  public static abstract class ChannelMessagesFilter
    extends TLObject
  {
    public boolean exclude_new_messages;
    public int flags;
    public ArrayList<TLRPC.TL_messageRange> ranges = new ArrayList();
    
    public static ChannelMessagesFilter TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in ChannelMessagesFilter", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_channelMessagesFilterEmpty();
        continue;
        localObject = new TLRPC.TL_channelMessagesFilter();
      }
      if (localObject != null) {
        ((ChannelMessagesFilter)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (ChannelMessagesFilter)localObject;
    }
  }
  
  public static abstract class ChannelParticipant
    extends TLObject
  {
    public TLRPC.TL_channelAdminRights admin_rights;
    public TLRPC.TL_channelBannedRights banned_rights;
    public boolean can_edit;
    public int date;
    public int flags;
    public int inviter_id;
    public int kicked_by;
    public boolean left;
    public int promoted_by;
    public int user_id;
    
    public static ChannelParticipant TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in ChannelParticipant", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_channelParticipantBanned();
        continue;
        localObject = new TLRPC.TL_channelParticipantCreator();
        continue;
        localObject = new TLRPC.TL_channelParticipant();
        continue;
        localObject = new TLRPC.TL_channelParticipantKicked_layer67();
        continue;
        localObject = new TLRPC.TL_channelParticipantSelf();
        continue;
        localObject = new TLRPC.TL_channelParticipantModerator_layer67();
        continue;
        localObject = new TLRPC.TL_channelParticipantEditor_layer67();
        continue;
        localObject = new TLRPC.TL_channelParticipantAdmin();
      }
      if (localObject != null) {
        ((ChannelParticipant)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (ChannelParticipant)localObject;
    }
  }
  
  public static abstract class ChannelParticipantsFilter
    extends TLObject
  {
    public String q;
    
    public static ChannelParticipantsFilter TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in ChannelParticipantsFilter", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_channelParticipantsAdmins();
        continue;
        localObject = new TLRPC.TL_channelParticipantsRecent();
        continue;
        localObject = new TLRPC.TL_channelParticipantsKicked();
        continue;
        localObject = new TLRPC.TL_channelParticipantsSearch();
        continue;
        localObject = new TLRPC.TL_channelParticipantsBots();
        continue;
        localObject = new TLRPC.TL_channelParticipantsBanned();
      }
      if (localObject != null) {
        ((ChannelParticipantsFilter)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (ChannelParticipantsFilter)localObject;
    }
  }
  
  public static abstract class Chat
    extends TLObject
  {
    public long access_hash;
    public boolean admin;
    public TLRPC.TL_channelAdminRights admin_rights;
    public boolean admins_enabled;
    public TLRPC.TL_channelBannedRights banned_rights;
    public boolean broadcast;
    public boolean creator;
    public int date;
    public boolean deactivated;
    public boolean democracy;
    public boolean explicit_content;
    public int flags;
    public int id;
    public boolean kicked;
    public boolean left;
    public boolean megagroup;
    public TLRPC.InputChannel migrated_to;
    public boolean min;
    public boolean moderator;
    public int participants_count;
    public TLRPC.ChatPhoto photo;
    public boolean restricted;
    public String restriction_reason;
    public boolean signatures;
    public String title;
    public int until_date;
    public String username;
    public boolean verified;
    public int version;
    
    public static Chat TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in Chat", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_chatForbidden_old();
        continue;
        localObject = new TLRPC.TL_chat_old2();
        continue;
        localObject = new TLRPC.TL_channelForbidden();
        continue;
        localObject = new TLRPC.TL_channelForbidden_layer67();
        continue;
        localObject = new TLRPC.TL_channel_layer48();
        continue;
        localObject = new TLRPC.TL_channelForbidden_layer52();
        continue;
        localObject = new TLRPC.TL_chatForbidden();
        continue;
        localObject = new TLRPC.TL_channel_layer67();
        continue;
        localObject = new TLRPC.TL_channel_old();
        continue;
        localObject = new TLRPC.TL_chat_old();
        continue;
        localObject = new TLRPC.TL_chatEmpty();
        continue;
        localObject = new TLRPC.TL_channel_layer72();
        continue;
        localObject = new TLRPC.TL_channel();
        continue;
        localObject = new TLRPC.TL_chat();
      }
      if (localObject != null) {
        ((Chat)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (Chat)localObject;
    }
  }
  
  public static abstract class ChatFull
    extends TLObject
  {
    public String about;
    public int admins_count;
    public int available_min_id;
    public int banned_count;
    public ArrayList<TLRPC.BotInfo> bot_info = new ArrayList();
    public int call_msg_id;
    public boolean can_set_stickers;
    public boolean can_set_username;
    public boolean can_view_participants;
    public TLRPC.Photo chat_photo;
    public TLRPC.ExportedChatInvite exported_invite;
    public int flags;
    public boolean hidden_prehistory;
    public int id;
    public int kicked_count;
    public int migrated_from_chat_id;
    public int migrated_from_max_id;
    public TLRPC.PeerNotifySettings notify_settings;
    public TLRPC.ChatParticipants participants;
    public int participants_count;
    public int pinned_msg_id;
    public int read_inbox_max_id;
    public int read_outbox_max_id;
    public TLRPC.StickerSet stickerset;
    public int unread_count;
    public int unread_important_count;
    
    public static ChatFull TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in ChatFull", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_chatFull();
        continue;
        localObject = new TLRPC.TL_channelFull_layer71();
        continue;
        localObject = new TLRPC.TL_channelFull_layer72();
        continue;
        localObject = new TLRPC.TL_channelFull_layer52();
        continue;
        localObject = new TLRPC.TL_channelFull_layer67();
        continue;
        localObject = new TLRPC.TL_channelFull_layer48();
        continue;
        localObject = new TLRPC.TL_channelFull_old();
        continue;
        localObject = new TLRPC.TL_channelFull_layer70();
        continue;
        localObject = new TLRPC.TL_channelFull();
      }
      if (localObject != null) {
        ((ChatFull)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (ChatFull)localObject;
    }
  }
  
  public static abstract class ChatInvite
    extends TLObject
  {
    public boolean broadcast;
    public boolean channel;
    public TLRPC.Chat chat;
    public int flags;
    public boolean isPublic;
    public boolean megagroup;
    public ArrayList<TLRPC.User> participants = new ArrayList();
    public int participants_count;
    public TLRPC.ChatPhoto photo;
    public String title;
    
    public static ChatInvite TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in ChatInvite", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_chatInvite();
        continue;
        localObject = new TLRPC.TL_chatInviteAlready();
      }
      if (localObject != null) {
        ((ChatInvite)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (ChatInvite)localObject;
    }
  }
  
  public static abstract class ChatParticipant
    extends TLObject
  {
    public int date;
    public int inviter_id;
    public int user_id;
    
    public static ChatParticipant TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in ChatParticipant", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_chatParticipant();
        continue;
        localObject = new TLRPC.TL_chatParticipantCreator();
        continue;
        localObject = new TLRPC.TL_chatParticipantAdmin();
      }
      if (localObject != null) {
        ((ChatParticipant)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (ChatParticipant)localObject;
    }
  }
  
  public static abstract class ChatParticipants
    extends TLObject
  {
    public int admin_id;
    public int chat_id;
    public int flags;
    public ArrayList<TLRPC.ChatParticipant> participants = new ArrayList();
    public TLRPC.ChatParticipant self_participant;
    public int version;
    
    public static ChatParticipants TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in ChatParticipants", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_chatParticipantsForbidden();
        continue;
        localObject = new TLRPC.TL_chatParticipants();
        continue;
        localObject = new TLRPC.TL_chatParticipants_old();
        continue;
        localObject = new TLRPC.TL_chatParticipantsForbidden_old();
      }
      if (localObject != null) {
        ((ChatParticipants)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (ChatParticipants)localObject;
    }
  }
  
  public static abstract class ChatPhoto
    extends TLObject
  {
    public TLRPC.FileLocation photo_big;
    public TLRPC.FileLocation photo_small;
    
    public static ChatPhoto TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in ChatPhoto", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_chatPhotoEmpty();
        continue;
        localObject = new TLRPC.TL_chatPhoto();
      }
      if (localObject != null) {
        ((ChatPhoto)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (ChatPhoto)localObject;
    }
  }
  
  public static abstract class ContactLink
    extends TLObject
  {
    public static ContactLink TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in ContactLink", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_contactLinkNone();
        continue;
        localObject = new TLRPC.TL_contactLinkContact();
        continue;
        localObject = new TLRPC.TL_contactLinkHasPhone();
        continue;
        localObject = new TLRPC.TL_contactLinkUnknown();
      }
      if (localObject != null) {
        ((ContactLink)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (ContactLink)localObject;
    }
  }
  
  public static abstract class DecryptedMessage
    extends TLObject
  {
    public TLRPC.DecryptedMessageAction action;
    public ArrayList<TLRPC.MessageEntity> entities = new ArrayList();
    public int flags;
    public long grouped_id;
    public TLRPC.DecryptedMessageMedia media;
    public String message;
    public byte[] random_bytes;
    public long random_id;
    public long reply_to_random_id;
    public int ttl;
    public String via_bot_name;
    
    public static DecryptedMessage TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in DecryptedMessage", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_decryptedMessage_layer17();
        continue;
        localObject = new TLRPC.TL_decryptedMessageService();
        continue;
        localObject = new TLRPC.TL_decryptedMessageService_layer8();
        continue;
        localObject = new TLRPC.TL_decryptedMessage_layer8();
        continue;
        localObject = new TLRPC.TL_decryptedMessage();
        continue;
        localObject = new TLRPC.TL_decryptedMessage_layer45();
      }
      if (localObject != null) {
        ((DecryptedMessage)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (DecryptedMessage)localObject;
    }
  }
  
  public static abstract class DecryptedMessageAction
    extends TLObject
  {
    public TLRPC.SendMessageAction action;
    public int end_seq_no;
    public long exchange_id;
    public byte[] g_a;
    public byte[] g_b;
    public long key_fingerprint;
    public int layer;
    public ArrayList<Long> random_ids = new ArrayList();
    public int start_seq_no;
    public int ttl_seconds;
    
    public static DecryptedMessageAction TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in DecryptedMessageAction", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_decryptedMessageActionSetMessageTTL();
        continue;
        localObject = new TLRPC.TL_decryptedMessageActionNotifyLayer();
        continue;
        localObject = new TLRPC.TL_decryptedMessageActionDeleteMessages();
        continue;
        localObject = new TLRPC.TL_decryptedMessageActionCommitKey();
        continue;
        localObject = new TLRPC.TL_decryptedMessageActionAbortKey();
        continue;
        localObject = new TLRPC.TL_decryptedMessageActionFlushHistory();
        continue;
        localObject = new TLRPC.TL_decryptedMessageActionTyping();
        continue;
        localObject = new TLRPC.TL_decryptedMessageActionAcceptKey();
        continue;
        localObject = new TLRPC.TL_decryptedMessageActionReadMessages();
        continue;
        localObject = new TLRPC.TL_decryptedMessageActionResend();
        continue;
        localObject = new TLRPC.TL_decryptedMessageActionRequestKey();
        continue;
        localObject = new TLRPC.TL_decryptedMessageActionScreenshotMessages();
        continue;
        localObject = new TLRPC.TL_decryptedMessageActionNoop();
      }
      if (localObject != null) {
        ((DecryptedMessageAction)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (DecryptedMessageAction)localObject;
    }
  }
  
  public static abstract class DecryptedMessageMedia
    extends TLObject
  {
    public double _long;
    public long access_hash;
    public String address;
    public ArrayList<TLRPC.DocumentAttribute> attributes = new ArrayList();
    public String caption;
    public int date;
    public int dc_id;
    public int duration;
    public String file_name;
    public String first_name;
    public int h;
    public long id;
    public byte[] iv;
    public byte[] key;
    public String last_name;
    public double lat;
    public String mime_type;
    public String phone_number;
    public String provider;
    public int size;
    public int thumb_h;
    public int thumb_w;
    public String title;
    public String url;
    public int user_id;
    public String venue_id;
    public int w;
    
    public static DecryptedMessageMedia TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in DecryptedMessageMedia", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_decryptedMessageMediaAudio();
        continue;
        localObject = new TLRPC.TL_decryptedMessageMediaGeoPoint();
        continue;
        localObject = new TLRPC.TL_decryptedMessageMediaContact();
        continue;
        localObject = new TLRPC.TL_decryptedMessageMediaEmpty();
        continue;
        localObject = new TLRPC.TL_decryptedMessageMediaDocument();
        continue;
        localObject = new TLRPC.TL_decryptedMessageMediaWebPage();
        continue;
        localObject = new TLRPC.TL_decryptedMessageMediaPhoto();
        continue;
        localObject = new TLRPC.TL_decryptedMessageMediaVideo();
        continue;
        localObject = new TLRPC.TL_decryptedMessageMediaDocument_layer8();
        continue;
        localObject = new TLRPC.TL_decryptedMessageMediaVideo_layer8();
        continue;
        localObject = new TLRPC.TL_decryptedMessageMediaVenue();
        continue;
        localObject = new TLRPC.TL_decryptedMessageMediaExternalDocument();
        continue;
        localObject = new TLRPC.TL_decryptedMessageMediaVideo_layer17();
        continue;
        localObject = new TLRPC.TL_decryptedMessageMediaAudio_layer8();
        continue;
        localObject = new TLRPC.TL_decryptedMessageMediaPhoto_layer8();
      }
      if (localObject != null) {
        ((DecryptedMessageMedia)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (DecryptedMessageMedia)localObject;
    }
  }
  
  public static abstract class DialogPeer
    extends TLObject
  {
    public static DialogPeer TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in DialogPeer", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_dialogPeer();
        continue;
        localObject = new TLRPC.TL_dialogPeerFeed();
      }
      if (localObject != null) {
        ((DialogPeer)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (DialogPeer)localObject;
    }
  }
  
  public static abstract class Document
    extends TLObject
  {
    public long access_hash;
    public ArrayList<TLRPC.DocumentAttribute> attributes = new ArrayList();
    public int date;
    public int dc_id;
    public String file_name;
    public long id;
    public byte[] iv;
    public byte[] key;
    public String mime_type;
    public int size;
    public TLRPC.PhotoSize thumb;
    public int user_id;
    public int version;
    
    public static Document TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in Document", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_document();
        continue;
        localObject = new TLRPC.TL_documentEncrypted_old();
        continue;
        localObject = new TLRPC.TL_document_old();
        continue;
        localObject = new TLRPC.TL_documentEmpty();
        continue;
        localObject = new TLRPC.TL_documentEncrypted();
        continue;
        localObject = new TLRPC.TL_document_layer53();
      }
      if (localObject != null) {
        ((Document)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (Document)localObject;
    }
  }
  
  public static abstract class DocumentAttribute
    extends TLObject
  {
    public String alt;
    public int duration;
    public String file_name;
    public int flags;
    public int h;
    public boolean mask;
    public TLRPC.TL_maskCoords mask_coords;
    public String performer;
    public boolean round_message;
    public TLRPC.InputStickerSet stickerset;
    public boolean supports_streaming;
    public String title;
    public boolean voice;
    public int w;
    public byte[] waveform;
    
    public static DocumentAttribute TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in DocumentAttribute", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_documentAttributeSticker_layer55();
        continue;
        localObject = new TLRPC.TL_documentAttributeAudio_old();
        continue;
        localObject = new TLRPC.TL_documentAttributeSticker();
        continue;
        localObject = new TLRPC.TL_documentAttributeAnimated();
        continue;
        localObject = new TLRPC.TL_documentAttributeFilename();
        continue;
        localObject = new TLRPC.TL_documentAttributeVideo();
        continue;
        localObject = new TLRPC.TL_documentAttributeVideo_layer65();
        continue;
        localObject = new TLRPC.TL_documentAttributeAudio_layer45();
        continue;
        localObject = new TLRPC.TL_documentAttributeSticker_old();
        continue;
        localObject = new TLRPC.TL_documentAttributeHasStickers();
        continue;
        localObject = new TLRPC.TL_documentAttributeSticker_old2();
        continue;
        localObject = new TLRPC.TL_documentAttributeImageSize();
        continue;
        localObject = new TLRPC.TL_documentAttributeAudio();
      }
      if (localObject != null) {
        ((DocumentAttribute)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (DocumentAttribute)localObject;
    }
  }
  
  public static abstract class DraftMessage
    extends TLObject
  {
    public int date;
    public ArrayList<TLRPC.MessageEntity> entities = new ArrayList();
    public int flags;
    public String message;
    public boolean no_webpage;
    public int reply_to_msg_id;
    
    public static DraftMessage TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in DraftMessage", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_draftMessageEmpty();
        continue;
        localObject = new TLRPC.TL_draftMessage();
      }
      if (localObject != null) {
        ((DraftMessage)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (DraftMessage)localObject;
    }
  }
  
  public static abstract class EncryptedChat
    extends TLObject
  {
    public byte[] a_or_b;
    public long access_hash;
    public int admin_id;
    public byte[] auth_key;
    public int date;
    public long exchange_id;
    public byte[] future_auth_key;
    public long future_key_fingerprint;
    public byte[] g_a;
    public byte[] g_a_or_b;
    public int id;
    public int in_seq_no;
    public int key_create_date;
    public long key_fingerprint;
    public byte[] key_hash;
    public short key_use_count_in;
    public short key_use_count_out;
    public int layer;
    public int mtproto_seq;
    public byte[] nonce;
    public int participant_id;
    public int seq_in;
    public int seq_out;
    public int ttl;
    public int user_id;
    
    public static EncryptedChat TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in EncryptedChat", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_encryptedChatRequested_old();
        continue;
        localObject = new TLRPC.TL_encryptedChatRequested();
        continue;
        localObject = new TLRPC.TL_encryptedChat();
        continue;
        localObject = new TLRPC.TL_encryptedChat_old();
        continue;
        localObject = new TLRPC.TL_encryptedChatEmpty();
        continue;
        localObject = new TLRPC.TL_encryptedChatWaiting();
        continue;
        localObject = new TLRPC.TL_encryptedChatDiscarded();
      }
      if (localObject != null) {
        ((EncryptedChat)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (EncryptedChat)localObject;
    }
  }
  
  public static abstract class EncryptedFile
    extends TLObject
  {
    public long access_hash;
    public int dc_id;
    public long id;
    public int key_fingerprint;
    public int size;
    
    public static EncryptedFile TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in EncryptedFile", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_encryptedFile();
        continue;
        localObject = new TLRPC.TL_encryptedFileEmpty();
      }
      if (localObject != null) {
        ((EncryptedFile)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (EncryptedFile)localObject;
    }
  }
  
  public static abstract class EncryptedMessage
    extends TLObject
  {
    public byte[] bytes;
    public int chat_id;
    public int date;
    public TLRPC.EncryptedFile file;
    public long random_id;
    
    public static EncryptedMessage TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in EncryptedMessage", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_encryptedMessageService();
        continue;
        localObject = new TLRPC.TL_encryptedMessage();
      }
      if (localObject != null) {
        ((EncryptedMessage)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (EncryptedMessage)localObject;
    }
  }
  
  public static abstract class ExportedChatInvite
    extends TLObject
  {
    public String link;
    
    public static ExportedChatInvite TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in ExportedChatInvite", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_chatInviteExported();
        continue;
        localObject = new TLRPC.TL_chatInviteEmpty();
      }
      if (localObject != null) {
        ((ExportedChatInvite)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (ExportedChatInvite)localObject;
    }
  }
  
  public static abstract class FileLocation
    extends TLObject
  {
    public int dc_id;
    public byte[] iv;
    public byte[] key;
    public int local_id;
    public long secret;
    public long volume_id;
    
    public static FileLocation TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in FileLocation", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_fileLocation();
        continue;
        localObject = new TLRPC.TL_fileEncryptedLocation();
        continue;
        localObject = new TLRPC.TL_fileLocationUnavailable();
      }
      if (localObject != null) {
        ((FileLocation)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (FileLocation)localObject;
    }
  }
  
  public static abstract class FoundGif
    extends TLObject
  {
    public String content_type;
    public String content_url;
    public TLRPC.Document document;
    public int h;
    public TLRPC.Photo photo;
    public String thumb_url;
    public String url;
    public int w;
    
    public static FoundGif TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in FoundGif", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_foundGifCached();
        continue;
        localObject = new TLRPC.TL_foundGif();
      }
      if (localObject != null) {
        ((FoundGif)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (FoundGif)localObject;
    }
  }
  
  public static abstract class GeoPoint
    extends TLObject
  {
    public double _long;
    public double lat;
    
    public static GeoPoint TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in GeoPoint", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_geoPointEmpty();
        continue;
        localObject = new TLRPC.TL_geoPoint();
      }
      if (localObject != null) {
        ((GeoPoint)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (GeoPoint)localObject;
    }
  }
  
  public static abstract class GroupCall
    extends TLObject
  {
    public long access_hash;
    public int admin_id;
    public int channel_id;
    public TLRPC.TL_groupCallConnection connection;
    public int duration;
    public byte[] encryption_key;
    public int flags;
    public long id;
    public long key_fingerprint;
    public int participants_count;
    public TLRPC.TL_phoneCallProtocol protocol;
    public byte[] reflector_group_tag;
    public byte[] reflector_self_secret;
    public byte[] reflector_self_tag;
    
    public static GroupCall TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in GroupCall", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_groupCallDiscarded();
        continue;
        localObject = new TLRPC.TL_groupCall();
        continue;
        localObject = new TLRPC.TL_groupCallPrivate();
      }
      if (localObject != null) {
        ((GroupCall)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (GroupCall)localObject;
    }
  }
  
  public static abstract class GroupCallParticipant
    extends TLObject
  {
    public int date;
    public int flags;
    public int inviter_id;
    public byte[] member_tag_hash;
    public TLRPC.TL_inputPhoneCall phone_call;
    public boolean readonly;
    public byte[] streams;
    public int user_id;
    
    public static GroupCallParticipant TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in GroupCallParticipant", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_groupCallParticipantLeft();
        continue;
        localObject = new TLRPC.TL_groupCallParticipantAdmin();
        continue;
        localObject = new TLRPC.TL_groupCallParticipant();
        continue;
        localObject = new TLRPC.TL_groupCallParticipantInvited();
      }
      if (localObject != null) {
        ((GroupCallParticipant)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (GroupCallParticipant)localObject;
    }
  }
  
  public static abstract class InputChannel
    extends TLObject
  {
    public long access_hash;
    public int channel_id;
    
    public static InputChannel TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in InputChannel", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_inputChannelEmpty();
        continue;
        localObject = new TLRPC.TL_inputChannel();
      }
      if (localObject != null) {
        ((InputChannel)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (InputChannel)localObject;
    }
  }
  
  public static abstract class InputChatPhoto
    extends TLObject
  {
    public TLRPC.InputFile file;
    public TLRPC.InputPhoto id;
    
    public static InputChatPhoto TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in InputChatPhoto", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_inputChatPhoto();
        continue;
        localObject = new TLRPC.TL_inputChatPhotoEmpty();
        continue;
        localObject = new TLRPC.TL_inputChatUploadedPhoto();
      }
      if (localObject != null) {
        ((InputChatPhoto)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (InputChatPhoto)localObject;
    }
  }
  
  public static abstract class InputDialogPeer
    extends TLObject
  {
    public static InputDialogPeer TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in InputDialogPeer", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_inputDialogPeer();
        continue;
        localObject = new TLRPC.TL_inputDialogPeerFeed();
      }
      if (localObject != null) {
        ((InputDialogPeer)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (InputDialogPeer)localObject;
    }
  }
  
  public static abstract class InputDocument
    extends TLObject
  {
    public long access_hash;
    public long id;
    
    public static InputDocument TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in InputDocument", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_inputDocumentEmpty();
        continue;
        localObject = new TLRPC.TL_inputDocument();
      }
      if (localObject != null) {
        ((InputDocument)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (InputDocument)localObject;
    }
  }
  
  public static abstract class InputEncryptedFile
    extends TLObject
  {
    public long access_hash;
    public long id;
    public int key_fingerprint;
    public String md5_checksum;
    public int parts;
    
    public static InputEncryptedFile TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in InputEncryptedFile", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_inputEncryptedFile();
        continue;
        localObject = new TLRPC.TL_inputEncryptedFileBigUploaded();
        continue;
        localObject = new TLRPC.TL_inputEncryptedFileEmpty();
        continue;
        localObject = new TLRPC.TL_inputEncryptedFileUploaded();
      }
      if (localObject != null) {
        ((InputEncryptedFile)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (InputEncryptedFile)localObject;
    }
  }
  
  public static abstract class InputFile
    extends TLObject
  {
    public long id;
    public String md5_checksum;
    public String name;
    public int parts;
    
    public static InputFile TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in InputFile", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_inputFileBig();
        continue;
        localObject = new TLRPC.TL_inputFile();
      }
      if (localObject != null) {
        ((InputFile)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (InputFile)localObject;
    }
  }
  
  public static abstract class InputFileLocation
    extends TLObject
  {
    public long access_hash;
    public long id;
    public int local_id;
    public long secret;
    public long volume_id;
    
    public static InputFileLocation TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in InputFileLocation", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_inputEncryptedFileLocation();
        continue;
        localObject = new TLRPC.TL_inputDocumentFileLocation();
        continue;
        localObject = new TLRPC.TL_inputFileLocation();
      }
      if (localObject != null) {
        ((InputFileLocation)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (InputFileLocation)localObject;
    }
  }
  
  public static abstract class InputGame
    extends TLObject
  {
    public long access_hash;
    public TLRPC.InputUser bot_id;
    public long id;
    public String short_name;
    
    public static InputGame TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in InputGame", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_inputGameShortName();
        continue;
        localObject = new TLRPC.TL_inputGameID();
      }
      if (localObject != null) {
        ((InputGame)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (InputGame)localObject;
    }
  }
  
  public static abstract class InputGeoPoint
    extends TLObject
  {
    public double _long;
    public double lat;
    
    public static InputGeoPoint TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in InputGeoPoint", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_inputGeoPoint();
        continue;
        localObject = new TLRPC.TL_inputGeoPointEmpty();
      }
      if (localObject != null) {
        ((InputGeoPoint)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (InputGeoPoint)localObject;
    }
  }
  
  public static abstract class InputMedia
    extends TLObject
  {
    public String address;
    public ArrayList<TLRPC.DocumentAttribute> attributes = new ArrayList();
    public TLRPC.InputFile file;
    public String first_name;
    public int flags;
    public TLRPC.InputGeoPoint geo_point;
    public String last_name;
    public String mime_type;
    public boolean nosound_video;
    public int period;
    public String phone_number;
    public String provider;
    public String q;
    public ArrayList<TLRPC.InputDocument> stickers = new ArrayList();
    public TLRPC.InputFile thumb;
    public String title;
    public int ttl_seconds;
    public String url;
    public String venue_id;
    public String venue_type;
    
    public static InputMedia TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in InputMedia", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_inputMediaContact();
        continue;
        localObject = new TLRPC.TL_inputMediaDocument();
        continue;
        localObject = new TLRPC.TL_inputMediaGame();
        continue;
        localObject = new TLRPC.TL_inputMediaGifExternal();
        continue;
        localObject = new TLRPC.TL_inputMediaGeoPoint();
        continue;
        localObject = new TLRPC.TL_inputMediaDocumentExternal();
        continue;
        localObject = new TLRPC.TL_inputMediaEmpty();
        continue;
        localObject = new TLRPC.TL_inputMediaUploadedPhoto();
        continue;
        localObject = new TLRPC.TL_inputMediaVenue();
        continue;
        localObject = new TLRPC.TL_inputMediaGeoLive();
        continue;
        localObject = new TLRPC.TL_inputMediaUploadedDocument();
        continue;
        localObject = new TLRPC.TL_inputMediaPhotoExternal();
        continue;
        localObject = new TLRPC.TL_inputMediaPhoto();
      }
      if (localObject != null) {
        ((InputMedia)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (InputMedia)localObject;
    }
  }
  
  public static abstract class InputNotifyPeer
    extends TLObject
  {
    public static InputNotifyPeer TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in InputNotifyPeer", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_inputNotifyChats();
        continue;
        localObject = new TLRPC.TL_inputNotifyPeer();
        continue;
        localObject = new TLRPC.TL_inputNotifyUsers();
        continue;
        localObject = new TLRPC.TL_inputNotifyAll();
      }
      if (localObject != null) {
        ((InputNotifyPeer)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (InputNotifyPeer)localObject;
    }
  }
  
  public static abstract class InputPaymentCredentials
    extends TLObject
  {
    public TLRPC.TL_dataJSON data;
    public int flags;
    public String google_transaction_id;
    public String id;
    public TLRPC.TL_dataJSON payment_token;
    public boolean save;
    public byte[] tmp_password;
    
    public static InputPaymentCredentials TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in InputPaymentCredentials", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_inputPaymentCredentials();
        continue;
        localObject = new TLRPC.TL_inputPaymentCredentialsAndroidPay();
        continue;
        localObject = new TLRPC.TL_inputPaymentCredentialsSaved();
      }
      if (localObject != null) {
        ((InputPaymentCredentials)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (InputPaymentCredentials)localObject;
    }
  }
  
  public static abstract class InputPeer
    extends TLObject
  {
    public long access_hash;
    public int channel_id;
    public int chat_id;
    public int user_id;
    
    public static InputPeer TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in InputPeer", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_inputPeerUser();
        continue;
        localObject = new TLRPC.TL_inputPeerChat();
        continue;
        localObject = new TLRPC.TL_inputPeerEmpty();
        continue;
        localObject = new TLRPC.TL_inputPeerSelf();
        continue;
        localObject = new TLRPC.TL_inputPeerChannel();
      }
      if (localObject != null) {
        ((InputPeer)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (InputPeer)localObject;
    }
  }
  
  public static abstract class InputPeerNotifyEvents
    extends TLObject
  {
    public static InputPeerNotifyEvents TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in InputPeerNotifyEvents", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_inputPeerNotifyEventsAll();
        continue;
        localObject = new TLRPC.TL_inputPeerNotifyEventsEmpty();
      }
      if (localObject != null) {
        ((InputPeerNotifyEvents)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (InputPeerNotifyEvents)localObject;
    }
  }
  
  public static abstract class InputPhoto
    extends TLObject
  {
    public long access_hash;
    public long id;
    
    public static InputPhoto TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in InputPhoto", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_inputPhotoEmpty();
        continue;
        localObject = new TLRPC.TL_inputPhoto();
      }
      if (localObject != null) {
        ((InputPhoto)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (InputPhoto)localObject;
    }
  }
  
  public static abstract class InputPrivacyKey
    extends TLObject
  {
    public static InputPrivacyKey TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in InputPrivacyKey", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_inputPrivacyKeyChatInvite();
        continue;
        localObject = new TLRPC.TL_inputPrivacyKeyStatusTimestamp();
        continue;
        localObject = new TLRPC.TL_inputPrivacyKeyPhoneCall();
      }
      if (localObject != null) {
        ((InputPrivacyKey)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (InputPrivacyKey)localObject;
    }
  }
  
  public static abstract class InputPrivacyRule
    extends TLObject
  {
    public ArrayList<TLRPC.InputUser> users = new ArrayList();
    
    public static InputPrivacyRule TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in InputPrivacyRule", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_inputPrivacyValueDisallowUsers();
        continue;
        localObject = new TLRPC.TL_inputPrivacyValueDisallowAll();
        continue;
        localObject = new TLRPC.TL_inputPrivacyValueDisallowContacts();
        continue;
        localObject = new TLRPC.TL_inputPrivacyValueAllowAll();
        continue;
        localObject = new TLRPC.TL_inputPrivacyValueAllowContacts();
        continue;
        localObject = new TLRPC.TL_inputPrivacyValueAllowUsers();
      }
      if (localObject != null) {
        ((InputPrivacyRule)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (InputPrivacyRule)localObject;
    }
  }
  
  public static abstract class InputStickerSet
    extends TLObject
  {
    public long access_hash;
    public long id;
    public String short_name;
    
    public static InputStickerSet TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in InputStickerSet", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_inputStickerSetEmpty();
        continue;
        localObject = new TLRPC.TL_inputStickerSetID();
        continue;
        localObject = new TLRPC.TL_inputStickerSetShortName();
      }
      if (localObject != null) {
        ((InputStickerSet)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (InputStickerSet)localObject;
    }
  }
  
  public static abstract class InputStickeredMedia
    extends TLObject
  {
    public static InputStickeredMedia TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in InputStickeredMedia", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_inputStickeredMediaDocument();
        continue;
        localObject = new TLRPC.TL_inputStickeredMediaPhoto();
      }
      if (localObject != null) {
        ((InputStickeredMedia)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (InputStickeredMedia)localObject;
    }
  }
  
  public static abstract class InputUser
    extends TLObject
  {
    public long access_hash;
    public int user_id;
    
    public static InputUser TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in InputUser", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_inputUserEmpty();
        continue;
        localObject = new TLRPC.TL_inputUserSelf();
        continue;
        localObject = new TLRPC.TL_inputUser();
      }
      if (localObject != null) {
        ((InputUser)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (InputUser)localObject;
    }
  }
  
  public static abstract class KeyboardButton
    extends TLObject
  {
    public byte[] data;
    public int flags;
    public String query;
    public boolean same_peer;
    public String text;
    public String url;
    
    public static KeyboardButton TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in KeyboardButton", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_keyboardButtonRequestPhone();
        continue;
        localObject = new TLRPC.TL_keyboardButtonGame();
        continue;
        localObject = new TLRPC.TL_keyboardButtonUrl();
        continue;
        localObject = new TLRPC.TL_keyboardButtonSwitchInline();
        continue;
        localObject = new TLRPC.TL_keyboardButtonRequestGeoLocation();
        continue;
        localObject = new TLRPC.TL_keyboardButtonBuy();
        continue;
        localObject = new TLRPC.TL_keyboardButtonCallback();
        continue;
        localObject = new TLRPC.TL_keyboardButton();
      }
      if (localObject != null) {
        ((KeyboardButton)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (KeyboardButton)localObject;
    }
  }
  
  public static abstract class LangPackString
    extends TLObject
  {
    public String few_value;
    public int flags;
    public String key;
    public String many_value;
    public String one_value;
    public String other_value;
    public String two_value;
    public String value;
    public String zero_value;
    
    public static LangPackString TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in LangPackString", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_langPackStringPluralized();
        continue;
        localObject = new TLRPC.TL_langPackString();
        continue;
        localObject = new TLRPC.TL_langPackStringDeleted();
      }
      if (localObject != null) {
        ((LangPackString)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (LangPackString)localObject;
    }
  }
  
  public static abstract class Message
    extends TLObject
  {
    public TLRPC.MessageAction action;
    public String attachPath = "";
    public int date;
    public int destroyTime;
    public long dialog_id;
    public int edit_date;
    public ArrayList<TLRPC.MessageEntity> entities = new ArrayList();
    public int flags;
    public int from_id;
    public TLRPC.MessageFwdHeader fwd_from;
    public int fwd_msg_id = 0;
    public long grouped_id;
    public int id;
    public int layer;
    public int local_id = 0;
    public TLRPC.MessageMedia media;
    public boolean media_unread;
    public boolean mentioned;
    public String message;
    public boolean out;
    public HashMap<String, String> params;
    public boolean post;
    public String post_author;
    public long random_id;
    public Message replyMessage;
    public TLRPC.ReplyMarkup reply_markup;
    public int reply_to_msg_id;
    public long reply_to_random_id;
    public int send_state = 0;
    public int seq_in;
    public int seq_out;
    public boolean silent;
    public TLRPC.Peer to_id;
    public int ttl;
    public boolean unread;
    public int via_bot_id;
    public String via_bot_name;
    public int views;
    public boolean with_my_score;
    
    public static Message TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in Message", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_messageService_old2();
        continue;
        localObject = new TLRPC.TL_message_old3();
        continue;
        localObject = new TLRPC.TL_message_old4();
        continue;
        localObject = new TLRPC.TL_message_secret();
        continue;
        localObject = new TLRPC.TL_message_secret_layer72();
        continue;
        localObject = new TLRPC.TL_message_layer72();
        continue;
        localObject = new TLRPC.TL_message_layer68();
        continue;
        localObject = new TLRPC.TL_message_layer47();
        continue;
        localObject = new TLRPC.TL_message_old7();
        continue;
        localObject = new TLRPC.TL_messageService_layer48();
        continue;
        localObject = new TLRPC.TL_messageEmpty();
        continue;
        localObject = new TLRPC.TL_message_old6();
        continue;
        localObject = new TLRPC.TL_message();
        continue;
        localObject = new TLRPC.TL_messageForwarded_old2();
        continue;
        localObject = new TLRPC.TL_messageForwarded_old();
        continue;
        localObject = new TLRPC.TL_message_old2();
        continue;
        localObject = new TLRPC.TL_messageService_old();
        continue;
        localObject = new TLRPC.TL_message_old();
        continue;
        localObject = new TLRPC.TL_message_secret_old();
        continue;
        localObject = new TLRPC.TL_messageService();
        continue;
        localObject = new TLRPC.TL_message_old5();
      }
      if (localObject != null) {
        ((Message)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (Message)localObject;
    }
    
    public void readAttachPath(AbstractSerializedData paramAbstractSerializedData, int paramInt)
    {
      int i;
      int j;
      if ((this.media != null) && (!(this.media instanceof TLRPC.TL_messageMediaEmpty)) && (!(this.media instanceof TLRPC.TL_messageMediaWebPage)))
      {
        i = 1;
        if ((TextUtils.isEmpty(this.message)) || ((!(this.media instanceof TLRPC.TL_messageMediaPhoto_old)) && (!(this.media instanceof TLRPC.TL_messageMediaPhoto_layer68)) && (!(this.media instanceof TLRPC.TL_messageMediaPhoto_layer74)) && (!(this.media instanceof TLRPC.TL_messageMediaDocument_old)) && (!(this.media instanceof TLRPC.TL_messageMediaDocument_layer68)) && (!(this.media instanceof TLRPC.TL_messageMediaDocument_layer74))) || (!this.message.startsWith("-1"))) {
          break label380;
        }
        j = 1;
      }
      for (;;)
      {
        label114:
        if (((this.out) || ((this.to_id != null) && (this.to_id.user_id != 0) && (this.to_id.user_id == this.from_id) && (this.from_id == paramInt))) && ((this.id < 0) || (i != 0)))
        {
          if ((i != 0) && (j != 0))
          {
            if ((this.message.length() > 6) && (this.message.charAt(2) == '_'))
            {
              this.params = new HashMap();
              this.params.put("ve", this.message);
            }
            if ((this.params != null) || (this.message.length() == 2)) {
              this.message = "";
            }
          }
          if (paramAbstractSerializedData.remaining() > 0)
          {
            this.attachPath = paramAbstractSerializedData.readString(false);
            if ((this.id < 0) && (this.attachPath.startsWith("||")))
            {
              String[] arrayOfString1 = this.attachPath.split("\\|\\|");
              if (arrayOfString1.length > 0)
              {
                if (this.params == null) {
                  this.params = new HashMap();
                }
                paramInt = 1;
                for (;;)
                {
                  if (paramInt < arrayOfString1.length - 1)
                  {
                    String[] arrayOfString2 = arrayOfString1[paramInt].split("\\|=\\|");
                    if (arrayOfString2.length == 2) {
                      this.params.put(arrayOfString2[0], arrayOfString2[1]);
                    }
                    paramInt++;
                    continue;
                    i = 0;
                    break;
                    label380:
                    j = 0;
                    break label114;
                  }
                }
                this.attachPath = arrayOfString1[(arrayOfString1.length - 1)];
              }
            }
          }
        }
      }
      if (((this.flags & 0x4) != 0) && (this.id < 0)) {
        this.fwd_msg_id = paramAbstractSerializedData.readInt32(false);
      }
    }
    
    protected void writeAttachPath(AbstractSerializedData paramAbstractSerializedData)
    {
      if (((this instanceof TLRPC.TL_message_secret)) || ((this instanceof TLRPC.TL_message_secret_layer72))) {
        paramAbstractSerializedData.writeString(this.attachPath);
      }
      for (;;)
      {
        return;
        if (this.attachPath != null) {}
        for (String str = this.attachPath;; str = "")
        {
          localObject = str;
          if (this.id >= 0) {
            break label179;
          }
          localObject = str;
          if (this.params == null) {
            break label179;
          }
          localObject = str;
          if (this.params.size() <= 0) {
            break label179;
          }
          localObject = this.params.entrySet().iterator();
          while (((Iterator)localObject).hasNext())
          {
            Map.Entry localEntry = (Map.Entry)((Iterator)localObject).next();
            str = (String)localEntry.getKey() + "|=|" + (String)localEntry.getValue() + "||" + str;
          }
        }
        Object localObject = "||" + str;
        label179:
        paramAbstractSerializedData.writeString((String)localObject);
        if (((this.flags & 0x4) != 0) && (this.id < 0)) {
          paramAbstractSerializedData.writeInt32(this.fwd_msg_id);
        }
      }
    }
  }
  
  public static abstract class MessageAction
    extends TLObject
  {
    public String address;
    public TLRPC.TL_inputGroupCall call;
    public long call_id;
    public int channel_id;
    public int chat_id;
    public String currency;
    public int duration;
    public TLRPC.DecryptedMessageAction encryptedAction;
    public int flags;
    public long game_id;
    public int inviter_id;
    public String message;
    public TLRPC.UserProfilePhoto newUserPhoto;
    public TLRPC.Photo photo;
    public TLRPC.PhoneCallDiscardReason reason;
    public int score;
    public String title;
    public long total_amount;
    public int ttl;
    public int user_id;
    public ArrayList<Integer> users = new ArrayList();
    
    public static MessageAction TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in MessageAction", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_messageActionLoginUnknownLocation();
        continue;
        localObject = new TLRPC.TL_messageEncryptedAction();
        continue;
        localObject = new TLRPC.TL_messageActionCustomAction();
        continue;
        localObject = new TLRPC.TL_messageActionChatCreate();
        continue;
        localObject = new TLRPC.TL_messageActionChatMigrateTo();
        continue;
        localObject = new TLRPC.TL_messageActionGroupCall();
        continue;
        localObject = new TLRPC.TL_messageActionScreenshotTaken();
        continue;
        localObject = new TLRPC.TL_messageActionHistoryClear();
        continue;
        localObject = new TLRPC.TL_messageActionChatEditPhoto();
        continue;
        localObject = new TLRPC.TL_messageActionChannelMigrateFrom();
        continue;
        localObject = new TLRPC.TL_messageActionChatAddUser();
        continue;
        localObject = new TLRPC.TL_messageActionChatDeleteUser();
        continue;
        localObject = new TLRPC.TL_messageActionCreatedBroadcastList();
        continue;
        localObject = new TLRPC.TL_messageActionUserJoined();
        continue;
        localObject = new TLRPC.TL_messageActionUserUpdatedPhoto();
        continue;
        localObject = new TLRPC.TL_messageActionChatAddUser_old();
        continue;
        localObject = new TLRPC.TL_messageActionTTLChange();
        continue;
        localObject = new TLRPC.TL_messageActionChatJoinedByLink();
        continue;
        localObject = new TLRPC.TL_messageActionChannelCreate();
        continue;
        localObject = new TLRPC.TL_messageActionPinMessage();
        continue;
        localObject = new TLRPC.TL_messageActionChatDeletePhoto();
        continue;
        localObject = new TLRPC.TL_messageActionPhoneCall();
        continue;
        localObject = new TLRPC.TL_messageActionChatEditTitle();
        continue;
        localObject = new TLRPC.TL_messageActionBotAllowed();
        continue;
        localObject = new TLRPC.TL_messageActionPaymentSent();
        continue;
        localObject = new TLRPC.TL_messageActionEmpty();
        continue;
        localObject = new TLRPC.TL_messageActionGameScore();
      }
      if (localObject != null) {
        ((MessageAction)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (MessageAction)localObject;
    }
  }
  
  public static abstract class MessageEntity
    extends TLObject
  {
    public String language;
    public int length;
    public int offset;
    public String url;
    
    public static MessageEntity TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in MessageEntity", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_messageEntityTextUrl();
        continue;
        localObject = new TLRPC.TL_messageEntityBotCommand();
        continue;
        localObject = new TLRPC.TL_messageEntityEmail();
        continue;
        localObject = new TLRPC.TL_messageEntityPre();
        continue;
        localObject = new TLRPC.TL_messageEntityUnknown();
        continue;
        localObject = new TLRPC.TL_messageEntityUrl();
        continue;
        localObject = new TLRPC.TL_messageEntityItalic();
        continue;
        localObject = new TLRPC.TL_messageEntityMention();
        continue;
        localObject = new TLRPC.TL_messageEntityMentionName();
        continue;
        localObject = new TLRPC.TL_inputMessageEntityMentionName();
        continue;
        localObject = new TLRPC.TL_messageEntityCashtag();
        continue;
        localObject = new TLRPC.TL_messageEntityBold();
        continue;
        localObject = new TLRPC.TL_messageEntityHashtag();
        continue;
        localObject = new TLRPC.TL_messageEntityCode();
        continue;
        localObject = new TLRPC.TL_messageEntityPhone();
      }
      if (localObject != null) {
        ((MessageEntity)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (MessageEntity)localObject;
    }
  }
  
  public static abstract class MessageFwdHeader
    extends TLObject
  {
    public int channel_id;
    public int channel_post;
    public int date;
    public int flags;
    public int from_id;
    public String post_author;
    public int saved_from_msg_id;
    public TLRPC.Peer saved_from_peer;
    
    public static MessageFwdHeader TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in MessageFwdHeader", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_messageFwdHeader_layer72();
        continue;
        localObject = new TLRPC.TL_messageFwdHeader();
        continue;
        localObject = new TLRPC.TL_messageFwdHeader_layer68();
      }
      if (localObject != null) {
        ((MessageFwdHeader)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (MessageFwdHeader)localObject;
    }
  }
  
  public static abstract class MessageMedia
    extends TLObject
  {
    public String address;
    public TLRPC.Audio audio_unused;
    public byte[] bytes;
    public String captionLegacy;
    public String currency;
    public String description;
    public TLRPC.Document document;
    public String first_name;
    public int flags;
    public TLRPC.TL_game game;
    public TLRPC.GeoPoint geo;
    public String last_name;
    public int period;
    public String phone_number;
    public TLRPC.Photo photo;
    public String provider;
    public int receipt_msg_id;
    public boolean shipping_address_requested;
    public String start_param;
    public boolean test;
    public String title;
    public long total_amount;
    public int ttl_seconds;
    public int user_id;
    public String venue_id;
    public String venue_type;
    public TLRPC.Video video_unused;
    public TLRPC.WebPage webpage;
    
    public static MessageMedia TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject1 = null;
      switch (paramInt)
      {
      }
      while ((localObject1 == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in MessageMedia", new Object[] { Integer.valueOf(paramInt) }));
        localObject1 = new TLRPC.TL_messageMediaUnsupported_old();
        continue;
        localObject1 = new TLRPC.TL_messageMediaAudio_layer45();
        continue;
        localObject1 = new TLRPC.TL_messageMediaPhoto_old();
        continue;
        localObject1 = new TLRPC.TL_messageMediaInvoice();
        continue;
        localObject1 = new TLRPC.TL_messageMediaUnsupported();
        continue;
        localObject1 = new TLRPC.TL_messageMediaEmpty();
        continue;
        localObject1 = new TLRPC.TL_messageMediaVenue_layer71();
        continue;
        localObject1 = new TLRPC.TL_messageMediaGeoLive();
        continue;
        localObject1 = new TLRPC.TL_messageMediaVenue();
        continue;
        localObject1 = new TLRPC.TL_messageMediaVideo_old();
        continue;
        localObject1 = new TLRPC.TL_messageMediaDocument_old();
        continue;
        localObject1 = new TLRPC.TL_messageMediaDocument_layer68();
        continue;
        localObject1 = new TLRPC.TL_messageMediaGame();
        continue;
        localObject1 = new TLRPC.TL_messageMediaDocument_layer74();
        continue;
        localObject1 = new TLRPC.TL_messageMediaContact();
        continue;
        localObject1 = new TLRPC.TL_messageMediaPhoto();
        continue;
        localObject1 = new TLRPC.TL_messageMediaPhoto_layer74();
        continue;
        localObject1 = new TLRPC.TL_messageMediaPhoto_layer68();
        continue;
        localObject1 = new TLRPC.TL_messageMediaVideo_layer45();
        continue;
        localObject1 = new TLRPC.TL_messageMediaGeo();
        continue;
        localObject1 = new TLRPC.TL_messageMediaWebPage();
        continue;
        localObject1 = new TLRPC.TL_messageMediaDocument();
      }
      Object localObject2 = localObject1;
      if (localObject1 != null)
      {
        ((MessageMedia)localObject1).readParams(paramAbstractSerializedData, paramBoolean);
        if (((MessageMedia)localObject1).video_unused == null) {
          break label782;
        }
        localTL_messageMediaDocument = new TLRPC.TL_messageMediaDocument();
        if (!(((MessageMedia)localObject1).video_unused instanceof TLRPC.TL_videoEncrypted)) {
          break label754;
        }
        localTL_messageMediaDocument.document = new TLRPC.TL_documentEncrypted();
        localTL_messageMediaDocument.document.key = ((MessageMedia)localObject1).video_unused.key;
        localTL_messageMediaDocument.document.iv = ((MessageMedia)localObject1).video_unused.iv;
        localTL_messageMediaDocument.flags = 3;
        localTL_messageMediaDocument.document.id = ((MessageMedia)localObject1).video_unused.id;
        localTL_messageMediaDocument.document.access_hash = ((MessageMedia)localObject1).video_unused.access_hash;
        localTL_messageMediaDocument.document.date = ((MessageMedia)localObject1).video_unused.date;
        if (((MessageMedia)localObject1).video_unused.mime_type == null) {
          break label769;
        }
        localTL_messageMediaDocument.document.mime_type = ((MessageMedia)localObject1).video_unused.mime_type;
        label619:
        localTL_messageMediaDocument.document.size = ((MessageMedia)localObject1).video_unused.size;
        localTL_messageMediaDocument.document.thumb = ((MessageMedia)localObject1).video_unused.thumb;
        localTL_messageMediaDocument.document.dc_id = ((MessageMedia)localObject1).video_unused.dc_id;
        localTL_messageMediaDocument.captionLegacy = ((MessageMedia)localObject1).captionLegacy;
        paramAbstractSerializedData = new TLRPC.TL_documentAttributeVideo();
        paramAbstractSerializedData.w = ((MessageMedia)localObject1).video_unused.w;
        paramAbstractSerializedData.h = ((MessageMedia)localObject1).video_unused.h;
        paramAbstractSerializedData.duration = ((MessageMedia)localObject1).video_unused.duration;
        localTL_messageMediaDocument.document.attributes.add(paramAbstractSerializedData);
        paramAbstractSerializedData = localTL_messageMediaDocument;
        localObject2 = paramAbstractSerializedData;
        if (localTL_messageMediaDocument.captionLegacy == null)
        {
          localTL_messageMediaDocument.captionLegacy = "";
          localObject2 = paramAbstractSerializedData;
        }
      }
      label754:
      label769:
      label782:
      do
      {
        return (MessageMedia)localObject2;
        localTL_messageMediaDocument.document = new TLRPC.TL_document();
        break;
        localTL_messageMediaDocument.document.mime_type = "video/mp4";
        break label619;
        localObject2 = localObject1;
      } while (((MessageMedia)localObject1).audio_unused == null);
      TLRPC.TL_messageMediaDocument localTL_messageMediaDocument = new TLRPC.TL_messageMediaDocument();
      if ((((MessageMedia)localObject1).audio_unused instanceof TLRPC.TL_audioEncrypted))
      {
        localTL_messageMediaDocument.document = new TLRPC.TL_documentEncrypted();
        localTL_messageMediaDocument.document.key = ((MessageMedia)localObject1).audio_unused.key;
        localTL_messageMediaDocument.document.iv = ((MessageMedia)localObject1).audio_unused.iv;
        label853:
        localTL_messageMediaDocument.flags = 3;
        localTL_messageMediaDocument.document.id = ((MessageMedia)localObject1).audio_unused.id;
        localTL_messageMediaDocument.document.access_hash = ((MessageMedia)localObject1).audio_unused.access_hash;
        localTL_messageMediaDocument.document.date = ((MessageMedia)localObject1).audio_unused.date;
        if (((MessageMedia)localObject1).audio_unused.mime_type == null) {
          break label1075;
        }
      }
      label1075:
      for (localTL_messageMediaDocument.document.mime_type = ((MessageMedia)localObject1).audio_unused.mime_type;; localTL_messageMediaDocument.document.mime_type = "audio/ogg")
      {
        localTL_messageMediaDocument.document.size = ((MessageMedia)localObject1).audio_unused.size;
        localTL_messageMediaDocument.document.thumb = new TLRPC.TL_photoSizeEmpty();
        localTL_messageMediaDocument.document.thumb.type = "s";
        localTL_messageMediaDocument.document.dc_id = ((MessageMedia)localObject1).audio_unused.dc_id;
        localTL_messageMediaDocument.captionLegacy = ((MessageMedia)localObject1).captionLegacy;
        paramAbstractSerializedData = new TLRPC.TL_documentAttributeAudio();
        paramAbstractSerializedData.duration = ((MessageMedia)localObject1).audio_unused.duration;
        paramAbstractSerializedData.voice = true;
        localTL_messageMediaDocument.document.attributes.add(paramAbstractSerializedData);
        paramAbstractSerializedData = localTL_messageMediaDocument;
        localObject2 = paramAbstractSerializedData;
        if (localTL_messageMediaDocument.captionLegacy != null) {
          break;
        }
        localTL_messageMediaDocument.captionLegacy = "";
        localObject2 = paramAbstractSerializedData;
        break;
        localTL_messageMediaDocument.document = new TLRPC.TL_document();
        break label853;
      }
    }
  }
  
  public static abstract class MessagesFilter
    extends TLObject
  {
    public int flags;
    public boolean missed;
    
    public static MessagesFilter TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in MessagesFilter", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_inputMessagesFilterGif();
        continue;
        localObject = new TLRPC.TL_inputMessagesFilterMusic();
        continue;
        localObject = new TLRPC.TL_inputMessagesFilterChatPhotos();
        continue;
        localObject = new TLRPC.TL_inputMessagesFilterPhotos();
        continue;
        localObject = new TLRPC.TL_inputMessagesFilterUrl();
        continue;
        localObject = new TLRPC.TL_inputMessagesFilterDocument();
        continue;
        localObject = new TLRPC.TL_inputMessagesFilterPhotoVideo();
        continue;
        localObject = new TLRPC.TL_inputMessagesFilterPhotoVideoDocuments();
        continue;
        localObject = new TLRPC.TL_inputMessagesFilterGeo();
        continue;
        localObject = new TLRPC.TL_inputMessagesFilterMyMentions();
        continue;
        localObject = new TLRPC.TL_inputMessagesFilterRoundVoice();
        continue;
        localObject = new TLRPC.TL_inputMessagesFilterContacts();
        continue;
        localObject = new TLRPC.TL_inputMessagesFilterVoice();
        continue;
        localObject = new TLRPC.TL_inputMessagesFilterVideo();
        continue;
        localObject = new TLRPC.TL_inputMessagesFilterPhoneCalls();
        continue;
        localObject = new TLRPC.TL_inputMessagesFilterEmpty();
        continue;
        localObject = new TLRPC.TL_inputMessagesFilterRoundVideo();
      }
      if (localObject != null) {
        ((MessagesFilter)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (MessagesFilter)localObject;
    }
  }
  
  public static abstract class NotifyPeer
    extends TLObject
  {
    public TLRPC.Peer peer;
    
    public static NotifyPeer TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in NotifyPeer", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_notifyAll();
        continue;
        localObject = new TLRPC.TL_notifyChats();
        continue;
        localObject = new TLRPC.TL_notifyUsers();
        continue;
        localObject = new TLRPC.TL_notifyPeer();
      }
      if (localObject != null) {
        ((NotifyPeer)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (NotifyPeer)localObject;
    }
  }
  
  public static abstract class Page
    extends TLObject
  {
    public ArrayList<TLRPC.PageBlock> blocks = new ArrayList();
    public ArrayList<TLRPC.Document> documents = new ArrayList();
    public ArrayList<TLRPC.Photo> photos = new ArrayList();
    
    public static Page TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in Page", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_pageFull();
        continue;
        localObject = new TLRPC.TL_pagePart_layer67();
        continue;
        localObject = new TLRPC.TL_pageFull_layer67();
        continue;
        localObject = new TLRPC.TL_pagePart();
      }
      if (localObject != null) {
        ((Page)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (Page)localObject;
    }
  }
  
  public static abstract class PageBlock
    extends TLObject
  {
    public boolean allow_scrolling;
    public long audio_id;
    public String author;
    public long author_photo_id;
    public boolean autoplay;
    public ArrayList<PageBlock> blocks = new ArrayList();
    public boolean bottom;
    public TLRPC.RichText caption;
    public TLRPC.Chat channel;
    public PageBlock cover;
    public int date;
    public boolean first;
    public int flags;
    public boolean full_width;
    public int h;
    public String html;
    public String language;
    public int level;
    public boolean loop;
    public int mid;
    public String name;
    public boolean ordered;
    public long photo_id;
    public long poster_photo_id;
    public int published_date;
    public TLRPC.RichText text;
    public String url;
    public long video_id;
    public int w;
    public long webpage_id;
    
    public static PageBlock TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in PageBlock", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_pageBlockDivider();
        continue;
        localObject = new TLRPC.TL_pageBlockAuthorDate();
        continue;
        localObject = new TLRPC.TL_pageBlockPreformatted();
        continue;
        localObject = new TLRPC.TL_pageBlockEmbed();
        continue;
        localObject = new TLRPC.TL_pageBlockAnchor();
        continue;
        localObject = new TLRPC.TL_pageBlockHeader();
        continue;
        localObject = new TLRPC.TL_pageBlockVideo();
        continue;
        localObject = new TLRPC.TL_pageBlockUnsupported();
        continue;
        localObject = new TLRPC.TL_pageBlockParagraph();
        continue;
        localObject = new TLRPC.TL_pageBlockAuthorDate_layer60();
        continue;
        localObject = new TLRPC.TL_pageBlockCollage();
        continue;
        localObject = new TLRPC.TL_pageBlockFooter();
        continue;
        localObject = new TLRPC.TL_pageBlockList();
        continue;
        localObject = new TLRPC.TL_pageBlockEmbed_layer60();
        continue;
        localObject = new TLRPC.TL_pageBlockPhoto();
        continue;
        localObject = new TLRPC.TL_pageBlockSubtitle();
        continue;
        localObject = new TLRPC.TL_pageBlockBlockquote();
        continue;
        localObject = new TLRPC.TL_pageBlockEmbedPost();
        continue;
        localObject = new TLRPC.TL_pageBlockTitle();
        continue;
        localObject = new TLRPC.TL_pageBlockChannel();
        continue;
        localObject = new TLRPC.TL_pageBlockCover();
        continue;
        localObject = new TLRPC.TL_pageBlockSubheader();
        continue;
        localObject = new TLRPC.TL_pageBlockSlideshow();
        continue;
        localObject = new TLRPC.TL_pageBlockPullquote();
        continue;
        localObject = new TLRPC.TL_pageBlockAudio();
      }
      if (localObject != null) {
        ((PageBlock)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (PageBlock)localObject;
    }
  }
  
  public static abstract class Peer
    extends TLObject
  {
    public int channel_id;
    public int chat_id;
    public int user_id;
    
    public static Peer TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in Peer", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_peerChannel();
        continue;
        localObject = new TLRPC.TL_peerUser();
        continue;
        localObject = new TLRPC.TL_peerChat();
      }
      if (localObject != null) {
        ((Peer)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (Peer)localObject;
    }
  }
  
  public static abstract class PeerNotifyEvents
    extends TLObject
  {
    public static PeerNotifyEvents TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in PeerNotifyEvents", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_peerNotifyEventsEmpty();
        continue;
        localObject = new TLRPC.TL_peerNotifyEventsAll();
      }
      if (localObject != null) {
        ((PeerNotifyEvents)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (PeerNotifyEvents)localObject;
    }
  }
  
  public static abstract class PeerNotifySettings
    extends TLObject
  {
    public int events_mask;
    public int flags;
    public int mute_until;
    public boolean silent;
    public String sound;
    
    public static PeerNotifySettings TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in PeerNotifySettings", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_peerNotifySettings();
        continue;
        localObject = new TLRPC.TL_peerNotifySettings_layer47();
        continue;
        localObject = new TLRPC.TL_peerNotifySettingsEmpty();
      }
      if (localObject != null) {
        ((PeerNotifySettings)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (PeerNotifySettings)localObject;
    }
  }
  
  public static abstract class PhoneCall
    extends TLObject
  {
    public long access_hash;
    public int admin_id;
    public ArrayList<TLRPC.TL_phoneConnection> alternative_connections = new ArrayList();
    public TLRPC.TL_phoneConnection connection;
    public int date;
    public int duration;
    public int flags;
    public byte[] g_a_hash;
    public byte[] g_a_or_b;
    public byte[] g_b;
    public long id;
    public long key_fingerprint;
    public boolean need_debug;
    public boolean need_rating;
    public int participant_id;
    public TLRPC.TL_phoneCallProtocol protocol;
    public TLRPC.PhoneCallDiscardReason reason;
    public int receive_date;
    public int start_date;
    
    public static PhoneCall TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in PhoneCall", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_phoneCallRequested();
        continue;
        localObject = new TLRPC.TL_phoneCall();
        continue;
        localObject = new TLRPC.TL_phoneCallEmpty();
        continue;
        localObject = new TLRPC.TL_phoneCallAccepted();
        continue;
        localObject = new TLRPC.TL_phoneCallWaiting();
        continue;
        localObject = new TLRPC.TL_phoneCallDiscarded();
      }
      if (localObject != null) {
        ((PhoneCall)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (PhoneCall)localObject;
    }
  }
  
  public static abstract class PhoneCallDiscardReason
    extends TLObject
  {
    public byte[] encrypted_key;
    
    public static PhoneCallDiscardReason TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in PhoneCallDiscardReason", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_phoneCallDiscardReasonHangup();
        continue;
        localObject = new TLRPC.TL_phoneCallDiscardReasonBusy();
        continue;
        localObject = new TLRPC.TL_phoneCallDiscardReasonAllowGroupCall();
        continue;
        localObject = new TLRPC.TL_phoneCallDiscardReasonMissed();
        continue;
        localObject = new TLRPC.TL_phoneCallDiscardReasonDisconnect();
      }
      if (localObject != null) {
        ((PhoneCallDiscardReason)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (PhoneCallDiscardReason)localObject;
    }
  }
  
  public static abstract class Photo
    extends TLObject
  {
    public long access_hash;
    public int date;
    public int flags;
    public TLRPC.GeoPoint geo;
    public boolean has_stickers;
    public long id;
    public ArrayList<TLRPC.PhotoSize> sizes = new ArrayList();
    public int user_id;
    
    public static Photo TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in Photo", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_photo_old();
        continue;
        localObject = new TLRPC.TL_photo();
        continue;
        localObject = new TLRPC.TL_photo_old2();
        continue;
        localObject = new TLRPC.TL_photo_layer55();
        continue;
        localObject = new TLRPC.TL_photoEmpty();
      }
      if (localObject != null) {
        ((Photo)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (Photo)localObject;
    }
  }
  
  public static abstract class PhotoSize
    extends TLObject
  {
    public byte[] bytes;
    public int h;
    public TLRPC.FileLocation location;
    public int size;
    public String type;
    public int w;
    
    public static PhotoSize TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in PhotoSize", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_photoSize();
        continue;
        localObject = new TLRPC.TL_photoSizeEmpty();
        continue;
        localObject = new TLRPC.TL_photoCachedSize();
      }
      if (localObject != null) {
        ((PhotoSize)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (PhotoSize)localObject;
    }
  }
  
  public static abstract class PrivacyKey
    extends TLObject
  {
    public static PrivacyKey TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in PrivacyKey", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_privacyKeyStatusTimestamp();
        continue;
        localObject = new TLRPC.TL_privacyKeyChatInvite();
        continue;
        localObject = new TLRPC.TL_privacyKeyPhoneCall();
      }
      if (localObject != null) {
        ((PrivacyKey)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (PrivacyKey)localObject;
    }
  }
  
  public static abstract class PrivacyRule
    extends TLObject
  {
    public ArrayList<Integer> users = new ArrayList();
    
    public static PrivacyRule TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in PrivacyRule", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_privacyValueAllowUsers();
        continue;
        localObject = new TLRPC.TL_privacyValueDisallowAll();
        continue;
        localObject = new TLRPC.TL_privacyValueAllowContacts();
        continue;
        localObject = new TLRPC.TL_privacyValueDisallowContacts();
        continue;
        localObject = new TLRPC.TL_privacyValueAllowAll();
        continue;
        localObject = new TLRPC.TL_privacyValueDisallowUsers();
      }
      if (localObject != null) {
        ((PrivacyRule)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (PrivacyRule)localObject;
    }
  }
  
  public static abstract class RecentMeUrl
    extends TLObject
  {
    public int chat_id;
    public TLRPC.ChatInvite chat_invite;
    public TLRPC.StickerSetCovered set;
    public String url;
    public int user_id;
    
    public static RecentMeUrl TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in RecentMeUrl", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_recentMeUrlChat();
        continue;
        localObject = new TLRPC.TL_recentMeUrlStickerSet();
        continue;
        localObject = new TLRPC.TL_recentMeUrlUnknown();
        continue;
        localObject = new TLRPC.TL_recentMeUrlChatInvite();
        continue;
        localObject = new TLRPC.TL_recentMeUrlUser();
      }
      if (localObject != null) {
        ((RecentMeUrl)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (RecentMeUrl)localObject;
    }
  }
  
  public static abstract class ReplyMarkup
    extends TLObject
  {
    public int flags;
    public boolean resize;
    public ArrayList<TLRPC.TL_keyboardButtonRow> rows = new ArrayList();
    public boolean selective;
    public boolean single_use;
    
    public static ReplyMarkup TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in ReplyMarkup", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_replyInlineMarkup();
        continue;
        localObject = new TLRPC.TL_replyKeyboardHide();
        continue;
        localObject = new TLRPC.TL_replyKeyboardForceReply();
        continue;
        localObject = new TLRPC.TL_replyKeyboardMarkup();
      }
      if (localObject != null) {
        ((ReplyMarkup)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (ReplyMarkup)localObject;
    }
  }
  
  public static abstract class ReportReason
    extends TLObject
  {
    public String text;
    
    public static ReportReason TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in ReportReason", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_inputReportReasonSpam();
        continue;
        localObject = new TLRPC.TL_inputReportReasonViolence();
        continue;
        localObject = new TLRPC.TL_inputReportReasonOther();
        continue;
        localObject = new TLRPC.TL_inputReportReasonPornography();
      }
      if (localObject != null) {
        ((ReportReason)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (ReportReason)localObject;
    }
  }
  
  public static abstract class RichText
    extends TLObject
  {
    public String email;
    public RichText parentRichText;
    public ArrayList<RichText> texts = new ArrayList();
    public String url;
    public long webpage_id;
    
    public static RichText TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in RichText", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_textEmpty();
        continue;
        localObject = new TLRPC.TL_textUrl();
        continue;
        localObject = new TLRPC.TL_textStrike();
        continue;
        localObject = new TLRPC.TL_textFixed();
        continue;
        localObject = new TLRPC.TL_textEmail();
        continue;
        localObject = new TLRPC.TL_textPlain();
        continue;
        localObject = new TLRPC.TL_textConcat();
        continue;
        localObject = new TLRPC.TL_textBold();
        continue;
        localObject = new TLRPC.TL_textItalic();
        continue;
        localObject = new TLRPC.TL_textUnderline();
      }
      if (localObject != null) {
        ((RichText)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (RichText)localObject;
    }
  }
  
  public static abstract class SendMessageAction
    extends TLObject
  {
    public int progress;
    
    public static SendMessageAction TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in SendMessageAction", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_sendMessageGamePlayAction();
        continue;
        localObject = new TLRPC.TL_sendMessageRecordAudioAction();
        continue;
        localObject = new TLRPC.TL_sendMessageUploadVideoAction_old();
        continue;
        localObject = new TLRPC.TL_sendMessageUploadAudioAction_old();
        continue;
        localObject = new TLRPC.TL_sendMessageUploadAudioAction();
        continue;
        localObject = new TLRPC.TL_sendMessageUploadPhotoAction();
        continue;
        localObject = new TLRPC.TL_sendMessageUploadDocumentAction_old();
        continue;
        localObject = new TLRPC.TL_sendMessageUploadVideoAction();
        continue;
        localObject = new TLRPC.TL_sendMessageCancelAction();
        continue;
        localObject = new TLRPC.TL_sendMessageGeoLocationAction();
        continue;
        localObject = new TLRPC.TL_sendMessageChooseContactAction();
        continue;
        localObject = new TLRPC.TL_sendMessageRecordRoundAction();
        continue;
        localObject = new TLRPC.TL_sendMessageUploadRoundAction();
        continue;
        localObject = new TLRPC.TL_sendMessageTypingAction();
        continue;
        localObject = new TLRPC.TL_sendMessageUploadPhotoAction_old();
        continue;
        localObject = new TLRPC.TL_sendMessageUploadDocumentAction();
        continue;
        localObject = new TLRPC.TL_sendMessageRecordVideoAction();
      }
      if (localObject != null) {
        ((SendMessageAction)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (SendMessageAction)localObject;
    }
  }
  
  public static abstract class StickerSet
    extends TLObject
  {
    public long access_hash;
    public boolean archived;
    public int count;
    public int flags;
    public int hash;
    public long id;
    public boolean installed;
    public int installed_date;
    public boolean masks;
    public boolean official;
    public String short_name;
    public String title;
    
    public static StickerSet TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in StickerSet", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_stickerSet_old();
        continue;
        localObject = new TLRPC.TL_stickerSet();
        continue;
        localObject = new TLRPC.TL_stickerSet_layer75();
      }
      if (localObject != null) {
        ((StickerSet)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (StickerSet)localObject;
    }
  }
  
  public static abstract class StickerSetCovered
    extends TLObject
  {
    public TLRPC.Document cover;
    public ArrayList<TLRPC.Document> covers = new ArrayList();
    public TLRPC.StickerSet set;
    
    public static StickerSetCovered TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in StickerSetCovered", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_stickerSetMultiCovered();
        continue;
        localObject = new TLRPC.TL_stickerSetCovered();
      }
      if (localObject != null) {
        ((StickerSetCovered)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (StickerSetCovered)localObject;
    }
  }
  
  public static class TL_accountDaysTTL
    extends TLObject
  {
    public static int constructor = -NUM;
    public int days;
    
    public static TL_accountDaysTTL TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_accountDaysTTL", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_accountDaysTTL localTL_accountDaysTTL;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_accountDaysTTL)
      {
        return paramAbstractSerializedData;
        localTL_accountDaysTTL = new TL_accountDaysTTL();
        localTL_accountDaysTTL.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.days = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.days);
    }
  }
  
  public static class TL_account_authorizations
    extends TLObject
  {
    public static int constructor = 307276766;
    public ArrayList<TLRPC.TL_authorization> authorizations = new ArrayList();
    
    public static TL_account_authorizations TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_account_authorizations", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_account_authorizations localTL_account_authorizations;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_account_authorizations)
      {
        return paramAbstractSerializedData;
        localTL_account_authorizations = new TL_account_authorizations();
        localTL_account_authorizations.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
      }
      for (i = 0;; i++)
      {
        TLRPC.TL_authorization localTL_authorization;
        if (i < j)
        {
          localTL_authorization = TLRPC.TL_authorization.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localTL_authorization != null) {}
        }
        else
        {
          return;
        }
        this.authorizations.add(localTL_authorization);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.authorizations.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.TL_authorization)this.authorizations.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_account_changePhone
    extends TLObject
  {
    public static int constructor = NUM;
    public String phone_code;
    public String phone_code_hash;
    public String phone_number;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.User.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.phone_number);
      paramAbstractSerializedData.writeString(this.phone_code_hash);
      paramAbstractSerializedData.writeString(this.phone_code);
    }
  }
  
  public static class TL_account_checkUsername
    extends TLObject
  {
    public static int constructor = 655677548;
    public String username;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.username);
    }
  }
  
  public static class TL_account_confirmPhone
    extends TLObject
  {
    public static int constructor = NUM;
    public String phone_code;
    public String phone_code_hash;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.phone_code_hash);
      paramAbstractSerializedData.writeString(this.phone_code);
    }
  }
  
  public static class TL_account_deleteAccount
    extends TLObject
  {
    public static int constructor = NUM;
    public String reason;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.reason);
    }
  }
  
  public static class TL_account_getAccountTTL
    extends TLObject
  {
    public static int constructor = 150761757;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_accountDaysTTL.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_account_getAuthorizations
    extends TLObject
  {
    public static int constructor = -484392616;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_account_authorizations.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_account_getNotifySettings
    extends TLObject
  {
    public static int constructor = 313765169;
    public TLRPC.InputNotifyPeer peer;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.PeerNotifySettings.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.peer.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_account_getPassword
    extends TLObject
  {
    public static int constructor = NUM;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.account_Password.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_account_getPasswordSettings
    extends TLObject
  {
    public static int constructor = -NUM;
    public byte[] current_password_hash;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_account_passwordSettings.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeByteArray(this.current_password_hash);
    }
  }
  
  public static class TL_account_getPrivacy
    extends TLObject
  {
    public static int constructor = -623130288;
    public TLRPC.InputPrivacyKey key;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_account_privacyRules.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.key.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_account_getTmpPassword
    extends TLObject
  {
    public static int constructor = NUM;
    public byte[] password_hash;
    public int period;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_account_tmpPassword.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeByteArray(this.password_hash);
      paramAbstractSerializedData.writeInt32(this.period);
    }
  }
  
  public static class TL_account_getWallPapers
    extends TLObject
  {
    public static int constructor = -NUM;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      TLRPC.Vector localVector = new TLRPC.Vector();
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      for (paramInt = 0;; paramInt++)
      {
        TLRPC.WallPaper localWallPaper;
        if (paramInt < i)
        {
          localWallPaper = TLRPC.WallPaper.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localWallPaper != null) {}
        }
        else
        {
          return localVector;
        }
        localVector.objects.add(localWallPaper);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_account_getWebAuthorizations
    extends TLObject
  {
    public static int constructor = 405695855;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_account_webAuthorizations.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_account_noPassword
    extends TLRPC.account_Password
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.new_salt = paramAbstractSerializedData.readByteArray(paramBoolean);
      this.email_unconfirmed_pattern = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeByteArray(this.new_salt);
      paramAbstractSerializedData.writeString(this.email_unconfirmed_pattern);
    }
  }
  
  public static class TL_account_password
    extends TLRPC.account_Password
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.current_salt = paramAbstractSerializedData.readByteArray(paramBoolean);
      this.new_salt = paramAbstractSerializedData.readByteArray(paramBoolean);
      this.hint = paramAbstractSerializedData.readString(paramBoolean);
      this.has_recovery = paramAbstractSerializedData.readBool(paramBoolean);
      this.email_unconfirmed_pattern = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeByteArray(this.current_salt);
      paramAbstractSerializedData.writeByteArray(this.new_salt);
      paramAbstractSerializedData.writeString(this.hint);
      paramAbstractSerializedData.writeBool(this.has_recovery);
      paramAbstractSerializedData.writeString(this.email_unconfirmed_pattern);
    }
  }
  
  public static class TL_account_passwordInputSettings
    extends TLObject
  {
    public static int constructor = -NUM;
    public String email;
    public int flags;
    public String hint;
    public byte[] new_password_hash;
    public byte[] new_salt;
    
    public static TL_account_passwordInputSettings TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_account_passwordInputSettings", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_account_passwordInputSettings localTL_account_passwordInputSettings;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_account_passwordInputSettings)
      {
        return paramAbstractSerializedData;
        localTL_account_passwordInputSettings = new TL_account_passwordInputSettings();
        localTL_account_passwordInputSettings.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0) {
        this.new_salt = paramAbstractSerializedData.readByteArray(paramBoolean);
      }
      if ((this.flags & 0x1) != 0) {
        this.new_password_hash = paramAbstractSerializedData.readByteArray(paramBoolean);
      }
      if ((this.flags & 0x1) != 0) {
        this.hint = paramAbstractSerializedData.readString(paramBoolean);
      }
      if ((this.flags & 0x2) != 0) {
        this.email = paramAbstractSerializedData.readString(paramBoolean);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.flags);
      if ((this.flags & 0x1) != 0) {
        paramAbstractSerializedData.writeByteArray(this.new_salt);
      }
      if ((this.flags & 0x1) != 0) {
        paramAbstractSerializedData.writeByteArray(this.new_password_hash);
      }
      if ((this.flags & 0x1) != 0) {
        paramAbstractSerializedData.writeString(this.hint);
      }
      if ((this.flags & 0x2) != 0) {
        paramAbstractSerializedData.writeString(this.email);
      }
    }
  }
  
  public static class TL_account_passwordSettings
    extends TLObject
  {
    public static int constructor = -NUM;
    public String email;
    
    public static TL_account_passwordSettings TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_account_passwordSettings", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_account_passwordSettings localTL_account_passwordSettings;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_account_passwordSettings)
      {
        return paramAbstractSerializedData;
        localTL_account_passwordSettings = new TL_account_passwordSettings();
        localTL_account_passwordSettings.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.email = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.email);
    }
  }
  
  public static class TL_account_privacyRules
    extends TLObject
  {
    public static int constructor = NUM;
    public ArrayList<TLRPC.PrivacyRule> rules = new ArrayList();
    public ArrayList<TLRPC.User> users = new ArrayList();
    
    public static TL_account_privacyRules TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_account_privacyRules", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_account_privacyRules localTL_account_privacyRules;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_account_privacyRules)
      {
        return paramAbstractSerializedData;
        localTL_account_privacyRules = new TL_account_privacyRules();
        localTL_account_privacyRules.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      Object localObject;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else
      {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
        i = 0;
        if (i >= j) {
          break label89;
        }
        localObject = TLRPC.PrivacyRule.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localObject != null) {
          break label73;
        }
      }
      label73:
      label89:
      label175:
      for (;;)
      {
        return;
        this.rules.add(localObject);
        i++;
        break;
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i != 481674261)
        {
          if (paramBoolean) {
            throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
          }
        }
        else
        {
          j = paramAbstractSerializedData.readInt32(paramBoolean);
          for (i = 0;; i++)
          {
            if (i >= j) {
              break label175;
            }
            localObject = TLRPC.User.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
            if (localObject == null) {
              break;
            }
            this.users.add(localObject);
          }
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.rules.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.PrivacyRule)this.rules.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.users.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        ((TLRPC.User)this.users.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_account_registerDevice
    extends TLObject
  {
    public static int constructor = NUM;
    public boolean app_sandbox;
    public ArrayList<Integer> other_uids = new ArrayList();
    public byte[] secret;
    public String token;
    public int token_type;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.token_type);
      paramAbstractSerializedData.writeString(this.token);
      paramAbstractSerializedData.writeBool(this.app_sandbox);
      paramAbstractSerializedData.writeByteArray(this.secret);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.other_uids.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        paramAbstractSerializedData.writeInt32(((Integer)this.other_uids.get(j)).intValue());
      }
    }
  }
  
  public static class TL_account_reportPeer
    extends TLObject
  {
    public static int constructor = -NUM;
    public TLRPC.InputPeer peer;
    public TLRPC.ReportReason reason;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.peer.serializeToStream(paramAbstractSerializedData);
      this.reason.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_account_resetAuthorization
    extends TLObject
  {
    public static int constructor = -545786948;
    public long hash;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.hash);
    }
  }
  
  public static class TL_account_resetNotifySettings
    extends TLObject
  {
    public static int constructor = -612493497;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_account_resetWebAuthorization
    extends TLObject
  {
    public static int constructor = 755087855;
    public long hash;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.hash);
    }
  }
  
  public static class TL_account_resetWebAuthorizations
    extends TLObject
  {
    public static int constructor = NUM;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_account_sendChangePhoneCode
    extends TLObject
  {
    public static int constructor = 149257707;
    public boolean allow_flashcall;
    public boolean current_number;
    public int flags;
    public String phone_number;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_auth_sentCode.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.allow_flashcall) {}
      for (int i = this.flags | 0x1;; i = this.flags & 0xFFFFFFFE)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeString(this.phone_number);
        if ((this.flags & 0x1) != 0) {
          paramAbstractSerializedData.writeBool(this.current_number);
        }
        return;
      }
    }
  }
  
  public static class TL_account_sendConfirmPhoneCode
    extends TLObject
  {
    public static int constructor = 353818557;
    public boolean allow_flashcall;
    public boolean current_number;
    public int flags;
    public String hash;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_auth_sentCode.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.allow_flashcall) {}
      for (int i = this.flags | 0x1;; i = this.flags & 0xFFFFFFFE)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeString(this.hash);
        if ((this.flags & 0x1) != 0) {
          paramAbstractSerializedData.writeBool(this.current_number);
        }
        return;
      }
    }
  }
  
  public static class TL_account_setAccountTTL
    extends TLObject
  {
    public static int constructor = 608323678;
    public TLRPC.TL_accountDaysTTL ttl;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.ttl.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_account_setPrivacy
    extends TLObject
  {
    public static int constructor = -906486552;
    public TLRPC.InputPrivacyKey key;
    public ArrayList<TLRPC.InputPrivacyRule> rules = new ArrayList();
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_account_privacyRules.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.key.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.rules.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.InputPrivacyRule)this.rules.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_account_tmpPassword
    extends TLObject
  {
    public static int constructor = -614138572;
    public byte[] tmp_password;
    public int valid_until;
    
    public static TL_account_tmpPassword TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_account_tmpPassword", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_account_tmpPassword localTL_account_tmpPassword;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_account_tmpPassword)
      {
        return paramAbstractSerializedData;
        localTL_account_tmpPassword = new TL_account_tmpPassword();
        localTL_account_tmpPassword.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.tmp_password = paramAbstractSerializedData.readByteArray(paramBoolean);
      this.valid_until = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeByteArray(this.tmp_password);
      paramAbstractSerializedData.writeInt32(this.valid_until);
    }
  }
  
  public static class TL_account_unregisterDevice
    extends TLObject
  {
    public static int constructor = 813089983;
    public ArrayList<Integer> other_uids = new ArrayList();
    public String token;
    public int token_type;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.token_type);
      paramAbstractSerializedData.writeString(this.token);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.other_uids.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        paramAbstractSerializedData.writeInt32(((Integer)this.other_uids.get(j)).intValue());
      }
    }
  }
  
  public static class TL_account_updateDeviceLocked
    extends TLObject
  {
    public static int constructor = 954152242;
    public int period;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.period);
    }
  }
  
  public static class TL_account_updateNotifySettings
    extends TLObject
  {
    public static int constructor = -NUM;
    public TLRPC.InputNotifyPeer peer;
    public TLRPC.TL_inputPeerNotifySettings settings;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.peer.serializeToStream(paramAbstractSerializedData);
      this.settings.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_account_updatePasswordSettings
    extends TLObject
  {
    public static int constructor = -92517498;
    public byte[] current_password_hash;
    public TLRPC.TL_account_passwordInputSettings new_settings;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeByteArray(this.current_password_hash);
      this.new_settings.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_account_updateProfile
    extends TLObject
  {
    public static int constructor = NUM;
    public String about;
    public String first_name;
    public int flags;
    public String last_name;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.User.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.flags);
      if ((this.flags & 0x1) != 0) {
        paramAbstractSerializedData.writeString(this.first_name);
      }
      if ((this.flags & 0x2) != 0) {
        paramAbstractSerializedData.writeString(this.last_name);
      }
      if ((this.flags & 0x4) != 0) {
        paramAbstractSerializedData.writeString(this.about);
      }
    }
  }
  
  public static class TL_account_updateStatus
    extends TLObject
  {
    public static int constructor = NUM;
    public boolean offline;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeBool(this.offline);
    }
  }
  
  public static class TL_account_updateUsername
    extends TLObject
  {
    public static int constructor = NUM;
    public String username;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.User.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.username);
    }
  }
  
  public static class TL_account_webAuthorizations
    extends TLObject
  {
    public static int constructor = -313079300;
    public ArrayList<TLRPC.TL_webAuthorization> authorizations = new ArrayList();
    public ArrayList<TLRPC.User> users = new ArrayList();
    
    public static TL_account_webAuthorizations TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_account_webAuthorizations", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_account_webAuthorizations localTL_account_webAuthorizations;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_account_webAuthorizations)
      {
        return paramAbstractSerializedData;
        localTL_account_webAuthorizations = new TL_account_webAuthorizations();
        localTL_account_webAuthorizations.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      Object localObject;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else
      {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
        i = 0;
        if (i >= j) {
          break label89;
        }
        localObject = TLRPC.TL_webAuthorization.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localObject != null) {
          break label73;
        }
      }
      label73:
      label89:
      label175:
      for (;;)
      {
        return;
        this.authorizations.add(localObject);
        i++;
        break;
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i != 481674261)
        {
          if (paramBoolean) {
            throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
          }
        }
        else
        {
          j = paramAbstractSerializedData.readInt32(paramBoolean);
          for (i = 0;; i++)
          {
            if (i >= j) {
              break label175;
            }
            localObject = TLRPC.User.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
            if (localObject == null) {
              break;
            }
            this.users.add(localObject);
          }
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.authorizations.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.TL_webAuthorization)this.authorizations.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.users.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        ((TLRPC.User)this.users.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_audioEmpty_layer45
    extends TLRPC.Audio
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt64(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.id);
    }
  }
  
  public static class TL_audioEncrypted
    extends TLRPC.TL_audio_layer45
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
      this.user_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
      this.duration = paramAbstractSerializedData.readInt32(paramBoolean);
      this.size = paramAbstractSerializedData.readInt32(paramBoolean);
      this.dc_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.key = paramAbstractSerializedData.readByteArray(paramBoolean);
      this.iv = paramAbstractSerializedData.readByteArray(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.id);
      paramAbstractSerializedData.writeInt64(this.access_hash);
      paramAbstractSerializedData.writeInt32(this.user_id);
      paramAbstractSerializedData.writeInt32(this.date);
      paramAbstractSerializedData.writeInt32(this.duration);
      paramAbstractSerializedData.writeInt32(this.size);
      paramAbstractSerializedData.writeInt32(this.dc_id);
      paramAbstractSerializedData.writeByteArray(this.key);
      paramAbstractSerializedData.writeByteArray(this.iv);
    }
  }
  
  public static class TL_audio_layer45
    extends TLRPC.Audio
  {
    public static int constructor = -102543275;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
      this.duration = paramAbstractSerializedData.readInt32(paramBoolean);
      this.mime_type = paramAbstractSerializedData.readString(paramBoolean);
      this.size = paramAbstractSerializedData.readInt32(paramBoolean);
      this.dc_id = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.id);
      paramAbstractSerializedData.writeInt64(this.access_hash);
      paramAbstractSerializedData.writeInt32(this.date);
      paramAbstractSerializedData.writeInt32(this.duration);
      paramAbstractSerializedData.writeString(this.mime_type);
      paramAbstractSerializedData.writeInt32(this.size);
      paramAbstractSerializedData.writeInt32(this.dc_id);
    }
  }
  
  public static class TL_audio_old
    extends TLRPC.TL_audio_layer45
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
      this.user_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
      this.duration = paramAbstractSerializedData.readInt32(paramBoolean);
      this.size = paramAbstractSerializedData.readInt32(paramBoolean);
      this.dc_id = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.id);
      paramAbstractSerializedData.writeInt64(this.access_hash);
      paramAbstractSerializedData.writeInt32(this.user_id);
      paramAbstractSerializedData.writeInt32(this.date);
      paramAbstractSerializedData.writeInt32(this.duration);
      paramAbstractSerializedData.writeInt32(this.size);
      paramAbstractSerializedData.writeInt32(this.dc_id);
    }
  }
  
  public static class TL_audio_old2
    extends TLRPC.TL_audio_layer45
  {
    public static int constructor = -945003370;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
      this.user_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
      this.duration = paramAbstractSerializedData.readInt32(paramBoolean);
      this.mime_type = paramAbstractSerializedData.readString(paramBoolean);
      this.size = paramAbstractSerializedData.readInt32(paramBoolean);
      this.dc_id = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.id);
      paramAbstractSerializedData.writeInt64(this.access_hash);
      paramAbstractSerializedData.writeInt32(this.user_id);
      paramAbstractSerializedData.writeInt32(this.date);
      paramAbstractSerializedData.writeInt32(this.duration);
      paramAbstractSerializedData.writeString(this.mime_type);
      paramAbstractSerializedData.writeInt32(this.size);
      paramAbstractSerializedData.writeInt32(this.dc_id);
    }
  }
  
  public static class TL_auth_authorization
    extends TLObject
  {
    public static int constructor = -855308010;
    public int flags;
    public int tmp_sessions;
    public TLRPC.User user;
    
    public static TL_auth_authorization TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_auth_authorization", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_auth_authorization localTL_auth_authorization;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_auth_authorization)
      {
        return paramAbstractSerializedData;
        localTL_auth_authorization = new TL_auth_authorization();
        localTL_auth_authorization.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0) {
        this.tmp_sessions = paramAbstractSerializedData.readInt32(paramBoolean);
      }
      this.user = TLRPC.User.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.flags);
      if ((this.flags & 0x1) != 0) {
        paramAbstractSerializedData.writeInt32(this.tmp_sessions);
      }
      this.user.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_auth_cancelCode
    extends TLObject
  {
    public static int constructor = 520357240;
    public String phone_code_hash;
    public String phone_number;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.phone_number);
      paramAbstractSerializedData.writeString(this.phone_code_hash);
    }
  }
  
  public static class TL_auth_checkPassword
    extends TLObject
  {
    public static int constructor = 174260510;
    public byte[] password_hash;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_auth_authorization.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeByteArray(this.password_hash);
    }
  }
  
  public static class TL_auth_checkPhone
    extends TLObject
  {
    public static int constructor = NUM;
    public String phone_number;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_auth_checkedPhone.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.phone_number);
    }
  }
  
  public static class TL_auth_checkedPhone
    extends TLObject
  {
    public static int constructor = -NUM;
    public boolean phone_registered;
    
    public static TL_auth_checkedPhone TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_auth_checkedPhone", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_auth_checkedPhone localTL_auth_checkedPhone;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_auth_checkedPhone)
      {
        return paramAbstractSerializedData;
        localTL_auth_checkedPhone = new TL_auth_checkedPhone();
        localTL_auth_checkedPhone.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.phone_registered = paramAbstractSerializedData.readBool(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeBool(this.phone_registered);
    }
  }
  
  public static class TL_auth_codeTypeCall
    extends TLRPC.auth_CodeType
  {
    public static int constructor = NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_auth_codeTypeFlashCall
    extends TLRPC.auth_CodeType
  {
    public static int constructor = 577556219;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_auth_codeTypeSms
    extends TLRPC.auth_CodeType
  {
    public static int constructor = NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_auth_exportAuthorization
    extends TLObject
  {
    public static int constructor = -440401971;
    public int dc_id;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_auth_exportedAuthorization.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.dc_id);
    }
  }
  
  public static class TL_auth_exportedAuthorization
    extends TLObject
  {
    public static int constructor = -543777747;
    public byte[] bytes;
    public int id;
    
    public static TL_auth_exportedAuthorization TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_auth_exportedAuthorization", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_auth_exportedAuthorization localTL_auth_exportedAuthorization;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_auth_exportedAuthorization)
      {
        return paramAbstractSerializedData;
        localTL_auth_exportedAuthorization = new TL_auth_exportedAuthorization();
        localTL_auth_exportedAuthorization.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.bytes = paramAbstractSerializedData.readByteArray(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.id);
      paramAbstractSerializedData.writeByteArray(this.bytes);
    }
  }
  
  public static class TL_auth_importAuthorization
    extends TLObject
  {
    public static int constructor = -470837741;
    public byte[] bytes;
    public int id;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_auth_authorization.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.id);
      paramAbstractSerializedData.writeByteArray(this.bytes);
    }
  }
  
  public static class TL_auth_logOut
    extends TLObject
  {
    public static int constructor = NUM;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_auth_passwordRecovery
    extends TLObject
  {
    public static int constructor = 326715557;
    public String email_pattern;
    
    public static TL_auth_passwordRecovery TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_auth_passwordRecovery", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_auth_passwordRecovery localTL_auth_passwordRecovery;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_auth_passwordRecovery)
      {
        return paramAbstractSerializedData;
        localTL_auth_passwordRecovery = new TL_auth_passwordRecovery();
        localTL_auth_passwordRecovery.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.email_pattern = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.email_pattern);
    }
  }
  
  public static class TL_auth_recoverPassword
    extends TLObject
  {
    public static int constructor = NUM;
    public String code;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_auth_authorization.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.code);
    }
  }
  
  public static class TL_auth_requestPasswordRecovery
    extends TLObject
  {
    public static int constructor = -661144474;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_auth_passwordRecovery.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_auth_resendCode
    extends TLObject
  {
    public static int constructor = NUM;
    public String phone_code_hash;
    public String phone_number;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_auth_sentCode.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.phone_number);
      paramAbstractSerializedData.writeString(this.phone_code_hash);
    }
  }
  
  public static class TL_auth_resetAuthorizations
    extends TLObject
  {
    public static int constructor = -NUM;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_auth_sendCode
    extends TLObject
  {
    public static int constructor = -NUM;
    public boolean allow_flashcall;
    public String api_hash;
    public int api_id;
    public boolean current_number;
    public int flags;
    public String phone_number;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_auth_sentCode.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.allow_flashcall) {}
      for (int i = this.flags | 0x1;; i = this.flags & 0xFFFFFFFE)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeString(this.phone_number);
        if ((this.flags & 0x1) != 0) {
          paramAbstractSerializedData.writeBool(this.current_number);
        }
        paramAbstractSerializedData.writeInt32(this.api_id);
        paramAbstractSerializedData.writeString(this.api_hash);
        return;
      }
    }
  }
  
  public static class TL_auth_sendInvites
    extends TLObject
  {
    public static int constructor = NUM;
    public String message;
    public ArrayList<String> phone_numbers = new ArrayList();
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.phone_numbers.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        paramAbstractSerializedData.writeString((String)this.phone_numbers.get(j));
      }
      paramAbstractSerializedData.writeString(this.message);
    }
  }
  
  public static class TL_auth_sentCode
    extends TLObject
  {
    public static int constructor = NUM;
    public int flags;
    public TLRPC.auth_CodeType next_type;
    public String phone_code_hash;
    public boolean phone_registered;
    public int timeout;
    public TLRPC.auth_SentCodeType type;
    
    public static TL_auth_sentCode TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_auth_sentCode", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_auth_sentCode localTL_auth_sentCode;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_auth_sentCode)
      {
        return paramAbstractSerializedData;
        localTL_auth_sentCode = new TL_auth_sentCode();
        localTL_auth_sentCode.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0) {}
      for (boolean bool = true;; bool = false)
      {
        this.phone_registered = bool;
        this.type = TLRPC.auth_SentCodeType.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        this.phone_code_hash = paramAbstractSerializedData.readString(paramBoolean);
        if ((this.flags & 0x2) != 0) {
          this.next_type = TLRPC.auth_CodeType.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        }
        if ((this.flags & 0x4) != 0) {
          this.timeout = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        return;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.phone_registered) {}
      for (int i = this.flags | 0x1;; i = this.flags & 0xFFFFFFFE)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        this.type.serializeToStream(paramAbstractSerializedData);
        paramAbstractSerializedData.writeString(this.phone_code_hash);
        if ((this.flags & 0x2) != 0) {
          this.next_type.serializeToStream(paramAbstractSerializedData);
        }
        if ((this.flags & 0x4) != 0) {
          paramAbstractSerializedData.writeInt32(this.timeout);
        }
        return;
      }
    }
  }
  
  public static class TL_auth_sentCodeTypeApp
    extends TLRPC.auth_SentCodeType
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.length = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.length);
    }
  }
  
  public static class TL_auth_sentCodeTypeCall
    extends TLRPC.auth_SentCodeType
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.length = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.length);
    }
  }
  
  public static class TL_auth_sentCodeTypeFlashCall
    extends TLRPC.auth_SentCodeType
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.pattern = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.pattern);
    }
  }
  
  public static class TL_auth_sentCodeTypeSms
    extends TLRPC.auth_SentCodeType
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.length = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.length);
    }
  }
  
  public static class TL_auth_signIn
    extends TLObject
  {
    public static int constructor = -NUM;
    public String phone_code;
    public String phone_code_hash;
    public String phone_number;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_auth_authorization.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.phone_number);
      paramAbstractSerializedData.writeString(this.phone_code_hash);
      paramAbstractSerializedData.writeString(this.phone_code);
    }
  }
  
  public static class TL_auth_signUp
    extends TLObject
  {
    public static int constructor = 453408308;
    public String first_name;
    public String last_name;
    public String phone_code;
    public String phone_code_hash;
    public String phone_number;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_auth_authorization.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.phone_number);
      paramAbstractSerializedData.writeString(this.phone_code_hash);
      paramAbstractSerializedData.writeString(this.phone_code);
      paramAbstractSerializedData.writeString(this.first_name);
      paramAbstractSerializedData.writeString(this.last_name);
    }
  }
  
  public static class TL_authorization
    extends TLObject
  {
    public static int constructor = NUM;
    public int api_id;
    public String app_name;
    public String app_version;
    public String country;
    public int date_active;
    public int date_created;
    public String device_model;
    public int flags;
    public long hash;
    public String ip;
    public String platform;
    public String region;
    public String system_version;
    
    public static TL_authorization TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_authorization", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_authorization localTL_authorization;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_authorization)
      {
        return paramAbstractSerializedData;
        localTL_authorization = new TL_authorization();
        localTL_authorization.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.hash = paramAbstractSerializedData.readInt64(paramBoolean);
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      this.device_model = paramAbstractSerializedData.readString(paramBoolean);
      this.platform = paramAbstractSerializedData.readString(paramBoolean);
      this.system_version = paramAbstractSerializedData.readString(paramBoolean);
      this.api_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.app_name = paramAbstractSerializedData.readString(paramBoolean);
      this.app_version = paramAbstractSerializedData.readString(paramBoolean);
      this.date_created = paramAbstractSerializedData.readInt32(paramBoolean);
      this.date_active = paramAbstractSerializedData.readInt32(paramBoolean);
      this.ip = paramAbstractSerializedData.readString(paramBoolean);
      this.country = paramAbstractSerializedData.readString(paramBoolean);
      this.region = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.hash);
      paramAbstractSerializedData.writeInt32(this.flags);
      paramAbstractSerializedData.writeString(this.device_model);
      paramAbstractSerializedData.writeString(this.platform);
      paramAbstractSerializedData.writeString(this.system_version);
      paramAbstractSerializedData.writeInt32(this.api_id);
      paramAbstractSerializedData.writeString(this.app_name);
      paramAbstractSerializedData.writeString(this.app_version);
      paramAbstractSerializedData.writeInt32(this.date_created);
      paramAbstractSerializedData.writeInt32(this.date_active);
      paramAbstractSerializedData.writeString(this.ip);
      paramAbstractSerializedData.writeString(this.country);
      paramAbstractSerializedData.writeString(this.region);
    }
  }
  
  public static class TL_boolFalse
    extends TLRPC.Bool
  {
    public static int constructor = -NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_boolTrue
    extends TLRPC.Bool
  {
    public static int constructor = -NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_botCommand
    extends TLObject
  {
    public static int constructor = -NUM;
    public String command;
    public String description;
    
    public static TL_botCommand TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_botCommand", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_botCommand localTL_botCommand;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_botCommand)
      {
        return paramAbstractSerializedData;
        localTL_botCommand = new TL_botCommand();
        localTL_botCommand.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.command = paramAbstractSerializedData.readString(paramBoolean);
      this.description = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.command);
      paramAbstractSerializedData.writeString(this.description);
    }
  }
  
  public static class TL_botInfo
    extends TLRPC.BotInfo
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.user_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.description = paramAbstractSerializedData.readString(paramBoolean);
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
      }
      for (i = 0;; i++)
      {
        TLRPC.TL_botCommand localTL_botCommand;
        if (i < j)
        {
          localTL_botCommand = TLRPC.TL_botCommand.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localTL_botCommand != null) {}
        }
        else
        {
          return;
        }
        this.commands.add(localTL_botCommand);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.user_id);
      paramAbstractSerializedData.writeString(this.description);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.commands.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.TL_botCommand)this.commands.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_botInfoEmpty_layer48
    extends TLRPC.TL_botInfo
  {
    public static int constructor = -NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_botInfo_layer48
    extends TLRPC.TL_botInfo
  {
    public static int constructor = 164583517;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.user_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.version = paramAbstractSerializedData.readInt32(paramBoolean);
      paramAbstractSerializedData.readString(paramBoolean);
      this.description = paramAbstractSerializedData.readString(paramBoolean);
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
      }
      for (i = 0;; i++)
      {
        TLRPC.TL_botCommand localTL_botCommand;
        if (i < j)
        {
          localTL_botCommand = TLRPC.TL_botCommand.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localTL_botCommand != null) {}
        }
        else
        {
          return;
        }
        this.commands.add(localTL_botCommand);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.user_id);
      paramAbstractSerializedData.writeInt32(this.version);
      paramAbstractSerializedData.writeString("");
      paramAbstractSerializedData.writeString(this.description);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.commands.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.TL_botCommand)this.commands.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_botInlineMediaResult
    extends TLRPC.BotInlineResult
  {
    public static int constructor = 400266251;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      this.id = paramAbstractSerializedData.readString(paramBoolean);
      this.type = paramAbstractSerializedData.readString(paramBoolean);
      if ((this.flags & 0x1) != 0) {
        this.photo = TLRPC.Photo.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      }
      if ((this.flags & 0x2) != 0) {
        this.document = TLRPC.Document.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      }
      if ((this.flags & 0x4) != 0) {
        this.title = paramAbstractSerializedData.readString(paramBoolean);
      }
      if ((this.flags & 0x8) != 0) {
        this.description = paramAbstractSerializedData.readString(paramBoolean);
      }
      this.send_message = TLRPC.BotInlineMessage.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.flags);
      paramAbstractSerializedData.writeString(this.id);
      paramAbstractSerializedData.writeString(this.type);
      if ((this.flags & 0x1) != 0) {
        this.photo.serializeToStream(paramAbstractSerializedData);
      }
      if ((this.flags & 0x2) != 0) {
        this.document.serializeToStream(paramAbstractSerializedData);
      }
      if ((this.flags & 0x4) != 0) {
        paramAbstractSerializedData.writeString(this.title);
      }
      if ((this.flags & 0x8) != 0) {
        paramAbstractSerializedData.writeString(this.description);
      }
      this.send_message.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_botInlineMessageMediaAuto
    extends TLRPC.BotInlineMessage
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      this.message = paramAbstractSerializedData.readString(paramBoolean);
      int i;
      TLRPC.MessageEntity localMessageEntity;
      if ((this.flags & 0x2) != 0)
      {
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i != 481674261)
        {
          if (paramBoolean) {
            throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
          }
        }
        else
        {
          int j = paramAbstractSerializedData.readInt32(paramBoolean);
          i = 0;
          if (i >= j) {
            break label116;
          }
          localMessageEntity = TLRPC.MessageEntity.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localMessageEntity != null) {
            break label100;
          }
        }
      }
      for (;;)
      {
        return;
        label100:
        this.entities.add(localMessageEntity);
        i++;
        break;
        label116:
        if ((this.flags & 0x4) != 0) {
          this.reply_markup = TLRPC.ReplyMarkup.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.flags);
      paramAbstractSerializedData.writeString(this.message);
      if ((this.flags & 0x2) != 0)
      {
        paramAbstractSerializedData.writeInt32(481674261);
        int i = this.entities.size();
        paramAbstractSerializedData.writeInt32(i);
        for (int j = 0; j < i; j++) {
          ((TLRPC.MessageEntity)this.entities.get(j)).serializeToStream(paramAbstractSerializedData);
        }
      }
      if ((this.flags & 0x4) != 0) {
        this.reply_markup.serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_botInlineMessageMediaAuto_layer74
    extends TLRPC.TL_botInlineMessageMediaAuto
  {
    public static int constructor = 175419739;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      this.message = paramAbstractSerializedData.readString(paramBoolean);
      if ((this.flags & 0x4) != 0) {
        this.reply_markup = TLRPC.ReplyMarkup.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.flags);
      paramAbstractSerializedData.writeString(this.message);
      if ((this.flags & 0x4) != 0) {
        this.reply_markup.serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_botInlineMessageMediaContact
    extends TLRPC.BotInlineMessage
  {
    public static int constructor = 904770772;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      this.phone_number = paramAbstractSerializedData.readString(paramBoolean);
      this.first_name = paramAbstractSerializedData.readString(paramBoolean);
      this.last_name = paramAbstractSerializedData.readString(paramBoolean);
      if ((this.flags & 0x4) != 0) {
        this.reply_markup = TLRPC.ReplyMarkup.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.flags);
      paramAbstractSerializedData.writeString(this.phone_number);
      paramAbstractSerializedData.writeString(this.first_name);
      paramAbstractSerializedData.writeString(this.last_name);
      if ((this.flags & 0x4) != 0) {
        this.reply_markup.serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_botInlineMessageMediaGeo
    extends TLRPC.BotInlineMessage
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      this.geo = TLRPC.GeoPoint.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.period = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x4) != 0) {
        this.reply_markup = TLRPC.ReplyMarkup.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.flags);
      this.geo.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(this.period);
      if ((this.flags & 0x4) != 0) {
        this.reply_markup.serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_botInlineMessageMediaGeo_layer71
    extends TLRPC.TL_botInlineMessageMediaGeo
  {
    public static int constructor = 982505656;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      this.geo = TLRPC.GeoPoint.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      if ((this.flags & 0x4) != 0) {
        this.reply_markup = TLRPC.ReplyMarkup.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.flags);
      this.geo.serializeToStream(paramAbstractSerializedData);
      if ((this.flags & 0x4) != 0) {
        this.reply_markup.serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_botInlineMessageMediaVenue
    extends TLRPC.BotInlineMessage
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      this.geo = TLRPC.GeoPoint.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.title = paramAbstractSerializedData.readString(paramBoolean);
      this.address = paramAbstractSerializedData.readString(paramBoolean);
      this.provider = paramAbstractSerializedData.readString(paramBoolean);
      this.venue_id = paramAbstractSerializedData.readString(paramBoolean);
      if ((this.flags & 0x4) != 0) {
        this.reply_markup = TLRPC.ReplyMarkup.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.flags);
      this.geo.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeString(this.title);
      paramAbstractSerializedData.writeString(this.address);
      paramAbstractSerializedData.writeString(this.provider);
      paramAbstractSerializedData.writeString(this.venue_id);
      if ((this.flags & 0x4) != 0) {
        this.reply_markup.serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_botInlineMessageText
    extends TLRPC.BotInlineMessage
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0) {}
      for (boolean bool = true;; bool = false)
      {
        this.no_webpage = bool;
        this.message = paramAbstractSerializedData.readString(paramBoolean);
        if ((this.flags & 0x2) == 0) {
          break label142;
        }
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i == 481674261) {
          break;
        }
        if (!paramBoolean) {
          break label125;
        }
        throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
      }
      int j = paramAbstractSerializedData.readInt32(paramBoolean);
      int i = 0;
      TLRPC.MessageEntity localMessageEntity;
      if (i < j)
      {
        localMessageEntity = TLRPC.MessageEntity.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localMessageEntity != null) {}
      }
      for (;;)
      {
        label125:
        return;
        this.entities.add(localMessageEntity);
        i++;
        break;
        label142:
        if ((this.flags & 0x4) != 0) {
          this.reply_markup = TLRPC.ReplyMarkup.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.no_webpage) {}
      for (int i = this.flags | 0x1;; i = this.flags & 0xFFFFFFFE)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeString(this.message);
        if ((this.flags & 0x2) == 0) {
          break;
        }
        paramAbstractSerializedData.writeInt32(481674261);
        int j = this.entities.size();
        paramAbstractSerializedData.writeInt32(j);
        for (i = 0; i < j; i++) {
          ((TLRPC.MessageEntity)this.entities.get(i)).serializeToStream(paramAbstractSerializedData);
        }
      }
      if ((this.flags & 0x4) != 0) {
        this.reply_markup.serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_botInlineResult
    extends TLRPC.BotInlineResult
  {
    public static int constructor = 295067450;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      this.id = paramAbstractSerializedData.readString(paramBoolean);
      this.type = paramAbstractSerializedData.readString(paramBoolean);
      if ((this.flags & 0x2) != 0) {
        this.title = paramAbstractSerializedData.readString(paramBoolean);
      }
      if ((this.flags & 0x4) != 0) {
        this.description = paramAbstractSerializedData.readString(paramBoolean);
      }
      if ((this.flags & 0x8) != 0) {
        this.url = paramAbstractSerializedData.readString(paramBoolean);
      }
      if ((this.flags & 0x10) != 0) {
        this.thumb = TLRPC.WebDocument.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      }
      if ((this.flags & 0x20) != 0) {
        this.content = TLRPC.WebDocument.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      }
      this.send_message = TLRPC.BotInlineMessage.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.flags);
      paramAbstractSerializedData.writeString(this.id);
      paramAbstractSerializedData.writeString(this.type);
      if ((this.flags & 0x2) != 0) {
        paramAbstractSerializedData.writeString(this.title);
      }
      if ((this.flags & 0x4) != 0) {
        paramAbstractSerializedData.writeString(this.description);
      }
      if ((this.flags & 0x8) != 0) {
        paramAbstractSerializedData.writeString(this.url);
      }
      if ((this.flags & 0x10) != 0) {
        this.thumb.serializeToStream(paramAbstractSerializedData);
      }
      if ((this.flags & 0x20) != 0) {
        this.content.serializeToStream(paramAbstractSerializedData);
      }
      this.send_message.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_channel
    extends TLRPC.Chat
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      boolean bool1 = true;
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0)
      {
        bool2 = true;
        this.creator = bool2;
        if ((this.flags & 0x4) == 0) {
          break label370;
        }
        bool2 = true;
        label41:
        this.left = bool2;
        if ((this.flags & 0x20) == 0) {
          break label376;
        }
        bool2 = true;
        label60:
        this.broadcast = bool2;
        if ((this.flags & 0x80) == 0) {
          break label382;
        }
        bool2 = true;
        label80:
        this.verified = bool2;
        if ((this.flags & 0x100) == 0) {
          break label388;
        }
        bool2 = true;
        label100:
        this.megagroup = bool2;
        if ((this.flags & 0x200) == 0) {
          break label394;
        }
        bool2 = true;
        label120:
        this.restricted = bool2;
        if ((this.flags & 0x400) == 0) {
          break label400;
        }
        bool2 = true;
        label140:
        this.democracy = bool2;
        if ((this.flags & 0x800) == 0) {
          break label406;
        }
        bool2 = true;
        label160:
        this.signatures = bool2;
        if ((this.flags & 0x1000) == 0) {
          break label412;
        }
      }
      label370:
      label376:
      label382:
      label388:
      label394:
      label400:
      label406:
      label412:
      for (boolean bool2 = bool1;; bool2 = false)
      {
        this.min = bool2;
        this.id = paramAbstractSerializedData.readInt32(paramBoolean);
        if ((this.flags & 0x2000) != 0) {
          this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
        }
        this.title = paramAbstractSerializedData.readString(paramBoolean);
        if ((this.flags & 0x40) != 0) {
          this.username = paramAbstractSerializedData.readString(paramBoolean);
        }
        this.photo = TLRPC.ChatPhoto.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        this.date = paramAbstractSerializedData.readInt32(paramBoolean);
        this.version = paramAbstractSerializedData.readInt32(paramBoolean);
        if ((this.flags & 0x200) != 0) {
          this.restriction_reason = paramAbstractSerializedData.readString(paramBoolean);
        }
        if ((this.flags & 0x4000) != 0) {
          this.admin_rights = TLRPC.TL_channelAdminRights.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        }
        if ((this.flags & 0x8000) != 0) {
          this.banned_rights = TLRPC.TL_channelBannedRights.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        }
        if ((this.flags & 0x20000) != 0) {
          this.participants_count = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        return;
        bool2 = false;
        break;
        bool2 = false;
        break label41;
        bool2 = false;
        break label60;
        bool2 = false;
        break label80;
        bool2 = false;
        break label100;
        bool2 = false;
        break label120;
        bool2 = false;
        break label140;
        bool2 = false;
        break label160;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.creator)
      {
        i = this.flags | 0x1;
        this.flags = i;
        if (!this.left) {
          break label362;
        }
        i = this.flags | 0x4;
        label40:
        this.flags = i;
        if (!this.broadcast) {
          break label373;
        }
        i = this.flags | 0x20;
        label60:
        this.flags = i;
        if (!this.verified) {
          break label384;
        }
        i = this.flags | 0x80;
        label81:
        this.flags = i;
        if (!this.megagroup) {
          break label396;
        }
        i = this.flags | 0x100;
        label102:
        this.flags = i;
        if (!this.restricted) {
          break label408;
        }
        i = this.flags | 0x200;
        label123:
        this.flags = i;
        if (!this.democracy) {
          break label420;
        }
        i = this.flags | 0x400;
        label144:
        this.flags = i;
        if (!this.signatures) {
          break label432;
        }
        i = this.flags | 0x800;
        label165:
        this.flags = i;
        if (!this.min) {
          break label444;
        }
      }
      label362:
      label373:
      label384:
      label396:
      label408:
      label420:
      label432:
      label444:
      for (int i = this.flags | 0x1000;; i = this.flags & 0xEFFF)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(this.id);
        if ((this.flags & 0x2000) != 0) {
          paramAbstractSerializedData.writeInt64(this.access_hash);
        }
        paramAbstractSerializedData.writeString(this.title);
        if ((this.flags & 0x40) != 0) {
          paramAbstractSerializedData.writeString(this.username);
        }
        this.photo.serializeToStream(paramAbstractSerializedData);
        paramAbstractSerializedData.writeInt32(this.date);
        paramAbstractSerializedData.writeInt32(this.version);
        if ((this.flags & 0x200) != 0) {
          paramAbstractSerializedData.writeString(this.restriction_reason);
        }
        if ((this.flags & 0x4000) != 0) {
          this.admin_rights.serializeToStream(paramAbstractSerializedData);
        }
        if ((this.flags & 0x8000) != 0) {
          this.banned_rights.serializeToStream(paramAbstractSerializedData);
        }
        if ((this.flags & 0x20000) != 0) {
          paramAbstractSerializedData.writeInt32(this.participants_count);
        }
        return;
        i = this.flags & 0xFFFFFFFE;
        break;
        i = this.flags & 0xFFFFFFFB;
        break label40;
        i = this.flags & 0xFFFFFFDF;
        break label60;
        i = this.flags & 0xFF7F;
        break label81;
        i = this.flags & 0xFEFF;
        break label102;
        i = this.flags & 0xFDFF;
        break label123;
        i = this.flags & 0xFBFF;
        break label144;
        i = this.flags & 0xF7FF;
        break label165;
      }
    }
  }
  
  public static class TL_channelAdminLogEvent
    extends TLObject
  {
    public static int constructor = 995769920;
    public TLRPC.ChannelAdminLogEventAction action;
    public int date;
    public long id;
    public int user_id;
    
    public static TL_channelAdminLogEvent TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_channelAdminLogEvent", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_channelAdminLogEvent localTL_channelAdminLogEvent;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_channelAdminLogEvent)
      {
        return paramAbstractSerializedData;
        localTL_channelAdminLogEvent = new TL_channelAdminLogEvent();
        localTL_channelAdminLogEvent.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
      this.user_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.action = TLRPC.ChannelAdminLogEventAction.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.id);
      paramAbstractSerializedData.writeInt32(this.date);
      paramAbstractSerializedData.writeInt32(this.user_id);
      this.action.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_channelAdminLogEventActionChangeAbout
    extends TLRPC.ChannelAdminLogEventAction
  {
    public static int constructor = NUM;
    public String new_value;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.prev_value = paramAbstractSerializedData.readString(paramBoolean);
      this.new_value = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.prev_value);
      paramAbstractSerializedData.writeString(this.new_value);
    }
  }
  
  public static class TL_channelAdminLogEventActionChangePhoto
    extends TLRPC.ChannelAdminLogEventAction
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.prev_photo = TLRPC.ChatPhoto.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.new_photo = TLRPC.ChatPhoto.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.prev_photo.serializeToStream(paramAbstractSerializedData);
      this.new_photo.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_channelAdminLogEventActionChangeStickerSet
    extends TLRPC.ChannelAdminLogEventAction
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.prev_stickerset = TLRPC.InputStickerSet.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.new_stickerset = TLRPC.InputStickerSet.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.prev_stickerset.serializeToStream(paramAbstractSerializedData);
      this.new_stickerset.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_channelAdminLogEventActionChangeTitle
    extends TLRPC.ChannelAdminLogEventAction
  {
    public static int constructor = -421545947;
    public String new_value;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.prev_value = paramAbstractSerializedData.readString(paramBoolean);
      this.new_value = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.prev_value);
      paramAbstractSerializedData.writeString(this.new_value);
    }
  }
  
  public static class TL_channelAdminLogEventActionChangeUsername
    extends TLRPC.ChannelAdminLogEventAction
  {
    public static int constructor = NUM;
    public String new_value;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.prev_value = paramAbstractSerializedData.readString(paramBoolean);
      this.new_value = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.prev_value);
      paramAbstractSerializedData.writeString(this.new_value);
    }
  }
  
  public static class TL_channelAdminLogEventActionDeleteMessage
    extends TLRPC.ChannelAdminLogEventAction
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.message = TLRPC.Message.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.message.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_channelAdminLogEventActionEditMessage
    extends TLRPC.ChannelAdminLogEventAction
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.prev_message = TLRPC.Message.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.new_message = TLRPC.Message.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.prev_message.serializeToStream(paramAbstractSerializedData);
      this.new_message.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_channelAdminLogEventActionParticipantInvite
    extends TLRPC.ChannelAdminLogEventAction
  {
    public static int constructor = -484690728;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.participant = TLRPC.ChannelParticipant.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.participant.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_channelAdminLogEventActionParticipantJoin
    extends TLRPC.ChannelAdminLogEventAction
  {
    public static int constructor = 405815507;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_channelAdminLogEventActionParticipantLeave
    extends TLRPC.ChannelAdminLogEventAction
  {
    public static int constructor = -124291086;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_channelAdminLogEventActionParticipantToggleAdmin
    extends TLRPC.ChannelAdminLogEventAction
  {
    public static int constructor = -714643696;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.prev_participant = TLRPC.ChannelParticipant.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.new_participant = TLRPC.ChannelParticipant.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.prev_participant.serializeToStream(paramAbstractSerializedData);
      this.new_participant.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_channelAdminLogEventActionParticipantToggleBan
    extends TLRPC.ChannelAdminLogEventAction
  {
    public static int constructor = -422036098;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.prev_participant = TLRPC.ChannelParticipant.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.new_participant = TLRPC.ChannelParticipant.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.prev_participant.serializeToStream(paramAbstractSerializedData);
      this.new_participant.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_channelAdminLogEventActionToggleInvites
    extends TLRPC.ChannelAdminLogEventAction
  {
    public static int constructor = 460916654;
    public boolean new_value;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.new_value = paramAbstractSerializedData.readBool(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeBool(this.new_value);
    }
  }
  
  public static class TL_channelAdminLogEventActionTogglePreHistoryHidden
    extends TLRPC.ChannelAdminLogEventAction
  {
    public static int constructor = NUM;
    public boolean new_value;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.new_value = paramAbstractSerializedData.readBool(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeBool(this.new_value);
    }
  }
  
  public static class TL_channelAdminLogEventActionToggleSignatures
    extends TLRPC.ChannelAdminLogEventAction
  {
    public static int constructor = 648939889;
    public boolean new_value;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.new_value = paramAbstractSerializedData.readBool(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeBool(this.new_value);
    }
  }
  
  public static class TL_channelAdminLogEventActionUpdatePinned
    extends TLRPC.ChannelAdminLogEventAction
  {
    public static int constructor = -370660328;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.message = TLRPC.Message.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.message.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_channelAdminLogEventsFilter
    extends TLObject
  {
    public static int constructor = -368018716;
    public boolean ban;
    public boolean delete;
    public boolean demote;
    public boolean edit;
    public int flags;
    public boolean info;
    public boolean invite;
    public boolean join;
    public boolean kick;
    public boolean leave;
    public boolean pinned;
    public boolean promote;
    public boolean settings;
    public boolean unban;
    public boolean unkick;
    
    public static TL_channelAdminLogEventsFilter TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_channelAdminLogEventsFilter", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_channelAdminLogEventsFilter localTL_channelAdminLogEventsFilter;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_channelAdminLogEventsFilter)
      {
        return paramAbstractSerializedData;
        localTL_channelAdminLogEventsFilter = new TL_channelAdminLogEventsFilter();
        localTL_channelAdminLogEventsFilter.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      boolean bool = true;
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0)
      {
        paramBoolean = true;
        this.join = paramBoolean;
        if ((this.flags & 0x2) == 0) {
          break label259;
        }
        paramBoolean = true;
        label38:
        this.leave = paramBoolean;
        if ((this.flags & 0x4) == 0) {
          break label264;
        }
        paramBoolean = true;
        label54:
        this.invite = paramBoolean;
        if ((this.flags & 0x8) == 0) {
          break label269;
        }
        paramBoolean = true;
        label71:
        this.ban = paramBoolean;
        if ((this.flags & 0x10) == 0) {
          break label274;
        }
        paramBoolean = true;
        label88:
        this.unban = paramBoolean;
        if ((this.flags & 0x20) == 0) {
          break label279;
        }
        paramBoolean = true;
        label105:
        this.kick = paramBoolean;
        if ((this.flags & 0x40) == 0) {
          break label284;
        }
        paramBoolean = true;
        label122:
        this.unkick = paramBoolean;
        if ((this.flags & 0x80) == 0) {
          break label289;
        }
        paramBoolean = true;
        label140:
        this.promote = paramBoolean;
        if ((this.flags & 0x100) == 0) {
          break label294;
        }
        paramBoolean = true;
        label158:
        this.demote = paramBoolean;
        if ((this.flags & 0x200) == 0) {
          break label299;
        }
        paramBoolean = true;
        label176:
        this.info = paramBoolean;
        if ((this.flags & 0x400) == 0) {
          break label304;
        }
        paramBoolean = true;
        label194:
        this.settings = paramBoolean;
        if ((this.flags & 0x800) == 0) {
          break label309;
        }
        paramBoolean = true;
        label212:
        this.pinned = paramBoolean;
        if ((this.flags & 0x1000) == 0) {
          break label314;
        }
        paramBoolean = true;
        label230:
        this.edit = paramBoolean;
        if ((this.flags & 0x2000) == 0) {
          break label319;
        }
      }
      label259:
      label264:
      label269:
      label274:
      label279:
      label284:
      label289:
      label294:
      label299:
      label304:
      label309:
      label314:
      label319:
      for (paramBoolean = bool;; paramBoolean = false)
      {
        this.delete = paramBoolean;
        return;
        paramBoolean = false;
        break;
        paramBoolean = false;
        break label38;
        paramBoolean = false;
        break label54;
        paramBoolean = false;
        break label71;
        paramBoolean = false;
        break label88;
        paramBoolean = false;
        break label105;
        paramBoolean = false;
        break label122;
        paramBoolean = false;
        break label140;
        paramBoolean = false;
        break label158;
        paramBoolean = false;
        break label176;
        paramBoolean = false;
        break label194;
        paramBoolean = false;
        break label212;
        paramBoolean = false;
        break label230;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.join)
      {
        i = this.flags | 0x1;
        this.flags = i;
        if (!this.leave) {
          break label311;
        }
        i = this.flags | 0x2;
        label40:
        this.flags = i;
        if (!this.invite) {
          break label322;
        }
        i = this.flags | 0x4;
        label59:
        this.flags = i;
        if (!this.ban) {
          break label333;
        }
        i = this.flags | 0x8;
        label79:
        this.flags = i;
        if (!this.unban) {
          break label344;
        }
        i = this.flags | 0x10;
        label99:
        this.flags = i;
        if (!this.kick) {
          break label355;
        }
        i = this.flags | 0x20;
        label119:
        this.flags = i;
        if (!this.unkick) {
          break label366;
        }
        i = this.flags | 0x40;
        label139:
        this.flags = i;
        if (!this.promote) {
          break label377;
        }
        i = this.flags | 0x80;
        label160:
        this.flags = i;
        if (!this.demote) {
          break label389;
        }
        i = this.flags | 0x100;
        label181:
        this.flags = i;
        if (!this.info) {
          break label401;
        }
        i = this.flags | 0x200;
        label202:
        this.flags = i;
        if (!this.settings) {
          break label413;
        }
        i = this.flags | 0x400;
        label223:
        this.flags = i;
        if (!this.pinned) {
          break label425;
        }
        i = this.flags | 0x800;
        label244:
        this.flags = i;
        if (!this.edit) {
          break label437;
        }
        i = this.flags | 0x1000;
        label265:
        this.flags = i;
        if (!this.delete) {
          break label449;
        }
      }
      label311:
      label322:
      label333:
      label344:
      label355:
      label366:
      label377:
      label389:
      label401:
      label413:
      label425:
      label437:
      label449:
      for (int i = this.flags | 0x2000;; i = this.flags & 0xDFFF)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        return;
        i = this.flags & 0xFFFFFFFE;
        break;
        i = this.flags & 0xFFFFFFFD;
        break label40;
        i = this.flags & 0xFFFFFFFB;
        break label59;
        i = this.flags & 0xFFFFFFF7;
        break label79;
        i = this.flags & 0xFFFFFFEF;
        break label99;
        i = this.flags & 0xFFFFFFDF;
        break label119;
        i = this.flags & 0xFFFFFFBF;
        break label139;
        i = this.flags & 0xFF7F;
        break label160;
        i = this.flags & 0xFEFF;
        break label181;
        i = this.flags & 0xFDFF;
        break label202;
        i = this.flags & 0xFBFF;
        break label223;
        i = this.flags & 0xF7FF;
        break label244;
        i = this.flags & 0xEFFF;
        break label265;
      }
    }
  }
  
  public static class TL_channelAdminRights
    extends TLObject
  {
    public static int constructor = NUM;
    public boolean add_admins;
    public boolean ban_users;
    public boolean change_info;
    public boolean delete_messages;
    public boolean edit_messages;
    public int flags;
    public boolean invite_link;
    public boolean invite_users;
    public boolean manage_call;
    public boolean pin_messages;
    public boolean post_messages;
    
    public static TL_channelAdminRights TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_channelAdminRights", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_channelAdminRights localTL_channelAdminRights;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_channelAdminRights)
      {
        return paramAbstractSerializedData;
        localTL_channelAdminRights = new TL_channelAdminRights();
        localTL_channelAdminRights.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      boolean bool = true;
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0)
      {
        paramBoolean = true;
        this.change_info = paramBoolean;
        if ((this.flags & 0x2) == 0) {
          break label187;
        }
        paramBoolean = true;
        label38:
        this.post_messages = paramBoolean;
        if ((this.flags & 0x4) == 0) {
          break label192;
        }
        paramBoolean = true;
        label54:
        this.edit_messages = paramBoolean;
        if ((this.flags & 0x8) == 0) {
          break label197;
        }
        paramBoolean = true;
        label71:
        this.delete_messages = paramBoolean;
        if ((this.flags & 0x10) == 0) {
          break label202;
        }
        paramBoolean = true;
        label88:
        this.ban_users = paramBoolean;
        if ((this.flags & 0x20) == 0) {
          break label207;
        }
        paramBoolean = true;
        label105:
        this.invite_users = paramBoolean;
        if ((this.flags & 0x40) == 0) {
          break label212;
        }
        paramBoolean = true;
        label122:
        this.invite_link = paramBoolean;
        if ((this.flags & 0x80) == 0) {
          break label217;
        }
        paramBoolean = true;
        label140:
        this.pin_messages = paramBoolean;
        if ((this.flags & 0x200) == 0) {
          break label222;
        }
        paramBoolean = true;
        label158:
        this.add_admins = paramBoolean;
        if ((this.flags & 0x400) == 0) {
          break label227;
        }
      }
      label187:
      label192:
      label197:
      label202:
      label207:
      label212:
      label217:
      label222:
      label227:
      for (paramBoolean = bool;; paramBoolean = false)
      {
        this.manage_call = paramBoolean;
        return;
        paramBoolean = false;
        break;
        paramBoolean = false;
        break label38;
        paramBoolean = false;
        break label54;
        paramBoolean = false;
        break label71;
        paramBoolean = false;
        break label88;
        paramBoolean = false;
        break label105;
        paramBoolean = false;
        break label122;
        paramBoolean = false;
        break label140;
        paramBoolean = false;
        break label158;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.change_info)
      {
        i = this.flags | 0x1;
        this.flags = i;
        if (!this.post_messages) {
          break label227;
        }
        i = this.flags | 0x2;
        label40:
        this.flags = i;
        if (!this.edit_messages) {
          break label238;
        }
        i = this.flags | 0x4;
        label59:
        this.flags = i;
        if (!this.delete_messages) {
          break label249;
        }
        i = this.flags | 0x8;
        label79:
        this.flags = i;
        if (!this.ban_users) {
          break label260;
        }
        i = this.flags | 0x10;
        label99:
        this.flags = i;
        if (!this.invite_users) {
          break label271;
        }
        i = this.flags | 0x20;
        label119:
        this.flags = i;
        if (!this.invite_link) {
          break label282;
        }
        i = this.flags | 0x40;
        label139:
        this.flags = i;
        if (!this.pin_messages) {
          break label293;
        }
        i = this.flags | 0x80;
        label160:
        this.flags = i;
        if (!this.add_admins) {
          break label305;
        }
        i = this.flags | 0x200;
        label181:
        this.flags = i;
        if (!this.manage_call) {
          break label317;
        }
      }
      label227:
      label238:
      label249:
      label260:
      label271:
      label282:
      label293:
      label305:
      label317:
      for (int i = this.flags | 0x400;; i = this.flags & 0xFBFF)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        return;
        i = this.flags & 0xFFFFFFFE;
        break;
        i = this.flags & 0xFFFFFFFD;
        break label40;
        i = this.flags & 0xFFFFFFFB;
        break label59;
        i = this.flags & 0xFFFFFFF7;
        break label79;
        i = this.flags & 0xFFFFFFEF;
        break label99;
        i = this.flags & 0xFFFFFFDF;
        break label119;
        i = this.flags & 0xFFFFFFBF;
        break label139;
        i = this.flags & 0xFF7F;
        break label160;
        i = this.flags & 0xFDFF;
        break label181;
      }
    }
  }
  
  public static class TL_channelBannedRights
    extends TLObject
  {
    public static int constructor = NUM;
    public boolean embed_links;
    public int flags;
    public boolean send_games;
    public boolean send_gifs;
    public boolean send_inline;
    public boolean send_media;
    public boolean send_messages;
    public boolean send_stickers;
    public int until_date;
    public boolean view_messages;
    
    public static TL_channelBannedRights TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_channelBannedRights", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_channelBannedRights localTL_channelBannedRights;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_channelBannedRights)
      {
        return paramAbstractSerializedData;
        localTL_channelBannedRights = new TL_channelBannedRights();
        localTL_channelBannedRights.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      boolean bool1 = true;
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0)
      {
        bool2 = true;
        this.view_messages = bool2;
        if ((this.flags & 0x2) == 0) {
          break label177;
        }
        bool2 = true;
        label41:
        this.send_messages = bool2;
        if ((this.flags & 0x4) == 0) {
          break label183;
        }
        bool2 = true;
        label59:
        this.send_media = bool2;
        if ((this.flags & 0x8) == 0) {
          break label189;
        }
        bool2 = true;
        label78:
        this.send_stickers = bool2;
        if ((this.flags & 0x10) == 0) {
          break label195;
        }
        bool2 = true;
        label97:
        this.send_gifs = bool2;
        if ((this.flags & 0x20) == 0) {
          break label201;
        }
        bool2 = true;
        label116:
        this.send_games = bool2;
        if ((this.flags & 0x40) == 0) {
          break label207;
        }
        bool2 = true;
        label135:
        this.send_inline = bool2;
        if ((this.flags & 0x80) == 0) {
          break label213;
        }
      }
      label177:
      label183:
      label189:
      label195:
      label201:
      label207:
      label213:
      for (boolean bool2 = bool1;; bool2 = false)
      {
        this.embed_links = bool2;
        this.until_date = paramAbstractSerializedData.readInt32(paramBoolean);
        return;
        bool2 = false;
        break;
        bool2 = false;
        break label41;
        bool2 = false;
        break label59;
        bool2 = false;
        break label78;
        bool2 = false;
        break label97;
        bool2 = false;
        break label116;
        bool2 = false;
        break label135;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.view_messages)
      {
        i = this.flags | 0x1;
        this.flags = i;
        if (!this.send_messages) {
          break label193;
        }
        i = this.flags | 0x2;
        label40:
        this.flags = i;
        if (!this.send_media) {
          break label204;
        }
        i = this.flags | 0x4;
        label59:
        this.flags = i;
        if (!this.send_stickers) {
          break label215;
        }
        i = this.flags | 0x8;
        label79:
        this.flags = i;
        if (!this.send_gifs) {
          break label226;
        }
        i = this.flags | 0x10;
        label99:
        this.flags = i;
        if (!this.send_games) {
          break label237;
        }
        i = this.flags | 0x20;
        label119:
        this.flags = i;
        if (!this.send_inline) {
          break label248;
        }
        i = this.flags | 0x40;
        label139:
        this.flags = i;
        if (!this.embed_links) {
          break label259;
        }
      }
      label193:
      label204:
      label215:
      label226:
      label237:
      label248:
      label259:
      for (int i = this.flags | 0x80;; i = this.flags & 0xFF7F)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(this.until_date);
        return;
        i = this.flags & 0xFFFFFFFE;
        break;
        i = this.flags & 0xFFFFFFFD;
        break label40;
        i = this.flags & 0xFFFFFFFB;
        break label59;
        i = this.flags & 0xFFFFFFF7;
        break label79;
        i = this.flags & 0xFFFFFFEF;
        break label99;
        i = this.flags & 0xFFFFFFDF;
        break label119;
        i = this.flags & 0xFFFFFFBF;
        break label139;
      }
    }
  }
  
  public static class TL_channelForbidden
    extends TLRPC.Chat
  {
    public static int constructor = 681420594;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      boolean bool1 = true;
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x20) != 0)
      {
        bool2 = true;
        this.broadcast = bool2;
        if ((this.flags & 0x100) == 0) {
          break label103;
        }
      }
      label103:
      for (boolean bool2 = bool1;; bool2 = false)
      {
        this.megagroup = bool2;
        this.id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
        this.title = paramAbstractSerializedData.readString(paramBoolean);
        if ((this.flags & 0x10000) != 0) {
          this.until_date = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        return;
        bool2 = false;
        break;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.broadcast)
      {
        i = this.flags | 0x20;
        this.flags = i;
        if (!this.megagroup) {
          break label110;
        }
      }
      label110:
      for (int i = this.flags | 0x100;; i = this.flags & 0xFEFF)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(this.id);
        paramAbstractSerializedData.writeInt64(this.access_hash);
        paramAbstractSerializedData.writeString(this.title);
        if ((this.flags & 0x10000) != 0) {
          paramAbstractSerializedData.writeInt32(this.until_date);
        }
        return;
        i = this.flags & 0xFFFFFFDF;
        break;
      }
    }
  }
  
  public static class TL_channelForbidden_layer52
    extends TLRPC.TL_channelForbidden
  {
    public static int constructor = 763724588;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
      this.title = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.id);
      paramAbstractSerializedData.writeInt64(this.access_hash);
      paramAbstractSerializedData.writeString(this.title);
    }
  }
  
  public static class TL_channelForbidden_layer67
    extends TLRPC.TL_channelForbidden
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      boolean bool1 = true;
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x20) != 0)
      {
        bool2 = true;
        this.broadcast = bool2;
        if ((this.flags & 0x100) == 0) {
          break label84;
        }
      }
      label84:
      for (boolean bool2 = bool1;; bool2 = false)
      {
        this.megagroup = bool2;
        this.id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
        this.title = paramAbstractSerializedData.readString(paramBoolean);
        return;
        bool2 = false;
        break;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.broadcast)
      {
        i = this.flags | 0x20;
        this.flags = i;
        if (!this.megagroup) {
          break label92;
        }
      }
      label92:
      for (int i = this.flags | 0x100;; i = this.flags & 0xFEFF)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(this.id);
        paramAbstractSerializedData.writeInt64(this.access_hash);
        paramAbstractSerializedData.writeString(this.title);
        return;
        i = this.flags & 0xFFFFFFDF;
        break;
      }
    }
  }
  
  public static class TL_channelFull
    extends TLRPC.ChatFull
  {
    public static int constructor = -877254512;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x8) != 0)
      {
        bool = true;
        this.can_view_participants = bool;
        if ((this.flags & 0x40) == 0) {
          break label286;
        }
        bool = true;
        label38:
        this.can_set_username = bool;
        if ((this.flags & 0x80) == 0) {
          break label291;
        }
        bool = true;
        label56:
        this.can_set_stickers = bool;
        if ((this.flags & 0x400) == 0) {
          break label296;
        }
      }
      label286:
      label291:
      label296:
      for (boolean bool = true;; bool = false)
      {
        this.hidden_prehistory = bool;
        this.id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.about = paramAbstractSerializedData.readString(paramBoolean);
        if ((this.flags & 0x1) != 0) {
          this.participants_count = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x2) != 0) {
          this.admins_count = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x4) != 0) {
          this.kicked_count = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x4) != 0) {
          this.banned_count = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        this.read_inbox_max_id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.read_outbox_max_id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.unread_count = paramAbstractSerializedData.readInt32(paramBoolean);
        this.chat_photo = TLRPC.Photo.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        this.notify_settings = TLRPC.PeerNotifySettings.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        this.exported_invite = TLRPC.ExportedChatInvite.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i == 481674261) {
          break label301;
        }
        if (!paramBoolean) {
          break label335;
        }
        throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        bool = false;
        break;
        bool = false;
        break label38;
        bool = false;
        break label56;
      }
      label301:
      int j = paramAbstractSerializedData.readInt32(paramBoolean);
      int i = 0;
      TLRPC.BotInfo localBotInfo;
      if (i < j)
      {
        localBotInfo = TLRPC.BotInfo.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localBotInfo != null) {}
      }
      for (;;)
      {
        label335:
        return;
        this.bot_info.add(localBotInfo);
        i++;
        break;
        if ((this.flags & 0x10) != 0) {
          this.migrated_from_chat_id = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x10) != 0) {
          this.migrated_from_max_id = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x20) != 0) {
          this.pinned_msg_id = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x100) != 0) {
          this.stickerset = TLRPC.StickerSet.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        }
        if ((this.flags & 0x200) != 0) {
          this.available_min_id = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x800) != 0) {
          this.call_msg_id = paramAbstractSerializedData.readInt32(paramBoolean);
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.can_view_participants)
      {
        i = this.flags | 0x8;
        this.flags = i;
        if (!this.can_set_username) {
          break label287;
        }
        i = this.flags | 0x40;
        label42:
        this.flags = i;
        if (!this.can_set_stickers) {
          break label298;
        }
        i = this.flags | 0x80;
        label63:
        this.flags = i;
        if (!this.hidden_prehistory) {
          break label310;
        }
      }
      label287:
      label298:
      label310:
      for (int i = this.flags | 0x400;; i = this.flags & 0xFBFF)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(this.id);
        paramAbstractSerializedData.writeString(this.about);
        if ((this.flags & 0x1) != 0) {
          paramAbstractSerializedData.writeInt32(this.participants_count);
        }
        if ((this.flags & 0x2) != 0) {
          paramAbstractSerializedData.writeInt32(this.admins_count);
        }
        if ((this.flags & 0x4) != 0) {
          paramAbstractSerializedData.writeInt32(this.kicked_count);
        }
        if ((this.flags & 0x4) != 0) {
          paramAbstractSerializedData.writeInt32(this.banned_count);
        }
        paramAbstractSerializedData.writeInt32(this.read_inbox_max_id);
        paramAbstractSerializedData.writeInt32(this.read_outbox_max_id);
        paramAbstractSerializedData.writeInt32(this.unread_count);
        this.chat_photo.serializeToStream(paramAbstractSerializedData);
        this.notify_settings.serializeToStream(paramAbstractSerializedData);
        this.exported_invite.serializeToStream(paramAbstractSerializedData);
        paramAbstractSerializedData.writeInt32(481674261);
        int j = this.bot_info.size();
        paramAbstractSerializedData.writeInt32(j);
        for (i = 0; i < j; i++) {
          ((TLRPC.BotInfo)this.bot_info.get(i)).serializeToStream(paramAbstractSerializedData);
        }
        i = this.flags & 0xFFFFFFF7;
        break;
        i = this.flags & 0xFFFFFFBF;
        break label42;
        i = this.flags & 0xFF7F;
        break label63;
      }
      if ((this.flags & 0x10) != 0) {
        paramAbstractSerializedData.writeInt32(this.migrated_from_chat_id);
      }
      if ((this.flags & 0x10) != 0) {
        paramAbstractSerializedData.writeInt32(this.migrated_from_max_id);
      }
      if ((this.flags & 0x20) != 0) {
        paramAbstractSerializedData.writeInt32(this.pinned_msg_id);
      }
      if ((this.flags & 0x100) != 0) {
        this.stickerset.serializeToStream(paramAbstractSerializedData);
      }
      if ((this.flags & 0x200) != 0) {
        paramAbstractSerializedData.writeInt32(this.available_min_id);
      }
      if ((this.flags & 0x800) != 0) {
        paramAbstractSerializedData.writeInt32(this.call_msg_id);
      }
    }
  }
  
  public static class TL_channelFull_layer48
    extends TLRPC.TL_channelFull
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x8) != 0) {}
      for (boolean bool = true;; bool = false)
      {
        this.can_view_participants = bool;
        this.id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.about = paramAbstractSerializedData.readString(paramBoolean);
        if ((this.flags & 0x1) != 0) {
          this.participants_count = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x2) != 0) {
          this.admins_count = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x4) != 0) {
          this.kicked_count = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        this.read_inbox_max_id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.unread_count = paramAbstractSerializedData.readInt32(paramBoolean);
        this.unread_important_count = paramAbstractSerializedData.readInt32(paramBoolean);
        this.chat_photo = TLRPC.Photo.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        this.notify_settings = TLRPC.PeerNotifySettings.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        this.exported_invite = TLRPC.ExportedChatInvite.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i == 481674261) {
          break;
        }
        if (!paramBoolean) {
          break label249;
        }
        throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
      }
      int j = paramAbstractSerializedData.readInt32(paramBoolean);
      int i = 0;
      TLRPC.BotInfo localBotInfo;
      if (i < j)
      {
        localBotInfo = TLRPC.BotInfo.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localBotInfo != null) {}
      }
      for (;;)
      {
        label249:
        return;
        this.bot_info.add(localBotInfo);
        i++;
        break;
        if ((this.flags & 0x10) != 0) {
          this.migrated_from_chat_id = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x10) != 0) {
          this.migrated_from_max_id = paramAbstractSerializedData.readInt32(paramBoolean);
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.can_view_participants) {}
      for (int i = this.flags | 0x8;; i = this.flags & 0xFFFFFFF7)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(this.id);
        paramAbstractSerializedData.writeString(this.about);
        if ((this.flags & 0x1) != 0) {
          paramAbstractSerializedData.writeInt32(this.participants_count);
        }
        if ((this.flags & 0x2) != 0) {
          paramAbstractSerializedData.writeInt32(this.admins_count);
        }
        if ((this.flags & 0x4) != 0) {
          paramAbstractSerializedData.writeInt32(this.kicked_count);
        }
        paramAbstractSerializedData.writeInt32(this.read_inbox_max_id);
        paramAbstractSerializedData.writeInt32(this.unread_count);
        paramAbstractSerializedData.writeInt32(this.unread_important_count);
        this.chat_photo.serializeToStream(paramAbstractSerializedData);
        this.notify_settings.serializeToStream(paramAbstractSerializedData);
        this.exported_invite.serializeToStream(paramAbstractSerializedData);
        paramAbstractSerializedData.writeInt32(481674261);
        int j = this.bot_info.size();
        paramAbstractSerializedData.writeInt32(j);
        for (i = 0; i < j; i++) {
          ((TLRPC.BotInfo)this.bot_info.get(i)).serializeToStream(paramAbstractSerializedData);
        }
      }
      if ((this.flags & 0x10) != 0) {
        paramAbstractSerializedData.writeInt32(this.migrated_from_chat_id);
      }
      if ((this.flags & 0x10) != 0) {
        paramAbstractSerializedData.writeInt32(this.migrated_from_max_id);
      }
    }
  }
  
  public static class TL_channelFull_layer52
    extends TLRPC.TL_channelFull
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x8) != 0)
      {
        bool = true;
        this.can_view_participants = bool;
        if ((this.flags & 0x40) == 0) {
          break label232;
        }
      }
      label232:
      for (boolean bool = true;; bool = false)
      {
        this.can_set_username = bool;
        this.id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.about = paramAbstractSerializedData.readString(paramBoolean);
        if ((this.flags & 0x1) != 0) {
          this.participants_count = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x2) != 0) {
          this.admins_count = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x4) != 0) {
          this.kicked_count = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        this.read_inbox_max_id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.unread_count = paramAbstractSerializedData.readInt32(paramBoolean);
        this.unread_important_count = paramAbstractSerializedData.readInt32(paramBoolean);
        this.chat_photo = TLRPC.Photo.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        this.notify_settings = TLRPC.PeerNotifySettings.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        this.exported_invite = TLRPC.ExportedChatInvite.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i == 481674261) {
          break label237;
        }
        if (!paramBoolean) {
          break label271;
        }
        throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        bool = false;
        break;
      }
      label237:
      int j = paramAbstractSerializedData.readInt32(paramBoolean);
      int i = 0;
      TLRPC.BotInfo localBotInfo;
      if (i < j)
      {
        localBotInfo = TLRPC.BotInfo.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localBotInfo != null) {}
      }
      for (;;)
      {
        label271:
        return;
        this.bot_info.add(localBotInfo);
        i++;
        break;
        if ((this.flags & 0x10) != 0) {
          this.migrated_from_chat_id = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x10) != 0) {
          this.migrated_from_max_id = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x20) != 0) {
          this.pinned_msg_id = paramAbstractSerializedData.readInt32(paramBoolean);
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.can_view_participants)
      {
        i = this.flags | 0x8;
        this.flags = i;
        if (!this.can_set_username) {
          break label228;
        }
      }
      label228:
      for (int i = this.flags | 0x40;; i = this.flags & 0xFFFFFFBF)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(this.id);
        paramAbstractSerializedData.writeString(this.about);
        if ((this.flags & 0x1) != 0) {
          paramAbstractSerializedData.writeInt32(this.participants_count);
        }
        if ((this.flags & 0x2) != 0) {
          paramAbstractSerializedData.writeInt32(this.admins_count);
        }
        if ((this.flags & 0x4) != 0) {
          paramAbstractSerializedData.writeInt32(this.kicked_count);
        }
        paramAbstractSerializedData.writeInt32(this.read_inbox_max_id);
        paramAbstractSerializedData.writeInt32(this.unread_count);
        paramAbstractSerializedData.writeInt32(this.unread_important_count);
        this.chat_photo.serializeToStream(paramAbstractSerializedData);
        this.notify_settings.serializeToStream(paramAbstractSerializedData);
        this.exported_invite.serializeToStream(paramAbstractSerializedData);
        paramAbstractSerializedData.writeInt32(481674261);
        int j = this.bot_info.size();
        paramAbstractSerializedData.writeInt32(j);
        for (i = 0; i < j; i++) {
          ((TLRPC.BotInfo)this.bot_info.get(i)).serializeToStream(paramAbstractSerializedData);
        }
        i = this.flags & 0xFFFFFFF7;
        break;
      }
      if ((this.flags & 0x10) != 0) {
        paramAbstractSerializedData.writeInt32(this.migrated_from_chat_id);
      }
      if ((this.flags & 0x10) != 0) {
        paramAbstractSerializedData.writeInt32(this.migrated_from_max_id);
      }
      if ((this.flags & 0x20) != 0) {
        paramAbstractSerializedData.writeInt32(this.pinned_msg_id);
      }
    }
  }
  
  public static class TL_channelFull_layer67
    extends TLRPC.TL_channelFull
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x8) != 0)
      {
        bool = true;
        this.can_view_participants = bool;
        if ((this.flags & 0x40) == 0) {
          break label232;
        }
      }
      label232:
      for (boolean bool = true;; bool = false)
      {
        this.can_set_username = bool;
        this.id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.about = paramAbstractSerializedData.readString(paramBoolean);
        if ((this.flags & 0x1) != 0) {
          this.participants_count = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x2) != 0) {
          this.admins_count = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x4) != 0) {
          this.kicked_count = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        this.read_inbox_max_id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.read_outbox_max_id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.unread_count = paramAbstractSerializedData.readInt32(paramBoolean);
        this.chat_photo = TLRPC.Photo.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        this.notify_settings = TLRPC.PeerNotifySettings.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        this.exported_invite = TLRPC.ExportedChatInvite.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i == 481674261) {
          break label237;
        }
        if (!paramBoolean) {
          break label271;
        }
        throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        bool = false;
        break;
      }
      label237:
      int j = paramAbstractSerializedData.readInt32(paramBoolean);
      int i = 0;
      TLRPC.BotInfo localBotInfo;
      if (i < j)
      {
        localBotInfo = TLRPC.BotInfo.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localBotInfo != null) {}
      }
      for (;;)
      {
        label271:
        return;
        this.bot_info.add(localBotInfo);
        i++;
        break;
        if ((this.flags & 0x10) != 0) {
          this.migrated_from_chat_id = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x10) != 0) {
          this.migrated_from_max_id = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x20) != 0) {
          this.pinned_msg_id = paramAbstractSerializedData.readInt32(paramBoolean);
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.can_view_participants)
      {
        i = this.flags | 0x8;
        this.flags = i;
        if (!this.can_set_username) {
          break label228;
        }
      }
      label228:
      for (int i = this.flags | 0x40;; i = this.flags & 0xFFFFFFBF)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(this.id);
        paramAbstractSerializedData.writeString(this.about);
        if ((this.flags & 0x1) != 0) {
          paramAbstractSerializedData.writeInt32(this.participants_count);
        }
        if ((this.flags & 0x2) != 0) {
          paramAbstractSerializedData.writeInt32(this.admins_count);
        }
        if ((this.flags & 0x4) != 0) {
          paramAbstractSerializedData.writeInt32(this.kicked_count);
        }
        paramAbstractSerializedData.writeInt32(this.read_inbox_max_id);
        paramAbstractSerializedData.writeInt32(this.read_outbox_max_id);
        paramAbstractSerializedData.writeInt32(this.unread_count);
        this.chat_photo.serializeToStream(paramAbstractSerializedData);
        this.notify_settings.serializeToStream(paramAbstractSerializedData);
        this.exported_invite.serializeToStream(paramAbstractSerializedData);
        paramAbstractSerializedData.writeInt32(481674261);
        int j = this.bot_info.size();
        paramAbstractSerializedData.writeInt32(j);
        for (i = 0; i < j; i++) {
          ((TLRPC.BotInfo)this.bot_info.get(i)).serializeToStream(paramAbstractSerializedData);
        }
        i = this.flags & 0xFFFFFFF7;
        break;
      }
      if ((this.flags & 0x10) != 0) {
        paramAbstractSerializedData.writeInt32(this.migrated_from_chat_id);
      }
      if ((this.flags & 0x10) != 0) {
        paramAbstractSerializedData.writeInt32(this.migrated_from_max_id);
      }
      if ((this.flags & 0x20) != 0) {
        paramAbstractSerializedData.writeInt32(this.pinned_msg_id);
      }
    }
  }
  
  public static class TL_channelFull_layer70
    extends TLRPC.TL_channelFull
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x8) != 0)
      {
        bool = true;
        this.can_view_participants = bool;
        if ((this.flags & 0x40) == 0) {
          break label250;
        }
      }
      label250:
      for (boolean bool = true;; bool = false)
      {
        this.can_set_username = bool;
        this.id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.about = paramAbstractSerializedData.readString(paramBoolean);
        if ((this.flags & 0x1) != 0) {
          this.participants_count = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x2) != 0) {
          this.admins_count = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x4) != 0) {
          this.kicked_count = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x4) != 0) {
          this.banned_count = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        this.read_inbox_max_id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.read_outbox_max_id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.unread_count = paramAbstractSerializedData.readInt32(paramBoolean);
        this.chat_photo = TLRPC.Photo.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        this.notify_settings = TLRPC.PeerNotifySettings.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        this.exported_invite = TLRPC.ExportedChatInvite.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i == 481674261) {
          break label255;
        }
        if (!paramBoolean) {
          break label289;
        }
        throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        bool = false;
        break;
      }
      label255:
      int j = paramAbstractSerializedData.readInt32(paramBoolean);
      int i = 0;
      TLRPC.BotInfo localBotInfo;
      if (i < j)
      {
        localBotInfo = TLRPC.BotInfo.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localBotInfo != null) {}
      }
      for (;;)
      {
        label289:
        return;
        this.bot_info.add(localBotInfo);
        i++;
        break;
        if ((this.flags & 0x10) != 0) {
          this.migrated_from_chat_id = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x10) != 0) {
          this.migrated_from_max_id = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x20) != 0) {
          this.pinned_msg_id = paramAbstractSerializedData.readInt32(paramBoolean);
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.can_view_participants)
      {
        i = this.flags | 0x8;
        this.flags = i;
        if (!this.can_set_username) {
          break label245;
        }
      }
      label245:
      for (int i = this.flags | 0x40;; i = this.flags & 0xFFFFFFBF)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(this.id);
        paramAbstractSerializedData.writeString(this.about);
        if ((this.flags & 0x1) != 0) {
          paramAbstractSerializedData.writeInt32(this.participants_count);
        }
        if ((this.flags & 0x2) != 0) {
          paramAbstractSerializedData.writeInt32(this.admins_count);
        }
        if ((this.flags & 0x4) != 0) {
          paramAbstractSerializedData.writeInt32(this.kicked_count);
        }
        if ((this.flags & 0x4) != 0) {
          paramAbstractSerializedData.writeInt32(this.banned_count);
        }
        paramAbstractSerializedData.writeInt32(this.read_inbox_max_id);
        paramAbstractSerializedData.writeInt32(this.read_outbox_max_id);
        paramAbstractSerializedData.writeInt32(this.unread_count);
        this.chat_photo.serializeToStream(paramAbstractSerializedData);
        this.notify_settings.serializeToStream(paramAbstractSerializedData);
        this.exported_invite.serializeToStream(paramAbstractSerializedData);
        paramAbstractSerializedData.writeInt32(481674261);
        int j = this.bot_info.size();
        paramAbstractSerializedData.writeInt32(j);
        for (i = 0; i < j; i++) {
          ((TLRPC.BotInfo)this.bot_info.get(i)).serializeToStream(paramAbstractSerializedData);
        }
        i = this.flags & 0xFFFFFFF7;
        break;
      }
      if ((this.flags & 0x10) != 0) {
        paramAbstractSerializedData.writeInt32(this.migrated_from_chat_id);
      }
      if ((this.flags & 0x10) != 0) {
        paramAbstractSerializedData.writeInt32(this.migrated_from_max_id);
      }
      if ((this.flags & 0x20) != 0) {
        paramAbstractSerializedData.writeInt32(this.pinned_msg_id);
      }
    }
  }
  
  public static class TL_channelFull_layer71
    extends TLRPC.TL_channelFull
  {
    public static int constructor = 401891279;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x8) != 0)
      {
        bool = true;
        this.can_view_participants = bool;
        if ((this.flags & 0x40) == 0) {
          break label268;
        }
        bool = true;
        label38:
        this.can_set_username = bool;
        if ((this.flags & 0x80) == 0) {
          break label273;
        }
      }
      label268:
      label273:
      for (boolean bool = true;; bool = false)
      {
        this.can_set_stickers = bool;
        this.id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.about = paramAbstractSerializedData.readString(paramBoolean);
        if ((this.flags & 0x1) != 0) {
          this.participants_count = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x2) != 0) {
          this.admins_count = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x4) != 0) {
          this.kicked_count = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x4) != 0) {
          this.banned_count = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        this.read_inbox_max_id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.read_outbox_max_id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.unread_count = paramAbstractSerializedData.readInt32(paramBoolean);
        this.chat_photo = TLRPC.Photo.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        this.notify_settings = TLRPC.PeerNotifySettings.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        this.exported_invite = TLRPC.ExportedChatInvite.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i == 481674261) {
          break label278;
        }
        if (!paramBoolean) {
          break label312;
        }
        throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        bool = false;
        break;
        bool = false;
        break label38;
      }
      label278:
      int j = paramAbstractSerializedData.readInt32(paramBoolean);
      int i = 0;
      TLRPC.BotInfo localBotInfo;
      if (i < j)
      {
        localBotInfo = TLRPC.BotInfo.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localBotInfo != null) {}
      }
      for (;;)
      {
        label312:
        return;
        this.bot_info.add(localBotInfo);
        i++;
        break;
        if ((this.flags & 0x10) != 0) {
          this.migrated_from_chat_id = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x10) != 0) {
          this.migrated_from_max_id = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x20) != 0) {
          this.pinned_msg_id = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x100) != 0) {
          this.stickerset = TLRPC.StickerSet.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.can_view_participants)
      {
        i = this.flags | 0x8;
        this.flags = i;
        if (!this.can_set_username) {
          break label266;
        }
        i = this.flags | 0x40;
        label42:
        this.flags = i;
        if (!this.can_set_stickers) {
          break label277;
        }
      }
      label266:
      label277:
      for (int i = this.flags | 0x80;; i = this.flags & 0xFF7F)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(this.id);
        paramAbstractSerializedData.writeString(this.about);
        if ((this.flags & 0x1) != 0) {
          paramAbstractSerializedData.writeInt32(this.participants_count);
        }
        if ((this.flags & 0x2) != 0) {
          paramAbstractSerializedData.writeInt32(this.admins_count);
        }
        if ((this.flags & 0x4) != 0) {
          paramAbstractSerializedData.writeInt32(this.kicked_count);
        }
        if ((this.flags & 0x4) != 0) {
          paramAbstractSerializedData.writeInt32(this.banned_count);
        }
        paramAbstractSerializedData.writeInt32(this.read_inbox_max_id);
        paramAbstractSerializedData.writeInt32(this.read_outbox_max_id);
        paramAbstractSerializedData.writeInt32(this.unread_count);
        this.chat_photo.serializeToStream(paramAbstractSerializedData);
        this.notify_settings.serializeToStream(paramAbstractSerializedData);
        this.exported_invite.serializeToStream(paramAbstractSerializedData);
        paramAbstractSerializedData.writeInt32(481674261);
        int j = this.bot_info.size();
        paramAbstractSerializedData.writeInt32(j);
        for (i = 0; i < j; i++) {
          ((TLRPC.BotInfo)this.bot_info.get(i)).serializeToStream(paramAbstractSerializedData);
        }
        i = this.flags & 0xFFFFFFF7;
        break;
        i = this.flags & 0xFFFFFFBF;
        break label42;
      }
      if ((this.flags & 0x10) != 0) {
        paramAbstractSerializedData.writeInt32(this.migrated_from_chat_id);
      }
      if ((this.flags & 0x10) != 0) {
        paramAbstractSerializedData.writeInt32(this.migrated_from_max_id);
      }
      if ((this.flags & 0x20) != 0) {
        paramAbstractSerializedData.writeInt32(this.pinned_msg_id);
      }
      if ((this.flags & 0x100) != 0) {
        this.stickerset.serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_channelFull_layer72
    extends TLRPC.TL_channelFull
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x8) != 0)
      {
        bool = true;
        this.can_view_participants = bool;
        if ((this.flags & 0x40) == 0) {
          break label286;
        }
        bool = true;
        label38:
        this.can_set_username = bool;
        if ((this.flags & 0x80) == 0) {
          break label291;
        }
        bool = true;
        label56:
        this.can_set_stickers = bool;
        if ((this.flags & 0x400) == 0) {
          break label296;
        }
      }
      label286:
      label291:
      label296:
      for (boolean bool = true;; bool = false)
      {
        this.hidden_prehistory = bool;
        this.id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.about = paramAbstractSerializedData.readString(paramBoolean);
        if ((this.flags & 0x1) != 0) {
          this.participants_count = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x2) != 0) {
          this.admins_count = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x4) != 0) {
          this.kicked_count = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x4) != 0) {
          this.banned_count = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        this.read_inbox_max_id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.read_outbox_max_id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.unread_count = paramAbstractSerializedData.readInt32(paramBoolean);
        this.chat_photo = TLRPC.Photo.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        this.notify_settings = TLRPC.PeerNotifySettings.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        this.exported_invite = TLRPC.ExportedChatInvite.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i == 481674261) {
          break label301;
        }
        if (!paramBoolean) {
          break label335;
        }
        throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        bool = false;
        break;
        bool = false;
        break label38;
        bool = false;
        break label56;
      }
      label301:
      int j = paramAbstractSerializedData.readInt32(paramBoolean);
      int i = 0;
      TLRPC.BotInfo localBotInfo;
      if (i < j)
      {
        localBotInfo = TLRPC.BotInfo.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localBotInfo != null) {}
      }
      for (;;)
      {
        label335:
        return;
        this.bot_info.add(localBotInfo);
        i++;
        break;
        if ((this.flags & 0x10) != 0) {
          this.migrated_from_chat_id = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x10) != 0) {
          this.migrated_from_max_id = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x20) != 0) {
          this.pinned_msg_id = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x100) != 0) {
          this.stickerset = TLRPC.StickerSet.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        }
        if ((this.flags & 0x200) != 0) {
          this.available_min_id = paramAbstractSerializedData.readInt32(paramBoolean);
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.can_view_participants)
      {
        i = this.flags | 0x8;
        this.flags = i;
        if (!this.can_set_username) {
          break label287;
        }
        i = this.flags | 0x40;
        label42:
        this.flags = i;
        if (!this.can_set_stickers) {
          break label298;
        }
        i = this.flags | 0x80;
        label63:
        this.flags = i;
        if (!this.hidden_prehistory) {
          break label310;
        }
      }
      label287:
      label298:
      label310:
      for (int i = this.flags | 0x400;; i = this.flags & 0xFBFF)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(this.id);
        paramAbstractSerializedData.writeString(this.about);
        if ((this.flags & 0x1) != 0) {
          paramAbstractSerializedData.writeInt32(this.participants_count);
        }
        if ((this.flags & 0x2) != 0) {
          paramAbstractSerializedData.writeInt32(this.admins_count);
        }
        if ((this.flags & 0x4) != 0) {
          paramAbstractSerializedData.writeInt32(this.kicked_count);
        }
        if ((this.flags & 0x4) != 0) {
          paramAbstractSerializedData.writeInt32(this.banned_count);
        }
        paramAbstractSerializedData.writeInt32(this.read_inbox_max_id);
        paramAbstractSerializedData.writeInt32(this.read_outbox_max_id);
        paramAbstractSerializedData.writeInt32(this.unread_count);
        this.chat_photo.serializeToStream(paramAbstractSerializedData);
        this.notify_settings.serializeToStream(paramAbstractSerializedData);
        this.exported_invite.serializeToStream(paramAbstractSerializedData);
        paramAbstractSerializedData.writeInt32(481674261);
        int j = this.bot_info.size();
        paramAbstractSerializedData.writeInt32(j);
        for (i = 0; i < j; i++) {
          ((TLRPC.BotInfo)this.bot_info.get(i)).serializeToStream(paramAbstractSerializedData);
        }
        i = this.flags & 0xFFFFFFF7;
        break;
        i = this.flags & 0xFFFFFFBF;
        break label42;
        i = this.flags & 0xFF7F;
        break label63;
      }
      if ((this.flags & 0x10) != 0) {
        paramAbstractSerializedData.writeInt32(this.migrated_from_chat_id);
      }
      if ((this.flags & 0x10) != 0) {
        paramAbstractSerializedData.writeInt32(this.migrated_from_max_id);
      }
      if ((this.flags & 0x20) != 0) {
        paramAbstractSerializedData.writeInt32(this.pinned_msg_id);
      }
      if ((this.flags & 0x100) != 0) {
        this.stickerset.serializeToStream(paramAbstractSerializedData);
      }
      if ((this.flags & 0x200) != 0) {
        paramAbstractSerializedData.writeInt32(this.available_min_id);
      }
    }
  }
  
  public static class TL_channelFull_old
    extends TLRPC.TL_channelFull
  {
    public static int constructor = -88925533;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x8) != 0) {}
      for (boolean bool = true;; bool = false)
      {
        this.can_view_participants = bool;
        this.id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.about = paramAbstractSerializedData.readString(paramBoolean);
        if ((this.flags & 0x1) != 0) {
          this.participants_count = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x2) != 0) {
          this.admins_count = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x4) != 0) {
          this.kicked_count = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        this.read_inbox_max_id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.unread_count = paramAbstractSerializedData.readInt32(paramBoolean);
        this.unread_important_count = paramAbstractSerializedData.readInt32(paramBoolean);
        this.chat_photo = TLRPC.Photo.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        this.notify_settings = TLRPC.PeerNotifySettings.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        this.exported_invite = TLRPC.ExportedChatInvite.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        return;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.can_view_participants) {}
      for (int i = this.flags | 0x8;; i = this.flags & 0xFFFFFFF7)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(this.id);
        paramAbstractSerializedData.writeString(this.about);
        if ((this.flags & 0x1) != 0) {
          paramAbstractSerializedData.writeInt32(this.participants_count);
        }
        if ((this.flags & 0x2) != 0) {
          paramAbstractSerializedData.writeInt32(this.admins_count);
        }
        if ((this.flags & 0x4) != 0) {
          paramAbstractSerializedData.writeInt32(this.kicked_count);
        }
        paramAbstractSerializedData.writeInt32(this.read_inbox_max_id);
        paramAbstractSerializedData.writeInt32(this.unread_count);
        paramAbstractSerializedData.writeInt32(this.unread_important_count);
        this.chat_photo.serializeToStream(paramAbstractSerializedData);
        this.notify_settings.serializeToStream(paramAbstractSerializedData);
        this.exported_invite.serializeToStream(paramAbstractSerializedData);
        return;
      }
    }
  }
  
  public static class TL_channelMessagesFilter
    extends TLRPC.ChannelMessagesFilter
  {
    public static int constructor = -847783593;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x2) != 0) {}
      for (boolean bool = true;; bool = false)
      {
        this.exclude_new_messages = bool;
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i == 481674261) {
          break;
        }
        if (!paramBoolean) {
          break label107;
        }
        throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
      }
      int j = paramAbstractSerializedData.readInt32(paramBoolean);
      for (int i = 0;; i++)
      {
        TLRPC.TL_messageRange localTL_messageRange;
        if (i < j)
        {
          localTL_messageRange = TLRPC.TL_messageRange.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localTL_messageRange != null) {}
        }
        else
        {
          label107:
          return;
        }
        this.ranges.add(localTL_messageRange);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.exclude_new_messages) {}
      for (int i = this.flags | 0x2;; i = this.flags & 0xFFFFFFFD)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(481674261);
        int j = this.ranges.size();
        paramAbstractSerializedData.writeInt32(j);
        for (i = 0; i < j; i++) {
          ((TLRPC.TL_messageRange)this.ranges.get(i)).serializeToStream(paramAbstractSerializedData);
        }
      }
    }
  }
  
  public static class TL_channelMessagesFilterEmpty
    extends TLRPC.ChannelMessagesFilter
  {
    public static int constructor = -NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_channelParticipant
    extends TLRPC.ChannelParticipant
  {
    public static int constructor = 367766557;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.user_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.user_id);
      paramAbstractSerializedData.writeInt32(this.date);
    }
  }
  
  public static class TL_channelParticipantAdmin
    extends TLRPC.ChannelParticipant
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0) {}
      for (boolean bool = true;; bool = false)
      {
        this.can_edit = bool;
        this.user_id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.inviter_id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.promoted_by = paramAbstractSerializedData.readInt32(paramBoolean);
        this.date = paramAbstractSerializedData.readInt32(paramBoolean);
        this.admin_rights = TLRPC.TL_channelAdminRights.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        return;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.can_edit) {}
      for (int i = this.flags | 0x1;; i = this.flags & 0xFFFFFFFE)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(this.user_id);
        paramAbstractSerializedData.writeInt32(this.inviter_id);
        paramAbstractSerializedData.writeInt32(this.promoted_by);
        paramAbstractSerializedData.writeInt32(this.date);
        this.admin_rights.serializeToStream(paramAbstractSerializedData);
        return;
      }
    }
  }
  
  public static class TL_channelParticipantBanned
    extends TLRPC.ChannelParticipant
  {
    public static int constructor = 573315206;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0) {}
      for (boolean bool = true;; bool = false)
      {
        this.left = bool;
        this.user_id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.kicked_by = paramAbstractSerializedData.readInt32(paramBoolean);
        this.date = paramAbstractSerializedData.readInt32(paramBoolean);
        this.banned_rights = TLRPC.TL_channelBannedRights.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        return;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.left) {}
      for (int i = this.flags | 0x1;; i = this.flags & 0xFFFFFFFE)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(this.user_id);
        paramAbstractSerializedData.writeInt32(this.kicked_by);
        paramAbstractSerializedData.writeInt32(this.date);
        this.banned_rights.serializeToStream(paramAbstractSerializedData);
        return;
      }
    }
  }
  
  public static class TL_channelParticipantCreator
    extends TLRPC.ChannelParticipant
  {
    public static int constructor = -471670279;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.user_id = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.user_id);
    }
  }
  
  public static class TL_channelParticipantEditor_layer67
    extends TLRPC.TL_channelParticipantAdmin
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.user_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.inviter_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.user_id);
      paramAbstractSerializedData.writeInt32(this.inviter_id);
      paramAbstractSerializedData.writeInt32(this.date);
    }
  }
  
  public static class TL_channelParticipantKicked_layer67
    extends TLRPC.ChannelParticipant
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.user_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.kicked_by = paramAbstractSerializedData.readInt32(paramBoolean);
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.user_id);
      paramAbstractSerializedData.writeInt32(this.kicked_by);
      paramAbstractSerializedData.writeInt32(this.date);
    }
  }
  
  public static class TL_channelParticipantModerator_layer67
    extends TLRPC.TL_channelParticipantAdmin
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.user_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.inviter_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.user_id);
      paramAbstractSerializedData.writeInt32(this.inviter_id);
      paramAbstractSerializedData.writeInt32(this.date);
    }
  }
  
  public static class TL_channelParticipantSelf
    extends TLRPC.ChannelParticipant
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.user_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.inviter_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.user_id);
      paramAbstractSerializedData.writeInt32(this.inviter_id);
      paramAbstractSerializedData.writeInt32(this.date);
    }
  }
  
  public static class TL_channelParticipantsAdmins
    extends TLRPC.ChannelParticipantsFilter
  {
    public static int constructor = -NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_channelParticipantsBanned
    extends TLRPC.ChannelParticipantsFilter
  {
    public static int constructor = 338142689;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.q = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.q);
    }
  }
  
  public static class TL_channelParticipantsBots
    extends TLRPC.ChannelParticipantsFilter
  {
    public static int constructor = -NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_channelParticipantsKicked
    extends TLRPC.ChannelParticipantsFilter
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.q = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.q);
    }
  }
  
  public static class TL_channelParticipantsRecent
    extends TLRPC.ChannelParticipantsFilter
  {
    public static int constructor = -566281095;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_channelParticipantsSearch
    extends TLRPC.ChannelParticipantsFilter
  {
    public static int constructor = 106343499;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.q = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.q);
    }
  }
  
  public static class TL_channel_layer48
    extends TLRPC.TL_channel
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      boolean bool1 = true;
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0)
      {
        bool2 = true;
        this.creator = bool2;
        if ((this.flags & 0x2) == 0) {
          break label308;
        }
        bool2 = true;
        label41:
        this.kicked = bool2;
        if ((this.flags & 0x4) == 0) {
          break label314;
        }
        bool2 = true;
        label59:
        this.left = bool2;
        if ((this.flags & 0x10) == 0) {
          break label320;
        }
        bool2 = true;
        label78:
        this.moderator = bool2;
        if ((this.flags & 0x20) == 0) {
          break label326;
        }
        bool2 = true;
        label97:
        this.broadcast = bool2;
        if ((this.flags & 0x80) == 0) {
          break label332;
        }
        bool2 = true;
        label117:
        this.verified = bool2;
        if ((this.flags & 0x100) == 0) {
          break label338;
        }
        bool2 = true;
        label137:
        this.megagroup = bool2;
        if ((this.flags & 0x200) == 0) {
          break label344;
        }
        bool2 = true;
        label157:
        this.restricted = bool2;
        if ((this.flags & 0x400) == 0) {
          break label350;
        }
        bool2 = true;
        label177:
        this.democracy = bool2;
        if ((this.flags & 0x800) == 0) {
          break label356;
        }
      }
      label308:
      label314:
      label320:
      label326:
      label332:
      label338:
      label344:
      label350:
      label356:
      for (boolean bool2 = bool1;; bool2 = false)
      {
        this.signatures = bool2;
        this.id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
        this.title = paramAbstractSerializedData.readString(paramBoolean);
        if ((this.flags & 0x40) != 0) {
          this.username = paramAbstractSerializedData.readString(paramBoolean);
        }
        this.photo = TLRPC.ChatPhoto.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        this.date = paramAbstractSerializedData.readInt32(paramBoolean);
        this.version = paramAbstractSerializedData.readInt32(paramBoolean);
        if ((this.flags & 0x200) != 0) {
          this.restriction_reason = paramAbstractSerializedData.readString(paramBoolean);
        }
        return;
        bool2 = false;
        break;
        bool2 = false;
        break label41;
        bool2 = false;
        break label59;
        bool2 = false;
        break label78;
        bool2 = false;
        break label97;
        bool2 = false;
        break label117;
        bool2 = false;
        break label137;
        bool2 = false;
        break label157;
        bool2 = false;
        break label177;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.creator)
      {
        i = this.flags | 0x1;
        this.flags = i;
        if (!this.kicked) {
          break label314;
        }
        i = this.flags | 0x2;
        label40:
        this.flags = i;
        if (!this.left) {
          break label325;
        }
        i = this.flags | 0x4;
        label59:
        this.flags = i;
        if (!this.moderator) {
          break label336;
        }
        i = this.flags | 0x10;
        label79:
        this.flags = i;
        if (!this.broadcast) {
          break label347;
        }
        i = this.flags | 0x20;
        label99:
        this.flags = i;
        if (!this.verified) {
          break label358;
        }
        i = this.flags | 0x80;
        label120:
        this.flags = i;
        if (!this.megagroup) {
          break label370;
        }
        i = this.flags | 0x100;
        label141:
        this.flags = i;
        if (!this.restricted) {
          break label382;
        }
        i = this.flags | 0x200;
        label162:
        this.flags = i;
        if (!this.democracy) {
          break label394;
        }
        i = this.flags | 0x400;
        label183:
        this.flags = i;
        if (!this.signatures) {
          break label406;
        }
      }
      label314:
      label325:
      label336:
      label347:
      label358:
      label370:
      label382:
      label394:
      label406:
      for (int i = this.flags | 0x800;; i = this.flags & 0xF7FF)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(this.id);
        paramAbstractSerializedData.writeInt64(this.access_hash);
        paramAbstractSerializedData.writeString(this.title);
        if ((this.flags & 0x40) != 0) {
          paramAbstractSerializedData.writeString(this.username);
        }
        this.photo.serializeToStream(paramAbstractSerializedData);
        paramAbstractSerializedData.writeInt32(this.date);
        paramAbstractSerializedData.writeInt32(this.version);
        if ((this.flags & 0x200) != 0) {
          paramAbstractSerializedData.writeString(this.restriction_reason);
        }
        return;
        i = this.flags & 0xFFFFFFFE;
        break;
        i = this.flags & 0xFFFFFFFD;
        break label40;
        i = this.flags & 0xFFFFFFFB;
        break label59;
        i = this.flags & 0xFFFFFFEF;
        break label79;
        i = this.flags & 0xFFFFFFDF;
        break label99;
        i = this.flags & 0xFF7F;
        break label120;
        i = this.flags & 0xFEFF;
        break label141;
        i = this.flags & 0xFDFF;
        break label162;
        i = this.flags & 0xFBFF;
        break label183;
      }
    }
  }
  
  public static class TL_channel_layer67
    extends TLRPC.TL_channel
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      boolean bool1 = true;
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0)
      {
        bool2 = true;
        this.creator = bool2;
        if ((this.flags & 0x2) == 0) {
          break label339;
        }
        bool2 = true;
        label41:
        this.kicked = bool2;
        if ((this.flags & 0x4) == 0) {
          break label345;
        }
        bool2 = true;
        label59:
        this.left = bool2;
        if ((this.flags & 0x10) == 0) {
          break label351;
        }
        bool2 = true;
        label78:
        this.moderator = bool2;
        if ((this.flags & 0x20) == 0) {
          break label357;
        }
        bool2 = true;
        label97:
        this.broadcast = bool2;
        if ((this.flags & 0x80) == 0) {
          break label363;
        }
        bool2 = true;
        label117:
        this.verified = bool2;
        if ((this.flags & 0x100) == 0) {
          break label369;
        }
        bool2 = true;
        label137:
        this.megagroup = bool2;
        if ((this.flags & 0x200) == 0) {
          break label375;
        }
        bool2 = true;
        label157:
        this.restricted = bool2;
        if ((this.flags & 0x400) == 0) {
          break label381;
        }
        bool2 = true;
        label177:
        this.democracy = bool2;
        if ((this.flags & 0x800) == 0) {
          break label387;
        }
        bool2 = true;
        label197:
        this.signatures = bool2;
        if ((this.flags & 0x1000) == 0) {
          break label393;
        }
      }
      label339:
      label345:
      label351:
      label357:
      label363:
      label369:
      label375:
      label381:
      label387:
      label393:
      for (boolean bool2 = bool1;; bool2 = false)
      {
        this.min = bool2;
        this.id = paramAbstractSerializedData.readInt32(paramBoolean);
        if ((this.flags & 0x2000) != 0) {
          this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
        }
        this.title = paramAbstractSerializedData.readString(paramBoolean);
        if ((this.flags & 0x40) != 0) {
          this.username = paramAbstractSerializedData.readString(paramBoolean);
        }
        this.photo = TLRPC.ChatPhoto.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        this.date = paramAbstractSerializedData.readInt32(paramBoolean);
        this.version = paramAbstractSerializedData.readInt32(paramBoolean);
        if ((this.flags & 0x200) != 0) {
          this.restriction_reason = paramAbstractSerializedData.readString(paramBoolean);
        }
        return;
        bool2 = false;
        break;
        bool2 = false;
        break label41;
        bool2 = false;
        break label59;
        bool2 = false;
        break label78;
        bool2 = false;
        break label97;
        bool2 = false;
        break label117;
        bool2 = false;
        break label137;
        bool2 = false;
        break label157;
        bool2 = false;
        break label177;
        bool2 = false;
        break label197;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.creator)
      {
        i = this.flags | 0x1;
        this.flags = i;
        if (!this.kicked) {
          break label346;
        }
        i = this.flags | 0x2;
        label40:
        this.flags = i;
        if (!this.left) {
          break label357;
        }
        i = this.flags | 0x4;
        label59:
        this.flags = i;
        if (!this.moderator) {
          break label368;
        }
        i = this.flags | 0x10;
        label79:
        this.flags = i;
        if (!this.broadcast) {
          break label379;
        }
        i = this.flags | 0x20;
        label99:
        this.flags = i;
        if (!this.verified) {
          break label390;
        }
        i = this.flags | 0x80;
        label120:
        this.flags = i;
        if (!this.megagroup) {
          break label402;
        }
        i = this.flags | 0x100;
        label141:
        this.flags = i;
        if (!this.restricted) {
          break label414;
        }
        i = this.flags | 0x200;
        label162:
        this.flags = i;
        if (!this.democracy) {
          break label426;
        }
        i = this.flags | 0x400;
        label183:
        this.flags = i;
        if (!this.signatures) {
          break label438;
        }
        i = this.flags | 0x800;
        label204:
        this.flags = i;
        if (!this.min) {
          break label450;
        }
      }
      label346:
      label357:
      label368:
      label379:
      label390:
      label402:
      label414:
      label426:
      label438:
      label450:
      for (int i = this.flags | 0x1000;; i = this.flags & 0xEFFF)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(this.id);
        if ((this.flags & 0x2000) != 0) {
          paramAbstractSerializedData.writeInt64(this.access_hash);
        }
        paramAbstractSerializedData.writeString(this.title);
        if ((this.flags & 0x40) != 0) {
          paramAbstractSerializedData.writeString(this.username);
        }
        this.photo.serializeToStream(paramAbstractSerializedData);
        paramAbstractSerializedData.writeInt32(this.date);
        paramAbstractSerializedData.writeInt32(this.version);
        if ((this.flags & 0x200) != 0) {
          paramAbstractSerializedData.writeString(this.restriction_reason);
        }
        return;
        i = this.flags & 0xFFFFFFFE;
        break;
        i = this.flags & 0xFFFFFFFD;
        break label40;
        i = this.flags & 0xFFFFFFFB;
        break label59;
        i = this.flags & 0xFFFFFFEF;
        break label79;
        i = this.flags & 0xFFFFFFDF;
        break label99;
        i = this.flags & 0xFF7F;
        break label120;
        i = this.flags & 0xFEFF;
        break label141;
        i = this.flags & 0xFDFF;
        break label162;
        i = this.flags & 0xFBFF;
        break label183;
        i = this.flags & 0xF7FF;
        break label204;
      }
    }
  }
  
  public static class TL_channel_layer72
    extends TLRPC.TL_channel
  {
    public static int constructor = 213142300;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      boolean bool1 = true;
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0)
      {
        bool2 = true;
        this.creator = bool2;
        if ((this.flags & 0x4) == 0) {
          break label351;
        }
        bool2 = true;
        label41:
        this.left = bool2;
        if ((this.flags & 0x20) == 0) {
          break label357;
        }
        bool2 = true;
        label60:
        this.broadcast = bool2;
        if ((this.flags & 0x80) == 0) {
          break label363;
        }
        bool2 = true;
        label80:
        this.verified = bool2;
        if ((this.flags & 0x100) == 0) {
          break label369;
        }
        bool2 = true;
        label100:
        this.megagroup = bool2;
        if ((this.flags & 0x200) == 0) {
          break label375;
        }
        bool2 = true;
        label120:
        this.restricted = bool2;
        if ((this.flags & 0x400) == 0) {
          break label381;
        }
        bool2 = true;
        label140:
        this.democracy = bool2;
        if ((this.flags & 0x800) == 0) {
          break label387;
        }
        bool2 = true;
        label160:
        this.signatures = bool2;
        if ((this.flags & 0x1000) == 0) {
          break label393;
        }
      }
      label351:
      label357:
      label363:
      label369:
      label375:
      label381:
      label387:
      label393:
      for (boolean bool2 = bool1;; bool2 = false)
      {
        this.min = bool2;
        this.id = paramAbstractSerializedData.readInt32(paramBoolean);
        if ((this.flags & 0x2000) != 0) {
          this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
        }
        this.title = paramAbstractSerializedData.readString(paramBoolean);
        if ((this.flags & 0x40) != 0) {
          this.username = paramAbstractSerializedData.readString(paramBoolean);
        }
        this.photo = TLRPC.ChatPhoto.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        this.date = paramAbstractSerializedData.readInt32(paramBoolean);
        this.version = paramAbstractSerializedData.readInt32(paramBoolean);
        if ((this.flags & 0x200) != 0) {
          this.restriction_reason = paramAbstractSerializedData.readString(paramBoolean);
        }
        if ((this.flags & 0x4000) != 0) {
          this.admin_rights = TLRPC.TL_channelAdminRights.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        }
        if ((this.flags & 0x8000) != 0) {
          this.banned_rights = TLRPC.TL_channelBannedRights.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        }
        return;
        bool2 = false;
        break;
        bool2 = false;
        break label41;
        bool2 = false;
        break label60;
        bool2 = false;
        break label80;
        bool2 = false;
        break label100;
        bool2 = false;
        break label120;
        bool2 = false;
        break label140;
        bool2 = false;
        break label160;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.creator)
      {
        i = this.flags | 0x1;
        this.flags = i;
        if (!this.kicked) {
          break label363;
        }
        i = this.flags | 0x2;
        label40:
        this.flags = i;
        if (!this.left) {
          break label374;
        }
        i = this.flags | 0x4;
        label59:
        this.flags = i;
        if (!this.broadcast) {
          break label385;
        }
        i = this.flags | 0x20;
        label79:
        this.flags = i;
        if (!this.verified) {
          break label396;
        }
        i = this.flags | 0x80;
        label100:
        this.flags = i;
        if (!this.megagroup) {
          break label408;
        }
        i = this.flags | 0x100;
        label121:
        this.flags = i;
        if (!this.restricted) {
          break label420;
        }
        i = this.flags | 0x200;
        label142:
        this.flags = i;
        if (!this.democracy) {
          break label432;
        }
        i = this.flags | 0x400;
        label163:
        this.flags = i;
        if (!this.signatures) {
          break label444;
        }
        i = this.flags | 0x800;
        label184:
        this.flags = i;
        if (!this.min) {
          break label456;
        }
      }
      label363:
      label374:
      label385:
      label396:
      label408:
      label420:
      label432:
      label444:
      label456:
      for (int i = this.flags | 0x1000;; i = this.flags & 0xEFFF)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(this.id);
        if ((this.flags & 0x2000) != 0) {
          paramAbstractSerializedData.writeInt64(this.access_hash);
        }
        paramAbstractSerializedData.writeString(this.title);
        if ((this.flags & 0x40) != 0) {
          paramAbstractSerializedData.writeString(this.username);
        }
        this.photo.serializeToStream(paramAbstractSerializedData);
        paramAbstractSerializedData.writeInt32(this.date);
        paramAbstractSerializedData.writeInt32(this.version);
        if ((this.flags & 0x200) != 0) {
          paramAbstractSerializedData.writeString(this.restriction_reason);
        }
        if ((this.flags & 0x4000) != 0) {
          this.admin_rights.serializeToStream(paramAbstractSerializedData);
        }
        if ((this.flags & 0x8000) != 0) {
          this.banned_rights.serializeToStream(paramAbstractSerializedData);
        }
        return;
        i = this.flags & 0xFFFFFFFE;
        break;
        i = this.flags & 0xFFFFFFFD;
        break label40;
        i = this.flags & 0xFFFFFFFB;
        break label59;
        i = this.flags & 0xFFFFFFDF;
        break label79;
        i = this.flags & 0xFF7F;
        break label100;
        i = this.flags & 0xFEFF;
        break label121;
        i = this.flags & 0xFDFF;
        break label142;
        i = this.flags & 0xFBFF;
        break label163;
        i = this.flags & 0xF7FF;
        break label184;
      }
    }
  }
  
  public static class TL_channel_old
    extends TLRPC.TL_channel
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      boolean bool1 = true;
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0)
      {
        bool2 = true;
        this.creator = bool2;
        if ((this.flags & 0x2) == 0) {
          break label248;
        }
        bool2 = true;
        label41:
        this.kicked = bool2;
        if ((this.flags & 0x4) == 0) {
          break label254;
        }
        bool2 = true;
        label59:
        this.left = bool2;
        if ((this.flags & 0x10) == 0) {
          break label260;
        }
        bool2 = true;
        label78:
        this.moderator = bool2;
        if ((this.flags & 0x20) == 0) {
          break label266;
        }
        bool2 = true;
        label97:
        this.broadcast = bool2;
        if ((this.flags & 0x80) == 0) {
          break label272;
        }
        bool2 = true;
        label117:
        this.verified = bool2;
        if ((this.flags & 0x100) == 0) {
          break label278;
        }
        bool2 = true;
        label137:
        this.megagroup = bool2;
        if ((this.flags & 0x200) == 0) {
          break label284;
        }
      }
      label248:
      label254:
      label260:
      label266:
      label272:
      label278:
      label284:
      for (boolean bool2 = bool1;; bool2 = false)
      {
        this.explicit_content = bool2;
        this.id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
        this.title = paramAbstractSerializedData.readString(paramBoolean);
        if ((this.flags & 0x40) != 0) {
          this.username = paramAbstractSerializedData.readString(paramBoolean);
        }
        this.photo = TLRPC.ChatPhoto.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        this.date = paramAbstractSerializedData.readInt32(paramBoolean);
        this.version = paramAbstractSerializedData.readInt32(paramBoolean);
        return;
        bool2 = false;
        break;
        bool2 = false;
        break label41;
        bool2 = false;
        break label59;
        bool2 = false;
        break label78;
        bool2 = false;
        break label97;
        bool2 = false;
        break label117;
        bool2 = false;
        break label137;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.creator)
      {
        i = this.flags | 0x1;
        this.flags = i;
        if (!this.kicked) {
          break label253;
        }
        i = this.flags | 0x2;
        label40:
        this.flags = i;
        if (!this.left) {
          break label264;
        }
        i = this.flags | 0x4;
        label59:
        this.flags = i;
        if (!this.moderator) {
          break label275;
        }
        i = this.flags | 0x10;
        label79:
        this.flags = i;
        if (!this.broadcast) {
          break label286;
        }
        i = this.flags | 0x20;
        label99:
        this.flags = i;
        if (!this.verified) {
          break label297;
        }
        i = this.flags | 0x80;
        label120:
        this.flags = i;
        if (!this.megagroup) {
          break label309;
        }
        i = this.flags | 0x100;
        label141:
        this.flags = i;
        if (!this.explicit_content) {
          break label321;
        }
      }
      label253:
      label264:
      label275:
      label286:
      label297:
      label309:
      label321:
      for (int i = this.flags | 0x200;; i = this.flags & 0xFDFF)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(this.id);
        paramAbstractSerializedData.writeInt64(this.access_hash);
        paramAbstractSerializedData.writeString(this.title);
        if ((this.flags & 0x40) != 0) {
          paramAbstractSerializedData.writeString(this.username);
        }
        this.photo.serializeToStream(paramAbstractSerializedData);
        paramAbstractSerializedData.writeInt32(this.date);
        paramAbstractSerializedData.writeInt32(this.version);
        return;
        i = this.flags & 0xFFFFFFFE;
        break;
        i = this.flags & 0xFFFFFFFD;
        break label40;
        i = this.flags & 0xFFFFFFFB;
        break label59;
        i = this.flags & 0xFFFFFFEF;
        break label79;
        i = this.flags & 0xFFFFFFDF;
        break label99;
        i = this.flags & 0xFF7F;
        break label120;
        i = this.flags & 0xFEFF;
        break label141;
      }
    }
  }
  
  public static class TL_channels_adminLogResults
    extends TLObject
  {
    public static int constructor = -309659827;
    public ArrayList<TLRPC.Chat> chats = new ArrayList();
    public ArrayList<TLRPC.TL_channelAdminLogEvent> events = new ArrayList();
    public ArrayList<TLRPC.User> users = new ArrayList();
    
    public static TL_channels_adminLogResults TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_channels_adminLogResults", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_channels_adminLogResults localTL_channels_adminLogResults;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_channels_adminLogResults)
      {
        return paramAbstractSerializedData;
        localTL_channels_adminLogResults = new TL_channels_adminLogResults();
        localTL_channels_adminLogResults.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      Object localObject;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else
      {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
        i = 0;
        if (i >= j) {
          break label89;
        }
        localObject = TLRPC.TL_channelAdminLogEvent.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localObject != null) {
          break label73;
        }
      }
      label73:
      label89:
      label177:
      label263:
      for (;;)
      {
        return;
        this.events.add(localObject);
        i++;
        break;
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i != 481674261)
        {
          if (paramBoolean) {
            throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
          }
        }
        else
        {
          j = paramAbstractSerializedData.readInt32(paramBoolean);
          for (i = 0;; i++)
          {
            if (i >= j) {
              break label177;
            }
            localObject = TLRPC.Chat.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
            if (localObject == null) {
              break;
            }
            this.chats.add(localObject);
          }
          i = paramAbstractSerializedData.readInt32(paramBoolean);
          if (i != 481674261)
          {
            if (paramBoolean) {
              throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
            }
          }
          else
          {
            j = paramAbstractSerializedData.readInt32(paramBoolean);
            for (i = 0;; i++)
            {
              if (i >= j) {
                break label263;
              }
              localObject = TLRPC.User.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
              if (localObject == null) {
                break;
              }
              this.users.add(localObject);
            }
          }
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.events.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.TL_channelAdminLogEvent)this.events.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.chats.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        ((TLRPC.Chat)this.chats.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.users.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        ((TLRPC.User)this.users.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_channels_channelParticipant
    extends TLObject
  {
    public static int constructor = -791039645;
    public TLRPC.ChannelParticipant participant;
    public ArrayList<TLRPC.User> users = new ArrayList();
    
    public static TL_channels_channelParticipant TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_channels_channelParticipant", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_channels_channelParticipant localTL_channels_channelParticipant;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_channels_channelParticipant)
      {
        return paramAbstractSerializedData;
        localTL_channels_channelParticipant = new TL_channels_channelParticipant();
        localTL_channels_channelParticipant.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.participant = TLRPC.ChannelParticipant.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
      }
      for (i = 0;; i++)
      {
        TLRPC.User localUser;
        if (i < j)
        {
          localUser = TLRPC.User.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localUser != null) {}
        }
        else
        {
          return;
        }
        this.users.add(localUser);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.participant.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.users.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.User)this.users.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_channels_channelParticipants
    extends TLRPC.channels_ChannelParticipants
  {
    public static int constructor = -177282392;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.count = paramAbstractSerializedData.readInt32(paramBoolean);
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      Object localObject;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else
      {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
        i = 0;
        if (i >= j) {
          break label98;
        }
        localObject = TLRPC.ChannelParticipant.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localObject != null) {
          break label82;
        }
      }
      label82:
      label98:
      label184:
      for (;;)
      {
        return;
        this.participants.add(localObject);
        i++;
        break;
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i != 481674261)
        {
          if (paramBoolean) {
            throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
          }
        }
        else
        {
          j = paramAbstractSerializedData.readInt32(paramBoolean);
          for (i = 0;; i++)
          {
            if (i >= j) {
              break label184;
            }
            localObject = TLRPC.User.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
            if (localObject == null) {
              break;
            }
            this.users.add(localObject);
          }
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.count);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.participants.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.ChannelParticipant)this.participants.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.users.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        ((TLRPC.User)this.users.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_channels_channelParticipantsNotModified
    extends TLRPC.channels_ChannelParticipants
  {
    public static int constructor = -266911767;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_channels_checkUsername
    extends TLObject
  {
    public static int constructor = 283557164;
    public TLRPC.InputChannel channel;
    public String username;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.channel.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeString(this.username);
    }
  }
  
  public static class TL_channels_createChannel
    extends TLObject
  {
    public static int constructor = -192332417;
    public String about;
    public boolean broadcast;
    public int flags;
    public boolean megagroup;
    public String title;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Updates.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.broadcast)
      {
        i = this.flags | 0x1;
        this.flags = i;
        if (!this.megagroup) {
          break label81;
        }
      }
      label81:
      for (int i = this.flags | 0x2;; i = this.flags & 0xFFFFFFFD)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeString(this.title);
        paramAbstractSerializedData.writeString(this.about);
        return;
        i = this.flags & 0xFFFFFFFE;
        break;
      }
    }
  }
  
  public static class TL_channels_deleteChannel
    extends TLObject
  {
    public static int constructor = -NUM;
    public TLRPC.InputChannel channel;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Updates.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.channel.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_channels_deleteHistory
    extends TLObject
  {
    public static int constructor = -NUM;
    public TLRPC.InputChannel channel;
    public int max_id;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.channel.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(this.max_id);
    }
  }
  
  public static class TL_channels_deleteMessages
    extends TLObject
  {
    public static int constructor = -NUM;
    public TLRPC.InputChannel channel;
    public ArrayList<Integer> id = new ArrayList();
    
    public static TL_channels_deleteMessages TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_channels_deleteMessages", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_channels_deleteMessages localTL_channels_deleteMessages;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_channels_deleteMessages)
      {
        return paramAbstractSerializedData;
        localTL_channels_deleteMessages = new TL_channels_deleteMessages();
        localTL_channels_deleteMessages.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_messages_affectedMessages.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.channel = TLRPC.InputChannel.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else
      {
        int j = paramAbstractSerializedData.readInt32(paramBoolean);
        for (i = 0; i < j; i++) {
          this.id.add(Integer.valueOf(paramAbstractSerializedData.readInt32(paramBoolean)));
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.channel.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.id.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        paramAbstractSerializedData.writeInt32(((Integer)this.id.get(j)).intValue());
      }
    }
  }
  
  public static class TL_channels_deleteUserHistory
    extends TLObject
  {
    public static int constructor = -787622117;
    public TLRPC.InputChannel channel;
    public TLRPC.InputUser user_id;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_messages_affectedHistory.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.channel.serializeToStream(paramAbstractSerializedData);
      this.user_id.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_channels_editAbout
    extends TLObject
  {
    public static int constructor = 333610782;
    public String about;
    public TLRPC.InputChannel channel;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.channel.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeString(this.about);
    }
  }
  
  public static class TL_channels_editAdmin
    extends TLObject
  {
    public static int constructor = 548962836;
    public TLRPC.TL_channelAdminRights admin_rights;
    public TLRPC.InputChannel channel;
    public TLRPC.InputUser user_id;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Updates.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.channel.serializeToStream(paramAbstractSerializedData);
      this.user_id.serializeToStream(paramAbstractSerializedData);
      this.admin_rights.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_channels_editBanned
    extends TLObject
  {
    public static int constructor = -NUM;
    public TLRPC.TL_channelBannedRights banned_rights;
    public TLRPC.InputChannel channel;
    public TLRPC.InputUser user_id;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Updates.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.channel.serializeToStream(paramAbstractSerializedData);
      this.user_id.serializeToStream(paramAbstractSerializedData);
      this.banned_rights.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_channels_editPhoto
    extends TLObject
  {
    public static int constructor = -248621111;
    public TLRPC.InputChannel channel;
    public TLRPC.InputChatPhoto photo;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Updates.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.channel.serializeToStream(paramAbstractSerializedData);
      this.photo.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_channels_editTitle
    extends TLObject
  {
    public static int constructor = NUM;
    public TLRPC.InputChannel channel;
    public String title;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Updates.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.channel.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeString(this.title);
    }
  }
  
  public static class TL_channels_exportInvite
    extends TLObject
  {
    public static int constructor = -950663035;
    public TLRPC.InputChannel channel;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.ExportedChatInvite.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.channel.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_channels_exportMessageLink
    extends TLObject
  {
    public static int constructor = -934882771;
    public TLRPC.InputChannel channel;
    public int id;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_exportedMessageLink.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.channel.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(this.id);
    }
  }
  
  public static class TL_channels_getAdminLog
    extends TLObject
  {
    public static int constructor = 870184064;
    public ArrayList<TLRPC.InputUser> admins = new ArrayList();
    public TLRPC.InputChannel channel;
    public TLRPC.TL_channelAdminLogEventsFilter events_filter;
    public int flags;
    public int limit;
    public long max_id;
    public long min_id;
    public String q;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_channels_adminLogResults.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.flags);
      this.channel.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeString(this.q);
      if ((this.flags & 0x1) != 0) {
        this.events_filter.serializeToStream(paramAbstractSerializedData);
      }
      if ((this.flags & 0x2) != 0)
      {
        paramAbstractSerializedData.writeInt32(481674261);
        int i = this.admins.size();
        paramAbstractSerializedData.writeInt32(i);
        for (int j = 0; j < i; j++) {
          ((TLRPC.InputUser)this.admins.get(j)).serializeToStream(paramAbstractSerializedData);
        }
      }
      paramAbstractSerializedData.writeInt64(this.max_id);
      paramAbstractSerializedData.writeInt64(this.min_id);
      paramAbstractSerializedData.writeInt32(this.limit);
    }
  }
  
  public static class TL_channels_getAdminedPublicChannels
    extends TLObject
  {
    public static int constructor = -NUM;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_messages_chats.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_channels_getChannels
    extends TLObject
  {
    public static int constructor = 176122811;
    public ArrayList<TLRPC.InputChannel> id = new ArrayList();
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_messages_chats.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.id.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.InputChannel)this.id.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_channels_getFullChannel
    extends TLObject
  {
    public static int constructor = 141781513;
    public TLRPC.InputChannel channel;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_messages_chatFull.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.channel.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_channels_getMessages
    extends TLObject
  {
    public static int constructor = -NUM;
    public TLRPC.InputChannel channel;
    public ArrayList<Integer> id = new ArrayList();
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.messages_Messages.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.channel.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.id.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        paramAbstractSerializedData.writeInt32(((Integer)this.id.get(j)).intValue());
      }
    }
  }
  
  public static class TL_channels_getParticipant
    extends TLObject
  {
    public static int constructor = NUM;
    public TLRPC.InputChannel channel;
    public TLRPC.InputUser user_id;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_channels_channelParticipant.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.channel.serializeToStream(paramAbstractSerializedData);
      this.user_id.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_channels_getParticipants
    extends TLObject
  {
    public static int constructor = 306054633;
    public TLRPC.InputChannel channel;
    public TLRPC.ChannelParticipantsFilter filter;
    public int hash;
    public int limit;
    public int offset;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.channels_ChannelParticipants.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.channel.serializeToStream(paramAbstractSerializedData);
      this.filter.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(this.offset);
      paramAbstractSerializedData.writeInt32(this.limit);
      paramAbstractSerializedData.writeInt32(this.hash);
    }
  }
  
  public static class TL_channels_inviteToChannel
    extends TLObject
  {
    public static int constructor = 429865580;
    public TLRPC.InputChannel channel;
    public ArrayList<TLRPC.InputUser> users = new ArrayList();
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Updates.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.channel.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.users.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.InputUser)this.users.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_channels_joinChannel
    extends TLObject
  {
    public static int constructor = 615851205;
    public TLRPC.InputChannel channel;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Updates.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.channel.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_channels_leaveChannel
    extends TLObject
  {
    public static int constructor = -130635115;
    public TLRPC.InputChannel channel;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Updates.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.channel.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_channels_readHistory
    extends TLObject
  {
    public static int constructor = -871347913;
    public TLRPC.InputChannel channel;
    public int max_id;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.channel.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(this.max_id);
    }
  }
  
  public static class TL_channels_readMessageContents
    extends TLObject
  {
    public static int constructor = -357180360;
    public TLRPC.InputChannel channel;
    public ArrayList<Integer> id = new ArrayList();
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.channel.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.id.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        paramAbstractSerializedData.writeInt32(((Integer)this.id.get(j)).intValue());
      }
    }
  }
  
  public static class TL_channels_reportSpam
    extends TLObject
  {
    public static int constructor = -32999408;
    public TLRPC.InputChannel channel;
    public ArrayList<Integer> id = new ArrayList();
    public TLRPC.InputUser user_id;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.channel.serializeToStream(paramAbstractSerializedData);
      this.user_id.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.id.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        paramAbstractSerializedData.writeInt32(((Integer)this.id.get(j)).intValue());
      }
    }
  }
  
  public static class TL_channels_setStickers
    extends TLObject
  {
    public static int constructor = -359881479;
    public TLRPC.InputChannel channel;
    public TLRPC.InputStickerSet stickerset;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.channel.serializeToStream(paramAbstractSerializedData);
      this.stickerset.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_channels_toggleInvites
    extends TLObject
  {
    public static int constructor = NUM;
    public TLRPC.InputChannel channel;
    public boolean enabled;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Updates.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.channel.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeBool(this.enabled);
    }
  }
  
  public static class TL_channels_togglePreHistoryHidden
    extends TLObject
  {
    public static int constructor = -356796084;
    public TLRPC.InputChannel channel;
    public boolean enabled;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Updates.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.channel.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeBool(this.enabled);
    }
  }
  
  public static class TL_channels_toggleSignatures
    extends TLObject
  {
    public static int constructor = 527021574;
    public TLRPC.InputChannel channel;
    public boolean enabled;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Updates.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.channel.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeBool(this.enabled);
    }
  }
  
  public static class TL_channels_updatePinnedMessage
    extends TLObject
  {
    public static int constructor = -NUM;
    public TLRPC.InputChannel channel;
    public int flags;
    public int id;
    public boolean silent;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Updates.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.silent) {}
      for (int i = this.flags | 0x1;; i = this.flags & 0xFFFFFFFE)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        this.channel.serializeToStream(paramAbstractSerializedData);
        paramAbstractSerializedData.writeInt32(this.id);
        return;
      }
    }
  }
  
  public static class TL_channels_updateUsername
    extends TLObject
  {
    public static int constructor = 890549214;
    public TLRPC.InputChannel channel;
    public String username;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.channel.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeString(this.username);
    }
  }
  
  public static class TL_chat
    extends TLRPC.Chat
  {
    public static int constructor = -652419756;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      boolean bool1 = true;
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0)
      {
        bool2 = true;
        this.creator = bool2;
        if ((this.flags & 0x2) == 0) {
          break label212;
        }
        bool2 = true;
        label41:
        this.kicked = bool2;
        if ((this.flags & 0x4) == 0) {
          break label218;
        }
        bool2 = true;
        label59:
        this.left = bool2;
        if ((this.flags & 0x8) == 0) {
          break label224;
        }
        bool2 = true;
        label78:
        this.admins_enabled = bool2;
        if ((this.flags & 0x10) == 0) {
          break label230;
        }
        bool2 = true;
        label97:
        this.admin = bool2;
        if ((this.flags & 0x20) == 0) {
          break label236;
        }
      }
      label212:
      label218:
      label224:
      label230:
      label236:
      for (boolean bool2 = bool1;; bool2 = false)
      {
        this.deactivated = bool2;
        this.id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.title = paramAbstractSerializedData.readString(paramBoolean);
        this.photo = TLRPC.ChatPhoto.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        this.participants_count = paramAbstractSerializedData.readInt32(paramBoolean);
        this.date = paramAbstractSerializedData.readInt32(paramBoolean);
        this.version = paramAbstractSerializedData.readInt32(paramBoolean);
        if ((this.flags & 0x40) != 0) {
          this.migrated_to = TLRPC.InputChannel.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        }
        return;
        bool2 = false;
        break;
        bool2 = false;
        break label41;
        bool2 = false;
        break label59;
        bool2 = false;
        break label78;
        bool2 = false;
        break label97;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.creator)
      {
        i = this.flags | 0x1;
        this.flags = i;
        if (!this.kicked) {
          break label210;
        }
        i = this.flags | 0x2;
        label40:
        this.flags = i;
        if (!this.left) {
          break label221;
        }
        i = this.flags | 0x4;
        label59:
        this.flags = i;
        if (!this.admins_enabled) {
          break label232;
        }
        i = this.flags | 0x8;
        label79:
        this.flags = i;
        if (!this.admin) {
          break label243;
        }
        i = this.flags | 0x10;
        label99:
        this.flags = i;
        if (!this.deactivated) {
          break label254;
        }
      }
      label210:
      label221:
      label232:
      label243:
      label254:
      for (int i = this.flags | 0x20;; i = this.flags & 0xFFFFFFDF)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(this.id);
        paramAbstractSerializedData.writeString(this.title);
        this.photo.serializeToStream(paramAbstractSerializedData);
        paramAbstractSerializedData.writeInt32(this.participants_count);
        paramAbstractSerializedData.writeInt32(this.date);
        paramAbstractSerializedData.writeInt32(this.version);
        if ((this.flags & 0x40) != 0) {
          this.migrated_to.serializeToStream(paramAbstractSerializedData);
        }
        return;
        i = this.flags & 0xFFFFFFFE;
        break;
        i = this.flags & 0xFFFFFFFD;
        break label40;
        i = this.flags & 0xFFFFFFFB;
        break label59;
        i = this.flags & 0xFFFFFFF7;
        break label79;
        i = this.flags & 0xFFFFFFEF;
        break label99;
      }
    }
  }
  
  public static class TL_chatChannelParticipant
    extends TLRPC.ChatParticipant
  {
    public static int constructor = -925415106;
    public TLRPC.ChannelParticipant channelParticipant;
  }
  
  public static class TL_chatEmpty
    extends TLRPC.Chat
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.title = "DELETED";
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.id);
    }
  }
  
  public static class TL_chatForbidden
    extends TLRPC.Chat
  {
    public static int constructor = 120753115;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.title = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.id);
      paramAbstractSerializedData.writeString(this.title);
    }
  }
  
  public static class TL_chatForbidden_old
    extends TLRPC.TL_chatForbidden
  {
    public static int constructor = -83047359;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.title = paramAbstractSerializedData.readString(paramBoolean);
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.id);
      paramAbstractSerializedData.writeString(this.title);
      paramAbstractSerializedData.writeInt32(this.date);
    }
  }
  
  public static class TL_chatFull
    extends TLRPC.ChatFull
  {
    public static int constructor = 771925524;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.participants = TLRPC.ChatParticipants.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.chat_photo = TLRPC.Photo.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.notify_settings = TLRPC.PeerNotifySettings.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.exported_invite = TLRPC.ExportedChatInvite.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
      }
      for (i = 0;; i++)
      {
        TLRPC.BotInfo localBotInfo;
        if (i < j)
        {
          localBotInfo = TLRPC.BotInfo.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localBotInfo != null) {}
        }
        else
        {
          return;
        }
        this.bot_info.add(localBotInfo);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.id);
      this.participants.serializeToStream(paramAbstractSerializedData);
      this.chat_photo.serializeToStream(paramAbstractSerializedData);
      this.notify_settings.serializeToStream(paramAbstractSerializedData);
      this.exported_invite.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.bot_info.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.BotInfo)this.bot_info.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_chatInvite
    extends TLRPC.ChatInvite
  {
    public static int constructor = -613092008;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0)
      {
        bool = true;
        this.channel = bool;
        if ((this.flags & 0x2) == 0) {
          break label164;
        }
        bool = true;
        label36:
        this.broadcast = bool;
        if ((this.flags & 0x4) == 0) {
          break label169;
        }
        bool = true;
        label52:
        this.isPublic = bool;
        if ((this.flags & 0x8) == 0) {
          break label174;
        }
      }
      label164:
      label169:
      label174:
      for (boolean bool = true;; bool = false)
      {
        this.megagroup = bool;
        this.title = paramAbstractSerializedData.readString(paramBoolean);
        this.photo = TLRPC.ChatPhoto.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        this.participants_count = paramAbstractSerializedData.readInt32(paramBoolean);
        if ((this.flags & 0x10) == 0) {
          break label213;
        }
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i == 481674261) {
          break label179;
        }
        if (!paramBoolean) {
          break label213;
        }
        throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        bool = false;
        break;
        bool = false;
        break label36;
        bool = false;
        break label52;
      }
      label179:
      int j = paramAbstractSerializedData.readInt32(paramBoolean);
      for (int i = 0;; i++)
      {
        TLRPC.User localUser;
        if (i < j)
        {
          localUser = TLRPC.User.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localUser != null) {}
        }
        else
        {
          label213:
          return;
        }
        this.participants.add(localUser);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.channel)
      {
        i = this.flags | 0x1;
        this.flags = i;
        if (!this.broadcast) {
          break label184;
        }
        i = this.flags | 0x2;
        label40:
        this.flags = i;
        if (!this.isPublic) {
          break label195;
        }
        i = this.flags | 0x4;
        label59:
        this.flags = i;
        if (!this.megagroup) {
          break label206;
        }
      }
      label184:
      label195:
      label206:
      for (int i = this.flags | 0x8;; i = this.flags & 0xFFFFFFF7)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeString(this.title);
        this.photo.serializeToStream(paramAbstractSerializedData);
        paramAbstractSerializedData.writeInt32(this.participants_count);
        if ((this.flags & 0x10) == 0) {
          return;
        }
        paramAbstractSerializedData.writeInt32(481674261);
        int j = this.participants.size();
        paramAbstractSerializedData.writeInt32(j);
        for (i = 0; i < j; i++) {
          ((TLRPC.User)this.participants.get(i)).serializeToStream(paramAbstractSerializedData);
        }
        i = this.flags & 0xFFFFFFFE;
        break;
        i = this.flags & 0xFFFFFFFD;
        break label40;
        i = this.flags & 0xFFFFFFFB;
        break label59;
      }
    }
  }
  
  public static class TL_chatInviteAlready
    extends TLRPC.ChatInvite
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.chat = TLRPC.Chat.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.chat.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_chatInviteEmpty
    extends TLRPC.ExportedChatInvite
  {
    public static int constructor = NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_chatInviteExported
    extends TLRPC.ExportedChatInvite
  {
    public static int constructor = -64092740;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.link = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.link);
    }
  }
  
  public static class TL_chatLocated
    extends TLObject
  {
    public static int constructor = 909233996;
    public int chat_id;
    public int distance;
    
    public static TL_chatLocated TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_chatLocated", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_chatLocated localTL_chatLocated;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_chatLocated)
      {
        return paramAbstractSerializedData;
        localTL_chatLocated = new TL_chatLocated();
        localTL_chatLocated.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.chat_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.distance = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.chat_id);
      paramAbstractSerializedData.writeInt32(this.distance);
    }
  }
  
  public static class TL_chatParticipant
    extends TLRPC.ChatParticipant
  {
    public static int constructor = -925415106;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.user_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.inviter_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.user_id);
      paramAbstractSerializedData.writeInt32(this.inviter_id);
      paramAbstractSerializedData.writeInt32(this.date);
    }
  }
  
  public static class TL_chatParticipantAdmin
    extends TLRPC.ChatParticipant
  {
    public static int constructor = -489233354;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.user_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.inviter_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.user_id);
      paramAbstractSerializedData.writeInt32(this.inviter_id);
      paramAbstractSerializedData.writeInt32(this.date);
    }
  }
  
  public static class TL_chatParticipantCreator
    extends TLRPC.ChatParticipant
  {
    public static int constructor = -636267638;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.user_id = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.user_id);
    }
  }
  
  public static class TL_chatParticipants
    extends TLRPC.ChatParticipants
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.chat_id = paramAbstractSerializedData.readInt32(paramBoolean);
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      TLRPC.ChatParticipant localChatParticipant;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else
      {
        int j = paramAbstractSerializedData.readInt32(paramBoolean);
        i = 0;
        if (i >= j) {
          break label98;
        }
        localChatParticipant = TLRPC.ChatParticipant.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localChatParticipant != null) {
          break label82;
        }
      }
      for (;;)
      {
        return;
        label82:
        this.participants.add(localChatParticipant);
        i++;
        break;
        label98:
        this.version = paramAbstractSerializedData.readInt32(paramBoolean);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.chat_id);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.participants.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.ChatParticipant)this.participants.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(this.version);
    }
  }
  
  public static class TL_chatParticipantsForbidden
    extends TLRPC.ChatParticipants
  {
    public static int constructor = -57668565;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      this.chat_id = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0) {
        this.self_participant = TLRPC.ChatParticipant.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.flags);
      paramAbstractSerializedData.writeInt32(this.chat_id);
      if ((this.flags & 0x1) != 0) {
        this.self_participant.serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_chatParticipantsForbidden_old
    extends TLRPC.TL_chatParticipantsForbidden
  {
    public static int constructor = 265468810;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.chat_id = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.chat_id);
    }
  }
  
  public static class TL_chatParticipants_old
    extends TLRPC.TL_chatParticipants
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.chat_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.admin_id = paramAbstractSerializedData.readInt32(paramBoolean);
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      TLRPC.ChatParticipant localChatParticipant;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else
      {
        int j = paramAbstractSerializedData.readInt32(paramBoolean);
        i = 0;
        if (i >= j) {
          break label107;
        }
        localChatParticipant = TLRPC.ChatParticipant.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localChatParticipant != null) {
          break label91;
        }
      }
      for (;;)
      {
        return;
        label91:
        this.participants.add(localChatParticipant);
        i++;
        break;
        label107:
        this.version = paramAbstractSerializedData.readInt32(paramBoolean);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.chat_id);
      paramAbstractSerializedData.writeInt32(this.admin_id);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.participants.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.ChatParticipant)this.participants.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(this.version);
    }
  }
  
  public static class TL_chatPhoto
    extends TLRPC.ChatPhoto
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.photo_small = TLRPC.FileLocation.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.photo_big = TLRPC.FileLocation.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.photo_small.serializeToStream(paramAbstractSerializedData);
      this.photo_big.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_chatPhotoEmpty
    extends TLRPC.ChatPhoto
  {
    public static int constructor = 935395612;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_chat_old
    extends TLRPC.TL_chat
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.title = paramAbstractSerializedData.readString(paramBoolean);
      this.photo = TLRPC.ChatPhoto.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.participants_count = paramAbstractSerializedData.readInt32(paramBoolean);
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
      this.left = paramAbstractSerializedData.readBool(paramBoolean);
      this.version = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.id);
      paramAbstractSerializedData.writeString(this.title);
      this.photo.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(this.participants_count);
      paramAbstractSerializedData.writeInt32(this.date);
      paramAbstractSerializedData.writeBool(this.left);
      paramAbstractSerializedData.writeInt32(this.version);
    }
  }
  
  public static class TL_chat_old2
    extends TLRPC.TL_chat
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      boolean bool1 = true;
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0)
      {
        bool2 = true;
        this.creator = bool2;
        if ((this.flags & 0x2) == 0) {
          break label188;
        }
        bool2 = true;
        label41:
        this.kicked = bool2;
        if ((this.flags & 0x4) == 0) {
          break label194;
        }
        bool2 = true;
        label59:
        this.left = bool2;
        if ((this.flags & 0x8) == 0) {
          break label200;
        }
        bool2 = true;
        label78:
        this.admins_enabled = bool2;
        if ((this.flags & 0x10) == 0) {
          break label206;
        }
        bool2 = true;
        label97:
        this.admin = bool2;
        if ((this.flags & 0x20) == 0) {
          break label212;
        }
      }
      label188:
      label194:
      label200:
      label206:
      label212:
      for (boolean bool2 = bool1;; bool2 = false)
      {
        this.deactivated = bool2;
        this.id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.title = paramAbstractSerializedData.readString(paramBoolean);
        this.photo = TLRPC.ChatPhoto.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        this.participants_count = paramAbstractSerializedData.readInt32(paramBoolean);
        this.date = paramAbstractSerializedData.readInt32(paramBoolean);
        this.version = paramAbstractSerializedData.readInt32(paramBoolean);
        return;
        bool2 = false;
        break;
        bool2 = false;
        break label41;
        bool2 = false;
        break label59;
        bool2 = false;
        break label78;
        bool2 = false;
        break label97;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.creator)
      {
        i = this.flags | 0x1;
        this.flags = i;
        if (!this.kicked) {
          break label192;
        }
        i = this.flags | 0x2;
        label40:
        this.flags = i;
        if (!this.left) {
          break label203;
        }
        i = this.flags | 0x4;
        label59:
        this.flags = i;
        if (!this.admins_enabled) {
          break label214;
        }
        i = this.flags | 0x8;
        label79:
        this.flags = i;
        if (!this.admin) {
          break label225;
        }
        i = this.flags | 0x10;
        label99:
        this.flags = i;
        if (!this.deactivated) {
          break label236;
        }
      }
      label192:
      label203:
      label214:
      label225:
      label236:
      for (int i = this.flags | 0x20;; i = this.flags & 0xFFFFFFDF)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(this.id);
        paramAbstractSerializedData.writeString(this.title);
        this.photo.serializeToStream(paramAbstractSerializedData);
        paramAbstractSerializedData.writeInt32(this.participants_count);
        paramAbstractSerializedData.writeInt32(this.date);
        paramAbstractSerializedData.writeInt32(this.version);
        return;
        i = this.flags & 0xFFFFFFFE;
        break;
        i = this.flags & 0xFFFFFFFD;
        break label40;
        i = this.flags & 0xFFFFFFFB;
        break label59;
        i = this.flags & 0xFFFFFFF7;
        break label79;
        i = this.flags & 0xFFFFFFEF;
        break label99;
      }
    }
  }
  
  public static class TL_config
    extends TLObject
  {
    public static int constructor = -NUM;
    public int call_connect_timeout_ms;
    public int call_packet_timeout_ms;
    public int call_receive_timeout_ms;
    public int call_ring_timeout_ms;
    public int channels_read_media_period;
    public int chat_size_max;
    public int date;
    public ArrayList<TLRPC.TL_dcOption> dc_options = new ArrayList();
    public boolean default_p2p_contacts;
    public int edit_time_limit;
    public int expires;
    public int flags;
    public int forwarded_count_max;
    public boolean ignore_phone_entities;
    public int lang_pack_version;
    public String me_url_prefix;
    public int megagroup_size_max;
    public int notify_cloud_delay_ms;
    public int notify_default_delay_ms;
    public int offline_blur_timeout_ms;
    public int offline_idle_timeout_ms;
    public int online_cloud_timeout_ms;
    public int online_update_period_ms;
    public boolean phonecalls_enabled;
    public int pinned_dialogs_count_max;
    public boolean preload_featured_stickers;
    public int push_chat_limit;
    public int push_chat_period_ms;
    public int rating_e_decay;
    public boolean revoke_pm_inbox;
    public int revoke_pm_time_limit;
    public int revoke_time_limit;
    public int saved_gifs_limit;
    public int stickers_faved_limit;
    public int stickers_recent_limit;
    public String suggested_lang_code;
    public boolean test_mode;
    public int this_dc;
    public int tmp_sessions;
    
    public static TL_config TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_config", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_config localTL_config;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_config)
      {
        return paramAbstractSerializedData;
        localTL_config = new TL_config();
        localTL_config.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x2) != 0)
      {
        bool = true;
        this.phonecalls_enabled = bool;
        if ((this.flags & 0x8) == 0) {
          break label177;
        }
        bool = true;
        label37:
        this.default_p2p_contacts = bool;
        if ((this.flags & 0x10) == 0) {
          break label182;
        }
        bool = true;
        label54:
        this.preload_featured_stickers = bool;
        if ((this.flags & 0x20) == 0) {
          break label187;
        }
        bool = true;
        label71:
        this.ignore_phone_entities = bool;
        if ((this.flags & 0x40) == 0) {
          break label192;
        }
      }
      label177:
      label182:
      label187:
      label192:
      for (boolean bool = true;; bool = false)
      {
        this.revoke_pm_inbox = bool;
        this.date = paramAbstractSerializedData.readInt32(paramBoolean);
        this.expires = paramAbstractSerializedData.readInt32(paramBoolean);
        this.test_mode = paramAbstractSerializedData.readBool(paramBoolean);
        this.this_dc = paramAbstractSerializedData.readInt32(paramBoolean);
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i == 481674261) {
          break label197;
        }
        if (!paramBoolean) {
          break label231;
        }
        throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        bool = false;
        break;
        bool = false;
        break label37;
        bool = false;
        break label54;
        bool = false;
        break label71;
      }
      label197:
      int j = paramAbstractSerializedData.readInt32(paramBoolean);
      int i = 0;
      TLRPC.TL_dcOption localTL_dcOption;
      if (i < j)
      {
        localTL_dcOption = TLRPC.TL_dcOption.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localTL_dcOption != null) {}
      }
      for (;;)
      {
        label231:
        return;
        this.dc_options.add(localTL_dcOption);
        i++;
        break;
        this.chat_size_max = paramAbstractSerializedData.readInt32(paramBoolean);
        this.megagroup_size_max = paramAbstractSerializedData.readInt32(paramBoolean);
        this.forwarded_count_max = paramAbstractSerializedData.readInt32(paramBoolean);
        this.online_update_period_ms = paramAbstractSerializedData.readInt32(paramBoolean);
        this.offline_blur_timeout_ms = paramAbstractSerializedData.readInt32(paramBoolean);
        this.offline_idle_timeout_ms = paramAbstractSerializedData.readInt32(paramBoolean);
        this.online_cloud_timeout_ms = paramAbstractSerializedData.readInt32(paramBoolean);
        this.notify_cloud_delay_ms = paramAbstractSerializedData.readInt32(paramBoolean);
        this.notify_default_delay_ms = paramAbstractSerializedData.readInt32(paramBoolean);
        this.push_chat_period_ms = paramAbstractSerializedData.readInt32(paramBoolean);
        this.push_chat_limit = paramAbstractSerializedData.readInt32(paramBoolean);
        this.saved_gifs_limit = paramAbstractSerializedData.readInt32(paramBoolean);
        this.edit_time_limit = paramAbstractSerializedData.readInt32(paramBoolean);
        this.revoke_time_limit = paramAbstractSerializedData.readInt32(paramBoolean);
        this.revoke_pm_time_limit = paramAbstractSerializedData.readInt32(paramBoolean);
        this.rating_e_decay = paramAbstractSerializedData.readInt32(paramBoolean);
        this.stickers_recent_limit = paramAbstractSerializedData.readInt32(paramBoolean);
        this.stickers_faved_limit = paramAbstractSerializedData.readInt32(paramBoolean);
        this.channels_read_media_period = paramAbstractSerializedData.readInt32(paramBoolean);
        if ((this.flags & 0x1) != 0) {
          this.tmp_sessions = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        this.pinned_dialogs_count_max = paramAbstractSerializedData.readInt32(paramBoolean);
        this.call_receive_timeout_ms = paramAbstractSerializedData.readInt32(paramBoolean);
        this.call_ring_timeout_ms = paramAbstractSerializedData.readInt32(paramBoolean);
        this.call_connect_timeout_ms = paramAbstractSerializedData.readInt32(paramBoolean);
        this.call_packet_timeout_ms = paramAbstractSerializedData.readInt32(paramBoolean);
        this.me_url_prefix = paramAbstractSerializedData.readString(paramBoolean);
        if ((this.flags & 0x4) != 0) {
          this.suggested_lang_code = paramAbstractSerializedData.readString(paramBoolean);
        }
        if ((this.flags & 0x4) != 0) {
          this.lang_pack_version = paramAbstractSerializedData.readInt32(paramBoolean);
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.phonecalls_enabled)
      {
        i = this.flags | 0x2;
        this.flags = i;
        if (!this.default_p2p_contacts) {
          break label204;
        }
        i = this.flags | 0x8;
        label41:
        this.flags = i;
        if (!this.preload_featured_stickers) {
          break label215;
        }
        i = this.flags | 0x10;
        label61:
        this.flags = i;
        if (!this.ignore_phone_entities) {
          break label226;
        }
        i = this.flags | 0x20;
        label81:
        this.flags = i;
        if (!this.revoke_pm_inbox) {
          break label237;
        }
      }
      label204:
      label215:
      label226:
      label237:
      for (int i = this.flags | 0x40;; i = this.flags & 0xFFFFFFBF)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(this.date);
        paramAbstractSerializedData.writeInt32(this.expires);
        paramAbstractSerializedData.writeBool(this.test_mode);
        paramAbstractSerializedData.writeInt32(this.this_dc);
        paramAbstractSerializedData.writeInt32(481674261);
        int j = this.dc_options.size();
        paramAbstractSerializedData.writeInt32(j);
        for (i = 0; i < j; i++) {
          ((TLRPC.TL_dcOption)this.dc_options.get(i)).serializeToStream(paramAbstractSerializedData);
        }
        i = this.flags & 0xFFFFFFFD;
        break;
        i = this.flags & 0xFFFFFFF7;
        break label41;
        i = this.flags & 0xFFFFFFEF;
        break label61;
        i = this.flags & 0xFFFFFFDF;
        break label81;
      }
      paramAbstractSerializedData.writeInt32(this.chat_size_max);
      paramAbstractSerializedData.writeInt32(this.megagroup_size_max);
      paramAbstractSerializedData.writeInt32(this.forwarded_count_max);
      paramAbstractSerializedData.writeInt32(this.online_update_period_ms);
      paramAbstractSerializedData.writeInt32(this.offline_blur_timeout_ms);
      paramAbstractSerializedData.writeInt32(this.offline_idle_timeout_ms);
      paramAbstractSerializedData.writeInt32(this.online_cloud_timeout_ms);
      paramAbstractSerializedData.writeInt32(this.notify_cloud_delay_ms);
      paramAbstractSerializedData.writeInt32(this.notify_default_delay_ms);
      paramAbstractSerializedData.writeInt32(this.push_chat_period_ms);
      paramAbstractSerializedData.writeInt32(this.push_chat_limit);
      paramAbstractSerializedData.writeInt32(this.saved_gifs_limit);
      paramAbstractSerializedData.writeInt32(this.edit_time_limit);
      paramAbstractSerializedData.writeInt32(this.revoke_time_limit);
      paramAbstractSerializedData.writeInt32(this.revoke_pm_time_limit);
      paramAbstractSerializedData.writeInt32(this.rating_e_decay);
      paramAbstractSerializedData.writeInt32(this.stickers_recent_limit);
      paramAbstractSerializedData.writeInt32(this.stickers_faved_limit);
      paramAbstractSerializedData.writeInt32(this.channels_read_media_period);
      if ((this.flags & 0x1) != 0) {
        paramAbstractSerializedData.writeInt32(this.tmp_sessions);
      }
      paramAbstractSerializedData.writeInt32(this.pinned_dialogs_count_max);
      paramAbstractSerializedData.writeInt32(this.call_receive_timeout_ms);
      paramAbstractSerializedData.writeInt32(this.call_ring_timeout_ms);
      paramAbstractSerializedData.writeInt32(this.call_connect_timeout_ms);
      paramAbstractSerializedData.writeInt32(this.call_packet_timeout_ms);
      paramAbstractSerializedData.writeString(this.me_url_prefix);
      if ((this.flags & 0x4) != 0) {
        paramAbstractSerializedData.writeString(this.suggested_lang_code);
      }
      if ((this.flags & 0x4) != 0) {
        paramAbstractSerializedData.writeInt32(this.lang_pack_version);
      }
    }
  }
  
  public static class TL_contact
    extends TLObject
  {
    public static int constructor = -116274796;
    public boolean mutual;
    public int user_id;
    
    public static TL_contact TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_contact", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_contact localTL_contact;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_contact)
      {
        return paramAbstractSerializedData;
        localTL_contact = new TL_contact();
        localTL_contact.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.user_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.mutual = paramAbstractSerializedData.readBool(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.user_id);
      paramAbstractSerializedData.writeBool(this.mutual);
    }
  }
  
  public static class TL_contactBlocked
    extends TLObject
  {
    public static int constructor = NUM;
    public int date;
    public int user_id;
    
    public static TL_contactBlocked TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_contactBlocked", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_contactBlocked localTL_contactBlocked;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_contactBlocked)
      {
        return paramAbstractSerializedData;
        localTL_contactBlocked = new TL_contactBlocked();
        localTL_contactBlocked.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.user_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.user_id);
      paramAbstractSerializedData.writeInt32(this.date);
    }
  }
  
  public static class TL_contactFound
    extends TLObject
  {
    public static int constructor = -360210539;
    public int user_id;
    
    public static TL_contactFound TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_contactFound", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_contactFound localTL_contactFound;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_contactFound)
      {
        return paramAbstractSerializedData;
        localTL_contactFound = new TL_contactFound();
        localTL_contactFound.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.user_id = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.user_id);
    }
  }
  
  public static class TL_contactLinkContact
    extends TLRPC.ContactLink
  {
    public static int constructor = -721239344;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_contactLinkHasPhone
    extends TLRPC.ContactLink
  {
    public static int constructor = 646922073;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_contactLinkNone
    extends TLRPC.ContactLink
  {
    public static int constructor = -17968211;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_contactLinkUnknown
    extends TLRPC.ContactLink
  {
    public static int constructor = NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_contactStatus
    extends TLObject
  {
    public static int constructor = -748155807;
    public TLRPC.UserStatus status;
    public int user_id;
    
    public static TL_contactStatus TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_contactStatus", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_contactStatus localTL_contactStatus;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_contactStatus)
      {
        return paramAbstractSerializedData;
        localTL_contactStatus = new TL_contactStatus();
        localTL_contactStatus.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.user_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.status = TLRPC.UserStatus.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.user_id);
      this.status.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_contacts_block
    extends TLObject
  {
    public static int constructor = 858475004;
    public TLRPC.InputUser id;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.id.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_contacts_blocked
    extends TLRPC.contacts_Blocked
  {
    public static int constructor = 471043349;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      Object localObject;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else
      {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
        i = 0;
        if (i >= j) {
          break label89;
        }
        localObject = TLRPC.TL_contactBlocked.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localObject != null) {
          break label73;
        }
      }
      label73:
      label89:
      label175:
      for (;;)
      {
        return;
        this.blocked.add(localObject);
        i++;
        break;
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i != 481674261)
        {
          if (paramBoolean) {
            throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
          }
        }
        else
        {
          j = paramAbstractSerializedData.readInt32(paramBoolean);
          for (i = 0;; i++)
          {
            if (i >= j) {
              break label175;
            }
            localObject = TLRPC.User.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
            if (localObject == null) {
              break;
            }
            this.users.add(localObject);
          }
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.blocked.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.TL_contactBlocked)this.blocked.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.users.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        ((TLRPC.User)this.users.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_contacts_blockedSlice
    extends TLRPC.contacts_Blocked
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.count = paramAbstractSerializedData.readInt32(paramBoolean);
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      Object localObject;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else
      {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
        i = 0;
        if (i >= j) {
          break label98;
        }
        localObject = TLRPC.TL_contactBlocked.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localObject != null) {
          break label82;
        }
      }
      label82:
      label98:
      label184:
      for (;;)
      {
        return;
        this.blocked.add(localObject);
        i++;
        break;
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i != 481674261)
        {
          if (paramBoolean) {
            throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
          }
        }
        else
        {
          j = paramAbstractSerializedData.readInt32(paramBoolean);
          for (i = 0;; i++)
          {
            if (i >= j) {
              break label184;
            }
            localObject = TLRPC.User.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
            if (localObject == null) {
              break;
            }
            this.users.add(localObject);
          }
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.count);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.blocked.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.TL_contactBlocked)this.blocked.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.users.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        ((TLRPC.User)this.users.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_contacts_contacts
    extends TLRPC.contacts_Contacts
  {
    public static int constructor = -353862078;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      Object localObject;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else
      {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
        i = 0;
        if (i >= j) {
          break label89;
        }
        localObject = TLRPC.TL_contact.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localObject != null) {
          break label73;
        }
      }
      label73:
      label89:
      label184:
      for (;;)
      {
        return;
        this.contacts.add(localObject);
        i++;
        break;
        this.saved_count = paramAbstractSerializedData.readInt32(paramBoolean);
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i != 481674261)
        {
          if (paramBoolean) {
            throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
          }
        }
        else
        {
          j = paramAbstractSerializedData.readInt32(paramBoolean);
          for (i = 0;; i++)
          {
            if (i >= j) {
              break label184;
            }
            localObject = TLRPC.User.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
            if (localObject == null) {
              break;
            }
            this.users.add(localObject);
          }
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.contacts.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.TL_contact)this.contacts.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(this.saved_count);
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.users.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        ((TLRPC.User)this.users.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_contacts_contactsNotModified
    extends TLRPC.contacts_Contacts
  {
    public static int constructor = -NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_contacts_deleteContact
    extends TLObject
  {
    public static int constructor = -NUM;
    public TLRPC.InputUser id;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_contacts_link.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.id.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_contacts_deleteContacts
    extends TLObject
  {
    public static int constructor = NUM;
    public ArrayList<TLRPC.InputUser> id = new ArrayList();
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.id.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.InputUser)this.id.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_contacts_exportCard
    extends TLObject
  {
    public static int constructor = -NUM;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      TLRPC.Vector localVector = new TLRPC.Vector();
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      for (paramInt = 0; paramInt < i; paramInt++) {
        localVector.objects.add(Integer.valueOf(paramAbstractSerializedData.readInt32(paramBoolean)));
      }
      return localVector;
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_contacts_found
    extends TLObject
  {
    public static int constructor = -NUM;
    public ArrayList<TLRPC.Chat> chats = new ArrayList();
    public ArrayList<TLRPC.Peer> my_results = new ArrayList();
    public ArrayList<TLRPC.Peer> results = new ArrayList();
    public ArrayList<TLRPC.User> users = new ArrayList();
    
    public static TL_contacts_found TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_contacts_found", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_contacts_found localTL_contacts_found;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_contacts_found)
      {
        return paramAbstractSerializedData;
        localTL_contacts_found = new TL_contacts_found();
        localTL_contacts_found.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      Object localObject;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else
      {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
        i = 0;
        if (i >= j) {
          break label89;
        }
        localObject = TLRPC.Peer.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localObject != null) {
          break label73;
        }
      }
      label73:
      label89:
      label177:
      label265:
      label351:
      for (;;)
      {
        return;
        this.my_results.add(localObject);
        i++;
        break;
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i != 481674261)
        {
          if (paramBoolean) {
            throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
          }
        }
        else
        {
          j = paramAbstractSerializedData.readInt32(paramBoolean);
          for (i = 0;; i++)
          {
            if (i >= j) {
              break label177;
            }
            localObject = TLRPC.Peer.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
            if (localObject == null) {
              break;
            }
            this.results.add(localObject);
          }
          i = paramAbstractSerializedData.readInt32(paramBoolean);
          if (i != 481674261)
          {
            if (paramBoolean) {
              throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
            }
          }
          else
          {
            j = paramAbstractSerializedData.readInt32(paramBoolean);
            for (i = 0;; i++)
            {
              if (i >= j) {
                break label265;
              }
              localObject = TLRPC.Chat.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
              if (localObject == null) {
                break;
              }
              this.chats.add(localObject);
            }
            i = paramAbstractSerializedData.readInt32(paramBoolean);
            if (i != 481674261)
            {
              if (paramBoolean) {
                throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
              }
            }
            else
            {
              j = paramAbstractSerializedData.readInt32(paramBoolean);
              for (i = 0;; i++)
              {
                if (i >= j) {
                  break label351;
                }
                localObject = TLRPC.User.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
                if (localObject == null) {
                  break;
                }
                this.users.add(localObject);
              }
            }
          }
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.my_results.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.Peer)this.my_results.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.results.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        ((TLRPC.Peer)this.results.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.chats.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        ((TLRPC.Chat)this.chats.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.users.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        ((TLRPC.User)this.users.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_contacts_getBlocked
    extends TLObject
  {
    public static int constructor = -176409329;
    public int limit;
    public int offset;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.contacts_Blocked.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.offset);
      paramAbstractSerializedData.writeInt32(this.limit);
    }
  }
  
  public static class TL_contacts_getContacts
    extends TLObject
  {
    public static int constructor = -NUM;
    public int hash;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.contacts_Contacts.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.hash);
    }
  }
  
  public static class TL_contacts_getStatuses
    extends TLObject
  {
    public static int constructor = -995929106;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      TLRPC.Vector localVector = new TLRPC.Vector();
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      for (paramInt = 0;; paramInt++)
      {
        TLRPC.TL_contactStatus localTL_contactStatus;
        if (paramInt < i)
        {
          localTL_contactStatus = TLRPC.TL_contactStatus.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localTL_contactStatus != null) {}
        }
        else
        {
          return localVector;
        }
        localVector.objects.add(localTL_contactStatus);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_contacts_getTopPeers
    extends TLObject
  {
    public static int constructor = -728224331;
    public boolean bots_inline;
    public boolean bots_pm;
    public boolean channels;
    public boolean correspondents;
    public int flags;
    public boolean groups;
    public int hash;
    public int limit;
    public int offset;
    public boolean phone_calls;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.contacts_TopPeers.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.correspondents)
      {
        i = this.flags | 0x1;
        this.flags = i;
        if (!this.bots_pm) {
          break label169;
        }
        i = this.flags | 0x2;
        label40:
        this.flags = i;
        if (!this.bots_inline) {
          break label180;
        }
        i = this.flags | 0x4;
        label59:
        this.flags = i;
        if (!this.phone_calls) {
          break label191;
        }
        i = this.flags | 0x8;
        label79:
        this.flags = i;
        if (!this.groups) {
          break label202;
        }
        i = this.flags | 0x400;
        label100:
        this.flags = i;
        if (!this.channels) {
          break label214;
        }
      }
      label169:
      label180:
      label191:
      label202:
      label214:
      for (int i = this.flags | 0x8000;; i = this.flags & 0xFFFF7FFF)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(this.offset);
        paramAbstractSerializedData.writeInt32(this.limit);
        paramAbstractSerializedData.writeInt32(this.hash);
        return;
        i = this.flags & 0xFFFFFFFE;
        break;
        i = this.flags & 0xFFFFFFFD;
        break label40;
        i = this.flags & 0xFFFFFFFB;
        break label59;
        i = this.flags & 0xFFFFFFF7;
        break label79;
        i = this.flags & 0xFBFF;
        break label100;
      }
    }
  }
  
  public static class TL_contacts_importCard
    extends TLObject
  {
    public static int constructor = NUM;
    public ArrayList<Integer> export_card = new ArrayList();
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.User.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.export_card.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        paramAbstractSerializedData.writeInt32(((Integer)this.export_card.get(j)).intValue());
      }
    }
  }
  
  public static class TL_contacts_importContacts
    extends TLObject
  {
    public static int constructor = 746589157;
    public ArrayList<TLRPC.TL_inputPhoneContact> contacts = new ArrayList();
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_contacts_importedContacts.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.contacts.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.TL_inputPhoneContact)this.contacts.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_contacts_importedContacts
    extends TLObject
  {
    public static int constructor = NUM;
    public ArrayList<TLRPC.TL_importedContact> imported = new ArrayList();
    public ArrayList<TLRPC.TL_popularContact> popular_invites = new ArrayList();
    public ArrayList<Long> retry_contacts = new ArrayList();
    public ArrayList<TLRPC.User> users = new ArrayList();
    
    public static TL_contacts_importedContacts TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_contacts_importedContacts", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_contacts_importedContacts localTL_contacts_importedContacts;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_contacts_importedContacts)
      {
        return paramAbstractSerializedData;
        localTL_contacts_importedContacts = new TL_contacts_importedContacts();
        localTL_contacts_importedContacts.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      Object localObject;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else
      {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
        i = 0;
        if (i >= j) {
          break label89;
        }
        localObject = TLRPC.TL_importedContact.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localObject != null) {
          break label73;
        }
      }
      label73:
      label89:
      label177:
      label340:
      for (;;)
      {
        return;
        this.imported.add(localObject);
        i++;
        break;
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i != 481674261)
        {
          if (paramBoolean) {
            throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
          }
        }
        else
        {
          j = paramAbstractSerializedData.readInt32(paramBoolean);
          for (i = 0;; i++)
          {
            if (i >= j) {
              break label177;
            }
            localObject = TLRPC.TL_popularContact.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
            if (localObject == null) {
              break;
            }
            this.popular_invites.add(localObject);
          }
          i = paramAbstractSerializedData.readInt32(paramBoolean);
          if (i != 481674261)
          {
            if (paramBoolean) {
              throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
            }
          }
          else
          {
            j = paramAbstractSerializedData.readInt32(paramBoolean);
            for (i = 0; i < j; i++) {
              this.retry_contacts.add(Long.valueOf(paramAbstractSerializedData.readInt64(paramBoolean)));
            }
            i = paramAbstractSerializedData.readInt32(paramBoolean);
            if (i != 481674261)
            {
              if (paramBoolean) {
                throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
              }
            }
            else
            {
              j = paramAbstractSerializedData.readInt32(paramBoolean);
              for (i = 0;; i++)
              {
                if (i >= j) {
                  break label340;
                }
                localObject = TLRPC.User.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
                if (localObject == null) {
                  break;
                }
                this.users.add(localObject);
              }
            }
          }
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.imported.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.TL_importedContact)this.imported.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.popular_invites.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        ((TLRPC.TL_popularContact)this.popular_invites.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.retry_contacts.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        paramAbstractSerializedData.writeInt64(((Long)this.retry_contacts.get(j)).longValue());
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.users.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        ((TLRPC.User)this.users.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_contacts_link
    extends TLObject
  {
    public static int constructor = 986597452;
    public TLRPC.ContactLink foreign_link;
    public TLRPC.ContactLink my_link;
    public TLRPC.User user;
    
    public static TL_contacts_link TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_contacts_link", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_contacts_link localTL_contacts_link;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_contacts_link)
      {
        return paramAbstractSerializedData;
        localTL_contacts_link = new TL_contacts_link();
        localTL_contacts_link.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.my_link = TLRPC.ContactLink.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.foreign_link = TLRPC.ContactLink.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.user = TLRPC.User.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.my_link.serializeToStream(paramAbstractSerializedData);
      this.foreign_link.serializeToStream(paramAbstractSerializedData);
      this.user.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_contacts_resetSaved
    extends TLObject
  {
    public static int constructor = -NUM;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_contacts_resetTopPeerRating
    extends TLObject
  {
    public static int constructor = 451113900;
    public TLRPC.TopPeerCategory category;
    public TLRPC.InputPeer peer;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.category.serializeToStream(paramAbstractSerializedData);
      this.peer.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_contacts_resolveUsername
    extends TLObject
  {
    public static int constructor = -113456221;
    public String username;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_contacts_resolvedPeer.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.username);
    }
  }
  
  public static class TL_contacts_resolvedPeer
    extends TLObject
  {
    public static int constructor = NUM;
    public ArrayList<TLRPC.Chat> chats = new ArrayList();
    public TLRPC.Peer peer;
    public ArrayList<TLRPC.User> users = new ArrayList();
    
    public static TL_contacts_resolvedPeer TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_contacts_resolvedPeer", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_contacts_resolvedPeer localTL_contacts_resolvedPeer;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_contacts_resolvedPeer)
      {
        return paramAbstractSerializedData;
        localTL_contacts_resolvedPeer = new TL_contacts_resolvedPeer();
        localTL_contacts_resolvedPeer.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.peer = TLRPC.Peer.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      Object localObject;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else
      {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
        i = 0;
        if (i >= j) {
          break label103;
        }
        localObject = TLRPC.Chat.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localObject != null) {
          break label87;
        }
      }
      label87:
      label103:
      label189:
      for (;;)
      {
        return;
        this.chats.add(localObject);
        i++;
        break;
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i != 481674261)
        {
          if (paramBoolean) {
            throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
          }
        }
        else
        {
          j = paramAbstractSerializedData.readInt32(paramBoolean);
          for (i = 0;; i++)
          {
            if (i >= j) {
              break label189;
            }
            localObject = TLRPC.User.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
            if (localObject == null) {
              break;
            }
            this.users.add(localObject);
          }
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.peer.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.chats.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.Chat)this.chats.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.users.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        ((TLRPC.User)this.users.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_contacts_search
    extends TLObject
  {
    public static int constructor = 301470424;
    public int limit;
    public String q;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_contacts_found.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.q);
      paramAbstractSerializedData.writeInt32(this.limit);
    }
  }
  
  public static class TL_contacts_topPeers
    extends TLRPC.contacts_TopPeers
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      Object localObject;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else
      {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
        i = 0;
        if (i >= j) {
          break label89;
        }
        localObject = TLRPC.TL_topPeerCategoryPeers.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localObject != null) {
          break label73;
        }
      }
      label73:
      label89:
      label177:
      label263:
      for (;;)
      {
        return;
        this.categories.add(localObject);
        i++;
        break;
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i != 481674261)
        {
          if (paramBoolean) {
            throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
          }
        }
        else
        {
          j = paramAbstractSerializedData.readInt32(paramBoolean);
          for (i = 0;; i++)
          {
            if (i >= j) {
              break label177;
            }
            localObject = TLRPC.Chat.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
            if (localObject == null) {
              break;
            }
            this.chats.add(localObject);
          }
          i = paramAbstractSerializedData.readInt32(paramBoolean);
          if (i != 481674261)
          {
            if (paramBoolean) {
              throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
            }
          }
          else
          {
            j = paramAbstractSerializedData.readInt32(paramBoolean);
            for (i = 0;; i++)
            {
              if (i >= j) {
                break label263;
              }
              localObject = TLRPC.User.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
              if (localObject == null) {
                break;
              }
              this.users.add(localObject);
            }
          }
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.categories.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.TL_topPeerCategoryPeers)this.categories.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.chats.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        ((TLRPC.Chat)this.chats.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.users.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        ((TLRPC.User)this.users.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_contacts_topPeersNotModified
    extends TLRPC.contacts_TopPeers
  {
    public static int constructor = -567906571;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_contacts_unblock
    extends TLObject
  {
    public static int constructor = -448724803;
    public TLRPC.InputUser id;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.id.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_dataJSON
    extends TLObject
  {
    public static int constructor = NUM;
    public String data;
    
    public static TL_dataJSON TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_dataJSON", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_dataJSON localTL_dataJSON;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_dataJSON)
      {
        return paramAbstractSerializedData;
        localTL_dataJSON = new TL_dataJSON();
        localTL_dataJSON.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.data = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.data);
    }
  }
  
  public static class TL_dcOption
    extends TLObject
  {
    public static int constructor = 98092748;
    public boolean cdn;
    public int flags;
    public int id;
    public String ip_address;
    public boolean ipv6;
    public boolean isStatic;
    public boolean media_only;
    public int port;
    public boolean tcpo_only;
    
    public static TL_dcOption TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_dcOption", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_dcOption localTL_dcOption;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_dcOption)
      {
        return paramAbstractSerializedData;
        localTL_dcOption = new TL_dcOption();
        localTL_dcOption.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      boolean bool1 = true;
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0)
      {
        bool2 = true;
        this.ipv6 = bool2;
        if ((this.flags & 0x2) == 0) {
          break label137;
        }
        bool2 = true;
        label41:
        this.media_only = bool2;
        if ((this.flags & 0x4) == 0) {
          break label143;
        }
        bool2 = true;
        label59:
        this.tcpo_only = bool2;
        if ((this.flags & 0x8) == 0) {
          break label149;
        }
        bool2 = true;
        label78:
        this.cdn = bool2;
        if ((this.flags & 0x10) == 0) {
          break label155;
        }
      }
      label137:
      label143:
      label149:
      label155:
      for (boolean bool2 = bool1;; bool2 = false)
      {
        this.isStatic = bool2;
        this.id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.ip_address = paramAbstractSerializedData.readString(paramBoolean);
        this.port = paramAbstractSerializedData.readInt32(paramBoolean);
        return;
        bool2 = false;
        break;
        bool2 = false;
        break label41;
        bool2 = false;
        break label59;
        bool2 = false;
        break label78;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.ipv6)
      {
        i = this.flags | 0x1;
        this.flags = i;
        if (!this.media_only) {
          break label148;
        }
        i = this.flags | 0x2;
        label40:
        this.flags = i;
        if (!this.tcpo_only) {
          break label159;
        }
        i = this.flags | 0x4;
        label59:
        this.flags = i;
        if (!this.cdn) {
          break label170;
        }
        i = this.flags | 0x8;
        label79:
        this.flags = i;
        if (!this.isStatic) {
          break label181;
        }
      }
      label148:
      label159:
      label170:
      label181:
      for (int i = this.flags | 0x10;; i = this.flags & 0xFFFFFFEF)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(this.id);
        paramAbstractSerializedData.writeString(this.ip_address);
        paramAbstractSerializedData.writeInt32(this.port);
        return;
        i = this.flags & 0xFFFFFFFE;
        break;
        i = this.flags & 0xFFFFFFFD;
        break label40;
        i = this.flags & 0xFFFFFFFB;
        break label59;
        i = this.flags & 0xFFFFFFF7;
        break label79;
      }
    }
  }
  
  public static class TL_decryptedMessage
    extends TLRPC.DecryptedMessage
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      this.random_id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.ttl = paramAbstractSerializedData.readInt32(paramBoolean);
      this.message = paramAbstractSerializedData.readString(paramBoolean);
      if ((this.flags & 0x200) != 0) {
        this.media = TLRPC.DecryptedMessageMedia.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      }
      int i;
      TLRPC.MessageEntity localMessageEntity;
      if ((this.flags & 0x80) != 0)
      {
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i != 481674261)
        {
          if (paramBoolean) {
            throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
          }
        }
        else
        {
          int j = paramAbstractSerializedData.readInt32(paramBoolean);
          i = 0;
          if (i >= j) {
            break label161;
          }
          localMessageEntity = TLRPC.MessageEntity.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localMessageEntity != null) {
            break label145;
          }
        }
      }
      for (;;)
      {
        return;
        label145:
        this.entities.add(localMessageEntity);
        i++;
        break;
        label161:
        if ((this.flags & 0x800) != 0) {
          this.via_bot_name = paramAbstractSerializedData.readString(paramBoolean);
        }
        if ((this.flags & 0x8) != 0) {
          this.reply_to_random_id = paramAbstractSerializedData.readInt64(paramBoolean);
        }
        if ((this.flags & 0x20000) != 0) {
          this.grouped_id = paramAbstractSerializedData.readInt64(paramBoolean);
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.flags);
      paramAbstractSerializedData.writeInt64(this.random_id);
      paramAbstractSerializedData.writeInt32(this.ttl);
      paramAbstractSerializedData.writeString(this.message);
      if ((this.flags & 0x200) != 0) {
        this.media.serializeToStream(paramAbstractSerializedData);
      }
      if ((this.flags & 0x80) != 0)
      {
        paramAbstractSerializedData.writeInt32(481674261);
        int i = this.entities.size();
        paramAbstractSerializedData.writeInt32(i);
        for (int j = 0; j < i; j++) {
          ((TLRPC.MessageEntity)this.entities.get(j)).serializeToStream(paramAbstractSerializedData);
        }
      }
      if ((this.flags & 0x800) != 0) {
        paramAbstractSerializedData.writeString(this.via_bot_name);
      }
      if ((this.flags & 0x8) != 0) {
        paramAbstractSerializedData.writeInt64(this.reply_to_random_id);
      }
      if ((this.flags & 0x20000) != 0) {
        paramAbstractSerializedData.writeInt64(this.grouped_id);
      }
    }
  }
  
  public static class TL_decryptedMessageActionAbortKey
    extends TLRPC.DecryptedMessageAction
  {
    public static int constructor = -586814357;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.exchange_id = paramAbstractSerializedData.readInt64(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.exchange_id);
    }
  }
  
  public static class TL_decryptedMessageActionAcceptKey
    extends TLRPC.DecryptedMessageAction
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.exchange_id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.g_b = paramAbstractSerializedData.readByteArray(paramBoolean);
      this.key_fingerprint = paramAbstractSerializedData.readInt64(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.exchange_id);
      paramAbstractSerializedData.writeByteArray(this.g_b);
      paramAbstractSerializedData.writeInt64(this.key_fingerprint);
    }
  }
  
  public static class TL_decryptedMessageActionCommitKey
    extends TLRPC.DecryptedMessageAction
  {
    public static int constructor = -332526693;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.exchange_id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.key_fingerprint = paramAbstractSerializedData.readInt64(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.exchange_id);
      paramAbstractSerializedData.writeInt64(this.key_fingerprint);
    }
  }
  
  public static class TL_decryptedMessageActionDeleteMessages
    extends TLRPC.DecryptedMessageAction
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else
      {
        int j = paramAbstractSerializedData.readInt32(paramBoolean);
        for (i = 0; i < j; i++) {
          this.random_ids.add(Long.valueOf(paramAbstractSerializedData.readInt64(paramBoolean)));
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.random_ids.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        paramAbstractSerializedData.writeInt64(((Long)this.random_ids.get(j)).longValue());
      }
    }
  }
  
  public static class TL_decryptedMessageActionFlushHistory
    extends TLRPC.DecryptedMessageAction
  {
    public static int constructor = NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_decryptedMessageActionNoop
    extends TLRPC.DecryptedMessageAction
  {
    public static int constructor = -NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_decryptedMessageActionNotifyLayer
    extends TLRPC.DecryptedMessageAction
  {
    public static int constructor = -217806717;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.layer = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.layer);
    }
  }
  
  public static class TL_decryptedMessageActionReadMessages
    extends TLRPC.DecryptedMessageAction
  {
    public static int constructor = 206520510;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else
      {
        int j = paramAbstractSerializedData.readInt32(paramBoolean);
        for (i = 0; i < j; i++) {
          this.random_ids.add(Long.valueOf(paramAbstractSerializedData.readInt64(paramBoolean)));
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.random_ids.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        paramAbstractSerializedData.writeInt64(((Long)this.random_ids.get(j)).longValue());
      }
    }
  }
  
  public static class TL_decryptedMessageActionRequestKey
    extends TLRPC.DecryptedMessageAction
  {
    public static int constructor = -204906213;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.exchange_id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.g_a = paramAbstractSerializedData.readByteArray(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.exchange_id);
      paramAbstractSerializedData.writeByteArray(this.g_a);
    }
  }
  
  public static class TL_decryptedMessageActionResend
    extends TLRPC.DecryptedMessageAction
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.start_seq_no = paramAbstractSerializedData.readInt32(paramBoolean);
      this.end_seq_no = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.start_seq_no);
      paramAbstractSerializedData.writeInt32(this.end_seq_no);
    }
  }
  
  public static class TL_decryptedMessageActionScreenshotMessages
    extends TLRPC.DecryptedMessageAction
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else
      {
        int j = paramAbstractSerializedData.readInt32(paramBoolean);
        for (i = 0; i < j; i++) {
          this.random_ids.add(Long.valueOf(paramAbstractSerializedData.readInt64(paramBoolean)));
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.random_ids.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        paramAbstractSerializedData.writeInt64(((Long)this.random_ids.get(j)).longValue());
      }
    }
  }
  
  public static class TL_decryptedMessageActionSetMessageTTL
    extends TLRPC.DecryptedMessageAction
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.ttl_seconds = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.ttl_seconds);
    }
  }
  
  public static class TL_decryptedMessageActionTyping
    extends TLRPC.DecryptedMessageAction
  {
    public static int constructor = -860719551;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.action = TLRPC.SendMessageAction.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.action.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_decryptedMessageLayer
    extends TLObject
  {
    public static int constructor = 467867529;
    public int in_seq_no;
    public int layer;
    public TLRPC.DecryptedMessage message;
    public int out_seq_no;
    public byte[] random_bytes;
    
    public static TL_decryptedMessageLayer TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_decryptedMessageLayer", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_decryptedMessageLayer localTL_decryptedMessageLayer;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_decryptedMessageLayer)
      {
        return paramAbstractSerializedData;
        localTL_decryptedMessageLayer = new TL_decryptedMessageLayer();
        localTL_decryptedMessageLayer.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.random_bytes = paramAbstractSerializedData.readByteArray(paramBoolean);
      this.layer = paramAbstractSerializedData.readInt32(paramBoolean);
      this.in_seq_no = paramAbstractSerializedData.readInt32(paramBoolean);
      this.out_seq_no = paramAbstractSerializedData.readInt32(paramBoolean);
      this.message = TLRPC.DecryptedMessage.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeByteArray(this.random_bytes);
      paramAbstractSerializedData.writeInt32(this.layer);
      paramAbstractSerializedData.writeInt32(this.in_seq_no);
      paramAbstractSerializedData.writeInt32(this.out_seq_no);
      this.message.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_decryptedMessageMediaAudio
    extends TLRPC.DecryptedMessageMedia
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.duration = paramAbstractSerializedData.readInt32(paramBoolean);
      this.mime_type = paramAbstractSerializedData.readString(paramBoolean);
      this.size = paramAbstractSerializedData.readInt32(paramBoolean);
      this.key = paramAbstractSerializedData.readByteArray(paramBoolean);
      this.iv = paramAbstractSerializedData.readByteArray(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.duration);
      paramAbstractSerializedData.writeString(this.mime_type);
      paramAbstractSerializedData.writeInt32(this.size);
      paramAbstractSerializedData.writeByteArray(this.key);
      paramAbstractSerializedData.writeByteArray(this.iv);
    }
  }
  
  public static class TL_decryptedMessageMediaAudio_layer8
    extends TLRPC.TL_decryptedMessageMediaAudio
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.duration = paramAbstractSerializedData.readInt32(paramBoolean);
      this.size = paramAbstractSerializedData.readInt32(paramBoolean);
      this.key = paramAbstractSerializedData.readByteArray(paramBoolean);
      this.iv = paramAbstractSerializedData.readByteArray(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.duration);
      paramAbstractSerializedData.writeInt32(this.size);
      paramAbstractSerializedData.writeByteArray(this.key);
      paramAbstractSerializedData.writeByteArray(this.iv);
    }
  }
  
  public static class TL_decryptedMessageMediaContact
    extends TLRPC.DecryptedMessageMedia
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.phone_number = paramAbstractSerializedData.readString(paramBoolean);
      this.first_name = paramAbstractSerializedData.readString(paramBoolean);
      this.last_name = paramAbstractSerializedData.readString(paramBoolean);
      this.user_id = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.phone_number);
      paramAbstractSerializedData.writeString(this.first_name);
      paramAbstractSerializedData.writeString(this.last_name);
      paramAbstractSerializedData.writeInt32(this.user_id);
    }
  }
  
  public static class TL_decryptedMessageMediaDocument
    extends TLRPC.DecryptedMessageMedia
  {
    public static int constructor = NUM;
    public byte[] thumb;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.thumb = paramAbstractSerializedData.readByteArray(paramBoolean);
      this.thumb_w = paramAbstractSerializedData.readInt32(paramBoolean);
      this.thumb_h = paramAbstractSerializedData.readInt32(paramBoolean);
      this.mime_type = paramAbstractSerializedData.readString(paramBoolean);
      this.size = paramAbstractSerializedData.readInt32(paramBoolean);
      this.key = paramAbstractSerializedData.readByteArray(paramBoolean);
      this.iv = paramAbstractSerializedData.readByteArray(paramBoolean);
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      TLRPC.DocumentAttribute localDocumentAttribute;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else
      {
        int j = paramAbstractSerializedData.readInt32(paramBoolean);
        i = 0;
        if (i >= j) {
          break label152;
        }
        localDocumentAttribute = TLRPC.DocumentAttribute.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localDocumentAttribute != null) {
          break label136;
        }
      }
      for (;;)
      {
        return;
        label136:
        this.attributes.add(localDocumentAttribute);
        i++;
        break;
        label152:
        this.caption = paramAbstractSerializedData.readString(paramBoolean);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeByteArray(this.thumb);
      paramAbstractSerializedData.writeInt32(this.thumb_w);
      paramAbstractSerializedData.writeInt32(this.thumb_h);
      paramAbstractSerializedData.writeString(this.mime_type);
      paramAbstractSerializedData.writeInt32(this.size);
      paramAbstractSerializedData.writeByteArray(this.key);
      paramAbstractSerializedData.writeByteArray(this.iv);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.attributes.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.DocumentAttribute)this.attributes.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeString(this.caption);
    }
  }
  
  public static class TL_decryptedMessageMediaDocument_layer8
    extends TLRPC.TL_decryptedMessageMediaDocument
  {
    public static int constructor = -NUM;
    public byte[] thumb;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.thumb = paramAbstractSerializedData.readByteArray(paramBoolean);
      this.thumb_w = paramAbstractSerializedData.readInt32(paramBoolean);
      this.thumb_h = paramAbstractSerializedData.readInt32(paramBoolean);
      this.file_name = paramAbstractSerializedData.readString(paramBoolean);
      this.mime_type = paramAbstractSerializedData.readString(paramBoolean);
      this.size = paramAbstractSerializedData.readInt32(paramBoolean);
      this.key = paramAbstractSerializedData.readByteArray(paramBoolean);
      this.iv = paramAbstractSerializedData.readByteArray(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeByteArray(this.thumb);
      paramAbstractSerializedData.writeInt32(this.thumb_w);
      paramAbstractSerializedData.writeInt32(this.thumb_h);
      paramAbstractSerializedData.writeString(this.file_name);
      paramAbstractSerializedData.writeString(this.mime_type);
      paramAbstractSerializedData.writeInt32(this.size);
      paramAbstractSerializedData.writeByteArray(this.key);
      paramAbstractSerializedData.writeByteArray(this.iv);
    }
  }
  
  public static class TL_decryptedMessageMediaEmpty
    extends TLRPC.DecryptedMessageMedia
  {
    public static int constructor = 144661578;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_decryptedMessageMediaExternalDocument
    extends TLRPC.DecryptedMessageMedia
  {
    public static int constructor = -90853155;
    public TLRPC.PhotoSize thumb;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
      this.mime_type = paramAbstractSerializedData.readString(paramBoolean);
      this.size = paramAbstractSerializedData.readInt32(paramBoolean);
      this.thumb = TLRPC.PhotoSize.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.dc_id = paramAbstractSerializedData.readInt32(paramBoolean);
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
      }
      for (i = 0;; i++)
      {
        TLRPC.DocumentAttribute localDocumentAttribute;
        if (i < j)
        {
          localDocumentAttribute = TLRPC.DocumentAttribute.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localDocumentAttribute != null) {}
        }
        else
        {
          return;
        }
        this.attributes.add(localDocumentAttribute);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.id);
      paramAbstractSerializedData.writeInt64(this.access_hash);
      paramAbstractSerializedData.writeInt32(this.date);
      paramAbstractSerializedData.writeString(this.mime_type);
      paramAbstractSerializedData.writeInt32(this.size);
      this.thumb.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(this.dc_id);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.attributes.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.DocumentAttribute)this.attributes.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_decryptedMessageMediaGeoPoint
    extends TLRPC.DecryptedMessageMedia
  {
    public static int constructor = 893913689;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.lat = paramAbstractSerializedData.readDouble(paramBoolean);
      this._long = paramAbstractSerializedData.readDouble(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeDouble(this.lat);
      paramAbstractSerializedData.writeDouble(this._long);
    }
  }
  
  public static class TL_decryptedMessageMediaPhoto
    extends TLRPC.DecryptedMessageMedia
  {
    public static int constructor = -235238024;
    public byte[] thumb;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.thumb = paramAbstractSerializedData.readByteArray(paramBoolean);
      this.thumb_w = paramAbstractSerializedData.readInt32(paramBoolean);
      this.thumb_h = paramAbstractSerializedData.readInt32(paramBoolean);
      this.w = paramAbstractSerializedData.readInt32(paramBoolean);
      this.h = paramAbstractSerializedData.readInt32(paramBoolean);
      this.size = paramAbstractSerializedData.readInt32(paramBoolean);
      this.key = paramAbstractSerializedData.readByteArray(paramBoolean);
      this.iv = paramAbstractSerializedData.readByteArray(paramBoolean);
      this.caption = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeByteArray(this.thumb);
      paramAbstractSerializedData.writeInt32(this.thumb_w);
      paramAbstractSerializedData.writeInt32(this.thumb_h);
      paramAbstractSerializedData.writeInt32(this.w);
      paramAbstractSerializedData.writeInt32(this.h);
      paramAbstractSerializedData.writeInt32(this.size);
      paramAbstractSerializedData.writeByteArray(this.key);
      paramAbstractSerializedData.writeByteArray(this.iv);
      paramAbstractSerializedData.writeString(this.caption);
    }
  }
  
  public static class TL_decryptedMessageMediaPhoto_layer8
    extends TLRPC.TL_decryptedMessageMediaPhoto
  {
    public static int constructor = 846826124;
    public byte[] thumb;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.thumb = paramAbstractSerializedData.readByteArray(paramBoolean);
      this.thumb_w = paramAbstractSerializedData.readInt32(paramBoolean);
      this.thumb_h = paramAbstractSerializedData.readInt32(paramBoolean);
      this.w = paramAbstractSerializedData.readInt32(paramBoolean);
      this.h = paramAbstractSerializedData.readInt32(paramBoolean);
      this.size = paramAbstractSerializedData.readInt32(paramBoolean);
      this.key = paramAbstractSerializedData.readByteArray(paramBoolean);
      this.iv = paramAbstractSerializedData.readByteArray(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeByteArray(this.thumb);
      paramAbstractSerializedData.writeInt32(this.thumb_w);
      paramAbstractSerializedData.writeInt32(this.thumb_h);
      paramAbstractSerializedData.writeInt32(this.w);
      paramAbstractSerializedData.writeInt32(this.h);
      paramAbstractSerializedData.writeInt32(this.size);
      paramAbstractSerializedData.writeByteArray(this.key);
      paramAbstractSerializedData.writeByteArray(this.iv);
    }
  }
  
  public static class TL_decryptedMessageMediaVenue
    extends TLRPC.DecryptedMessageMedia
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.lat = paramAbstractSerializedData.readDouble(paramBoolean);
      this._long = paramAbstractSerializedData.readDouble(paramBoolean);
      this.title = paramAbstractSerializedData.readString(paramBoolean);
      this.address = paramAbstractSerializedData.readString(paramBoolean);
      this.provider = paramAbstractSerializedData.readString(paramBoolean);
      this.venue_id = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeDouble(this.lat);
      paramAbstractSerializedData.writeDouble(this._long);
      paramAbstractSerializedData.writeString(this.title);
      paramAbstractSerializedData.writeString(this.address);
      paramAbstractSerializedData.writeString(this.provider);
      paramAbstractSerializedData.writeString(this.venue_id);
    }
  }
  
  public static class TL_decryptedMessageMediaVideo
    extends TLRPC.DecryptedMessageMedia
  {
    public static int constructor = -NUM;
    public byte[] thumb;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.thumb = paramAbstractSerializedData.readByteArray(paramBoolean);
      this.thumb_w = paramAbstractSerializedData.readInt32(paramBoolean);
      this.thumb_h = paramAbstractSerializedData.readInt32(paramBoolean);
      this.duration = paramAbstractSerializedData.readInt32(paramBoolean);
      this.mime_type = paramAbstractSerializedData.readString(paramBoolean);
      this.w = paramAbstractSerializedData.readInt32(paramBoolean);
      this.h = paramAbstractSerializedData.readInt32(paramBoolean);
      this.size = paramAbstractSerializedData.readInt32(paramBoolean);
      this.key = paramAbstractSerializedData.readByteArray(paramBoolean);
      this.iv = paramAbstractSerializedData.readByteArray(paramBoolean);
      this.caption = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeByteArray(this.thumb);
      paramAbstractSerializedData.writeInt32(this.thumb_w);
      paramAbstractSerializedData.writeInt32(this.thumb_h);
      paramAbstractSerializedData.writeInt32(this.duration);
      paramAbstractSerializedData.writeString(this.mime_type);
      paramAbstractSerializedData.writeInt32(this.w);
      paramAbstractSerializedData.writeInt32(this.h);
      paramAbstractSerializedData.writeInt32(this.size);
      paramAbstractSerializedData.writeByteArray(this.key);
      paramAbstractSerializedData.writeByteArray(this.iv);
      paramAbstractSerializedData.writeString(this.caption);
    }
  }
  
  public static class TL_decryptedMessageMediaVideo_layer17
    extends TLRPC.TL_decryptedMessageMediaVideo
  {
    public static int constructor = NUM;
    public byte[] thumb;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.thumb = paramAbstractSerializedData.readByteArray(paramBoolean);
      this.thumb_w = paramAbstractSerializedData.readInt32(paramBoolean);
      this.thumb_h = paramAbstractSerializedData.readInt32(paramBoolean);
      this.duration = paramAbstractSerializedData.readInt32(paramBoolean);
      this.mime_type = paramAbstractSerializedData.readString(paramBoolean);
      this.w = paramAbstractSerializedData.readInt32(paramBoolean);
      this.h = paramAbstractSerializedData.readInt32(paramBoolean);
      this.size = paramAbstractSerializedData.readInt32(paramBoolean);
      this.key = paramAbstractSerializedData.readByteArray(paramBoolean);
      this.iv = paramAbstractSerializedData.readByteArray(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeByteArray(this.thumb);
      paramAbstractSerializedData.writeInt32(this.thumb_w);
      paramAbstractSerializedData.writeInt32(this.thumb_h);
      paramAbstractSerializedData.writeInt32(this.duration);
      paramAbstractSerializedData.writeString(this.mime_type);
      paramAbstractSerializedData.writeInt32(this.w);
      paramAbstractSerializedData.writeInt32(this.h);
      paramAbstractSerializedData.writeInt32(this.size);
      paramAbstractSerializedData.writeByteArray(this.key);
      paramAbstractSerializedData.writeByteArray(this.iv);
    }
  }
  
  public static class TL_decryptedMessageMediaVideo_layer8
    extends TLRPC.TL_decryptedMessageMediaVideo
  {
    public static int constructor = NUM;
    public byte[] thumb;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.thumb = paramAbstractSerializedData.readByteArray(paramBoolean);
      this.thumb_w = paramAbstractSerializedData.readInt32(paramBoolean);
      this.thumb_h = paramAbstractSerializedData.readInt32(paramBoolean);
      this.duration = paramAbstractSerializedData.readInt32(paramBoolean);
      this.w = paramAbstractSerializedData.readInt32(paramBoolean);
      this.h = paramAbstractSerializedData.readInt32(paramBoolean);
      this.size = paramAbstractSerializedData.readInt32(paramBoolean);
      this.key = paramAbstractSerializedData.readByteArray(paramBoolean);
      this.iv = paramAbstractSerializedData.readByteArray(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeByteArray(this.thumb);
      paramAbstractSerializedData.writeInt32(this.thumb_w);
      paramAbstractSerializedData.writeInt32(this.thumb_h);
      paramAbstractSerializedData.writeInt32(this.duration);
      paramAbstractSerializedData.writeInt32(this.w);
      paramAbstractSerializedData.writeInt32(this.h);
      paramAbstractSerializedData.writeInt32(this.size);
      paramAbstractSerializedData.writeByteArray(this.key);
      paramAbstractSerializedData.writeByteArray(this.iv);
    }
  }
  
  public static class TL_decryptedMessageMediaWebPage
    extends TLRPC.DecryptedMessageMedia
  {
    public static int constructor = -452652584;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.url = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.url);
    }
  }
  
  public static class TL_decryptedMessageService
    extends TLRPC.DecryptedMessage
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.random_id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.action = TLRPC.DecryptedMessageAction.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.random_id);
      this.action.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_decryptedMessageService_layer8
    extends TLRPC.TL_decryptedMessageService
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.random_id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.random_bytes = paramAbstractSerializedData.readByteArray(paramBoolean);
      this.action = TLRPC.DecryptedMessageAction.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.random_id);
      paramAbstractSerializedData.writeByteArray(this.random_bytes);
      this.action.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_decryptedMessage_layer17
    extends TLRPC.TL_decryptedMessage
  {
    public static int constructor = 541931640;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.random_id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.ttl = paramAbstractSerializedData.readInt32(paramBoolean);
      this.message = paramAbstractSerializedData.readString(paramBoolean);
      this.media = TLRPC.DecryptedMessageMedia.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.random_id);
      paramAbstractSerializedData.writeInt32(this.ttl);
      paramAbstractSerializedData.writeString(this.message);
      this.media.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_decryptedMessage_layer45
    extends TLRPC.TL_decryptedMessage
  {
    public static int constructor = 917541342;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      this.random_id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.ttl = paramAbstractSerializedData.readInt32(paramBoolean);
      this.message = paramAbstractSerializedData.readString(paramBoolean);
      if ((this.flags & 0x200) != 0) {
        this.media = TLRPC.DecryptedMessageMedia.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      }
      int i;
      TLRPC.MessageEntity localMessageEntity;
      if ((this.flags & 0x80) != 0)
      {
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i != 481674261)
        {
          if (paramBoolean) {
            throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
          }
        }
        else
        {
          int j = paramAbstractSerializedData.readInt32(paramBoolean);
          i = 0;
          if (i >= j) {
            break label161;
          }
          localMessageEntity = TLRPC.MessageEntity.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localMessageEntity != null) {
            break label145;
          }
        }
      }
      for (;;)
      {
        return;
        label145:
        this.entities.add(localMessageEntity);
        i++;
        break;
        label161:
        if ((this.flags & 0x800) != 0) {
          this.via_bot_name = paramAbstractSerializedData.readString(paramBoolean);
        }
        if ((this.flags & 0x8) != 0) {
          this.reply_to_random_id = paramAbstractSerializedData.readInt64(paramBoolean);
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.flags);
      paramAbstractSerializedData.writeInt64(this.random_id);
      paramAbstractSerializedData.writeInt32(this.ttl);
      paramAbstractSerializedData.writeString(this.message);
      if ((this.flags & 0x200) != 0) {
        this.media.serializeToStream(paramAbstractSerializedData);
      }
      if ((this.flags & 0x80) != 0)
      {
        paramAbstractSerializedData.writeInt32(481674261);
        int i = this.entities.size();
        paramAbstractSerializedData.writeInt32(i);
        for (int j = 0; j < i; j++) {
          ((TLRPC.MessageEntity)this.entities.get(j)).serializeToStream(paramAbstractSerializedData);
        }
      }
      if ((this.flags & 0x800) != 0) {
        paramAbstractSerializedData.writeString(this.via_bot_name);
      }
      if ((this.flags & 0x8) != 0) {
        paramAbstractSerializedData.writeInt64(this.reply_to_random_id);
      }
    }
  }
  
  public static class TL_decryptedMessage_layer8
    extends TLRPC.TL_decryptedMessage
  {
    public static int constructor = 528568095;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.random_id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.random_bytes = paramAbstractSerializedData.readByteArray(paramBoolean);
      this.message = paramAbstractSerializedData.readString(paramBoolean);
      this.media = TLRPC.DecryptedMessageMedia.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.random_id);
      paramAbstractSerializedData.writeByteArray(this.random_bytes);
      paramAbstractSerializedData.writeString(this.message);
      this.media.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_dialog
    extends TLObject
  {
    public static int constructor = -455150117;
    public TLRPC.DraftMessage draft;
    public int flags;
    public long id;
    public int last_message_date;
    public TLRPC.PeerNotifySettings notify_settings;
    public TLRPC.Peer peer;
    public boolean pinned;
    public int pinnedNum;
    public int pts;
    public int read_inbox_max_id;
    public int read_outbox_max_id;
    public int top_message;
    public int unread_count;
    public int unread_mentions_count;
    
    public static TL_dialog TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_dialog", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_dialog localTL_dialog;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_dialog)
      {
        return paramAbstractSerializedData;
        localTL_dialog = new TL_dialog();
        localTL_dialog.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x4) != 0) {}
      for (boolean bool = true;; bool = false)
      {
        this.pinned = bool;
        this.peer = TLRPC.Peer.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        this.top_message = paramAbstractSerializedData.readInt32(paramBoolean);
        this.read_inbox_max_id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.read_outbox_max_id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.unread_count = paramAbstractSerializedData.readInt32(paramBoolean);
        this.unread_mentions_count = paramAbstractSerializedData.readInt32(paramBoolean);
        this.notify_settings = TLRPC.PeerNotifySettings.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if ((this.flags & 0x1) != 0) {
          this.pts = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x2) != 0) {
          this.draft = TLRPC.DraftMessage.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        }
        return;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.pinned) {}
      for (int i = this.flags | 0x4;; i = this.flags & 0xFFFFFFFB)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        this.peer.serializeToStream(paramAbstractSerializedData);
        paramAbstractSerializedData.writeInt32(this.top_message);
        paramAbstractSerializedData.writeInt32(this.read_inbox_max_id);
        paramAbstractSerializedData.writeInt32(this.read_outbox_max_id);
        paramAbstractSerializedData.writeInt32(this.unread_count);
        paramAbstractSerializedData.writeInt32(this.unread_mentions_count);
        this.notify_settings.serializeToStream(paramAbstractSerializedData);
        if ((this.flags & 0x1) != 0) {
          paramAbstractSerializedData.writeInt32(this.pts);
        }
        if ((this.flags & 0x2) != 0) {
          this.draft.serializeToStream(paramAbstractSerializedData);
        }
        return;
      }
    }
  }
  
  public static class TL_dialogPeer
    extends TLRPC.DialogPeer
  {
    public static int constructor = -445792507;
    public TLRPC.Peer peer;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.peer = TLRPC.Peer.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.peer.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_dialogPeerFeed
    extends TLRPC.DialogPeer
  {
    public static int constructor = -633170927;
    public int feed_id;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.feed_id = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.feed_id);
    }
  }
  
  public static class TL_document
    extends TLRPC.Document
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
      this.mime_type = paramAbstractSerializedData.readString(paramBoolean);
      this.size = paramAbstractSerializedData.readInt32(paramBoolean);
      this.thumb = TLRPC.PhotoSize.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.dc_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.version = paramAbstractSerializedData.readInt32(paramBoolean);
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
      }
      for (i = 0;; i++)
      {
        TLRPC.DocumentAttribute localDocumentAttribute;
        if (i < j)
        {
          localDocumentAttribute = TLRPC.DocumentAttribute.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localDocumentAttribute != null) {}
        }
        else
        {
          return;
        }
        this.attributes.add(localDocumentAttribute);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.id);
      paramAbstractSerializedData.writeInt64(this.access_hash);
      paramAbstractSerializedData.writeInt32(this.date);
      paramAbstractSerializedData.writeString(this.mime_type);
      paramAbstractSerializedData.writeInt32(this.size);
      this.thumb.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(this.dc_id);
      paramAbstractSerializedData.writeInt32(this.version);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.attributes.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.DocumentAttribute)this.attributes.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_documentAttributeAnimated
    extends TLRPC.DocumentAttribute
  {
    public static int constructor = 297109817;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_documentAttributeAudio
    extends TLRPC.DocumentAttribute
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x400) != 0) {}
      for (boolean bool = true;; bool = false)
      {
        this.voice = bool;
        this.duration = paramAbstractSerializedData.readInt32(paramBoolean);
        if ((this.flags & 0x1) != 0) {
          this.title = paramAbstractSerializedData.readString(paramBoolean);
        }
        if ((this.flags & 0x2) != 0) {
          this.performer = paramAbstractSerializedData.readString(paramBoolean);
        }
        if ((this.flags & 0x4) != 0) {
          this.waveform = paramAbstractSerializedData.readByteArray(paramBoolean);
        }
        return;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.voice) {}
      for (int i = this.flags | 0x400;; i = this.flags & 0xFBFF)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(this.duration);
        if ((this.flags & 0x1) != 0) {
          paramAbstractSerializedData.writeString(this.title);
        }
        if ((this.flags & 0x2) != 0) {
          paramAbstractSerializedData.writeString(this.performer);
        }
        if ((this.flags & 0x4) != 0) {
          paramAbstractSerializedData.writeByteArray(this.waveform);
        }
        return;
      }
    }
  }
  
  public static class TL_documentAttributeAudio_layer45
    extends TLRPC.TL_documentAttributeAudio
  {
    public static int constructor = -556656416;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.duration = paramAbstractSerializedData.readInt32(paramBoolean);
      this.title = paramAbstractSerializedData.readString(paramBoolean);
      this.performer = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.duration);
      paramAbstractSerializedData.writeString(this.title);
      paramAbstractSerializedData.writeString(this.performer);
    }
  }
  
  public static class TL_documentAttributeAudio_old
    extends TLRPC.TL_documentAttributeAudio
  {
    public static int constructor = 85215461;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.duration = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.duration);
    }
  }
  
  public static class TL_documentAttributeFilename
    extends TLRPC.DocumentAttribute
  {
    public static int constructor = 358154344;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.file_name = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.file_name);
    }
  }
  
  public static class TL_documentAttributeHasStickers
    extends TLRPC.DocumentAttribute
  {
    public static int constructor = -NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_documentAttributeImageSize
    extends TLRPC.DocumentAttribute
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.w = paramAbstractSerializedData.readInt32(paramBoolean);
      this.h = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.w);
      paramAbstractSerializedData.writeInt32(this.h);
    }
  }
  
  public static class TL_documentAttributeSticker
    extends TLRPC.DocumentAttribute
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x2) != 0) {}
      for (boolean bool = true;; bool = false)
      {
        this.mask = bool;
        this.alt = paramAbstractSerializedData.readString(paramBoolean);
        this.stickerset = TLRPC.InputStickerSet.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if ((this.flags & 0x1) != 0) {
          this.mask_coords = TLRPC.TL_maskCoords.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        }
        return;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.mask) {}
      for (int i = this.flags | 0x2;; i = this.flags & 0xFFFFFFFD)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeString(this.alt);
        this.stickerset.serializeToStream(paramAbstractSerializedData);
        if ((this.flags & 0x1) != 0) {
          this.mask_coords.serializeToStream(paramAbstractSerializedData);
        }
        return;
      }
    }
  }
  
  public static class TL_documentAttributeSticker_layer55
    extends TLRPC.TL_documentAttributeSticker
  {
    public static int constructor = 978674434;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.alt = paramAbstractSerializedData.readString(paramBoolean);
      this.stickerset = TLRPC.InputStickerSet.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.alt);
      this.stickerset.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_documentAttributeSticker_old
    extends TLRPC.TL_documentAttributeSticker
  {
    public static int constructor = -83208409;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean) {}
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_documentAttributeSticker_old2
    extends TLRPC.TL_documentAttributeSticker
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.alt = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.alt);
    }
  }
  
  public static class TL_documentAttributeVideo
    extends TLRPC.DocumentAttribute
  {
    public static int constructor = 250621158;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      boolean bool1 = true;
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0)
      {
        bool2 = true;
        this.round_message = bool2;
        if ((this.flags & 0x2) == 0) {
          break label81;
        }
      }
      label81:
      for (boolean bool2 = bool1;; bool2 = false)
      {
        this.supports_streaming = bool2;
        this.duration = paramAbstractSerializedData.readInt32(paramBoolean);
        this.w = paramAbstractSerializedData.readInt32(paramBoolean);
        this.h = paramAbstractSerializedData.readInt32(paramBoolean);
        return;
        bool2 = false;
        break;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.round_message)
      {
        i = this.flags | 0x1;
        this.flags = i;
        if (!this.supports_streaming) {
          break label89;
        }
      }
      label89:
      for (int i = this.flags | 0x2;; i = this.flags & 0xFFFFFFFD)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(this.duration);
        paramAbstractSerializedData.writeInt32(this.w);
        paramAbstractSerializedData.writeInt32(this.h);
        return;
        i = this.flags & 0xFFFFFFFE;
        break;
      }
    }
  }
  
  public static class TL_documentAttributeVideo_layer65
    extends TLRPC.TL_documentAttributeVideo
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.duration = paramAbstractSerializedData.readInt32(paramBoolean);
      this.w = paramAbstractSerializedData.readInt32(paramBoolean);
      this.h = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.duration);
      paramAbstractSerializedData.writeInt32(this.w);
      paramAbstractSerializedData.writeInt32(this.h);
    }
  }
  
  public static class TL_documentEmpty
    extends TLRPC.Document
  {
    public static int constructor = 922273905;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt64(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.id);
    }
  }
  
  public static class TL_documentEncrypted
    extends TLRPC.Document
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
      this.mime_type = paramAbstractSerializedData.readString(paramBoolean);
      this.size = paramAbstractSerializedData.readInt32(paramBoolean);
      this.thumb = TLRPC.PhotoSize.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.dc_id = paramAbstractSerializedData.readInt32(paramBoolean);
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      TLRPC.DocumentAttribute localDocumentAttribute;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else
      {
        int j = paramAbstractSerializedData.readInt32(paramBoolean);
        i = 0;
        if (i >= j) {
          break label157;
        }
        localDocumentAttribute = TLRPC.DocumentAttribute.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localDocumentAttribute != null) {
          break label141;
        }
      }
      for (;;)
      {
        return;
        label141:
        this.attributes.add(localDocumentAttribute);
        i++;
        break;
        label157:
        this.key = paramAbstractSerializedData.readByteArray(paramBoolean);
        this.iv = paramAbstractSerializedData.readByteArray(paramBoolean);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.id);
      paramAbstractSerializedData.writeInt64(this.access_hash);
      paramAbstractSerializedData.writeInt32(this.date);
      paramAbstractSerializedData.writeString(this.mime_type);
      paramAbstractSerializedData.writeInt32(this.size);
      this.thumb.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(this.dc_id);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.attributes.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.DocumentAttribute)this.attributes.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeByteArray(this.key);
      paramAbstractSerializedData.writeByteArray(this.iv);
    }
  }
  
  public static class TL_documentEncrypted_old
    extends TLRPC.TL_document
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
      this.user_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
      this.file_name = paramAbstractSerializedData.readString(paramBoolean);
      this.mime_type = paramAbstractSerializedData.readString(paramBoolean);
      this.size = paramAbstractSerializedData.readInt32(paramBoolean);
      this.thumb = TLRPC.PhotoSize.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.dc_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.key = paramAbstractSerializedData.readByteArray(paramBoolean);
      this.iv = paramAbstractSerializedData.readByteArray(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.id);
      paramAbstractSerializedData.writeInt64(this.access_hash);
      paramAbstractSerializedData.writeInt32(this.user_id);
      paramAbstractSerializedData.writeInt32(this.date);
      paramAbstractSerializedData.writeString(this.file_name);
      paramAbstractSerializedData.writeString(this.mime_type);
      paramAbstractSerializedData.writeInt32(this.size);
      this.thumb.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(this.dc_id);
      paramAbstractSerializedData.writeByteArray(this.key);
      paramAbstractSerializedData.writeByteArray(this.iv);
    }
  }
  
  public static class TL_document_layer53
    extends TLRPC.TL_document
  {
    public static int constructor = -106717361;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
      this.mime_type = paramAbstractSerializedData.readString(paramBoolean);
      this.size = paramAbstractSerializedData.readInt32(paramBoolean);
      this.thumb = TLRPC.PhotoSize.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.dc_id = paramAbstractSerializedData.readInt32(paramBoolean);
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
      }
      for (i = 0;; i++)
      {
        TLRPC.DocumentAttribute localDocumentAttribute;
        if (i < j)
        {
          localDocumentAttribute = TLRPC.DocumentAttribute.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localDocumentAttribute != null) {}
        }
        else
        {
          return;
        }
        this.attributes.add(localDocumentAttribute);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.id);
      paramAbstractSerializedData.writeInt64(this.access_hash);
      paramAbstractSerializedData.writeInt32(this.date);
      paramAbstractSerializedData.writeString(this.mime_type);
      paramAbstractSerializedData.writeInt32(this.size);
      this.thumb.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(this.dc_id);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.attributes.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.DocumentAttribute)this.attributes.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_document_old
    extends TLRPC.TL_document
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
      this.user_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
      this.file_name = paramAbstractSerializedData.readString(paramBoolean);
      this.mime_type = paramAbstractSerializedData.readString(paramBoolean);
      this.size = paramAbstractSerializedData.readInt32(paramBoolean);
      this.thumb = TLRPC.PhotoSize.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.dc_id = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.id);
      paramAbstractSerializedData.writeInt64(this.access_hash);
      paramAbstractSerializedData.writeInt32(this.user_id);
      paramAbstractSerializedData.writeInt32(this.date);
      paramAbstractSerializedData.writeString(this.file_name);
      paramAbstractSerializedData.writeString(this.mime_type);
      paramAbstractSerializedData.writeInt32(this.size);
      this.thumb.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(this.dc_id);
    }
  }
  
  public static class TL_draftMessage
    extends TLRPC.DraftMessage
  {
    public static int constructor = -40996577;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x2) != 0) {}
      for (boolean bool = true;; bool = false)
      {
        this.no_webpage = bool;
        if ((this.flags & 0x1) != 0) {
          this.reply_to_msg_id = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        this.message = paramAbstractSerializedData.readString(paramBoolean);
        if ((this.flags & 0x8) == 0) {
          break label161;
        }
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i == 481674261) {
          break;
        }
        if (!paramBoolean) {
          break label144;
        }
        throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
      }
      int j = paramAbstractSerializedData.readInt32(paramBoolean);
      int i = 0;
      TLRPC.MessageEntity localMessageEntity;
      if (i < j)
      {
        localMessageEntity = TLRPC.MessageEntity.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localMessageEntity != null) {}
      }
      for (;;)
      {
        label144:
        return;
        this.entities.add(localMessageEntity);
        i++;
        break;
        label161:
        this.date = paramAbstractSerializedData.readInt32(paramBoolean);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.no_webpage) {}
      for (int i = this.flags | 0x2;; i = this.flags & 0xFFFFFFFD)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        if ((this.flags & 0x1) != 0) {
          paramAbstractSerializedData.writeInt32(this.reply_to_msg_id);
        }
        paramAbstractSerializedData.writeString(this.message);
        if ((this.flags & 0x8) == 0) {
          break;
        }
        paramAbstractSerializedData.writeInt32(481674261);
        int j = this.entities.size();
        paramAbstractSerializedData.writeInt32(j);
        for (i = 0; i < j; i++) {
          ((TLRPC.MessageEntity)this.entities.get(i)).serializeToStream(paramAbstractSerializedData);
        }
      }
      paramAbstractSerializedData.writeInt32(this.date);
    }
  }
  
  public static class TL_draftMessageEmpty
    extends TLRPC.DraftMessage
  {
    public static int constructor = -NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_encryptedChat
    extends TLRPC.EncryptedChat
  {
    public static int constructor = -94974410;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
      this.admin_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.participant_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.g_a_or_b = paramAbstractSerializedData.readByteArray(paramBoolean);
      this.key_fingerprint = paramAbstractSerializedData.readInt64(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.id);
      paramAbstractSerializedData.writeInt64(this.access_hash);
      paramAbstractSerializedData.writeInt32(this.date);
      paramAbstractSerializedData.writeInt32(this.admin_id);
      paramAbstractSerializedData.writeInt32(this.participant_id);
      paramAbstractSerializedData.writeByteArray(this.g_a_or_b);
      paramAbstractSerializedData.writeInt64(this.key_fingerprint);
    }
  }
  
  public static class TL_encryptedChatDiscarded
    extends TLRPC.EncryptedChat
  {
    public static int constructor = 332848423;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.id);
    }
  }
  
  public static class TL_encryptedChatEmpty
    extends TLRPC.EncryptedChat
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.id);
    }
  }
  
  public static class TL_encryptedChatRequested
    extends TLRPC.EncryptedChat
  {
    public static int constructor = -931638658;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
      this.admin_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.participant_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.g_a = paramAbstractSerializedData.readByteArray(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.id);
      paramAbstractSerializedData.writeInt64(this.access_hash);
      paramAbstractSerializedData.writeInt32(this.date);
      paramAbstractSerializedData.writeInt32(this.admin_id);
      paramAbstractSerializedData.writeInt32(this.participant_id);
      paramAbstractSerializedData.writeByteArray(this.g_a);
    }
  }
  
  public static class TL_encryptedChatRequested_old
    extends TLRPC.TL_encryptedChatRequested
  {
    public static int constructor = -39213129;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
      this.admin_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.participant_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.g_a = paramAbstractSerializedData.readByteArray(paramBoolean);
      this.nonce = paramAbstractSerializedData.readByteArray(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.id);
      paramAbstractSerializedData.writeInt64(this.access_hash);
      paramAbstractSerializedData.writeInt32(this.date);
      paramAbstractSerializedData.writeInt32(this.admin_id);
      paramAbstractSerializedData.writeInt32(this.participant_id);
      paramAbstractSerializedData.writeByteArray(this.g_a);
      paramAbstractSerializedData.writeByteArray(this.nonce);
    }
  }
  
  public static class TL_encryptedChatWaiting
    extends TLRPC.EncryptedChat
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
      this.admin_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.participant_id = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.id);
      paramAbstractSerializedData.writeInt64(this.access_hash);
      paramAbstractSerializedData.writeInt32(this.date);
      paramAbstractSerializedData.writeInt32(this.admin_id);
      paramAbstractSerializedData.writeInt32(this.participant_id);
    }
  }
  
  public static class TL_encryptedChat_old
    extends TLRPC.TL_encryptedChat
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
      this.admin_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.participant_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.g_a_or_b = paramAbstractSerializedData.readByteArray(paramBoolean);
      this.nonce = paramAbstractSerializedData.readByteArray(paramBoolean);
      this.key_fingerprint = paramAbstractSerializedData.readInt64(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.id);
      paramAbstractSerializedData.writeInt64(this.access_hash);
      paramAbstractSerializedData.writeInt32(this.date);
      paramAbstractSerializedData.writeInt32(this.admin_id);
      paramAbstractSerializedData.writeInt32(this.participant_id);
      paramAbstractSerializedData.writeByteArray(this.g_a_or_b);
      paramAbstractSerializedData.writeByteArray(this.nonce);
      paramAbstractSerializedData.writeInt64(this.key_fingerprint);
    }
  }
  
  public static class TL_encryptedFile
    extends TLRPC.EncryptedFile
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
      this.size = paramAbstractSerializedData.readInt32(paramBoolean);
      this.dc_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.key_fingerprint = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.id);
      paramAbstractSerializedData.writeInt64(this.access_hash);
      paramAbstractSerializedData.writeInt32(this.size);
      paramAbstractSerializedData.writeInt32(this.dc_id);
      paramAbstractSerializedData.writeInt32(this.key_fingerprint);
    }
  }
  
  public static class TL_encryptedFileEmpty
    extends TLRPC.EncryptedFile
  {
    public static int constructor = -NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_encryptedMessage
    extends TLRPC.EncryptedMessage
  {
    public static int constructor = -317144808;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.random_id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.chat_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
      this.bytes = paramAbstractSerializedData.readByteArray(paramBoolean);
      this.file = TLRPC.EncryptedFile.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.random_id);
      paramAbstractSerializedData.writeInt32(this.chat_id);
      paramAbstractSerializedData.writeInt32(this.date);
      paramAbstractSerializedData.writeByteArray(this.bytes);
      this.file.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_encryptedMessageService
    extends TLRPC.EncryptedMessage
  {
    public static int constructor = 594758406;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.random_id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.chat_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
      this.bytes = paramAbstractSerializedData.readByteArray(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.random_id);
      paramAbstractSerializedData.writeInt32(this.chat_id);
      paramAbstractSerializedData.writeInt32(this.date);
      paramAbstractSerializedData.writeByteArray(this.bytes);
    }
  }
  
  public static class TL_error
    extends TLObject
  {
    public static int constructor = -994444869;
    public int code;
    public String text;
    
    public static TL_error TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_error", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_error localTL_error;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_error)
      {
        return paramAbstractSerializedData;
        localTL_error = new TL_error();
        localTL_error.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.code = paramAbstractSerializedData.readInt32(paramBoolean);
      this.text = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.code);
      paramAbstractSerializedData.writeString(this.text);
    }
  }
  
  public static class TL_exportedMessageLink
    extends TLObject
  {
    public static int constructor = NUM;
    public String html;
    public String link;
    
    public static TL_exportedMessageLink TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_exportedMessageLink", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_exportedMessageLink localTL_exportedMessageLink;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_exportedMessageLink)
      {
        return paramAbstractSerializedData;
        localTL_exportedMessageLink = new TL_exportedMessageLink();
        localTL_exportedMessageLink.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.link = paramAbstractSerializedData.readString(paramBoolean);
      this.html = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.link);
      paramAbstractSerializedData.writeString(this.html);
    }
  }
  
  public static class TL_fileEncryptedLocation
    extends TLRPC.FileLocation
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.dc_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.volume_id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.local_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.secret = paramAbstractSerializedData.readInt64(paramBoolean);
      this.key = paramAbstractSerializedData.readByteArray(paramBoolean);
      this.iv = paramAbstractSerializedData.readByteArray(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.dc_id);
      paramAbstractSerializedData.writeInt64(this.volume_id);
      paramAbstractSerializedData.writeInt32(this.local_id);
      paramAbstractSerializedData.writeInt64(this.secret);
      paramAbstractSerializedData.writeByteArray(this.key);
      paramAbstractSerializedData.writeByteArray(this.iv);
    }
  }
  
  public static class TL_fileHash
    extends TLObject
  {
    public static int constructor = NUM;
    public byte[] hash;
    public int limit;
    public int offset;
    
    public static TL_fileHash TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_fileHash", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_fileHash localTL_fileHash;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_fileHash)
      {
        return paramAbstractSerializedData;
        localTL_fileHash = new TL_fileHash();
        localTL_fileHash.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.offset = paramAbstractSerializedData.readInt32(paramBoolean);
      this.limit = paramAbstractSerializedData.readInt32(paramBoolean);
      this.hash = paramAbstractSerializedData.readByteArray(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.offset);
      paramAbstractSerializedData.writeInt32(this.limit);
      paramAbstractSerializedData.writeByteArray(this.hash);
    }
  }
  
  public static class TL_fileLocation
    extends TLRPC.FileLocation
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.dc_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.volume_id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.local_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.secret = paramAbstractSerializedData.readInt64(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.dc_id);
      paramAbstractSerializedData.writeInt64(this.volume_id);
      paramAbstractSerializedData.writeInt32(this.local_id);
      paramAbstractSerializedData.writeInt64(this.secret);
    }
  }
  
  public static class TL_fileLocationUnavailable
    extends TLRPC.FileLocation
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.volume_id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.local_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.secret = paramAbstractSerializedData.readInt64(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.volume_id);
      paramAbstractSerializedData.writeInt32(this.local_id);
      paramAbstractSerializedData.writeInt64(this.secret);
    }
  }
  
  public static class TL_foundGif
    extends TLRPC.FoundGif
  {
    public static int constructor = 372165663;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.url = paramAbstractSerializedData.readString(paramBoolean);
      this.thumb_url = paramAbstractSerializedData.readString(paramBoolean);
      this.content_url = paramAbstractSerializedData.readString(paramBoolean);
      this.content_type = paramAbstractSerializedData.readString(paramBoolean);
      this.w = paramAbstractSerializedData.readInt32(paramBoolean);
      this.h = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.url);
      paramAbstractSerializedData.writeString(this.thumb_url);
      paramAbstractSerializedData.writeString(this.content_url);
      paramAbstractSerializedData.writeString(this.content_type);
      paramAbstractSerializedData.writeInt32(this.w);
      paramAbstractSerializedData.writeInt32(this.h);
    }
  }
  
  public static class TL_foundGifCached
    extends TLRPC.FoundGif
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.url = paramAbstractSerializedData.readString(paramBoolean);
      this.photo = TLRPC.Photo.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.document = TLRPC.Document.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.url);
      this.photo.serializeToStream(paramAbstractSerializedData);
      this.document.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_game
    extends TLObject
  {
    public static int constructor = -NUM;
    public long access_hash;
    public String description;
    public TLRPC.Document document;
    public int flags;
    public long id;
    public TLRPC.Photo photo;
    public String short_name;
    public String title;
    
    public static TL_game TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_game", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_game localTL_game;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_game)
      {
        return paramAbstractSerializedData;
        localTL_game = new TL_game();
        localTL_game.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      this.id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
      this.short_name = paramAbstractSerializedData.readString(paramBoolean);
      this.title = paramAbstractSerializedData.readString(paramBoolean);
      this.description = paramAbstractSerializedData.readString(paramBoolean);
      this.photo = TLRPC.Photo.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      if ((this.flags & 0x1) != 0) {
        this.document = TLRPC.Document.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.flags);
      paramAbstractSerializedData.writeInt64(this.id);
      paramAbstractSerializedData.writeInt64(this.access_hash);
      paramAbstractSerializedData.writeString(this.short_name);
      paramAbstractSerializedData.writeString(this.title);
      paramAbstractSerializedData.writeString(this.description);
      this.photo.serializeToStream(paramAbstractSerializedData);
      if ((this.flags & 0x1) != 0) {
        this.document.serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_geoPoint
    extends TLRPC.GeoPoint
  {
    public static int constructor = 541710092;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this._long = paramAbstractSerializedData.readDouble(paramBoolean);
      this.lat = paramAbstractSerializedData.readDouble(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeDouble(this._long);
      paramAbstractSerializedData.writeDouble(this.lat);
    }
  }
  
  public static class TL_geoPointEmpty
    extends TLRPC.GeoPoint
  {
    public static int constructor = 286776671;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_groupCall
    extends TLRPC.GroupCall
  {
    public static int constructor = 177149476;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      this.id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
      if ((this.flags & 0x1) != 0) {
        this.channel_id = paramAbstractSerializedData.readInt32(paramBoolean);
      }
      this.admin_id = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x2) != 0) {
        this.encryption_key = paramAbstractSerializedData.readByteArray(paramBoolean);
      }
      this.key_fingerprint = paramAbstractSerializedData.readInt64(paramBoolean);
      this.protocol = TLRPC.TL_phoneCallProtocol.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.connection = TLRPC.TL_groupCallConnection.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.reflector_group_tag = paramAbstractSerializedData.readByteArray(paramBoolean);
      this.reflector_self_tag = paramAbstractSerializedData.readByteArray(paramBoolean);
      this.reflector_self_secret = paramAbstractSerializedData.readByteArray(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.flags);
      paramAbstractSerializedData.writeInt64(this.id);
      paramAbstractSerializedData.writeInt64(this.access_hash);
      if ((this.flags & 0x1) != 0) {
        paramAbstractSerializedData.writeInt32(this.channel_id);
      }
      paramAbstractSerializedData.writeInt32(this.admin_id);
      if ((this.flags & 0x2) != 0) {
        paramAbstractSerializedData.writeByteArray(this.encryption_key);
      }
      paramAbstractSerializedData.writeInt64(this.key_fingerprint);
      this.protocol.serializeToStream(paramAbstractSerializedData);
      this.connection.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeByteArray(this.reflector_group_tag);
      paramAbstractSerializedData.writeByteArray(this.reflector_self_tag);
      paramAbstractSerializedData.writeByteArray(this.reflector_self_secret);
    }
  }
  
  public static class TL_groupCallConnection
    extends TLObject
  {
    public static int constructor = NUM;
    public long id;
    public String ip;
    public String ipv6;
    public int port;
    
    public static TL_groupCallConnection TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_groupCallConnection", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_groupCallConnection localTL_groupCallConnection;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_groupCallConnection)
      {
        return paramAbstractSerializedData;
        localTL_groupCallConnection = new TL_groupCallConnection();
        localTL_groupCallConnection.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.ip = paramAbstractSerializedData.readString(paramBoolean);
      this.ipv6 = paramAbstractSerializedData.readString(paramBoolean);
      this.port = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.id);
      paramAbstractSerializedData.writeString(this.ip);
      paramAbstractSerializedData.writeString(this.ipv6);
      paramAbstractSerializedData.writeInt32(this.port);
    }
  }
  
  public static class TL_groupCallDiscarded
    extends TLRPC.GroupCall
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
      this.duration = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.id);
      paramAbstractSerializedData.writeInt64(this.access_hash);
      paramAbstractSerializedData.writeInt32(this.duration);
    }
  }
  
  public static class TL_groupCallParticipant
    extends TLRPC.GroupCallParticipant
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0) {}
      for (boolean bool = true;; bool = false)
      {
        this.readonly = bool;
        this.user_id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.date = paramAbstractSerializedData.readInt32(paramBoolean);
        this.member_tag_hash = paramAbstractSerializedData.readByteArray(paramBoolean);
        this.streams = paramAbstractSerializedData.readByteArray(paramBoolean);
        return;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.readonly) {}
      for (int i = this.flags | 0x1;; i = this.flags & 0xFFFFFFFE)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(this.user_id);
        paramAbstractSerializedData.writeInt32(this.date);
        paramAbstractSerializedData.writeByteArray(this.member_tag_hash);
        paramAbstractSerializedData.writeByteArray(this.streams);
        return;
      }
    }
  }
  
  public static class TL_groupCallParticipantAdmin
    extends TLRPC.GroupCallParticipant
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.user_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.member_tag_hash = paramAbstractSerializedData.readByteArray(paramBoolean);
      this.streams = paramAbstractSerializedData.readByteArray(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.user_id);
      paramAbstractSerializedData.writeByteArray(this.member_tag_hash);
      paramAbstractSerializedData.writeByteArray(this.streams);
    }
  }
  
  public static class TL_groupCallParticipantInvited
    extends TLRPC.GroupCallParticipant
  {
    public static int constructor = 930387696;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      this.user_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.inviter_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0) {
        this.phone_call = TLRPC.TL_inputPhoneCall.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.flags);
      paramAbstractSerializedData.writeInt32(this.user_id);
      paramAbstractSerializedData.writeInt32(this.inviter_id);
      paramAbstractSerializedData.writeInt32(this.date);
      if ((this.flags & 0x1) != 0) {
        this.phone_call.serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_groupCallParticipantLeft
    extends TLRPC.GroupCallParticipant
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.user_id = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.user_id);
    }
  }
  
  public static class TL_groupCallPrivate
    extends TLRPC.GroupCall
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      this.id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
      if ((this.flags & 0x1) != 0) {
        this.channel_id = paramAbstractSerializedData.readInt32(paramBoolean);
      }
      this.participants_count = paramAbstractSerializedData.readInt32(paramBoolean);
      this.admin_id = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.flags);
      paramAbstractSerializedData.writeInt64(this.id);
      paramAbstractSerializedData.writeInt64(this.access_hash);
      if ((this.flags & 0x1) != 0) {
        paramAbstractSerializedData.writeInt32(this.channel_id);
      }
      paramAbstractSerializedData.writeInt32(this.participants_count);
      paramAbstractSerializedData.writeInt32(this.admin_id);
    }
  }
  
  public static class TL_help_appUpdate
    extends TLRPC.help_AppUpdate
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.critical = paramAbstractSerializedData.readBool(paramBoolean);
      this.url = paramAbstractSerializedData.readString(paramBoolean);
      this.text = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.id);
      paramAbstractSerializedData.writeBool(this.critical);
      paramAbstractSerializedData.writeString(this.url);
      paramAbstractSerializedData.writeString(this.text);
    }
  }
  
  public static class TL_help_getAppChangelog
    extends TLObject
  {
    public static int constructor = -NUM;
    public String prev_app_version;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Updates.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.prev_app_version);
    }
  }
  
  public static class TL_help_getAppUpdate
    extends TLObject
  {
    public static int constructor = -NUM;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.help_AppUpdate.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_help_getConfig
    extends TLObject
  {
    public static int constructor = -990308245;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_config.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_help_getInviteText
    extends TLObject
  {
    public static int constructor = NUM;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_help_inviteText.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_help_getNearestDc
    extends TLObject
  {
    public static int constructor = 531836966;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_nearestDc.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_help_getRecentMeUrls
    extends TLObject
  {
    public static int constructor = NUM;
    public String referer;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_help_recentMeUrls.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.referer);
    }
  }
  
  public static class TL_help_getSupport
    extends TLObject
  {
    public static int constructor = -NUM;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_help_support.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_help_getTermsOfService
    extends TLObject
  {
    public static int constructor = 889286899;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_help_termsOfService.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_help_inviteText
    extends TLObject
  {
    public static int constructor = 415997816;
    public String message;
    
    public static TL_help_inviteText TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_help_inviteText", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_help_inviteText localTL_help_inviteText;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_help_inviteText)
      {
        return paramAbstractSerializedData;
        localTL_help_inviteText = new TL_help_inviteText();
        localTL_help_inviteText.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.message = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.message);
    }
  }
  
  public static class TL_help_noAppUpdate
    extends TLRPC.help_AppUpdate
  {
    public static int constructor = -NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_help_recentMeUrls
    extends TLObject
  {
    public static int constructor = 235081943;
    public ArrayList<TLRPC.Chat> chats = new ArrayList();
    public ArrayList<TLRPC.RecentMeUrl> urls = new ArrayList();
    public ArrayList<TLRPC.User> users = new ArrayList();
    
    public static TL_help_recentMeUrls TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_help_recentMeUrls", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_help_recentMeUrls localTL_help_recentMeUrls;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_help_recentMeUrls)
      {
        return paramAbstractSerializedData;
        localTL_help_recentMeUrls = new TL_help_recentMeUrls();
        localTL_help_recentMeUrls.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      Object localObject;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else
      {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
        i = 0;
        if (i >= j) {
          break label89;
        }
        localObject = TLRPC.RecentMeUrl.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localObject != null) {
          break label73;
        }
      }
      label73:
      label89:
      label177:
      label263:
      for (;;)
      {
        return;
        this.urls.add(localObject);
        i++;
        break;
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i != 481674261)
        {
          if (paramBoolean) {
            throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
          }
        }
        else
        {
          j = paramAbstractSerializedData.readInt32(paramBoolean);
          for (i = 0;; i++)
          {
            if (i >= j) {
              break label177;
            }
            localObject = TLRPC.Chat.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
            if (localObject == null) {
              break;
            }
            this.chats.add(localObject);
          }
          i = paramAbstractSerializedData.readInt32(paramBoolean);
          if (i != 481674261)
          {
            if (paramBoolean) {
              throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
            }
          }
          else
          {
            j = paramAbstractSerializedData.readInt32(paramBoolean);
            for (i = 0;; i++)
            {
              if (i >= j) {
                break label263;
              }
              localObject = TLRPC.User.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
              if (localObject == null) {
                break;
              }
              this.users.add(localObject);
            }
          }
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.urls.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.RecentMeUrl)this.urls.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.chats.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        ((TLRPC.Chat)this.chats.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.users.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        ((TLRPC.User)this.users.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_help_saveAppLog
    extends TLObject
  {
    public static int constructor = NUM;
    public ArrayList<TLRPC.TL_inputAppEvent> events = new ArrayList();
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.events.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.TL_inputAppEvent)this.events.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_help_setBotUpdatesStatus
    extends TLObject
  {
    public static int constructor = -333262899;
    public String message;
    public int pending_updates_count;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.pending_updates_count);
      paramAbstractSerializedData.writeString(this.message);
    }
  }
  
  public static class TL_help_support
    extends TLObject
  {
    public static int constructor = 398898678;
    public String phone_number;
    public TLRPC.User user;
    
    public static TL_help_support TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_help_support", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_help_support localTL_help_support;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_help_support)
      {
        return paramAbstractSerializedData;
        localTL_help_support = new TL_help_support();
        localTL_help_support.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.phone_number = paramAbstractSerializedData.readString(paramBoolean);
      this.user = TLRPC.User.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.phone_number);
      this.user.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_help_termsOfService
    extends TLObject
  {
    public static int constructor = -236044656;
    public String text;
    
    public static TL_help_termsOfService TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_help_termsOfService", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_help_termsOfService localTL_help_termsOfService;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_help_termsOfService)
      {
        return paramAbstractSerializedData;
        localTL_help_termsOfService = new TL_help_termsOfService();
        localTL_help_termsOfService.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.text = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.text);
    }
  }
  
  public static class TL_highScore
    extends TLObject
  {
    public static int constructor = NUM;
    public int pos;
    public int score;
    public int user_id;
    
    public static TL_highScore TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_highScore", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_highScore localTL_highScore;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_highScore)
      {
        return paramAbstractSerializedData;
        localTL_highScore = new TL_highScore();
        localTL_highScore.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.pos = paramAbstractSerializedData.readInt32(paramBoolean);
      this.user_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.score = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.pos);
      paramAbstractSerializedData.writeInt32(this.user_id);
      paramAbstractSerializedData.writeInt32(this.score);
    }
  }
  
  public static class TL_importedContact
    extends TLObject
  {
    public static int constructor = -805141448;
    public long client_id;
    public int user_id;
    
    public static TL_importedContact TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_importedContact", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_importedContact localTL_importedContact;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_importedContact)
      {
        return paramAbstractSerializedData;
        localTL_importedContact = new TL_importedContact();
        localTL_importedContact.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.user_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.client_id = paramAbstractSerializedData.readInt64(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.user_id);
      paramAbstractSerializedData.writeInt64(this.client_id);
    }
  }
  
  public static class TL_inlineBotSwitchPM
    extends TLObject
  {
    public static int constructor = NUM;
    public String start_param;
    public String text;
    
    public static TL_inlineBotSwitchPM TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_inlineBotSwitchPM", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_inlineBotSwitchPM localTL_inlineBotSwitchPM;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_inlineBotSwitchPM)
      {
        return paramAbstractSerializedData;
        localTL_inlineBotSwitchPM = new TL_inlineBotSwitchPM();
        localTL_inlineBotSwitchPM.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.text = paramAbstractSerializedData.readString(paramBoolean);
      this.start_param = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.text);
      paramAbstractSerializedData.writeString(this.start_param);
    }
  }
  
  public static class TL_inputAppEvent
    extends TLObject
  {
    public static int constructor = NUM;
    public String data;
    public long peer;
    public double time;
    public String type;
    
    public static TL_inputAppEvent TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_inputAppEvent", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_inputAppEvent localTL_inputAppEvent;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_inputAppEvent)
      {
        return paramAbstractSerializedData;
        localTL_inputAppEvent = new TL_inputAppEvent();
        localTL_inputAppEvent.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.time = paramAbstractSerializedData.readDouble(paramBoolean);
      this.type = paramAbstractSerializedData.readString(paramBoolean);
      this.peer = paramAbstractSerializedData.readInt64(paramBoolean);
      this.data = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeDouble(this.time);
      paramAbstractSerializedData.writeString(this.type);
      paramAbstractSerializedData.writeInt64(this.peer);
      paramAbstractSerializedData.writeString(this.data);
    }
  }
  
  public static class TL_inputBotInlineMessageID
    extends TLObject
  {
    public static int constructor = -NUM;
    public long access_hash;
    public int dc_id;
    public long id;
    
    public static TL_inputBotInlineMessageID TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_inputBotInlineMessageID", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_inputBotInlineMessageID localTL_inputBotInlineMessageID;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_inputBotInlineMessageID)
      {
        return paramAbstractSerializedData;
        localTL_inputBotInlineMessageID = new TL_inputBotInlineMessageID();
        localTL_inputBotInlineMessageID.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.dc_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.dc_id);
      paramAbstractSerializedData.writeInt64(this.id);
      paramAbstractSerializedData.writeInt64(this.access_hash);
    }
  }
  
  public static class TL_inputChannel
    extends TLRPC.InputChannel
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.channel_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.channel_id);
      paramAbstractSerializedData.writeInt64(this.access_hash);
    }
  }
  
  public static class TL_inputChannelEmpty
    extends TLRPC.InputChannel
  {
    public static int constructor = -292807034;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_inputChatPhoto
    extends TLRPC.InputChatPhoto
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = TLRPC.InputPhoto.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.id.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_inputChatPhotoEmpty
    extends TLRPC.InputChatPhoto
  {
    public static int constructor = 480546647;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_inputChatUploadedPhoto
    extends TLRPC.InputChatPhoto
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.file = TLRPC.InputFile.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.file.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_inputDialogPeer
    extends TLRPC.InputDialogPeer
  {
    public static int constructor = -55902537;
    public TLRPC.InputPeer peer;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.peer = TLRPC.InputPeer.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.peer.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_inputDialogPeerFeed
    extends TLRPC.InputDialogPeer
  {
    public static int constructor = 741914831;
    public int feed_id;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.feed_id = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.feed_id);
    }
  }
  
  public static class TL_inputDocument
    extends TLRPC.InputDocument
  {
    public static int constructor = 410618194;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.id);
      paramAbstractSerializedData.writeInt64(this.access_hash);
    }
  }
  
  public static class TL_inputDocumentEmpty
    extends TLRPC.InputDocument
  {
    public static int constructor = NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_inputDocumentFileLocation
    extends TLRPC.InputFileLocation
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.id);
      paramAbstractSerializedData.writeInt64(this.access_hash);
    }
  }
  
  public static class TL_inputEncryptedChat
    extends TLObject
  {
    public static int constructor = -247351839;
    public long access_hash;
    public int chat_id;
    
    public static TL_inputEncryptedChat TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_inputEncryptedChat", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_inputEncryptedChat localTL_inputEncryptedChat;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_inputEncryptedChat)
      {
        return paramAbstractSerializedData;
        localTL_inputEncryptedChat = new TL_inputEncryptedChat();
        localTL_inputEncryptedChat.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.chat_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.chat_id);
      paramAbstractSerializedData.writeInt64(this.access_hash);
    }
  }
  
  public static class TL_inputEncryptedFile
    extends TLRPC.InputEncryptedFile
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.id);
      paramAbstractSerializedData.writeInt64(this.access_hash);
    }
  }
  
  public static class TL_inputEncryptedFileBigUploaded
    extends TLRPC.InputEncryptedFile
  {
    public static int constructor = 767652808;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.parts = paramAbstractSerializedData.readInt32(paramBoolean);
      this.key_fingerprint = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.id);
      paramAbstractSerializedData.writeInt32(this.parts);
      paramAbstractSerializedData.writeInt32(this.key_fingerprint);
    }
  }
  
  public static class TL_inputEncryptedFileEmpty
    extends TLRPC.InputEncryptedFile
  {
    public static int constructor = 406307684;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_inputEncryptedFileLocation
    extends TLRPC.InputFileLocation
  {
    public static int constructor = -182231723;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.id);
      paramAbstractSerializedData.writeInt64(this.access_hash);
    }
  }
  
  public static class TL_inputEncryptedFileUploaded
    extends TLRPC.InputEncryptedFile
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.parts = paramAbstractSerializedData.readInt32(paramBoolean);
      this.md5_checksum = paramAbstractSerializedData.readString(paramBoolean);
      this.key_fingerprint = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.id);
      paramAbstractSerializedData.writeInt32(this.parts);
      paramAbstractSerializedData.writeString(this.md5_checksum);
      paramAbstractSerializedData.writeInt32(this.key_fingerprint);
    }
  }
  
  public static class TL_inputFile
    extends TLRPC.InputFile
  {
    public static int constructor = -181407105;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.parts = paramAbstractSerializedData.readInt32(paramBoolean);
      this.name = paramAbstractSerializedData.readString(paramBoolean);
      this.md5_checksum = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.id);
      paramAbstractSerializedData.writeInt32(this.parts);
      paramAbstractSerializedData.writeString(this.name);
      paramAbstractSerializedData.writeString(this.md5_checksum);
    }
  }
  
  public static class TL_inputFileBig
    extends TLRPC.InputFile
  {
    public static int constructor = -95482955;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.parts = paramAbstractSerializedData.readInt32(paramBoolean);
      this.name = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.id);
      paramAbstractSerializedData.writeInt32(this.parts);
      paramAbstractSerializedData.writeString(this.name);
    }
  }
  
  public static class TL_inputFileLocation
    extends TLRPC.InputFileLocation
  {
    public static int constructor = 342061462;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.volume_id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.local_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.secret = paramAbstractSerializedData.readInt64(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.volume_id);
      paramAbstractSerializedData.writeInt32(this.local_id);
      paramAbstractSerializedData.writeInt64(this.secret);
    }
  }
  
  public static class TL_inputGameID
    extends TLRPC.InputGame
  {
    public static int constructor = 53231223;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.id);
      paramAbstractSerializedData.writeInt64(this.access_hash);
    }
  }
  
  public static class TL_inputGameShortName
    extends TLRPC.InputGame
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.bot_id = TLRPC.InputUser.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.short_name = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.bot_id.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeString(this.short_name);
    }
  }
  
  public static class TL_inputGeoPoint
    extends TLRPC.InputGeoPoint
  {
    public static int constructor = -206066487;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.lat = paramAbstractSerializedData.readDouble(paramBoolean);
      this._long = paramAbstractSerializedData.readDouble(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeDouble(this.lat);
      paramAbstractSerializedData.writeDouble(this._long);
    }
  }
  
  public static class TL_inputGeoPointEmpty
    extends TLRPC.InputGeoPoint
  {
    public static int constructor = -457104426;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_inputGroupCall
    extends TLObject
  {
    public static int constructor = -659913713;
    public long access_hash;
    public long id;
    
    public static TL_inputGroupCall TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_inputGroupCall", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_inputGroupCall localTL_inputGroupCall;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_inputGroupCall)
      {
        return paramAbstractSerializedData;
        localTL_inputGroupCall = new TL_inputGroupCall();
        localTL_inputGroupCall.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.id);
      paramAbstractSerializedData.writeInt64(this.access_hash);
    }
  }
  
  public static class TL_inputMediaContact
    extends TLRPC.InputMedia
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.phone_number = paramAbstractSerializedData.readString(paramBoolean);
      this.first_name = paramAbstractSerializedData.readString(paramBoolean);
      this.last_name = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.phone_number);
      paramAbstractSerializedData.writeString(this.first_name);
      paramAbstractSerializedData.writeString(this.last_name);
    }
  }
  
  public static class TL_inputMediaDocument
    extends TLRPC.InputMedia
  {
    public static int constructor = 598418386;
    public TLRPC.InputDocument id;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      this.id = TLRPC.InputDocument.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      if ((this.flags & 0x1) != 0) {
        this.ttl_seconds = paramAbstractSerializedData.readInt32(paramBoolean);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.flags);
      this.id.serializeToStream(paramAbstractSerializedData);
      if ((this.flags & 0x1) != 0) {
        paramAbstractSerializedData.writeInt32(this.ttl_seconds);
      }
    }
  }
  
  public static class TL_inputMediaDocumentExternal
    extends TLRPC.InputMedia
  {
    public static int constructor = -78455655;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      this.url = paramAbstractSerializedData.readString(paramBoolean);
      if ((this.flags & 0x1) != 0) {
        this.ttl_seconds = paramAbstractSerializedData.readInt32(paramBoolean);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.flags);
      paramAbstractSerializedData.writeString(this.url);
      if ((this.flags & 0x1) != 0) {
        paramAbstractSerializedData.writeInt32(this.ttl_seconds);
      }
    }
  }
  
  public static class TL_inputMediaEmpty
    extends TLRPC.InputMedia
  {
    public static int constructor = -NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_inputMediaGame
    extends TLRPC.InputMedia
  {
    public static int constructor = -750828557;
    public TLRPC.InputGame id;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = TLRPC.InputGame.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.id.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_inputMediaGeoLive
    extends TLRPC.InputMedia
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.geo_point = TLRPC.InputGeoPoint.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.period = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.geo_point.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(this.period);
    }
  }
  
  public static class TL_inputMediaGeoPoint
    extends TLRPC.InputMedia
  {
    public static int constructor = -104578748;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.geo_point = TLRPC.InputGeoPoint.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.geo_point.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_inputMediaGifExternal
    extends TLRPC.InputMedia
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.url = paramAbstractSerializedData.readString(paramBoolean);
      this.q = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.url);
      paramAbstractSerializedData.writeString(this.q);
    }
  }
  
  public static class TL_inputMediaPhoto
    extends TLRPC.InputMedia
  {
    public static int constructor = -NUM;
    public TLRPC.InputPhoto id;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      this.id = TLRPC.InputPhoto.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      if ((this.flags & 0x1) != 0) {
        this.ttl_seconds = paramAbstractSerializedData.readInt32(paramBoolean);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.flags);
      this.id.serializeToStream(paramAbstractSerializedData);
      if ((this.flags & 0x1) != 0) {
        paramAbstractSerializedData.writeInt32(this.ttl_seconds);
      }
    }
  }
  
  public static class TL_inputMediaPhotoExternal
    extends TLRPC.InputMedia
  {
    public static int constructor = -440664550;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      this.url = paramAbstractSerializedData.readString(paramBoolean);
      if ((this.flags & 0x1) != 0) {
        this.ttl_seconds = paramAbstractSerializedData.readInt32(paramBoolean);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.flags);
      paramAbstractSerializedData.writeString(this.url);
      if ((this.flags & 0x1) != 0) {
        paramAbstractSerializedData.writeInt32(this.ttl_seconds);
      }
    }
  }
  
  public static class TL_inputMediaUploadedDocument
    extends TLRPC.InputMedia
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x8) != 0) {}
      for (boolean bool = true;; bool = false)
      {
        this.nosound_video = bool;
        this.file = TLRPC.InputFile.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if ((this.flags & 0x4) != 0) {
          this.thumb = TLRPC.InputFile.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        }
        this.mime_type = paramAbstractSerializedData.readString(paramBoolean);
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i == 481674261) {
          break;
        }
        if (!paramBoolean) {
          break label154;
        }
        throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
      }
      int j = paramAbstractSerializedData.readInt32(paramBoolean);
      int i = 0;
      Object localObject;
      if (i < j)
      {
        localObject = TLRPC.DocumentAttribute.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localObject != null) {}
      }
      for (;;)
      {
        label154:
        return;
        this.attributes.add(localObject);
        i++;
        break;
        if ((this.flags & 0x1) != 0)
        {
          i = paramAbstractSerializedData.readInt32(paramBoolean);
          if (i != 481674261)
          {
            if (paramBoolean) {
              throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
            }
          }
          else
          {
            j = paramAbstractSerializedData.readInt32(paramBoolean);
            for (i = 0;; i++)
            {
              if (i >= j) {
                break label273;
              }
              localObject = TLRPC.InputDocument.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
              if (localObject == null) {
                break;
              }
              this.stickers.add(localObject);
            }
          }
        }
        else
        {
          label273:
          if ((this.flags & 0x2) != 0) {
            this.ttl_seconds = paramAbstractSerializedData.readInt32(paramBoolean);
          }
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.nosound_video) {}
      int j;
      for (int i = this.flags | 0x8;; i = this.flags & 0xFFFFFFF7)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        this.file.serializeToStream(paramAbstractSerializedData);
        if ((this.flags & 0x4) != 0) {
          this.thumb.serializeToStream(paramAbstractSerializedData);
        }
        paramAbstractSerializedData.writeString(this.mime_type);
        paramAbstractSerializedData.writeInt32(481674261);
        j = this.attributes.size();
        paramAbstractSerializedData.writeInt32(j);
        for (i = 0; i < j; i++) {
          ((TLRPC.DocumentAttribute)this.attributes.get(i)).serializeToStream(paramAbstractSerializedData);
        }
      }
      if ((this.flags & 0x1) != 0)
      {
        paramAbstractSerializedData.writeInt32(481674261);
        j = this.stickers.size();
        paramAbstractSerializedData.writeInt32(j);
        for (i = 0; i < j; i++) {
          ((TLRPC.InputDocument)this.stickers.get(i)).serializeToStream(paramAbstractSerializedData);
        }
      }
      if ((this.flags & 0x2) != 0) {
        paramAbstractSerializedData.writeInt32(this.ttl_seconds);
      }
    }
  }
  
  public static class TL_inputMediaUploadedPhoto
    extends TLRPC.InputMedia
  {
    public static int constructor = 505969924;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      this.file = TLRPC.InputFile.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      int i;
      TLRPC.InputDocument localInputDocument;
      if ((this.flags & 0x1) != 0)
      {
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i != 481674261)
        {
          if (paramBoolean) {
            throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
          }
        }
        else
        {
          int j = paramAbstractSerializedData.readInt32(paramBoolean);
          i = 0;
          if (i >= j) {
            break label121;
          }
          localInputDocument = TLRPC.InputDocument.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localInputDocument != null) {
            break label105;
          }
        }
      }
      for (;;)
      {
        return;
        label105:
        this.stickers.add(localInputDocument);
        i++;
        break;
        label121:
        if ((this.flags & 0x2) != 0) {
          this.ttl_seconds = paramAbstractSerializedData.readInt32(paramBoolean);
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.flags);
      this.file.serializeToStream(paramAbstractSerializedData);
      if ((this.flags & 0x1) != 0)
      {
        paramAbstractSerializedData.writeInt32(481674261);
        int i = this.stickers.size();
        paramAbstractSerializedData.writeInt32(i);
        for (int j = 0; j < i; j++) {
          ((TLRPC.InputDocument)this.stickers.get(j)).serializeToStream(paramAbstractSerializedData);
        }
      }
      if ((this.flags & 0x2) != 0) {
        paramAbstractSerializedData.writeInt32(this.ttl_seconds);
      }
    }
  }
  
  public static class TL_inputMediaVenue
    extends TLRPC.InputMedia
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.geo_point = TLRPC.InputGeoPoint.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.title = paramAbstractSerializedData.readString(paramBoolean);
      this.address = paramAbstractSerializedData.readString(paramBoolean);
      this.provider = paramAbstractSerializedData.readString(paramBoolean);
      this.venue_id = paramAbstractSerializedData.readString(paramBoolean);
      this.venue_type = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.geo_point.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeString(this.title);
      paramAbstractSerializedData.writeString(this.address);
      paramAbstractSerializedData.writeString(this.provider);
      paramAbstractSerializedData.writeString(this.venue_id);
      paramAbstractSerializedData.writeString(this.venue_type);
    }
  }
  
  public static class TL_inputMessageEntityMentionName
    extends TLRPC.MessageEntity
  {
    public static int constructor = 546203849;
    public TLRPC.InputUser user_id;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.offset = paramAbstractSerializedData.readInt32(paramBoolean);
      this.length = paramAbstractSerializedData.readInt32(paramBoolean);
      this.user_id = TLRPC.InputUser.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.offset);
      paramAbstractSerializedData.writeInt32(this.length);
      this.user_id.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_inputMessagesFilterChatPhotos
    extends TLRPC.MessagesFilter
  {
    public static int constructor = 975236280;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_inputMessagesFilterContacts
    extends TLRPC.MessagesFilter
  {
    public static int constructor = -530392189;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_inputMessagesFilterDocument
    extends TLRPC.MessagesFilter
  {
    public static int constructor = -NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_inputMessagesFilterEmpty
    extends TLRPC.MessagesFilter
  {
    public static int constructor = NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_inputMessagesFilterGeo
    extends TLRPC.MessagesFilter
  {
    public static int constructor = -419271411;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_inputMessagesFilterGif
    extends TLRPC.MessagesFilter
  {
    public static int constructor = -3644025;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_inputMessagesFilterMusic
    extends TLRPC.MessagesFilter
  {
    public static int constructor = 928101534;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_inputMessagesFilterMyMentions
    extends TLRPC.MessagesFilter
  {
    public static int constructor = -NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_inputMessagesFilterPhoneCalls
    extends TLRPC.MessagesFilter
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0) {}
      for (paramBoolean = true;; paramBoolean = false)
      {
        this.missed = paramBoolean;
        return;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.missed) {}
      for (int i = this.flags | 0x1;; i = this.flags & 0xFFFFFFFE)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        return;
      }
    }
  }
  
  public static class TL_inputMessagesFilterPhotoVideo
    extends TLRPC.MessagesFilter
  {
    public static int constructor = NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_inputMessagesFilterPhotoVideoDocuments
    extends TLRPC.MessagesFilter
  {
    public static int constructor = -648121413;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_inputMessagesFilterPhotos
    extends TLRPC.MessagesFilter
  {
    public static int constructor = -NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_inputMessagesFilterRoundVideo
    extends TLRPC.MessagesFilter
  {
    public static int constructor = -NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_inputMessagesFilterRoundVoice
    extends TLRPC.MessagesFilter
  {
    public static int constructor = NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_inputMessagesFilterUrl
    extends TLRPC.MessagesFilter
  {
    public static int constructor = NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_inputMessagesFilterVideo
    extends TLRPC.MessagesFilter
  {
    public static int constructor = -NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_inputMessagesFilterVoice
    extends TLRPC.MessagesFilter
  {
    public static int constructor = NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_inputNotifyAll
    extends TLRPC.InputNotifyPeer
  {
    public static int constructor = -NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_inputNotifyChats
    extends TLRPC.InputNotifyPeer
  {
    public static int constructor = NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_inputNotifyPeer
    extends TLRPC.InputNotifyPeer
  {
    public static int constructor = -NUM;
    public TLRPC.InputPeer peer;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.peer = TLRPC.InputPeer.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.peer.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_inputNotifyUsers
    extends TLRPC.InputNotifyPeer
  {
    public static int constructor = 423314455;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_inputPaymentCredentials
    extends TLRPC.InputPaymentCredentials
  {
    public static int constructor = 873977640;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0) {}
      for (boolean bool = true;; bool = false)
      {
        this.save = bool;
        this.data = TLRPC.TL_dataJSON.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        return;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.save) {}
      for (int i = this.flags | 0x1;; i = this.flags & 0xFFFFFFFE)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        this.data.serializeToStream(paramAbstractSerializedData);
        return;
      }
    }
  }
  
  public static class TL_inputPaymentCredentialsAndroidPay
    extends TLRPC.InputPaymentCredentials
  {
    public static int constructor = -905587442;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.payment_token = TLRPC.TL_dataJSON.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.google_transaction_id = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.payment_token.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeString(this.google_transaction_id);
    }
  }
  
  public static class TL_inputPaymentCredentialsSaved
    extends TLRPC.InputPaymentCredentials
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readString(paramBoolean);
      this.tmp_password = paramAbstractSerializedData.readByteArray(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.id);
      paramAbstractSerializedData.writeByteArray(this.tmp_password);
    }
  }
  
  public static class TL_inputPeerChannel
    extends TLRPC.InputPeer
  {
    public static int constructor = 548253432;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.channel_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.channel_id);
      paramAbstractSerializedData.writeInt64(this.access_hash);
    }
  }
  
  public static class TL_inputPeerChat
    extends TLRPC.InputPeer
  {
    public static int constructor = 396093539;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.chat_id = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.chat_id);
    }
  }
  
  public static class TL_inputPeerEmpty
    extends TLRPC.InputPeer
  {
    public static int constructor = NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_inputPeerNotifyEventsAll
    extends TLRPC.InputPeerNotifyEvents
  {
    public static int constructor = -395694988;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_inputPeerNotifyEventsEmpty
    extends TLRPC.InputPeerNotifyEvents
  {
    public static int constructor = -265263912;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_inputPeerNotifySettings
    extends TLObject
  {
    public static int constructor = 949182130;
    public int flags;
    public int mute_until;
    public boolean show_previews;
    public boolean silent;
    public String sound;
    
    public static TL_inputPeerNotifySettings TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_inputPeerNotifySettings", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_inputPeerNotifySettings localTL_inputPeerNotifySettings;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_inputPeerNotifySettings)
      {
        return paramAbstractSerializedData;
        localTL_inputPeerNotifySettings = new TL_inputPeerNotifySettings();
        localTL_inputPeerNotifySettings.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      boolean bool1 = true;
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0)
      {
        bool2 = true;
        this.show_previews = bool2;
        if ((this.flags & 0x2) == 0) {
          break label72;
        }
      }
      label72:
      for (boolean bool2 = bool1;; bool2 = false)
      {
        this.silent = bool2;
        this.mute_until = paramAbstractSerializedData.readInt32(paramBoolean);
        this.sound = paramAbstractSerializedData.readString(paramBoolean);
        return;
        bool2 = false;
        break;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.show_previews)
      {
        i = this.flags | 0x1;
        this.flags = i;
        if (!this.silent) {
          break label81;
        }
      }
      label81:
      for (int i = this.flags | 0x2;; i = this.flags & 0xFFFFFFFD)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(this.mute_until);
        paramAbstractSerializedData.writeString(this.sound);
        return;
        i = this.flags & 0xFFFFFFFE;
        break;
      }
    }
  }
  
  public static class TL_inputPeerSelf
    extends TLRPC.InputPeer
  {
    public static int constructor = NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_inputPeerUser
    extends TLRPC.InputPeer
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.user_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.user_id);
      paramAbstractSerializedData.writeInt64(this.access_hash);
    }
  }
  
  public static class TL_inputPhoneCall
    extends TLObject
  {
    public static int constructor = 506920429;
    public long access_hash;
    public long id;
    
    public static TL_inputPhoneCall TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_inputPhoneCall", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_inputPhoneCall localTL_inputPhoneCall;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_inputPhoneCall)
      {
        return paramAbstractSerializedData;
        localTL_inputPhoneCall = new TL_inputPhoneCall();
        localTL_inputPhoneCall.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.id);
      paramAbstractSerializedData.writeInt64(this.access_hash);
    }
  }
  
  public static class TL_inputPhoneContact
    extends TLObject
  {
    public static int constructor = -208488460;
    public long client_id;
    public String first_name;
    public String last_name;
    public String phone;
    
    public static TL_inputPhoneContact TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_inputPhoneContact", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_inputPhoneContact localTL_inputPhoneContact;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_inputPhoneContact)
      {
        return paramAbstractSerializedData;
        localTL_inputPhoneContact = new TL_inputPhoneContact();
        localTL_inputPhoneContact.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.client_id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.phone = paramAbstractSerializedData.readString(paramBoolean);
      this.first_name = paramAbstractSerializedData.readString(paramBoolean);
      this.last_name = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.client_id);
      paramAbstractSerializedData.writeString(this.phone);
      paramAbstractSerializedData.writeString(this.first_name);
      paramAbstractSerializedData.writeString(this.last_name);
    }
  }
  
  public static class TL_inputPhoto
    extends TLRPC.InputPhoto
  {
    public static int constructor = -74070332;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.id);
      paramAbstractSerializedData.writeInt64(this.access_hash);
    }
  }
  
  public static class TL_inputPhotoEmpty
    extends TLRPC.InputPhoto
  {
    public static int constructor = 483901197;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_inputPrivacyKeyChatInvite
    extends TLRPC.InputPrivacyKey
  {
    public static int constructor = -NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_inputPrivacyKeyPhoneCall
    extends TLRPC.InputPrivacyKey
  {
    public static int constructor = -88417185;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_inputPrivacyKeyStatusTimestamp
    extends TLRPC.InputPrivacyKey
  {
    public static int constructor = NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_inputPrivacyValueAllowAll
    extends TLRPC.InputPrivacyRule
  {
    public static int constructor = 407582158;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_inputPrivacyValueAllowContacts
    extends TLRPC.InputPrivacyRule
  {
    public static int constructor = 218751099;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_inputPrivacyValueAllowUsers
    extends TLRPC.InputPrivacyRule
  {
    public static int constructor = 320652927;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
      }
      for (i = 0;; i++)
      {
        TLRPC.InputUser localInputUser;
        if (i < j)
        {
          localInputUser = TLRPC.InputUser.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localInputUser != null) {}
        }
        else
        {
          return;
        }
        this.users.add(localInputUser);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.users.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.InputUser)this.users.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_inputPrivacyValueDisallowAll
    extends TLRPC.InputPrivacyRule
  {
    public static int constructor = -697604407;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_inputPrivacyValueDisallowContacts
    extends TLRPC.InputPrivacyRule
  {
    public static int constructor = 195371015;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_inputPrivacyValueDisallowUsers
    extends TLRPC.InputPrivacyRule
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
      }
      for (i = 0;; i++)
      {
        TLRPC.InputUser localInputUser;
        if (i < j)
        {
          localInputUser = TLRPC.InputUser.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localInputUser != null) {}
        }
        else
        {
          return;
        }
        this.users.add(localInputUser);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.users.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.InputUser)this.users.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_inputReportReasonOther
    extends TLRPC.ReportReason
  {
    public static int constructor = -512463606;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.text = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.text);
    }
  }
  
  public static class TL_inputReportReasonPornography
    extends TLRPC.ReportReason
  {
    public static int constructor = 777640226;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_inputReportReasonSpam
    extends TLRPC.ReportReason
  {
    public static int constructor = NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_inputReportReasonViolence
    extends TLRPC.ReportReason
  {
    public static int constructor = 505595789;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_inputSingleMedia
    extends TLObject
  {
    public static int constructor = 482797855;
    public ArrayList<TLRPC.MessageEntity> entities = new ArrayList();
    public int flags;
    public TLRPC.InputMedia media;
    public String message;
    public long random_id;
    
    public static TL_inputSingleMedia TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_inputSingleMedia", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_inputSingleMedia localTL_inputSingleMedia;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_inputSingleMedia)
      {
        return paramAbstractSerializedData;
        localTL_inputSingleMedia = new TL_inputSingleMedia();
        localTL_inputSingleMedia.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      this.media = TLRPC.InputMedia.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.random_id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.message = paramAbstractSerializedData.readString(paramBoolean);
      int j;
      if ((this.flags & 0x1) != 0)
      {
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i != 481674261)
        {
          if (paramBoolean) {
            throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
          }
        }
        else {
          j = paramAbstractSerializedData.readInt32(paramBoolean);
        }
      }
      for (int i = 0;; i++)
      {
        TLRPC.MessageEntity localMessageEntity;
        if (i < j)
        {
          localMessageEntity = TLRPC.MessageEntity.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localMessageEntity != null) {}
        }
        else
        {
          return;
        }
        this.entities.add(localMessageEntity);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.flags);
      this.media.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt64(this.random_id);
      paramAbstractSerializedData.writeString(this.message);
      if ((this.flags & 0x1) != 0)
      {
        paramAbstractSerializedData.writeInt32(481674261);
        int i = this.entities.size();
        paramAbstractSerializedData.writeInt32(i);
        for (int j = 0; j < i; j++) {
          ((TLRPC.MessageEntity)this.entities.get(j)).serializeToStream(paramAbstractSerializedData);
        }
      }
    }
  }
  
  public static class TL_inputStickerSetEmpty
    extends TLRPC.InputStickerSet
  {
    public static int constructor = -4838507;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_inputStickerSetID
    extends TLRPC.InputStickerSet
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.id);
      paramAbstractSerializedData.writeInt64(this.access_hash);
    }
  }
  
  public static class TL_inputStickerSetShortName
    extends TLRPC.InputStickerSet
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.short_name = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.short_name);
    }
  }
  
  public static class TL_inputStickeredMediaDocument
    extends TLRPC.InputStickeredMedia
  {
    public static int constructor = 70813275;
    public TLRPC.InputDocument id;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = TLRPC.InputDocument.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.id.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_inputStickeredMediaPhoto
    extends TLRPC.InputStickeredMedia
  {
    public static int constructor = NUM;
    public TLRPC.InputPhoto id;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = TLRPC.InputPhoto.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.id.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_inputUser
    extends TLRPC.InputUser
  {
    public static int constructor = -668391402;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.user_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.user_id);
      paramAbstractSerializedData.writeInt64(this.access_hash);
    }
  }
  
  public static class TL_inputUserEmpty
    extends TLRPC.InputUser
  {
    public static int constructor = -NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_inputUserSelf
    extends TLRPC.InputUser
  {
    public static int constructor = -138301121;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_inputWebDocument
    extends TLObject
  {
    public static int constructor = -NUM;
    public ArrayList<TLRPC.DocumentAttribute> attributes = new ArrayList();
    public String mime_type;
    public int size;
    public String url;
    
    public static TL_inputWebDocument TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_inputWebDocument", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_inputWebDocument localTL_inputWebDocument;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_inputWebDocument)
      {
        return paramAbstractSerializedData;
        localTL_inputWebDocument = new TL_inputWebDocument();
        localTL_inputWebDocument.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.url = paramAbstractSerializedData.readString(paramBoolean);
      this.size = paramAbstractSerializedData.readInt32(paramBoolean);
      this.mime_type = paramAbstractSerializedData.readString(paramBoolean);
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
      }
      for (i = 0;; i++)
      {
        TLRPC.DocumentAttribute localDocumentAttribute;
        if (i < j)
        {
          localDocumentAttribute = TLRPC.DocumentAttribute.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localDocumentAttribute != null) {}
        }
        else
        {
          return;
        }
        this.attributes.add(localDocumentAttribute);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.url);
      paramAbstractSerializedData.writeInt32(this.size);
      paramAbstractSerializedData.writeString(this.mime_type);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.attributes.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.DocumentAttribute)this.attributes.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_inputWebFileLocation
    extends TLObject
  {
    public static int constructor = -NUM;
    public long access_hash;
    public String url;
    
    public static TL_inputWebFileLocation TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_inputWebFileLocation", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_inputWebFileLocation localTL_inputWebFileLocation;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_inputWebFileLocation)
      {
        return paramAbstractSerializedData;
        localTL_inputWebFileLocation = new TL_inputWebFileLocation();
        localTL_inputWebFileLocation.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.url = paramAbstractSerializedData.readString(paramBoolean);
      this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.url);
      paramAbstractSerializedData.writeInt64(this.access_hash);
    }
  }
  
  public static class TL_invoice
    extends TLObject
  {
    public static int constructor = -NUM;
    public String currency;
    public boolean email_requested;
    public boolean email_to_provider;
    public int flags;
    public boolean flexible;
    public boolean name_requested;
    public boolean phone_requested;
    public boolean phone_to_provider;
    public ArrayList<TLRPC.TL_labeledPrice> prices = new ArrayList();
    public boolean shipping_address_requested;
    public boolean test;
    
    public static TL_invoice TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_invoice", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_invoice localTL_invoice;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_invoice)
      {
        return paramAbstractSerializedData;
        localTL_invoice = new TL_invoice();
        localTL_invoice.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0)
      {
        bool = true;
        this.test = bool;
        if ((this.flags & 0x2) == 0) {
          break label200;
        }
        bool = true;
        label36:
        this.name_requested = bool;
        if ((this.flags & 0x4) == 0) {
          break label205;
        }
        bool = true;
        label52:
        this.phone_requested = bool;
        if ((this.flags & 0x8) == 0) {
          break label210;
        }
        bool = true;
        label69:
        this.email_requested = bool;
        if ((this.flags & 0x10) == 0) {
          break label215;
        }
        bool = true;
        label86:
        this.shipping_address_requested = bool;
        if ((this.flags & 0x20) == 0) {
          break label220;
        }
        bool = true;
        label103:
        this.flexible = bool;
        if ((this.flags & 0x40) == 0) {
          break label225;
        }
        bool = true;
        label120:
        this.phone_to_provider = bool;
        if ((this.flags & 0x80) == 0) {
          break label230;
        }
      }
      label200:
      label205:
      label210:
      label215:
      label220:
      label225:
      label230:
      for (boolean bool = true;; bool = false)
      {
        this.email_to_provider = bool;
        this.currency = paramAbstractSerializedData.readString(paramBoolean);
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i == 481674261) {
          break label235;
        }
        if (!paramBoolean) {
          break label269;
        }
        throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        bool = false;
        break;
        bool = false;
        break label36;
        bool = false;
        break label52;
        bool = false;
        break label69;
        bool = false;
        break label86;
        bool = false;
        break label103;
        bool = false;
        break label120;
      }
      label235:
      int j = paramAbstractSerializedData.readInt32(paramBoolean);
      for (int i = 0;; i++)
      {
        TLRPC.TL_labeledPrice localTL_labeledPrice;
        if (i < j)
        {
          localTL_labeledPrice = TLRPC.TL_labeledPrice.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localTL_labeledPrice != null) {}
        }
        else
        {
          label269:
          return;
        }
        this.prices.add(localTL_labeledPrice);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.test)
      {
        i = this.flags | 0x1;
        this.flags = i;
        if (!this.name_requested) {
          break label239;
        }
        i = this.flags | 0x2;
        label40:
        this.flags = i;
        if (!this.phone_requested) {
          break label250;
        }
        i = this.flags | 0x4;
        label59:
        this.flags = i;
        if (!this.email_requested) {
          break label261;
        }
        i = this.flags | 0x8;
        label79:
        this.flags = i;
        if (!this.shipping_address_requested) {
          break label272;
        }
        i = this.flags | 0x10;
        label99:
        this.flags = i;
        if (!this.flexible) {
          break label283;
        }
        i = this.flags | 0x20;
        label119:
        this.flags = i;
        if (!this.phone_to_provider) {
          break label294;
        }
        i = this.flags | 0x40;
        label139:
        this.flags = i;
        if (!this.email_to_provider) {
          break label305;
        }
      }
      label239:
      label250:
      label261:
      label272:
      label283:
      label294:
      label305:
      for (int i = this.flags | 0x80;; i = this.flags & 0xFF7F)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeString(this.currency);
        paramAbstractSerializedData.writeInt32(481674261);
        int j = this.prices.size();
        paramAbstractSerializedData.writeInt32(j);
        for (i = 0; i < j; i++) {
          ((TLRPC.TL_labeledPrice)this.prices.get(i)).serializeToStream(paramAbstractSerializedData);
        }
        i = this.flags & 0xFFFFFFFE;
        break;
        i = this.flags & 0xFFFFFFFD;
        break label40;
        i = this.flags & 0xFFFFFFFB;
        break label59;
        i = this.flags & 0xFFFFFFF7;
        break label79;
        i = this.flags & 0xFFFFFFEF;
        break label99;
        i = this.flags & 0xFFFFFFDF;
        break label119;
        i = this.flags & 0xFFFFFFBF;
        break label139;
      }
    }
  }
  
  public static class TL_keyboardButton
    extends TLRPC.KeyboardButton
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.text = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.text);
    }
  }
  
  public static class TL_keyboardButtonBuy
    extends TLRPC.KeyboardButton
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.text = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.text);
    }
  }
  
  public static class TL_keyboardButtonCallback
    extends TLRPC.KeyboardButton
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.text = paramAbstractSerializedData.readString(paramBoolean);
      this.data = paramAbstractSerializedData.readByteArray(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.text);
      paramAbstractSerializedData.writeByteArray(this.data);
    }
  }
  
  public static class TL_keyboardButtonGame
    extends TLRPC.KeyboardButton
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.text = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.text);
    }
  }
  
  public static class TL_keyboardButtonRequestGeoLocation
    extends TLRPC.KeyboardButton
  {
    public static int constructor = -59151553;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.text = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.text);
    }
  }
  
  public static class TL_keyboardButtonRequestPhone
    extends TLRPC.KeyboardButton
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.text = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.text);
    }
  }
  
  public static class TL_keyboardButtonRow
    extends TLObject
  {
    public static int constructor = NUM;
    public ArrayList<TLRPC.KeyboardButton> buttons = new ArrayList();
    
    public static TL_keyboardButtonRow TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_keyboardButtonRow", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_keyboardButtonRow localTL_keyboardButtonRow;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_keyboardButtonRow)
      {
        return paramAbstractSerializedData;
        localTL_keyboardButtonRow = new TL_keyboardButtonRow();
        localTL_keyboardButtonRow.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
      }
      for (i = 0;; i++)
      {
        TLRPC.KeyboardButton localKeyboardButton;
        if (i < j)
        {
          localKeyboardButton = TLRPC.KeyboardButton.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localKeyboardButton != null) {}
        }
        else
        {
          return;
        }
        this.buttons.add(localKeyboardButton);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.buttons.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.KeyboardButton)this.buttons.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_keyboardButtonSwitchInline
    extends TLRPC.KeyboardButton
  {
    public static int constructor = 90744648;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0) {}
      for (boolean bool = true;; bool = false)
      {
        this.same_peer = bool;
        this.text = paramAbstractSerializedData.readString(paramBoolean);
        this.query = paramAbstractSerializedData.readString(paramBoolean);
        return;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.same_peer) {}
      for (int i = this.flags | 0x1;; i = this.flags & 0xFFFFFFFE)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeString(this.text);
        paramAbstractSerializedData.writeString(this.query);
        return;
      }
    }
  }
  
  public static class TL_keyboardButtonUrl
    extends TLRPC.KeyboardButton
  {
    public static int constructor = 629866245;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.text = paramAbstractSerializedData.readString(paramBoolean);
      this.url = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.text);
      paramAbstractSerializedData.writeString(this.url);
    }
  }
  
  public static class TL_labeledPrice
    extends TLObject
  {
    public static int constructor = -886477832;
    public long amount;
    public String label;
    
    public static TL_labeledPrice TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_labeledPrice", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_labeledPrice localTL_labeledPrice;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_labeledPrice)
      {
        return paramAbstractSerializedData;
        localTL_labeledPrice = new TL_labeledPrice();
        localTL_labeledPrice.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.label = paramAbstractSerializedData.readString(paramBoolean);
      this.amount = paramAbstractSerializedData.readInt64(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.label);
      paramAbstractSerializedData.writeInt64(this.amount);
    }
  }
  
  public static class TL_langPackDifference
    extends TLObject
  {
    public static int constructor = -209337866;
    public int from_version;
    public String lang_code;
    public ArrayList<TLRPC.LangPackString> strings = new ArrayList();
    public int version;
    
    public static TL_langPackDifference TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_langPackDifference", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_langPackDifference localTL_langPackDifference;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_langPackDifference)
      {
        return paramAbstractSerializedData;
        localTL_langPackDifference = new TL_langPackDifference();
        localTL_langPackDifference.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.lang_code = paramAbstractSerializedData.readString(paramBoolean);
      this.from_version = paramAbstractSerializedData.readInt32(paramBoolean);
      this.version = paramAbstractSerializedData.readInt32(paramBoolean);
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
      }
      for (i = 0;; i++)
      {
        TLRPC.LangPackString localLangPackString;
        if (i < j)
        {
          localLangPackString = TLRPC.LangPackString.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localLangPackString != null) {}
        }
        else
        {
          return;
        }
        this.strings.add(localLangPackString);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.lang_code);
      paramAbstractSerializedData.writeInt32(this.from_version);
      paramAbstractSerializedData.writeInt32(this.version);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.strings.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.LangPackString)this.strings.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_langPackLanguage
    extends TLObject
  {
    public static int constructor = 292985073;
    public String lang_code;
    public String name;
    public String native_name;
    
    public static TL_langPackLanguage TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_langPackLanguage", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_langPackLanguage localTL_langPackLanguage;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_langPackLanguage)
      {
        return paramAbstractSerializedData;
        localTL_langPackLanguage = new TL_langPackLanguage();
        localTL_langPackLanguage.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.name = paramAbstractSerializedData.readString(paramBoolean);
      this.native_name = paramAbstractSerializedData.readString(paramBoolean);
      this.lang_code = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.name);
      paramAbstractSerializedData.writeString(this.native_name);
      paramAbstractSerializedData.writeString(this.lang_code);
    }
  }
  
  public static class TL_langPackString
    extends TLRPC.LangPackString
  {
    public static int constructor = -892239370;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.key = paramAbstractSerializedData.readString(paramBoolean);
      this.value = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.key);
      paramAbstractSerializedData.writeString(this.value);
    }
  }
  
  public static class TL_langPackStringDeleted
    extends TLRPC.LangPackString
  {
    public static int constructor = 695856818;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.key = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.key);
    }
  }
  
  public static class TL_langPackStringPluralized
    extends TLRPC.LangPackString
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      this.key = paramAbstractSerializedData.readString(paramBoolean);
      if ((this.flags & 0x1) != 0) {
        this.zero_value = paramAbstractSerializedData.readString(paramBoolean);
      }
      if ((this.flags & 0x2) != 0) {
        this.one_value = paramAbstractSerializedData.readString(paramBoolean);
      }
      if ((this.flags & 0x4) != 0) {
        this.two_value = paramAbstractSerializedData.readString(paramBoolean);
      }
      if ((this.flags & 0x8) != 0) {
        this.few_value = paramAbstractSerializedData.readString(paramBoolean);
      }
      if ((this.flags & 0x10) != 0) {
        this.many_value = paramAbstractSerializedData.readString(paramBoolean);
      }
      this.other_value = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.flags);
      paramAbstractSerializedData.writeString(this.key);
      if ((this.flags & 0x1) != 0) {
        paramAbstractSerializedData.writeString(this.zero_value);
      }
      if ((this.flags & 0x2) != 0) {
        paramAbstractSerializedData.writeString(this.one_value);
      }
      if ((this.flags & 0x4) != 0) {
        paramAbstractSerializedData.writeString(this.two_value);
      }
      if ((this.flags & 0x8) != 0) {
        paramAbstractSerializedData.writeString(this.few_value);
      }
      if ((this.flags & 0x10) != 0) {
        paramAbstractSerializedData.writeString(this.many_value);
      }
      paramAbstractSerializedData.writeString(this.other_value);
    }
  }
  
  public static class TL_langpack_getDifference
    extends TLObject
  {
    public static int constructor = 187583869;
    public int from_version;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_langPackDifference.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.from_version);
    }
  }
  
  public static class TL_langpack_getLangPack
    extends TLObject
  {
    public static int constructor = -NUM;
    public String lang_code;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_langPackDifference.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.lang_code);
    }
  }
  
  public static class TL_langpack_getLanguages
    extends TLObject
  {
    public static int constructor = -NUM;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      TLRPC.Vector localVector = new TLRPC.Vector();
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      for (paramInt = 0;; paramInt++)
      {
        TLRPC.TL_langPackLanguage localTL_langPackLanguage;
        if (paramInt < i)
        {
          localTL_langPackLanguage = TLRPC.TL_langPackLanguage.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localTL_langPackLanguage != null) {}
        }
        else
        {
          return localVector;
        }
        localVector.objects.add(localTL_langPackLanguage);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_langpack_getStrings
    extends TLObject
  {
    public static int constructor = 773776152;
    public ArrayList<String> keys = new ArrayList();
    public String lang_code;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      TLRPC.Vector localVector = new TLRPC.Vector();
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      for (paramInt = 0;; paramInt++)
      {
        TLRPC.LangPackString localLangPackString;
        if (paramInt < i)
        {
          localLangPackString = TLRPC.LangPackString.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localLangPackString != null) {}
        }
        else
        {
          return localVector;
        }
        localVector.objects.add(localLangPackString);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.lang_code);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.keys.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        paramAbstractSerializedData.writeString((String)this.keys.get(j));
      }
    }
  }
  
  public static class TL_maskCoords
    extends TLObject
  {
    public static int constructor = -NUM;
    public int n;
    public double x;
    public double y;
    public double zoom;
    
    public static TL_maskCoords TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_maskCoords", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_maskCoords localTL_maskCoords;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_maskCoords)
      {
        return paramAbstractSerializedData;
        localTL_maskCoords = new TL_maskCoords();
        localTL_maskCoords.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.n = paramAbstractSerializedData.readInt32(paramBoolean);
      this.x = paramAbstractSerializedData.readDouble(paramBoolean);
      this.y = paramAbstractSerializedData.readDouble(paramBoolean);
      this.zoom = paramAbstractSerializedData.readDouble(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.n);
      paramAbstractSerializedData.writeDouble(this.x);
      paramAbstractSerializedData.writeDouble(this.y);
      paramAbstractSerializedData.writeDouble(this.zoom);
    }
  }
  
  public static class TL_message
    extends TLRPC.Message
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x2) != 0)
      {
        bool = true;
        this.out = bool;
        if ((this.flags & 0x10) == 0) {
          break label375;
        }
        bool = true;
        label37:
        this.mentioned = bool;
        if ((this.flags & 0x20) == 0) {
          break label380;
        }
        bool = true;
        label54:
        this.media_unread = bool;
        if ((this.flags & 0x2000) == 0) {
          break label385;
        }
        bool = true;
        label72:
        this.silent = bool;
        if ((this.flags & 0x4000) == 0) {
          break label390;
        }
      }
      label375:
      label380:
      label385:
      label390:
      for (boolean bool = true;; bool = false)
      {
        this.post = bool;
        this.id = paramAbstractSerializedData.readInt32(paramBoolean);
        if ((this.flags & 0x100) != 0) {
          this.from_id = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        this.to_id = TLRPC.Peer.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if ((this.flags & 0x4) != 0) {
          this.fwd_from = TLRPC.MessageFwdHeader.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        }
        if ((this.flags & 0x800) != 0) {
          this.via_bot_id = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x8) != 0) {
          this.reply_to_msg_id = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        this.date = paramAbstractSerializedData.readInt32(paramBoolean);
        this.message = paramAbstractSerializedData.readString(paramBoolean);
        if ((this.flags & 0x200) != 0)
        {
          this.media = TLRPC.MessageMedia.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (this.media != null) {
            this.ttl = this.media.ttl_seconds;
          }
          if ((this.media != null) && (!TextUtils.isEmpty(this.media.captionLegacy))) {
            this.message = this.media.captionLegacy;
          }
        }
        if ((this.flags & 0x40) != 0) {
          this.reply_markup = TLRPC.ReplyMarkup.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        }
        if ((this.flags & 0x80) == 0) {
          break label446;
        }
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i == 481674261) {
          break label395;
        }
        if (!paramBoolean) {
          break label429;
        }
        throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        bool = false;
        break;
        bool = false;
        break label37;
        bool = false;
        break label54;
        bool = false;
        break label72;
      }
      label395:
      int j = paramAbstractSerializedData.readInt32(paramBoolean);
      int i = 0;
      TLRPC.MessageEntity localMessageEntity;
      if (i < j)
      {
        localMessageEntity = TLRPC.MessageEntity.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localMessageEntity != null) {}
      }
      for (;;)
      {
        label429:
        return;
        this.entities.add(localMessageEntity);
        i++;
        break;
        label446:
        if ((this.flags & 0x400) != 0) {
          this.views = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x8000) != 0) {
          this.edit_date = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x10000) != 0) {
          this.post_author = paramAbstractSerializedData.readString(paramBoolean);
        }
        if ((this.flags & 0x20000) != 0) {
          this.grouped_id = paramAbstractSerializedData.readInt64(paramBoolean);
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.out)
      {
        i = this.flags | 0x2;
        this.flags = i;
        if (!this.mentioned) {
          break label327;
        }
        i = this.flags | 0x10;
        label41:
        this.flags = i;
        if (!this.media_unread) {
          break label338;
        }
        i = this.flags | 0x20;
        label61:
        this.flags = i;
        if (!this.silent) {
          break label349;
        }
        i = this.flags | 0x2000;
        label82:
        this.flags = i;
        if (!this.post) {
          break label361;
        }
      }
      label327:
      label338:
      label349:
      label361:
      for (int i = this.flags | 0x4000;; i = this.flags & 0xBFFF)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(this.id);
        if ((this.flags & 0x100) != 0) {
          paramAbstractSerializedData.writeInt32(this.from_id);
        }
        this.to_id.serializeToStream(paramAbstractSerializedData);
        if ((this.flags & 0x4) != 0) {
          this.fwd_from.serializeToStream(paramAbstractSerializedData);
        }
        if ((this.flags & 0x800) != 0) {
          paramAbstractSerializedData.writeInt32(this.via_bot_id);
        }
        if ((this.flags & 0x8) != 0) {
          paramAbstractSerializedData.writeInt32(this.reply_to_msg_id);
        }
        paramAbstractSerializedData.writeInt32(this.date);
        paramAbstractSerializedData.writeString(this.message);
        if ((this.flags & 0x200) != 0) {
          this.media.serializeToStream(paramAbstractSerializedData);
        }
        if ((this.flags & 0x40) != 0) {
          this.reply_markup.serializeToStream(paramAbstractSerializedData);
        }
        if ((this.flags & 0x80) == 0) {
          break label373;
        }
        paramAbstractSerializedData.writeInt32(481674261);
        int j = this.entities.size();
        paramAbstractSerializedData.writeInt32(j);
        for (i = 0; i < j; i++) {
          ((TLRPC.MessageEntity)this.entities.get(i)).serializeToStream(paramAbstractSerializedData);
        }
        i = this.flags & 0xFFFFFFFD;
        break;
        i = this.flags & 0xFFFFFFEF;
        break label41;
        i = this.flags & 0xFFFFFFDF;
        break label61;
        i = this.flags & 0xDFFF;
        break label82;
      }
      label373:
      if ((this.flags & 0x400) != 0) {
        paramAbstractSerializedData.writeInt32(this.views);
      }
      if ((this.flags & 0x8000) != 0) {
        paramAbstractSerializedData.writeInt32(this.edit_date);
      }
      if ((this.flags & 0x10000) != 0) {
        paramAbstractSerializedData.writeString(this.post_author);
      }
      if ((this.flags & 0x20000) != 0) {
        paramAbstractSerializedData.writeInt64(this.grouped_id);
      }
      writeAttachPath(paramAbstractSerializedData);
    }
  }
  
  public static class TL_messageActionBotAllowed
    extends TLRPC.MessageAction
  {
    public static int constructor = -NUM;
    public String domain;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.domain = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.domain);
    }
  }
  
  public static class TL_messageActionChannelCreate
    extends TLRPC.MessageAction
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.title = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.title);
    }
  }
  
  public static class TL_messageActionChannelMigrateFrom
    extends TLRPC.MessageAction
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.title = paramAbstractSerializedData.readString(paramBoolean);
      this.chat_id = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.title);
      paramAbstractSerializedData.writeInt32(this.chat_id);
    }
  }
  
  public static class TL_messageActionChatAddUser
    extends TLRPC.MessageAction
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else
      {
        int j = paramAbstractSerializedData.readInt32(paramBoolean);
        for (i = 0; i < j; i++) {
          this.users.add(Integer.valueOf(paramAbstractSerializedData.readInt32(paramBoolean)));
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.users.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        paramAbstractSerializedData.writeInt32(((Integer)this.users.get(j)).intValue());
      }
    }
  }
  
  public static class TL_messageActionChatAddUser_old
    extends TLRPC.TL_messageActionChatAddUser
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.user_id = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.user_id);
    }
  }
  
  public static class TL_messageActionChatCreate
    extends TLRPC.MessageAction
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.title = paramAbstractSerializedData.readString(paramBoolean);
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else
      {
        int j = paramAbstractSerializedData.readInt32(paramBoolean);
        for (i = 0; i < j; i++) {
          this.users.add(Integer.valueOf(paramAbstractSerializedData.readInt32(paramBoolean)));
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.title);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.users.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        paramAbstractSerializedData.writeInt32(((Integer)this.users.get(j)).intValue());
      }
    }
  }
  
  public static class TL_messageActionChatDeletePhoto
    extends TLRPC.MessageAction
  {
    public static int constructor = -NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_messageActionChatDeleteUser
    extends TLRPC.MessageAction
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.user_id = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.user_id);
    }
  }
  
  public static class TL_messageActionChatEditPhoto
    extends TLRPC.MessageAction
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.photo = TLRPC.Photo.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.photo.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_messageActionChatEditTitle
    extends TLRPC.MessageAction
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.title = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.title);
    }
  }
  
  public static class TL_messageActionChatJoinedByLink
    extends TLRPC.MessageAction
  {
    public static int constructor = -123931160;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.inviter_id = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.inviter_id);
    }
  }
  
  public static class TL_messageActionChatMigrateTo
    extends TLRPC.MessageAction
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.channel_id = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.channel_id);
    }
  }
  
  public static class TL_messageActionCreatedBroadcastList
    extends TLRPC.MessageAction
  {
    public static int constructor = NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_messageActionCustomAction
    extends TLRPC.MessageAction
  {
    public static int constructor = -85549226;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.message = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.message);
    }
  }
  
  public static class TL_messageActionEmpty
    extends TLRPC.MessageAction
  {
    public static int constructor = -NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_messageActionGameScore
    extends TLRPC.MessageAction
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.game_id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.score = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.game_id);
      paramAbstractSerializedData.writeInt32(this.score);
    }
  }
  
  public static class TL_messageActionGroupCall
    extends TLRPC.MessageAction
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      this.call = TLRPC.TL_inputGroupCall.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      if ((this.flags & 0x1) != 0) {
        this.duration = paramAbstractSerializedData.readInt32(paramBoolean);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.flags);
      this.call.serializeToStream(paramAbstractSerializedData);
      if ((this.flags & 0x1) != 0) {
        paramAbstractSerializedData.writeInt32(this.duration);
      }
    }
  }
  
  public static class TL_messageActionHistoryClear
    extends TLRPC.MessageAction
  {
    public static int constructor = -NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_messageActionLoginUnknownLocation
    extends TLRPC.MessageAction
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.title = paramAbstractSerializedData.readString(paramBoolean);
      this.address = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.title);
      paramAbstractSerializedData.writeString(this.address);
    }
  }
  
  public static class TL_messageActionPaymentSent
    extends TLRPC.MessageAction
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.currency = paramAbstractSerializedData.readString(paramBoolean);
      this.total_amount = paramAbstractSerializedData.readInt64(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.currency);
      paramAbstractSerializedData.writeInt64(this.total_amount);
    }
  }
  
  public static class TL_messageActionPhoneCall
    extends TLRPC.MessageAction
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      this.call_id = paramAbstractSerializedData.readInt64(paramBoolean);
      if ((this.flags & 0x1) != 0) {
        this.reason = TLRPC.PhoneCallDiscardReason.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      }
      if ((this.flags & 0x2) != 0) {
        this.duration = paramAbstractSerializedData.readInt32(paramBoolean);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.flags);
      paramAbstractSerializedData.writeInt64(this.call_id);
      if ((this.flags & 0x1) != 0) {
        this.reason.serializeToStream(paramAbstractSerializedData);
      }
      if ((this.flags & 0x2) != 0) {
        paramAbstractSerializedData.writeInt32(this.duration);
      }
    }
  }
  
  public static class TL_messageActionPinMessage
    extends TLRPC.MessageAction
  {
    public static int constructor = -NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_messageActionScreenshotTaken
    extends TLRPC.MessageAction
  {
    public static int constructor = NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_messageActionTTLChange
    extends TLRPC.MessageAction
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.ttl = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.ttl);
    }
  }
  
  public static class TL_messageActionUserJoined
    extends TLRPC.MessageAction
  {
    public static int constructor = NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_messageActionUserUpdatedPhoto
    extends TLRPC.MessageAction
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.newUserPhoto = TLRPC.UserProfilePhoto.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.newUserPhoto.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_messageEmpty
    extends TLRPC.Message
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.to_id = new TLRPC.TL_peerUser();
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.id);
    }
  }
  
  public static class TL_messageEncryptedAction
    extends TLRPC.MessageAction
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.encryptedAction = TLRPC.DecryptedMessageAction.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.encryptedAction.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_messageEntityBold
    extends TLRPC.MessageEntity
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.offset = paramAbstractSerializedData.readInt32(paramBoolean);
      this.length = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.offset);
      paramAbstractSerializedData.writeInt32(this.length);
    }
  }
  
  public static class TL_messageEntityBotCommand
    extends TLRPC.MessageEntity
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.offset = paramAbstractSerializedData.readInt32(paramBoolean);
      this.length = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.offset);
      paramAbstractSerializedData.writeInt32(this.length);
    }
  }
  
  public static class TL_messageEntityCashtag
    extends TLRPC.MessageEntity
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.offset = paramAbstractSerializedData.readInt32(paramBoolean);
      this.length = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.offset);
      paramAbstractSerializedData.writeInt32(this.length);
    }
  }
  
  public static class TL_messageEntityCode
    extends TLRPC.MessageEntity
  {
    public static int constructor = 681706865;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.offset = paramAbstractSerializedData.readInt32(paramBoolean);
      this.length = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.offset);
      paramAbstractSerializedData.writeInt32(this.length);
    }
  }
  
  public static class TL_messageEntityEmail
    extends TLRPC.MessageEntity
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.offset = paramAbstractSerializedData.readInt32(paramBoolean);
      this.length = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.offset);
      paramAbstractSerializedData.writeInt32(this.length);
    }
  }
  
  public static class TL_messageEntityHashtag
    extends TLRPC.MessageEntity
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.offset = paramAbstractSerializedData.readInt32(paramBoolean);
      this.length = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.offset);
      paramAbstractSerializedData.writeInt32(this.length);
    }
  }
  
  public static class TL_messageEntityItalic
    extends TLRPC.MessageEntity
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.offset = paramAbstractSerializedData.readInt32(paramBoolean);
      this.length = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.offset);
      paramAbstractSerializedData.writeInt32(this.length);
    }
  }
  
  public static class TL_messageEntityMention
    extends TLRPC.MessageEntity
  {
    public static int constructor = -100378723;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.offset = paramAbstractSerializedData.readInt32(paramBoolean);
      this.length = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.offset);
      paramAbstractSerializedData.writeInt32(this.length);
    }
  }
  
  public static class TL_messageEntityMentionName
    extends TLRPC.MessageEntity
  {
    public static int constructor = 892193368;
    public int user_id;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.offset = paramAbstractSerializedData.readInt32(paramBoolean);
      this.length = paramAbstractSerializedData.readInt32(paramBoolean);
      this.user_id = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.offset);
      paramAbstractSerializedData.writeInt32(this.length);
      paramAbstractSerializedData.writeInt32(this.user_id);
    }
  }
  
  public static class TL_messageEntityPhone
    extends TLRPC.MessageEntity
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.offset = paramAbstractSerializedData.readInt32(paramBoolean);
      this.length = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.offset);
      paramAbstractSerializedData.writeInt32(this.length);
    }
  }
  
  public static class TL_messageEntityPre
    extends TLRPC.MessageEntity
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.offset = paramAbstractSerializedData.readInt32(paramBoolean);
      this.length = paramAbstractSerializedData.readInt32(paramBoolean);
      this.language = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.offset);
      paramAbstractSerializedData.writeInt32(this.length);
      paramAbstractSerializedData.writeString(this.language);
    }
  }
  
  public static class TL_messageEntityTextUrl
    extends TLRPC.MessageEntity
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.offset = paramAbstractSerializedData.readInt32(paramBoolean);
      this.length = paramAbstractSerializedData.readInt32(paramBoolean);
      this.url = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.offset);
      paramAbstractSerializedData.writeInt32(this.length);
      paramAbstractSerializedData.writeString(this.url);
    }
  }
  
  public static class TL_messageEntityUnknown
    extends TLRPC.MessageEntity
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.offset = paramAbstractSerializedData.readInt32(paramBoolean);
      this.length = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.offset);
      paramAbstractSerializedData.writeInt32(this.length);
    }
  }
  
  public static class TL_messageEntityUrl
    extends TLRPC.MessageEntity
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.offset = paramAbstractSerializedData.readInt32(paramBoolean);
      this.length = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.offset);
      paramAbstractSerializedData.writeInt32(this.length);
    }
  }
  
  public static class TL_messageForwarded_old
    extends TLRPC.TL_messageForwarded_old2
  {
    public static int constructor = 99903492;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.fwd_from = new TLRPC.TL_messageFwdHeader();
      this.fwd_from.from_id = paramAbstractSerializedData.readInt32(paramBoolean);
      TLRPC.MessageFwdHeader localMessageFwdHeader = this.fwd_from;
      localMessageFwdHeader.flags |= 0x1;
      this.fwd_from.date = paramAbstractSerializedData.readInt32(paramBoolean);
      this.from_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.to_id = TLRPC.Peer.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.out = paramAbstractSerializedData.readBool(paramBoolean);
      this.unread = paramAbstractSerializedData.readBool(paramBoolean);
      this.flags |= 0x304;
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
      this.message = paramAbstractSerializedData.readString(paramBoolean);
      this.media = TLRPC.MessageMedia.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      if ((this.media != null) && (!TextUtils.isEmpty(this.media.captionLegacy))) {
        this.message = this.media.captionLegacy;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.id);
      paramAbstractSerializedData.writeInt32(this.fwd_from.from_id);
      paramAbstractSerializedData.writeInt32(this.fwd_from.date);
      paramAbstractSerializedData.writeInt32(this.from_id);
      this.to_id.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeBool(this.out);
      paramAbstractSerializedData.writeBool(this.unread);
      paramAbstractSerializedData.writeInt32(this.date);
      paramAbstractSerializedData.writeString(this.message);
      this.media.serializeToStream(paramAbstractSerializedData);
      writeAttachPath(paramAbstractSerializedData);
    }
  }
  
  public static class TL_messageForwarded_old2
    extends TLRPC.Message
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      boolean bool1 = true;
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0)
      {
        bool2 = true;
        this.unread = bool2;
        if ((this.flags & 0x2) == 0) {
          break label252;
        }
        bool2 = true;
        label41:
        this.out = bool2;
        if ((this.flags & 0x10) == 0) {
          break label258;
        }
        bool2 = true;
        label60:
        this.mentioned = bool2;
        if ((this.flags & 0x20) == 0) {
          break label264;
        }
      }
      label252:
      label258:
      label264:
      for (boolean bool2 = bool1;; bool2 = false)
      {
        this.media_unread = bool2;
        this.id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.fwd_from = new TLRPC.TL_messageFwdHeader();
        this.fwd_from.from_id = paramAbstractSerializedData.readInt32(paramBoolean);
        TLRPC.MessageFwdHeader localMessageFwdHeader = this.fwd_from;
        localMessageFwdHeader.flags |= 0x1;
        this.fwd_from.date = paramAbstractSerializedData.readInt32(paramBoolean);
        this.from_id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.to_id = TLRPC.Peer.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        this.date = paramAbstractSerializedData.readInt32(paramBoolean);
        this.message = paramAbstractSerializedData.readString(paramBoolean);
        this.flags |= 0x304;
        this.media = TLRPC.MessageMedia.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if ((this.media != null) && (!TextUtils.isEmpty(this.media.captionLegacy))) {
          this.message = this.media.captionLegacy;
        }
        return;
        bool2 = false;
        break;
        bool2 = false;
        break label41;
        bool2 = false;
        break label60;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.unread)
      {
        i = this.flags | 0x1;
        this.flags = i;
        if (!this.out) {
          break label175;
        }
        i = this.flags | 0x2;
        label40:
        this.flags = i;
        if (!this.mentioned) {
          break label186;
        }
        i = this.flags | 0x10;
        label60:
        this.flags = i;
        if (!this.media_unread) {
          break label197;
        }
      }
      label175:
      label186:
      label197:
      for (int i = this.flags | 0x20;; i = this.flags & 0xFFFFFFDF)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(this.id);
        paramAbstractSerializedData.writeInt32(this.fwd_from.from_id);
        paramAbstractSerializedData.writeInt32(this.fwd_from.date);
        paramAbstractSerializedData.writeInt32(this.from_id);
        this.to_id.serializeToStream(paramAbstractSerializedData);
        paramAbstractSerializedData.writeInt32(this.date);
        paramAbstractSerializedData.writeString(this.message);
        this.media.serializeToStream(paramAbstractSerializedData);
        return;
        i = this.flags & 0xFFFFFFFE;
        break;
        i = this.flags & 0xFFFFFFFD;
        break label40;
        i = this.flags & 0xFFFFFFEF;
        break label60;
      }
    }
  }
  
  public static class TL_messageFwdHeader
    extends TLRPC.MessageFwdHeader
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0) {
        this.from_id = paramAbstractSerializedData.readInt32(paramBoolean);
      }
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x2) != 0) {
        this.channel_id = paramAbstractSerializedData.readInt32(paramBoolean);
      }
      if ((this.flags & 0x4) != 0) {
        this.channel_post = paramAbstractSerializedData.readInt32(paramBoolean);
      }
      if ((this.flags & 0x8) != 0) {
        this.post_author = paramAbstractSerializedData.readString(paramBoolean);
      }
      if ((this.flags & 0x10) != 0) {
        this.saved_from_peer = TLRPC.Peer.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      }
      if ((this.flags & 0x10) != 0) {
        this.saved_from_msg_id = paramAbstractSerializedData.readInt32(paramBoolean);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.flags);
      if ((this.flags & 0x1) != 0) {
        paramAbstractSerializedData.writeInt32(this.from_id);
      }
      paramAbstractSerializedData.writeInt32(this.date);
      if ((this.flags & 0x2) != 0) {
        paramAbstractSerializedData.writeInt32(this.channel_id);
      }
      if ((this.flags & 0x4) != 0) {
        paramAbstractSerializedData.writeInt32(this.channel_post);
      }
      if ((this.flags & 0x8) != 0) {
        paramAbstractSerializedData.writeString(this.post_author);
      }
      if ((this.flags & 0x10) != 0) {
        this.saved_from_peer.serializeToStream(paramAbstractSerializedData);
      }
      if ((this.flags & 0x10) != 0) {
        paramAbstractSerializedData.writeInt32(this.saved_from_msg_id);
      }
    }
  }
  
  public static class TL_messageFwdHeader_layer68
    extends TLRPC.TL_messageFwdHeader
  {
    public static int constructor = -947462709;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0) {
        this.from_id = paramAbstractSerializedData.readInt32(paramBoolean);
      }
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x2) != 0) {
        this.channel_id = paramAbstractSerializedData.readInt32(paramBoolean);
      }
      if ((this.flags & 0x4) != 0) {
        this.channel_post = paramAbstractSerializedData.readInt32(paramBoolean);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.flags);
      if ((this.flags & 0x1) != 0) {
        paramAbstractSerializedData.writeInt32(this.from_id);
      }
      paramAbstractSerializedData.writeInt32(this.date);
      if ((this.flags & 0x2) != 0) {
        paramAbstractSerializedData.writeInt32(this.channel_id);
      }
      if ((this.flags & 0x4) != 0) {
        paramAbstractSerializedData.writeInt32(this.channel_post);
      }
    }
  }
  
  public static class TL_messageFwdHeader_layer72
    extends TLRPC.TL_messageFwdHeader
  {
    public static int constructor = -85986132;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0) {
        this.from_id = paramAbstractSerializedData.readInt32(paramBoolean);
      }
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x2) != 0) {
        this.channel_id = paramAbstractSerializedData.readInt32(paramBoolean);
      }
      if ((this.flags & 0x4) != 0) {
        this.channel_post = paramAbstractSerializedData.readInt32(paramBoolean);
      }
      if ((this.flags & 0x8) != 0) {
        this.post_author = paramAbstractSerializedData.readString(paramBoolean);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.flags);
      if ((this.flags & 0x1) != 0) {
        paramAbstractSerializedData.writeInt32(this.from_id);
      }
      paramAbstractSerializedData.writeInt32(this.date);
      if ((this.flags & 0x2) != 0) {
        paramAbstractSerializedData.writeInt32(this.channel_id);
      }
      if ((this.flags & 0x4) != 0) {
        paramAbstractSerializedData.writeInt32(this.channel_post);
      }
      if ((this.flags & 0x8) != 0) {
        paramAbstractSerializedData.writeString(this.post_author);
      }
    }
  }
  
  public static class TL_messageMediaAudio_layer45
    extends TLRPC.MessageMedia
  {
    public static int constructor = -961117440;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.audio_unused = TLRPC.Audio.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.audio_unused.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_messageMediaContact
    extends TLRPC.MessageMedia
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.phone_number = paramAbstractSerializedData.readString(paramBoolean);
      this.first_name = paramAbstractSerializedData.readString(paramBoolean);
      this.last_name = paramAbstractSerializedData.readString(paramBoolean);
      this.user_id = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.phone_number);
      paramAbstractSerializedData.writeString(this.first_name);
      paramAbstractSerializedData.writeString(this.last_name);
      paramAbstractSerializedData.writeInt32(this.user_id);
    }
  }
  
  public static class TL_messageMediaDocument
    extends TLRPC.MessageMedia
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0) {}
      for (this.document = TLRPC.Document.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);; this.document = new TLRPC.TL_documentEmpty())
      {
        if ((this.flags & 0x4) != 0) {
          this.ttl_seconds = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        return;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.flags);
      if ((this.flags & 0x1) != 0) {
        this.document.serializeToStream(paramAbstractSerializedData);
      }
      if ((this.flags & 0x4) != 0) {
        paramAbstractSerializedData.writeInt32(this.ttl_seconds);
      }
    }
  }
  
  public static class TL_messageMediaDocument_layer68
    extends TLRPC.TL_messageMediaDocument
  {
    public static int constructor = -203411800;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.document = TLRPC.Document.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.captionLegacy = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.document.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeString(this.captionLegacy);
    }
  }
  
  public static class TL_messageMediaDocument_layer74
    extends TLRPC.TL_messageMediaDocument
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0) {}
      for (this.document = TLRPC.Document.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);; this.document = new TLRPC.TL_documentEmpty())
      {
        if ((this.flags & 0x2) != 0) {
          this.captionLegacy = paramAbstractSerializedData.readString(paramBoolean);
        }
        if ((this.flags & 0x4) != 0) {
          this.ttl_seconds = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        return;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.flags);
      if ((this.flags & 0x1) != 0) {
        this.document.serializeToStream(paramAbstractSerializedData);
      }
      if ((this.flags & 0x2) != 0) {
        paramAbstractSerializedData.writeString(this.captionLegacy);
      }
      if ((this.flags & 0x4) != 0) {
        paramAbstractSerializedData.writeInt32(this.ttl_seconds);
      }
    }
  }
  
  public static class TL_messageMediaDocument_old
    extends TLRPC.TL_messageMediaDocument
  {
    public static int constructor = 802824708;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.document = TLRPC.Document.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.document.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_messageMediaEmpty
    extends TLRPC.MessageMedia
  {
    public static int constructor = NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_messageMediaGame
    extends TLRPC.MessageMedia
  {
    public static int constructor = -38694904;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.game = TLRPC.TL_game.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.game.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_messageMediaGeo
    extends TLRPC.MessageMedia
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.geo = TLRPC.GeoPoint.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.geo.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_messageMediaGeoLive
    extends TLRPC.MessageMedia
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.geo = TLRPC.GeoPoint.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.period = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.geo.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(this.period);
    }
  }
  
  public static class TL_messageMediaInvoice
    extends TLRPC.MessageMedia
  {
    public static int constructor = -NUM;
    public TLRPC.WebDocument photo;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      boolean bool1 = true;
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x2) != 0)
      {
        bool2 = true;
        this.shipping_address_requested = bool2;
        if ((this.flags & 0x8) == 0) {
          break label141;
        }
      }
      label141:
      for (boolean bool2 = bool1;; bool2 = false)
      {
        this.test = bool2;
        this.title = paramAbstractSerializedData.readString(paramBoolean);
        this.description = paramAbstractSerializedData.readString(paramBoolean);
        if ((this.flags & 0x1) != 0) {
          this.photo = TLRPC.WebDocument.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        }
        if ((this.flags & 0x4) != 0) {
          this.receipt_msg_id = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        this.currency = paramAbstractSerializedData.readString(paramBoolean);
        this.total_amount = paramAbstractSerializedData.readInt64(paramBoolean);
        this.start_param = paramAbstractSerializedData.readString(paramBoolean);
        return;
        bool2 = false;
        break;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.shipping_address_requested)
      {
        i = this.flags | 0x2;
        this.flags = i;
        if (!this.test) {
          break label140;
        }
      }
      label140:
      for (int i = this.flags | 0x8;; i = this.flags & 0xFFFFFFF7)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeString(this.title);
        paramAbstractSerializedData.writeString(this.description);
        if ((this.flags & 0x1) != 0) {
          this.photo.serializeToStream(paramAbstractSerializedData);
        }
        if ((this.flags & 0x4) != 0) {
          paramAbstractSerializedData.writeInt32(this.receipt_msg_id);
        }
        paramAbstractSerializedData.writeString(this.currency);
        paramAbstractSerializedData.writeInt64(this.total_amount);
        paramAbstractSerializedData.writeString(this.start_param);
        return;
        i = this.flags & 0xFFFFFFFD;
        break;
      }
    }
  }
  
  public static class TL_messageMediaPhoto
    extends TLRPC.MessageMedia
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0) {}
      for (this.photo = TLRPC.Photo.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);; this.photo = new TLRPC.TL_photoEmpty())
      {
        if ((this.flags & 0x4) != 0) {
          this.ttl_seconds = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        return;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.flags);
      if ((this.flags & 0x1) != 0) {
        this.photo.serializeToStream(paramAbstractSerializedData);
      }
      if ((this.flags & 0x4) != 0) {
        paramAbstractSerializedData.writeInt32(this.ttl_seconds);
      }
    }
  }
  
  public static class TL_messageMediaPhoto_layer68
    extends TLRPC.TL_messageMediaPhoto
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.photo = TLRPC.Photo.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.captionLegacy = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.photo.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeString(this.captionLegacy);
    }
  }
  
  public static class TL_messageMediaPhoto_layer74
    extends TLRPC.TL_messageMediaPhoto
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0) {}
      for (this.photo = TLRPC.Photo.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);; this.photo = new TLRPC.TL_photoEmpty())
      {
        if ((this.flags & 0x2) != 0) {
          this.captionLegacy = paramAbstractSerializedData.readString(paramBoolean);
        }
        if ((this.flags & 0x4) != 0) {
          this.ttl_seconds = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        return;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.flags);
      if ((this.flags & 0x1) != 0) {
        this.photo.serializeToStream(paramAbstractSerializedData);
      }
      if ((this.flags & 0x2) != 0) {
        paramAbstractSerializedData.writeString(this.captionLegacy);
      }
      if ((this.flags & 0x4) != 0) {
        paramAbstractSerializedData.writeInt32(this.ttl_seconds);
      }
    }
  }
  
  public static class TL_messageMediaPhoto_old
    extends TLRPC.TL_messageMediaPhoto
  {
    public static int constructor = -926655958;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.photo = TLRPC.Photo.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.photo.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_messageMediaUnsupported
    extends TLRPC.MessageMedia
  {
    public static int constructor = -NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_messageMediaUnsupported_old
    extends TLRPC.TL_messageMediaUnsupported
  {
    public static int constructor = 694364726;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.bytes = paramAbstractSerializedData.readByteArray(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeByteArray(this.bytes);
    }
  }
  
  public static class TL_messageMediaVenue
    extends TLRPC.MessageMedia
  {
    public static int constructor = 784356159;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.geo = TLRPC.GeoPoint.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.title = paramAbstractSerializedData.readString(paramBoolean);
      this.address = paramAbstractSerializedData.readString(paramBoolean);
      this.provider = paramAbstractSerializedData.readString(paramBoolean);
      this.venue_id = paramAbstractSerializedData.readString(paramBoolean);
      this.venue_type = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.geo.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeString(this.title);
      paramAbstractSerializedData.writeString(this.address);
      paramAbstractSerializedData.writeString(this.provider);
      paramAbstractSerializedData.writeString(this.venue_id);
      paramAbstractSerializedData.writeString(this.venue_type);
    }
  }
  
  public static class TL_messageMediaVenue_layer71
    extends TLRPC.MessageMedia
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.geo = TLRPC.GeoPoint.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.title = paramAbstractSerializedData.readString(paramBoolean);
      this.address = paramAbstractSerializedData.readString(paramBoolean);
      this.provider = paramAbstractSerializedData.readString(paramBoolean);
      this.venue_id = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.geo.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeString(this.title);
      paramAbstractSerializedData.writeString(this.address);
      paramAbstractSerializedData.writeString(this.provider);
      paramAbstractSerializedData.writeString(this.venue_id);
    }
  }
  
  public static class TL_messageMediaVideo_layer45
    extends TLRPC.MessageMedia
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.video_unused = TLRPC.Video.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.captionLegacy = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.video_unused.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeString(this.captionLegacy);
    }
  }
  
  public static class TL_messageMediaVideo_old
    extends TLRPC.TL_messageMediaVideo_layer45
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.video_unused = TLRPC.Video.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.video_unused.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_messageMediaWebPage
    extends TLRPC.MessageMedia
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.webpage = TLRPC.WebPage.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.webpage.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_messageRange
    extends TLObject
  {
    public static int constructor = 182649427;
    public int max_id;
    public int min_id;
    
    public static TL_messageRange TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_messageRange", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_messageRange localTL_messageRange;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_messageRange)
      {
        return paramAbstractSerializedData;
        localTL_messageRange = new TL_messageRange();
        localTL_messageRange.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.min_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.max_id = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.min_id);
      paramAbstractSerializedData.writeInt32(this.max_id);
    }
  }
  
  public static class TL_messageService
    extends TLRPC.Message
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      boolean bool1 = true;
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0)
      {
        bool2 = true;
        this.unread = bool2;
        if ((this.flags & 0x2) == 0) {
          break label217;
        }
        bool2 = true;
        label41:
        this.out = bool2;
        if ((this.flags & 0x10) == 0) {
          break label223;
        }
        bool2 = true;
        label60:
        this.mentioned = bool2;
        if ((this.flags & 0x20) == 0) {
          break label229;
        }
        bool2 = true;
        label79:
        this.media_unread = bool2;
        if ((this.flags & 0x2000) == 0) {
          break label235;
        }
        bool2 = true;
        label99:
        this.silent = bool2;
        if ((this.flags & 0x4000) == 0) {
          break label241;
        }
      }
      label217:
      label223:
      label229:
      label235:
      label241:
      for (boolean bool2 = bool1;; bool2 = false)
      {
        this.post = bool2;
        this.id = paramAbstractSerializedData.readInt32(paramBoolean);
        if ((this.flags & 0x100) != 0) {
          this.from_id = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        this.to_id = TLRPC.Peer.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if ((this.flags & 0x8) != 0) {
          this.reply_to_msg_id = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        this.date = paramAbstractSerializedData.readInt32(paramBoolean);
        this.action = TLRPC.MessageAction.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        return;
        bool2 = false;
        break;
        bool2 = false;
        break label41;
        bool2 = false;
        break label60;
        bool2 = false;
        break label79;
        bool2 = false;
        break label99;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.unread)
      {
        i = this.flags | 0x1;
        this.flags = i;
        if (!this.out) {
          break label216;
        }
        i = this.flags | 0x2;
        label40:
        this.flags = i;
        if (!this.mentioned) {
          break label227;
        }
        i = this.flags | 0x10;
        label60:
        this.flags = i;
        if (!this.media_unread) {
          break label238;
        }
        i = this.flags | 0x20;
        label80:
        this.flags = i;
        if (!this.silent) {
          break label249;
        }
        i = this.flags | 0x2000;
        label101:
        this.flags = i;
        if (!this.post) {
          break label261;
        }
      }
      label216:
      label227:
      label238:
      label249:
      label261:
      for (int i = this.flags | 0x4000;; i = this.flags & 0xBFFF)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(this.id);
        if ((this.flags & 0x100) != 0) {
          paramAbstractSerializedData.writeInt32(this.from_id);
        }
        this.to_id.serializeToStream(paramAbstractSerializedData);
        if ((this.flags & 0x8) != 0) {
          paramAbstractSerializedData.writeInt32(this.reply_to_msg_id);
        }
        paramAbstractSerializedData.writeInt32(this.date);
        this.action.serializeToStream(paramAbstractSerializedData);
        return;
        i = this.flags & 0xFFFFFFFE;
        break;
        i = this.flags & 0xFFFFFFFD;
        break label40;
        i = this.flags & 0xFFFFFFEF;
        break label60;
        i = this.flags & 0xFFFFFFDF;
        break label80;
        i = this.flags & 0xDFFF;
        break label101;
      }
    }
  }
  
  public static class TL_messageService_layer48
    extends TLRPC.TL_messageService
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      boolean bool1 = true;
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      boolean bool2;
      if ((this.flags & 0x1) != 0)
      {
        bool2 = true;
        this.unread = bool2;
        if ((this.flags & 0x2) == 0) {
          break label226;
        }
        bool2 = true;
        label41:
        this.out = bool2;
        if ((this.flags & 0x10) == 0) {
          break label232;
        }
        bool2 = true;
        label60:
        this.mentioned = bool2;
        if ((this.flags & 0x20) == 0) {
          break label238;
        }
        bool2 = true;
        label79:
        this.media_unread = bool2;
        if ((this.flags & 0x2000) == 0) {
          break label244;
        }
        bool2 = true;
        label99:
        this.silent = bool2;
        if ((this.flags & 0x4000) == 0) {
          break label250;
        }
        bool2 = bool1;
        label119:
        this.post = bool2;
        this.id = paramAbstractSerializedData.readInt32(paramBoolean);
        if ((this.flags & 0x100) != 0) {
          this.from_id = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        this.to_id = TLRPC.Peer.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (this.from_id == 0) {
          if (this.to_id.user_id == 0) {
            break label256;
          }
        }
      }
      label226:
      label232:
      label238:
      label244:
      label250:
      label256:
      for (this.from_id = this.to_id.user_id;; this.from_id = (-this.to_id.channel_id))
      {
        this.date = paramAbstractSerializedData.readInt32(paramBoolean);
        this.action = TLRPC.MessageAction.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        return;
        bool2 = false;
        break;
        bool2 = false;
        break label41;
        bool2 = false;
        break label60;
        bool2 = false;
        break label79;
        bool2 = false;
        break label99;
        bool2 = false;
        break label119;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.unread)
      {
        i = this.flags | 0x1;
        this.flags = i;
        if (!this.out) {
          break label198;
        }
        i = this.flags | 0x2;
        label40:
        this.flags = i;
        if (!this.mentioned) {
          break label209;
        }
        i = this.flags | 0x10;
        label60:
        this.flags = i;
        if (!this.media_unread) {
          break label220;
        }
        i = this.flags | 0x20;
        label80:
        this.flags = i;
        if (!this.silent) {
          break label231;
        }
        i = this.flags | 0x2000;
        label101:
        this.flags = i;
        if (!this.post) {
          break label243;
        }
      }
      label198:
      label209:
      label220:
      label231:
      label243:
      for (int i = this.flags | 0x4000;; i = this.flags & 0xBFFF)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(this.id);
        if ((this.flags & 0x100) != 0) {
          paramAbstractSerializedData.writeInt32(this.from_id);
        }
        this.to_id.serializeToStream(paramAbstractSerializedData);
        paramAbstractSerializedData.writeInt32(this.date);
        this.action.serializeToStream(paramAbstractSerializedData);
        return;
        i = this.flags & 0xFFFFFFFE;
        break;
        i = this.flags & 0xFFFFFFFD;
        break label40;
        i = this.flags & 0xFFFFFFEF;
        break label60;
        i = this.flags & 0xFFFFFFDF;
        break label80;
        i = this.flags & 0xDFFF;
        break label101;
      }
    }
  }
  
  public static class TL_messageService_old
    extends TLRPC.TL_messageService
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.from_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.to_id = TLRPC.Peer.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.out = paramAbstractSerializedData.readBool(paramBoolean);
      this.unread = paramAbstractSerializedData.readBool(paramBoolean);
      this.flags |= 0x100;
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
      this.action = TLRPC.MessageAction.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.id);
      paramAbstractSerializedData.writeInt32(this.from_id);
      this.to_id.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeBool(this.out);
      paramAbstractSerializedData.writeBool(this.unread);
      paramAbstractSerializedData.writeInt32(this.date);
      this.action.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_messageService_old2
    extends TLRPC.TL_messageService
  {
    public static int constructor = 495384334;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      boolean bool1 = true;
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0)
      {
        bool2 = true;
        this.unread = bool2;
        if ((this.flags & 0x2) == 0) {
          break label159;
        }
        bool2 = true;
        label41:
        this.out = bool2;
        if ((this.flags & 0x10) == 0) {
          break label165;
        }
        bool2 = true;
        label60:
        this.mentioned = bool2;
        if ((this.flags & 0x20) == 0) {
          break label171;
        }
      }
      label159:
      label165:
      label171:
      for (boolean bool2 = bool1;; bool2 = false)
      {
        this.media_unread = bool2;
        this.id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.from_id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.to_id = TLRPC.Peer.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        this.date = paramAbstractSerializedData.readInt32(paramBoolean);
        this.action = TLRPC.MessageAction.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        this.flags |= 0x100;
        return;
        bool2 = false;
        break;
        bool2 = false;
        break label41;
        bool2 = false;
        break label60;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.unread)
      {
        i = this.flags | 0x1;
        this.flags = i;
        if (!this.out) {
          break label145;
        }
        i = this.flags | 0x2;
        label40:
        this.flags = i;
        if (!this.mentioned) {
          break label156;
        }
        i = this.flags | 0x10;
        label60:
        this.flags = i;
        if (!this.media_unread) {
          break label167;
        }
      }
      label145:
      label156:
      label167:
      for (int i = this.flags | 0x20;; i = this.flags & 0xFFFFFFDF)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(this.id);
        paramAbstractSerializedData.writeInt32(this.from_id);
        this.to_id.serializeToStream(paramAbstractSerializedData);
        paramAbstractSerializedData.writeInt32(this.date);
        this.action.serializeToStream(paramAbstractSerializedData);
        return;
        i = this.flags & 0xFFFFFFFE;
        break;
        i = this.flags & 0xFFFFFFFD;
        break label40;
        i = this.flags & 0xFFFFFFEF;
        break label60;
      }
    }
  }
  
  public static class TL_message_layer47
    extends TLRPC.TL_message
  {
    public static int constructor = -913120932;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      boolean bool;
      label36:
      label53:
      label70:
      label146:
      Object localObject;
      if ((this.flags & 0x1) != 0)
      {
        bool = true;
        this.unread = bool;
        if ((this.flags & 0x2) == 0) {
          break label424;
        }
        bool = true;
        this.out = bool;
        if ((this.flags & 0x10) == 0) {
          break label429;
        }
        bool = true;
        this.mentioned = bool;
        if ((this.flags & 0x20) == 0) {
          break label434;
        }
        bool = true;
        this.media_unread = bool;
        this.id = paramAbstractSerializedData.readInt32(paramBoolean);
        if ((this.flags & 0x100) != 0) {
          this.from_id = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        this.to_id = TLRPC.Peer.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (this.from_id == 0)
        {
          if (this.to_id.user_id == 0) {
            break label439;
          }
          this.from_id = this.to_id.user_id;
        }
        if ((this.flags & 0x4) != 0)
        {
          this.fwd_from = new TLRPC.TL_messageFwdHeader();
          localObject = TLRPC.Peer.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (!(localObject instanceof TLRPC.TL_peerChannel)) {
            break label454;
          }
          this.fwd_from.channel_id = ((TLRPC.Peer)localObject).channel_id;
          localObject = this.fwd_from;
          ((TLRPC.MessageFwdHeader)localObject).flags |= 0x2;
          label216:
          this.fwd_from.date = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x800) != 0) {
          this.via_bot_id = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x8) != 0) {
          this.reply_to_msg_id = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        this.date = paramAbstractSerializedData.readInt32(paramBoolean);
        this.message = paramAbstractSerializedData.readString(paramBoolean);
        if ((this.flags & 0x200) == 0) {
          break label495;
        }
        this.media = TLRPC.MessageMedia.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if ((this.media != null) && (!TextUtils.isEmpty(this.media.captionLegacy))) {
          this.message = this.media.captionLegacy;
        }
      }
      for (;;)
      {
        if ((this.flags & 0x40) != 0) {
          this.reply_markup = TLRPC.ReplyMarkup.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        }
        if ((this.flags & 0x80) == 0) {
          break label560;
        }
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i == 481674261) {
          break label509;
        }
        if (!paramBoolean) {
          break label543;
        }
        throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        bool = false;
        break;
        label424:
        bool = false;
        break label36;
        label429:
        bool = false;
        break label53;
        label434:
        bool = false;
        break label70;
        label439:
        this.from_id = (-this.to_id.channel_id);
        break label146;
        label454:
        if (!(localObject instanceof TLRPC.TL_peerUser)) {
          break label216;
        }
        this.fwd_from.from_id = ((TLRPC.Peer)localObject).user_id;
        localObject = this.fwd_from;
        ((TLRPC.MessageFwdHeader)localObject).flags |= 0x1;
        break label216;
        label495:
        this.media = new TLRPC.TL_messageMediaEmpty();
      }
      label509:
      int j = paramAbstractSerializedData.readInt32(paramBoolean);
      int i = 0;
      if (i < j)
      {
        localObject = TLRPC.MessageEntity.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localObject != null) {}
      }
      for (;;)
      {
        label543:
        return;
        this.entities.add(localObject);
        i++;
        break;
        label560:
        if ((this.flags & 0x400) != 0) {
          this.views = paramAbstractSerializedData.readInt32(paramBoolean);
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      int i;
      label40:
      label60:
      label80:
      Object localObject;
      if (this.unread)
      {
        i = this.flags | 0x1;
        this.flags = i;
        if (!this.out) {
          break label344;
        }
        i = this.flags | 0x2;
        this.flags = i;
        if (!this.mentioned) {
          break label355;
        }
        i = this.flags | 0x10;
        this.flags = i;
        if (!this.media_unread) {
          break label366;
        }
        i = this.flags | 0x20;
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(this.id);
        if ((this.flags & 0x100) != 0) {
          paramAbstractSerializedData.writeInt32(this.from_id);
        }
        this.to_id.serializeToStream(paramAbstractSerializedData);
        if ((this.flags & 0x4) != 0)
        {
          if (this.fwd_from.from_id == 0) {
            break label377;
          }
          localObject = new TLRPC.TL_peerUser();
          ((TLRPC.TL_peerUser)localObject).user_id = this.fwd_from.from_id;
          ((TLRPC.TL_peerUser)localObject).serializeToStream(paramAbstractSerializedData);
        }
      }
      for (;;)
      {
        paramAbstractSerializedData.writeInt32(this.fwd_from.date);
        if ((this.flags & 0x800) != 0) {
          paramAbstractSerializedData.writeInt32(this.via_bot_id);
        }
        if ((this.flags & 0x8) != 0) {
          paramAbstractSerializedData.writeInt32(this.reply_to_msg_id);
        }
        paramAbstractSerializedData.writeInt32(this.date);
        paramAbstractSerializedData.writeString(this.message);
        if ((this.flags & 0x200) != 0) {
          this.media.serializeToStream(paramAbstractSerializedData);
        }
        if ((this.flags & 0x40) != 0) {
          this.reply_markup.serializeToStream(paramAbstractSerializedData);
        }
        if ((this.flags & 0x80) == 0) {
          break label404;
        }
        paramAbstractSerializedData.writeInt32(481674261);
        int j = this.entities.size();
        paramAbstractSerializedData.writeInt32(j);
        for (i = 0; i < j; i++) {
          ((TLRPC.MessageEntity)this.entities.get(i)).serializeToStream(paramAbstractSerializedData);
        }
        i = this.flags & 0xFFFFFFFE;
        break;
        label344:
        i = this.flags & 0xFFFFFFFD;
        break label40;
        label355:
        i = this.flags & 0xFFFFFFEF;
        break label60;
        label366:
        i = this.flags & 0xFFFFFFDF;
        break label80;
        label377:
        localObject = new TLRPC.TL_peerChannel();
        ((TLRPC.TL_peerChannel)localObject).channel_id = this.fwd_from.channel_id;
        ((TLRPC.TL_peerChannel)localObject).serializeToStream(paramAbstractSerializedData);
      }
      label404:
      if ((this.flags & 0x400) != 0) {
        paramAbstractSerializedData.writeInt32(this.views);
      }
      writeAttachPath(paramAbstractSerializedData);
    }
  }
  
  public static class TL_message_layer68
    extends TLRPC.TL_message
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      boolean bool;
      if ((this.flags & 0x1) != 0)
      {
        bool = true;
        this.unread = bool;
        if ((this.flags & 0x2) == 0) {
          break label418;
        }
        bool = true;
        label36:
        this.out = bool;
        if ((this.flags & 0x10) == 0) {
          break label423;
        }
        bool = true;
        label53:
        this.mentioned = bool;
        if ((this.flags & 0x20) == 0) {
          break label428;
        }
        bool = true;
        label70:
        this.media_unread = bool;
        if ((this.flags & 0x2000) == 0) {
          break label433;
        }
        bool = true;
        label88:
        this.silent = bool;
        if ((this.flags & 0x4000) == 0) {
          break label438;
        }
        bool = true;
        label106:
        this.post = bool;
        if ((this.flags & 0x40000000) == 0) {
          break label443;
        }
        bool = true;
        label123:
        this.with_my_score = bool;
        this.id = paramAbstractSerializedData.readInt32(paramBoolean);
        if ((this.flags & 0x100) != 0) {
          this.from_id = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        this.to_id = TLRPC.Peer.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (this.from_id == 0)
        {
          if (this.to_id.user_id == 0) {
            break label448;
          }
          this.from_id = this.to_id.user_id;
        }
        label199:
        if ((this.flags & 0x4) != 0) {
          this.fwd_from = TLRPC.MessageFwdHeader.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        }
        if ((this.flags & 0x800) != 0) {
          this.via_bot_id = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x8) != 0) {
          this.reply_to_msg_id = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        this.date = paramAbstractSerializedData.readInt32(paramBoolean);
        this.message = paramAbstractSerializedData.readString(paramBoolean);
        if ((this.flags & 0x200) == 0) {
          break label463;
        }
        this.media = TLRPC.MessageMedia.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if ((this.media != null) && (!TextUtils.isEmpty(this.media.captionLegacy))) {
          this.message = this.media.captionLegacy;
        }
      }
      for (;;)
      {
        if ((this.flags & 0x40) != 0) {
          this.reply_markup = TLRPC.ReplyMarkup.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        }
        if ((this.flags & 0x80) == 0) {
          break label528;
        }
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i == 481674261) {
          break label477;
        }
        if (!paramBoolean) {
          break label511;
        }
        throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        bool = false;
        break;
        label418:
        bool = false;
        break label36;
        label423:
        bool = false;
        break label53;
        label428:
        bool = false;
        break label70;
        label433:
        bool = false;
        break label88;
        label438:
        bool = false;
        break label106;
        label443:
        bool = false;
        break label123;
        label448:
        this.from_id = (-this.to_id.channel_id);
        break label199;
        label463:
        this.media = new TLRPC.TL_messageMediaEmpty();
      }
      label477:
      int j = paramAbstractSerializedData.readInt32(paramBoolean);
      int i = 0;
      TLRPC.MessageEntity localMessageEntity;
      if (i < j)
      {
        localMessageEntity = TLRPC.MessageEntity.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localMessageEntity != null) {}
      }
      for (;;)
      {
        label511:
        return;
        this.entities.add(localMessageEntity);
        i++;
        break;
        label528:
        if ((this.flags & 0x400) != 0) {
          this.views = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x8000) != 0) {
          this.edit_date = paramAbstractSerializedData.readInt32(paramBoolean);
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.unread)
      {
        i = this.flags | 0x1;
        this.flags = i;
        if (!this.out) {
          break label366;
        }
        i = this.flags | 0x2;
        label40:
        this.flags = i;
        if (!this.mentioned) {
          break label377;
        }
        i = this.flags | 0x10;
        label60:
        this.flags = i;
        if (!this.media_unread) {
          break label388;
        }
        i = this.flags | 0x20;
        label80:
        this.flags = i;
        if (!this.silent) {
          break label399;
        }
        i = this.flags | 0x2000;
        label101:
        this.flags = i;
        if (!this.post) {
          break label411;
        }
        i = this.flags | 0x4000;
        label122:
        this.flags = i;
        if (!this.with_my_score) {
          break label423;
        }
      }
      label366:
      label377:
      label388:
      label399:
      label411:
      label423:
      for (int i = this.flags | 0x40000000;; i = this.flags & 0xBFFFFFFF)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(this.id);
        if ((this.flags & 0x100) != 0) {
          paramAbstractSerializedData.writeInt32(this.from_id);
        }
        this.to_id.serializeToStream(paramAbstractSerializedData);
        if ((this.flags & 0x4) != 0) {
          this.fwd_from.serializeToStream(paramAbstractSerializedData);
        }
        if ((this.flags & 0x800) != 0) {
          paramAbstractSerializedData.writeInt32(this.via_bot_id);
        }
        if ((this.flags & 0x8) != 0) {
          paramAbstractSerializedData.writeInt32(this.reply_to_msg_id);
        }
        paramAbstractSerializedData.writeInt32(this.date);
        paramAbstractSerializedData.writeString(this.message);
        if ((this.flags & 0x200) != 0) {
          this.media.serializeToStream(paramAbstractSerializedData);
        }
        if ((this.flags & 0x40) != 0) {
          this.reply_markup.serializeToStream(paramAbstractSerializedData);
        }
        if ((this.flags & 0x80) == 0) {
          break label434;
        }
        paramAbstractSerializedData.writeInt32(481674261);
        int j = this.entities.size();
        paramAbstractSerializedData.writeInt32(j);
        for (i = 0; i < j; i++) {
          ((TLRPC.MessageEntity)this.entities.get(i)).serializeToStream(paramAbstractSerializedData);
        }
        i = this.flags & 0xFFFFFFFE;
        break;
        i = this.flags & 0xFFFFFFFD;
        break label40;
        i = this.flags & 0xFFFFFFEF;
        break label60;
        i = this.flags & 0xFFFFFFDF;
        break label80;
        i = this.flags & 0xDFFF;
        break label101;
        i = this.flags & 0xBFFF;
        break label122;
      }
      label434:
      if ((this.flags & 0x400) != 0) {
        paramAbstractSerializedData.writeInt32(this.views);
      }
      if ((this.flags & 0x8000) != 0) {
        paramAbstractSerializedData.writeInt32(this.edit_date);
      }
      writeAttachPath(paramAbstractSerializedData);
    }
  }
  
  public static class TL_message_layer72
    extends TLRPC.TL_message
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x2) != 0)
      {
        bool = true;
        this.out = bool;
        if ((this.flags & 0x10) == 0) {
          break label375;
        }
        bool = true;
        label37:
        this.mentioned = bool;
        if ((this.flags & 0x20) == 0) {
          break label380;
        }
        bool = true;
        label54:
        this.media_unread = bool;
        if ((this.flags & 0x2000) == 0) {
          break label385;
        }
        bool = true;
        label72:
        this.silent = bool;
        if ((this.flags & 0x4000) == 0) {
          break label390;
        }
      }
      label375:
      label380:
      label385:
      label390:
      for (boolean bool = true;; bool = false)
      {
        this.post = bool;
        this.id = paramAbstractSerializedData.readInt32(paramBoolean);
        if ((this.flags & 0x100) != 0) {
          this.from_id = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        this.to_id = TLRPC.Peer.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if ((this.flags & 0x4) != 0) {
          this.fwd_from = TLRPC.MessageFwdHeader.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        }
        if ((this.flags & 0x800) != 0) {
          this.via_bot_id = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x8) != 0) {
          this.reply_to_msg_id = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        this.date = paramAbstractSerializedData.readInt32(paramBoolean);
        this.message = paramAbstractSerializedData.readString(paramBoolean);
        if ((this.flags & 0x200) != 0)
        {
          this.media = TLRPC.MessageMedia.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (this.media != null) {
            this.ttl = this.media.ttl_seconds;
          }
          if ((this.media != null) && (!TextUtils.isEmpty(this.media.captionLegacy))) {
            this.message = this.media.captionLegacy;
          }
        }
        if ((this.flags & 0x40) != 0) {
          this.reply_markup = TLRPC.ReplyMarkup.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        }
        if ((this.flags & 0x80) == 0) {
          break label446;
        }
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i == 481674261) {
          break label395;
        }
        if (!paramBoolean) {
          break label429;
        }
        throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        bool = false;
        break;
        bool = false;
        break label37;
        bool = false;
        break label54;
        bool = false;
        break label72;
      }
      label395:
      int j = paramAbstractSerializedData.readInt32(paramBoolean);
      int i = 0;
      TLRPC.MessageEntity localMessageEntity;
      if (i < j)
      {
        localMessageEntity = TLRPC.MessageEntity.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localMessageEntity != null) {}
      }
      for (;;)
      {
        label429:
        return;
        this.entities.add(localMessageEntity);
        i++;
        break;
        label446:
        if ((this.flags & 0x400) != 0) {
          this.views = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x8000) != 0) {
          this.edit_date = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x10000) != 0) {
          this.post_author = paramAbstractSerializedData.readString(paramBoolean);
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.out)
      {
        i = this.flags | 0x2;
        this.flags = i;
        if (!this.mentioned) {
          break label327;
        }
        i = this.flags | 0x10;
        label41:
        this.flags = i;
        if (!this.media_unread) {
          break label338;
        }
        i = this.flags | 0x20;
        label61:
        this.flags = i;
        if (!this.silent) {
          break label349;
        }
        i = this.flags | 0x2000;
        label82:
        this.flags = i;
        if (!this.post) {
          break label361;
        }
      }
      label327:
      label338:
      label349:
      label361:
      for (int i = this.flags | 0x4000;; i = this.flags & 0xBFFF)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(this.id);
        if ((this.flags & 0x100) != 0) {
          paramAbstractSerializedData.writeInt32(this.from_id);
        }
        this.to_id.serializeToStream(paramAbstractSerializedData);
        if ((this.flags & 0x4) != 0) {
          this.fwd_from.serializeToStream(paramAbstractSerializedData);
        }
        if ((this.flags & 0x800) != 0) {
          paramAbstractSerializedData.writeInt32(this.via_bot_id);
        }
        if ((this.flags & 0x8) != 0) {
          paramAbstractSerializedData.writeInt32(this.reply_to_msg_id);
        }
        paramAbstractSerializedData.writeInt32(this.date);
        paramAbstractSerializedData.writeString(this.message);
        if ((this.flags & 0x200) != 0) {
          this.media.serializeToStream(paramAbstractSerializedData);
        }
        if ((this.flags & 0x40) != 0) {
          this.reply_markup.serializeToStream(paramAbstractSerializedData);
        }
        if ((this.flags & 0x80) == 0) {
          break label373;
        }
        paramAbstractSerializedData.writeInt32(481674261);
        int j = this.entities.size();
        paramAbstractSerializedData.writeInt32(j);
        for (i = 0; i < j; i++) {
          ((TLRPC.MessageEntity)this.entities.get(i)).serializeToStream(paramAbstractSerializedData);
        }
        i = this.flags & 0xFFFFFFFD;
        break;
        i = this.flags & 0xFFFFFFEF;
        break label41;
        i = this.flags & 0xFFFFFFDF;
        break label61;
        i = this.flags & 0xDFFF;
        break label82;
      }
      label373:
      if ((this.flags & 0x400) != 0) {
        paramAbstractSerializedData.writeInt32(this.views);
      }
      if ((this.flags & 0x8000) != 0) {
        paramAbstractSerializedData.writeInt32(this.edit_date);
      }
      if ((this.flags & 0x10000) != 0) {
        paramAbstractSerializedData.writeString(this.post_author);
      }
      writeAttachPath(paramAbstractSerializedData);
    }
  }
  
  public static class TL_message_old
    extends TLRPC.TL_message
  {
    public static int constructor = 585853626;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.from_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.to_id = TLRPC.Peer.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.out = paramAbstractSerializedData.readBool(paramBoolean);
      this.unread = paramAbstractSerializedData.readBool(paramBoolean);
      this.flags |= 0x300;
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
      this.message = paramAbstractSerializedData.readString(paramBoolean);
      this.media = TLRPC.MessageMedia.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      if ((this.media != null) && (!TextUtils.isEmpty(this.media.captionLegacy))) {
        this.message = this.media.captionLegacy;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.id);
      paramAbstractSerializedData.writeInt32(this.from_id);
      this.to_id.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeBool(this.out);
      paramAbstractSerializedData.writeBool(this.unread);
      paramAbstractSerializedData.writeInt32(this.date);
      paramAbstractSerializedData.writeString(this.message);
      this.media.serializeToStream(paramAbstractSerializedData);
      writeAttachPath(paramAbstractSerializedData);
    }
  }
  
  public static class TL_message_old2
    extends TLRPC.TL_message
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      boolean bool1 = true;
      this.flags = (paramAbstractSerializedData.readInt32(paramBoolean) | 0x100 | 0x200);
      if ((this.flags & 0x1) != 0)
      {
        bool2 = true;
        this.unread = bool2;
        if ((this.flags & 0x2) == 0) {
          break label195;
        }
        bool2 = true;
        label49:
        this.out = bool2;
        if ((this.flags & 0x10) == 0) {
          break label201;
        }
        bool2 = true;
        label68:
        this.mentioned = bool2;
        if ((this.flags & 0x20) == 0) {
          break label207;
        }
      }
      label195:
      label201:
      label207:
      for (boolean bool2 = bool1;; bool2 = false)
      {
        this.media_unread = bool2;
        this.id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.from_id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.to_id = TLRPC.Peer.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        this.date = paramAbstractSerializedData.readInt32(paramBoolean);
        this.message = paramAbstractSerializedData.readString(paramBoolean);
        this.media = TLRPC.MessageMedia.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if ((this.media != null) && (!TextUtils.isEmpty(this.media.captionLegacy))) {
          this.message = this.media.captionLegacy;
        }
        return;
        bool2 = false;
        break;
        bool2 = false;
        break label49;
        bool2 = false;
        break label68;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.unread)
      {
        i = this.flags | 0x1;
        this.flags = i;
        if (!this.out) {
          break label158;
        }
        i = this.flags | 0x2;
        label40:
        this.flags = i;
        if (!this.mentioned) {
          break label169;
        }
        i = this.flags | 0x10;
        label60:
        this.flags = i;
        if (!this.media_unread) {
          break label180;
        }
      }
      label158:
      label169:
      label180:
      for (int i = this.flags | 0x20;; i = this.flags & 0xFFFFFFDF)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(this.id);
        paramAbstractSerializedData.writeInt32(this.from_id);
        this.to_id.serializeToStream(paramAbstractSerializedData);
        paramAbstractSerializedData.writeInt32(this.date);
        paramAbstractSerializedData.writeString(this.message);
        this.media.serializeToStream(paramAbstractSerializedData);
        writeAttachPath(paramAbstractSerializedData);
        return;
        i = this.flags & 0xFFFFFFFE;
        break;
        i = this.flags & 0xFFFFFFFD;
        break label40;
        i = this.flags & 0xFFFFFFEF;
        break label60;
      }
    }
  }
  
  public static class TL_message_old3
    extends TLRPC.TL_message
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      boolean bool1 = true;
      this.flags = (paramAbstractSerializedData.readInt32(paramBoolean) | 0x100 | 0x200);
      if ((this.flags & 0x1) != 0)
      {
        bool2 = true;
        this.unread = bool2;
        if ((this.flags & 0x2) == 0) {
          break label276;
        }
        bool2 = true;
        label49:
        this.out = bool2;
        if ((this.flags & 0x10) == 0) {
          break label282;
        }
        bool2 = true;
        label68:
        this.mentioned = bool2;
        if ((this.flags & 0x20) == 0) {
          break label288;
        }
      }
      label276:
      label282:
      label288:
      for (boolean bool2 = bool1;; bool2 = false)
      {
        this.media_unread = bool2;
        this.id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.from_id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.to_id = TLRPC.Peer.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if ((this.flags & 0x4) != 0)
        {
          this.fwd_from = new TLRPC.TL_messageFwdHeader();
          this.fwd_from.from_id = paramAbstractSerializedData.readInt32(paramBoolean);
          TLRPC.MessageFwdHeader localMessageFwdHeader = this.fwd_from;
          localMessageFwdHeader.flags |= 0x1;
          this.fwd_from.date = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x8) != 0) {
          this.reply_to_msg_id = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        this.date = paramAbstractSerializedData.readInt32(paramBoolean);
        this.message = paramAbstractSerializedData.readString(paramBoolean);
        this.media = TLRPC.MessageMedia.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if ((this.media != null) && (!TextUtils.isEmpty(this.media.captionLegacy))) {
          this.message = this.media.captionLegacy;
        }
        return;
        bool2 = false;
        break;
        bool2 = false;
        break label49;
        bool2 = false;
        break label68;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.unread)
      {
        i = this.flags | 0x1;
        this.flags = i;
        if (!this.out) {
          break label207;
        }
        i = this.flags | 0x2;
        label40:
        this.flags = i;
        if (!this.mentioned) {
          break label218;
        }
        i = this.flags | 0x10;
        label60:
        this.flags = i;
        if (!this.media_unread) {
          break label229;
        }
      }
      label207:
      label218:
      label229:
      for (int i = this.flags | 0x20;; i = this.flags & 0xFFFFFFDF)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(this.id);
        paramAbstractSerializedData.writeInt32(this.from_id);
        this.to_id.serializeToStream(paramAbstractSerializedData);
        if ((this.flags & 0x4) != 0)
        {
          paramAbstractSerializedData.writeInt32(this.fwd_from.from_id);
          paramAbstractSerializedData.writeInt32(this.fwd_from.date);
        }
        if ((this.flags & 0x8) != 0) {
          paramAbstractSerializedData.writeInt32(this.reply_to_msg_id);
        }
        paramAbstractSerializedData.writeInt32(this.date);
        paramAbstractSerializedData.writeString(this.message);
        this.media.serializeToStream(paramAbstractSerializedData);
        writeAttachPath(paramAbstractSerializedData);
        return;
        i = this.flags & 0xFFFFFFFE;
        break;
        i = this.flags & 0xFFFFFFFD;
        break label40;
        i = this.flags & 0xFFFFFFEF;
        break label60;
      }
    }
  }
  
  public static class TL_message_old4
    extends TLRPC.TL_message
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      boolean bool1 = true;
      this.flags = (paramAbstractSerializedData.readInt32(paramBoolean) | 0x100 | 0x200);
      if ((this.flags & 0x1) != 0)
      {
        bool2 = true;
        this.unread = bool2;
        if ((this.flags & 0x2) == 0) {
          break label300;
        }
        bool2 = true;
        label49:
        this.out = bool2;
        if ((this.flags & 0x10) == 0) {
          break label306;
        }
        bool2 = true;
        label68:
        this.mentioned = bool2;
        if ((this.flags & 0x20) == 0) {
          break label312;
        }
      }
      label300:
      label306:
      label312:
      for (boolean bool2 = bool1;; bool2 = false)
      {
        this.media_unread = bool2;
        this.id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.from_id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.to_id = TLRPC.Peer.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if ((this.flags & 0x4) != 0)
        {
          this.fwd_from = new TLRPC.TL_messageFwdHeader();
          this.fwd_from.from_id = paramAbstractSerializedData.readInt32(paramBoolean);
          TLRPC.MessageFwdHeader localMessageFwdHeader = this.fwd_from;
          localMessageFwdHeader.flags |= 0x1;
          this.fwd_from.date = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x8) != 0) {
          this.reply_to_msg_id = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        this.date = paramAbstractSerializedData.readInt32(paramBoolean);
        this.message = paramAbstractSerializedData.readString(paramBoolean);
        this.media = TLRPC.MessageMedia.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if ((this.media != null) && (!TextUtils.isEmpty(this.media.captionLegacy))) {
          this.message = this.media.captionLegacy;
        }
        if ((this.flags & 0x40) != 0) {
          this.reply_markup = TLRPC.ReplyMarkup.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        }
        return;
        bool2 = false;
        break;
        bool2 = false;
        break label49;
        bool2 = false;
        break label68;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.unread)
      {
        i = this.flags | 0x1;
        this.flags = i;
        if (!this.out) {
          break label225;
        }
        i = this.flags | 0x2;
        label40:
        this.flags = i;
        if (!this.mentioned) {
          break label236;
        }
        i = this.flags | 0x10;
        label60:
        this.flags = i;
        if (!this.media_unread) {
          break label247;
        }
      }
      label225:
      label236:
      label247:
      for (int i = this.flags | 0x20;; i = this.flags & 0xFFFFFFDF)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(this.id);
        paramAbstractSerializedData.writeInt32(this.from_id);
        this.to_id.serializeToStream(paramAbstractSerializedData);
        if ((this.flags & 0x4) != 0)
        {
          paramAbstractSerializedData.writeInt32(this.fwd_from.from_id);
          paramAbstractSerializedData.writeInt32(this.fwd_from.date);
        }
        if ((this.flags & 0x8) != 0) {
          paramAbstractSerializedData.writeInt32(this.reply_to_msg_id);
        }
        paramAbstractSerializedData.writeInt32(this.date);
        paramAbstractSerializedData.writeString(this.message);
        this.media.serializeToStream(paramAbstractSerializedData);
        if ((this.flags & 0x40) != 0) {
          this.reply_markup.serializeToStream(paramAbstractSerializedData);
        }
        writeAttachPath(paramAbstractSerializedData);
        return;
        i = this.flags & 0xFFFFFFFE;
        break;
        i = this.flags & 0xFFFFFFFD;
        break label40;
        i = this.flags & 0xFFFFFFEF;
        break label60;
      }
    }
  }
  
  public static class TL_message_old5
    extends TLRPC.TL_message
  {
    public static int constructor = -260565816;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = (paramAbstractSerializedData.readInt32(paramBoolean) | 0x100 | 0x200);
      if ((this.flags & 0x1) != 0)
      {
        bool = true;
        this.unread = bool;
        if ((this.flags & 0x2) == 0) {
          break label342;
        }
        bool = true;
        label44:
        this.out = bool;
        if ((this.flags & 0x10) == 0) {
          break label347;
        }
        bool = true;
        label61:
        this.mentioned = bool;
        if ((this.flags & 0x20) == 0) {
          break label352;
        }
      }
      Object localObject;
      label342:
      label347:
      label352:
      for (boolean bool = true;; bool = false)
      {
        this.media_unread = bool;
        this.id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.from_id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.to_id = TLRPC.Peer.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if ((this.flags & 0x4) != 0)
        {
          this.fwd_from = new TLRPC.TL_messageFwdHeader();
          this.fwd_from.from_id = paramAbstractSerializedData.readInt32(paramBoolean);
          localObject = this.fwd_from;
          ((TLRPC.MessageFwdHeader)localObject).flags |= 0x1;
          this.fwd_from.date = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x8) != 0) {
          this.reply_to_msg_id = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        this.date = paramAbstractSerializedData.readInt32(paramBoolean);
        this.message = paramAbstractSerializedData.readString(paramBoolean);
        this.media = TLRPC.MessageMedia.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if ((this.media != null) && (!TextUtils.isEmpty(this.media.captionLegacy))) {
          this.message = this.media.captionLegacy;
        }
        if ((this.flags & 0x40) != 0) {
          this.reply_markup = TLRPC.ReplyMarkup.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        }
        if ((this.flags & 0x80) == 0) {
          break label391;
        }
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i == 481674261) {
          break label357;
        }
        if (!paramBoolean) {
          break label391;
        }
        throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        bool = false;
        break;
        bool = false;
        break label44;
        bool = false;
        break label61;
      }
      label357:
      int j = paramAbstractSerializedData.readInt32(paramBoolean);
      for (int i = 0;; i++)
      {
        if (i < j)
        {
          localObject = TLRPC.MessageEntity.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localObject != null) {}
        }
        else
        {
          label391:
          return;
        }
        this.entities.add(localObject);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.unread)
      {
        i = this.flags | 0x1;
        this.flags = i;
        if (!this.out) {
          break label277;
        }
        i = this.flags | 0x2;
        label40:
        this.flags = i;
        if (!this.mentioned) {
          break label288;
        }
        i = this.flags | 0x10;
        label60:
        this.flags = i;
        if (!this.media_unread) {
          break label299;
        }
      }
      label277:
      label288:
      label299:
      for (int i = this.flags | 0x20;; i = this.flags & 0xFFFFFFDF)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(this.id);
        paramAbstractSerializedData.writeInt32(this.from_id);
        this.to_id.serializeToStream(paramAbstractSerializedData);
        if ((this.flags & 0x4) != 0)
        {
          paramAbstractSerializedData.writeInt32(this.fwd_from.from_id);
          paramAbstractSerializedData.writeInt32(this.fwd_from.date);
        }
        if ((this.flags & 0x8) != 0) {
          paramAbstractSerializedData.writeInt32(this.reply_to_msg_id);
        }
        paramAbstractSerializedData.writeInt32(this.date);
        paramAbstractSerializedData.writeString(this.message);
        this.media.serializeToStream(paramAbstractSerializedData);
        if ((this.flags & 0x40) != 0) {
          this.reply_markup.serializeToStream(paramAbstractSerializedData);
        }
        if ((this.flags & 0x80) == 0) {
          break label310;
        }
        paramAbstractSerializedData.writeInt32(481674261);
        int j = this.entities.size();
        paramAbstractSerializedData.writeInt32(j);
        for (i = 0; i < j; i++) {
          ((TLRPC.MessageEntity)this.entities.get(i)).serializeToStream(paramAbstractSerializedData);
        }
        i = this.flags & 0xFFFFFFFE;
        break;
        i = this.flags & 0xFFFFFFFD;
        break label40;
        i = this.flags & 0xFFFFFFEF;
        break label60;
      }
      label310:
      writeAttachPath(paramAbstractSerializedData);
    }
  }
  
  public static class TL_message_old6
    extends TLRPC.TL_message
  {
    public static int constructor = 736885382;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = (paramAbstractSerializedData.readInt32(paramBoolean) | 0x100);
      boolean bool;
      label40:
      label57:
      label74:
      Object localObject;
      if ((this.flags & 0x1) != 0)
      {
        bool = true;
        this.unread = bool;
        if ((this.flags & 0x2) == 0) {
          break label349;
        }
        bool = true;
        this.out = bool;
        if ((this.flags & 0x10) == 0) {
          break label354;
        }
        bool = true;
        this.mentioned = bool;
        if ((this.flags & 0x20) == 0) {
          break label359;
        }
        bool = true;
        this.media_unread = bool;
        this.id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.from_id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.to_id = TLRPC.Peer.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if ((this.flags & 0x4) != 0)
        {
          this.fwd_from = new TLRPC.TL_messageFwdHeader();
          this.fwd_from.from_id = paramAbstractSerializedData.readInt32(paramBoolean);
          localObject = this.fwd_from;
          ((TLRPC.MessageFwdHeader)localObject).flags |= 0x1;
          this.fwd_from.date = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x8) != 0) {
          this.reply_to_msg_id = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        this.date = paramAbstractSerializedData.readInt32(paramBoolean);
        this.message = paramAbstractSerializedData.readString(paramBoolean);
        if ((this.flags & 0x200) == 0) {
          break label364;
        }
        this.media = TLRPC.MessageMedia.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if ((this.media != null) && (!TextUtils.isEmpty(this.media.captionLegacy))) {
          this.message = this.media.captionLegacy;
        }
      }
      for (;;)
      {
        if ((this.flags & 0x40) != 0) {
          this.reply_markup = TLRPC.ReplyMarkup.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        }
        if ((this.flags & 0x80) == 0) {
          break label412;
        }
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i == 481674261) {
          break label378;
        }
        if (!paramBoolean) {
          break label412;
        }
        throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        bool = false;
        break;
        label349:
        bool = false;
        break label40;
        label354:
        bool = false;
        break label57;
        label359:
        bool = false;
        break label74;
        label364:
        this.media = new TLRPC.TL_messageMediaEmpty();
      }
      label378:
      int j = paramAbstractSerializedData.readInt32(paramBoolean);
      for (int i = 0;; i++)
      {
        if (i < j)
        {
          localObject = TLRPC.MessageEntity.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localObject != null) {}
        }
        else
        {
          label412:
          return;
        }
        this.entities.add(localObject);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.unread)
      {
        i = this.flags | 0x1;
        this.flags = i;
        if (!this.out) {
          break label288;
        }
        i = this.flags | 0x2;
        label40:
        this.flags = i;
        if (!this.mentioned) {
          break label299;
        }
        i = this.flags | 0x10;
        label60:
        this.flags = i;
        if (!this.media_unread) {
          break label310;
        }
      }
      label288:
      label299:
      label310:
      for (int i = this.flags | 0x20;; i = this.flags & 0xFFFFFFDF)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(this.id);
        paramAbstractSerializedData.writeInt32(this.from_id);
        this.to_id.serializeToStream(paramAbstractSerializedData);
        if ((this.flags & 0x4) != 0)
        {
          paramAbstractSerializedData.writeInt32(this.fwd_from.from_id);
          paramAbstractSerializedData.writeInt32(this.fwd_from.date);
        }
        if ((this.flags & 0x8) != 0) {
          paramAbstractSerializedData.writeInt32(this.reply_to_msg_id);
        }
        paramAbstractSerializedData.writeInt32(this.date);
        paramAbstractSerializedData.writeString(this.message);
        if ((this.flags & 0x200) != 0) {
          this.media.serializeToStream(paramAbstractSerializedData);
        }
        if ((this.flags & 0x40) != 0) {
          this.reply_markup.serializeToStream(paramAbstractSerializedData);
        }
        if ((this.flags & 0x80) == 0) {
          break label321;
        }
        paramAbstractSerializedData.writeInt32(481674261);
        int j = this.entities.size();
        paramAbstractSerializedData.writeInt32(j);
        for (i = 0; i < j; i++) {
          ((TLRPC.MessageEntity)this.entities.get(i)).serializeToStream(paramAbstractSerializedData);
        }
        i = this.flags & 0xFFFFFFFE;
        break;
        i = this.flags & 0xFFFFFFFD;
        break label40;
        i = this.flags & 0xFFFFFFEF;
        break label60;
      }
      label321:
      writeAttachPath(paramAbstractSerializedData);
    }
  }
  
  public static class TL_message_old7
    extends TLRPC.TL_message
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      boolean bool;
      label36:
      label53:
      label70:
      label146:
      Object localObject;
      if ((this.flags & 0x1) != 0)
      {
        bool = true;
        this.unread = bool;
        if ((this.flags & 0x2) == 0) {
          break label404;
        }
        bool = true;
        this.out = bool;
        if ((this.flags & 0x10) == 0) {
          break label409;
        }
        bool = true;
        this.mentioned = bool;
        if ((this.flags & 0x20) == 0) {
          break label414;
        }
        bool = true;
        this.media_unread = bool;
        this.id = paramAbstractSerializedData.readInt32(paramBoolean);
        if ((this.flags & 0x100) != 0) {
          this.from_id = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        this.to_id = TLRPC.Peer.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (this.from_id == 0)
        {
          if (this.to_id.user_id == 0) {
            break label419;
          }
          this.from_id = this.to_id.user_id;
        }
        if ((this.flags & 0x4) != 0)
        {
          this.fwd_from = new TLRPC.TL_messageFwdHeader();
          localObject = TLRPC.Peer.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (!(localObject instanceof TLRPC.TL_peerChannel)) {
            break label434;
          }
          this.fwd_from.channel_id = ((TLRPC.Peer)localObject).channel_id;
          localObject = this.fwd_from;
          ((TLRPC.MessageFwdHeader)localObject).flags |= 0x2;
          label216:
          this.fwd_from.date = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x8) != 0) {
          this.reply_to_msg_id = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        this.date = paramAbstractSerializedData.readInt32(paramBoolean);
        this.message = paramAbstractSerializedData.readString(paramBoolean);
        if ((this.flags & 0x200) == 0) {
          break label475;
        }
        this.media = TLRPC.MessageMedia.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if ((this.media != null) && (!TextUtils.isEmpty(this.media.captionLegacy))) {
          this.message = this.media.captionLegacy;
        }
      }
      for (;;)
      {
        if ((this.flags & 0x40) != 0) {
          this.reply_markup = TLRPC.ReplyMarkup.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        }
        if ((this.flags & 0x80) == 0) {
          break label540;
        }
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i == 481674261) {
          break label489;
        }
        if (!paramBoolean) {
          break label523;
        }
        throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        bool = false;
        break;
        label404:
        bool = false;
        break label36;
        label409:
        bool = false;
        break label53;
        label414:
        bool = false;
        break label70;
        label419:
        this.from_id = (-this.to_id.channel_id);
        break label146;
        label434:
        if (!(localObject instanceof TLRPC.TL_peerUser)) {
          break label216;
        }
        this.fwd_from.from_id = ((TLRPC.Peer)localObject).user_id;
        localObject = this.fwd_from;
        ((TLRPC.MessageFwdHeader)localObject).flags |= 0x1;
        break label216;
        label475:
        this.media = new TLRPC.TL_messageMediaEmpty();
      }
      label489:
      int j = paramAbstractSerializedData.readInt32(paramBoolean);
      int i = 0;
      if (i < j)
      {
        localObject = TLRPC.MessageEntity.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localObject != null) {}
      }
      for (;;)
      {
        label523:
        return;
        this.entities.add(localObject);
        i++;
        break;
        label540:
        if ((this.flags & 0x400) != 0) {
          this.views = paramAbstractSerializedData.readInt32(paramBoolean);
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      int i;
      label40:
      label60:
      label80:
      Object localObject;
      if (this.unread)
      {
        i = this.flags | 0x1;
        this.flags = i;
        if (!this.out) {
          break label325;
        }
        i = this.flags | 0x2;
        this.flags = i;
        if (!this.mentioned) {
          break label336;
        }
        i = this.flags | 0x10;
        this.flags = i;
        if (!this.media_unread) {
          break label347;
        }
        i = this.flags | 0x20;
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(this.id);
        if ((this.flags & 0x100) != 0) {
          paramAbstractSerializedData.writeInt32(this.from_id);
        }
        this.to_id.serializeToStream(paramAbstractSerializedData);
        if ((this.flags & 0x4) != 0)
        {
          if (this.fwd_from.from_id == 0) {
            break label358;
          }
          localObject = new TLRPC.TL_peerUser();
          ((TLRPC.TL_peerUser)localObject).user_id = this.fwd_from.from_id;
          ((TLRPC.TL_peerUser)localObject).serializeToStream(paramAbstractSerializedData);
        }
      }
      for (;;)
      {
        paramAbstractSerializedData.writeInt32(this.fwd_from.date);
        if ((this.flags & 0x8) != 0) {
          paramAbstractSerializedData.writeInt32(this.reply_to_msg_id);
        }
        paramAbstractSerializedData.writeInt32(this.date);
        paramAbstractSerializedData.writeString(this.message);
        if ((this.flags & 0x200) != 0) {
          this.media.serializeToStream(paramAbstractSerializedData);
        }
        if ((this.flags & 0x40) != 0) {
          this.reply_markup.serializeToStream(paramAbstractSerializedData);
        }
        if ((this.flags & 0x80) == 0) {
          break label385;
        }
        paramAbstractSerializedData.writeInt32(481674261);
        int j = this.entities.size();
        paramAbstractSerializedData.writeInt32(j);
        for (i = 0; i < j; i++) {
          ((TLRPC.MessageEntity)this.entities.get(i)).serializeToStream(paramAbstractSerializedData);
        }
        i = this.flags & 0xFFFFFFFE;
        break;
        label325:
        i = this.flags & 0xFFFFFFFD;
        break label40;
        label336:
        i = this.flags & 0xFFFFFFEF;
        break label60;
        label347:
        i = this.flags & 0xFFFFFFDF;
        break label80;
        label358:
        localObject = new TLRPC.TL_peerChannel();
        ((TLRPC.TL_peerChannel)localObject).channel_id = this.fwd_from.channel_id;
        ((TLRPC.TL_peerChannel)localObject).serializeToStream(paramAbstractSerializedData);
      }
      label385:
      if ((this.flags & 0x400) != 0) {
        paramAbstractSerializedData.writeInt32(this.views);
      }
      writeAttachPath(paramAbstractSerializedData);
    }
  }
  
  public static class TL_message_secret
    extends TLRPC.TL_message
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0)
      {
        bool = true;
        this.unread = bool;
        if ((this.flags & 0x2) == 0) {
          break label227;
        }
        bool = true;
        label36:
        this.out = bool;
        if ((this.flags & 0x10) == 0) {
          break label232;
        }
        bool = true;
        label53:
        this.mentioned = bool;
        if ((this.flags & 0x20) == 0) {
          break label237;
        }
      }
      label227:
      label232:
      label237:
      for (boolean bool = true;; bool = false)
      {
        this.media_unread = bool;
        this.id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.ttl = paramAbstractSerializedData.readInt32(paramBoolean);
        this.from_id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.to_id = TLRPC.Peer.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        this.date = paramAbstractSerializedData.readInt32(paramBoolean);
        this.message = paramAbstractSerializedData.readString(paramBoolean);
        this.media = TLRPC.MessageMedia.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if ((this.media != null) && (!TextUtils.isEmpty(this.media.captionLegacy))) {
          this.message = this.media.captionLegacy;
        }
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i == 481674261) {
          break label242;
        }
        if (!paramBoolean) {
          break label276;
        }
        throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        bool = false;
        break;
        bool = false;
        break label36;
        bool = false;
        break label53;
      }
      label242:
      int j = paramAbstractSerializedData.readInt32(paramBoolean);
      int i = 0;
      TLRPC.MessageEntity localMessageEntity;
      if (i < j)
      {
        localMessageEntity = TLRPC.MessageEntity.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localMessageEntity != null) {}
      }
      for (;;)
      {
        label276:
        return;
        this.entities.add(localMessageEntity);
        i++;
        break;
        if ((this.flags & 0x800) != 0) {
          this.via_bot_name = paramAbstractSerializedData.readString(paramBoolean);
        }
        if ((this.flags & 0x8) != 0) {
          this.reply_to_random_id = paramAbstractSerializedData.readInt64(paramBoolean);
        }
        if ((this.flags & 0x20000) != 0) {
          this.grouped_id = paramAbstractSerializedData.readInt64(paramBoolean);
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.unread)
      {
        i = this.flags | 0x1;
        this.flags = i;
        if (!this.out) {
          break label207;
        }
        i = this.flags | 0x2;
        label40:
        this.flags = i;
        if (!this.mentioned) {
          break label218;
        }
        i = this.flags | 0x10;
        label60:
        this.flags = i;
        if (!this.media_unread) {
          break label229;
        }
      }
      label207:
      label218:
      label229:
      for (int i = this.flags | 0x20;; i = this.flags & 0xFFFFFFDF)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(this.id);
        paramAbstractSerializedData.writeInt32(this.ttl);
        paramAbstractSerializedData.writeInt32(this.from_id);
        this.to_id.serializeToStream(paramAbstractSerializedData);
        paramAbstractSerializedData.writeInt32(this.date);
        paramAbstractSerializedData.writeString(this.message);
        this.media.serializeToStream(paramAbstractSerializedData);
        paramAbstractSerializedData.writeInt32(481674261);
        int j = this.entities.size();
        paramAbstractSerializedData.writeInt32(j);
        for (i = 0; i < j; i++) {
          ((TLRPC.MessageEntity)this.entities.get(i)).serializeToStream(paramAbstractSerializedData);
        }
        i = this.flags & 0xFFFFFFFE;
        break;
        i = this.flags & 0xFFFFFFFD;
        break label40;
        i = this.flags & 0xFFFFFFEF;
        break label60;
      }
      if ((this.flags & 0x800) != 0) {
        paramAbstractSerializedData.writeString(this.via_bot_name);
      }
      if ((this.flags & 0x8) != 0) {
        paramAbstractSerializedData.writeInt64(this.reply_to_random_id);
      }
      if ((this.flags & 0x20000) != 0) {
        paramAbstractSerializedData.writeInt64(this.grouped_id);
      }
      writeAttachPath(paramAbstractSerializedData);
    }
  }
  
  public static class TL_message_secret_layer72
    extends TLRPC.TL_message
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0)
      {
        bool = true;
        this.unread = bool;
        if ((this.flags & 0x2) == 0) {
          break label227;
        }
        bool = true;
        label36:
        this.out = bool;
        if ((this.flags & 0x10) == 0) {
          break label232;
        }
        bool = true;
        label53:
        this.mentioned = bool;
        if ((this.flags & 0x20) == 0) {
          break label237;
        }
      }
      label227:
      label232:
      label237:
      for (boolean bool = true;; bool = false)
      {
        this.media_unread = bool;
        this.id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.ttl = paramAbstractSerializedData.readInt32(paramBoolean);
        this.from_id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.to_id = TLRPC.Peer.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        this.date = paramAbstractSerializedData.readInt32(paramBoolean);
        this.message = paramAbstractSerializedData.readString(paramBoolean);
        this.media = TLRPC.MessageMedia.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if ((this.media != null) && (!TextUtils.isEmpty(this.media.captionLegacy))) {
          this.message = this.media.captionLegacy;
        }
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i == 481674261) {
          break label242;
        }
        if (!paramBoolean) {
          break label276;
        }
        throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        bool = false;
        break;
        bool = false;
        break label36;
        bool = false;
        break label53;
      }
      label242:
      int j = paramAbstractSerializedData.readInt32(paramBoolean);
      int i = 0;
      TLRPC.MessageEntity localMessageEntity;
      if (i < j)
      {
        localMessageEntity = TLRPC.MessageEntity.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localMessageEntity != null) {}
      }
      for (;;)
      {
        label276:
        return;
        this.entities.add(localMessageEntity);
        i++;
        break;
        if ((this.flags & 0x800) != 0) {
          this.via_bot_name = paramAbstractSerializedData.readString(paramBoolean);
        }
        if ((this.flags & 0x8) != 0) {
          this.reply_to_random_id = paramAbstractSerializedData.readInt64(paramBoolean);
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.unread)
      {
        i = this.flags | 0x1;
        this.flags = i;
        if (!this.out) {
          break label207;
        }
        i = this.flags | 0x2;
        label40:
        this.flags = i;
        if (!this.mentioned) {
          break label218;
        }
        i = this.flags | 0x10;
        label60:
        this.flags = i;
        if (!this.media_unread) {
          break label229;
        }
      }
      label207:
      label218:
      label229:
      for (int i = this.flags | 0x20;; i = this.flags & 0xFFFFFFDF)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(this.id);
        paramAbstractSerializedData.writeInt32(this.ttl);
        paramAbstractSerializedData.writeInt32(this.from_id);
        this.to_id.serializeToStream(paramAbstractSerializedData);
        paramAbstractSerializedData.writeInt32(this.date);
        paramAbstractSerializedData.writeString(this.message);
        this.media.serializeToStream(paramAbstractSerializedData);
        paramAbstractSerializedData.writeInt32(481674261);
        int j = this.entities.size();
        paramAbstractSerializedData.writeInt32(j);
        for (i = 0; i < j; i++) {
          ((TLRPC.MessageEntity)this.entities.get(i)).serializeToStream(paramAbstractSerializedData);
        }
        i = this.flags & 0xFFFFFFFE;
        break;
        i = this.flags & 0xFFFFFFFD;
        break label40;
        i = this.flags & 0xFFFFFFEF;
        break label60;
      }
      if ((this.flags & 0x800) != 0) {
        paramAbstractSerializedData.writeString(this.via_bot_name);
      }
      if ((this.flags & 0x8) != 0) {
        paramAbstractSerializedData.writeInt64(this.reply_to_random_id);
      }
      writeAttachPath(paramAbstractSerializedData);
    }
  }
  
  public static class TL_message_secret_old
    extends TLRPC.TL_message_secret
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      boolean bool1 = true;
      this.flags = (paramAbstractSerializedData.readInt32(paramBoolean) | 0x100 | 0x200);
      if ((this.flags & 0x1) != 0)
      {
        bool2 = true;
        this.unread = bool2;
        if ((this.flags & 0x2) == 0) {
          break label204;
        }
        bool2 = true;
        label49:
        this.out = bool2;
        if ((this.flags & 0x10) == 0) {
          break label210;
        }
        bool2 = true;
        label68:
        this.mentioned = bool2;
        if ((this.flags & 0x20) == 0) {
          break label216;
        }
      }
      label204:
      label210:
      label216:
      for (boolean bool2 = bool1;; bool2 = false)
      {
        this.media_unread = bool2;
        this.id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.ttl = paramAbstractSerializedData.readInt32(paramBoolean);
        this.from_id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.to_id = TLRPC.Peer.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        this.date = paramAbstractSerializedData.readInt32(paramBoolean);
        this.message = paramAbstractSerializedData.readString(paramBoolean);
        this.media = TLRPC.MessageMedia.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if ((this.media != null) && (!TextUtils.isEmpty(this.media.captionLegacy))) {
          this.message = this.media.captionLegacy;
        }
        return;
        bool2 = false;
        break;
        bool2 = false;
        break label49;
        bool2 = false;
        break label68;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.unread)
      {
        i = this.flags | 0x1;
        this.flags = i;
        if (!this.out) {
          break label166;
        }
        i = this.flags | 0x2;
        label40:
        this.flags = i;
        if (!this.mentioned) {
          break label177;
        }
        i = this.flags | 0x10;
        label60:
        this.flags = i;
        if (!this.media_unread) {
          break label188;
        }
      }
      label166:
      label177:
      label188:
      for (int i = this.flags | 0x20;; i = this.flags & 0xFFFFFFDF)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(this.id);
        paramAbstractSerializedData.writeInt32(this.ttl);
        paramAbstractSerializedData.writeInt32(this.from_id);
        this.to_id.serializeToStream(paramAbstractSerializedData);
        paramAbstractSerializedData.writeInt32(this.date);
        paramAbstractSerializedData.writeString(this.message);
        this.media.serializeToStream(paramAbstractSerializedData);
        writeAttachPath(paramAbstractSerializedData);
        return;
        i = this.flags & 0xFFFFFFFE;
        break;
        i = this.flags & 0xFFFFFFFD;
        break label40;
        i = this.flags & 0xFFFFFFEF;
        break label60;
      }
    }
  }
  
  public static class TL_messages_acceptEncryption
    extends TLObject
  {
    public static int constructor = NUM;
    public byte[] g_b;
    public long key_fingerprint;
    public TLRPC.TL_inputEncryptedChat peer;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.EncryptedChat.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.peer.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeByteArray(this.g_b);
      paramAbstractSerializedData.writeInt64(this.key_fingerprint);
    }
  }
  
  public static class TL_messages_addChatUser
    extends TLObject
  {
    public static int constructor = -106911223;
    public int chat_id;
    public int fwd_limit;
    public TLRPC.InputUser user_id;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Updates.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.chat_id);
      this.user_id.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(this.fwd_limit);
    }
  }
  
  public static class TL_messages_affectedHistory
    extends TLObject
  {
    public static int constructor = -NUM;
    public int offset;
    public int pts;
    public int pts_count;
    
    public static TL_messages_affectedHistory TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_messages_affectedHistory", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_messages_affectedHistory localTL_messages_affectedHistory;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_messages_affectedHistory)
      {
        return paramAbstractSerializedData;
        localTL_messages_affectedHistory = new TL_messages_affectedHistory();
        localTL_messages_affectedHistory.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.pts = paramAbstractSerializedData.readInt32(paramBoolean);
      this.pts_count = paramAbstractSerializedData.readInt32(paramBoolean);
      this.offset = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.pts);
      paramAbstractSerializedData.writeInt32(this.pts_count);
      paramAbstractSerializedData.writeInt32(this.offset);
    }
  }
  
  public static class TL_messages_affectedMessages
    extends TLObject
  {
    public static int constructor = -NUM;
    public int pts;
    public int pts_count;
    
    public static TL_messages_affectedMessages TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_messages_affectedMessages", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_messages_affectedMessages localTL_messages_affectedMessages;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_messages_affectedMessages)
      {
        return paramAbstractSerializedData;
        localTL_messages_affectedMessages = new TL_messages_affectedMessages();
        localTL_messages_affectedMessages.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.pts = paramAbstractSerializedData.readInt32(paramBoolean);
      this.pts_count = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.pts);
      paramAbstractSerializedData.writeInt32(this.pts_count);
    }
  }
  
  public static class TL_messages_allStickers
    extends TLRPC.messages_AllStickers
  {
    public static int constructor = -302170017;
    public int hash;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.hash = paramAbstractSerializedData.readInt32(paramBoolean);
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
      }
      for (i = 0;; i++)
      {
        TLRPC.StickerSet localStickerSet;
        if (i < j)
        {
          localStickerSet = TLRPC.StickerSet.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localStickerSet != null) {}
        }
        else
        {
          return;
        }
        this.sets.add(localStickerSet);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.hash);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.sets.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.StickerSet)this.sets.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_messages_allStickersNotModified
    extends TLRPC.messages_AllStickers
  {
    public static int constructor = -395967805;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_messages_archivedStickers
    extends TLObject
  {
    public static int constructor = NUM;
    public int count;
    public ArrayList<TLRPC.StickerSetCovered> sets = new ArrayList();
    
    public static TL_messages_archivedStickers TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_messages_archivedStickers", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_messages_archivedStickers localTL_messages_archivedStickers;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_messages_archivedStickers)
      {
        return paramAbstractSerializedData;
        localTL_messages_archivedStickers = new TL_messages_archivedStickers();
        localTL_messages_archivedStickers.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.count = paramAbstractSerializedData.readInt32(paramBoolean);
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
      }
      for (i = 0;; i++)
      {
        TLRPC.StickerSetCovered localStickerSetCovered;
        if (i < j)
        {
          localStickerSetCovered = TLRPC.StickerSetCovered.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localStickerSetCovered != null) {}
        }
        else
        {
          return;
        }
        this.sets.add(localStickerSetCovered);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.count);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.sets.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.StickerSetCovered)this.sets.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_messages_botCallbackAnswer
    extends TLObject
  {
    public static int constructor = 911761060;
    public boolean alert;
    public int cache_time;
    public int flags;
    public boolean has_url;
    public String message;
    public boolean native_ui;
    public String url;
    
    public static TL_messages_botCallbackAnswer TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_messages_botCallbackAnswer", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_messages_botCallbackAnswer localTL_messages_botCallbackAnswer;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_messages_botCallbackAnswer)
      {
        return paramAbstractSerializedData;
        localTL_messages_botCallbackAnswer = new TL_messages_botCallbackAnswer();
        localTL_messages_botCallbackAnswer.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      boolean bool1 = true;
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x2) != 0)
      {
        bool2 = true;
        this.alert = bool2;
        if ((this.flags & 0x8) == 0) {
          break label119;
        }
        bool2 = true;
        label42:
        this.has_url = bool2;
        if ((this.flags & 0x10) == 0) {
          break label125;
        }
      }
      label119:
      label125:
      for (boolean bool2 = bool1;; bool2 = false)
      {
        this.native_ui = bool2;
        if ((this.flags & 0x1) != 0) {
          this.message = paramAbstractSerializedData.readString(paramBoolean);
        }
        if ((this.flags & 0x4) != 0) {
          this.url = paramAbstractSerializedData.readString(paramBoolean);
        }
        this.cache_time = paramAbstractSerializedData.readInt32(paramBoolean);
        return;
        bool2 = false;
        break;
        bool2 = false;
        break label42;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.alert)
      {
        i = this.flags | 0x2;
        this.flags = i;
        if (!this.has_url) {
          break label128;
        }
        i = this.flags | 0x8;
        label41:
        this.flags = i;
        if (!this.native_ui) {
          break label139;
        }
      }
      label128:
      label139:
      for (int i = this.flags | 0x10;; i = this.flags & 0xFFFFFFEF)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        if ((this.flags & 0x1) != 0) {
          paramAbstractSerializedData.writeString(this.message);
        }
        if ((this.flags & 0x4) != 0) {
          paramAbstractSerializedData.writeString(this.url);
        }
        paramAbstractSerializedData.writeInt32(this.cache_time);
        return;
        i = this.flags & 0xFFFFFFFD;
        break;
        i = this.flags & 0xFFFFFFF7;
        break label41;
      }
    }
  }
  
  public static class TL_messages_botResults
    extends TLRPC.messages_BotResults
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0) {}
      for (boolean bool = true;; bool = false)
      {
        this.gallery = bool;
        this.query_id = paramAbstractSerializedData.readInt64(paramBoolean);
        if ((this.flags & 0x2) != 0) {
          this.next_offset = paramAbstractSerializedData.readString(paramBoolean);
        }
        if ((this.flags & 0x4) != 0) {
          this.switch_pm = TLRPC.TL_inlineBotSwitchPM.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        }
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i == 481674261) {
          break;
        }
        if (!paramBoolean) {
          break label157;
        }
        throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
      }
      int j = paramAbstractSerializedData.readInt32(paramBoolean);
      int i = 0;
      Object localObject;
      if (i < j)
      {
        localObject = TLRPC.BotInlineResult.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localObject != null) {}
      }
      label157:
      label274:
      for (;;)
      {
        return;
        this.results.add(localObject);
        i++;
        break;
        this.cache_time = paramAbstractSerializedData.readInt32(paramBoolean);
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i != 481674261)
        {
          if (paramBoolean) {
            throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
          }
        }
        else
        {
          j = paramAbstractSerializedData.readInt32(paramBoolean);
          for (i = 0;; i++)
          {
            if (i >= j) {
              break label274;
            }
            localObject = TLRPC.User.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
            if (localObject == null) {
              break;
            }
            this.users.add(localObject);
          }
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.gallery) {}
      for (int i = this.flags | 0x1;; i = this.flags & 0xFFFFFFFE)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt64(this.query_id);
        if ((this.flags & 0x2) != 0) {
          paramAbstractSerializedData.writeString(this.next_offset);
        }
        if ((this.flags & 0x4) != 0) {
          this.switch_pm.serializeToStream(paramAbstractSerializedData);
        }
        paramAbstractSerializedData.writeInt32(481674261);
        j = this.results.size();
        paramAbstractSerializedData.writeInt32(j);
        for (i = 0; i < j; i++) {
          ((TLRPC.BotInlineResult)this.results.get(i)).serializeToStream(paramAbstractSerializedData);
        }
      }
      paramAbstractSerializedData.writeInt32(this.cache_time);
      paramAbstractSerializedData.writeInt32(481674261);
      int j = this.users.size();
      paramAbstractSerializedData.writeInt32(j);
      for (i = 0; i < j; i++) {
        ((TLRPC.User)this.users.get(i)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_messages_botResults_layer71
    extends TLRPC.TL_messages_botResults
  {
    public static int constructor = -858565059;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0) {}
      for (boolean bool = true;; bool = false)
      {
        this.gallery = bool;
        this.query_id = paramAbstractSerializedData.readInt64(paramBoolean);
        if ((this.flags & 0x2) != 0) {
          this.next_offset = paramAbstractSerializedData.readString(paramBoolean);
        }
        if ((this.flags & 0x4) != 0) {
          this.switch_pm = TLRPC.TL_inlineBotSwitchPM.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        }
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i == 481674261) {
          break;
        }
        if (!paramBoolean) {
          break label157;
        }
        throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
      }
      int j = paramAbstractSerializedData.readInt32(paramBoolean);
      int i = 0;
      TLRPC.BotInlineResult localBotInlineResult;
      if (i < j)
      {
        localBotInlineResult = TLRPC.BotInlineResult.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localBotInlineResult != null) {}
      }
      for (;;)
      {
        label157:
        return;
        this.results.add(localBotInlineResult);
        i++;
        break;
        this.cache_time = paramAbstractSerializedData.readInt32(paramBoolean);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.gallery) {}
      for (int i = this.flags | 0x1;; i = this.flags & 0xFFFFFFFE)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt64(this.query_id);
        if ((this.flags & 0x2) != 0) {
          paramAbstractSerializedData.writeString(this.next_offset);
        }
        if ((this.flags & 0x4) != 0) {
          this.switch_pm.serializeToStream(paramAbstractSerializedData);
        }
        paramAbstractSerializedData.writeInt32(481674261);
        int j = this.results.size();
        paramAbstractSerializedData.writeInt32(j);
        for (i = 0; i < j; i++) {
          ((TLRPC.BotInlineResult)this.results.get(i)).serializeToStream(paramAbstractSerializedData);
        }
      }
      paramAbstractSerializedData.writeInt32(this.cache_time);
    }
  }
  
  public static class TL_messages_channelMessages
    extends TLRPC.messages_Messages
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      this.pts = paramAbstractSerializedData.readInt32(paramBoolean);
      this.count = paramAbstractSerializedData.readInt32(paramBoolean);
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      Object localObject;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else
      {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
        i = 0;
        if (i >= j) {
          break label116;
        }
        localObject = TLRPC.Message.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localObject != null) {
          break label100;
        }
      }
      label100:
      label116:
      label204:
      label290:
      for (;;)
      {
        return;
        this.messages.add(localObject);
        i++;
        break;
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i != 481674261)
        {
          if (paramBoolean) {
            throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
          }
        }
        else
        {
          j = paramAbstractSerializedData.readInt32(paramBoolean);
          for (i = 0;; i++)
          {
            if (i >= j) {
              break label204;
            }
            localObject = TLRPC.Chat.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
            if (localObject == null) {
              break;
            }
            this.chats.add(localObject);
          }
          i = paramAbstractSerializedData.readInt32(paramBoolean);
          if (i != 481674261)
          {
            if (paramBoolean) {
              throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
            }
          }
          else
          {
            j = paramAbstractSerializedData.readInt32(paramBoolean);
            for (i = 0;; i++)
            {
              if (i >= j) {
                break label290;
              }
              localObject = TLRPC.User.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
              if (localObject == null) {
                break;
              }
              this.users.add(localObject);
            }
          }
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.flags);
      paramAbstractSerializedData.writeInt32(this.pts);
      paramAbstractSerializedData.writeInt32(this.count);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.messages.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.Message)this.messages.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.chats.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        ((TLRPC.Chat)this.chats.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.users.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        ((TLRPC.User)this.users.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_messages_chatFull
    extends TLObject
  {
    public static int constructor = -438840932;
    public ArrayList<TLRPC.Chat> chats = new ArrayList();
    public TLRPC.ChatFull full_chat;
    public ArrayList<TLRPC.User> users = new ArrayList();
    
    public static TL_messages_chatFull TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_messages_chatFull", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_messages_chatFull localTL_messages_chatFull;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_messages_chatFull)
      {
        return paramAbstractSerializedData;
        localTL_messages_chatFull = new TL_messages_chatFull();
        localTL_messages_chatFull.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.full_chat = TLRPC.ChatFull.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      Object localObject;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else
      {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
        i = 0;
        if (i >= j) {
          break label103;
        }
        localObject = TLRPC.Chat.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localObject != null) {
          break label87;
        }
      }
      label87:
      label103:
      label189:
      for (;;)
      {
        return;
        this.chats.add(localObject);
        i++;
        break;
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i != 481674261)
        {
          if (paramBoolean) {
            throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
          }
        }
        else
        {
          j = paramAbstractSerializedData.readInt32(paramBoolean);
          for (i = 0;; i++)
          {
            if (i >= j) {
              break label189;
            }
            localObject = TLRPC.User.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
            if (localObject == null) {
              break;
            }
            this.users.add(localObject);
          }
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.full_chat.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.chats.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.Chat)this.chats.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.users.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        ((TLRPC.User)this.users.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_messages_chats
    extends TLRPC.messages_Chats
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
      }
      for (i = 0;; i++)
      {
        TLRPC.Chat localChat;
        if (i < j)
        {
          localChat = TLRPC.Chat.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localChat != null) {}
        }
        else
        {
          return;
        }
        this.chats.add(localChat);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.chats.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.Chat)this.chats.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_messages_chatsSlice
    extends TLRPC.messages_Chats
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.count = paramAbstractSerializedData.readInt32(paramBoolean);
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
      }
      for (i = 0;; i++)
      {
        TLRPC.Chat localChat;
        if (i < j)
        {
          localChat = TLRPC.Chat.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localChat != null) {}
        }
        else
        {
          return;
        }
        this.chats.add(localChat);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.count);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.chats.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.Chat)this.chats.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_messages_checkChatInvite
    extends TLObject
  {
    public static int constructor = NUM;
    public String hash;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.ChatInvite.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.hash);
    }
  }
  
  public static class TL_messages_clearRecentStickers
    extends TLObject
  {
    public static int constructor = -NUM;
    public boolean attached;
    public int flags;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.attached) {}
      for (int i = this.flags | 0x1;; i = this.flags & 0xFFFFFFFE)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        return;
      }
    }
  }
  
  public static class TL_messages_createChat
    extends TLObject
  {
    public static int constructor = 164303470;
    public String title;
    public ArrayList<TLRPC.InputUser> users = new ArrayList();
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Updates.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.users.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.InputUser)this.users.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeString(this.title);
    }
  }
  
  public static class TL_messages_deleteChatUser
    extends TLObject
  {
    public static int constructor = -530505962;
    public int chat_id;
    public TLRPC.InputUser user_id;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Updates.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.chat_id);
      this.user_id.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_messages_deleteHistory
    extends TLObject
  {
    public static int constructor = 469850889;
    public int flags;
    public boolean just_clear;
    public int max_id;
    public TLRPC.InputPeer peer;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_messages_affectedHistory.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.just_clear) {}
      for (int i = this.flags | 0x1;; i = this.flags & 0xFFFFFFFE)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        this.peer.serializeToStream(paramAbstractSerializedData);
        paramAbstractSerializedData.writeInt32(this.max_id);
        return;
      }
    }
  }
  
  public static class TL_messages_deleteMessages
    extends TLObject
  {
    public static int constructor = -443640366;
    public int flags;
    public ArrayList<Integer> id = new ArrayList();
    public boolean revoke;
    
    public static TL_messages_deleteMessages TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_messages_deleteMessages", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_messages_deleteMessages localTL_messages_deleteMessages;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_messages_deleteMessages)
      {
        return paramAbstractSerializedData;
        localTL_messages_deleteMessages = new TL_messages_deleteMessages();
        localTL_messages_deleteMessages.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_messages_affectedMessages.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0) {}
      for (boolean bool = true;; bool = false)
      {
        this.revoke = bool;
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i == 481674261) {
          break;
        }
        if (!paramBoolean) {
          return;
        }
        throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
      }
      int j = paramAbstractSerializedData.readInt32(paramBoolean);
      for (int i = 0; i < j; i++) {
        this.id.add(Integer.valueOf(paramAbstractSerializedData.readInt32(paramBoolean)));
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.revoke) {}
      for (int i = this.flags | 0x1;; i = this.flags & 0xFFFFFFFE)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(481674261);
        int j = this.id.size();
        paramAbstractSerializedData.writeInt32(j);
        for (i = 0; i < j; i++) {
          paramAbstractSerializedData.writeInt32(((Integer)this.id.get(i)).intValue());
        }
      }
    }
  }
  
  public static class TL_messages_dhConfig
    extends TLRPC.messages_DhConfig
  {
    public static int constructor = 740433629;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.g = paramAbstractSerializedData.readInt32(paramBoolean);
      this.p = paramAbstractSerializedData.readByteArray(paramBoolean);
      this.version = paramAbstractSerializedData.readInt32(paramBoolean);
      this.random = paramAbstractSerializedData.readByteArray(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.g);
      paramAbstractSerializedData.writeByteArray(this.p);
      paramAbstractSerializedData.writeInt32(this.version);
      paramAbstractSerializedData.writeByteArray(this.random);
    }
  }
  
  public static class TL_messages_dhConfigNotModified
    extends TLRPC.messages_DhConfig
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.random = paramAbstractSerializedData.readByteArray(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeByteArray(this.random);
    }
  }
  
  public static class TL_messages_dialogs
    extends TLRPC.messages_Dialogs
  {
    public static int constructor = 364538944;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      Object localObject;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else
      {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
        i = 0;
        if (i >= j) {
          break label89;
        }
        localObject = TLRPC.TL_dialog.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localObject != null) {
          break label73;
        }
      }
      label73:
      label89:
      label177:
      label265:
      label351:
      for (;;)
      {
        return;
        this.dialogs.add(localObject);
        i++;
        break;
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i != 481674261)
        {
          if (paramBoolean) {
            throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
          }
        }
        else
        {
          j = paramAbstractSerializedData.readInt32(paramBoolean);
          for (i = 0;; i++)
          {
            if (i >= j) {
              break label177;
            }
            localObject = TLRPC.Message.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
            if (localObject == null) {
              break;
            }
            this.messages.add(localObject);
          }
          i = paramAbstractSerializedData.readInt32(paramBoolean);
          if (i != 481674261)
          {
            if (paramBoolean) {
              throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
            }
          }
          else
          {
            j = paramAbstractSerializedData.readInt32(paramBoolean);
            for (i = 0;; i++)
            {
              if (i >= j) {
                break label265;
              }
              localObject = TLRPC.Chat.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
              if (localObject == null) {
                break;
              }
              this.chats.add(localObject);
            }
            i = paramAbstractSerializedData.readInt32(paramBoolean);
            if (i != 481674261)
            {
              if (paramBoolean) {
                throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
              }
            }
            else
            {
              j = paramAbstractSerializedData.readInt32(paramBoolean);
              for (i = 0;; i++)
              {
                if (i >= j) {
                  break label351;
                }
                localObject = TLRPC.User.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
                if (localObject == null) {
                  break;
                }
                this.users.add(localObject);
              }
            }
          }
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.dialogs.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.TL_dialog)this.dialogs.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.messages.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        ((TLRPC.Message)this.messages.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.chats.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        ((TLRPC.Chat)this.chats.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.users.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        ((TLRPC.User)this.users.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_messages_dialogsSlice
    extends TLRPC.messages_Dialogs
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.count = paramAbstractSerializedData.readInt32(paramBoolean);
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      Object localObject;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else
      {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
        i = 0;
        if (i >= j) {
          break label98;
        }
        localObject = TLRPC.TL_dialog.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localObject != null) {
          break label82;
        }
      }
      label82:
      label98:
      label186:
      label274:
      label360:
      for (;;)
      {
        return;
        this.dialogs.add(localObject);
        i++;
        break;
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i != 481674261)
        {
          if (paramBoolean) {
            throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
          }
        }
        else
        {
          j = paramAbstractSerializedData.readInt32(paramBoolean);
          for (i = 0;; i++)
          {
            if (i >= j) {
              break label186;
            }
            localObject = TLRPC.Message.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
            if (localObject == null) {
              break;
            }
            this.messages.add(localObject);
          }
          i = paramAbstractSerializedData.readInt32(paramBoolean);
          if (i != 481674261)
          {
            if (paramBoolean) {
              throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
            }
          }
          else
          {
            j = paramAbstractSerializedData.readInt32(paramBoolean);
            for (i = 0;; i++)
            {
              if (i >= j) {
                break label274;
              }
              localObject = TLRPC.Chat.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
              if (localObject == null) {
                break;
              }
              this.chats.add(localObject);
            }
            i = paramAbstractSerializedData.readInt32(paramBoolean);
            if (i != 481674261)
            {
              if (paramBoolean) {
                throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
              }
            }
            else
            {
              j = paramAbstractSerializedData.readInt32(paramBoolean);
              for (i = 0;; i++)
              {
                if (i >= j) {
                  break label360;
                }
                localObject = TLRPC.User.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
                if (localObject == null) {
                  break;
                }
                this.users.add(localObject);
              }
            }
          }
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.count);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.dialogs.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.TL_dialog)this.dialogs.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.messages.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        ((TLRPC.Message)this.messages.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.chats.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        ((TLRPC.Chat)this.chats.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.users.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        ((TLRPC.User)this.users.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_messages_discardEncryption
    extends TLObject
  {
    public static int constructor = -304536635;
    public int chat_id;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.chat_id);
    }
  }
  
  public static class TL_messages_editChatAdmin
    extends TLObject
  {
    public static int constructor = -NUM;
    public int chat_id;
    public boolean is_admin;
    public TLRPC.InputUser user_id;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.chat_id);
      this.user_id.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeBool(this.is_admin);
    }
  }
  
  public static class TL_messages_editChatPhoto
    extends TLObject
  {
    public static int constructor = -900957736;
    public int chat_id;
    public TLRPC.InputChatPhoto photo;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Updates.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.chat_id);
      this.photo.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_messages_editChatTitle
    extends TLObject
  {
    public static int constructor = -599447467;
    public int chat_id;
    public String title;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Updates.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.chat_id);
      paramAbstractSerializedData.writeString(this.title);
    }
  }
  
  public static class TL_messages_editMessage
    extends TLObject
  {
    public static int constructor = 97630429;
    public ArrayList<TLRPC.MessageEntity> entities = new ArrayList();
    public int flags;
    public TLRPC.InputGeoPoint geo_point;
    public int id;
    public String message;
    public boolean no_webpage;
    public TLRPC.InputPeer peer;
    public TLRPC.ReplyMarkup reply_markup;
    public boolean stop_geo_live;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Updates.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.no_webpage)
      {
        i = this.flags | 0x2;
        this.flags = i;
        if (!this.stop_geo_live) {
          break label175;
        }
      }
      label175:
      for (int i = this.flags | 0x1000;; i = this.flags & 0xEFFF)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        this.peer.serializeToStream(paramAbstractSerializedData);
        paramAbstractSerializedData.writeInt32(this.id);
        if ((this.flags & 0x800) != 0) {
          paramAbstractSerializedData.writeString(this.message);
        }
        if ((this.flags & 0x4) != 0) {
          this.reply_markup.serializeToStream(paramAbstractSerializedData);
        }
        if ((this.flags & 0x8) == 0) {
          break label187;
        }
        paramAbstractSerializedData.writeInt32(481674261);
        int j = this.entities.size();
        paramAbstractSerializedData.writeInt32(j);
        for (i = 0; i < j; i++) {
          ((TLRPC.MessageEntity)this.entities.get(i)).serializeToStream(paramAbstractSerializedData);
        }
        i = this.flags & 0xFFFFFFFD;
        break;
      }
      label187:
      if ((this.flags & 0x2000) != 0) {
        this.geo_point.serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_messages_exportChatInvite
    extends TLObject
  {
    public static int constructor = NUM;
    public int chat_id;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.ExportedChatInvite.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.chat_id);
    }
  }
  
  public static class TL_messages_faveSticker
    extends TLObject
  {
    public static int constructor = -NUM;
    public TLRPC.InputDocument id;
    public boolean unfave;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.id.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeBool(this.unfave);
    }
  }
  
  public static class TL_messages_favedStickers
    extends TLRPC.messages_FavedStickers
  {
    public static int constructor = -209768682;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.hash = paramAbstractSerializedData.readInt32(paramBoolean);
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      Object localObject;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else
      {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
        i = 0;
        if (i >= j) {
          break label98;
        }
        localObject = TLRPC.TL_stickerPack.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localObject != null) {
          break label82;
        }
      }
      label82:
      label98:
      label184:
      for (;;)
      {
        return;
        this.packs.add(localObject);
        i++;
        break;
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i != 481674261)
        {
          if (paramBoolean) {
            throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
          }
        }
        else
        {
          j = paramAbstractSerializedData.readInt32(paramBoolean);
          for (i = 0;; i++)
          {
            if (i >= j) {
              break label184;
            }
            localObject = TLRPC.Document.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
            if (localObject == null) {
              break;
            }
            this.stickers.add(localObject);
          }
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.hash);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.packs.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.TL_stickerPack)this.packs.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.stickers.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        ((TLRPC.Document)this.stickers.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_messages_favedStickersNotModified
    extends TLRPC.messages_FavedStickers
  {
    public static int constructor = -NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_messages_featuredStickers
    extends TLRPC.messages_FeaturedStickers
  {
    public static int constructor = -123893531;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.hash = paramAbstractSerializedData.readInt32(paramBoolean);
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      TLRPC.StickerSetCovered localStickerSetCovered;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else
      {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
        i = 0;
        if (i >= j) {
          break label98;
        }
        localStickerSetCovered = TLRPC.StickerSetCovered.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localStickerSetCovered != null) {
          break label82;
        }
      }
      for (;;)
      {
        return;
        label82:
        this.sets.add(localStickerSetCovered);
        i++;
        break;
        label98:
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i != 481674261)
        {
          if (paramBoolean) {
            throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
          }
        }
        else
        {
          j = paramAbstractSerializedData.readInt32(paramBoolean);
          for (i = 0; i < j; i++) {
            this.unread.add(Long.valueOf(paramAbstractSerializedData.readInt64(paramBoolean)));
          }
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.hash);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.sets.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.StickerSetCovered)this.sets.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.unread.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        paramAbstractSerializedData.writeInt64(((Long)this.unread.get(j)).longValue());
      }
    }
  }
  
  public static class TL_messages_featuredStickersNotModified
    extends TLRPC.messages_FeaturedStickers
  {
    public static int constructor = 82699215;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_messages_forwardMessage
    extends TLObject
  {
    public static int constructor = 865483769;
    public int id;
    public TLRPC.InputPeer peer;
    public long random_id;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Updates.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.peer.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(this.id);
      paramAbstractSerializedData.writeInt64(this.random_id);
    }
  }
  
  public static class TL_messages_forwardMessages
    extends TLObject
  {
    public static int constructor = NUM;
    public boolean background;
    public int flags;
    public TLRPC.InputPeer from_peer;
    public boolean grouped;
    public ArrayList<Integer> id = new ArrayList();
    public ArrayList<Long> random_id = new ArrayList();
    public boolean silent;
    public TLRPC.InputPeer to_peer;
    public boolean with_my_score;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Updates.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.silent)
      {
        i = this.flags | 0x20;
        this.flags = i;
        if (!this.background) {
          break label166;
        }
        i = this.flags | 0x40;
        label42:
        this.flags = i;
        if (!this.with_my_score) {
          break label177;
        }
        i = this.flags | 0x100;
        label63:
        this.flags = i;
        if (!this.grouped) {
          break label189;
        }
      }
      label166:
      label177:
      label189:
      for (int i = this.flags | 0x200;; i = this.flags & 0xFDFF)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        this.from_peer.serializeToStream(paramAbstractSerializedData);
        paramAbstractSerializedData.writeInt32(481674261);
        j = this.id.size();
        paramAbstractSerializedData.writeInt32(j);
        for (i = 0; i < j; i++) {
          paramAbstractSerializedData.writeInt32(((Integer)this.id.get(i)).intValue());
        }
        i = this.flags & 0xFFFFFFDF;
        break;
        i = this.flags & 0xFFFFFFBF;
        break label42;
        i = this.flags & 0xFEFF;
        break label63;
      }
      paramAbstractSerializedData.writeInt32(481674261);
      int j = this.random_id.size();
      paramAbstractSerializedData.writeInt32(j);
      for (i = 0; i < j; i++) {
        paramAbstractSerializedData.writeInt64(((Long)this.random_id.get(i)).longValue());
      }
      this.to_peer.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_messages_foundGifs
    extends TLObject
  {
    public static int constructor = NUM;
    public int next_offset;
    public ArrayList<TLRPC.FoundGif> results = new ArrayList();
    
    public static TL_messages_foundGifs TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_messages_foundGifs", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_messages_foundGifs localTL_messages_foundGifs;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_messages_foundGifs)
      {
        return paramAbstractSerializedData;
        localTL_messages_foundGifs = new TL_messages_foundGifs();
        localTL_messages_foundGifs.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.next_offset = paramAbstractSerializedData.readInt32(paramBoolean);
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
      }
      for (i = 0;; i++)
      {
        TLRPC.FoundGif localFoundGif;
        if (i < j)
        {
          localFoundGif = TLRPC.FoundGif.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localFoundGif != null) {}
        }
        else
        {
          return;
        }
        this.results.add(localFoundGif);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.next_offset);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.results.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.FoundGif)this.results.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_messages_foundStickerSets
    extends TLRPC.messages_FoundStickerSets
  {
    public static int constructor = NUM;
    public int hash;
    public ArrayList<TLRPC.StickerSetCovered> sets = new ArrayList();
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.hash = paramAbstractSerializedData.readInt32(paramBoolean);
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
      }
      for (i = 0;; i++)
      {
        TLRPC.StickerSetCovered localStickerSetCovered;
        if (i < j)
        {
          localStickerSetCovered = TLRPC.StickerSetCovered.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localStickerSetCovered != null) {}
        }
        else
        {
          return;
        }
        this.sets.add(localStickerSetCovered);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.hash);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.sets.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.StickerSetCovered)this.sets.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_messages_foundStickerSetsNotModified
    extends TLRPC.messages_FoundStickerSets
  {
    public static int constructor = 223655517;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_messages_getAllChats
    extends TLObject
  {
    public static int constructor = -341307408;
    public ArrayList<Integer> except_ids = new ArrayList();
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.messages_Chats.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.except_ids.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        paramAbstractSerializedData.writeInt32(((Integer)this.except_ids.get(j)).intValue());
      }
    }
  }
  
  public static class TL_messages_getAllDrafts
    extends TLObject
  {
    public static int constructor = NUM;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Updates.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_messages_getAllStickers
    extends TLObject
  {
    public static int constructor = 479598769;
    public int hash;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.messages_AllStickers.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.hash);
    }
  }
  
  public static class TL_messages_getArchivedStickers
    extends TLObject
  {
    public static int constructor = NUM;
    public int flags;
    public int limit;
    public boolean masks;
    public long offset_id;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_messages_archivedStickers.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.masks) {}
      for (int i = this.flags | 0x1;; i = this.flags & 0xFFFFFFFE)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt64(this.offset_id);
        paramAbstractSerializedData.writeInt32(this.limit);
        return;
      }
    }
  }
  
  public static class TL_messages_getAttachedStickers
    extends TLObject
  {
    public static int constructor = -866424884;
    public TLRPC.InputStickeredMedia media;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      TLRPC.Vector localVector = new TLRPC.Vector();
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      for (paramInt = 0;; paramInt++)
      {
        TLRPC.StickerSetCovered localStickerSetCovered;
        if (paramInt < i)
        {
          localStickerSetCovered = TLRPC.StickerSetCovered.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localStickerSetCovered != null) {}
        }
        else
        {
          return localVector;
        }
        localVector.objects.add(localStickerSetCovered);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.media.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_messages_getBotCallbackAnswer
    extends TLObject
  {
    public static int constructor = -NUM;
    public byte[] data;
    public int flags;
    public boolean game;
    public int msg_id;
    public TLRPC.InputPeer peer;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_messages_botCallbackAnswer.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.game) {}
      for (int i = this.flags | 0x2;; i = this.flags & 0xFFFFFFFD)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        this.peer.serializeToStream(paramAbstractSerializedData);
        paramAbstractSerializedData.writeInt32(this.msg_id);
        if ((this.flags & 0x1) != 0) {
          paramAbstractSerializedData.writeByteArray(this.data);
        }
        return;
      }
    }
  }
  
  public static class TL_messages_getChats
    extends TLObject
  {
    public static int constructor = NUM;
    public ArrayList<Integer> id = new ArrayList();
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_messages_chats.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.id.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        paramAbstractSerializedData.writeInt32(((Integer)this.id.get(j)).intValue());
      }
    }
  }
  
  public static class TL_messages_getCommonChats
    extends TLObject
  {
    public static int constructor = 218777796;
    public int limit;
    public int max_id;
    public TLRPC.InputUser user_id;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.messages_Chats.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.user_id.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(this.max_id);
      paramAbstractSerializedData.writeInt32(this.limit);
    }
  }
  
  public static class TL_messages_getDhConfig
    extends TLObject
  {
    public static int constructor = 651135312;
    public int random_length;
    public int version;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.messages_DhConfig.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.version);
      paramAbstractSerializedData.writeInt32(this.random_length);
    }
  }
  
  public static class TL_messages_getDialogs
    extends TLObject
  {
    public static int constructor = 421243333;
    public boolean exclude_pinned;
    public int flags;
    public int limit;
    public int offset_date;
    public int offset_id;
    public TLRPC.InputPeer offset_peer;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.messages_Dialogs.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.exclude_pinned) {}
      for (int i = this.flags | 0x1;; i = this.flags & 0xFFFFFFFE)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(this.offset_date);
        paramAbstractSerializedData.writeInt32(this.offset_id);
        this.offset_peer.serializeToStream(paramAbstractSerializedData);
        paramAbstractSerializedData.writeInt32(this.limit);
        return;
      }
    }
  }
  
  public static class TL_messages_getDocumentByHash
    extends TLObject
  {
    public static int constructor = 864953444;
    public String mime_type;
    public byte[] sha256;
    public int size;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Document.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeByteArray(this.sha256);
      paramAbstractSerializedData.writeInt32(this.size);
      paramAbstractSerializedData.writeString(this.mime_type);
    }
  }
  
  public static class TL_messages_getFavedStickers
    extends TLObject
  {
    public static int constructor = 567151374;
    public int hash;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.messages_FavedStickers.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.hash);
    }
  }
  
  public static class TL_messages_getFeaturedStickers
    extends TLObject
  {
    public static int constructor = 766298703;
    public int hash;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.messages_FeaturedStickers.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.hash);
    }
  }
  
  public static class TL_messages_getFullChat
    extends TLObject
  {
    public static int constructor = 998448230;
    public int chat_id;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_messages_chatFull.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.chat_id);
    }
  }
  
  public static class TL_messages_getGameHighScores
    extends TLObject
  {
    public static int constructor = -400399203;
    public int id;
    public TLRPC.InputPeer peer;
    public TLRPC.InputUser user_id;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_messages_highScores.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.peer.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(this.id);
      this.user_id.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_messages_getHistory
    extends TLObject
  {
    public static int constructor = -NUM;
    public int add_offset;
    public int limit;
    public int max_id;
    public int min_id;
    public int offset_date;
    public int offset_id;
    public TLRPC.InputPeer peer;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.messages_Messages.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.peer.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(this.offset_id);
      paramAbstractSerializedData.writeInt32(this.offset_date);
      paramAbstractSerializedData.writeInt32(this.add_offset);
      paramAbstractSerializedData.writeInt32(this.limit);
      paramAbstractSerializedData.writeInt32(this.max_id);
      paramAbstractSerializedData.writeInt32(this.min_id);
    }
  }
  
  public static class TL_messages_getInlineBotResults
    extends TLObject
  {
    public static int constructor = NUM;
    public TLRPC.InputUser bot;
    public int flags;
    public TLRPC.InputGeoPoint geo_point;
    public String offset;
    public TLRPC.InputPeer peer;
    public String query;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.messages_BotResults.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.flags);
      this.bot.serializeToStream(paramAbstractSerializedData);
      this.peer.serializeToStream(paramAbstractSerializedData);
      if ((this.flags & 0x1) != 0) {
        this.geo_point.serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeString(this.query);
      paramAbstractSerializedData.writeString(this.offset);
    }
  }
  
  public static class TL_messages_getInlineGameHighScores
    extends TLObject
  {
    public static int constructor = 258170395;
    public TLRPC.TL_inputBotInlineMessageID id;
    public TLRPC.InputUser user_id;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_messages_highScores.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.id.serializeToStream(paramAbstractSerializedData);
      this.user_id.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_messages_getMaskStickers
    extends TLObject
  {
    public static int constructor = NUM;
    public int hash;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.messages_AllStickers.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.hash);
    }
  }
  
  public static class TL_messages_getMessageEditData
    extends TLObject
  {
    public static int constructor = -39416522;
    public int id;
    public TLRPC.InputPeer peer;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_messages_messageEditData.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.peer.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(this.id);
    }
  }
  
  public static class TL_messages_getMessages
    extends TLObject
  {
    public static int constructor = NUM;
    public ArrayList<Integer> id = new ArrayList();
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.messages_Messages.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.id.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        paramAbstractSerializedData.writeInt32(((Integer)this.id.get(j)).intValue());
      }
    }
  }
  
  public static class TL_messages_getMessagesViews
    extends TLObject
  {
    public static int constructor = -993483427;
    public ArrayList<Integer> id = new ArrayList();
    public boolean increment;
    public TLRPC.InputPeer peer;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      TLRPC.Vector localVector = new TLRPC.Vector();
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      for (paramInt = 0; paramInt < i; paramInt++) {
        localVector.objects.add(Integer.valueOf(paramAbstractSerializedData.readInt32(paramBoolean)));
      }
      return localVector;
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.peer.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.id.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        paramAbstractSerializedData.writeInt32(((Integer)this.id.get(j)).intValue());
      }
      paramAbstractSerializedData.writeBool(this.increment);
    }
  }
  
  public static class TL_messages_getPeerDialogs
    extends TLObject
  {
    public static int constructor = -462373635;
    public ArrayList<TLRPC.InputDialogPeer> peers = new ArrayList();
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_messages_peerDialogs.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.peers.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.InputDialogPeer)this.peers.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_messages_getPeerSettings
    extends TLObject
  {
    public static int constructor = 913498268;
    public TLRPC.InputPeer peer;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_peerSettings.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.peer.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_messages_getPinnedDialogs
    extends TLObject
  {
    public static int constructor = -497756594;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_messages_peerDialogs.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_messages_getRecentLocations
    extends TLObject
  {
    public static int constructor = -NUM;
    public int hash;
    public int limit;
    public TLRPC.InputPeer peer;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.messages_Messages.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.peer.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(this.limit);
      paramAbstractSerializedData.writeInt32(this.hash);
    }
  }
  
  public static class TL_messages_getRecentStickers
    extends TLObject
  {
    public static int constructor = NUM;
    public boolean attached;
    public int flags;
    public int hash;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.messages_RecentStickers.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.attached) {}
      for (int i = this.flags | 0x1;; i = this.flags & 0xFFFFFFFE)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(this.hash);
        return;
      }
    }
  }
  
  public static class TL_messages_getSavedGifs
    extends TLObject
  {
    public static int constructor = -NUM;
    public int hash;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.messages_SavedGifs.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.hash);
    }
  }
  
  public static class TL_messages_getStickerSet
    extends TLObject
  {
    public static int constructor = 639215886;
    public TLRPC.InputStickerSet stickerset;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_messages_stickerSet.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.stickerset.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_messages_getStickers
    extends TLObject
  {
    public static int constructor = -NUM;
    public String emoticon;
    public boolean exclude_featured;
    public int flags;
    public String hash;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.messages_Stickers.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.exclude_featured) {}
      for (int i = this.flags | 0x1;; i = this.flags & 0xFFFFFFFE)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeString(this.emoticon);
        paramAbstractSerializedData.writeString(this.hash);
        return;
      }
    }
  }
  
  public static class TL_messages_getUnreadMentions
    extends TLObject
  {
    public static int constructor = NUM;
    public int add_offset;
    public int limit;
    public int max_id;
    public int min_id;
    public int offset_id;
    public TLRPC.InputPeer peer;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.messages_Messages.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.peer.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(this.offset_id);
      paramAbstractSerializedData.writeInt32(this.add_offset);
      paramAbstractSerializedData.writeInt32(this.limit);
      paramAbstractSerializedData.writeInt32(this.max_id);
      paramAbstractSerializedData.writeInt32(this.min_id);
    }
  }
  
  public static class TL_messages_getWebPage
    extends TLObject
  {
    public static int constructor = 852135825;
    public int hash;
    public String url;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.WebPage.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.url);
      paramAbstractSerializedData.writeInt32(this.hash);
    }
  }
  
  public static class TL_messages_getWebPagePreview
    extends TLObject
  {
    public static int constructor = -NUM;
    public ArrayList<TLRPC.MessageEntity> entities = new ArrayList();
    public int flags;
    public String message;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.MessageMedia.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.flags);
      paramAbstractSerializedData.writeString(this.message);
      if ((this.flags & 0x8) != 0)
      {
        paramAbstractSerializedData.writeInt32(481674261);
        int i = this.entities.size();
        paramAbstractSerializedData.writeInt32(i);
        for (int j = 0; j < i; j++) {
          ((TLRPC.MessageEntity)this.entities.get(j)).serializeToStream(paramAbstractSerializedData);
        }
      }
    }
  }
  
  public static class TL_messages_hideReportSpam
    extends TLObject
  {
    public static int constructor = -NUM;
    public TLRPC.InputPeer peer;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.peer.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_messages_highScores
    extends TLObject
  {
    public static int constructor = -NUM;
    public ArrayList<TLRPC.TL_highScore> scores = new ArrayList();
    public ArrayList<TLRPC.User> users = new ArrayList();
    
    public static TL_messages_highScores TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_messages_highScores", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_messages_highScores localTL_messages_highScores;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_messages_highScores)
      {
        return paramAbstractSerializedData;
        localTL_messages_highScores = new TL_messages_highScores();
        localTL_messages_highScores.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      Object localObject;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else
      {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
        i = 0;
        if (i >= j) {
          break label89;
        }
        localObject = TLRPC.TL_highScore.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localObject != null) {
          break label73;
        }
      }
      label73:
      label89:
      label175:
      for (;;)
      {
        return;
        this.scores.add(localObject);
        i++;
        break;
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i != 481674261)
        {
          if (paramBoolean) {
            throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
          }
        }
        else
        {
          j = paramAbstractSerializedData.readInt32(paramBoolean);
          for (i = 0;; i++)
          {
            if (i >= j) {
              break label175;
            }
            localObject = TLRPC.User.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
            if (localObject == null) {
              break;
            }
            this.users.add(localObject);
          }
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.scores.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.TL_highScore)this.scores.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.users.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        ((TLRPC.User)this.users.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_messages_importChatInvite
    extends TLObject
  {
    public static int constructor = NUM;
    public String hash;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Updates.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.hash);
    }
  }
  
  public static class TL_messages_installStickerSet
    extends TLObject
  {
    public static int constructor = -946871200;
    public boolean archived;
    public TLRPC.InputStickerSet stickerset;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.messages_StickerSetInstallResult.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.stickerset.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeBool(this.archived);
    }
  }
  
  public static class TL_messages_messageEditData
    extends TLObject
  {
    public static int constructor = 649453030;
    public boolean caption;
    public int flags;
    
    public static TL_messages_messageEditData TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_messages_messageEditData", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_messages_messageEditData localTL_messages_messageEditData;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_messages_messageEditData)
      {
        return paramAbstractSerializedData;
        localTL_messages_messageEditData = new TL_messages_messageEditData();
        localTL_messages_messageEditData.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0) {}
      for (paramBoolean = true;; paramBoolean = false)
      {
        this.caption = paramBoolean;
        return;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.caption) {}
      for (int i = this.flags | 0x1;; i = this.flags & 0xFFFFFFFE)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        return;
      }
    }
  }
  
  public static class TL_messages_messageEmpty
    extends TLObject
  {
    public static int constructor = NUM;
    
    public static TL_messages_messageEmpty TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_messages_messageEmpty", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_messages_messageEmpty localTL_messages_messageEmpty;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_messages_messageEmpty)
      {
        return paramAbstractSerializedData;
        localTL_messages_messageEmpty = new TL_messages_messageEmpty();
        localTL_messages_messageEmpty.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_messages_messages
    extends TLRPC.messages_Messages
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      Object localObject;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else
      {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
        i = 0;
        if (i >= j) {
          break label89;
        }
        localObject = TLRPC.Message.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localObject != null) {
          break label73;
        }
      }
      label73:
      label89:
      label177:
      label263:
      for (;;)
      {
        return;
        this.messages.add(localObject);
        i++;
        break;
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i != 481674261)
        {
          if (paramBoolean) {
            throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
          }
        }
        else
        {
          j = paramAbstractSerializedData.readInt32(paramBoolean);
          for (i = 0;; i++)
          {
            if (i >= j) {
              break label177;
            }
            localObject = TLRPC.Chat.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
            if (localObject == null) {
              break;
            }
            this.chats.add(localObject);
          }
          i = paramAbstractSerializedData.readInt32(paramBoolean);
          if (i != 481674261)
          {
            if (paramBoolean) {
              throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
            }
          }
          else
          {
            j = paramAbstractSerializedData.readInt32(paramBoolean);
            for (i = 0;; i++)
            {
              if (i >= j) {
                break label263;
              }
              localObject = TLRPC.User.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
              if (localObject == null) {
                break;
              }
              this.users.add(localObject);
            }
          }
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.messages.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.Message)this.messages.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.chats.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        ((TLRPC.Chat)this.chats.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.users.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        ((TLRPC.User)this.users.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_messages_messagesSlice
    extends TLRPC.messages_Messages
  {
    public static int constructor = 189033187;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.count = paramAbstractSerializedData.readInt32(paramBoolean);
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      Object localObject;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else
      {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
        i = 0;
        if (i >= j) {
          break label98;
        }
        localObject = TLRPC.Message.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localObject != null) {
          break label82;
        }
      }
      label82:
      label98:
      label186:
      label272:
      for (;;)
      {
        return;
        this.messages.add(localObject);
        i++;
        break;
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i != 481674261)
        {
          if (paramBoolean) {
            throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
          }
        }
        else
        {
          j = paramAbstractSerializedData.readInt32(paramBoolean);
          for (i = 0;; i++)
          {
            if (i >= j) {
              break label186;
            }
            localObject = TLRPC.Chat.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
            if (localObject == null) {
              break;
            }
            this.chats.add(localObject);
          }
          i = paramAbstractSerializedData.readInt32(paramBoolean);
          if (i != 481674261)
          {
            if (paramBoolean) {
              throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
            }
          }
          else
          {
            j = paramAbstractSerializedData.readInt32(paramBoolean);
            for (i = 0;; i++)
            {
              if (i >= j) {
                break label272;
              }
              localObject = TLRPC.User.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
              if (localObject == null) {
                break;
              }
              this.users.add(localObject);
            }
          }
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.count);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.messages.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.Message)this.messages.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.chats.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        ((TLRPC.Chat)this.chats.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.users.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        ((TLRPC.User)this.users.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_messages_migrateChat
    extends TLObject
  {
    public static int constructor = 363051235;
    public int chat_id;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Updates.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.chat_id);
    }
  }
  
  public static class TL_messages_peerDialogs
    extends TLObject
  {
    public static int constructor = 863093588;
    public ArrayList<TLRPC.Chat> chats = new ArrayList();
    public ArrayList<TLRPC.TL_dialog> dialogs = new ArrayList();
    public ArrayList<TLRPC.Message> messages = new ArrayList();
    public TLRPC.TL_updates_state state;
    public ArrayList<TLRPC.User> users = new ArrayList();
    
    public static TL_messages_peerDialogs TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_messages_peerDialogs", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_messages_peerDialogs localTL_messages_peerDialogs;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_messages_peerDialogs)
      {
        return paramAbstractSerializedData;
        localTL_messages_peerDialogs = new TL_messages_peerDialogs();
        localTL_messages_peerDialogs.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      Object localObject;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else
      {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
        i = 0;
        if (i >= j) {
          break label89;
        }
        localObject = TLRPC.TL_dialog.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localObject != null) {
          break label73;
        }
      }
      for (;;)
      {
        return;
        label73:
        this.dialogs.add(localObject);
        i++;
        break;
        label89:
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i != 481674261)
        {
          if (paramBoolean) {
            throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
          }
        }
        else
        {
          j = paramAbstractSerializedData.readInt32(paramBoolean);
          for (i = 0;; i++)
          {
            if (i >= j) {
              break label177;
            }
            localObject = TLRPC.Message.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
            if (localObject == null) {
              break;
            }
            this.messages.add(localObject);
          }
          label177:
          i = paramAbstractSerializedData.readInt32(paramBoolean);
          if (i != 481674261)
          {
            if (paramBoolean) {
              throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
            }
          }
          else
          {
            j = paramAbstractSerializedData.readInt32(paramBoolean);
            for (i = 0;; i++)
            {
              if (i >= j) {
                break label265;
              }
              localObject = TLRPC.Chat.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
              if (localObject == null) {
                break;
              }
              this.chats.add(localObject);
            }
            label265:
            i = paramAbstractSerializedData.readInt32(paramBoolean);
            if (i != 481674261)
            {
              if (paramBoolean) {
                throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
              }
            }
            else
            {
              j = paramAbstractSerializedData.readInt32(paramBoolean);
              for (i = 0;; i++)
              {
                if (i >= j) {
                  break label353;
                }
                localObject = TLRPC.User.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
                if (localObject == null) {
                  break;
                }
                this.users.add(localObject);
              }
              label353:
              this.state = TLRPC.TL_updates_state.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
            }
          }
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.dialogs.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.TL_dialog)this.dialogs.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.messages.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        ((TLRPC.Message)this.messages.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.chats.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        ((TLRPC.Chat)this.chats.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.users.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        ((TLRPC.User)this.users.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      this.state.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_messages_readEncryptedHistory
    extends TLObject
  {
    public static int constructor = NUM;
    public int max_date;
    public TLRPC.TL_inputEncryptedChat peer;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.peer.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(this.max_date);
    }
  }
  
  public static class TL_messages_readFeaturedStickers
    extends TLObject
  {
    public static int constructor = NUM;
    public ArrayList<Long> id = new ArrayList();
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.id.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        paramAbstractSerializedData.writeInt64(((Long)this.id.get(j)).longValue());
      }
    }
  }
  
  public static class TL_messages_readHistory
    extends TLObject
  {
    public static int constructor = 238054714;
    public int max_id;
    public TLRPC.InputPeer peer;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_messages_affectedMessages.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.peer.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(this.max_id);
    }
  }
  
  public static class TL_messages_readMentions
    extends TLObject
  {
    public static int constructor = 251759059;
    public TLRPC.InputPeer peer;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_messages_affectedHistory.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.peer.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_messages_readMessageContents
    extends TLObject
  {
    public static int constructor = 916930423;
    public ArrayList<Integer> id = new ArrayList();
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_messages_affectedMessages.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.id.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        paramAbstractSerializedData.writeInt32(((Integer)this.id.get(j)).intValue());
      }
    }
  }
  
  public static class TL_messages_receivedMessages
    extends TLObject
  {
    public static int constructor = 94983360;
    public int max_id;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      TLRPC.Vector localVector = new TLRPC.Vector();
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      for (paramInt = 0;; paramInt++)
      {
        TLRPC.TL_receivedNotifyMessage localTL_receivedNotifyMessage;
        if (paramInt < i)
        {
          localTL_receivedNotifyMessage = TLRPC.TL_receivedNotifyMessage.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localTL_receivedNotifyMessage != null) {}
        }
        else
        {
          return localVector;
        }
        localVector.objects.add(localTL_receivedNotifyMessage);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.max_id);
    }
  }
  
  public static class TL_messages_receivedQueue
    extends TLObject
  {
    public static int constructor = NUM;
    public int max_qts;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      TLRPC.Vector localVector = new TLRPC.Vector();
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      for (paramInt = 0; paramInt < i; paramInt++) {
        localVector.objects.add(Long.valueOf(paramAbstractSerializedData.readInt64(paramBoolean)));
      }
      return localVector;
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.max_qts);
    }
  }
  
  public static class TL_messages_recentStickers
    extends TLRPC.messages_RecentStickers
  {
    public static int constructor = 586395571;
    public ArrayList<Integer> dates = new ArrayList();
    public int hash;
    public ArrayList<TLRPC.TL_stickerPack> packs = new ArrayList();
    public ArrayList<TLRPC.Document> stickers = new ArrayList();
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.hash = paramAbstractSerializedData.readInt32(paramBoolean);
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      Object localObject;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else
      {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
        i = 0;
        if (i >= j) {
          break label98;
        }
        localObject = TLRPC.TL_stickerPack.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localObject != null) {
          break label82;
        }
      }
      for (;;)
      {
        return;
        label82:
        this.packs.add(localObject);
        i++;
        break;
        label98:
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i != 481674261)
        {
          if (paramBoolean) {
            throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
          }
        }
        else
        {
          j = paramAbstractSerializedData.readInt32(paramBoolean);
          for (i = 0;; i++)
          {
            if (i >= j) {
              break label186;
            }
            localObject = TLRPC.Document.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
            if (localObject == null) {
              break;
            }
            this.stickers.add(localObject);
          }
          label186:
          i = paramAbstractSerializedData.readInt32(paramBoolean);
          if (i != 481674261)
          {
            if (paramBoolean) {
              throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
            }
          }
          else
          {
            j = paramAbstractSerializedData.readInt32(paramBoolean);
            for (i = 0; i < j; i++) {
              this.dates.add(Integer.valueOf(paramAbstractSerializedData.readInt32(paramBoolean)));
            }
          }
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.hash);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.packs.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.TL_stickerPack)this.packs.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.stickers.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        ((TLRPC.Document)this.stickers.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.dates.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        paramAbstractSerializedData.writeInt32(((Integer)this.dates.get(j)).intValue());
      }
    }
  }
  
  public static class TL_messages_recentStickersNotModified
    extends TLRPC.messages_RecentStickers
  {
    public static int constructor = 186120336;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_messages_reorderPinnedDialogs
    extends TLObject
  {
    public static int constructor = NUM;
    public int flags;
    public boolean force;
    public ArrayList<TLRPC.InputDialogPeer> order = new ArrayList();
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.force) {}
      for (int i = this.flags | 0x1;; i = this.flags & 0xFFFFFFFE)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(481674261);
        int j = this.order.size();
        paramAbstractSerializedData.writeInt32(j);
        for (i = 0; i < j; i++) {
          ((TLRPC.InputDialogPeer)this.order.get(i)).serializeToStream(paramAbstractSerializedData);
        }
      }
    }
  }
  
  public static class TL_messages_reorderStickerSets
    extends TLObject
  {
    public static int constructor = NUM;
    public int flags;
    public boolean masks;
    public ArrayList<Long> order = new ArrayList();
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.masks) {}
      for (int i = this.flags | 0x1;; i = this.flags & 0xFFFFFFFE)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(481674261);
        int j = this.order.size();
        paramAbstractSerializedData.writeInt32(j);
        for (i = 0; i < j; i++) {
          paramAbstractSerializedData.writeInt64(((Long)this.order.get(i)).longValue());
        }
      }
    }
  }
  
  public static class TL_messages_report
    extends TLObject
  {
    public static int constructor = -NUM;
    public ArrayList<Integer> id = new ArrayList();
    public TLRPC.InputPeer peer;
    public TLRPC.ReportReason reason;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.peer.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.id.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        paramAbstractSerializedData.writeInt32(((Integer)this.id.get(j)).intValue());
      }
      this.reason.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_messages_reportEncryptedSpam
    extends TLObject
  {
    public static int constructor = NUM;
    public TLRPC.TL_inputEncryptedChat peer;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.peer.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_messages_reportSpam
    extends TLObject
  {
    public static int constructor = -820669733;
    public TLRPC.InputPeer peer;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.peer.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_messages_requestEncryption
    extends TLObject
  {
    public static int constructor = -162681021;
    public byte[] g_a;
    public int random_id;
    public TLRPC.InputUser user_id;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.EncryptedChat.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.user_id.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(this.random_id);
      paramAbstractSerializedData.writeByteArray(this.g_a);
    }
  }
  
  public static class TL_messages_saveDraft
    extends TLObject
  {
    public static int constructor = -NUM;
    public ArrayList<TLRPC.MessageEntity> entities = new ArrayList();
    public int flags;
    public String message;
    public boolean no_webpage;
    public TLRPC.InputPeer peer;
    public int reply_to_msg_id;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.no_webpage) {}
      for (int i = this.flags | 0x2;; i = this.flags & 0xFFFFFFFD)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        if ((this.flags & 0x1) != 0) {
          paramAbstractSerializedData.writeInt32(this.reply_to_msg_id);
        }
        this.peer.serializeToStream(paramAbstractSerializedData);
        paramAbstractSerializedData.writeString(this.message);
        if ((this.flags & 0x8) == 0) {
          break;
        }
        paramAbstractSerializedData.writeInt32(481674261);
        int j = this.entities.size();
        paramAbstractSerializedData.writeInt32(j);
        for (i = 0; i < j; i++) {
          ((TLRPC.MessageEntity)this.entities.get(i)).serializeToStream(paramAbstractSerializedData);
        }
      }
    }
  }
  
  public static class TL_messages_saveGif
    extends TLObject
  {
    public static int constructor = 846868683;
    public TLRPC.InputDocument id;
    public boolean unsave;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.id.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeBool(this.unsave);
    }
  }
  
  public static class TL_messages_saveRecentSticker
    extends TLObject
  {
    public static int constructor = 958863608;
    public boolean attached;
    public int flags;
    public TLRPC.InputDocument id;
    public boolean unsave;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.attached) {}
      for (int i = this.flags | 0x1;; i = this.flags & 0xFFFFFFFE)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        this.id.serializeToStream(paramAbstractSerializedData);
        paramAbstractSerializedData.writeBool(this.unsave);
        return;
      }
    }
  }
  
  public static class TL_messages_savedGifs
    extends TLRPC.messages_SavedGifs
  {
    public static int constructor = 772213157;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.hash = paramAbstractSerializedData.readInt32(paramBoolean);
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
      }
      for (i = 0;; i++)
      {
        TLRPC.Document localDocument;
        if (i < j)
        {
          localDocument = TLRPC.Document.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localDocument != null) {}
        }
        else
        {
          return;
        }
        this.gifs.add(localDocument);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.hash);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.gifs.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.Document)this.gifs.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_messages_savedGifsNotModified
    extends TLRPC.messages_SavedGifs
  {
    public static int constructor = -402498398;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_messages_search
    extends TLObject
  {
    public static int constructor = -NUM;
    public int add_offset;
    public TLRPC.MessagesFilter filter;
    public int flags;
    public TLRPC.InputUser from_id;
    public int hash;
    public int limit;
    public int max_date;
    public int max_id;
    public int min_date;
    public int min_id;
    public int offset_id;
    public TLRPC.InputPeer peer;
    public String q;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.messages_Messages.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.flags);
      this.peer.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeString(this.q);
      if ((this.flags & 0x1) != 0) {
        this.from_id.serializeToStream(paramAbstractSerializedData);
      }
      this.filter.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(this.min_date);
      paramAbstractSerializedData.writeInt32(this.max_date);
      paramAbstractSerializedData.writeInt32(this.offset_id);
      paramAbstractSerializedData.writeInt32(this.add_offset);
      paramAbstractSerializedData.writeInt32(this.limit);
      paramAbstractSerializedData.writeInt32(this.max_id);
      paramAbstractSerializedData.writeInt32(this.min_id);
      paramAbstractSerializedData.writeInt32(this.hash);
    }
  }
  
  public static class TL_messages_searchGifs
    extends TLObject
  {
    public static int constructor = -NUM;
    public int offset;
    public String q;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_messages_foundGifs.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.q);
      paramAbstractSerializedData.writeInt32(this.offset);
    }
  }
  
  public static class TL_messages_searchGlobal
    extends TLObject
  {
    public static int constructor = -NUM;
    public int limit;
    public int offset_date;
    public int offset_id;
    public TLRPC.InputPeer offset_peer;
    public String q;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.messages_Messages.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.q);
      paramAbstractSerializedData.writeInt32(this.offset_date);
      this.offset_peer.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(this.offset_id);
      paramAbstractSerializedData.writeInt32(this.limit);
    }
  }
  
  public static class TL_messages_searchStickerSets
    extends TLObject
  {
    public static int constructor = -NUM;
    public boolean exclude_featured;
    public int flags;
    public int hash;
    public String q;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.messages_FoundStickerSets.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.exclude_featured) {}
      for (int i = this.flags | 0x1;; i = this.flags & 0xFFFFFFFE)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeString(this.q);
        paramAbstractSerializedData.writeInt32(this.hash);
        return;
      }
    }
  }
  
  public static class TL_messages_sendBroadcast
    extends TLObject
  {
    public static int constructor = -NUM;
    public ArrayList<TLRPC.InputUser> contacts = new ArrayList();
    public TLRPC.InputMedia media;
    public String message;
    public ArrayList<Long> random_id = new ArrayList();
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Updates.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.contacts.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.InputUser)this.contacts.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.random_id.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        paramAbstractSerializedData.writeInt64(((Long)this.random_id.get(j)).longValue());
      }
      paramAbstractSerializedData.writeString(this.message);
      this.media.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_messages_sendEncrypted
    extends TLObject
  {
    public static int constructor = -NUM;
    public NativeByteBuffer data;
    public TLRPC.TL_inputEncryptedChat peer;
    public long random_id;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.messages_SentEncryptedMessage.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void freeResources()
    {
      if (this.data != null)
      {
        this.data.reuse();
        this.data = null;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.peer.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt64(this.random_id);
      paramAbstractSerializedData.writeByteBuffer(this.data);
    }
  }
  
  public static class TL_messages_sendEncryptedFile
    extends TLObject
  {
    public static int constructor = -NUM;
    public NativeByteBuffer data;
    public TLRPC.InputEncryptedFile file;
    public TLRPC.TL_inputEncryptedChat peer;
    public long random_id;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.messages_SentEncryptedMessage.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void freeResources()
    {
      if (this.data != null)
      {
        this.data.reuse();
        this.data = null;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.peer.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt64(this.random_id);
      paramAbstractSerializedData.writeByteBuffer(this.data);
      this.file.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_messages_sendEncryptedMultiMedia
    extends TLObject
  {
    public static int constructor = -892679478;
    public ArrayList<TLRPC.InputEncryptedFile> files = new ArrayList();
    public ArrayList<TLRPC.TL_decryptedMessage> messages = new ArrayList();
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.messages_SentEncryptedMessage.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void freeResources() {}
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData) {}
  }
  
  public static class TL_messages_sendEncryptedService
    extends TLObject
  {
    public static int constructor = 852769188;
    public NativeByteBuffer data;
    public TLRPC.TL_inputEncryptedChat peer;
    public long random_id;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.messages_SentEncryptedMessage.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void freeResources()
    {
      if (this.data != null)
      {
        this.data.reuse();
        this.data = null;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.peer.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt64(this.random_id);
      paramAbstractSerializedData.writeByteBuffer(this.data);
    }
  }
  
  public static class TL_messages_sendInlineBotResult
    extends TLObject
  {
    public static int constructor = -NUM;
    public boolean background;
    public boolean clear_draft;
    public int flags;
    public String id;
    public TLRPC.InputPeer peer;
    public long query_id;
    public long random_id;
    public int reply_to_msg_id;
    public boolean silent;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Updates.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.silent)
      {
        i = this.flags | 0x20;
        this.flags = i;
        if (!this.background) {
          break label137;
        }
        i = this.flags | 0x40;
        label42:
        this.flags = i;
        if (!this.clear_draft) {
          break label148;
        }
      }
      label137:
      label148:
      for (int i = this.flags | 0x80;; i = this.flags & 0xFF7F)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        this.peer.serializeToStream(paramAbstractSerializedData);
        if ((this.flags & 0x1) != 0) {
          paramAbstractSerializedData.writeInt32(this.reply_to_msg_id);
        }
        paramAbstractSerializedData.writeInt64(this.random_id);
        paramAbstractSerializedData.writeInt64(this.query_id);
        paramAbstractSerializedData.writeString(this.id);
        return;
        i = this.flags & 0xFFFFFFDF;
        break;
        i = this.flags & 0xFFFFFFBF;
        break label42;
      }
    }
  }
  
  public static class TL_messages_sendMedia
    extends TLObject
  {
    public static int constructor = -NUM;
    public boolean background;
    public boolean clear_draft;
    public ArrayList<TLRPC.MessageEntity> entities = new ArrayList();
    public int flags;
    public TLRPC.InputMedia media;
    public String message;
    public TLRPC.InputPeer peer;
    public long random_id;
    public TLRPC.ReplyMarkup reply_markup;
    public int reply_to_msg_id;
    public boolean silent;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Updates.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.silent)
      {
        i = this.flags | 0x20;
        this.flags = i;
        if (!this.background) {
          break label210;
        }
        i = this.flags | 0x40;
        label42:
        this.flags = i;
        if (!this.clear_draft) {
          break label221;
        }
      }
      label210:
      label221:
      for (int i = this.flags | 0x80;; i = this.flags & 0xFF7F)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        this.peer.serializeToStream(paramAbstractSerializedData);
        if ((this.flags & 0x1) != 0) {
          paramAbstractSerializedData.writeInt32(this.reply_to_msg_id);
        }
        this.media.serializeToStream(paramAbstractSerializedData);
        paramAbstractSerializedData.writeString(this.message);
        paramAbstractSerializedData.writeInt64(this.random_id);
        if ((this.flags & 0x4) != 0) {
          this.reply_markup.serializeToStream(paramAbstractSerializedData);
        }
        if ((this.flags & 0x8) == 0) {
          return;
        }
        paramAbstractSerializedData.writeInt32(481674261);
        int j = this.entities.size();
        paramAbstractSerializedData.writeInt32(j);
        for (i = 0; i < j; i++) {
          ((TLRPC.MessageEntity)this.entities.get(i)).serializeToStream(paramAbstractSerializedData);
        }
        i = this.flags & 0xFFFFFFDF;
        break;
        i = this.flags & 0xFFFFFFBF;
        break label42;
      }
    }
  }
  
  public static class TL_messages_sendMessage
    extends TLObject
  {
    public static int constructor = -91733382;
    public boolean background;
    public boolean clear_draft;
    public ArrayList<TLRPC.MessageEntity> entities = new ArrayList();
    public int flags;
    public String message;
    public boolean no_webpage;
    public TLRPC.InputPeer peer;
    public long random_id;
    public TLRPC.ReplyMarkup reply_markup;
    public int reply_to_msg_id;
    public boolean silent;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Updates.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.no_webpage)
      {
        i = this.flags | 0x2;
        this.flags = i;
        if (!this.silent) {
          break label221;
        }
        i = this.flags | 0x20;
        label41:
        this.flags = i;
        if (!this.background) {
          break label232;
        }
        i = this.flags | 0x40;
        label61:
        this.flags = i;
        if (!this.clear_draft) {
          break label243;
        }
      }
      label221:
      label232:
      label243:
      for (int i = this.flags | 0x80;; i = this.flags & 0xFF7F)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        this.peer.serializeToStream(paramAbstractSerializedData);
        if ((this.flags & 0x1) != 0) {
          paramAbstractSerializedData.writeInt32(this.reply_to_msg_id);
        }
        paramAbstractSerializedData.writeString(this.message);
        paramAbstractSerializedData.writeInt64(this.random_id);
        if ((this.flags & 0x4) != 0) {
          this.reply_markup.serializeToStream(paramAbstractSerializedData);
        }
        if ((this.flags & 0x8) == 0) {
          return;
        }
        paramAbstractSerializedData.writeInt32(481674261);
        int j = this.entities.size();
        paramAbstractSerializedData.writeInt32(j);
        for (i = 0; i < j; i++) {
          ((TLRPC.MessageEntity)this.entities.get(i)).serializeToStream(paramAbstractSerializedData);
        }
        i = this.flags & 0xFFFFFFFD;
        break;
        i = this.flags & 0xFFFFFFDF;
        break label41;
        i = this.flags & 0xFFFFFFBF;
        break label61;
      }
    }
  }
  
  public static class TL_messages_sendMultiMedia
    extends TLObject
  {
    public static int constructor = 546656559;
    public boolean background;
    public boolean clear_draft;
    public int flags;
    public ArrayList<TLRPC.TL_inputSingleMedia> multi_media = new ArrayList();
    public TLRPC.InputPeer peer;
    public int reply_to_msg_id;
    public boolean silent;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Updates.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.silent)
      {
        i = this.flags | 0x20;
        this.flags = i;
        if (!this.background) {
          break label159;
        }
        i = this.flags | 0x40;
        label42:
        this.flags = i;
        if (!this.clear_draft) {
          break label170;
        }
      }
      label159:
      label170:
      for (int i = this.flags | 0x80;; i = this.flags & 0xFF7F)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        this.peer.serializeToStream(paramAbstractSerializedData);
        if ((this.flags & 0x1) != 0) {
          paramAbstractSerializedData.writeInt32(this.reply_to_msg_id);
        }
        paramAbstractSerializedData.writeInt32(481674261);
        int j = this.multi_media.size();
        paramAbstractSerializedData.writeInt32(j);
        for (i = 0; i < j; i++) {
          ((TLRPC.TL_inputSingleMedia)this.multi_media.get(i)).serializeToStream(paramAbstractSerializedData);
        }
        i = this.flags & 0xFFFFFFDF;
        break;
        i = this.flags & 0xFFFFFFBF;
        break label42;
      }
    }
  }
  
  public static class TL_messages_sendScreenshotNotification
    extends TLObject
  {
    public static int constructor = -914493408;
    public TLRPC.InputPeer peer;
    public long random_id;
    public int reply_to_msg_id;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Updates.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.peer.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(this.reply_to_msg_id);
      paramAbstractSerializedData.writeInt64(this.random_id);
    }
  }
  
  public static class TL_messages_sentEncryptedFile
    extends TLRPC.messages_SentEncryptedMessage
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
      this.file = TLRPC.EncryptedFile.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.date);
      this.file.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_messages_sentEncryptedMessage
    extends TLRPC.messages_SentEncryptedMessage
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.date);
    }
  }
  
  public static class TL_messages_setBotCallbackAnswer
    extends TLObject
  {
    public static int constructor = -712043766;
    public boolean alert;
    public int cache_time;
    public int flags;
    public String message;
    public long query_id;
    public String url;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.alert) {}
      for (int i = this.flags | 0x2;; i = this.flags & 0xFFFFFFFD)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt64(this.query_id);
        if ((this.flags & 0x1) != 0) {
          paramAbstractSerializedData.writeString(this.message);
        }
        if ((this.flags & 0x4) != 0) {
          paramAbstractSerializedData.writeString(this.url);
        }
        paramAbstractSerializedData.writeInt32(this.cache_time);
        return;
      }
    }
  }
  
  public static class TL_messages_setEncryptedTyping
    extends TLObject
  {
    public static int constructor = NUM;
    public TLRPC.TL_inputEncryptedChat peer;
    public boolean typing;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.peer.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeBool(this.typing);
    }
  }
  
  public static class TL_messages_setGameScore
    extends TLObject
  {
    public static int constructor = -NUM;
    public boolean edit_message;
    public int flags;
    public boolean force;
    public int id;
    public TLRPC.InputPeer peer;
    public int score;
    public TLRPC.InputUser user_id;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Updates.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.edit_message)
      {
        i = this.flags | 0x1;
        this.flags = i;
        if (!this.force) {
          break label97;
        }
      }
      label97:
      for (int i = this.flags | 0x2;; i = this.flags & 0xFFFFFFFD)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        this.peer.serializeToStream(paramAbstractSerializedData);
        paramAbstractSerializedData.writeInt32(this.id);
        this.user_id.serializeToStream(paramAbstractSerializedData);
        paramAbstractSerializedData.writeInt32(this.score);
        return;
        i = this.flags & 0xFFFFFFFE;
        break;
      }
    }
  }
  
  public static class TL_messages_setInlineGameScore
    extends TLObject
  {
    public static int constructor = 363700068;
    public boolean edit_message;
    public int flags;
    public boolean force;
    public TLRPC.TL_inputBotInlineMessageID id;
    public int score;
    public TLRPC.InputUser user_id;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.edit_message)
      {
        i = this.flags | 0x1;
        this.flags = i;
        if (!this.force) {
          break label89;
        }
      }
      label89:
      for (int i = this.flags | 0x2;; i = this.flags & 0xFFFFFFFD)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        this.id.serializeToStream(paramAbstractSerializedData);
        this.user_id.serializeToStream(paramAbstractSerializedData);
        paramAbstractSerializedData.writeInt32(this.score);
        return;
        i = this.flags & 0xFFFFFFFE;
        break;
      }
    }
  }
  
  public static class TL_messages_setTyping
    extends TLObject
  {
    public static int constructor = -NUM;
    public TLRPC.SendMessageAction action;
    public TLRPC.InputPeer peer;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.peer.serializeToStream(paramAbstractSerializedData);
      this.action.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_messages_startBot
    extends TLObject
  {
    public static int constructor = -421563528;
    public TLRPC.InputUser bot;
    public TLRPC.InputPeer peer;
    public long random_id;
    public String start_param;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Updates.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.bot.serializeToStream(paramAbstractSerializedData);
      this.peer.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt64(this.random_id);
      paramAbstractSerializedData.writeString(this.start_param);
    }
  }
  
  public static class TL_messages_stickerSet
    extends TLObject
  {
    public static int constructor = -NUM;
    public ArrayList<TLRPC.Document> documents = new ArrayList();
    public ArrayList<TLRPC.TL_stickerPack> packs = new ArrayList();
    public TLRPC.StickerSet set;
    
    public static TL_messages_stickerSet TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_messages_stickerSet", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_messages_stickerSet localTL_messages_stickerSet;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_messages_stickerSet)
      {
        return paramAbstractSerializedData;
        localTL_messages_stickerSet = new TL_messages_stickerSet();
        localTL_messages_stickerSet.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.set = TLRPC.StickerSet.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      Object localObject;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else
      {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
        i = 0;
        if (i >= j) {
          break label103;
        }
        localObject = TLRPC.TL_stickerPack.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localObject != null) {
          break label87;
        }
      }
      label87:
      label103:
      label189:
      for (;;)
      {
        return;
        this.packs.add(localObject);
        i++;
        break;
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i != 481674261)
        {
          if (paramBoolean) {
            throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
          }
        }
        else
        {
          j = paramAbstractSerializedData.readInt32(paramBoolean);
          for (i = 0;; i++)
          {
            if (i >= j) {
              break label189;
            }
            localObject = TLRPC.Document.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
            if (localObject == null) {
              break;
            }
            this.documents.add(localObject);
          }
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.set.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.packs.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.TL_stickerPack)this.packs.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.documents.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        ((TLRPC.Document)this.documents.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_messages_stickerSetInstallResultArchive
    extends TLRPC.messages_StickerSetInstallResult
  {
    public static int constructor = 904138920;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
      }
      for (i = 0;; i++)
      {
        TLRPC.StickerSetCovered localStickerSetCovered;
        if (i < j)
        {
          localStickerSetCovered = TLRPC.StickerSetCovered.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localStickerSetCovered != null) {}
        }
        else
        {
          return;
        }
        this.sets.add(localStickerSetCovered);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.sets.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.StickerSetCovered)this.sets.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_messages_stickerSetInstallResultSuccess
    extends TLRPC.messages_StickerSetInstallResult
  {
    public static int constructor = 946083368;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_messages_stickers
    extends TLRPC.messages_Stickers
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.hash = paramAbstractSerializedData.readString(paramBoolean);
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
      }
      for (i = 0;; i++)
      {
        TLRPC.Document localDocument;
        if (i < j)
        {
          localDocument = TLRPC.Document.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localDocument != null) {}
        }
        else
        {
          return;
        }
        this.stickers.add(localDocument);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.hash);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.stickers.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.Document)this.stickers.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_messages_stickersNotModified
    extends TLRPC.messages_Stickers
  {
    public static int constructor = -244016606;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_messages_toggleChatAdmins
    extends TLObject
  {
    public static int constructor = -326379039;
    public int chat_id;
    public boolean enabled;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Updates.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.chat_id);
      paramAbstractSerializedData.writeBool(this.enabled);
    }
  }
  
  public static class TL_messages_toggleDialogPin
    extends TLObject
  {
    public static int constructor = -NUM;
    public int flags;
    public TLRPC.InputDialogPeer peer;
    public boolean pinned;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.pinned) {}
      for (int i = this.flags | 0x1;; i = this.flags & 0xFFFFFFFE)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        this.peer.serializeToStream(paramAbstractSerializedData);
        return;
      }
    }
  }
  
  public static class TL_messages_uninstallStickerSet
    extends TLObject
  {
    public static int constructor = -110209570;
    public TLRPC.InputStickerSet stickerset;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.stickerset.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_messages_uploadEncryptedFile
    extends TLObject
  {
    public static int constructor = NUM;
    public TLRPC.InputEncryptedFile file;
    public TLRPC.TL_inputEncryptedChat peer;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.EncryptedFile.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.peer.serializeToStream(paramAbstractSerializedData);
      this.file.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_messages_uploadMedia
    extends TLObject
  {
    public static int constructor = NUM;
    public TLRPC.InputMedia media;
    public TLRPC.InputPeer peer;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.MessageMedia.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.peer.serializeToStream(paramAbstractSerializedData);
      this.media.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_nearestDc
    extends TLObject
  {
    public static int constructor = -NUM;
    public String country;
    public int nearest_dc;
    public int this_dc;
    
    public static TL_nearestDc TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_nearestDc", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_nearestDc localTL_nearestDc;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_nearestDc)
      {
        return paramAbstractSerializedData;
        localTL_nearestDc = new TL_nearestDc();
        localTL_nearestDc.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.country = paramAbstractSerializedData.readString(paramBoolean);
      this.this_dc = paramAbstractSerializedData.readInt32(paramBoolean);
      this.nearest_dc = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.country);
      paramAbstractSerializedData.writeInt32(this.this_dc);
      paramAbstractSerializedData.writeInt32(this.nearest_dc);
    }
  }
  
  public static class TL_notifyAll
    extends TLRPC.NotifyPeer
  {
    public static int constructor = NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_notifyChats
    extends TLRPC.NotifyPeer
  {
    public static int constructor = -NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_notifyPeer
    extends TLRPC.NotifyPeer
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.peer = TLRPC.Peer.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.peer.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_notifyUsers
    extends TLRPC.NotifyPeer
  {
    public static int constructor = -NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_null
    extends TLObject
  {
    public static int constructor = NUM;
    
    public static TL_null TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_null", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_null localTL_null;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_null)
      {
        return paramAbstractSerializedData;
        localTL_null = new TL_null();
        localTL_null.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_pageBlockAnchor
    extends TLRPC.PageBlock
  {
    public static int constructor = -837994576;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.name = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.name);
    }
  }
  
  public static class TL_pageBlockAudio
    extends TLRPC.PageBlock
  {
    public static int constructor = 834148991;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.audio_id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.caption = TLRPC.RichText.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.audio_id);
      this.caption.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_pageBlockAuthorDate
    extends TLRPC.PageBlock
  {
    public static int constructor = -NUM;
    public TLRPC.RichText author;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.author = TLRPC.RichText.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.published_date = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.author.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(this.published_date);
    }
  }
  
  public static class TL_pageBlockAuthorDate_layer60
    extends TLRPC.TL_pageBlockAuthorDate
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      String str = paramAbstractSerializedData.readString(paramBoolean);
      this.author = new TLRPC.TL_textPlain();
      ((TLRPC.TL_textPlain)this.author).text = str;
      this.published_date = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(((TLRPC.TL_textPlain)this.author).text);
      paramAbstractSerializedData.writeInt32(this.published_date);
    }
  }
  
  public static class TL_pageBlockBlockquote
    extends TLRPC.PageBlock
  {
    public static int constructor = 641563686;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.text = TLRPC.RichText.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.caption = TLRPC.RichText.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.text.serializeToStream(paramAbstractSerializedData);
      this.caption.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_pageBlockChannel
    extends TLRPC.PageBlock
  {
    public static int constructor = -283684427;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.channel = TLRPC.Chat.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.channel.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_pageBlockCollage
    extends TLRPC.PageBlock
  {
    public static int constructor = 145955919;
    public ArrayList<TLRPC.PageBlock> items = new ArrayList();
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      TLRPC.PageBlock localPageBlock;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else
      {
        int j = paramAbstractSerializedData.readInt32(paramBoolean);
        i = 0;
        if (i >= j) {
          break label89;
        }
        localPageBlock = TLRPC.PageBlock.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localPageBlock != null) {
          break label73;
        }
      }
      for (;;)
      {
        return;
        label73:
        this.items.add(localPageBlock);
        i++;
        break;
        label89:
        this.caption = TLRPC.RichText.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.items.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.PageBlock)this.items.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      this.caption.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_pageBlockCover
    extends TLRPC.PageBlock
  {
    public static int constructor = 972174080;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.cover = TLRPC.PageBlock.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.cover.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_pageBlockDivider
    extends TLRPC.PageBlock
  {
    public static int constructor = -618614392;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_pageBlockEmbed
    extends TLRPC.PageBlock
  {
    public static int constructor = -840826671;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      boolean bool1 = true;
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0)
      {
        bool2 = true;
        this.full_width = bool2;
        if ((this.flags & 0x8) == 0) {
          break label142;
        }
      }
      label142:
      for (boolean bool2 = bool1;; bool2 = false)
      {
        this.allow_scrolling = bool2;
        if ((this.flags & 0x2) != 0) {
          this.url = paramAbstractSerializedData.readString(paramBoolean);
        }
        if ((this.flags & 0x4) != 0) {
          this.html = paramAbstractSerializedData.readString(paramBoolean);
        }
        if ((this.flags & 0x10) != 0) {
          this.poster_photo_id = paramAbstractSerializedData.readInt64(paramBoolean);
        }
        this.w = paramAbstractSerializedData.readInt32(paramBoolean);
        this.h = paramAbstractSerializedData.readInt32(paramBoolean);
        this.caption = TLRPC.RichText.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        return;
        bool2 = false;
        break;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.full_width)
      {
        i = this.flags | 0x1;
        this.flags = i;
        if (!this.allow_scrolling) {
          break label142;
        }
      }
      label142:
      for (int i = this.flags | 0x8;; i = this.flags & 0xFFFFFFF7)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        if ((this.flags & 0x2) != 0) {
          paramAbstractSerializedData.writeString(this.url);
        }
        if ((this.flags & 0x4) != 0) {
          paramAbstractSerializedData.writeString(this.html);
        }
        if ((this.flags & 0x10) != 0) {
          paramAbstractSerializedData.writeInt64(this.poster_photo_id);
        }
        paramAbstractSerializedData.writeInt32(this.w);
        paramAbstractSerializedData.writeInt32(this.h);
        this.caption.serializeToStream(paramAbstractSerializedData);
        return;
        i = this.flags & 0xFFFFFFFE;
        break;
      }
    }
  }
  
  public static class TL_pageBlockEmbedPost
    extends TLRPC.PageBlock
  {
    public static int constructor = 690781161;
    public String author;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.url = paramAbstractSerializedData.readString(paramBoolean);
      this.webpage_id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.author_photo_id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.author = paramAbstractSerializedData.readString(paramBoolean);
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      TLRPC.PageBlock localPageBlock;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else
      {
        int j = paramAbstractSerializedData.readInt32(paramBoolean);
        i = 0;
        if (i >= j) {
          break label134;
        }
        localPageBlock = TLRPC.PageBlock.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localPageBlock != null) {
          break label118;
        }
      }
      for (;;)
      {
        return;
        label118:
        this.blocks.add(localPageBlock);
        i++;
        break;
        label134:
        this.caption = TLRPC.RichText.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.url);
      paramAbstractSerializedData.writeInt64(this.webpage_id);
      paramAbstractSerializedData.writeInt64(this.author_photo_id);
      paramAbstractSerializedData.writeString(this.author);
      paramAbstractSerializedData.writeInt32(this.date);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.blocks.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.PageBlock)this.blocks.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      this.caption.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_pageBlockEmbed_layer60
    extends TLRPC.TL_pageBlockEmbed
  {
    public static int constructor = -650782469;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      boolean bool1 = true;
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0)
      {
        bool2 = true;
        this.full_width = bool2;
        if ((this.flags & 0x8) == 0) {
          break label123;
        }
      }
      label123:
      for (boolean bool2 = bool1;; bool2 = false)
      {
        this.allow_scrolling = bool2;
        if ((this.flags & 0x2) != 0) {
          this.url = paramAbstractSerializedData.readString(paramBoolean);
        }
        if ((this.flags & 0x4) != 0) {
          this.html = paramAbstractSerializedData.readString(paramBoolean);
        }
        this.w = paramAbstractSerializedData.readInt32(paramBoolean);
        this.h = paramAbstractSerializedData.readInt32(paramBoolean);
        this.caption = TLRPC.RichText.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        return;
        bool2 = false;
        break;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.full_width)
      {
        i = this.flags | 0x1;
        this.flags = i;
        if (!this.allow_scrolling) {
          break label124;
        }
      }
      label124:
      for (int i = this.flags | 0x8;; i = this.flags & 0xFFFFFFF7)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        if ((this.flags & 0x2) != 0) {
          paramAbstractSerializedData.writeString(this.url);
        }
        if ((this.flags & 0x4) != 0) {
          paramAbstractSerializedData.writeString(this.html);
        }
        paramAbstractSerializedData.writeInt32(this.w);
        paramAbstractSerializedData.writeInt32(this.h);
        this.caption.serializeToStream(paramAbstractSerializedData);
        return;
        i = this.flags & 0xFFFFFFFE;
        break;
      }
    }
  }
  
  public static class TL_pageBlockFooter
    extends TLRPC.PageBlock
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.text = TLRPC.RichText.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.text.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_pageBlockHeader
    extends TLRPC.PageBlock
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.text = TLRPC.RichText.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.text.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_pageBlockList
    extends TLRPC.PageBlock
  {
    public static int constructor = 978896884;
    public ArrayList<TLRPC.RichText> items = new ArrayList();
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.ordered = paramAbstractSerializedData.readBool(paramBoolean);
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
      }
      for (i = 0;; i++)
      {
        TLRPC.RichText localRichText;
        if (i < j)
        {
          localRichText = TLRPC.RichText.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localRichText != null) {}
        }
        else
        {
          return;
        }
        this.items.add(localRichText);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeBool(this.ordered);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.items.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.RichText)this.items.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_pageBlockParagraph
    extends TLRPC.PageBlock
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.text = TLRPC.RichText.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.text.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_pageBlockPhoto
    extends TLRPC.PageBlock
  {
    public static int constructor = -372860542;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.photo_id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.caption = TLRPC.RichText.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.photo_id);
      this.caption.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_pageBlockPreformatted
    extends TLRPC.PageBlock
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.text = TLRPC.RichText.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.language = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.text.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeString(this.language);
    }
  }
  
  public static class TL_pageBlockPullquote
    extends TLRPC.PageBlock
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.text = TLRPC.RichText.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.caption = TLRPC.RichText.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.text.serializeToStream(paramAbstractSerializedData);
      this.caption.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_pageBlockSlideshow
    extends TLRPC.PageBlock
  {
    public static int constructor = 319588707;
    public ArrayList<TLRPC.PageBlock> items = new ArrayList();
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      TLRPC.PageBlock localPageBlock;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else
      {
        int j = paramAbstractSerializedData.readInt32(paramBoolean);
        i = 0;
        if (i >= j) {
          break label89;
        }
        localPageBlock = TLRPC.PageBlock.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localPageBlock != null) {
          break label73;
        }
      }
      for (;;)
      {
        return;
        label73:
        this.items.add(localPageBlock);
        i++;
        break;
        label89:
        this.caption = TLRPC.RichText.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.items.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.PageBlock)this.items.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      this.caption.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_pageBlockSubheader
    extends TLRPC.PageBlock
  {
    public static int constructor = -248793375;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.text = TLRPC.RichText.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.text.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_pageBlockSubtitle
    extends TLRPC.PageBlock
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.text = TLRPC.RichText.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.text.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_pageBlockTitle
    extends TLRPC.PageBlock
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.text = TLRPC.RichText.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.text.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_pageBlockUnsupported
    extends TLRPC.PageBlock
  {
    public static int constructor = 324435594;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_pageBlockVideo
    extends TLRPC.PageBlock
  {
    public static int constructor = -640214938;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      boolean bool1 = true;
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0)
      {
        bool2 = true;
        this.autoplay = bool2;
        if ((this.flags & 0x2) == 0) {
          break label77;
        }
      }
      label77:
      for (boolean bool2 = bool1;; bool2 = false)
      {
        this.loop = bool2;
        this.video_id = paramAbstractSerializedData.readInt64(paramBoolean);
        this.caption = TLRPC.RichText.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        return;
        bool2 = false;
        break;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.autoplay)
      {
        i = this.flags | 0x1;
        this.flags = i;
        if (!this.loop) {
          break label81;
        }
      }
      label81:
      for (int i = this.flags | 0x2;; i = this.flags & 0xFFFFFFFD)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt64(this.video_id);
        this.caption.serializeToStream(paramAbstractSerializedData);
        return;
        i = this.flags & 0xFFFFFFFE;
        break;
      }
    }
  }
  
  public static class TL_pageFull
    extends TLRPC.Page
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      Object localObject;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else
      {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
        i = 0;
        if (i >= j) {
          break label89;
        }
        localObject = TLRPC.PageBlock.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localObject != null) {
          break label73;
        }
      }
      label73:
      label89:
      label177:
      label263:
      for (;;)
      {
        return;
        this.blocks.add(localObject);
        i++;
        break;
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i != 481674261)
        {
          if (paramBoolean) {
            throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
          }
        }
        else
        {
          j = paramAbstractSerializedData.readInt32(paramBoolean);
          for (i = 0;; i++)
          {
            if (i >= j) {
              break label177;
            }
            localObject = TLRPC.Photo.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
            if (localObject == null) {
              break;
            }
            this.photos.add(localObject);
          }
          i = paramAbstractSerializedData.readInt32(paramBoolean);
          if (i != 481674261)
          {
            if (paramBoolean) {
              throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
            }
          }
          else
          {
            j = paramAbstractSerializedData.readInt32(paramBoolean);
            for (i = 0;; i++)
            {
              if (i >= j) {
                break label263;
              }
              localObject = TLRPC.Document.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
              if (localObject == null) {
                break;
              }
              this.documents.add(localObject);
            }
          }
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.blocks.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.PageBlock)this.blocks.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.photos.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        ((TLRPC.Photo)this.photos.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.documents.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        ((TLRPC.Document)this.documents.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_pageFull_layer67
    extends TLRPC.TL_pageFull
  {
    public static int constructor = -677274263;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      Object localObject;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else
      {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
        i = 0;
        if (i >= j) {
          break label89;
        }
        localObject = TLRPC.PageBlock.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localObject != null) {
          break label73;
        }
      }
      label73:
      label89:
      label177:
      label263:
      for (;;)
      {
        return;
        this.blocks.add(localObject);
        i++;
        break;
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i != 481674261)
        {
          if (paramBoolean) {
            throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
          }
        }
        else
        {
          j = paramAbstractSerializedData.readInt32(paramBoolean);
          for (i = 0;; i++)
          {
            if (i >= j) {
              break label177;
            }
            localObject = TLRPC.Photo.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
            if (localObject == null) {
              break;
            }
            this.photos.add(localObject);
          }
          i = paramAbstractSerializedData.readInt32(paramBoolean);
          if (i != 481674261)
          {
            if (paramBoolean) {
              throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
            }
          }
          else
          {
            j = paramAbstractSerializedData.readInt32(paramBoolean);
            for (i = 0;; i++)
            {
              if (i >= j) {
                break label263;
              }
              localObject = TLRPC.Document.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
              if (localObject == null) {
                break;
              }
              this.documents.add(localObject);
            }
          }
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.blocks.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.PageBlock)this.blocks.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.photos.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        ((TLRPC.Photo)this.photos.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.documents.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        ((TLRPC.Document)this.documents.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_pagePart
    extends TLRPC.Page
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      Object localObject;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else
      {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
        i = 0;
        if (i >= j) {
          break label89;
        }
        localObject = TLRPC.PageBlock.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localObject != null) {
          break label73;
        }
      }
      label73:
      label89:
      label177:
      label263:
      for (;;)
      {
        return;
        this.blocks.add(localObject);
        i++;
        break;
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i != 481674261)
        {
          if (paramBoolean) {
            throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
          }
        }
        else
        {
          j = paramAbstractSerializedData.readInt32(paramBoolean);
          for (i = 0;; i++)
          {
            if (i >= j) {
              break label177;
            }
            localObject = TLRPC.Photo.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
            if (localObject == null) {
              break;
            }
            this.photos.add(localObject);
          }
          i = paramAbstractSerializedData.readInt32(paramBoolean);
          if (i != 481674261)
          {
            if (paramBoolean) {
              throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
            }
          }
          else
          {
            j = paramAbstractSerializedData.readInt32(paramBoolean);
            for (i = 0;; i++)
            {
              if (i >= j) {
                break label263;
              }
              localObject = TLRPC.Document.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
              if (localObject == null) {
                break;
              }
              this.documents.add(localObject);
            }
          }
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.blocks.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.PageBlock)this.blocks.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.photos.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        ((TLRPC.Photo)this.photos.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.documents.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        ((TLRPC.Document)this.documents.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_pagePart_layer67
    extends TLRPC.TL_pagePart
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      Object localObject;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else
      {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
        i = 0;
        if (i >= j) {
          break label89;
        }
        localObject = TLRPC.PageBlock.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localObject != null) {
          break label73;
        }
      }
      label73:
      label89:
      label177:
      label263:
      for (;;)
      {
        return;
        this.blocks.add(localObject);
        i++;
        break;
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i != 481674261)
        {
          if (paramBoolean) {
            throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
          }
        }
        else
        {
          j = paramAbstractSerializedData.readInt32(paramBoolean);
          for (i = 0;; i++)
          {
            if (i >= j) {
              break label177;
            }
            localObject = TLRPC.Photo.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
            if (localObject == null) {
              break;
            }
            this.photos.add(localObject);
          }
          i = paramAbstractSerializedData.readInt32(paramBoolean);
          if (i != 481674261)
          {
            if (paramBoolean) {
              throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
            }
          }
          else
          {
            j = paramAbstractSerializedData.readInt32(paramBoolean);
            for (i = 0;; i++)
            {
              if (i >= j) {
                break label263;
              }
              localObject = TLRPC.Document.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
              if (localObject == null) {
                break;
              }
              this.documents.add(localObject);
            }
          }
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.blocks.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.PageBlock)this.blocks.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.photos.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        ((TLRPC.Photo)this.photos.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.documents.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        ((TLRPC.Document)this.documents.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_paymentRequestedInfo
    extends TLObject
  {
    public static int constructor = -NUM;
    public String email;
    public int flags;
    public String name;
    public String phone;
    public TLRPC.TL_postAddress shipping_address;
    
    public static TL_paymentRequestedInfo TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_paymentRequestedInfo", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_paymentRequestedInfo localTL_paymentRequestedInfo;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_paymentRequestedInfo)
      {
        return paramAbstractSerializedData;
        localTL_paymentRequestedInfo = new TL_paymentRequestedInfo();
        localTL_paymentRequestedInfo.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0) {
        this.name = paramAbstractSerializedData.readString(paramBoolean);
      }
      if ((this.flags & 0x2) != 0) {
        this.phone = paramAbstractSerializedData.readString(paramBoolean);
      }
      if ((this.flags & 0x4) != 0) {
        this.email = paramAbstractSerializedData.readString(paramBoolean);
      }
      if ((this.flags & 0x8) != 0) {
        this.shipping_address = TLRPC.TL_postAddress.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.flags);
      if ((this.flags & 0x1) != 0) {
        paramAbstractSerializedData.writeString(this.name);
      }
      if ((this.flags & 0x2) != 0) {
        paramAbstractSerializedData.writeString(this.phone);
      }
      if ((this.flags & 0x4) != 0) {
        paramAbstractSerializedData.writeString(this.email);
      }
      if ((this.flags & 0x8) != 0) {
        this.shipping_address.serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_paymentSavedCredentialsCard
    extends TLObject
  {
    public static int constructor = -842892769;
    public String id;
    public String title;
    
    public static TL_paymentSavedCredentialsCard TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_paymentSavedCredentialsCard", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_paymentSavedCredentialsCard localTL_paymentSavedCredentialsCard;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_paymentSavedCredentialsCard)
      {
        return paramAbstractSerializedData;
        localTL_paymentSavedCredentialsCard = new TL_paymentSavedCredentialsCard();
        localTL_paymentSavedCredentialsCard.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readString(paramBoolean);
      this.title = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.id);
      paramAbstractSerializedData.writeString(this.title);
    }
  }
  
  public static class TL_payments_clearSavedInfo
    extends TLObject
  {
    public static int constructor = -667062079;
    public boolean credentials;
    public int flags;
    public boolean info;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.credentials)
      {
        i = this.flags | 0x1;
        this.flags = i;
        if (!this.info) {
          break label65;
        }
      }
      label65:
      for (int i = this.flags | 0x2;; i = this.flags & 0xFFFFFFFD)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        return;
        i = this.flags & 0xFFFFFFFE;
        break;
      }
    }
  }
  
  public static class TL_payments_getPaymentForm
    extends TLObject
  {
    public static int constructor = -NUM;
    public int msg_id;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_payments_paymentForm.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.msg_id);
    }
  }
  
  public static class TL_payments_getPaymentReceipt
    extends TLObject
  {
    public static int constructor = -NUM;
    public int msg_id;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_payments_paymentReceipt.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.msg_id);
    }
  }
  
  public static class TL_payments_getSavedInfo
    extends TLObject
  {
    public static int constructor = 578650699;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_payments_savedInfo.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_payments_paymentForm
    extends TLObject
  {
    public static int constructor = NUM;
    public int bot_id;
    public boolean can_save_credentials;
    public int flags;
    public TLRPC.TL_invoice invoice;
    public TLRPC.TL_dataJSON native_params;
    public String native_provider;
    public boolean password_missing;
    public int provider_id;
    public TLRPC.TL_paymentSavedCredentialsCard saved_credentials;
    public TLRPC.TL_paymentRequestedInfo saved_info;
    public String url;
    public ArrayList<TLRPC.User> users = new ArrayList();
    
    public static TL_payments_paymentForm TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_payments_paymentForm", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_payments_paymentForm localTL_payments_paymentForm;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_payments_paymentForm)
      {
        return paramAbstractSerializedData;
        localTL_payments_paymentForm = new TL_payments_paymentForm();
        localTL_payments_paymentForm.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x4) != 0)
      {
        bool = true;
        this.can_save_credentials = bool;
        if ((this.flags & 0x8) == 0) {
          break label220;
        }
      }
      label220:
      for (boolean bool = true;; bool = false)
      {
        this.password_missing = bool;
        this.bot_id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.invoice = TLRPC.TL_invoice.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        this.provider_id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.url = paramAbstractSerializedData.readString(paramBoolean);
        if ((this.flags & 0x10) != 0) {
          this.native_provider = paramAbstractSerializedData.readString(paramBoolean);
        }
        if ((this.flags & 0x10) != 0) {
          this.native_params = TLRPC.TL_dataJSON.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        }
        if ((this.flags & 0x1) != 0) {
          this.saved_info = TLRPC.TL_paymentRequestedInfo.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        }
        if ((this.flags & 0x2) != 0) {
          this.saved_credentials = TLRPC.TL_paymentSavedCredentialsCard.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        }
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i == 481674261) {
          break label225;
        }
        if (!paramBoolean) {
          break label259;
        }
        throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        bool = false;
        break;
      }
      label225:
      int j = paramAbstractSerializedData.readInt32(paramBoolean);
      for (int i = 0;; i++)
      {
        TLRPC.User localUser;
        if (i < j)
        {
          localUser = TLRPC.User.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localUser != null) {}
        }
        else
        {
          label259:
          return;
        }
        this.users.add(localUser);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.can_save_credentials)
      {
        i = this.flags | 0x4;
        this.flags = i;
        if (!this.password_missing) {
          break label214;
        }
      }
      label214:
      for (int i = this.flags | 0x8;; i = this.flags & 0xFFFFFFF7)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(this.bot_id);
        this.invoice.serializeToStream(paramAbstractSerializedData);
        paramAbstractSerializedData.writeInt32(this.provider_id);
        paramAbstractSerializedData.writeString(this.url);
        if ((this.flags & 0x10) != 0) {
          paramAbstractSerializedData.writeString(this.native_provider);
        }
        if ((this.flags & 0x10) != 0) {
          this.native_params.serializeToStream(paramAbstractSerializedData);
        }
        if ((this.flags & 0x1) != 0) {
          this.saved_info.serializeToStream(paramAbstractSerializedData);
        }
        if ((this.flags & 0x2) != 0) {
          this.saved_credentials.serializeToStream(paramAbstractSerializedData);
        }
        paramAbstractSerializedData.writeInt32(481674261);
        int j = this.users.size();
        paramAbstractSerializedData.writeInt32(j);
        for (i = 0; i < j; i++) {
          ((TLRPC.User)this.users.get(i)).serializeToStream(paramAbstractSerializedData);
        }
        i = this.flags & 0xFFFFFFFB;
        break;
      }
    }
  }
  
  public static class TL_payments_paymentReceipt
    extends TLObject
  {
    public static int constructor = NUM;
    public int bot_id;
    public String credentials_title;
    public String currency;
    public int date;
    public int flags;
    public TLRPC.TL_paymentRequestedInfo info;
    public TLRPC.TL_invoice invoice;
    public int provider_id;
    public TLRPC.TL_shippingOption shipping;
    public long total_amount;
    public ArrayList<TLRPC.User> users = new ArrayList();
    
    public static TL_payments_paymentReceipt TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_payments_paymentReceipt", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_payments_paymentReceipt localTL_payments_paymentReceipt;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_payments_paymentReceipt)
      {
        return paramAbstractSerializedData;
        localTL_payments_paymentReceipt = new TL_payments_paymentReceipt();
        localTL_payments_paymentReceipt.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
      this.bot_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.invoice = TLRPC.TL_invoice.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.provider_id = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0) {
        this.info = TLRPC.TL_paymentRequestedInfo.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      }
      if ((this.flags & 0x2) != 0) {
        this.shipping = TLRPC.TL_shippingOption.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      }
      this.currency = paramAbstractSerializedData.readString(paramBoolean);
      this.total_amount = paramAbstractSerializedData.readInt64(paramBoolean);
      this.credentials_title = paramAbstractSerializedData.readString(paramBoolean);
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
      }
      for (i = 0;; i++)
      {
        TLRPC.User localUser;
        if (i < j)
        {
          localUser = TLRPC.User.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localUser != null) {}
        }
        else
        {
          return;
        }
        this.users.add(localUser);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.flags);
      paramAbstractSerializedData.writeInt32(this.date);
      paramAbstractSerializedData.writeInt32(this.bot_id);
      this.invoice.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(this.provider_id);
      if ((this.flags & 0x1) != 0) {
        this.info.serializeToStream(paramAbstractSerializedData);
      }
      if ((this.flags & 0x2) != 0) {
        this.shipping.serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeString(this.currency);
      paramAbstractSerializedData.writeInt64(this.total_amount);
      paramAbstractSerializedData.writeString(this.credentials_title);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.users.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.User)this.users.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_payments_paymentResult
    extends TLRPC.payments_PaymentResult
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.updates = TLRPC.Updates.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.updates.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_payments_paymentVerficationNeeded
    extends TLRPC.payments_PaymentResult
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.url = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.url);
    }
  }
  
  public static class TL_payments_savedInfo
    extends TLObject
  {
    public static int constructor = -74456004;
    public int flags;
    public boolean has_saved_credentials;
    public TLRPC.TL_paymentRequestedInfo saved_info;
    
    public static TL_payments_savedInfo TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_payments_savedInfo", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_payments_savedInfo localTL_payments_savedInfo;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_payments_savedInfo)
      {
        return paramAbstractSerializedData;
        localTL_payments_savedInfo = new TL_payments_savedInfo();
        localTL_payments_savedInfo.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x2) != 0) {}
      for (boolean bool = true;; bool = false)
      {
        this.has_saved_credentials = bool;
        if ((this.flags & 0x1) != 0) {
          this.saved_info = TLRPC.TL_paymentRequestedInfo.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        }
        return;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.has_saved_credentials) {}
      for (int i = this.flags | 0x2;; i = this.flags & 0xFFFFFFFD)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        if ((this.flags & 0x1) != 0) {
          this.saved_info.serializeToStream(paramAbstractSerializedData);
        }
        return;
      }
    }
  }
  
  public static class TL_payments_sendPaymentForm
    extends TLObject
  {
    public static int constructor = 730364339;
    public TLRPC.InputPaymentCredentials credentials;
    public int flags;
    public int msg_id;
    public String requested_info_id;
    public String shipping_option_id;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.payments_PaymentResult.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.flags);
      paramAbstractSerializedData.writeInt32(this.msg_id);
      if ((this.flags & 0x1) != 0) {
        paramAbstractSerializedData.writeString(this.requested_info_id);
      }
      if ((this.flags & 0x2) != 0) {
        paramAbstractSerializedData.writeString(this.shipping_option_id);
      }
      this.credentials.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_payments_validateRequestedInfo
    extends TLObject
  {
    public static int constructor = NUM;
    public int flags;
    public TLRPC.TL_paymentRequestedInfo info;
    public int msg_id;
    public boolean save;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_payments_validatedRequestedInfo.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.save) {}
      for (int i = this.flags | 0x1;; i = this.flags & 0xFFFFFFFE)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(this.msg_id);
        this.info.serializeToStream(paramAbstractSerializedData);
        return;
      }
    }
  }
  
  public static class TL_payments_validatedRequestedInfo
    extends TLObject
  {
    public static int constructor = -784000893;
    public int flags;
    public String id;
    public ArrayList<TLRPC.TL_shippingOption> shipping_options = new ArrayList();
    
    public static TL_payments_validatedRequestedInfo TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_payments_validatedRequestedInfo", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_payments_validatedRequestedInfo localTL_payments_validatedRequestedInfo;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_payments_validatedRequestedInfo)
      {
        return paramAbstractSerializedData;
        localTL_payments_validatedRequestedInfo = new TL_payments_validatedRequestedInfo();
        localTL_payments_validatedRequestedInfo.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0) {
        this.id = paramAbstractSerializedData.readString(paramBoolean);
      }
      int j;
      if ((this.flags & 0x2) != 0)
      {
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i != 481674261)
        {
          if (paramBoolean) {
            throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
          }
        }
        else {
          j = paramAbstractSerializedData.readInt32(paramBoolean);
        }
      }
      for (int i = 0;; i++)
      {
        TLRPC.TL_shippingOption localTL_shippingOption;
        if (i < j)
        {
          localTL_shippingOption = TLRPC.TL_shippingOption.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localTL_shippingOption != null) {}
        }
        else
        {
          return;
        }
        this.shipping_options.add(localTL_shippingOption);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.flags);
      if ((this.flags & 0x1) != 0) {
        paramAbstractSerializedData.writeString(this.id);
      }
      if ((this.flags & 0x2) != 0)
      {
        paramAbstractSerializedData.writeInt32(481674261);
        int i = this.shipping_options.size();
        paramAbstractSerializedData.writeInt32(i);
        for (int j = 0; j < i; j++) {
          ((TLRPC.TL_shippingOption)this.shipping_options.get(j)).serializeToStream(paramAbstractSerializedData);
        }
      }
    }
  }
  
  public static class TL_peerChannel
    extends TLRPC.Peer
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.channel_id = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.channel_id);
    }
  }
  
  public static class TL_peerChat
    extends TLRPC.Peer
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.chat_id = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.chat_id);
    }
  }
  
  public static class TL_peerNotifyEventsAll
    extends TLRPC.PeerNotifyEvents
  {
    public static int constructor = NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_peerNotifyEventsEmpty
    extends TLRPC.PeerNotifyEvents
  {
    public static int constructor = -NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_peerNotifySettings
    extends TLRPC.PeerNotifySettings
  {
    public static int constructor = -NUM;
    public boolean show_previews;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      boolean bool1 = true;
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0)
      {
        bool2 = true;
        this.show_previews = bool2;
        if ((this.flags & 0x2) == 0) {
          break label72;
        }
      }
      label72:
      for (boolean bool2 = bool1;; bool2 = false)
      {
        this.silent = bool2;
        this.mute_until = paramAbstractSerializedData.readInt32(paramBoolean);
        this.sound = paramAbstractSerializedData.readString(paramBoolean);
        return;
        bool2 = false;
        break;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.show_previews)
      {
        i = this.flags | 0x1;
        this.flags = i;
        if (!this.silent) {
          break label81;
        }
      }
      label81:
      for (int i = this.flags | 0x2;; i = this.flags & 0xFFFFFFFD)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(this.mute_until);
        paramAbstractSerializedData.writeString(this.sound);
        return;
        i = this.flags & 0xFFFFFFFE;
        break;
      }
    }
  }
  
  public static class TL_peerNotifySettingsEmpty
    extends TLRPC.PeerNotifySettings
  {
    public static int constructor = NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_peerNotifySettings_layer47
    extends TLRPC.TL_peerNotifySettings
  {
    public static int constructor = -NUM;
    public boolean show_previews;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.mute_until = paramAbstractSerializedData.readInt32(paramBoolean);
      this.sound = paramAbstractSerializedData.readString(paramBoolean);
      this.show_previews = paramAbstractSerializedData.readBool(paramBoolean);
      this.events_mask = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.mute_until);
      paramAbstractSerializedData.writeString(this.sound);
      paramAbstractSerializedData.writeBool(this.show_previews);
      paramAbstractSerializedData.writeInt32(this.events_mask);
    }
  }
  
  public static class TL_peerSettings
    extends TLObject
  {
    public static int constructor = -NUM;
    public int flags;
    public boolean report_spam;
    
    public static TL_peerSettings TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_peerSettings", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_peerSettings localTL_peerSettings;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_peerSettings)
      {
        return paramAbstractSerializedData;
        localTL_peerSettings = new TL_peerSettings();
        localTL_peerSettings.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0) {}
      for (paramBoolean = true;; paramBoolean = false)
      {
        this.report_spam = paramBoolean;
        return;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.report_spam) {}
      for (int i = this.flags | 0x1;; i = this.flags & 0xFFFFFFFE)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        return;
      }
    }
  }
  
  public static class TL_peerUser
    extends TLRPC.Peer
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.user_id = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.user_id);
    }
  }
  
  public static class TL_phoneCall
    extends TLRPC.PhoneCall
  {
    public static int constructor = -1660057;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
      this.admin_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.participant_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.g_a_or_b = paramAbstractSerializedData.readByteArray(paramBoolean);
      this.key_fingerprint = paramAbstractSerializedData.readInt64(paramBoolean);
      this.protocol = TLRPC.TL_phoneCallProtocol.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.connection = TLRPC.TL_phoneConnection.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      TLRPC.TL_phoneConnection localTL_phoneConnection;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else
      {
        int j = paramAbstractSerializedData.readInt32(paramBoolean);
        i = 0;
        if (i >= j) {
          break label180;
        }
        localTL_phoneConnection = TLRPC.TL_phoneConnection.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localTL_phoneConnection != null) {
          break label164;
        }
      }
      for (;;)
      {
        return;
        label164:
        this.alternative_connections.add(localTL_phoneConnection);
        i++;
        break;
        label180:
        this.start_date = paramAbstractSerializedData.readInt32(paramBoolean);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.id);
      paramAbstractSerializedData.writeInt64(this.access_hash);
      paramAbstractSerializedData.writeInt32(this.date);
      paramAbstractSerializedData.writeInt32(this.admin_id);
      paramAbstractSerializedData.writeInt32(this.participant_id);
      paramAbstractSerializedData.writeByteArray(this.g_a_or_b);
      paramAbstractSerializedData.writeInt64(this.key_fingerprint);
      this.protocol.serializeToStream(paramAbstractSerializedData);
      this.connection.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.alternative_connections.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.TL_phoneConnection)this.alternative_connections.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(this.start_date);
    }
  }
  
  public static class TL_phoneCallAccepted
    extends TLRPC.PhoneCall
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
      this.admin_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.participant_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.g_b = paramAbstractSerializedData.readByteArray(paramBoolean);
      this.protocol = TLRPC.TL_phoneCallProtocol.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.id);
      paramAbstractSerializedData.writeInt64(this.access_hash);
      paramAbstractSerializedData.writeInt32(this.date);
      paramAbstractSerializedData.writeInt32(this.admin_id);
      paramAbstractSerializedData.writeInt32(this.participant_id);
      paramAbstractSerializedData.writeByteArray(this.g_b);
      this.protocol.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_phoneCallDiscardReasonAllowGroupCall
    extends TLRPC.PhoneCallDiscardReason
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.encrypted_key = paramAbstractSerializedData.readByteArray(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeByteArray(this.encrypted_key);
    }
  }
  
  public static class TL_phoneCallDiscardReasonBusy
    extends TLRPC.PhoneCallDiscardReason
  {
    public static int constructor = -84416311;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_phoneCallDiscardReasonDisconnect
    extends TLRPC.PhoneCallDiscardReason
  {
    public static int constructor = -527056480;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_phoneCallDiscardReasonHangup
    extends TLRPC.PhoneCallDiscardReason
  {
    public static int constructor = NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_phoneCallDiscardReasonMissed
    extends TLRPC.PhoneCallDiscardReason
  {
    public static int constructor = -NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_phoneCallDiscarded
    extends TLRPC.PhoneCall
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      boolean bool1 = true;
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x4) != 0)
      {
        bool2 = true;
        this.need_rating = bool2;
        if ((this.flags & 0x8) == 0) {
          break label105;
        }
      }
      label105:
      for (boolean bool2 = bool1;; bool2 = false)
      {
        this.need_debug = bool2;
        this.id = paramAbstractSerializedData.readInt64(paramBoolean);
        if ((this.flags & 0x1) != 0) {
          this.reason = TLRPC.PhoneCallDiscardReason.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        }
        if ((this.flags & 0x2) != 0) {
          this.duration = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        return;
        bool2 = false;
        break;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.need_rating)
      {
        i = this.flags | 0x4;
        this.flags = i;
        if (!this.need_debug) {
          break label108;
        }
      }
      label108:
      for (int i = this.flags | 0x8;; i = this.flags & 0xFFFFFFF7)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt64(this.id);
        if ((this.flags & 0x1) != 0) {
          this.reason.serializeToStream(paramAbstractSerializedData);
        }
        if ((this.flags & 0x2) != 0) {
          paramAbstractSerializedData.writeInt32(this.duration);
        }
        return;
        i = this.flags & 0xFFFFFFFB;
        break;
      }
    }
  }
  
  public static class TL_phoneCallEmpty
    extends TLRPC.PhoneCall
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt64(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.id);
    }
  }
  
  public static class TL_phoneCallProtocol
    extends TLObject
  {
    public static int constructor = -NUM;
    public int flags;
    public int max_layer;
    public int min_layer;
    public boolean udp_p2p;
    public boolean udp_reflector;
    
    public static TL_phoneCallProtocol TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_phoneCallProtocol", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_phoneCallProtocol localTL_phoneCallProtocol;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_phoneCallProtocol)
      {
        return paramAbstractSerializedData;
        localTL_phoneCallProtocol = new TL_phoneCallProtocol();
        localTL_phoneCallProtocol.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      boolean bool1 = true;
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0)
      {
        bool2 = true;
        this.udp_p2p = bool2;
        if ((this.flags & 0x2) == 0) {
          break label72;
        }
      }
      label72:
      for (boolean bool2 = bool1;; bool2 = false)
      {
        this.udp_reflector = bool2;
        this.min_layer = paramAbstractSerializedData.readInt32(paramBoolean);
        this.max_layer = paramAbstractSerializedData.readInt32(paramBoolean);
        return;
        bool2 = false;
        break;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.udp_p2p)
      {
        i = this.flags | 0x1;
        this.flags = i;
        if (!this.udp_reflector) {
          break label81;
        }
      }
      label81:
      for (int i = this.flags | 0x2;; i = this.flags & 0xFFFFFFFD)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(this.min_layer);
        paramAbstractSerializedData.writeInt32(this.max_layer);
        return;
        i = this.flags & 0xFFFFFFFE;
        break;
      }
    }
  }
  
  public static class TL_phoneCallRequested
    extends TLRPC.PhoneCall
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
      this.admin_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.participant_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.g_a_hash = paramAbstractSerializedData.readByteArray(paramBoolean);
      this.protocol = TLRPC.TL_phoneCallProtocol.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.id);
      paramAbstractSerializedData.writeInt64(this.access_hash);
      paramAbstractSerializedData.writeInt32(this.date);
      paramAbstractSerializedData.writeInt32(this.admin_id);
      paramAbstractSerializedData.writeInt32(this.participant_id);
      paramAbstractSerializedData.writeByteArray(this.g_a_hash);
      this.protocol.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_phoneCallWaiting
    extends TLRPC.PhoneCall
  {
    public static int constructor = 462375633;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      this.id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
      this.admin_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.participant_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.protocol = TLRPC.TL_phoneCallProtocol.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      if ((this.flags & 0x1) != 0) {
        this.receive_date = paramAbstractSerializedData.readInt32(paramBoolean);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.flags);
      paramAbstractSerializedData.writeInt64(this.id);
      paramAbstractSerializedData.writeInt64(this.access_hash);
      paramAbstractSerializedData.writeInt32(this.date);
      paramAbstractSerializedData.writeInt32(this.admin_id);
      paramAbstractSerializedData.writeInt32(this.participant_id);
      this.protocol.serializeToStream(paramAbstractSerializedData);
      if ((this.flags & 0x1) != 0) {
        paramAbstractSerializedData.writeInt32(this.receive_date);
      }
    }
  }
  
  public static class TL_phoneConnection
    extends TLObject
  {
    public static int constructor = -NUM;
    public long id;
    public String ip;
    public String ipv6;
    public byte[] peer_tag;
    public int port;
    
    public static TL_phoneConnection TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_phoneConnection", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_phoneConnection localTL_phoneConnection;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_phoneConnection)
      {
        return paramAbstractSerializedData;
        localTL_phoneConnection = new TL_phoneConnection();
        localTL_phoneConnection.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.ip = paramAbstractSerializedData.readString(paramBoolean);
      this.ipv6 = paramAbstractSerializedData.readString(paramBoolean);
      this.port = paramAbstractSerializedData.readInt32(paramBoolean);
      this.peer_tag = paramAbstractSerializedData.readByteArray(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.id);
      paramAbstractSerializedData.writeString(this.ip);
      paramAbstractSerializedData.writeString(this.ipv6);
      paramAbstractSerializedData.writeInt32(this.port);
      paramAbstractSerializedData.writeByteArray(this.peer_tag);
    }
  }
  
  public static class TL_phone_acceptCall
    extends TLObject
  {
    public static int constructor = NUM;
    public byte[] g_b;
    public TLRPC.TL_inputPhoneCall peer;
    public TLRPC.TL_phoneCallProtocol protocol;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_phone_phoneCall.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.peer.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeByteArray(this.g_b);
      this.protocol.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_phone_confirmCall
    extends TLObject
  {
    public static int constructor = 788404002;
    public byte[] g_a;
    public long key_fingerprint;
    public TLRPC.TL_inputPhoneCall peer;
    public TLRPC.TL_phoneCallProtocol protocol;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_phone_phoneCall.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.peer.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeByteArray(this.g_a);
      paramAbstractSerializedData.writeInt64(this.key_fingerprint);
      this.protocol.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_phone_createGroupCall
    extends TLObject
  {
    public static int constructor = -NUM;
    public TLRPC.InputChannel channel;
    public byte[] encryption_key;
    public int flags;
    public long key_fingerprint;
    public TLRPC.TL_phoneCallProtocol protocol;
    public int random_id;
    public byte[] streams;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Updates.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.flags);
      this.channel.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(this.random_id);
      this.protocol.serializeToStream(paramAbstractSerializedData);
      if ((this.flags & 0x1) != 0) {
        paramAbstractSerializedData.writeByteArray(this.encryption_key);
      }
      paramAbstractSerializedData.writeInt64(this.key_fingerprint);
      paramAbstractSerializedData.writeByteArray(this.streams);
    }
  }
  
  public static class TL_phone_discardCall
    extends TLObject
  {
    public static int constructor = NUM;
    public long connection_id;
    public int duration;
    public TLRPC.TL_inputPhoneCall peer;
    public TLRPC.PhoneCallDiscardReason reason;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Updates.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.peer.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(this.duration);
      this.reason.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt64(this.connection_id);
    }
  }
  
  public static class TL_phone_discardGroupCall
    extends TLObject
  {
    public static int constructor = NUM;
    public TLRPC.TL_inputGroupCall call;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Updates.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.call.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_phone_editGroupCallMember
    extends TLObject
  {
    public static int constructor = NUM;
    public TLRPC.TL_inputGroupCall call;
    public int flags;
    public boolean kicked;
    public boolean readonly;
    public byte[] streams;
    public TLRPC.InputUser user_id;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Updates.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.readonly)
      {
        i = this.flags | 0x1;
        this.flags = i;
        if (!this.kicked) {
          break label98;
        }
      }
      label98:
      for (int i = this.flags | 0x2;; i = this.flags & 0xFFFFFFFD)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        this.call.serializeToStream(paramAbstractSerializedData);
        this.user_id.serializeToStream(paramAbstractSerializedData);
        if ((this.flags & 0x4) != 0) {
          paramAbstractSerializedData.writeByteArray(this.streams);
        }
        return;
        i = this.flags & 0xFFFFFFFE;
        break;
      }
    }
  }
  
  public static class TL_phone_getCall
    extends TLObject
  {
    public static int constructor = -NUM;
    public TLRPC.TL_inputPhoneCall peer;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_phone_phoneCall.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.peer.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_phone_getCallConfig
    extends TLObject
  {
    public static int constructor = NUM;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_dataJSON.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_phone_getGroupCall
    extends TLObject
  {
    public static int constructor = 209498135;
    public TLRPC.TL_inputGroupCall call;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_phone_groupCall.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.call.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_phone_groupCall
    extends TLObject
  {
    public static int constructor = NUM;
    public TLRPC.GroupCall call;
    public ArrayList<TLRPC.Chat> chats = new ArrayList();
    public ArrayList<TLRPC.GroupCallParticipant> participants = new ArrayList();
    public ArrayList<TLRPC.User> users = new ArrayList();
    
    public static TL_phone_groupCall TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_phone_groupCall", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_phone_groupCall localTL_phone_groupCall;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_phone_groupCall)
      {
        return paramAbstractSerializedData;
        localTL_phone_groupCall = new TL_phone_groupCall();
        localTL_phone_groupCall.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.call = TLRPC.GroupCall.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      Object localObject;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else
      {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
        i = 0;
        if (i >= j) {
          break label103;
        }
        localObject = TLRPC.GroupCallParticipant.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localObject != null) {
          break label87;
        }
      }
      label87:
      label103:
      label191:
      label277:
      for (;;)
      {
        return;
        this.participants.add(localObject);
        i++;
        break;
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i != 481674261)
        {
          if (paramBoolean) {
            throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
          }
        }
        else
        {
          j = paramAbstractSerializedData.readInt32(paramBoolean);
          for (i = 0;; i++)
          {
            if (i >= j) {
              break label191;
            }
            localObject = TLRPC.Chat.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
            if (localObject == null) {
              break;
            }
            this.chats.add(localObject);
          }
          i = paramAbstractSerializedData.readInt32(paramBoolean);
          if (i != 481674261)
          {
            if (paramBoolean) {
              throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
            }
          }
          else
          {
            j = paramAbstractSerializedData.readInt32(paramBoolean);
            for (i = 0;; i++)
            {
              if (i >= j) {
                break label277;
              }
              localObject = TLRPC.User.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
              if (localObject == null) {
                break;
              }
              this.users.add(localObject);
            }
          }
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.call.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.participants.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.GroupCallParticipant)this.participants.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.chats.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        ((TLRPC.Chat)this.chats.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.users.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        ((TLRPC.User)this.users.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_phone_inviteGroupCallMembers
    extends TLObject
  {
    public static int constructor = -862804260;
    public TLRPC.TL_inputGroupCall call;
    public int flags;
    public boolean uninvite;
    public ArrayList<TLRPC.InputUser> users = new ArrayList();
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.uninvite) {}
      for (int i = this.flags | 0x1;; i = this.flags & 0xFFFFFFFE)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        this.call.serializeToStream(paramAbstractSerializedData);
        paramAbstractSerializedData.writeInt32(481674261);
        int j = this.users.size();
        paramAbstractSerializedData.writeInt32(j);
        for (i = 0; i < j; i++) {
          ((TLRPC.InputUser)this.users.get(i)).serializeToStream(paramAbstractSerializedData);
        }
      }
    }
  }
  
  public static class TL_phone_joinGroupCall
    extends TLObject
  {
    public static int constructor = 165360343;
    public TLRPC.TL_inputGroupCall call;
    public long key_fingerprint;
    public byte[] streams;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Updates.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.call.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeByteArray(this.streams);
      paramAbstractSerializedData.writeInt64(this.key_fingerprint);
    }
  }
  
  public static class TL_phone_leaveGroupCall
    extends TLObject
  {
    public static int constructor = NUM;
    public TLRPC.TL_inputGroupCall call;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Updates.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.call.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_phone_phoneCall
    extends TLObject
  {
    public static int constructor = -326966976;
    public TLRPC.PhoneCall phone_call;
    public ArrayList<TLRPC.User> users = new ArrayList();
    
    public static TL_phone_phoneCall TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_phone_phoneCall", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_phone_phoneCall localTL_phone_phoneCall;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_phone_phoneCall)
      {
        return paramAbstractSerializedData;
        localTL_phone_phoneCall = new TL_phone_phoneCall();
        localTL_phone_phoneCall.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.phone_call = TLRPC.PhoneCall.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
      }
      for (i = 0;; i++)
      {
        TLRPC.User localUser;
        if (i < j)
        {
          localUser = TLRPC.User.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localUser != null) {}
        }
        else
        {
          return;
        }
        this.users.add(localUser);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.phone_call.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.users.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.User)this.users.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_phone_receivedCall
    extends TLObject
  {
    public static int constructor = 399855457;
    public TLRPC.TL_inputPhoneCall peer;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.peer.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_phone_requestCall
    extends TLObject
  {
    public static int constructor = NUM;
    public byte[] g_a_hash;
    public TLRPC.TL_phoneCallProtocol protocol;
    public int random_id;
    public TLRPC.InputUser user_id;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_phone_phoneCall.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.user_id.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(this.random_id);
      paramAbstractSerializedData.writeByteArray(this.g_a_hash);
      this.protocol.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_phone_saveCallDebug
    extends TLObject
  {
    public static int constructor = 662363518;
    public TLRPC.TL_dataJSON debug;
    public TLRPC.TL_inputPhoneCall peer;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.peer.serializeToStream(paramAbstractSerializedData);
      this.debug.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_phone_setCallRating
    extends TLObject
  {
    public static int constructor = 475228724;
    public String comment;
    public TLRPC.TL_inputPhoneCall peer;
    public int rating;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Updates.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.peer.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(this.rating);
      paramAbstractSerializedData.writeString(this.comment);
    }
  }
  
  public static class TL_phone_upgradePhoneCall
    extends TLObject
  {
    public static int constructor = -NUM;
    public byte[] encryption_key;
    public int flags;
    public long key_fingerprint;
    public TLRPC.TL_inputPhoneCall peer;
    public byte[] streams;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_phone_groupCall.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.flags);
      this.peer.serializeToStream(paramAbstractSerializedData);
      if ((this.flags & 0x1) != 0) {
        paramAbstractSerializedData.writeByteArray(this.encryption_key);
      }
      paramAbstractSerializedData.writeInt64(this.key_fingerprint);
      paramAbstractSerializedData.writeByteArray(this.streams);
    }
  }
  
  public static class TL_photo
    extends TLRPC.Photo
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0) {}
      for (boolean bool = true;; bool = false)
      {
        this.has_stickers = bool;
        this.id = paramAbstractSerializedData.readInt64(paramBoolean);
        this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
        this.date = paramAbstractSerializedData.readInt32(paramBoolean);
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i == 481674261) {
          break;
        }
        if (!paramBoolean) {
          break label134;
        }
        throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
      }
      int j = paramAbstractSerializedData.readInt32(paramBoolean);
      for (int i = 0;; i++)
      {
        TLRPC.PhotoSize localPhotoSize;
        if (i < j)
        {
          localPhotoSize = TLRPC.PhotoSize.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localPhotoSize != null) {}
        }
        else
        {
          label134:
          return;
        }
        this.sizes.add(localPhotoSize);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.has_stickers) {}
      for (int i = this.flags | 0x1;; i = this.flags & 0xFFFFFFFE)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt64(this.id);
        paramAbstractSerializedData.writeInt64(this.access_hash);
        paramAbstractSerializedData.writeInt32(this.date);
        paramAbstractSerializedData.writeInt32(481674261);
        int j = this.sizes.size();
        paramAbstractSerializedData.writeInt32(j);
        for (i = 0; i < j; i++) {
          ((TLRPC.PhotoSize)this.sizes.get(i)).serializeToStream(paramAbstractSerializedData);
        }
      }
    }
  }
  
  public static class TL_photoCachedSize
    extends TLRPC.PhotoSize
  {
    public static int constructor = -374917894;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.type = paramAbstractSerializedData.readString(paramBoolean);
      this.location = TLRPC.FileLocation.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.w = paramAbstractSerializedData.readInt32(paramBoolean);
      this.h = paramAbstractSerializedData.readInt32(paramBoolean);
      this.bytes = paramAbstractSerializedData.readByteArray(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.type);
      this.location.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(this.w);
      paramAbstractSerializedData.writeInt32(this.h);
      paramAbstractSerializedData.writeByteArray(this.bytes);
    }
  }
  
  public static class TL_photoEmpty
    extends TLRPC.Photo
  {
    public static int constructor = 590459437;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt64(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.id);
    }
  }
  
  public static class TL_photoSize
    extends TLRPC.PhotoSize
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.type = paramAbstractSerializedData.readString(paramBoolean);
      this.location = TLRPC.FileLocation.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.w = paramAbstractSerializedData.readInt32(paramBoolean);
      this.h = paramAbstractSerializedData.readInt32(paramBoolean);
      this.size = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.type);
      this.location.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(this.w);
      paramAbstractSerializedData.writeInt32(this.h);
      paramAbstractSerializedData.writeInt32(this.size);
    }
  }
  
  public static class TL_photoSizeEmpty
    extends TLRPC.PhotoSize
  {
    public static int constructor = 236446268;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.type = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.type);
    }
  }
  
  public static class TL_photo_layer55
    extends TLRPC.TL_photo
  {
    public static int constructor = -840088834;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
      }
      for (i = 0;; i++)
      {
        TLRPC.PhotoSize localPhotoSize;
        if (i < j)
        {
          localPhotoSize = TLRPC.PhotoSize.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localPhotoSize != null) {}
        }
        else
        {
          return;
        }
        this.sizes.add(localPhotoSize);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.id);
      paramAbstractSerializedData.writeInt64(this.access_hash);
      paramAbstractSerializedData.writeInt32(this.date);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.sizes.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.PhotoSize)this.sizes.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_photo_old
    extends TLRPC.TL_photo
  {
    public static int constructor = 582313809;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
      this.user_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
      paramAbstractSerializedData.readString(paramBoolean);
      this.geo = TLRPC.GeoPoint.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
      }
      for (i = 0;; i++)
      {
        TLRPC.PhotoSize localPhotoSize;
        if (i < j)
        {
          localPhotoSize = TLRPC.PhotoSize.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localPhotoSize != null) {}
        }
        else
        {
          return;
        }
        this.sizes.add(localPhotoSize);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.id);
      paramAbstractSerializedData.writeInt64(this.access_hash);
      paramAbstractSerializedData.writeInt32(this.user_id);
      paramAbstractSerializedData.writeInt32(this.date);
      paramAbstractSerializedData.writeString("");
      this.geo.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.sizes.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.PhotoSize)this.sizes.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_photo_old2
    extends TLRPC.TL_photo
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
      this.user_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
      this.geo = TLRPC.GeoPoint.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
      }
      for (i = 0;; i++)
      {
        TLRPC.PhotoSize localPhotoSize;
        if (i < j)
        {
          localPhotoSize = TLRPC.PhotoSize.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localPhotoSize != null) {}
        }
        else
        {
          return;
        }
        this.sizes.add(localPhotoSize);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.id);
      paramAbstractSerializedData.writeInt64(this.access_hash);
      paramAbstractSerializedData.writeInt32(this.user_id);
      paramAbstractSerializedData.writeInt32(this.date);
      this.geo.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.sizes.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.PhotoSize)this.sizes.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_photos_deletePhotos
    extends TLObject
  {
    public static int constructor = -NUM;
    public ArrayList<TLRPC.InputPhoto> id = new ArrayList();
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      TLRPC.Vector localVector = new TLRPC.Vector();
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      for (paramInt = 0; paramInt < i; paramInt++) {
        localVector.objects.add(Long.valueOf(paramAbstractSerializedData.readInt64(paramBoolean)));
      }
      return localVector;
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.id.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.InputPhoto)this.id.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_photos_getUserPhotos
    extends TLObject
  {
    public static int constructor = -NUM;
    public int limit;
    public long max_id;
    public int offset;
    public TLRPC.InputUser user_id;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.photos_Photos.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.user_id.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(this.offset);
      paramAbstractSerializedData.writeInt64(this.max_id);
      paramAbstractSerializedData.writeInt32(this.limit);
    }
  }
  
  public static class TL_photos_photo
    extends TLObject
  {
    public static int constructor = 539045032;
    public TLRPC.Photo photo;
    public ArrayList<TLRPC.User> users = new ArrayList();
    
    public static TL_photos_photo TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_photos_photo", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_photos_photo localTL_photos_photo;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_photos_photo)
      {
        return paramAbstractSerializedData;
        localTL_photos_photo = new TL_photos_photo();
        localTL_photos_photo.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.photo = TLRPC.Photo.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
      }
      for (i = 0;; i++)
      {
        TLRPC.User localUser;
        if (i < j)
        {
          localUser = TLRPC.User.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localUser != null) {}
        }
        else
        {
          return;
        }
        this.users.add(localUser);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.photo.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.users.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.User)this.users.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_photos_photos
    extends TLRPC.photos_Photos
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      Object localObject;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else
      {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
        i = 0;
        if (i >= j) {
          break label89;
        }
        localObject = TLRPC.Photo.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localObject != null) {
          break label73;
        }
      }
      label73:
      label89:
      label175:
      for (;;)
      {
        return;
        this.photos.add(localObject);
        i++;
        break;
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i != 481674261)
        {
          if (paramBoolean) {
            throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
          }
        }
        else
        {
          j = paramAbstractSerializedData.readInt32(paramBoolean);
          for (i = 0;; i++)
          {
            if (i >= j) {
              break label175;
            }
            localObject = TLRPC.User.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
            if (localObject == null) {
              break;
            }
            this.users.add(localObject);
          }
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.photos.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.Photo)this.photos.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.users.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        ((TLRPC.User)this.users.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_photos_photosSlice
    extends TLRPC.photos_Photos
  {
    public static int constructor = 352657236;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.count = paramAbstractSerializedData.readInt32(paramBoolean);
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      Object localObject;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else
      {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
        i = 0;
        if (i >= j) {
          break label98;
        }
        localObject = TLRPC.Photo.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localObject != null) {
          break label82;
        }
      }
      label82:
      label98:
      label184:
      for (;;)
      {
        return;
        this.photos.add(localObject);
        i++;
        break;
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i != 481674261)
        {
          if (paramBoolean) {
            throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
          }
        }
        else
        {
          j = paramAbstractSerializedData.readInt32(paramBoolean);
          for (i = 0;; i++)
          {
            if (i >= j) {
              break label184;
            }
            localObject = TLRPC.User.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
            if (localObject == null) {
              break;
            }
            this.users.add(localObject);
          }
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.count);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.photos.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.Photo)this.photos.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.users.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        ((TLRPC.User)this.users.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_photos_updateProfilePhoto
    extends TLObject
  {
    public static int constructor = -256159406;
    public TLRPC.InputPhoto id;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.UserProfilePhoto.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.id.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_photos_uploadProfilePhoto
    extends TLObject
  {
    public static int constructor = NUM;
    public TLRPC.InputFile file;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_photos_photo.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.file.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_popularContact
    extends TLObject
  {
    public static int constructor = NUM;
    public long client_id;
    public int importers;
    
    public static TL_popularContact TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_popularContact", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_popularContact localTL_popularContact;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_popularContact)
      {
        return paramAbstractSerializedData;
        localTL_popularContact = new TL_popularContact();
        localTL_popularContact.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.client_id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.importers = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.client_id);
      paramAbstractSerializedData.writeInt32(this.importers);
    }
  }
  
  public static class TL_postAddress
    extends TLObject
  {
    public static int constructor = 512535275;
    public String city;
    public String country_iso2;
    public String post_code;
    public String state;
    public String street_line1;
    public String street_line2;
    
    public static TL_postAddress TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_postAddress", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_postAddress localTL_postAddress;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_postAddress)
      {
        return paramAbstractSerializedData;
        localTL_postAddress = new TL_postAddress();
        localTL_postAddress.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.street_line1 = paramAbstractSerializedData.readString(paramBoolean);
      this.street_line2 = paramAbstractSerializedData.readString(paramBoolean);
      this.city = paramAbstractSerializedData.readString(paramBoolean);
      this.state = paramAbstractSerializedData.readString(paramBoolean);
      this.country_iso2 = paramAbstractSerializedData.readString(paramBoolean);
      this.post_code = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.street_line1);
      paramAbstractSerializedData.writeString(this.street_line2);
      paramAbstractSerializedData.writeString(this.city);
      paramAbstractSerializedData.writeString(this.state);
      paramAbstractSerializedData.writeString(this.country_iso2);
      paramAbstractSerializedData.writeString(this.post_code);
    }
  }
  
  public static class TL_privacyKeyChatInvite
    extends TLRPC.PrivacyKey
  {
    public static int constructor = NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_privacyKeyPhoneCall
    extends TLRPC.PrivacyKey
  {
    public static int constructor = NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_privacyKeyStatusTimestamp
    extends TLRPC.PrivacyKey
  {
    public static int constructor = -NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_privacyValueAllowAll
    extends TLRPC.PrivacyRule
  {
    public static int constructor = NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_privacyValueAllowContacts
    extends TLRPC.PrivacyRule
  {
    public static int constructor = -123988;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_privacyValueAllowUsers
    extends TLRPC.PrivacyRule
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else
      {
        int j = paramAbstractSerializedData.readInt32(paramBoolean);
        for (i = 0; i < j; i++) {
          this.users.add(Integer.valueOf(paramAbstractSerializedData.readInt32(paramBoolean)));
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.users.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        paramAbstractSerializedData.writeInt32(((Integer)this.users.get(j)).intValue());
      }
    }
  }
  
  public static class TL_privacyValueDisallowAll
    extends TLRPC.PrivacyRule
  {
    public static int constructor = -NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_privacyValueDisallowContacts
    extends TLRPC.PrivacyRule
  {
    public static int constructor = -125240806;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_privacyValueDisallowUsers
    extends TLRPC.PrivacyRule
  {
    public static int constructor = 209668535;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else
      {
        int j = paramAbstractSerializedData.readInt32(paramBoolean);
        for (i = 0; i < j; i++) {
          this.users.add(Integer.valueOf(paramAbstractSerializedData.readInt32(paramBoolean)));
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.users.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        paramAbstractSerializedData.writeInt32(((Integer)this.users.get(j)).intValue());
      }
    }
  }
  
  public static class TL_receivedNotifyMessage
    extends TLObject
  {
    public static int constructor = -NUM;
    public int flags;
    public int id;
    
    public static TL_receivedNotifyMessage TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_receivedNotifyMessage", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_receivedNotifyMessage localTL_receivedNotifyMessage;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_receivedNotifyMessage)
      {
        return paramAbstractSerializedData;
        localTL_receivedNotifyMessage = new TL_receivedNotifyMessage();
        localTL_receivedNotifyMessage.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.id);
      paramAbstractSerializedData.writeInt32(this.flags);
    }
  }
  
  public static class TL_recentMeUrlChat
    extends TLRPC.RecentMeUrl
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.url = paramAbstractSerializedData.readString(paramBoolean);
      this.chat_id = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.url);
      paramAbstractSerializedData.writeInt32(this.chat_id);
    }
  }
  
  public static class TL_recentMeUrlChatInvite
    extends TLRPC.RecentMeUrl
  {
    public static int constructor = -347535331;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.url = paramAbstractSerializedData.readString(paramBoolean);
      this.chat_invite = TLRPC.ChatInvite.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.url);
      this.chat_invite.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_recentMeUrlStickerSet
    extends TLRPC.RecentMeUrl
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.url = paramAbstractSerializedData.readString(paramBoolean);
      this.set = TLRPC.StickerSetCovered.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.url);
      this.set.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_recentMeUrlUnknown
    extends TLRPC.RecentMeUrl
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.url = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.url);
    }
  }
  
  public static class TL_recentMeUrlUser
    extends TLRPC.RecentMeUrl
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.url = paramAbstractSerializedData.readString(paramBoolean);
      this.user_id = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.url);
      paramAbstractSerializedData.writeInt32(this.user_id);
    }
  }
  
  public static class TL_replyInlineMarkup
    extends TLRPC.ReplyMarkup
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
      }
      for (i = 0;; i++)
      {
        TLRPC.TL_keyboardButtonRow localTL_keyboardButtonRow;
        if (i < j)
        {
          localTL_keyboardButtonRow = TLRPC.TL_keyboardButtonRow.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localTL_keyboardButtonRow != null) {}
        }
        else
        {
          return;
        }
        this.rows.add(localTL_keyboardButtonRow);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.rows.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.TL_keyboardButtonRow)this.rows.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_replyKeyboardForceReply
    extends TLRPC.ReplyMarkup
  {
    public static int constructor = -200242528;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      boolean bool = true;
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x2) != 0)
      {
        paramBoolean = true;
        this.single_use = paramBoolean;
        if ((this.flags & 0x4) == 0) {
          break label49;
        }
      }
      label49:
      for (paramBoolean = bool;; paramBoolean = false)
      {
        this.selective = paramBoolean;
        return;
        paramBoolean = false;
        break;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.single_use)
      {
        i = this.flags | 0x2;
        this.flags = i;
        if (!this.selective) {
          break label65;
        }
      }
      label65:
      for (int i = this.flags | 0x4;; i = this.flags & 0xFFFFFFFB)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        return;
        i = this.flags & 0xFFFFFFFD;
        break;
      }
    }
  }
  
  public static class TL_replyKeyboardHide
    extends TLRPC.ReplyMarkup
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x4) != 0) {}
      for (paramBoolean = true;; paramBoolean = false)
      {
        this.selective = paramBoolean;
        return;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.selective) {}
      for (int i = this.flags | 0x4;; i = this.flags & 0xFFFFFFFB)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        return;
      }
    }
  }
  
  public static class TL_replyKeyboardMarkup
    extends TLRPC.ReplyMarkup
  {
    public static int constructor = 889353612;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0)
      {
        bool = true;
        this.resize = bool;
        if ((this.flags & 0x2) == 0) {
          break label105;
        }
        bool = true;
        label36:
        this.single_use = bool;
        if ((this.flags & 0x4) == 0) {
          break label110;
        }
      }
      label105:
      label110:
      for (boolean bool = true;; bool = false)
      {
        this.selective = bool;
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i == 481674261) {
          break label115;
        }
        if (!paramBoolean) {
          break label149;
        }
        throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        bool = false;
        break;
        bool = false;
        break label36;
      }
      label115:
      int j = paramAbstractSerializedData.readInt32(paramBoolean);
      for (int i = 0;; i++)
      {
        TLRPC.TL_keyboardButtonRow localTL_keyboardButtonRow;
        if (i < j)
        {
          localTL_keyboardButtonRow = TLRPC.TL_keyboardButtonRow.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localTL_keyboardButtonRow != null) {}
        }
        else
        {
          label149:
          return;
        }
        this.rows.add(localTL_keyboardButtonRow);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.resize)
      {
        i = this.flags | 0x1;
        this.flags = i;
        if (!this.single_use) {
          break label130;
        }
        i = this.flags | 0x2;
        label40:
        this.flags = i;
        if (!this.selective) {
          break label141;
        }
      }
      label130:
      label141:
      for (int i = this.flags | 0x4;; i = this.flags & 0xFFFFFFFB)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(481674261);
        int j = this.rows.size();
        paramAbstractSerializedData.writeInt32(j);
        for (i = 0; i < j; i++) {
          ((TLRPC.TL_keyboardButtonRow)this.rows.get(i)).serializeToStream(paramAbstractSerializedData);
        }
        i = this.flags & 0xFFFFFFFE;
        break;
        i = this.flags & 0xFFFFFFFD;
        break label40;
      }
    }
  }
  
  public static class TL_sendMessageCancelAction
    extends TLRPC.SendMessageAction
  {
    public static int constructor = -44119819;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_sendMessageChooseContactAction
    extends TLRPC.SendMessageAction
  {
    public static int constructor = NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_sendMessageGamePlayAction
    extends TLRPC.SendMessageAction
  {
    public static int constructor = -580219064;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_sendMessageGeoLocationAction
    extends TLRPC.SendMessageAction
  {
    public static int constructor = 393186209;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_sendMessageRecordAudioAction
    extends TLRPC.SendMessageAction
  {
    public static int constructor = -718310409;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_sendMessageRecordRoundAction
    extends TLRPC.SendMessageAction
  {
    public static int constructor = -NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_sendMessageRecordVideoAction
    extends TLRPC.SendMessageAction
  {
    public static int constructor = -NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_sendMessageTypingAction
    extends TLRPC.SendMessageAction
  {
    public static int constructor = 381645902;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_sendMessageUploadAudioAction
    extends TLRPC.SendMessageAction
  {
    public static int constructor = -212740181;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.progress = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.progress);
    }
  }
  
  public static class TL_sendMessageUploadAudioAction_old
    extends TLRPC.TL_sendMessageUploadAudioAction
  {
    public static int constructor = -424899985;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean) {}
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_sendMessageUploadDocumentAction
    extends TLRPC.SendMessageAction
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.progress = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.progress);
    }
  }
  
  public static class TL_sendMessageUploadDocumentAction_old
    extends TLRPC.TL_sendMessageUploadDocumentAction
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean) {}
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_sendMessageUploadPhotoAction
    extends TLRPC.SendMessageAction
  {
    public static int constructor = -774682074;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.progress = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.progress);
    }
  }
  
  public static class TL_sendMessageUploadPhotoAction_old
    extends TLRPC.TL_sendMessageUploadPhotoAction
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean) {}
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_sendMessageUploadRoundAction
    extends TLRPC.SendMessageAction
  {
    public static int constructor = 608050278;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.progress = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.progress);
    }
  }
  
  public static class TL_sendMessageUploadVideoAction
    extends TLRPC.SendMessageAction
  {
    public static int constructor = -378127636;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.progress = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.progress);
    }
  }
  
  public static class TL_sendMessageUploadVideoAction_old
    extends TLRPC.TL_sendMessageUploadVideoAction
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean) {}
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_shippingOption
    extends TLObject
  {
    public static int constructor = -NUM;
    public String id;
    public ArrayList<TLRPC.TL_labeledPrice> prices = new ArrayList();
    public String title;
    
    public static TL_shippingOption TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_shippingOption", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_shippingOption localTL_shippingOption;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_shippingOption)
      {
        return paramAbstractSerializedData;
        localTL_shippingOption = new TL_shippingOption();
        localTL_shippingOption.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readString(paramBoolean);
      this.title = paramAbstractSerializedData.readString(paramBoolean);
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
      }
      for (i = 0;; i++)
      {
        TLRPC.TL_labeledPrice localTL_labeledPrice;
        if (i < j)
        {
          localTL_labeledPrice = TLRPC.TL_labeledPrice.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localTL_labeledPrice != null) {}
        }
        else
        {
          return;
        }
        this.prices.add(localTL_labeledPrice);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.id);
      paramAbstractSerializedData.writeString(this.title);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.prices.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.TL_labeledPrice)this.prices.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_stickerPack
    extends TLObject
  {
    public static int constructor = 313694676;
    public ArrayList<Long> documents = new ArrayList();
    public String emoticon;
    
    public static TL_stickerPack TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_stickerPack", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_stickerPack localTL_stickerPack;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_stickerPack)
      {
        return paramAbstractSerializedData;
        localTL_stickerPack = new TL_stickerPack();
        localTL_stickerPack.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.emoticon = paramAbstractSerializedData.readString(paramBoolean);
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else
      {
        int j = paramAbstractSerializedData.readInt32(paramBoolean);
        for (i = 0; i < j; i++) {
          this.documents.add(Long.valueOf(paramAbstractSerializedData.readInt64(paramBoolean)));
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.emoticon);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.documents.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        paramAbstractSerializedData.writeInt64(((Long)this.documents.get(j)).longValue());
      }
    }
  }
  
  public static class TL_stickerSet
    extends TLRPC.StickerSet
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      boolean bool1 = true;
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x2) != 0)
      {
        bool2 = true;
        this.archived = bool2;
        if ((this.flags & 0x4) == 0) {
          break label145;
        }
        bool2 = true;
        label41:
        this.official = bool2;
        if ((this.flags & 0x8) == 0) {
          break label151;
        }
      }
      label145:
      label151:
      for (boolean bool2 = bool1;; bool2 = false)
      {
        this.masks = bool2;
        if ((this.flags & 0x1) != 0) {
          this.installed_date = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        this.id = paramAbstractSerializedData.readInt64(paramBoolean);
        this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
        this.title = paramAbstractSerializedData.readString(paramBoolean);
        this.short_name = paramAbstractSerializedData.readString(paramBoolean);
        this.count = paramAbstractSerializedData.readInt32(paramBoolean);
        this.hash = paramAbstractSerializedData.readInt32(paramBoolean);
        return;
        bool2 = false;
        break;
        bool2 = false;
        break label41;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.archived)
      {
        i = this.flags | 0x2;
        this.flags = i;
        if (!this.official) {
          break label150;
        }
        i = this.flags | 0x4;
        label40:
        this.flags = i;
        if (!this.masks) {
          break label161;
        }
      }
      label150:
      label161:
      for (int i = this.flags | 0x8;; i = this.flags & 0xFFFFFFF7)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        if ((this.flags & 0x1) != 0) {
          paramAbstractSerializedData.writeInt32(this.installed_date);
        }
        paramAbstractSerializedData.writeInt64(this.id);
        paramAbstractSerializedData.writeInt64(this.access_hash);
        paramAbstractSerializedData.writeString(this.title);
        paramAbstractSerializedData.writeString(this.short_name);
        paramAbstractSerializedData.writeInt32(this.count);
        paramAbstractSerializedData.writeInt32(this.hash);
        return;
        i = this.flags & 0xFFFFFFFD;
        break;
        i = this.flags & 0xFFFFFFFB;
        break label40;
      }
    }
  }
  
  public static class TL_stickerSetCovered
    extends TLRPC.StickerSetCovered
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.set = TLRPC.StickerSet.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.cover = TLRPC.Document.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.set.serializeToStream(paramAbstractSerializedData);
      this.cover.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_stickerSetMultiCovered
    extends TLRPC.StickerSetCovered
  {
    public static int constructor = 872932635;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.set = TLRPC.StickerSet.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
      }
      for (i = 0;; i++)
      {
        TLRPC.Document localDocument;
        if (i < j)
        {
          localDocument = TLRPC.Document.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localDocument != null) {}
        }
        else
        {
          return;
        }
        this.covers.add(localDocument);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.set.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.covers.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.Document)this.covers.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_stickerSet_layer75
    extends TLRPC.TL_stickerSet
  {
    public static int constructor = -852477119;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      boolean bool1 = true;
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0)
      {
        bool2 = true;
        this.installed = bool2;
        if ((this.flags & 0x2) == 0) {
          break label145;
        }
        bool2 = true;
        label41:
        this.archived = bool2;
        if ((this.flags & 0x4) == 0) {
          break label151;
        }
        bool2 = true;
        label59:
        this.official = bool2;
        if ((this.flags & 0x8) == 0) {
          break label157;
        }
      }
      label145:
      label151:
      label157:
      for (boolean bool2 = bool1;; bool2 = false)
      {
        this.masks = bool2;
        this.id = paramAbstractSerializedData.readInt64(paramBoolean);
        this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
        this.title = paramAbstractSerializedData.readString(paramBoolean);
        this.short_name = paramAbstractSerializedData.readString(paramBoolean);
        this.count = paramAbstractSerializedData.readInt32(paramBoolean);
        this.hash = paramAbstractSerializedData.readInt32(paramBoolean);
        return;
        bool2 = false;
        break;
        bool2 = false;
        break label41;
        bool2 = false;
        break label59;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.installed)
      {
        i = this.flags | 0x1;
        this.flags = i;
        if (!this.archived) {
          break label152;
        }
        i = this.flags | 0x2;
        label40:
        this.flags = i;
        if (!this.official) {
          break label163;
        }
        i = this.flags | 0x4;
        label59:
        this.flags = i;
        if (!this.masks) {
          break label174;
        }
      }
      label152:
      label163:
      label174:
      for (int i = this.flags | 0x8;; i = this.flags & 0xFFFFFFF7)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt64(this.id);
        paramAbstractSerializedData.writeInt64(this.access_hash);
        paramAbstractSerializedData.writeString(this.title);
        paramAbstractSerializedData.writeString(this.short_name);
        paramAbstractSerializedData.writeInt32(this.count);
        paramAbstractSerializedData.writeInt32(this.hash);
        return;
        i = this.flags & 0xFFFFFFFE;
        break;
        i = this.flags & 0xFFFFFFFD;
        break label40;
        i = this.flags & 0xFFFFFFFB;
        break label59;
      }
    }
  }
  
  public static class TL_stickerSet_old
    extends TLRPC.TL_stickerSet
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
      this.title = paramAbstractSerializedData.readString(paramBoolean);
      this.short_name = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.id);
      paramAbstractSerializedData.writeInt64(this.access_hash);
      paramAbstractSerializedData.writeString(this.title);
      paramAbstractSerializedData.writeString(this.short_name);
    }
  }
  
  public static class TL_storage_fileGif
    extends TLRPC.storage_FileType
  {
    public static int constructor = -891180321;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_storage_fileJpeg
    extends TLRPC.storage_FileType
  {
    public static int constructor = 8322574;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_storage_fileMov
    extends TLRPC.storage_FileType
  {
    public static int constructor = NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_storage_fileMp3
    extends TLRPC.storage_FileType
  {
    public static int constructor = NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_storage_fileMp4
    extends TLRPC.storage_FileType
  {
    public static int constructor = -NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_storage_filePartial
    extends TLRPC.storage_FileType
  {
    public static int constructor = NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_storage_filePdf
    extends TLRPC.storage_FileType
  {
    public static int constructor = -NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_storage_filePng
    extends TLRPC.storage_FileType
  {
    public static int constructor = 172975040;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_storage_fileUnknown
    extends TLRPC.storage_FileType
  {
    public static int constructor = -NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_storage_fileWebp
    extends TLRPC.storage_FileType
  {
    public static int constructor = 276907596;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_textBold
    extends TLRPC.RichText
  {
    public static int constructor = NUM;
    public TLRPC.RichText text;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.text = TLRPC.RichText.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.text.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_textConcat
    extends TLRPC.RichText
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
      }
      for (i = 0;; i++)
      {
        TLRPC.RichText localRichText;
        if (i < j)
        {
          localRichText = TLRPC.RichText.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localRichText != null) {}
        }
        else
        {
          return;
        }
        this.texts.add(localRichText);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.texts.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.RichText)this.texts.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_textEmail
    extends TLRPC.RichText
  {
    public static int constructor = -564523562;
    public TLRPC.RichText text;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.text = TLRPC.RichText.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.email = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.text.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeString(this.email);
    }
  }
  
  public static class TL_textEmpty
    extends TLRPC.RichText
  {
    public static int constructor = -599948721;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_textFixed
    extends TLRPC.RichText
  {
    public static int constructor = NUM;
    public TLRPC.RichText text;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.text = TLRPC.RichText.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.text.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_textItalic
    extends TLRPC.RichText
  {
    public static int constructor = -653089380;
    public TLRPC.RichText text;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.text = TLRPC.RichText.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.text.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_textPlain
    extends TLRPC.RichText
  {
    public static int constructor = NUM;
    public String text;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.text = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.text);
    }
  }
  
  public static class TL_textStrike
    extends TLRPC.RichText
  {
    public static int constructor = -NUM;
    public TLRPC.RichText text;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.text = TLRPC.RichText.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.text.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_textUnderline
    extends TLRPC.RichText
  {
    public static int constructor = -NUM;
    public TLRPC.RichText text;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.text = TLRPC.RichText.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.text.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_textUrl
    extends TLRPC.RichText
  {
    public static int constructor = NUM;
    public TLRPC.RichText text;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.text = TLRPC.RichText.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.url = paramAbstractSerializedData.readString(paramBoolean);
      this.webpage_id = paramAbstractSerializedData.readInt64(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.text.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeString(this.url);
      paramAbstractSerializedData.writeInt64(this.webpage_id);
    }
  }
  
  public static class TL_topPeer
    extends TLObject
  {
    public static int constructor = -305282981;
    public TLRPC.Peer peer;
    public double rating;
    
    public static TL_topPeer TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_topPeer", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_topPeer localTL_topPeer;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_topPeer)
      {
        return paramAbstractSerializedData;
        localTL_topPeer = new TL_topPeer();
        localTL_topPeer.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.peer = TLRPC.Peer.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.rating = paramAbstractSerializedData.readDouble(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.peer.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeDouble(this.rating);
    }
  }
  
  public static class TL_topPeerCategoryBotsInline
    extends TLRPC.TopPeerCategory
  {
    public static int constructor = 344356834;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_topPeerCategoryBotsPM
    extends TLRPC.TopPeerCategory
  {
    public static int constructor = -NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_topPeerCategoryChannels
    extends TLRPC.TopPeerCategory
  {
    public static int constructor = 371037736;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_topPeerCategoryCorrespondents
    extends TLRPC.TopPeerCategory
  {
    public static int constructor = 104314861;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_topPeerCategoryGroups
    extends TLRPC.TopPeerCategory
  {
    public static int constructor = -NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_topPeerCategoryPeers
    extends TLObject
  {
    public static int constructor = -75283823;
    public TLRPC.TopPeerCategory category;
    public int count;
    public ArrayList<TLRPC.TL_topPeer> peers = new ArrayList();
    
    public static TL_topPeerCategoryPeers TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_topPeerCategoryPeers", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_topPeerCategoryPeers localTL_topPeerCategoryPeers;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_topPeerCategoryPeers)
      {
        return paramAbstractSerializedData;
        localTL_topPeerCategoryPeers = new TL_topPeerCategoryPeers();
        localTL_topPeerCategoryPeers.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.category = TLRPC.TopPeerCategory.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.count = paramAbstractSerializedData.readInt32(paramBoolean);
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
      }
      for (i = 0;; i++)
      {
        TLRPC.TL_topPeer localTL_topPeer;
        if (i < j)
        {
          localTL_topPeer = TLRPC.TL_topPeer.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localTL_topPeer != null) {}
        }
        else
        {
          return;
        }
        this.peers.add(localTL_topPeer);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.category.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(this.count);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.peers.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.TL_topPeer)this.peers.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_topPeerCategoryPhoneCalls
    extends TLRPC.TopPeerCategory
  {
    public static int constructor = 511092620;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_updateChannel
    extends TLRPC.Update
  {
    public static int constructor = -NUM;
    public int channel_id;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.channel_id = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.channel_id);
    }
  }
  
  public static class TL_updateChannelAvailableMessages
    extends TLRPC.Update
  {
    public static int constructor = NUM;
    public int available_min_id;
    public int channel_id;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.channel_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.available_min_id = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.channel_id);
      paramAbstractSerializedData.writeInt32(this.available_min_id);
    }
  }
  
  public static class TL_updateChannelMessageViews
    extends TLRPC.Update
  {
    public static int constructor = -NUM;
    public int channel_id;
    public int id;
    public int views;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.channel_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.views = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.channel_id);
      paramAbstractSerializedData.writeInt32(this.id);
      paramAbstractSerializedData.writeInt32(this.views);
    }
  }
  
  public static class TL_updateChannelPinnedMessage
    extends TLRPC.Update
  {
    public static int constructor = -NUM;
    public int channel_id;
    public int id;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.channel_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.id = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.channel_id);
      paramAbstractSerializedData.writeInt32(this.id);
    }
  }
  
  public static class TL_updateChannelReadMessagesContents
    extends TLRPC.Update
  {
    public static int constructor = -NUM;
    public int channel_id;
    public ArrayList<Integer> messages = new ArrayList();
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.channel_id = paramAbstractSerializedData.readInt32(paramBoolean);
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else
      {
        int j = paramAbstractSerializedData.readInt32(paramBoolean);
        for (i = 0; i < j; i++) {
          this.messages.add(Integer.valueOf(paramAbstractSerializedData.readInt32(paramBoolean)));
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.channel_id);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.messages.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        paramAbstractSerializedData.writeInt32(((Integer)this.messages.get(j)).intValue());
      }
    }
  }
  
  public static class TL_updateChannelTooLong
    extends TLRPC.Update
  {
    public static int constructor = -352032773;
    public int channel_id;
    public int flags;
    public int pts;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      this.channel_id = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0) {
        this.pts = paramAbstractSerializedData.readInt32(paramBoolean);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.flags);
      paramAbstractSerializedData.writeInt32(this.channel_id);
      if ((this.flags & 0x1) != 0) {
        paramAbstractSerializedData.writeInt32(this.pts);
      }
    }
  }
  
  public static class TL_updateChannelWebPage
    extends TLRPC.Update
  {
    public static int constructor = NUM;
    public int channel_id;
    public int pts;
    public int pts_count;
    public TLRPC.WebPage webpage;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.channel_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.webpage = TLRPC.WebPage.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.pts = paramAbstractSerializedData.readInt32(paramBoolean);
      this.pts_count = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.channel_id);
      this.webpage.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(this.pts);
      paramAbstractSerializedData.writeInt32(this.pts_count);
    }
  }
  
  public static class TL_updateChatAdmins
    extends TLRPC.Update
  {
    public static int constructor = NUM;
    public int chat_id;
    public boolean enabled;
    public int version;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.chat_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.enabled = paramAbstractSerializedData.readBool(paramBoolean);
      this.version = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.chat_id);
      paramAbstractSerializedData.writeBool(this.enabled);
      paramAbstractSerializedData.writeInt32(this.version);
    }
  }
  
  public static class TL_updateChatParticipantAdd
    extends TLRPC.Update
  {
    public static int constructor = -364179876;
    public int chat_id;
    public int date;
    public int inviter_id;
    public int user_id;
    public int version;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.chat_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.user_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.inviter_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
      this.version = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.chat_id);
      paramAbstractSerializedData.writeInt32(this.user_id);
      paramAbstractSerializedData.writeInt32(this.inviter_id);
      paramAbstractSerializedData.writeInt32(this.date);
      paramAbstractSerializedData.writeInt32(this.version);
    }
  }
  
  public static class TL_updateChatParticipantAdmin
    extends TLRPC.Update
  {
    public static int constructor = -NUM;
    public int chat_id;
    public boolean is_admin;
    public int user_id;
    public int version;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.chat_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.user_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.is_admin = paramAbstractSerializedData.readBool(paramBoolean);
      this.version = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.chat_id);
      paramAbstractSerializedData.writeInt32(this.user_id);
      paramAbstractSerializedData.writeBool(this.is_admin);
      paramAbstractSerializedData.writeInt32(this.version);
    }
  }
  
  public static class TL_updateChatParticipantDelete
    extends TLRPC.Update
  {
    public static int constructor = NUM;
    public int chat_id;
    public int user_id;
    public int version;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.chat_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.user_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.version = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.chat_id);
      paramAbstractSerializedData.writeInt32(this.user_id);
      paramAbstractSerializedData.writeInt32(this.version);
    }
  }
  
  public static class TL_updateChatParticipants
    extends TLRPC.Update
  {
    public static int constructor = 125178264;
    public TLRPC.ChatParticipants participants;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.participants = TLRPC.ChatParticipants.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.participants.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_updateChatUserTyping
    extends TLRPC.Update
  {
    public static int constructor = -NUM;
    public TLRPC.SendMessageAction action;
    public int chat_id;
    public int user_id;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.chat_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.user_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.action = TLRPC.SendMessageAction.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.chat_id);
      paramAbstractSerializedData.writeInt32(this.user_id);
      this.action.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_updateConfig
    extends TLRPC.Update
  {
    public static int constructor = -NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_updateContactLink
    extends TLRPC.Update
  {
    public static int constructor = -NUM;
    public TLRPC.ContactLink foreign_link;
    public TLRPC.ContactLink my_link;
    public int user_id;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.user_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.my_link = TLRPC.ContactLink.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.foreign_link = TLRPC.ContactLink.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.user_id);
      this.my_link.serializeToStream(paramAbstractSerializedData);
      this.foreign_link.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_updateContactRegistered
    extends TLRPC.Update
  {
    public static int constructor = 628472761;
    public int date;
    public int user_id;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.user_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.user_id);
      paramAbstractSerializedData.writeInt32(this.date);
    }
  }
  
  public static class TL_updateContactsReset
    extends TLRPC.Update
  {
    public static int constructor = NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_updateDcOptions
    extends TLRPC.Update
  {
    public static int constructor = -NUM;
    public ArrayList<TLRPC.TL_dcOption> dc_options = new ArrayList();
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
      }
      for (i = 0;; i++)
      {
        TLRPC.TL_dcOption localTL_dcOption;
        if (i < j)
        {
          localTL_dcOption = TLRPC.TL_dcOption.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localTL_dcOption != null) {}
        }
        else
        {
          return;
        }
        this.dc_options.add(localTL_dcOption);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.dc_options.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.TL_dcOption)this.dc_options.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_updateDeleteChannelMessages
    extends TLRPC.Update
  {
    public static int constructor = -NUM;
    public int channel_id;
    public ArrayList<Integer> messages = new ArrayList();
    public int pts;
    public int pts_count;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.channel_id = paramAbstractSerializedData.readInt32(paramBoolean);
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else
      {
        int j = paramAbstractSerializedData.readInt32(paramBoolean);
        for (i = 0; i < j; i++) {
          this.messages.add(Integer.valueOf(paramAbstractSerializedData.readInt32(paramBoolean)));
        }
        this.pts = paramAbstractSerializedData.readInt32(paramBoolean);
        this.pts_count = paramAbstractSerializedData.readInt32(paramBoolean);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.channel_id);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.messages.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        paramAbstractSerializedData.writeInt32(((Integer)this.messages.get(j)).intValue());
      }
      paramAbstractSerializedData.writeInt32(this.pts);
      paramAbstractSerializedData.writeInt32(this.pts_count);
    }
  }
  
  public static class TL_updateDeleteMessages
    extends TLRPC.Update
  {
    public static int constructor = -NUM;
    public ArrayList<Integer> messages = new ArrayList();
    public int pts;
    public int pts_count;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else
      {
        int j = paramAbstractSerializedData.readInt32(paramBoolean);
        for (i = 0; i < j; i++) {
          this.messages.add(Integer.valueOf(paramAbstractSerializedData.readInt32(paramBoolean)));
        }
        this.pts = paramAbstractSerializedData.readInt32(paramBoolean);
        this.pts_count = paramAbstractSerializedData.readInt32(paramBoolean);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.messages.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        paramAbstractSerializedData.writeInt32(((Integer)this.messages.get(j)).intValue());
      }
      paramAbstractSerializedData.writeInt32(this.pts);
      paramAbstractSerializedData.writeInt32(this.pts_count);
    }
  }
  
  public static class TL_updateDialogPinned
    extends TLRPC.Update
  {
    public static int constructor = 433225532;
    public int flags;
    public TLRPC.DialogPeer peer;
    public boolean pinned;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0) {}
      for (boolean bool = true;; bool = false)
      {
        this.pinned = bool;
        this.peer = TLRPC.DialogPeer.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        return;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.pinned) {}
      for (int i = this.flags | 0x1;; i = this.flags & 0xFFFFFFFE)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        this.peer.serializeToStream(paramAbstractSerializedData);
        return;
      }
    }
  }
  
  public static class TL_updateDraftMessage
    extends TLRPC.Update
  {
    public static int constructor = -299124375;
    public TLRPC.DraftMessage draft;
    public TLRPC.Peer peer;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.peer = TLRPC.Peer.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.draft = TLRPC.DraftMessage.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.peer.serializeToStream(paramAbstractSerializedData);
      this.draft.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_updateEditChannelMessage
    extends TLRPC.Update
  {
    public static int constructor = 457133559;
    public TLRPC.Message message;
    public int pts;
    public int pts_count;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.message = TLRPC.Message.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.pts = paramAbstractSerializedData.readInt32(paramBoolean);
      this.pts_count = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.message.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(this.pts);
      paramAbstractSerializedData.writeInt32(this.pts_count);
    }
  }
  
  public static class TL_updateEditMessage
    extends TLRPC.Update
  {
    public static int constructor = -469536605;
    public TLRPC.Message message;
    public int pts;
    public int pts_count;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.message = TLRPC.Message.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.pts = paramAbstractSerializedData.readInt32(paramBoolean);
      this.pts_count = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.message.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(this.pts);
      paramAbstractSerializedData.writeInt32(this.pts_count);
    }
  }
  
  public static class TL_updateEncryptedChatTyping
    extends TLRPC.Update
  {
    public static int constructor = 386986326;
    public int chat_id;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.chat_id = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.chat_id);
    }
  }
  
  public static class TL_updateEncryptedMessagesRead
    extends TLRPC.Update
  {
    public static int constructor = 956179895;
    public int chat_id;
    public int date;
    public int max_date;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.chat_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.max_date = paramAbstractSerializedData.readInt32(paramBoolean);
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.chat_id);
      paramAbstractSerializedData.writeInt32(this.max_date);
      paramAbstractSerializedData.writeInt32(this.date);
    }
  }
  
  public static class TL_updateEncryption
    extends TLRPC.Update
  {
    public static int constructor = -NUM;
    public TLRPC.EncryptedChat chat;
    public int date;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.chat = TLRPC.EncryptedChat.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.chat.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(this.date);
    }
  }
  
  public static class TL_updateFavedStickers
    extends TLRPC.Update
  {
    public static int constructor = -451831443;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_updateGroupCall
    extends TLRPC.Update
  {
    public static int constructor = -NUM;
    public TLRPC.GroupCall call;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.call = TLRPC.GroupCall.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.call.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_updateGroupCallParticipant
    extends TLRPC.Update
  {
    public static int constructor = 92188360;
    public TLRPC.TL_inputGroupCall call;
    public TLRPC.GroupCallParticipant participant;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.call = TLRPC.TL_inputGroupCall.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.participant = TLRPC.GroupCallParticipant.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.call.serializeToStream(paramAbstractSerializedData);
      this.participant.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_updateLangPack
    extends TLRPC.Update
  {
    public static int constructor = NUM;
    public TLRPC.TL_langPackDifference difference;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.difference = TLRPC.TL_langPackDifference.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.difference.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_updateLangPackTooLong
    extends TLRPC.Update
  {
    public static int constructor = 281165899;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_updateMessageID
    extends TLRPC.Update
  {
    public static int constructor = NUM;
    public int id;
    public long random_id;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.random_id = paramAbstractSerializedData.readInt64(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.id);
      paramAbstractSerializedData.writeInt64(this.random_id);
    }
  }
  
  public static class TL_updateNewChannelMessage
    extends TLRPC.Update
  {
    public static int constructor = NUM;
    public TLRPC.Message message;
    public int pts;
    public int pts_count;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.message = TLRPC.Message.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.pts = paramAbstractSerializedData.readInt32(paramBoolean);
      this.pts_count = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.message.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(this.pts);
      paramAbstractSerializedData.writeInt32(this.pts_count);
    }
  }
  
  public static class TL_updateNewEncryptedMessage
    extends TLRPC.Update
  {
    public static int constructor = 314359194;
    public TLRPC.EncryptedMessage message;
    public int qts;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.message = TLRPC.EncryptedMessage.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.qts = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.message.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(this.qts);
    }
  }
  
  public static class TL_updateNewMessage
    extends TLRPC.Update
  {
    public static int constructor = 522914557;
    public TLRPC.Message message;
    public int pts;
    public int pts_count;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.message = TLRPC.Message.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.pts = paramAbstractSerializedData.readInt32(paramBoolean);
      this.pts_count = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.message.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(this.pts);
      paramAbstractSerializedData.writeInt32(this.pts_count);
    }
  }
  
  public static class TL_updateNewStickerSet
    extends TLRPC.Update
  {
    public static int constructor = NUM;
    public TLRPC.TL_messages_stickerSet stickerset;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.stickerset = TLRPC.TL_messages_stickerSet.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.stickerset.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_updateNotifySettings
    extends TLRPC.Update
  {
    public static int constructor = -NUM;
    public TLRPC.PeerNotifySettings notify_settings;
    public TLRPC.NotifyPeer peer;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.peer = TLRPC.NotifyPeer.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.notify_settings = TLRPC.PeerNotifySettings.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.peer.serializeToStream(paramAbstractSerializedData);
      this.notify_settings.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_updatePhoneCall
    extends TLRPC.Update
  {
    public static int constructor = -NUM;
    public TLRPC.PhoneCall phone_call;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.phone_call = TLRPC.PhoneCall.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.phone_call.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_updatePinnedDialogs
    extends TLRPC.Update
  {
    public static int constructor = -364071333;
    public int flags;
    public ArrayList<TLRPC.DialogPeer> order = new ArrayList();
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      if ((this.flags & 0x1) != 0)
      {
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i != 481674261)
        {
          if (paramBoolean) {
            throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
          }
        }
        else {
          j = paramAbstractSerializedData.readInt32(paramBoolean);
        }
      }
      for (int i = 0;; i++)
      {
        TLRPC.DialogPeer localDialogPeer;
        if (i < j)
        {
          localDialogPeer = TLRPC.DialogPeer.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localDialogPeer != null) {}
        }
        else
        {
          return;
        }
        this.order.add(localDialogPeer);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.flags);
      if ((this.flags & 0x1) != 0)
      {
        paramAbstractSerializedData.writeInt32(481674261);
        int i = this.order.size();
        paramAbstractSerializedData.writeInt32(i);
        for (int j = 0; j < i; j++) {
          ((TLRPC.DialogPeer)this.order.get(j)).serializeToStream(paramAbstractSerializedData);
        }
      }
    }
  }
  
  public static class TL_updatePrivacy
    extends TLRPC.Update
  {
    public static int constructor = -298113238;
    public TLRPC.PrivacyKey key;
    public ArrayList<TLRPC.PrivacyRule> rules = new ArrayList();
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.key = TLRPC.PrivacyKey.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
      }
      for (i = 0;; i++)
      {
        TLRPC.PrivacyRule localPrivacyRule;
        if (i < j)
        {
          localPrivacyRule = TLRPC.PrivacyRule.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localPrivacyRule != null) {}
        }
        else
        {
          return;
        }
        this.rules.add(localPrivacyRule);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.key.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.rules.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.PrivacyRule)this.rules.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_updateReadChannelInbox
    extends TLRPC.Update
  {
    public static int constructor = NUM;
    public int channel_id;
    public int max_id;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.channel_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.max_id = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.channel_id);
      paramAbstractSerializedData.writeInt32(this.max_id);
    }
  }
  
  public static class TL_updateReadChannelOutbox
    extends TLRPC.Update
  {
    public static int constructor = 634833351;
    public int channel_id;
    public int max_id;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.channel_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.max_id = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.channel_id);
      paramAbstractSerializedData.writeInt32(this.max_id);
    }
  }
  
  public static class TL_updateReadFeaturedStickers
    extends TLRPC.Update
  {
    public static int constructor = NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_updateReadHistoryInbox
    extends TLRPC.Update
  {
    public static int constructor = -NUM;
    public int max_id;
    public TLRPC.Peer peer;
    public int pts;
    public int pts_count;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.peer = TLRPC.Peer.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.max_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.pts = paramAbstractSerializedData.readInt32(paramBoolean);
      this.pts_count = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.peer.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(this.max_id);
      paramAbstractSerializedData.writeInt32(this.pts);
      paramAbstractSerializedData.writeInt32(this.pts_count);
    }
  }
  
  public static class TL_updateReadHistoryOutbox
    extends TLRPC.Update
  {
    public static int constructor = 791617983;
    public int max_id;
    public TLRPC.Peer peer;
    public int pts;
    public int pts_count;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.peer = TLRPC.Peer.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.max_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.pts = paramAbstractSerializedData.readInt32(paramBoolean);
      this.pts_count = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.peer.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(this.max_id);
      paramAbstractSerializedData.writeInt32(this.pts);
      paramAbstractSerializedData.writeInt32(this.pts_count);
    }
  }
  
  public static class TL_updateReadMessagesContents
    extends TLRPC.Update
  {
    public static int constructor = NUM;
    public ArrayList<Integer> messages = new ArrayList();
    public int pts;
    public int pts_count;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else
      {
        int j = paramAbstractSerializedData.readInt32(paramBoolean);
        for (i = 0; i < j; i++) {
          this.messages.add(Integer.valueOf(paramAbstractSerializedData.readInt32(paramBoolean)));
        }
        this.pts = paramAbstractSerializedData.readInt32(paramBoolean);
        this.pts_count = paramAbstractSerializedData.readInt32(paramBoolean);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.messages.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        paramAbstractSerializedData.writeInt32(((Integer)this.messages.get(j)).intValue());
      }
      paramAbstractSerializedData.writeInt32(this.pts);
      paramAbstractSerializedData.writeInt32(this.pts_count);
    }
  }
  
  public static class TL_updateRecentStickers
    extends TLRPC.Update
  {
    public static int constructor = -NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_updateSavedGifs
    extends TLRPC.Update
  {
    public static int constructor = -NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_updateServiceNotification
    extends TLRPC.Update
  {
    public static int constructor = -337352679;
    public ArrayList<TLRPC.MessageEntity> entities = new ArrayList();
    public int flags;
    public int inbox_date;
    public TLRPC.MessageMedia media;
    public String message;
    public boolean popup;
    public String type;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0) {}
      for (boolean bool = true;; bool = false)
      {
        this.popup = bool;
        if ((this.flags & 0x2) != 0) {
          this.inbox_date = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        this.type = paramAbstractSerializedData.readString(paramBoolean);
        this.message = paramAbstractSerializedData.readString(paramBoolean);
        this.media = TLRPC.MessageMedia.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i == 481674261) {
          break;
        }
        if (!paramBoolean) {
          break label157;
        }
        throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
      }
      int j = paramAbstractSerializedData.readInt32(paramBoolean);
      for (int i = 0;; i++)
      {
        TLRPC.MessageEntity localMessageEntity;
        if (i < j)
        {
          localMessageEntity = TLRPC.MessageEntity.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localMessageEntity != null) {}
        }
        else
        {
          label157:
          return;
        }
        this.entities.add(localMessageEntity);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.popup) {}
      for (int i = this.flags | 0x1;; i = this.flags & 0xFFFFFFFE)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        if ((this.flags & 0x2) != 0) {
          paramAbstractSerializedData.writeInt32(this.inbox_date);
        }
        paramAbstractSerializedData.writeString(this.type);
        paramAbstractSerializedData.writeString(this.message);
        this.media.serializeToStream(paramAbstractSerializedData);
        paramAbstractSerializedData.writeInt32(481674261);
        int j = this.entities.size();
        paramAbstractSerializedData.writeInt32(j);
        for (i = 0; i < j; i++) {
          ((TLRPC.MessageEntity)this.entities.get(i)).serializeToStream(paramAbstractSerializedData);
        }
      }
    }
  }
  
  public static class TL_updateShort
    extends TLRPC.Updates
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.update = TLRPC.Update.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
    }
  }
  
  public static class TL_updateShortChatMessage
    extends TLRPC.Updates
  {
    public static int constructor = 377562760;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x2) != 0)
      {
        bool = true;
        this.out = bool;
        if ((this.flags & 0x10) == 0) {
          break label261;
        }
        bool = true;
        label37:
        this.mentioned = bool;
        if ((this.flags & 0x20) == 0) {
          break label266;
        }
        bool = true;
        label54:
        this.media_unread = bool;
        if ((this.flags & 0x2000) == 0) {
          break label271;
        }
      }
      label261:
      label266:
      label271:
      for (boolean bool = true;; bool = false)
      {
        this.silent = bool;
        this.id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.from_id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.chat_id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.message = paramAbstractSerializedData.readString(paramBoolean);
        this.pts = paramAbstractSerializedData.readInt32(paramBoolean);
        this.pts_count = paramAbstractSerializedData.readInt32(paramBoolean);
        this.date = paramAbstractSerializedData.readInt32(paramBoolean);
        if ((this.flags & 0x4) != 0) {
          this.fwd_from = TLRPC.MessageFwdHeader.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        }
        if ((this.flags & 0x800) != 0) {
          this.via_bot_id = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x8) != 0) {
          this.reply_to_msg_id = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x80) == 0) {
          break label310;
        }
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i == 481674261) {
          break label276;
        }
        if (!paramBoolean) {
          break label310;
        }
        throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        bool = false;
        break;
        bool = false;
        break label37;
        bool = false;
        break label54;
      }
      label276:
      int j = paramAbstractSerializedData.readInt32(paramBoolean);
      for (int i = 0;; i++)
      {
        TLRPC.MessageEntity localMessageEntity;
        if (i < j)
        {
          localMessageEntity = TLRPC.MessageEntity.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localMessageEntity != null) {}
        }
        else
        {
          label310:
          return;
        }
        this.entities.add(localMessageEntity);
      }
    }
  }
  
  public static class TL_updateShortMessage
    extends TLRPC.Updates
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x2) != 0)
      {
        bool = true;
        this.out = bool;
        if ((this.flags & 0x10) == 0) {
          break label252;
        }
        bool = true;
        label37:
        this.mentioned = bool;
        if ((this.flags & 0x20) == 0) {
          break label257;
        }
        bool = true;
        label54:
        this.media_unread = bool;
        if ((this.flags & 0x2000) == 0) {
          break label262;
        }
      }
      label252:
      label257:
      label262:
      for (boolean bool = true;; bool = false)
      {
        this.silent = bool;
        this.id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.user_id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.message = paramAbstractSerializedData.readString(paramBoolean);
        this.pts = paramAbstractSerializedData.readInt32(paramBoolean);
        this.pts_count = paramAbstractSerializedData.readInt32(paramBoolean);
        this.date = paramAbstractSerializedData.readInt32(paramBoolean);
        if ((this.flags & 0x4) != 0) {
          this.fwd_from = TLRPC.MessageFwdHeader.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        }
        if ((this.flags & 0x800) != 0) {
          this.via_bot_id = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x8) != 0) {
          this.reply_to_msg_id = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x80) == 0) {
          break label301;
        }
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i == 481674261) {
          break label267;
        }
        if (!paramBoolean) {
          break label301;
        }
        throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        bool = false;
        break;
        bool = false;
        break label37;
        bool = false;
        break label54;
      }
      label267:
      int j = paramAbstractSerializedData.readInt32(paramBoolean);
      for (int i = 0;; i++)
      {
        TLRPC.MessageEntity localMessageEntity;
        if (i < j)
        {
          localMessageEntity = TLRPC.MessageEntity.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localMessageEntity != null) {}
        }
        else
        {
          label301:
          return;
        }
        this.entities.add(localMessageEntity);
      }
    }
  }
  
  public static class TL_updateShortSentMessage
    extends TLRPC.Updates
  {
    public static int constructor = 301019932;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x2) != 0) {}
      for (boolean bool = true;; bool = false)
      {
        this.out = bool;
        this.id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.pts = paramAbstractSerializedData.readInt32(paramBoolean);
        this.pts_count = paramAbstractSerializedData.readInt32(paramBoolean);
        this.date = paramAbstractSerializedData.readInt32(paramBoolean);
        if ((this.flags & 0x200) != 0) {
          this.media = TLRPC.MessageMedia.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        }
        if ((this.flags & 0x80) == 0) {
          break label179;
        }
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i == 481674261) {
          break;
        }
        if (!paramBoolean) {
          break label179;
        }
        throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
      }
      int j = paramAbstractSerializedData.readInt32(paramBoolean);
      for (int i = 0;; i++)
      {
        TLRPC.MessageEntity localMessageEntity;
        if (i < j)
        {
          localMessageEntity = TLRPC.MessageEntity.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localMessageEntity != null) {}
        }
        else
        {
          label179:
          return;
        }
        this.entities.add(localMessageEntity);
      }
    }
  }
  
  public static class TL_updateStickerSets
    extends TLRPC.Update
  {
    public static int constructor = NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_updateStickerSetsOrder
    extends TLRPC.Update
  {
    public static int constructor = 196268545;
    public int flags;
    public boolean masks;
    public ArrayList<Long> order = new ArrayList();
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0) {}
      for (boolean bool = true;; bool = false)
      {
        this.masks = bool;
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i == 481674261) {
          break;
        }
        if (!paramBoolean) {
          return;
        }
        throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
      }
      int j = paramAbstractSerializedData.readInt32(paramBoolean);
      for (int i = 0; i < j; i++) {
        this.order.add(Long.valueOf(paramAbstractSerializedData.readInt64(paramBoolean)));
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.masks) {}
      for (int i = this.flags | 0x1;; i = this.flags & 0xFFFFFFFE)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(481674261);
        int j = this.order.size();
        paramAbstractSerializedData.writeInt32(j);
        for (i = 0; i < j; i++) {
          paramAbstractSerializedData.writeInt64(((Long)this.order.get(i)).longValue());
        }
      }
    }
  }
  
  public static class TL_updateUserBlocked
    extends TLRPC.Update
  {
    public static int constructor = -NUM;
    public boolean blocked;
    public int user_id;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.user_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.blocked = paramAbstractSerializedData.readBool(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.user_id);
      paramAbstractSerializedData.writeBool(this.blocked);
    }
  }
  
  public static class TL_updateUserName
    extends TLRPC.Update
  {
    public static int constructor = -NUM;
    public String first_name;
    public String last_name;
    public int user_id;
    public String username;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.user_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.first_name = paramAbstractSerializedData.readString(paramBoolean);
      this.last_name = paramAbstractSerializedData.readString(paramBoolean);
      this.username = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.user_id);
      paramAbstractSerializedData.writeString(this.first_name);
      paramAbstractSerializedData.writeString(this.last_name);
      paramAbstractSerializedData.writeString(this.username);
    }
  }
  
  public static class TL_updateUserPhone
    extends TLRPC.Update
  {
    public static int constructor = 314130811;
    public String phone;
    public int user_id;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.user_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.phone = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.user_id);
      paramAbstractSerializedData.writeString(this.phone);
    }
  }
  
  public static class TL_updateUserPhoto
    extends TLRPC.Update
  {
    public static int constructor = -NUM;
    public int date;
    public TLRPC.UserProfilePhoto photo;
    public boolean previous;
    public int user_id;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.user_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
      this.photo = TLRPC.UserProfilePhoto.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.previous = paramAbstractSerializedData.readBool(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.user_id);
      paramAbstractSerializedData.writeInt32(this.date);
      this.photo.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeBool(this.previous);
    }
  }
  
  public static class TL_updateUserStatus
    extends TLRPC.Update
  {
    public static int constructor = 469489699;
    public TLRPC.UserStatus status;
    public int user_id;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.user_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.status = TLRPC.UserStatus.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.user_id);
      this.status.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_updateUserTyping
    extends TLRPC.Update
  {
    public static int constructor = NUM;
    public TLRPC.SendMessageAction action;
    public int user_id;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.user_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.action = TLRPC.SendMessageAction.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.user_id);
      this.action.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_updateWebPage
    extends TLRPC.Update
  {
    public static int constructor = NUM;
    public int pts;
    public int pts_count;
    public TLRPC.WebPage webpage;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.webpage = TLRPC.WebPage.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.pts = paramAbstractSerializedData.readInt32(paramBoolean);
      this.pts_count = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.webpage.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(this.pts);
      paramAbstractSerializedData.writeInt32(this.pts_count);
    }
  }
  
  public static class TL_updates
    extends TLRPC.Updates
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      Object localObject;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else
      {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
        i = 0;
        if (i >= j) {
          break label89;
        }
        localObject = TLRPC.Update.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localObject != null) {
          break label73;
        }
      }
      for (;;)
      {
        return;
        label73:
        this.updates.add(localObject);
        i++;
        break;
        label89:
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i != 481674261)
        {
          if (paramBoolean) {
            throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
          }
        }
        else
        {
          j = paramAbstractSerializedData.readInt32(paramBoolean);
          for (i = 0;; i++)
          {
            if (i >= j) {
              break label177;
            }
            localObject = TLRPC.User.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
            if (localObject == null) {
              break;
            }
            this.users.add(localObject);
          }
          label177:
          i = paramAbstractSerializedData.readInt32(paramBoolean);
          if (i != 481674261)
          {
            if (paramBoolean) {
              throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
            }
          }
          else
          {
            j = paramAbstractSerializedData.readInt32(paramBoolean);
            for (i = 0;; i++)
            {
              if (i >= j) {
                break label265;
              }
              localObject = TLRPC.Chat.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
              if (localObject == null) {
                break;
              }
              this.chats.add(localObject);
            }
            label265:
            this.date = paramAbstractSerializedData.readInt32(paramBoolean);
            this.seq = paramAbstractSerializedData.readInt32(paramBoolean);
          }
        }
      }
    }
  }
  
  public static class TL_updatesCombined
    extends TLRPC.Updates
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      Object localObject;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else
      {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
        i = 0;
        if (i >= j) {
          break label89;
        }
        localObject = TLRPC.Update.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localObject != null) {
          break label73;
        }
      }
      for (;;)
      {
        return;
        label73:
        this.updates.add(localObject);
        i++;
        break;
        label89:
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i != 481674261)
        {
          if (paramBoolean) {
            throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
          }
        }
        else
        {
          j = paramAbstractSerializedData.readInt32(paramBoolean);
          for (i = 0;; i++)
          {
            if (i >= j) {
              break label177;
            }
            localObject = TLRPC.User.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
            if (localObject == null) {
              break;
            }
            this.users.add(localObject);
          }
          label177:
          i = paramAbstractSerializedData.readInt32(paramBoolean);
          if (i != 481674261)
          {
            if (paramBoolean) {
              throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
            }
          }
          else
          {
            j = paramAbstractSerializedData.readInt32(paramBoolean);
            for (i = 0;; i++)
            {
              if (i >= j) {
                break label265;
              }
              localObject = TLRPC.Chat.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
              if (localObject == null) {
                break;
              }
              this.chats.add(localObject);
            }
            label265:
            this.date = paramAbstractSerializedData.readInt32(paramBoolean);
            this.seq_start = paramAbstractSerializedData.readInt32(paramBoolean);
            this.seq = paramAbstractSerializedData.readInt32(paramBoolean);
          }
        }
      }
    }
  }
  
  public static class TL_updatesTooLong
    extends TLRPC.Updates
  {
    public static int constructor = -484987010;
  }
  
  public static class TL_updates_channelDifference
    extends TLRPC.updates_ChannelDifference
  {
    public static int constructor = 543450958;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0) {}
      for (boolean bool = true;; bool = false)
      {
        this.isFinal = bool;
        this.pts = paramAbstractSerializedData.readInt32(paramBoolean);
        if ((this.flags & 0x2) != 0) {
          this.timeout = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i == 481674261) {
          break;
        }
        if (!paramBoolean) {
          break label134;
        }
        throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
      }
      int j = paramAbstractSerializedData.readInt32(paramBoolean);
      int i = 0;
      Object localObject;
      if (i < j)
      {
        localObject = TLRPC.Message.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localObject != null) {}
      }
      label134:
      label244:
      label337:
      label428:
      for (;;)
      {
        return;
        this.new_messages.add(localObject);
        i++;
        break;
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i != 481674261)
        {
          if (paramBoolean) {
            throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
          }
        }
        else
        {
          j = paramAbstractSerializedData.readInt32(paramBoolean);
          for (i = 0;; i++)
          {
            if (i >= j) {
              break label244;
            }
            localObject = TLRPC.Update.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
            if (localObject == null) {
              break;
            }
            this.other_updates.add(localObject);
          }
          i = paramAbstractSerializedData.readInt32(paramBoolean);
          if (i != 481674261)
          {
            if (paramBoolean) {
              throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
            }
          }
          else
          {
            j = paramAbstractSerializedData.readInt32(paramBoolean);
            for (i = 0;; i++)
            {
              if (i >= j) {
                break label337;
              }
              localObject = TLRPC.Chat.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
              if (localObject == null) {
                break;
              }
              this.chats.add(localObject);
            }
            i = paramAbstractSerializedData.readInt32(paramBoolean);
            if (i != 481674261)
            {
              if (paramBoolean) {
                throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
              }
            }
            else
            {
              j = paramAbstractSerializedData.readInt32(paramBoolean);
              for (i = 0;; i++)
              {
                if (i >= j) {
                  break label428;
                }
                localObject = TLRPC.User.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
                if (localObject == null) {
                  break;
                }
                this.users.add(localObject);
              }
            }
          }
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.isFinal) {}
      for (int i = this.flags | 0x1;; i = this.flags & 0xFFFFFFFE)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(this.pts);
        if ((this.flags & 0x2) != 0) {
          paramAbstractSerializedData.writeInt32(this.timeout);
        }
        paramAbstractSerializedData.writeInt32(481674261);
        j = this.new_messages.size();
        paramAbstractSerializedData.writeInt32(j);
        for (i = 0; i < j; i++) {
          ((TLRPC.Message)this.new_messages.get(i)).serializeToStream(paramAbstractSerializedData);
        }
      }
      paramAbstractSerializedData.writeInt32(481674261);
      int j = this.other_updates.size();
      paramAbstractSerializedData.writeInt32(j);
      for (i = 0; i < j; i++) {
        ((TLRPC.Update)this.other_updates.get(i)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      j = this.chats.size();
      paramAbstractSerializedData.writeInt32(j);
      for (i = 0; i < j; i++) {
        ((TLRPC.Chat)this.chats.get(i)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      j = this.users.size();
      paramAbstractSerializedData.writeInt32(j);
      for (i = 0; i < j; i++) {
        ((TLRPC.User)this.users.get(i)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_updates_channelDifferenceEmpty
    extends TLRPC.updates_ChannelDifference
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0) {}
      for (boolean bool = true;; bool = false)
      {
        this.isFinal = bool;
        this.pts = paramAbstractSerializedData.readInt32(paramBoolean);
        if ((this.flags & 0x2) != 0) {
          this.timeout = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        return;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.isFinal) {}
      for (int i = this.flags | 0x1;; i = this.flags & 0xFFFFFFFE)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(this.pts);
        if ((this.flags & 0x2) != 0) {
          paramAbstractSerializedData.writeInt32(this.timeout);
        }
        return;
      }
    }
  }
  
  public static class TL_updates_channelDifferenceTooLong
    extends TLRPC.updates_ChannelDifference
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0) {}
      for (boolean bool = true;; bool = false)
      {
        this.isFinal = bool;
        this.pts = paramAbstractSerializedData.readInt32(paramBoolean);
        if ((this.flags & 0x2) != 0) {
          this.timeout = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        this.top_message = paramAbstractSerializedData.readInt32(paramBoolean);
        this.read_inbox_max_id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.read_outbox_max_id = paramAbstractSerializedData.readInt32(paramBoolean);
        this.unread_count = paramAbstractSerializedData.readInt32(paramBoolean);
        this.unread_mentions_count = paramAbstractSerializedData.readInt32(paramBoolean);
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i == 481674261) {
          break;
        }
        if (!paramBoolean) {
          break label179;
        }
        throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
      }
      int j = paramAbstractSerializedData.readInt32(paramBoolean);
      int i = 0;
      Object localObject;
      if (i < j)
      {
        localObject = TLRPC.Message.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localObject != null) {}
      }
      label179:
      label289:
      label380:
      for (;;)
      {
        return;
        this.messages.add(localObject);
        i++;
        break;
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i != 481674261)
        {
          if (paramBoolean) {
            throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
          }
        }
        else
        {
          j = paramAbstractSerializedData.readInt32(paramBoolean);
          for (i = 0;; i++)
          {
            if (i >= j) {
              break label289;
            }
            localObject = TLRPC.Chat.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
            if (localObject == null) {
              break;
            }
            this.chats.add(localObject);
          }
          i = paramAbstractSerializedData.readInt32(paramBoolean);
          if (i != 481674261)
          {
            if (paramBoolean) {
              throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
            }
          }
          else
          {
            j = paramAbstractSerializedData.readInt32(paramBoolean);
            for (i = 0;; i++)
            {
              if (i >= j) {
                break label380;
              }
              localObject = TLRPC.User.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
              if (localObject == null) {
                break;
              }
              this.users.add(localObject);
            }
          }
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.isFinal) {}
      for (int i = this.flags | 0x1;; i = this.flags & 0xFFFFFFFE)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(this.pts);
        if ((this.flags & 0x2) != 0) {
          paramAbstractSerializedData.writeInt32(this.timeout);
        }
        paramAbstractSerializedData.writeInt32(this.top_message);
        paramAbstractSerializedData.writeInt32(this.read_inbox_max_id);
        paramAbstractSerializedData.writeInt32(this.read_outbox_max_id);
        paramAbstractSerializedData.writeInt32(this.unread_count);
        paramAbstractSerializedData.writeInt32(this.unread_mentions_count);
        paramAbstractSerializedData.writeInt32(481674261);
        j = this.messages.size();
        paramAbstractSerializedData.writeInt32(j);
        for (i = 0; i < j; i++) {
          ((TLRPC.Message)this.messages.get(i)).serializeToStream(paramAbstractSerializedData);
        }
      }
      paramAbstractSerializedData.writeInt32(481674261);
      int j = this.chats.size();
      paramAbstractSerializedData.writeInt32(j);
      for (i = 0; i < j; i++) {
        ((TLRPC.Chat)this.chats.get(i)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      j = this.users.size();
      paramAbstractSerializedData.writeInt32(j);
      for (i = 0; i < j; i++) {
        ((TLRPC.User)this.users.get(i)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_updates_difference
    extends TLRPC.updates_Difference
  {
    public static int constructor = 16030880;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      Object localObject;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else
      {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
        i = 0;
        if (i >= j) {
          break label89;
        }
        localObject = TLRPC.Message.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localObject != null) {
          break label73;
        }
      }
      for (;;)
      {
        return;
        label73:
        this.new_messages.add(localObject);
        i++;
        break;
        label89:
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i != 481674261)
        {
          if (paramBoolean) {
            throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
          }
        }
        else
        {
          j = paramAbstractSerializedData.readInt32(paramBoolean);
          for (i = 0;; i++)
          {
            if (i >= j) {
              break label177;
            }
            localObject = TLRPC.EncryptedMessage.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
            if (localObject == null) {
              break;
            }
            this.new_encrypted_messages.add(localObject);
          }
          label177:
          i = paramAbstractSerializedData.readInt32(paramBoolean);
          if (i != 481674261)
          {
            if (paramBoolean) {
              throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
            }
          }
          else
          {
            j = paramAbstractSerializedData.readInt32(paramBoolean);
            for (i = 0;; i++)
            {
              if (i >= j) {
                break label265;
              }
              localObject = TLRPC.Update.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
              if (localObject == null) {
                break;
              }
              this.other_updates.add(localObject);
            }
            label265:
            i = paramAbstractSerializedData.readInt32(paramBoolean);
            if (i != 481674261)
            {
              if (paramBoolean) {
                throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
              }
            }
            else
            {
              j = paramAbstractSerializedData.readInt32(paramBoolean);
              for (i = 0;; i++)
              {
                if (i >= j) {
                  break label353;
                }
                localObject = TLRPC.Chat.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
                if (localObject == null) {
                  break;
                }
                this.chats.add(localObject);
              }
              label353:
              i = paramAbstractSerializedData.readInt32(paramBoolean);
              if (i != 481674261)
              {
                if (paramBoolean) {
                  throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
                }
              }
              else
              {
                j = paramAbstractSerializedData.readInt32(paramBoolean);
                for (i = 0;; i++)
                {
                  if (i >= j) {
                    break label441;
                  }
                  localObject = TLRPC.User.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
                  if (localObject == null) {
                    break;
                  }
                  this.users.add(localObject);
                }
                label441:
                this.state = TLRPC.TL_updates_state.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
              }
            }
          }
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.new_messages.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.Message)this.new_messages.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.new_encrypted_messages.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        ((TLRPC.EncryptedMessage)this.new_encrypted_messages.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.other_updates.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        ((TLRPC.Update)this.other_updates.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.chats.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        ((TLRPC.Chat)this.chats.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.users.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        ((TLRPC.User)this.users.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      this.state.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_updates_differenceEmpty
    extends TLRPC.updates_Difference
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
      this.seq = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.date);
      paramAbstractSerializedData.writeInt32(this.seq);
    }
  }
  
  public static class TL_updates_differenceSlice
    extends TLRPC.updates_Difference
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      Object localObject;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else
      {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
        i = 0;
        if (i >= j) {
          break label89;
        }
        localObject = TLRPC.Message.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localObject != null) {
          break label73;
        }
      }
      for (;;)
      {
        return;
        label73:
        this.new_messages.add(localObject);
        i++;
        break;
        label89:
        i = paramAbstractSerializedData.readInt32(paramBoolean);
        if (i != 481674261)
        {
          if (paramBoolean) {
            throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
          }
        }
        else
        {
          j = paramAbstractSerializedData.readInt32(paramBoolean);
          for (i = 0;; i++)
          {
            if (i >= j) {
              break label177;
            }
            localObject = TLRPC.EncryptedMessage.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
            if (localObject == null) {
              break;
            }
            this.new_encrypted_messages.add(localObject);
          }
          label177:
          i = paramAbstractSerializedData.readInt32(paramBoolean);
          if (i != 481674261)
          {
            if (paramBoolean) {
              throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
            }
          }
          else
          {
            j = paramAbstractSerializedData.readInt32(paramBoolean);
            for (i = 0;; i++)
            {
              if (i >= j) {
                break label265;
              }
              localObject = TLRPC.Update.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
              if (localObject == null) {
                break;
              }
              this.other_updates.add(localObject);
            }
            label265:
            i = paramAbstractSerializedData.readInt32(paramBoolean);
            if (i != 481674261)
            {
              if (paramBoolean) {
                throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
              }
            }
            else
            {
              j = paramAbstractSerializedData.readInt32(paramBoolean);
              for (i = 0;; i++)
              {
                if (i >= j) {
                  break label353;
                }
                localObject = TLRPC.Chat.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
                if (localObject == null) {
                  break;
                }
                this.chats.add(localObject);
              }
              label353:
              i = paramAbstractSerializedData.readInt32(paramBoolean);
              if (i != 481674261)
              {
                if (paramBoolean) {
                  throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
                }
              }
              else
              {
                j = paramAbstractSerializedData.readInt32(paramBoolean);
                for (i = 0;; i++)
                {
                  if (i >= j) {
                    break label441;
                  }
                  localObject = TLRPC.User.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
                  if (localObject == null) {
                    break;
                  }
                  this.users.add(localObject);
                }
                label441:
                this.intermediate_state = TLRPC.TL_updates_state.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
              }
            }
          }
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.new_messages.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.Message)this.new_messages.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.new_encrypted_messages.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        ((TLRPC.EncryptedMessage)this.new_encrypted_messages.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.other_updates.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        ((TLRPC.Update)this.other_updates.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.chats.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        ((TLRPC.Chat)this.chats.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(481674261);
      i = this.users.size();
      paramAbstractSerializedData.writeInt32(i);
      for (j = 0; j < i; j++) {
        ((TLRPC.User)this.users.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      this.intermediate_state.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_updates_differenceTooLong
    extends TLRPC.updates_Difference
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.pts = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.pts);
    }
  }
  
  public static class TL_updates_getChannelDifference
    extends TLObject
  {
    public static int constructor = 51854712;
    public TLRPC.InputChannel channel;
    public TLRPC.ChannelMessagesFilter filter;
    public int flags;
    public boolean force;
    public int limit;
    public int pts;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.updates_ChannelDifference.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.force) {}
      for (int i = this.flags | 0x1;; i = this.flags & 0xFFFFFFFE)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        this.channel.serializeToStream(paramAbstractSerializedData);
        this.filter.serializeToStream(paramAbstractSerializedData);
        paramAbstractSerializedData.writeInt32(this.pts);
        paramAbstractSerializedData.writeInt32(this.limit);
        return;
      }
    }
  }
  
  public static class TL_updates_getDifference
    extends TLObject
  {
    public static int constructor = 630429265;
    public int date;
    public int flags;
    public int pts;
    public int pts_total_limit;
    public int qts;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.updates_Difference.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.flags);
      paramAbstractSerializedData.writeInt32(this.pts);
      if ((this.flags & 0x1) != 0) {
        paramAbstractSerializedData.writeInt32(this.pts_total_limit);
      }
      paramAbstractSerializedData.writeInt32(this.date);
      paramAbstractSerializedData.writeInt32(this.qts);
    }
  }
  
  public static class TL_updates_getState
    extends TLObject
  {
    public static int constructor = -304838614;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_updates_state.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_updates_state
    extends TLObject
  {
    public static int constructor = -NUM;
    public int date;
    public int pts;
    public int qts;
    public int seq;
    public int unread_count;
    
    public static TL_updates_state TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_updates_state", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_updates_state localTL_updates_state;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_updates_state)
      {
        return paramAbstractSerializedData;
        localTL_updates_state = new TL_updates_state();
        localTL_updates_state.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.pts = paramAbstractSerializedData.readInt32(paramBoolean);
      this.qts = paramAbstractSerializedData.readInt32(paramBoolean);
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
      this.seq = paramAbstractSerializedData.readInt32(paramBoolean);
      this.unread_count = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.pts);
      paramAbstractSerializedData.writeInt32(this.qts);
      paramAbstractSerializedData.writeInt32(this.date);
      paramAbstractSerializedData.writeInt32(this.seq);
      paramAbstractSerializedData.writeInt32(this.unread_count);
    }
  }
  
  public static class TL_upload_cdnFile
    extends TLRPC.upload_CdnFile
  {
    public static int constructor = -NUM;
    
    public void freeResources()
    {
      if (this.disableFree) {}
      for (;;)
      {
        return;
        if (this.bytes != null)
        {
          this.bytes.reuse();
          this.bytes = null;
        }
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.bytes = paramAbstractSerializedData.readByteBuffer(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeByteBuffer(this.bytes);
    }
  }
  
  public static class TL_upload_cdnFileReuploadNeeded
    extends TLRPC.upload_CdnFile
  {
    public static int constructor = -290921362;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.request_token = paramAbstractSerializedData.readByteArray(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeByteArray(this.request_token);
    }
  }
  
  public static class TL_upload_file
    extends TLRPC.upload_File
  {
    public static int constructor = 157948117;
    
    public void freeResources()
    {
      if (this.disableFree) {}
      for (;;)
      {
        return;
        if (this.bytes != null)
        {
          this.bytes.reuse();
          this.bytes = null;
        }
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.type = TLRPC.storage_FileType.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.mtime = paramAbstractSerializedData.readInt32(paramBoolean);
      this.bytes = paramAbstractSerializedData.readByteBuffer(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.type.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(this.mtime);
      paramAbstractSerializedData.writeByteBuffer(this.bytes);
    }
  }
  
  public static class TL_upload_fileCdnRedirect
    extends TLRPC.upload_File
  {
    public static int constructor = -242427324;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.dc_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.file_token = paramAbstractSerializedData.readByteArray(paramBoolean);
      this.encryption_key = paramAbstractSerializedData.readByteArray(paramBoolean);
      this.encryption_iv = paramAbstractSerializedData.readByteArray(paramBoolean);
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
      }
      for (i = 0;; i++)
      {
        TLRPC.TL_fileHash localTL_fileHash;
        if (i < j)
        {
          localTL_fileHash = TLRPC.TL_fileHash.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localTL_fileHash != null) {}
        }
        else
        {
          return;
        }
        this.file_hashes.add(localTL_fileHash);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.dc_id);
      paramAbstractSerializedData.writeByteArray(this.file_token);
      paramAbstractSerializedData.writeByteArray(this.encryption_key);
      paramAbstractSerializedData.writeByteArray(this.encryption_iv);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.file_hashes.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.TL_fileHash)this.file_hashes.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_upload_getCdnFile
    extends TLObject
  {
    public static int constructor = 536919235;
    public byte[] file_token;
    public int limit;
    public int offset;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.upload_CdnFile.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeByteArray(this.file_token);
      paramAbstractSerializedData.writeInt32(this.offset);
      paramAbstractSerializedData.writeInt32(this.limit);
    }
  }
  
  public static class TL_upload_getCdnFileHashes
    extends TLObject
  {
    public static int constructor = NUM;
    public byte[] file_token;
    public int offset;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      TLRPC.Vector localVector = new TLRPC.Vector();
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      for (paramInt = 0;; paramInt++)
      {
        TLRPC.TL_fileHash localTL_fileHash;
        if (paramInt < i)
        {
          localTL_fileHash = TLRPC.TL_fileHash.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localTL_fileHash != null) {}
        }
        else
        {
          return localVector;
        }
        localVector.objects.add(localTL_fileHash);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeByteArray(this.file_token);
      paramAbstractSerializedData.writeInt32(this.offset);
    }
  }
  
  public static class TL_upload_getFile
    extends TLObject
  {
    public static int constructor = -475607115;
    public int limit;
    public TLRPC.InputFileLocation location;
    public int offset;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_upload_file.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.location.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(this.offset);
      paramAbstractSerializedData.writeInt32(this.limit);
    }
  }
  
  public static class TL_upload_getFileHashes
    extends TLObject
  {
    public static int constructor = -956147407;
    public TLRPC.InputFileLocation location;
    public int offset;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      TLRPC.Vector localVector = new TLRPC.Vector();
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      for (paramInt = 0;; paramInt++)
      {
        TLRPC.TL_fileHash localTL_fileHash;
        if (paramInt < i)
        {
          localTL_fileHash = TLRPC.TL_fileHash.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localTL_fileHash != null) {}
        }
        else
        {
          return localVector;
        }
        localVector.objects.add(localTL_fileHash);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.location.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(this.offset);
    }
  }
  
  public static class TL_upload_getWebFile
    extends TLObject
  {
    public static int constructor = 619086221;
    public int limit;
    public TLRPC.TL_inputWebFileLocation location;
    public int offset;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_upload_webFile.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.location.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(this.offset);
      paramAbstractSerializedData.writeInt32(this.limit);
    }
  }
  
  public static class TL_upload_reuploadCdnFile
    extends TLObject
  {
    public static int constructor = -NUM;
    public byte[] file_token;
    public byte[] request_token;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      TLRPC.Vector localVector = new TLRPC.Vector();
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      for (paramInt = 0;; paramInt++)
      {
        TLRPC.TL_fileHash localTL_fileHash;
        if (paramInt < i)
        {
          localTL_fileHash = TLRPC.TL_fileHash.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localTL_fileHash != null) {}
        }
        else
        {
          return localVector;
        }
        localVector.objects.add(localTL_fileHash);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeByteArray(this.file_token);
      paramAbstractSerializedData.writeByteArray(this.request_token);
    }
  }
  
  public static class TL_upload_saveBigFilePart
    extends TLObject
  {
    public static int constructor = -562337987;
    public NativeByteBuffer bytes;
    public long file_id;
    public int file_part;
    public int file_total_parts;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void freeResources()
    {
      if (this.disableFree) {}
      for (;;)
      {
        return;
        if (this.bytes != null)
        {
          this.bytes.reuse();
          this.bytes = null;
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.file_id);
      paramAbstractSerializedData.writeInt32(this.file_part);
      paramAbstractSerializedData.writeInt32(this.file_total_parts);
      paramAbstractSerializedData.writeByteBuffer(this.bytes);
    }
  }
  
  public static class TL_upload_saveFilePart
    extends TLObject
  {
    public static int constructor = -NUM;
    public NativeByteBuffer bytes;
    public long file_id;
    public int file_part;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.Bool.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void freeResources()
    {
      if (this.disableFree) {}
      for (;;)
      {
        return;
        if (this.bytes != null)
        {
          this.bytes.reuse();
          this.bytes = null;
        }
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.file_id);
      paramAbstractSerializedData.writeInt32(this.file_part);
      paramAbstractSerializedData.writeByteBuffer(this.bytes);
    }
  }
  
  public static class TL_upload_webFile
    extends TLObject
  {
    public static int constructor = 568808380;
    public NativeByteBuffer bytes;
    public TLRPC.storage_FileType file_type;
    public String mime_type;
    public int mtime;
    public int size;
    
    public static TL_upload_webFile TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_upload_webFile", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_upload_webFile localTL_upload_webFile;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_upload_webFile)
      {
        return paramAbstractSerializedData;
        localTL_upload_webFile = new TL_upload_webFile();
        localTL_upload_webFile.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void freeResources()
    {
      if (this.disableFree) {}
      for (;;)
      {
        return;
        if (this.bytes != null)
        {
          this.bytes.reuse();
          this.bytes = null;
        }
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.size = paramAbstractSerializedData.readInt32(paramBoolean);
      this.mime_type = paramAbstractSerializedData.readString(paramBoolean);
      this.file_type = TLRPC.storage_FileType.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.mtime = paramAbstractSerializedData.readInt32(paramBoolean);
      this.bytes = paramAbstractSerializedData.readByteBuffer(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.size);
      paramAbstractSerializedData.writeString(this.mime_type);
      this.file_type.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(this.mtime);
      paramAbstractSerializedData.writeByteBuffer(this.bytes);
    }
  }
  
  public static class TL_user
    extends TLRPC.User
  {
    public static int constructor = 773059779;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      boolean bool1 = true;
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x400) != 0)
      {
        bool2 = true;
        this.self = bool2;
        if ((this.flags & 0x800) == 0) {
          break label458;
        }
        bool2 = true;
        label45:
        this.contact = bool2;
        if ((this.flags & 0x1000) == 0) {
          break label464;
        }
        bool2 = true;
        label65:
        this.mutual_contact = bool2;
        if ((this.flags & 0x2000) == 0) {
          break label470;
        }
        bool2 = true;
        label85:
        this.deleted = bool2;
        if ((this.flags & 0x4000) == 0) {
          break label476;
        }
        bool2 = true;
        label105:
        this.bot = bool2;
        if ((this.flags & 0x8000) == 0) {
          break label482;
        }
        bool2 = true;
        label124:
        this.bot_chat_history = bool2;
        if ((this.flags & 0x10000) == 0) {
          break label488;
        }
        bool2 = true;
        label143:
        this.bot_nochats = bool2;
        if ((this.flags & 0x20000) == 0) {
          break label494;
        }
        bool2 = true;
        label162:
        this.verified = bool2;
        if ((this.flags & 0x40000) == 0) {
          break label500;
        }
        bool2 = true;
        label181:
        this.restricted = bool2;
        if ((this.flags & 0x100000) == 0) {
          break label506;
        }
        bool2 = true;
        label200:
        this.min = bool2;
        if ((this.flags & 0x200000) == 0) {
          break label512;
        }
      }
      label458:
      label464:
      label470:
      label476:
      label482:
      label488:
      label494:
      label500:
      label506:
      label512:
      for (boolean bool2 = bool1;; bool2 = false)
      {
        this.bot_inline_geo = bool2;
        this.id = paramAbstractSerializedData.readInt32(paramBoolean);
        if ((this.flags & 0x1) != 0) {
          this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
        }
        if ((this.flags & 0x2) != 0) {
          this.first_name = paramAbstractSerializedData.readString(paramBoolean);
        }
        if ((this.flags & 0x4) != 0) {
          this.last_name = paramAbstractSerializedData.readString(paramBoolean);
        }
        if ((this.flags & 0x8) != 0) {
          this.username = paramAbstractSerializedData.readString(paramBoolean);
        }
        if ((this.flags & 0x10) != 0) {
          this.phone = paramAbstractSerializedData.readString(paramBoolean);
        }
        if ((this.flags & 0x20) != 0) {
          this.photo = TLRPC.UserProfilePhoto.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        }
        if ((this.flags & 0x40) != 0) {
          this.status = TLRPC.UserStatus.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        }
        if ((this.flags & 0x4000) != 0) {
          this.bot_info_version = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x40000) != 0) {
          this.restriction_reason = paramAbstractSerializedData.readString(paramBoolean);
        }
        if ((this.flags & 0x80000) != 0) {
          this.bot_inline_placeholder = paramAbstractSerializedData.readString(paramBoolean);
        }
        if ((this.flags & 0x400000) != 0) {
          this.lang_code = paramAbstractSerializedData.readString(paramBoolean);
        }
        return;
        bool2 = false;
        break;
        bool2 = false;
        break label45;
        bool2 = false;
        break label65;
        bool2 = false;
        break label85;
        bool2 = false;
        break label105;
        bool2 = false;
        break label124;
        bool2 = false;
        break label143;
        bool2 = false;
        break label162;
        bool2 = false;
        break label181;
        bool2 = false;
        break label200;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.self)
      {
        i = this.flags | 0x400;
        this.flags = i;
        if (!this.contact) {
          break label457;
        }
        i = this.flags | 0x800;
        label44:
        this.flags = i;
        if (!this.mutual_contact) {
          break label469;
        }
        i = this.flags | 0x1000;
        label65:
        this.flags = i;
        if (!this.deleted) {
          break label481;
        }
        i = this.flags | 0x2000;
        label86:
        this.flags = i;
        if (!this.bot) {
          break label493;
        }
        i = this.flags | 0x4000;
        label107:
        this.flags = i;
        if (!this.bot_chat_history) {
          break label505;
        }
        i = this.flags | 0x8000;
        label127:
        this.flags = i;
        if (!this.bot_nochats) {
          break label516;
        }
        i = this.flags | 0x10000;
        label147:
        this.flags = i;
        if (!this.verified) {
          break label527;
        }
        i = this.flags | 0x20000;
        label167:
        this.flags = i;
        if (!this.restricted) {
          break label538;
        }
        i = this.flags | 0x40000;
        label187:
        this.flags = i;
        if (!this.min) {
          break label549;
        }
        i = this.flags | 0x100000;
        label207:
        this.flags = i;
        if (!this.bot_inline_geo) {
          break label560;
        }
      }
      label457:
      label469:
      label481:
      label493:
      label505:
      label516:
      label527:
      label538:
      label549:
      label560:
      for (int i = this.flags | 0x200000;; i = this.flags & 0xFFDFFFFF)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(this.id);
        if ((this.flags & 0x1) != 0) {
          paramAbstractSerializedData.writeInt64(this.access_hash);
        }
        if ((this.flags & 0x2) != 0) {
          paramAbstractSerializedData.writeString(this.first_name);
        }
        if ((this.flags & 0x4) != 0) {
          paramAbstractSerializedData.writeString(this.last_name);
        }
        if ((this.flags & 0x8) != 0) {
          paramAbstractSerializedData.writeString(this.username);
        }
        if ((this.flags & 0x10) != 0) {
          paramAbstractSerializedData.writeString(this.phone);
        }
        if ((this.flags & 0x20) != 0) {
          this.photo.serializeToStream(paramAbstractSerializedData);
        }
        if ((this.flags & 0x40) != 0) {
          this.status.serializeToStream(paramAbstractSerializedData);
        }
        if ((this.flags & 0x4000) != 0) {
          paramAbstractSerializedData.writeInt32(this.bot_info_version);
        }
        if ((this.flags & 0x40000) != 0) {
          paramAbstractSerializedData.writeString(this.restriction_reason);
        }
        if ((this.flags & 0x80000) != 0) {
          paramAbstractSerializedData.writeString(this.bot_inline_placeholder);
        }
        if ((this.flags & 0x400000) != 0) {
          paramAbstractSerializedData.writeString(this.lang_code);
        }
        return;
        i = this.flags & 0xFBFF;
        break;
        i = this.flags & 0xF7FF;
        break label44;
        i = this.flags & 0xEFFF;
        break label65;
        i = this.flags & 0xDFFF;
        break label86;
        i = this.flags & 0xBFFF;
        break label107;
        i = this.flags & 0xFFFF7FFF;
        break label127;
        i = this.flags & 0xFFFEFFFF;
        break label147;
        i = this.flags & 0xFFFDFFFF;
        break label167;
        i = this.flags & 0xFFFBFFFF;
        break label187;
        i = this.flags & 0xFFEFFFFF;
        break label207;
      }
    }
  }
  
  public static class TL_userContact_old
    extends TLRPC.TL_userContact_old2
  {
    public static int constructor = -218397927;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.first_name = paramAbstractSerializedData.readString(paramBoolean);
      this.last_name = paramAbstractSerializedData.readString(paramBoolean);
      this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
      this.phone = paramAbstractSerializedData.readString(paramBoolean);
      this.photo = TLRPC.UserProfilePhoto.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.status = TLRPC.UserStatus.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.id);
      paramAbstractSerializedData.writeString(this.first_name);
      paramAbstractSerializedData.writeString(this.last_name);
      paramAbstractSerializedData.writeInt64(this.access_hash);
      paramAbstractSerializedData.writeString(this.phone);
      this.photo.serializeToStream(paramAbstractSerializedData);
      this.status.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_userContact_old2
    extends TLRPC.User
  {
    public static int constructor = -894214632;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.first_name = paramAbstractSerializedData.readString(paramBoolean);
      this.last_name = paramAbstractSerializedData.readString(paramBoolean);
      this.username = paramAbstractSerializedData.readString(paramBoolean);
      this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
      this.phone = paramAbstractSerializedData.readString(paramBoolean);
      this.photo = TLRPC.UserProfilePhoto.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.status = TLRPC.UserStatus.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.id);
      paramAbstractSerializedData.writeString(this.first_name);
      paramAbstractSerializedData.writeString(this.last_name);
      paramAbstractSerializedData.writeString(this.username);
      paramAbstractSerializedData.writeInt64(this.access_hash);
      paramAbstractSerializedData.writeString(this.phone);
      this.photo.serializeToStream(paramAbstractSerializedData);
      this.status.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_userDeleted_old
    extends TLRPC.TL_userDeleted_old2
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.first_name = paramAbstractSerializedData.readString(paramBoolean);
      this.last_name = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.id);
      paramAbstractSerializedData.writeString(this.first_name);
      paramAbstractSerializedData.writeString(this.last_name);
    }
  }
  
  public static class TL_userDeleted_old2
    extends TLRPC.User
  {
    public static int constructor = -704549510;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.first_name = paramAbstractSerializedData.readString(paramBoolean);
      this.last_name = paramAbstractSerializedData.readString(paramBoolean);
      this.username = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.id);
      paramAbstractSerializedData.writeString(this.first_name);
      paramAbstractSerializedData.writeString(this.last_name);
      paramAbstractSerializedData.writeString(this.username);
    }
  }
  
  public static class TL_userEmpty
    extends TLRPC.User
  {
    public static int constructor = 537022650;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.id);
    }
  }
  
  public static class TL_userForeign_old
    extends TLRPC.TL_userForeign_old2
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.first_name = paramAbstractSerializedData.readString(paramBoolean);
      this.last_name = paramAbstractSerializedData.readString(paramBoolean);
      this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
      this.photo = TLRPC.UserProfilePhoto.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.status = TLRPC.UserStatus.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.id);
      paramAbstractSerializedData.writeString(this.first_name);
      paramAbstractSerializedData.writeString(this.last_name);
      paramAbstractSerializedData.writeInt64(this.access_hash);
      this.photo.serializeToStream(paramAbstractSerializedData);
      this.status.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_userForeign_old2
    extends TLRPC.User
  {
    public static int constructor = 123533224;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.first_name = paramAbstractSerializedData.readString(paramBoolean);
      this.last_name = paramAbstractSerializedData.readString(paramBoolean);
      this.username = paramAbstractSerializedData.readString(paramBoolean);
      this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
      this.photo = TLRPC.UserProfilePhoto.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.status = TLRPC.UserStatus.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.id);
      paramAbstractSerializedData.writeString(this.first_name);
      paramAbstractSerializedData.writeString(this.last_name);
      paramAbstractSerializedData.writeString(this.username);
      paramAbstractSerializedData.writeInt64(this.access_hash);
      this.photo.serializeToStream(paramAbstractSerializedData);
      this.status.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_userFull
    extends TLObject
  {
    public static int constructor = 253890367;
    public String about;
    public boolean blocked;
    public TLRPC.BotInfo bot_info;
    public int common_chats_count;
    public int flags;
    public TLRPC.TL_contacts_link link;
    public TLRPC.PeerNotifySettings notify_settings;
    public boolean phone_calls_available;
    public boolean phone_calls_private;
    public TLRPC.Photo profile_photo;
    public TLRPC.User user;
    
    public static TL_userFull TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_userFull", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_userFull localTL_userFull;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_userFull)
      {
        return paramAbstractSerializedData;
        localTL_userFull = new TL_userFull();
        localTL_userFull.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      boolean bool1 = true;
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0)
      {
        bool2 = true;
        this.blocked = bool2;
        if ((this.flags & 0x10) == 0) {
          break label190;
        }
        bool2 = true;
        label42:
        this.phone_calls_available = bool2;
        if ((this.flags & 0x20) == 0) {
          break label196;
        }
      }
      label190:
      label196:
      for (boolean bool2 = bool1;; bool2 = false)
      {
        this.phone_calls_private = bool2;
        this.user = TLRPC.User.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if ((this.flags & 0x2) != 0) {
          this.about = paramAbstractSerializedData.readString(paramBoolean);
        }
        this.link = TLRPC.TL_contacts_link.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if ((this.flags & 0x4) != 0) {
          this.profile_photo = TLRPC.Photo.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        }
        this.notify_settings = TLRPC.PeerNotifySettings.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if ((this.flags & 0x8) != 0) {
          this.bot_info = TLRPC.BotInfo.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        }
        this.common_chats_count = paramAbstractSerializedData.readInt32(paramBoolean);
        return;
        bool2 = false;
        break;
        bool2 = false;
        break label42;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.blocked)
      {
        i = this.flags | 0x1;
        this.flags = i;
        if (!this.phone_calls_available) {
          break label170;
        }
        i = this.flags | 0x10;
        label41:
        this.flags = i;
        if (!this.phone_calls_private) {
          break label181;
        }
      }
      label170:
      label181:
      for (int i = this.flags | 0x20;; i = this.flags & 0xFFFFFFDF)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        this.user.serializeToStream(paramAbstractSerializedData);
        if ((this.flags & 0x2) != 0) {
          paramAbstractSerializedData.writeString(this.about);
        }
        this.link.serializeToStream(paramAbstractSerializedData);
        if ((this.flags & 0x4) != 0) {
          this.profile_photo.serializeToStream(paramAbstractSerializedData);
        }
        this.notify_settings.serializeToStream(paramAbstractSerializedData);
        if ((this.flags & 0x8) != 0) {
          this.bot_info.serializeToStream(paramAbstractSerializedData);
        }
        paramAbstractSerializedData.writeInt32(this.common_chats_count);
        return;
        i = this.flags & 0xFFFFFFFE;
        break;
        i = this.flags & 0xFFFFFFEF;
        break label41;
      }
    }
  }
  
  public static class TL_userProfilePhoto
    extends TLRPC.UserProfilePhoto
  {
    public static int constructor = -715532088;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.photo_id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.photo_small = TLRPC.FileLocation.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.photo_big = TLRPC.FileLocation.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.photo_id);
      this.photo_small.serializeToStream(paramAbstractSerializedData);
      this.photo_big.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_userProfilePhotoEmpty
    extends TLRPC.UserProfilePhoto
  {
    public static int constructor = NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_userProfilePhoto_old
    extends TLRPC.TL_userProfilePhoto
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.photo_small = TLRPC.FileLocation.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.photo_big = TLRPC.FileLocation.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.photo_small.serializeToStream(paramAbstractSerializedData);
      this.photo_big.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_userRequest_old
    extends TLRPC.TL_userRequest_old2
  {
    public static int constructor = 585682608;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.first_name = paramAbstractSerializedData.readString(paramBoolean);
      this.last_name = paramAbstractSerializedData.readString(paramBoolean);
      this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
      this.phone = paramAbstractSerializedData.readString(paramBoolean);
      this.photo = TLRPC.UserProfilePhoto.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.status = TLRPC.UserStatus.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.id);
      paramAbstractSerializedData.writeString(this.first_name);
      paramAbstractSerializedData.writeString(this.last_name);
      paramAbstractSerializedData.writeInt64(this.access_hash);
      paramAbstractSerializedData.writeString(this.phone);
      this.photo.serializeToStream(paramAbstractSerializedData);
      this.status.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_userRequest_old2
    extends TLRPC.User
  {
    public static int constructor = -640891665;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.first_name = paramAbstractSerializedData.readString(paramBoolean);
      this.last_name = paramAbstractSerializedData.readString(paramBoolean);
      this.username = paramAbstractSerializedData.readString(paramBoolean);
      this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
      this.phone = paramAbstractSerializedData.readString(paramBoolean);
      this.photo = TLRPC.UserProfilePhoto.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.status = TLRPC.UserStatus.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.id);
      paramAbstractSerializedData.writeString(this.first_name);
      paramAbstractSerializedData.writeString(this.last_name);
      paramAbstractSerializedData.writeString(this.username);
      paramAbstractSerializedData.writeInt64(this.access_hash);
      paramAbstractSerializedData.writeString(this.phone);
      this.photo.serializeToStream(paramAbstractSerializedData);
      this.status.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_userSelf_old
    extends TLRPC.TL_userSelf_old3
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.first_name = paramAbstractSerializedData.readString(paramBoolean);
      this.last_name = paramAbstractSerializedData.readString(paramBoolean);
      this.phone = paramAbstractSerializedData.readString(paramBoolean);
      this.photo = TLRPC.UserProfilePhoto.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.status = TLRPC.UserStatus.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.inactive = paramAbstractSerializedData.readBool(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.id);
      paramAbstractSerializedData.writeString(this.first_name);
      paramAbstractSerializedData.writeString(this.last_name);
      paramAbstractSerializedData.writeString(this.phone);
      this.photo.serializeToStream(paramAbstractSerializedData);
      this.status.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeBool(this.inactive);
    }
  }
  
  public static class TL_userSelf_old2
    extends TLRPC.TL_userSelf_old3
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.first_name = paramAbstractSerializedData.readString(paramBoolean);
      this.last_name = paramAbstractSerializedData.readString(paramBoolean);
      this.username = paramAbstractSerializedData.readString(paramBoolean);
      this.phone = paramAbstractSerializedData.readString(paramBoolean);
      this.photo = TLRPC.UserProfilePhoto.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.status = TLRPC.UserStatus.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.inactive = paramAbstractSerializedData.readBool(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.id);
      paramAbstractSerializedData.writeString(this.first_name);
      paramAbstractSerializedData.writeString(this.last_name);
      paramAbstractSerializedData.writeString(this.username);
      paramAbstractSerializedData.writeString(this.phone);
      this.photo.serializeToStream(paramAbstractSerializedData);
      this.status.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeBool(this.inactive);
    }
  }
  
  public static class TL_userSelf_old3
    extends TLRPC.User
  {
    public static int constructor = 476112392;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.first_name = paramAbstractSerializedData.readString(paramBoolean);
      this.last_name = paramAbstractSerializedData.readString(paramBoolean);
      this.username = paramAbstractSerializedData.readString(paramBoolean);
      this.phone = paramAbstractSerializedData.readString(paramBoolean);
      this.photo = TLRPC.UserProfilePhoto.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.status = TLRPC.UserStatus.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.id);
      paramAbstractSerializedData.writeString(this.first_name);
      paramAbstractSerializedData.writeString(this.last_name);
      paramAbstractSerializedData.writeString(this.username);
      paramAbstractSerializedData.writeString(this.phone);
      this.photo.serializeToStream(paramAbstractSerializedData);
      this.status.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_userStatusEmpty
    extends TLRPC.UserStatus
  {
    public static int constructor = 164646985;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_userStatusLastMonth
    extends TLRPC.UserStatus
  {
    public static int constructor = NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_userStatusLastWeek
    extends TLRPC.UserStatus
  {
    public static int constructor = 129960444;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_userStatusOffline
    extends TLRPC.UserStatus
  {
    public static int constructor = 9203775;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.expires = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.expires);
    }
  }
  
  public static class TL_userStatusOnline
    extends TLRPC.UserStatus
  {
    public static int constructor = -306628279;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.expires = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.expires);
    }
  }
  
  public static class TL_userStatusRecently
    extends TLRPC.UserStatus
  {
    public static int constructor = -496024847;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_user_layer65
    extends TLRPC.TL_user
  {
    public static int constructor = -787638374;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      boolean bool1 = true;
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x400) != 0)
      {
        bool2 = true;
        this.self = bool2;
        if ((this.flags & 0x800) == 0) {
          break label439;
        }
        bool2 = true;
        label45:
        this.contact = bool2;
        if ((this.flags & 0x1000) == 0) {
          break label445;
        }
        bool2 = true;
        label65:
        this.mutual_contact = bool2;
        if ((this.flags & 0x2000) == 0) {
          break label451;
        }
        bool2 = true;
        label85:
        this.deleted = bool2;
        if ((this.flags & 0x4000) == 0) {
          break label457;
        }
        bool2 = true;
        label105:
        this.bot = bool2;
        if ((this.flags & 0x8000) == 0) {
          break label463;
        }
        bool2 = true;
        label124:
        this.bot_chat_history = bool2;
        if ((this.flags & 0x10000) == 0) {
          break label469;
        }
        bool2 = true;
        label143:
        this.bot_nochats = bool2;
        if ((this.flags & 0x20000) == 0) {
          break label475;
        }
        bool2 = true;
        label162:
        this.verified = bool2;
        if ((this.flags & 0x40000) == 0) {
          break label481;
        }
        bool2 = true;
        label181:
        this.restricted = bool2;
        if ((this.flags & 0x100000) == 0) {
          break label487;
        }
        bool2 = true;
        label200:
        this.min = bool2;
        if ((this.flags & 0x200000) == 0) {
          break label493;
        }
      }
      label439:
      label445:
      label451:
      label457:
      label463:
      label469:
      label475:
      label481:
      label487:
      label493:
      for (boolean bool2 = bool1;; bool2 = false)
      {
        this.bot_inline_geo = bool2;
        this.id = paramAbstractSerializedData.readInt32(paramBoolean);
        if ((this.flags & 0x1) != 0) {
          this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
        }
        if ((this.flags & 0x2) != 0) {
          this.first_name = paramAbstractSerializedData.readString(paramBoolean);
        }
        if ((this.flags & 0x4) != 0) {
          this.last_name = paramAbstractSerializedData.readString(paramBoolean);
        }
        if ((this.flags & 0x8) != 0) {
          this.username = paramAbstractSerializedData.readString(paramBoolean);
        }
        if ((this.flags & 0x10) != 0) {
          this.phone = paramAbstractSerializedData.readString(paramBoolean);
        }
        if ((this.flags & 0x20) != 0) {
          this.photo = TLRPC.UserProfilePhoto.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        }
        if ((this.flags & 0x40) != 0) {
          this.status = TLRPC.UserStatus.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        }
        if ((this.flags & 0x4000) != 0) {
          this.bot_info_version = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        if ((this.flags & 0x40000) != 0) {
          this.restriction_reason = paramAbstractSerializedData.readString(paramBoolean);
        }
        if ((this.flags & 0x80000) != 0) {
          this.bot_inline_placeholder = paramAbstractSerializedData.readString(paramBoolean);
        }
        return;
        bool2 = false;
        break;
        bool2 = false;
        break label45;
        bool2 = false;
        break label65;
        bool2 = false;
        break label85;
        bool2 = false;
        break label105;
        bool2 = false;
        break label124;
        bool2 = false;
        break label143;
        bool2 = false;
        break label162;
        bool2 = false;
        break label181;
        bool2 = false;
        break label200;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.self)
      {
        i = this.flags | 0x400;
        this.flags = i;
        if (!this.contact) {
          break label439;
        }
        i = this.flags | 0x800;
        label44:
        this.flags = i;
        if (!this.mutual_contact) {
          break label451;
        }
        i = this.flags | 0x1000;
        label65:
        this.flags = i;
        if (!this.deleted) {
          break label463;
        }
        i = this.flags | 0x2000;
        label86:
        this.flags = i;
        if (!this.bot) {
          break label475;
        }
        i = this.flags | 0x4000;
        label107:
        this.flags = i;
        if (!this.bot_chat_history) {
          break label487;
        }
        i = this.flags | 0x8000;
        label127:
        this.flags = i;
        if (!this.bot_nochats) {
          break label498;
        }
        i = this.flags | 0x10000;
        label147:
        this.flags = i;
        if (!this.verified) {
          break label509;
        }
        i = this.flags | 0x20000;
        label167:
        this.flags = i;
        if (!this.restricted) {
          break label520;
        }
        i = this.flags | 0x40000;
        label187:
        this.flags = i;
        if (!this.min) {
          break label531;
        }
        i = this.flags | 0x100000;
        label207:
        this.flags = i;
        if (!this.bot_inline_geo) {
          break label542;
        }
      }
      label439:
      label451:
      label463:
      label475:
      label487:
      label498:
      label509:
      label520:
      label531:
      label542:
      for (int i = this.flags | 0x200000;; i = this.flags & 0xFFDFFFFF)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(this.id);
        if ((this.flags & 0x1) != 0) {
          paramAbstractSerializedData.writeInt64(this.access_hash);
        }
        if ((this.flags & 0x2) != 0) {
          paramAbstractSerializedData.writeString(this.first_name);
        }
        if ((this.flags & 0x4) != 0) {
          paramAbstractSerializedData.writeString(this.last_name);
        }
        if ((this.flags & 0x8) != 0) {
          paramAbstractSerializedData.writeString(this.username);
        }
        if ((this.flags & 0x10) != 0) {
          paramAbstractSerializedData.writeString(this.phone);
        }
        if ((this.flags & 0x20) != 0) {
          this.photo.serializeToStream(paramAbstractSerializedData);
        }
        if ((this.flags & 0x40) != 0) {
          this.status.serializeToStream(paramAbstractSerializedData);
        }
        if ((this.flags & 0x4000) != 0) {
          paramAbstractSerializedData.writeInt32(this.bot_info_version);
        }
        if ((this.flags & 0x40000) != 0) {
          paramAbstractSerializedData.writeString(this.restriction_reason);
        }
        if ((this.flags & 0x80000) != 0) {
          paramAbstractSerializedData.writeString(this.bot_inline_placeholder);
        }
        return;
        i = this.flags & 0xFBFF;
        break;
        i = this.flags & 0xF7FF;
        break label44;
        i = this.flags & 0xEFFF;
        break label65;
        i = this.flags & 0xDFFF;
        break label86;
        i = this.flags & 0xBFFF;
        break label107;
        i = this.flags & 0xFFFF7FFF;
        break label127;
        i = this.flags & 0xFFFEFFFF;
        break label147;
        i = this.flags & 0xFFFDFFFF;
        break label167;
        i = this.flags & 0xFFFBFFFF;
        break label187;
        i = this.flags & 0xFFEFFFFF;
        break label207;
      }
    }
  }
  
  public static class TL_user_old
    extends TLRPC.TL_user
  {
    public static int constructor = 585404530;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      boolean bool1 = true;
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x400) != 0)
      {
        bool2 = true;
        this.self = bool2;
        if ((this.flags & 0x800) == 0) {
          break label363;
        }
        bool2 = true;
        label45:
        this.contact = bool2;
        if ((this.flags & 0x1000) == 0) {
          break label369;
        }
        bool2 = true;
        label65:
        this.mutual_contact = bool2;
        if ((this.flags & 0x2000) == 0) {
          break label375;
        }
        bool2 = true;
        label85:
        this.deleted = bool2;
        if ((this.flags & 0x4000) == 0) {
          break label381;
        }
        bool2 = true;
        label105:
        this.bot = bool2;
        if ((this.flags & 0x8000) == 0) {
          break label387;
        }
        bool2 = true;
        label124:
        this.bot_chat_history = bool2;
        if ((this.flags & 0x10000) == 0) {
          break label393;
        }
        bool2 = true;
        label143:
        this.bot_nochats = bool2;
        if ((this.flags & 0x20000) == 0) {
          break label399;
        }
        bool2 = true;
        label162:
        this.verified = bool2;
        if ((this.flags & 0x40000) == 0) {
          break label405;
        }
      }
      label363:
      label369:
      label375:
      label381:
      label387:
      label393:
      label399:
      label405:
      for (boolean bool2 = bool1;; bool2 = false)
      {
        this.explicit_content = bool2;
        this.id = paramAbstractSerializedData.readInt32(paramBoolean);
        if ((this.flags & 0x1) != 0) {
          this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
        }
        if ((this.flags & 0x2) != 0) {
          this.first_name = paramAbstractSerializedData.readString(paramBoolean);
        }
        if ((this.flags & 0x4) != 0) {
          this.last_name = paramAbstractSerializedData.readString(paramBoolean);
        }
        if ((this.flags & 0x8) != 0) {
          this.username = paramAbstractSerializedData.readString(paramBoolean);
        }
        if ((this.flags & 0x10) != 0) {
          this.phone = paramAbstractSerializedData.readString(paramBoolean);
        }
        if ((this.flags & 0x20) != 0) {
          this.photo = TLRPC.UserProfilePhoto.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        }
        if ((this.flags & 0x40) != 0) {
          this.status = TLRPC.UserStatus.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        }
        if ((this.flags & 0x4000) != 0) {
          this.bot_info_version = paramAbstractSerializedData.readInt32(paramBoolean);
        }
        return;
        bool2 = false;
        break;
        bool2 = false;
        break label45;
        bool2 = false;
        break label65;
        bool2 = false;
        break label85;
        bool2 = false;
        break label105;
        bool2 = false;
        break label124;
        bool2 = false;
        break label143;
        bool2 = false;
        break label162;
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      if (this.self)
      {
        i = this.flags | 0x400;
        this.flags = i;
        if (!this.contact) {
          break label363;
        }
        i = this.flags | 0x800;
        label44:
        this.flags = i;
        if (!this.mutual_contact) {
          break label375;
        }
        i = this.flags | 0x1000;
        label65:
        this.flags = i;
        if (!this.deleted) {
          break label387;
        }
        i = this.flags | 0x2000;
        label86:
        this.flags = i;
        if (!this.bot) {
          break label399;
        }
        i = this.flags | 0x4000;
        label107:
        this.flags = i;
        if (!this.bot_chat_history) {
          break label411;
        }
        i = this.flags | 0x8000;
        label127:
        this.flags = i;
        if (!this.bot_nochats) {
          break label422;
        }
        i = this.flags | 0x10000;
        label147:
        this.flags = i;
        if (!this.verified) {
          break label433;
        }
        i = this.flags | 0x20000;
        label167:
        this.flags = i;
        if (!this.explicit_content) {
          break label444;
        }
      }
      label363:
      label375:
      label387:
      label399:
      label411:
      label422:
      label433:
      label444:
      for (int i = this.flags | 0x40000;; i = this.flags & 0xFFFBFFFF)
      {
        this.flags = i;
        paramAbstractSerializedData.writeInt32(this.flags);
        paramAbstractSerializedData.writeInt32(this.id);
        if ((this.flags & 0x1) != 0) {
          paramAbstractSerializedData.writeInt64(this.access_hash);
        }
        if ((this.flags & 0x2) != 0) {
          paramAbstractSerializedData.writeString(this.first_name);
        }
        if ((this.flags & 0x4) != 0) {
          paramAbstractSerializedData.writeString(this.last_name);
        }
        if ((this.flags & 0x8) != 0) {
          paramAbstractSerializedData.writeString(this.username);
        }
        if ((this.flags & 0x10) != 0) {
          paramAbstractSerializedData.writeString(this.phone);
        }
        if ((this.flags & 0x20) != 0) {
          this.photo.serializeToStream(paramAbstractSerializedData);
        }
        if ((this.flags & 0x40) != 0) {
          this.status.serializeToStream(paramAbstractSerializedData);
        }
        if ((this.flags & 0x4000) != 0) {
          paramAbstractSerializedData.writeInt32(this.bot_info_version);
        }
        return;
        i = this.flags & 0xFBFF;
        break;
        i = this.flags & 0xF7FF;
        break label44;
        i = this.flags & 0xEFFF;
        break label65;
        i = this.flags & 0xDFFF;
        break label86;
        i = this.flags & 0xBFFF;
        break label107;
        i = this.flags & 0xFFFF7FFF;
        break label127;
        i = this.flags & 0xFFFEFFFF;
        break label147;
        i = this.flags & 0xFFFDFFFF;
        break label167;
      }
    }
  }
  
  public static class TL_users_getFullUser
    extends TLObject
  {
    public static int constructor = -902781519;
    public TLRPC.InputUser id;
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      return TLRPC.TL_userFull.TLdeserialize(paramAbstractSerializedData, paramInt, paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      this.id.serializeToStream(paramAbstractSerializedData);
    }
  }
  
  public static class TL_users_getUsers
    extends TLObject
  {
    public static int constructor = 227648840;
    public ArrayList<TLRPC.InputUser> id = new ArrayList();
    
    public TLObject deserializeResponse(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      TLRPC.Vector localVector = new TLRPC.Vector();
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      for (paramInt = 0;; paramInt++)
      {
        TLRPC.User localUser;
        if (paramInt < i)
        {
          localUser = TLRPC.User.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localUser != null) {}
        }
        else
        {
          return localVector;
        }
        localVector.objects.add(localUser);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.id.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.InputUser)this.id.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_videoEmpty_layer45
    extends TLRPC.Video
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt64(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.id);
    }
  }
  
  public static class TL_videoEncrypted
    extends TLRPC.TL_video_layer45
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
      this.user_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
      this.caption = paramAbstractSerializedData.readString(paramBoolean);
      this.duration = paramAbstractSerializedData.readInt32(paramBoolean);
      this.size = paramAbstractSerializedData.readInt32(paramBoolean);
      this.thumb = TLRPC.PhotoSize.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.dc_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.w = paramAbstractSerializedData.readInt32(paramBoolean);
      this.h = paramAbstractSerializedData.readInt32(paramBoolean);
      this.key = paramAbstractSerializedData.readByteArray(paramBoolean);
      this.iv = paramAbstractSerializedData.readByteArray(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.id);
      paramAbstractSerializedData.writeInt64(this.access_hash);
      paramAbstractSerializedData.writeInt32(this.user_id);
      paramAbstractSerializedData.writeInt32(this.date);
      paramAbstractSerializedData.writeString(this.caption);
      paramAbstractSerializedData.writeInt32(this.duration);
      paramAbstractSerializedData.writeInt32(this.size);
      this.thumb.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(this.dc_id);
      paramAbstractSerializedData.writeInt32(this.w);
      paramAbstractSerializedData.writeInt32(this.h);
      paramAbstractSerializedData.writeByteArray(this.key);
      paramAbstractSerializedData.writeByteArray(this.iv);
    }
  }
  
  public static class TL_video_layer45
    extends TLRPC.Video
  {
    public static int constructor = -148338733;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
      this.duration = paramAbstractSerializedData.readInt32(paramBoolean);
      this.mime_type = paramAbstractSerializedData.readString(paramBoolean);
      this.size = paramAbstractSerializedData.readInt32(paramBoolean);
      this.thumb = TLRPC.PhotoSize.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.dc_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.w = paramAbstractSerializedData.readInt32(paramBoolean);
      this.h = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.id);
      paramAbstractSerializedData.writeInt64(this.access_hash);
      paramAbstractSerializedData.writeInt32(this.date);
      paramAbstractSerializedData.writeInt32(this.duration);
      paramAbstractSerializedData.writeString(this.mime_type);
      paramAbstractSerializedData.writeInt32(this.size);
      this.thumb.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(this.dc_id);
      paramAbstractSerializedData.writeInt32(this.w);
      paramAbstractSerializedData.writeInt32(this.h);
    }
  }
  
  public static class TL_video_old
    extends TLRPC.TL_video_layer45
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
      this.user_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
      this.caption = paramAbstractSerializedData.readString(paramBoolean);
      this.duration = paramAbstractSerializedData.readInt32(paramBoolean);
      this.size = paramAbstractSerializedData.readInt32(paramBoolean);
      this.thumb = TLRPC.PhotoSize.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.dc_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.w = paramAbstractSerializedData.readInt32(paramBoolean);
      this.h = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.id);
      paramAbstractSerializedData.writeInt64(this.access_hash);
      paramAbstractSerializedData.writeInt32(this.user_id);
      paramAbstractSerializedData.writeInt32(this.date);
      paramAbstractSerializedData.writeString(this.caption);
      paramAbstractSerializedData.writeInt32(this.duration);
      paramAbstractSerializedData.writeInt32(this.size);
      this.thumb.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(this.dc_id);
      paramAbstractSerializedData.writeInt32(this.w);
      paramAbstractSerializedData.writeInt32(this.h);
    }
  }
  
  public static class TL_video_old2
    extends TLRPC.TL_video_layer45
  {
    public static int constructor = 948937617;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
      this.user_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
      this.caption = paramAbstractSerializedData.readString(paramBoolean);
      this.duration = paramAbstractSerializedData.readInt32(paramBoolean);
      this.mime_type = paramAbstractSerializedData.readString(paramBoolean);
      this.size = paramAbstractSerializedData.readInt32(paramBoolean);
      this.thumb = TLRPC.PhotoSize.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.dc_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.w = paramAbstractSerializedData.readInt32(paramBoolean);
      this.h = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.id);
      paramAbstractSerializedData.writeInt64(this.access_hash);
      paramAbstractSerializedData.writeInt32(this.user_id);
      paramAbstractSerializedData.writeInt32(this.date);
      paramAbstractSerializedData.writeString(this.caption);
      paramAbstractSerializedData.writeInt32(this.duration);
      paramAbstractSerializedData.writeString(this.mime_type);
      paramAbstractSerializedData.writeInt32(this.size);
      this.thumb.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(this.dc_id);
      paramAbstractSerializedData.writeInt32(this.w);
      paramAbstractSerializedData.writeInt32(this.h);
    }
  }
  
  public static class TL_video_old3
    extends TLRPC.TL_video_layer45
  {
    public static int constructor = -291550643;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
      this.user_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
      this.duration = paramAbstractSerializedData.readInt32(paramBoolean);
      this.size = paramAbstractSerializedData.readInt32(paramBoolean);
      this.thumb = TLRPC.PhotoSize.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      this.dc_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.w = paramAbstractSerializedData.readInt32(paramBoolean);
      this.h = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.id);
      paramAbstractSerializedData.writeInt64(this.access_hash);
      paramAbstractSerializedData.writeInt32(this.user_id);
      paramAbstractSerializedData.writeInt32(this.date);
      paramAbstractSerializedData.writeInt32(this.duration);
      paramAbstractSerializedData.writeInt32(this.size);
      this.thumb.serializeToStream(paramAbstractSerializedData);
      paramAbstractSerializedData.writeInt32(this.dc_id);
      paramAbstractSerializedData.writeInt32(this.w);
      paramAbstractSerializedData.writeInt32(this.h);
    }
  }
  
  public static class TL_wallPaper
    extends TLRPC.WallPaper
  {
    public static int constructor = -860866985;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.title = paramAbstractSerializedData.readString(paramBoolean);
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      TLRPC.PhotoSize localPhotoSize;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else
      {
        int j = paramAbstractSerializedData.readInt32(paramBoolean);
        i = 0;
        if (i >= j) {
          break label107;
        }
        localPhotoSize = TLRPC.PhotoSize.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localPhotoSize != null) {
          break label91;
        }
      }
      for (;;)
      {
        return;
        label91:
        this.sizes.add(localPhotoSize);
        i++;
        break;
        label107:
        this.color = paramAbstractSerializedData.readInt32(paramBoolean);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.id);
      paramAbstractSerializedData.writeString(this.title);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.sizes.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.PhotoSize)this.sizes.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(this.color);
    }
  }
  
  public static class TL_wallPaperSolid
    extends TLRPC.WallPaper
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.title = paramAbstractSerializedData.readString(paramBoolean);
      this.bg_color = paramAbstractSerializedData.readInt32(paramBoolean);
      this.color = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.id);
      paramAbstractSerializedData.writeString(this.title);
      paramAbstractSerializedData.writeInt32(this.bg_color);
      paramAbstractSerializedData.writeInt32(this.color);
    }
  }
  
  public static class TL_webAuthorization
    extends TLObject
  {
    public static int constructor = -892779534;
    public int bot_id;
    public String browser;
    public int date_active;
    public int date_created;
    public String domain;
    public long hash;
    public String ip;
    public String platform;
    public String region;
    
    public static TL_webAuthorization TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      if (constructor != paramInt) {
        if (paramBoolean) {
          throw new RuntimeException(String.format("can't parse magic %x in TL_webAuthorization", new Object[] { Integer.valueOf(paramInt) }));
        }
      }
      TL_webAuthorization localTL_webAuthorization;
      for (paramAbstractSerializedData = null;; paramAbstractSerializedData = localTL_webAuthorization)
      {
        return paramAbstractSerializedData;
        localTL_webAuthorization = new TL_webAuthorization();
        localTL_webAuthorization.readParams(paramAbstractSerializedData, paramBoolean);
      }
    }
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.hash = paramAbstractSerializedData.readInt64(paramBoolean);
      this.bot_id = paramAbstractSerializedData.readInt32(paramBoolean);
      this.domain = paramAbstractSerializedData.readString(paramBoolean);
      this.browser = paramAbstractSerializedData.readString(paramBoolean);
      this.platform = paramAbstractSerializedData.readString(paramBoolean);
      this.date_created = paramAbstractSerializedData.readInt32(paramBoolean);
      this.date_active = paramAbstractSerializedData.readInt32(paramBoolean);
      this.ip = paramAbstractSerializedData.readString(paramBoolean);
      this.region = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.hash);
      paramAbstractSerializedData.writeInt32(this.bot_id);
      paramAbstractSerializedData.writeString(this.domain);
      paramAbstractSerializedData.writeString(this.browser);
      paramAbstractSerializedData.writeString(this.platform);
      paramAbstractSerializedData.writeInt32(this.date_created);
      paramAbstractSerializedData.writeInt32(this.date_active);
      paramAbstractSerializedData.writeString(this.ip);
      paramAbstractSerializedData.writeString(this.region);
    }
  }
  
  public static class TL_webDocument
    extends TLRPC.WebDocument
  {
    public static int constructor = -971322408;
    public long access_hash;
    public int dc_id;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.url = paramAbstractSerializedData.readString(paramBoolean);
      this.access_hash = paramAbstractSerializedData.readInt64(paramBoolean);
      this.size = paramAbstractSerializedData.readInt32(paramBoolean);
      this.mime_type = paramAbstractSerializedData.readString(paramBoolean);
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      TLRPC.DocumentAttribute localDocumentAttribute;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else
      {
        int j = paramAbstractSerializedData.readInt32(paramBoolean);
        i = 0;
        if (i >= j) {
          break label125;
        }
        localDocumentAttribute = TLRPC.DocumentAttribute.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
        if (localDocumentAttribute != null) {
          break label109;
        }
      }
      for (;;)
      {
        return;
        label109:
        this.attributes.add(localDocumentAttribute);
        i++;
        break;
        label125:
        this.dc_id = paramAbstractSerializedData.readInt32(paramBoolean);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.url);
      paramAbstractSerializedData.writeInt64(this.access_hash);
      paramAbstractSerializedData.writeInt32(this.size);
      paramAbstractSerializedData.writeString(this.mime_type);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.attributes.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.DocumentAttribute)this.attributes.get(j)).serializeToStream(paramAbstractSerializedData);
      }
      paramAbstractSerializedData.writeInt32(this.dc_id);
    }
  }
  
  public static class TL_webDocumentNoProxy
    extends TLRPC.WebDocument
  {
    public static int constructor = -104284986;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.url = paramAbstractSerializedData.readString(paramBoolean);
      this.size = paramAbstractSerializedData.readInt32(paramBoolean);
      this.mime_type = paramAbstractSerializedData.readString(paramBoolean);
      int i = paramAbstractSerializedData.readInt32(paramBoolean);
      int j;
      if (i != 481674261)
      {
        if (paramBoolean) {
          throw new RuntimeException(String.format("wrong Vector magic, got %x", new Object[] { Integer.valueOf(i) }));
        }
      }
      else {
        j = paramAbstractSerializedData.readInt32(paramBoolean);
      }
      for (i = 0;; i++)
      {
        TLRPC.DocumentAttribute localDocumentAttribute;
        if (i < j)
        {
          localDocumentAttribute = TLRPC.DocumentAttribute.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
          if (localDocumentAttribute != null) {}
        }
        else
        {
          return;
        }
        this.attributes.add(localDocumentAttribute);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.url);
      paramAbstractSerializedData.writeInt32(this.size);
      paramAbstractSerializedData.writeString(this.mime_type);
      paramAbstractSerializedData.writeInt32(481674261);
      int i = this.attributes.size();
      paramAbstractSerializedData.writeInt32(i);
      for (int j = 0; j < i; j++) {
        ((TLRPC.DocumentAttribute)this.attributes.get(j)).serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_webPage
    extends TLRPC.WebPage
  {
    public static int constructor = NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      this.id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.url = paramAbstractSerializedData.readString(paramBoolean);
      this.display_url = paramAbstractSerializedData.readString(paramBoolean);
      this.hash = paramAbstractSerializedData.readInt32(paramBoolean);
      if ((this.flags & 0x1) != 0) {
        this.type = paramAbstractSerializedData.readString(paramBoolean);
      }
      if ((this.flags & 0x2) != 0) {
        this.site_name = paramAbstractSerializedData.readString(paramBoolean);
      }
      if ((this.flags & 0x4) != 0) {
        this.title = paramAbstractSerializedData.readString(paramBoolean);
      }
      if ((this.flags & 0x8) != 0) {
        this.description = paramAbstractSerializedData.readString(paramBoolean);
      }
      if ((this.flags & 0x10) != 0) {
        this.photo = TLRPC.Photo.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      }
      if ((this.flags & 0x20) != 0) {
        this.embed_url = paramAbstractSerializedData.readString(paramBoolean);
      }
      if ((this.flags & 0x20) != 0) {
        this.embed_type = paramAbstractSerializedData.readString(paramBoolean);
      }
      if ((this.flags & 0x40) != 0) {
        this.embed_width = paramAbstractSerializedData.readInt32(paramBoolean);
      }
      if ((this.flags & 0x40) != 0) {
        this.embed_height = paramAbstractSerializedData.readInt32(paramBoolean);
      }
      if ((this.flags & 0x80) != 0) {
        this.duration = paramAbstractSerializedData.readInt32(paramBoolean);
      }
      if ((this.flags & 0x100) != 0) {
        this.author = paramAbstractSerializedData.readString(paramBoolean);
      }
      if ((this.flags & 0x200) != 0) {
        this.document = TLRPC.Document.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      }
      if ((this.flags & 0x400) != 0) {
        this.cached_page = TLRPC.Page.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.flags);
      paramAbstractSerializedData.writeInt64(this.id);
      paramAbstractSerializedData.writeString(this.url);
      paramAbstractSerializedData.writeString(this.display_url);
      paramAbstractSerializedData.writeInt32(this.hash);
      if ((this.flags & 0x1) != 0) {
        paramAbstractSerializedData.writeString(this.type);
      }
      if ((this.flags & 0x2) != 0) {
        paramAbstractSerializedData.writeString(this.site_name);
      }
      if ((this.flags & 0x4) != 0) {
        paramAbstractSerializedData.writeString(this.title);
      }
      if ((this.flags & 0x8) != 0) {
        paramAbstractSerializedData.writeString(this.description);
      }
      if ((this.flags & 0x10) != 0) {
        this.photo.serializeToStream(paramAbstractSerializedData);
      }
      if ((this.flags & 0x20) != 0) {
        paramAbstractSerializedData.writeString(this.embed_url);
      }
      if ((this.flags & 0x20) != 0) {
        paramAbstractSerializedData.writeString(this.embed_type);
      }
      if ((this.flags & 0x40) != 0) {
        paramAbstractSerializedData.writeInt32(this.embed_width);
      }
      if ((this.flags & 0x40) != 0) {
        paramAbstractSerializedData.writeInt32(this.embed_height);
      }
      if ((this.flags & 0x80) != 0) {
        paramAbstractSerializedData.writeInt32(this.duration);
      }
      if ((this.flags & 0x100) != 0) {
        paramAbstractSerializedData.writeString(this.author);
      }
      if ((this.flags & 0x200) != 0) {
        this.document.serializeToStream(paramAbstractSerializedData);
      }
      if ((this.flags & 0x400) != 0) {
        this.cached_page.serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_webPageEmpty
    extends TLRPC.WebPage
  {
    public static int constructor = -350980120;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt64(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.id);
    }
  }
  
  public static class TL_webPageNotModified
    extends TLRPC.WebPage
  {
    public static int constructor = -NUM;
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
    }
  }
  
  public static class TL_webPagePending
    extends TLRPC.WebPage
  {
    public static int constructor = -981018084;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.date = paramAbstractSerializedData.readInt32(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt64(this.id);
      paramAbstractSerializedData.writeInt32(this.date);
    }
  }
  
  public static class TL_webPageUrlPending
    extends TLRPC.WebPage
  {
    public static int constructor = -736472729;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.url = paramAbstractSerializedData.readString(paramBoolean);
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeString(this.url);
    }
  }
  
  public static class TL_webPage_layer58
    extends TLRPC.TL_webPage
  {
    public static int constructor = -897446185;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      this.id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.url = paramAbstractSerializedData.readString(paramBoolean);
      this.display_url = paramAbstractSerializedData.readString(paramBoolean);
      if ((this.flags & 0x1) != 0) {
        this.type = paramAbstractSerializedData.readString(paramBoolean);
      }
      if ((this.flags & 0x2) != 0) {
        this.site_name = paramAbstractSerializedData.readString(paramBoolean);
      }
      if ((this.flags & 0x4) != 0) {
        this.title = paramAbstractSerializedData.readString(paramBoolean);
      }
      if ((this.flags & 0x8) != 0) {
        this.description = paramAbstractSerializedData.readString(paramBoolean);
      }
      if ((this.flags & 0x10) != 0) {
        this.photo = TLRPC.Photo.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      }
      if ((this.flags & 0x20) != 0) {
        this.embed_url = paramAbstractSerializedData.readString(paramBoolean);
      }
      if ((this.flags & 0x20) != 0) {
        this.embed_type = paramAbstractSerializedData.readString(paramBoolean);
      }
      if ((this.flags & 0x40) != 0) {
        this.embed_width = paramAbstractSerializedData.readInt32(paramBoolean);
      }
      if ((this.flags & 0x40) != 0) {
        this.embed_height = paramAbstractSerializedData.readInt32(paramBoolean);
      }
      if ((this.flags & 0x80) != 0) {
        this.duration = paramAbstractSerializedData.readInt32(paramBoolean);
      }
      if ((this.flags & 0x100) != 0) {
        this.author = paramAbstractSerializedData.readString(paramBoolean);
      }
      if ((this.flags & 0x200) != 0) {
        this.document = TLRPC.Document.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.flags);
      paramAbstractSerializedData.writeInt64(this.id);
      paramAbstractSerializedData.writeString(this.url);
      paramAbstractSerializedData.writeString(this.display_url);
      if ((this.flags & 0x1) != 0) {
        paramAbstractSerializedData.writeString(this.type);
      }
      if ((this.flags & 0x2) != 0) {
        paramAbstractSerializedData.writeString(this.site_name);
      }
      if ((this.flags & 0x4) != 0) {
        paramAbstractSerializedData.writeString(this.title);
      }
      if ((this.flags & 0x8) != 0) {
        paramAbstractSerializedData.writeString(this.description);
      }
      if ((this.flags & 0x10) != 0) {
        this.photo.serializeToStream(paramAbstractSerializedData);
      }
      if ((this.flags & 0x20) != 0) {
        paramAbstractSerializedData.writeString(this.embed_url);
      }
      if ((this.flags & 0x20) != 0) {
        paramAbstractSerializedData.writeString(this.embed_type);
      }
      if ((this.flags & 0x40) != 0) {
        paramAbstractSerializedData.writeInt32(this.embed_width);
      }
      if ((this.flags & 0x40) != 0) {
        paramAbstractSerializedData.writeInt32(this.embed_height);
      }
      if ((this.flags & 0x80) != 0) {
        paramAbstractSerializedData.writeInt32(this.duration);
      }
      if ((this.flags & 0x100) != 0) {
        paramAbstractSerializedData.writeString(this.author);
      }
      if ((this.flags & 0x200) != 0) {
        this.document.serializeToStream(paramAbstractSerializedData);
      }
    }
  }
  
  public static class TL_webPage_old
    extends TLRPC.TL_webPage
  {
    public static int constructor = -NUM;
    
    public void readParams(AbstractSerializedData paramAbstractSerializedData, boolean paramBoolean)
    {
      this.flags = paramAbstractSerializedData.readInt32(paramBoolean);
      this.id = paramAbstractSerializedData.readInt64(paramBoolean);
      this.url = paramAbstractSerializedData.readString(paramBoolean);
      this.display_url = paramAbstractSerializedData.readString(paramBoolean);
      if ((this.flags & 0x1) != 0) {
        this.type = paramAbstractSerializedData.readString(paramBoolean);
      }
      if ((this.flags & 0x2) != 0) {
        this.site_name = paramAbstractSerializedData.readString(paramBoolean);
      }
      if ((this.flags & 0x4) != 0) {
        this.title = paramAbstractSerializedData.readString(paramBoolean);
      }
      if ((this.flags & 0x8) != 0) {
        this.description = paramAbstractSerializedData.readString(paramBoolean);
      }
      if ((this.flags & 0x10) != 0) {
        this.photo = TLRPC.Photo.TLdeserialize(paramAbstractSerializedData, paramAbstractSerializedData.readInt32(paramBoolean), paramBoolean);
      }
      if ((this.flags & 0x20) != 0) {
        this.embed_url = paramAbstractSerializedData.readString(paramBoolean);
      }
      if ((this.flags & 0x20) != 0) {
        this.embed_type = paramAbstractSerializedData.readString(paramBoolean);
      }
      if ((this.flags & 0x40) != 0) {
        this.embed_width = paramAbstractSerializedData.readInt32(paramBoolean);
      }
      if ((this.flags & 0x40) != 0) {
        this.embed_height = paramAbstractSerializedData.readInt32(paramBoolean);
      }
      if ((this.flags & 0x80) != 0) {
        this.duration = paramAbstractSerializedData.readInt32(paramBoolean);
      }
      if ((this.flags & 0x100) != 0) {
        this.author = paramAbstractSerializedData.readString(paramBoolean);
      }
    }
    
    public void serializeToStream(AbstractSerializedData paramAbstractSerializedData)
    {
      paramAbstractSerializedData.writeInt32(constructor);
      paramAbstractSerializedData.writeInt32(this.flags);
      paramAbstractSerializedData.writeInt64(this.id);
      paramAbstractSerializedData.writeString(this.url);
      paramAbstractSerializedData.writeString(this.display_url);
      if ((this.flags & 0x1) != 0) {
        paramAbstractSerializedData.writeString(this.type);
      }
      if ((this.flags & 0x2) != 0) {
        paramAbstractSerializedData.writeString(this.site_name);
      }
      if ((this.flags & 0x4) != 0) {
        paramAbstractSerializedData.writeString(this.title);
      }
      if ((this.flags & 0x8) != 0) {
        paramAbstractSerializedData.writeString(this.description);
      }
      if ((this.flags & 0x10) != 0) {
        this.photo.serializeToStream(paramAbstractSerializedData);
      }
      if ((this.flags & 0x20) != 0) {
        paramAbstractSerializedData.writeString(this.embed_url);
      }
      if ((this.flags & 0x20) != 0) {
        paramAbstractSerializedData.writeString(this.embed_type);
      }
      if ((this.flags & 0x40) != 0) {
        paramAbstractSerializedData.writeInt32(this.embed_width);
      }
      if ((this.flags & 0x40) != 0) {
        paramAbstractSerializedData.writeInt32(this.embed_height);
      }
      if ((this.flags & 0x80) != 0) {
        paramAbstractSerializedData.writeInt32(this.duration);
      }
      if ((this.flags & 0x100) != 0) {
        paramAbstractSerializedData.writeString(this.author);
      }
    }
  }
  
  public static abstract class TopPeerCategory
    extends TLObject
  {
    public static TopPeerCategory TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in TopPeerCategory", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_topPeerCategoryCorrespondents();
        continue;
        localObject = new TLRPC.TL_topPeerCategoryGroups();
        continue;
        localObject = new TLRPC.TL_topPeerCategoryBotsInline();
        continue;
        localObject = new TLRPC.TL_topPeerCategoryChannels();
        continue;
        localObject = new TLRPC.TL_topPeerCategoryPhoneCalls();
        continue;
        localObject = new TLRPC.TL_topPeerCategoryBotsPM();
      }
      if (localObject != null) {
        ((TopPeerCategory)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (TopPeerCategory)localObject;
    }
  }
  
  public static abstract class Update
    extends TLObject
  {
    public static Update TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in Update", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_updateDeleteMessages();
        continue;
        localObject = new TLRPC.TL_updateReadFeaturedStickers();
        continue;
        localObject = new TLRPC.TL_updateChatAdmins();
        continue;
        localObject = new TLRPC.TL_updateEncryptedChatTyping();
        continue;
        localObject = new TLRPC.TL_updateNewChannelMessage();
        continue;
        localObject = new TLRPC.TL_updateReadHistoryOutbox();
        continue;
        localObject = new TLRPC.TL_updateDialogPinned();
        continue;
        localObject = new TLRPC.TL_updateUserPhone();
        continue;
        localObject = new TLRPC.TL_updateMessageID();
        continue;
        localObject = new TLRPC.TL_updateGroupCallParticipant();
        continue;
        localObject = new TLRPC.TL_updateReadChannelOutbox();
        continue;
        localObject = new TLRPC.TL_updateStickerSets();
        continue;
        localObject = new TLRPC.TL_updateNewMessage();
        continue;
        localObject = new TLRPC.TL_updateNewEncryptedMessage();
        continue;
        localObject = new TLRPC.TL_updateUserStatus();
        continue;
        localObject = new TLRPC.TL_updateChannelMessageViews();
        continue;
        localObject = new TLRPC.TL_updateNotifySettings();
        continue;
        localObject = new TLRPC.TL_updateContactRegistered();
        continue;
        localObject = new TLRPC.TL_updateChatParticipantDelete();
        continue;
        localObject = new TLRPC.TL_updateEditMessage();
        continue;
        localObject = new TLRPC.TL_updateWebPage();
        continue;
        localObject = new TLRPC.TL_updateFavedStickers();
        continue;
        localObject = new TLRPC.TL_updateChatParticipantAdd();
        continue;
        localObject = new TLRPC.TL_updateChatUserTyping();
        continue;
        localObject = new TLRPC.TL_updateEncryption();
        continue;
        localObject = new TLRPC.TL_updateGroupCall();
        continue;
        localObject = new TLRPC.TL_updateChannelTooLong();
        continue;
        localObject = new TLRPC.TL_updateUserTyping();
        continue;
        localObject = new TLRPC.TL_updateServiceNotification();
        continue;
        localObject = new TLRPC.TL_updateChannelPinnedMessage();
        continue;
        localObject = new TLRPC.TL_updateLangPack();
        continue;
        localObject = new TLRPC.TL_updateChatParticipantAdmin();
        continue;
        localObject = new TLRPC.TL_updateChannelReadMessagesContents();
        continue;
        localObject = new TLRPC.TL_updatePrivacy();
        continue;
        localObject = new TLRPC.TL_updateConfig();
        continue;
        localObject = new TLRPC.TL_updateDraftMessage();
        continue;
        localObject = new TLRPC.TL_updateUserName();
        continue;
        localObject = new TLRPC.TL_updateChannelAvailableMessages();
        continue;
        localObject = new TLRPC.TL_updatePhoneCall();
        continue;
        localObject = new TLRPC.TL_updatePinnedDialogs();
        continue;
        localObject = new TLRPC.TL_updateRecentStickers();
        continue;
        localObject = new TLRPC.TL_updateReadHistoryInbox();
        continue;
        localObject = new TLRPC.TL_updateContactLink();
        continue;
        localObject = new TLRPC.TL_updateSavedGifs();
        continue;
        localObject = new TLRPC.TL_updateContactsReset();
        continue;
        localObject = new TLRPC.TL_updateChannel();
        continue;
        localObject = new TLRPC.TL_updateChannelWebPage();
        continue;
        localObject = new TLRPC.TL_updateDeleteChannelMessages();
        continue;
        localObject = new TLRPC.TL_updateUserPhoto();
        continue;
        localObject = new TLRPC.TL_updateDcOptions();
        continue;
        localObject = new TLRPC.TL_updateEditChannelMessage();
        continue;
        localObject = new TLRPC.TL_updateUserBlocked();
        continue;
        localObject = new TLRPC.TL_updateNewStickerSet();
        continue;
        localObject = new TLRPC.TL_updateLangPackTooLong();
        continue;
        localObject = new TLRPC.TL_updateEncryptedMessagesRead();
        continue;
        localObject = new TLRPC.TL_updateStickerSetsOrder();
        continue;
        localObject = new TLRPC.TL_updateReadChannelInbox();
        continue;
        localObject = new TLRPC.TL_updateReadMessagesContents();
        continue;
        localObject = new TLRPC.TL_updateChatParticipants();
      }
      if (localObject != null) {
        ((Update)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (Update)localObject;
    }
  }
  
  public static abstract class Updates
    extends TLObject
  {
    public int chat_id;
    public ArrayList<TLRPC.Chat> chats = new ArrayList();
    public int date;
    public ArrayList<TLRPC.MessageEntity> entities = new ArrayList();
    public int flags;
    public int from_id;
    public TLRPC.MessageFwdHeader fwd_from;
    public int id;
    public TLRPC.MessageMedia media;
    public boolean media_unread;
    public boolean mentioned;
    public String message;
    public boolean out;
    public int pts;
    public int pts_count;
    public int reply_to_msg_id;
    public int seq;
    public int seq_start;
    public boolean silent;
    public TLRPC.Update update;
    public ArrayList<TLRPC.Update> updates = new ArrayList();
    public int user_id;
    public ArrayList<TLRPC.User> users = new ArrayList();
    public int via_bot_id;
    
    public static Updates TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in Updates", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_updates();
        continue;
        localObject = new TLRPC.TL_updateShortMessage();
        continue;
        localObject = new TLRPC.TL_updateShortSentMessage();
        continue;
        localObject = new TLRPC.TL_updateShort();
        continue;
        localObject = new TLRPC.TL_updateShortChatMessage();
        continue;
        localObject = new TLRPC.TL_updatesCombined();
        continue;
        localObject = new TLRPC.TL_updatesTooLong();
      }
      if (localObject != null) {
        ((Updates)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (Updates)localObject;
    }
  }
  
  public static abstract class User
    extends TLObject
  {
    public long access_hash;
    public boolean bot;
    public boolean bot_chat_history;
    public int bot_info_version;
    public boolean bot_inline_geo;
    public String bot_inline_placeholder;
    public boolean bot_nochats;
    public boolean contact;
    public boolean deleted;
    public boolean explicit_content;
    public String first_name;
    public int flags;
    public int id;
    public boolean inactive;
    public String lang_code;
    public String last_name;
    public boolean min;
    public boolean mutual_contact;
    public String phone;
    public TLRPC.UserProfilePhoto photo;
    public boolean restricted;
    public String restriction_reason;
    public boolean self;
    public TLRPC.UserStatus status;
    public String username;
    public boolean verified;
    
    public static User TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in User", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_userContact_old2();
        continue;
        localObject = new TLRPC.TL_userContact_old();
        continue;
        localObject = new TLRPC.TL_user();
        continue;
        localObject = new TLRPC.TL_userSelf_old();
        continue;
        localObject = new TLRPC.TL_userSelf_old3();
        continue;
        localObject = new TLRPC.TL_userDeleted_old2();
        continue;
        localObject = new TLRPC.TL_userEmpty();
        continue;
        localObject = new TLRPC.TL_userRequest_old();
        continue;
        localObject = new TLRPC.TL_userForeign_old();
        continue;
        localObject = new TLRPC.TL_userForeign_old2();
        continue;
        localObject = new TLRPC.TL_userRequest_old2();
        continue;
        localObject = new TLRPC.TL_userDeleted_old();
        continue;
        localObject = new TLRPC.TL_user_layer65();
        continue;
        localObject = new TLRPC.TL_user_old();
        continue;
        localObject = new TLRPC.TL_userSelf_old2();
      }
      if (localObject != null) {
        ((User)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (User)localObject;
    }
  }
  
  public static abstract class UserProfilePhoto
    extends TLObject
  {
    public TLRPC.FileLocation photo_big;
    public long photo_id;
    public TLRPC.FileLocation photo_small;
    
    public static UserProfilePhoto TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in UserProfilePhoto", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_userProfilePhotoEmpty();
        continue;
        localObject = new TLRPC.TL_userProfilePhoto();
        continue;
        localObject = new TLRPC.TL_userProfilePhoto_old();
      }
      if (localObject != null) {
        ((UserProfilePhoto)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (UserProfilePhoto)localObject;
    }
  }
  
  public static abstract class UserStatus
    extends TLObject
  {
    public int expires;
    
    public static UserStatus TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in UserStatus", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_userStatusOffline();
        continue;
        localObject = new TLRPC.TL_userStatusLastWeek();
        continue;
        localObject = new TLRPC.TL_userStatusEmpty();
        continue;
        localObject = new TLRPC.TL_userStatusLastMonth();
        continue;
        localObject = new TLRPC.TL_userStatusOnline();
        continue;
        localObject = new TLRPC.TL_userStatusRecently();
      }
      if (localObject != null) {
        ((UserStatus)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (UserStatus)localObject;
    }
  }
  
  public static class Vector
    extends TLObject
  {
    public static int constructor = 481674261;
    public ArrayList<Object> objects = new ArrayList();
  }
  
  public static abstract class Video
    extends TLObject
  {
    public long access_hash;
    public String caption;
    public int date;
    public int dc_id;
    public int duration;
    public int h;
    public long id;
    public byte[] iv;
    public byte[] key;
    public String mime_type;
    public int size;
    public TLRPC.PhotoSize thumb;
    public int user_id;
    public int w;
    
    public static Video TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in Video", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_video_old3();
        continue;
        localObject = new TLRPC.TL_video_layer45();
        continue;
        localObject = new TLRPC.TL_videoEncrypted();
        continue;
        localObject = new TLRPC.TL_video_old();
        continue;
        localObject = new TLRPC.TL_video_old2();
        continue;
        localObject = new TLRPC.TL_videoEmpty_layer45();
      }
      if (localObject != null) {
        ((Video)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (Video)localObject;
    }
  }
  
  public static abstract class WallPaper
    extends TLObject
  {
    public int bg_color;
    public int color;
    public int id;
    public ArrayList<TLRPC.PhotoSize> sizes = new ArrayList();
    public String title;
    
    public static WallPaper TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in WallPaper", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_wallPaper();
        continue;
        localObject = new TLRPC.TL_wallPaperSolid();
      }
      if (localObject != null) {
        ((WallPaper)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (WallPaper)localObject;
    }
  }
  
  public static abstract class WebDocument
    extends TLObject
  {
    public ArrayList<TLRPC.DocumentAttribute> attributes = new ArrayList();
    public String mime_type;
    public int size;
    public String url;
    
    public static WebDocument TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in WebDocument", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_webDocumentNoProxy();
        continue;
        localObject = new TLRPC.TL_webDocument();
      }
      if (localObject != null) {
        ((WebDocument)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (WebDocument)localObject;
    }
  }
  
  public static abstract class WebPage
    extends TLObject
  {
    public String author;
    public TLRPC.Page cached_page;
    public int date;
    public String description;
    public String display_url;
    public TLRPC.Document document;
    public int duration;
    public int embed_height;
    public String embed_type;
    public String embed_url;
    public int embed_width;
    public int flags;
    public int hash;
    public long id;
    public TLRPC.Photo photo;
    public String site_name;
    public String title;
    public String type;
    public String url;
    
    public static WebPage TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in WebPage", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_webPage();
        continue;
        localObject = new TLRPC.TL_webPage_old();
        continue;
        localObject = new TLRPC.TL_webPageEmpty();
        continue;
        localObject = new TLRPC.TL_webPageUrlPending();
        continue;
        localObject = new TLRPC.TL_webPagePending();
        continue;
        localObject = new TLRPC.TL_webPageNotModified();
        continue;
        localObject = new TLRPC.TL_webPage_layer58();
      }
      if (localObject != null) {
        ((WebPage)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (WebPage)localObject;
    }
  }
  
  public static abstract class account_Password
    extends TLObject
  {
    public byte[] current_salt;
    public String email_unconfirmed_pattern;
    public boolean has_recovery;
    public String hint;
    public byte[] new_salt;
    
    public static account_Password TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in account_Password", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_account_password();
        continue;
        localObject = new TLRPC.TL_account_noPassword();
      }
      if (localObject != null) {
        ((account_Password)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (account_Password)localObject;
    }
  }
  
  public static abstract class auth_CodeType
    extends TLObject
  {
    public static auth_CodeType TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in auth_CodeType", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_auth_codeTypeSms();
        continue;
        localObject = new TLRPC.TL_auth_codeTypeCall();
        continue;
        localObject = new TLRPC.TL_auth_codeTypeFlashCall();
      }
      if (localObject != null) {
        ((auth_CodeType)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (auth_CodeType)localObject;
    }
  }
  
  public static abstract class auth_SentCodeType
    extends TLObject
  {
    public int length;
    public String pattern;
    
    public static auth_SentCodeType TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in auth_SentCodeType", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_auth_sentCodeTypeApp();
        continue;
        localObject = new TLRPC.TL_auth_sentCodeTypeCall();
        continue;
        localObject = new TLRPC.TL_auth_sentCodeTypeFlashCall();
        continue;
        localObject = new TLRPC.TL_auth_sentCodeTypeSms();
      }
      if (localObject != null) {
        ((auth_SentCodeType)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (auth_SentCodeType)localObject;
    }
  }
  
  public static abstract class channels_ChannelParticipants
    extends TLObject
  {
    public int count;
    public ArrayList<TLRPC.ChannelParticipant> participants = new ArrayList();
    public ArrayList<TLRPC.User> users = new ArrayList();
    
    public static channels_ChannelParticipants TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in channels_ChannelParticipants", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_channels_channelParticipants();
        continue;
        localObject = new TLRPC.TL_channels_channelParticipantsNotModified();
      }
      if (localObject != null) {
        ((channels_ChannelParticipants)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (channels_ChannelParticipants)localObject;
    }
  }
  
  public static abstract class contacts_Blocked
    extends TLObject
  {
    public ArrayList<TLRPC.TL_contactBlocked> blocked = new ArrayList();
    public int count;
    public ArrayList<TLRPC.User> users = new ArrayList();
    
    public static contacts_Blocked TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in contacts_Blocked", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_contacts_blocked();
        continue;
        localObject = new TLRPC.TL_contacts_blockedSlice();
      }
      if (localObject != null) {
        ((contacts_Blocked)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (contacts_Blocked)localObject;
    }
  }
  
  public static abstract class contacts_Contacts
    extends TLObject
  {
    public ArrayList<TLRPC.TL_contact> contacts = new ArrayList();
    public int saved_count;
    public ArrayList<TLRPC.User> users = new ArrayList();
    
    public static contacts_Contacts TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in contacts_Contacts", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_contacts_contactsNotModified();
        continue;
        localObject = new TLRPC.TL_contacts_contacts();
      }
      if (localObject != null) {
        ((contacts_Contacts)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (contacts_Contacts)localObject;
    }
  }
  
  public static abstract class contacts_TopPeers
    extends TLObject
  {
    public ArrayList<TLRPC.TL_topPeerCategoryPeers> categories = new ArrayList();
    public ArrayList<TLRPC.Chat> chats = new ArrayList();
    public ArrayList<TLRPC.User> users = new ArrayList();
    
    public static contacts_TopPeers TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in contacts_TopPeers", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_contacts_topPeers();
        continue;
        localObject = new TLRPC.TL_contacts_topPeersNotModified();
      }
      if (localObject != null) {
        ((contacts_TopPeers)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (contacts_TopPeers)localObject;
    }
  }
  
  public static abstract class help_AppUpdate
    extends TLObject
  {
    public boolean critical;
    public int id;
    public String text;
    public String url;
    
    public static help_AppUpdate TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in help_AppUpdate", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_help_appUpdate();
        continue;
        localObject = new TLRPC.TL_help_noAppUpdate();
      }
      if (localObject != null) {
        ((help_AppUpdate)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (help_AppUpdate)localObject;
    }
  }
  
  public static abstract class messages_AllStickers
    extends TLObject
  {
    public ArrayList<TLRPC.Document> documents = new ArrayList();
    public String hash;
    public ArrayList<TLRPC.TL_stickerPack> packs = new ArrayList();
    public ArrayList<TLRPC.StickerSet> sets = new ArrayList();
    
    public static messages_AllStickers TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in messages_AllStickers", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_messages_allStickers();
        continue;
        localObject = new TLRPC.TL_messages_allStickersNotModified();
      }
      if (localObject != null) {
        ((messages_AllStickers)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (messages_AllStickers)localObject;
    }
  }
  
  public static abstract class messages_BotResults
    extends TLObject
  {
    public int cache_time;
    public int flags;
    public boolean gallery;
    public String next_offset;
    public long query_id;
    public ArrayList<TLRPC.BotInlineResult> results = new ArrayList();
    public TLRPC.TL_inlineBotSwitchPM switch_pm;
    public ArrayList<TLRPC.User> users = new ArrayList();
    
    public static messages_BotResults TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in messages_BotResults", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_messages_botResults_layer71();
        continue;
        localObject = new TLRPC.TL_messages_botResults();
      }
      if (localObject != null) {
        ((messages_BotResults)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (messages_BotResults)localObject;
    }
  }
  
  public static abstract class messages_Chats
    extends TLObject
  {
    public ArrayList<TLRPC.Chat> chats = new ArrayList();
    public int count;
    
    public static messages_Chats TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in messages_Chats", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_messages_chats();
        continue;
        localObject = new TLRPC.TL_messages_chatsSlice();
      }
      if (localObject != null) {
        ((messages_Chats)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (messages_Chats)localObject;
    }
  }
  
  public static abstract class messages_DhConfig
    extends TLObject
  {
    public int g;
    public byte[] p;
    public byte[] random;
    public int version;
    
    public static messages_DhConfig TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in messages_DhConfig", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_messages_dhConfigNotModified();
        continue;
        localObject = new TLRPC.TL_messages_dhConfig();
      }
      if (localObject != null) {
        ((messages_DhConfig)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (messages_DhConfig)localObject;
    }
  }
  
  public static abstract class messages_Dialogs
    extends TLObject
  {
    public ArrayList<TLRPC.Chat> chats = new ArrayList();
    public int count;
    public ArrayList<TLRPC.TL_dialog> dialogs = new ArrayList();
    public ArrayList<TLRPC.Message> messages = new ArrayList();
    public ArrayList<TLRPC.User> users = new ArrayList();
    
    public static messages_Dialogs TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in messages_Dialogs", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_messages_dialogs();
        continue;
        localObject = new TLRPC.TL_messages_dialogsSlice();
      }
      if (localObject != null) {
        ((messages_Dialogs)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (messages_Dialogs)localObject;
    }
  }
  
  public static abstract class messages_FavedStickers
    extends TLObject
  {
    public int hash;
    public ArrayList<TLRPC.TL_stickerPack> packs = new ArrayList();
    public ArrayList<TLRPC.Document> stickers = new ArrayList();
    
    public static messages_FavedStickers TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in messages_FavedStickers", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_messages_favedStickersNotModified();
        continue;
        localObject = new TLRPC.TL_messages_favedStickers();
      }
      if (localObject != null) {
        ((messages_FavedStickers)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (messages_FavedStickers)localObject;
    }
  }
  
  public static abstract class messages_FeaturedStickers
    extends TLObject
  {
    public int hash;
    public ArrayList<TLRPC.StickerSetCovered> sets = new ArrayList();
    public ArrayList<Long> unread = new ArrayList();
    
    public static messages_FeaturedStickers TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in messages_FeaturedStickers", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_messages_featuredStickers();
        continue;
        localObject = new TLRPC.TL_messages_featuredStickersNotModified();
      }
      if (localObject != null) {
        ((messages_FeaturedStickers)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (messages_FeaturedStickers)localObject;
    }
  }
  
  public static abstract class messages_FoundStickerSets
    extends TLObject
  {
    public static messages_FoundStickerSets TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in messages_FoundStickerSets", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_messages_foundStickerSetsNotModified();
        continue;
        localObject = new TLRPC.TL_messages_foundStickerSets();
      }
      if (localObject != null) {
        ((messages_FoundStickerSets)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (messages_FoundStickerSets)localObject;
    }
  }
  
  public static abstract class messages_Messages
    extends TLObject
  {
    public ArrayList<TLRPC.Chat> chats = new ArrayList();
    public int count;
    public int flags;
    public ArrayList<TLRPC.Message> messages = new ArrayList();
    public int pts;
    public ArrayList<TLRPC.User> users = new ArrayList();
    
    public static messages_Messages TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in messages_Messages", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_messages_messages();
        continue;
        localObject = new TLRPC.TL_messages_channelMessages();
        continue;
        localObject = new TLRPC.TL_messages_messagesSlice();
      }
      if (localObject != null) {
        ((messages_Messages)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (messages_Messages)localObject;
    }
  }
  
  public static abstract class messages_RecentStickers
    extends TLObject
  {
    public static messages_RecentStickers TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in messages_RecentStickers", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_messages_recentStickers();
        continue;
        localObject = new TLRPC.TL_messages_recentStickersNotModified();
      }
      if (localObject != null) {
        ((messages_RecentStickers)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (messages_RecentStickers)localObject;
    }
  }
  
  public static abstract class messages_SavedGifs
    extends TLObject
  {
    public ArrayList<TLRPC.Document> gifs = new ArrayList();
    public int hash;
    
    public static messages_SavedGifs TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in messages_SavedGifs", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_messages_savedGifsNotModified();
        continue;
        localObject = new TLRPC.TL_messages_savedGifs();
      }
      if (localObject != null) {
        ((messages_SavedGifs)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (messages_SavedGifs)localObject;
    }
  }
  
  public static abstract class messages_SentEncryptedMessage
    extends TLObject
  {
    public int date;
    public TLRPC.EncryptedFile file;
    
    public static messages_SentEncryptedMessage TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in messages_SentEncryptedMessage", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_messages_sentEncryptedMessage();
        continue;
        localObject = new TLRPC.TL_messages_sentEncryptedFile();
      }
      if (localObject != null) {
        ((messages_SentEncryptedMessage)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (messages_SentEncryptedMessage)localObject;
    }
  }
  
  public static abstract class messages_StickerSetInstallResult
    extends TLObject
  {
    public ArrayList<TLRPC.StickerSetCovered> sets = new ArrayList();
    
    public static messages_StickerSetInstallResult TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in messages_StickerSetInstallResult", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_messages_stickerSetInstallResultSuccess();
        continue;
        localObject = new TLRPC.TL_messages_stickerSetInstallResultArchive();
      }
      if (localObject != null) {
        ((messages_StickerSetInstallResult)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (messages_StickerSetInstallResult)localObject;
    }
  }
  
  public static abstract class messages_Stickers
    extends TLObject
  {
    public String hash;
    public ArrayList<TLRPC.Document> stickers = new ArrayList();
    
    public static messages_Stickers TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in messages_Stickers", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_messages_stickersNotModified();
        continue;
        localObject = new TLRPC.TL_messages_stickers();
      }
      if (localObject != null) {
        ((messages_Stickers)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (messages_Stickers)localObject;
    }
  }
  
  public static abstract class payments_PaymentResult
    extends TLObject
  {
    public TLRPC.Updates updates;
    public String url;
    
    public static payments_PaymentResult TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in payments_PaymentResult", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_payments_paymentResult();
        continue;
        localObject = new TLRPC.TL_payments_paymentVerficationNeeded();
      }
      if (localObject != null) {
        ((payments_PaymentResult)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (payments_PaymentResult)localObject;
    }
  }
  
  public static abstract class photos_Photos
    extends TLObject
  {
    public int count;
    public ArrayList<TLRPC.Photo> photos = new ArrayList();
    public ArrayList<TLRPC.User> users = new ArrayList();
    
    public static photos_Photos TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in photos_Photos", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_photos_photos();
        continue;
        localObject = new TLRPC.TL_photos_photosSlice();
      }
      if (localObject != null) {
        ((photos_Photos)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (photos_Photos)localObject;
    }
  }
  
  public static abstract class storage_FileType
    extends TLObject
  {
    public static storage_FileType TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in storage_FileType", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_storage_fileUnknown();
        continue;
        localObject = new TLRPC.TL_storage_fileMp4();
        continue;
        localObject = new TLRPC.TL_storage_fileWebp();
        continue;
        localObject = new TLRPC.TL_storage_filePng();
        continue;
        localObject = new TLRPC.TL_storage_fileGif();
        continue;
        localObject = new TLRPC.TL_storage_filePdf();
        continue;
        localObject = new TLRPC.TL_storage_fileMp3();
        continue;
        localObject = new TLRPC.TL_storage_fileJpeg();
        continue;
        localObject = new TLRPC.TL_storage_fileMov();
        continue;
        localObject = new TLRPC.TL_storage_filePartial();
      }
      if (localObject != null) {
        ((storage_FileType)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (storage_FileType)localObject;
    }
  }
  
  public static abstract class updates_ChannelDifference
    extends TLObject
  {
    public ArrayList<TLRPC.Chat> chats = new ArrayList();
    public int flags;
    public boolean isFinal;
    public ArrayList<TLRPC.Message> messages = new ArrayList();
    public ArrayList<TLRPC.Message> new_messages = new ArrayList();
    public ArrayList<TLRPC.Update> other_updates = new ArrayList();
    public int pts;
    public int read_inbox_max_id;
    public int read_outbox_max_id;
    public int timeout;
    public int top_message;
    public int unread_count;
    public int unread_mentions_count;
    public ArrayList<TLRPC.User> users = new ArrayList();
    
    public static updates_ChannelDifference TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in updates_ChannelDifference", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_updates_channelDifferenceEmpty();
        continue;
        localObject = new TLRPC.TL_updates_channelDifference();
        continue;
        localObject = new TLRPC.TL_updates_channelDifferenceTooLong();
      }
      if (localObject != null) {
        ((updates_ChannelDifference)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (updates_ChannelDifference)localObject;
    }
  }
  
  public static abstract class updates_Difference
    extends TLObject
  {
    public ArrayList<TLRPC.Chat> chats = new ArrayList();
    public int date;
    public TLRPC.TL_updates_state intermediate_state;
    public ArrayList<TLRPC.EncryptedMessage> new_encrypted_messages = new ArrayList();
    public ArrayList<TLRPC.Message> new_messages = new ArrayList();
    public ArrayList<TLRPC.Update> other_updates = new ArrayList();
    public int pts;
    public int seq;
    public TLRPC.TL_updates_state state;
    public ArrayList<TLRPC.User> users = new ArrayList();
    
    public static updates_Difference TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in updates_Difference", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_updates_difference();
        continue;
        localObject = new TLRPC.TL_updates_differenceSlice();
        continue;
        localObject = new TLRPC.TL_updates_differenceTooLong();
        continue;
        localObject = new TLRPC.TL_updates_differenceEmpty();
      }
      if (localObject != null) {
        ((updates_Difference)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (updates_Difference)localObject;
    }
  }
  
  public static abstract class upload_CdnFile
    extends TLObject
  {
    public NativeByteBuffer bytes;
    public byte[] request_token;
    
    public static upload_CdnFile TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in upload_CdnFile", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_upload_cdnFile();
        continue;
        localObject = new TLRPC.TL_upload_cdnFileReuploadNeeded();
      }
      if (localObject != null) {
        ((upload_CdnFile)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (upload_CdnFile)localObject;
    }
  }
  
  public static abstract class upload_File
    extends TLObject
  {
    public NativeByteBuffer bytes;
    public int dc_id;
    public byte[] encryption_iv;
    public byte[] encryption_key;
    public ArrayList<TLRPC.TL_fileHash> file_hashes = new ArrayList();
    public byte[] file_token;
    public int mtime;
    public TLRPC.storage_FileType type;
    
    public static upload_File TLdeserialize(AbstractSerializedData paramAbstractSerializedData, int paramInt, boolean paramBoolean)
    {
      Object localObject = null;
      switch (paramInt)
      {
      }
      while ((localObject == null) && (paramBoolean))
      {
        throw new RuntimeException(String.format("can't parse magic %x in upload_File", new Object[] { Integer.valueOf(paramInt) }));
        localObject = new TLRPC.TL_upload_file();
        continue;
        localObject = new TLRPC.TL_upload_fileCdnRedirect();
      }
      if (localObject != null) {
        ((upload_File)localObject).readParams(paramAbstractSerializedData, paramBoolean);
      }
      return (upload_File)localObject;
    }
  }
}


/* Location:              /home/fabian/Escritorio/Proyectos/Android/Dev/jardecompiler/TMessagesProj-fat-debug.jar!/org/telegram/tgnet/TLRPC.class
 * Java compiler version: 6 (50.0)
 * JD-Core Version:       0.7.1-SNAPSHOT-20140817
 */